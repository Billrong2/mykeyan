{"UNKNOWN to If":[{"Line": "=>5", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (m == 0) { java.lang.System.arraycopy(nums2, 0, nums1, 0, n); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/6395/buggy-version/src.easy.MergeSortedArraySolution.java", "BodyUseAPI": [], "Fixed commit": "de849a36a7a39eecf48a1fae5c7fb2cf6a4ec2b1", "Url": "https://api.github.com/repos/guangleiw/leetcode", "Date": "2016-09-07T06:02:13Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((elComments) != null) && (elComments.hasParentElement())) { elComments.getParentElement().replaceChild(elCommentsPlaceholder, elComments); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/5088/buggy-version/src.main.java.com.willshex.blogwt.client.page.blog.PostDetailPage.java", "BodyUseAPI": ["com.google.gwt.dom.client.Element.getParentElement()", "elComments.getParentElement().replaceChild(com.google.gwt.dom.client.Element,com.google.gwt.dom.client.Element)"], "Fixed commit": "0ceec70d39b6afa5c0473df2b92cfc1435eb5d33", "Url": "https://api.github.com/repos/billy1380/blogwt", "Date": "2015-07-30T11:13:26Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((elComments) == null) { elComments = com.google.gwt.dom.client.Document.get().getElementById(\"disqus_thread\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/5088/buggy-version/src.main.java.com.willshex.blogwt.client.page.blog.PostDetailPage.java", "BodyUseAPI": [], "Fixed commit": "0ceec70d39b6afa5c0473df2b92cfc1435eb5d33", "Url": "https://api.github.com/repos/billy1380/blogwt", "Date": "2015-07-30T11:13:26Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (elCommentsPlaceholder.hasParentElement()) { elCommentsPlaceholder.getParentElement().replaceChild(elComments, elCommentsPlaceholder); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/5088/buggy-version/src.main.java.com.willshex.blogwt.client.page.blog.PostDetailPage.java", "BodyUseAPI": ["com.google.gwt.dom.client.Element.getParentElement()", "elCommentsPlaceholder.getParentElement().replaceChild(com.google.gwt.dom.client.Element,com.google.gwt.dom.client.Element)"], "Fixed commit": "0ceec70d39b6afa5c0473df2b92cfc1435eb5d33", "Url": "https://api.github.com/repos/billy1380/blogwt", "Date": "2015-07-30T11:13:26Z"},
{"Line": "=>397", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.hp.hpl.jena.query.QueryFactory.create(feature.getQuery())", "com.hp.hpl.jena.query.ResultSet.nextSolution()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((qsol.getLiteral(query.getResultVars().get(i)).getDatatypeURI()) != null) { if (qsol.get(query.getResultVars().get(i).toString()).isLiteral()) { triple.setObjectDataType(qsol.getLiteral(query.getResultVars().get(i)).getDatatypeURI()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/8879/buggy-version/lod4wfs.src.main.java.de.ifgi.lod4wfs.factory.FactoryFDAFeatures.java", "BodyUseAPI": ["com.hp.hpl.jena.query.Query.getResultVars()", "qsol.get(query.getResultVars().get(i).toString()).isLiteral()", "qsol.getLiteral(query.getResultVars().get(i)).getDatatypeURI()", "com.hp.hpl.jena.query.Query.getResultVars()", "com.hp.hpl.jena.query.QuerySolution.get(query.getResultVars().get(i).toString())", "query.getResultVars().get(i).toString()", "com.hp.hpl.jena.query.QuerySolution.getLiteral(query.getResultVars().get(i))", "query.getResultVars().get(int)", "de.ifgi.lod4wfs.core.Triple.setObjectDataType(qsol.getLiteral(query.getResultVars().get(i)).getDatatypeURI())", "query.getResultVars().get(int)"], "Fixed commit": "b268c0c32c57a3dbc3a63eab4c57248f7695e0cf", "Url": "https://api.github.com/repos/jimjonesbr/lod4wfs", "Date": "2015-12-04T16:08:39Z"},
{"Line": "=>422", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (doStop) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/2831/buggy-version/araqne-log-api.src.main.java.org.araqne.log.api.AbstractLogger.java", "BodyUseAPI": [], "Fixed commit": "9ca2be8abbd96d0500f764b4e8885b31e50ceef4", "Url": "https://api.github.com/repos/araqne/logdb", "Date": "2014-09-06T16:55:16Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((zanataVars.length) >= 3) { final java.lang.Integer translatedCSNodeId = java.lang.Integer.parseInt(zanataVars[2]); translatedCSNodeIdCondition = criteriaBuilder.equal(getOriginalRootPath().get(\"translatedCSNode\").get(\"translatedCSNodeId\"), translatedCSNodeId); }else { translatedCSNodeIdCondition = criteriaBuilder.isNull(getOriginalRootPath().get(\"translatedCSNode\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/8569/buggy-version/src.main.java.org.jboss.pressgang.ccms.filter.builder.TranslatedTopicDataFilterQueryBuilder.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "ad36259217a475cfba7d4955e0a41357781b2a5f", "Url": "https://api.github.com/repos/pressgang-ccms/PressGangCCMSQuery", "Date": "2013-04-15T23:44:52Z"},
{"Line": "=>1239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((holdNumAndId == null) || (holdNumAndId.isEmpty())) { setHoldingNumber(null); setHoldingId(null); }else { java.util.List<java.lang.String> splitted = com.google.common.collect.Lists.newArrayList(com.google.common.base.Splitter.on(\"|:|\").split(holdNumAndId)); if ((splitted.size()) == 2) { setHoldingNumber(splitted.get(0)); setHoldingId(splitted.get(1)); }else if ((splitted.size()) == 1) { setHoldingNumber(splitted.get(0)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/5289/buggy-version/src.amberdb.model.Work.java", "BodyUseAPI": ["com.google.common.collect.Lists.newArrayList(com.google.common.base.Splitter.on(\"|:|\").split(holdNumAndId))", "com.google.common.base.Splitter.on(\"|:|\").split(java.lang.String)"], "Fixed commit": "75a2aa2c25198f66c91c7715c88c4c179e4634d7", "Url": "https://api.github.com/repos/nla/amberdb", "Date": "2015-06-24T01:04:40Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((item.getValidate()) != null) { tvValidate.setText(org.openlmis.core.utils.DateUtil.convertDate(item.getValidate(), \"dd/MM/yyyy\", \"MMM - yy\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/5869/buggy-version/app.src.main.java.org.openlmis.core.view.widget.MMIARnrForm.java", "BodyUseAPI": ["android.widget.TextView.setText(org.openlmis.core.utils.DateUtil.convertDate(item.getValidate(), \"dd/MM/yyyy\", \"MMM - yy\"))", "org.openlmis.core.utils.DateUtil.convertDate(item.getValidate(),java.lang.String,java.lang.String)", "org.openlmis.core.model.RnrFormItem.getValidate()"], "Fixed commit": "ffb75161bda0b8e259d41b5ebd3978f2f5cc2d5d", "Url": "https://api.github.com/repos/SIGLUS/lmis-moz-mobile", "Date": "2015-08-14T11:11:07Z"},
{"Line": "=>1050", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (sms != null) { sms.setTimestampC(java.lang.System.currentTimeMillis()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/3150/buggy-version/core.slee.services.sbbs.src.main.java.org.mobicents.smsc.slee.services.smpp.server.rx.RxSmppServerSbb.java", "BodyUseAPI": ["org.mobicents.smsc.library.Sms.setTimestampC(long)"], "Fixed commit": "ebd835e804413786dbdce10107edb5f082837afe", "Url": "https://api.github.com/repos/StanislawLeja/smscgateway-1", "Date": "2017-07-28T14:02:53Z"},
{"Line": "=>339", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.asiainfo.ocmanager.rest.resource.persistence.UserRoleViewPersistenceWrapper.getRoleBasedOnUserAndTenant(java.lang.String,Constant.ROOTTENANTID)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((role == null) || (!(role.getRoleName().equals(Constant.SYSADMIN)))) { return javax.ws.rs.core.Response.status(Status.UNAUTHORIZED).entity(new com.asiainfo.ocmanager.rest.bean.ResourceResponseBean(\"update user failed\", \"the user is not system admin role, does NOT have the update user permission.\", com.asiainfo.ocmanager.rest.constant.ResponseCodeConstant.NO_UPDATE_USER_PERMISSION)).build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/539/buggy-version/src.com.asiainfo.ocmanager.rest.resource.UserResource.java", "BodyUseAPI": [], "Fixed commit": "2e774805afaf283f6c404d5f8b5476169fe837c4", "Url": "https://api.github.com/repos/zhaoyim/RestServer", "Date": "2017-08-18T08:56:49Z"},
{"Line": "=>315", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mPlayerResumed) && (!(mMusicService.isPlaying()))) { mPlayButton.setImageDrawable(android.support.v4.content.res.ResourcesCompat.getDrawable(getResources(), android.R.drawable.ic_media_play, null)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/16/buggy-version/app.src.main.java.si.vei.pedram.spotifystreamer.fragments.MusicPlayerFragment.java", "BodyUseAPI": [], "Fixed commit": "79a0049b395c77432b5e23e46c9ff7d139035f93", "Url": "https://api.github.com/repos/PedramVeisi/SpotifyStreamer", "Date": "2015-08-09T22:42:16Z"},
{"Line": "=>312", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((addMarkersDynamically) && (isPositionInVisibleClusters(cluster.getMarkersInternal().get(0).getPosition()))) { refresh(cluster); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/2102/buggy-version/android-maps-extensions.src.pl.mg6.android.maps.extensions.impl.GridClusteringStrategy.java", "BodyUseAPI": ["pl.mg6.android.maps.extensions.impl.GridClusteringStrategy.refresh(pl.mg6.android.maps.extensions.impl.ClusterMarker)"], "Fixed commit": "30198f716aadc6f759186426def7f10eda7c748c", "Url": "https://api.github.com/repos/Rutton/android-maps-extensions", "Date": "2013-08-17T21:12:12Z"},
{"Line": "=>356", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<pl.mg6.android.maps.extensions.impl.ClusterMarker>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((addMarkersDynamically) && (isPositionInVisibleClusters(cluster.getMarkersInternal().get(0).getPosition()))) { refresh(cluster); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/2102/buggy-version/android-maps-extensions.src.pl.mg6.android.maps.extensions.impl.GridClusteringStrategy.java", "BodyUseAPI": ["pl.mg6.android.maps.extensions.impl.GridClusteringStrategy.refresh(pl.mg6.android.maps.extensions.impl.ClusterMarker)"], "Fixed commit": "30198f716aadc6f759186426def7f10eda7c748c", "Url": "https://api.github.com/repos/Rutton/android-maps-extensions", "Date": "2013-08-17T21:12:12Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getParseController()) == null) { return super.getAdapter(adapter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/1390/buggy-version/org.strategoxt.imp.runtime.src.org.strategoxt.imp.runtime.SpoofaxEditor.java", "BodyUseAPI": [], "Fixed commit": "d0e8bfdcdc7f3672ab69032a910b8d3023a8bcba", "Url": "https://api.github.com/repos/metaborg/spoofax", "Date": "2013-07-03T21:56:47Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (sender instanceof org.bukkit.entity.Player) { net.syamn.rulebooks.commands.BuyCommand.sendBuyables(((org.bukkit.entity.Player) (sender))); }else { new net.syamn.rulebooks.commands.HelpCommand().run(this, sender, args, commandLabel); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/2143/buggy-version/src.main.java.net.syamn.rulebooks.RuleBooks.java", "BodyUseAPI": ["net.syamn.rulebooks.commands.HelpCommand.run(net.syamn.rulebooks.RuleBooks,org.bukkit.command.CommandSender,java.lang.String[],java.lang.String)"], "Fixed commit": "b4ec1889956b8be2fd95180e77f26c4ec3b55b8f", "Url": "https://api.github.com/repos/syamn/RuleBooks", "Date": "2013-02-24T06:15:18Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (getEntity().hasControl(ru.laptew.runAndCatch.control.AIRunControl.class)) { getEntity().removeControl(ru.laptew.runAndCatch.control.AIRunControl.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/2024/buggy-version/src.main.java.ru.laptew.runAndCatch.component.BotComponent.java", "BodyUseAPI": ["getEntity().removeControl(java.lang.Class)"], "Fixed commit": "7a693be875763338b8d40f94bc39069ae2d4e8d4", "Url": "https://api.github.com/repos/jekisaq/RunAndCatch", "Date": "2017-04-27T08:01:35Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (getEntity().hasControl(ru.laptew.runAndCatch.control.AIProximityControl.class)) { getEntity().removeControl(ru.laptew.runAndCatch.control.AIProximityControl.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/2024/buggy-version/src.main.java.ru.laptew.runAndCatch.component.BotComponent.java", "BodyUseAPI": ["getEntity().removeControl(java.lang.Class)"], "Fixed commit": "7a693be875763338b8d40f94bc39069ae2d4e8d4", "Url": "https://api.github.com/repos/jekisaq/RunAndCatch", "Date": "2017-04-27T08:01:35Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(Settings.username.isEmpty())) { tName.setText(Settings.username); tPassword.requestFocus(); }else tName.requestFocus();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/1639/buggy-version/src.cuploader.frames.FLogin.java", "BodyUseAPI": [], "Fixed commit": "f4c302cef15872075267561b7f2c0d992469a008", "Url": "https://api.github.com/repos/yarl/vicuna", "Date": "2012-10-04T16:47:15Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.android.settings.profiles.SetupActionsFragment.getSystemService(Context.NFC_SERVICE)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((nfcManager.getDefaultAdapter()) != null) { mItems.add(generateTriggerItem(TriggerItem.NFC)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/3243/buggy-version/src.com.android.settings.profiles.SetupActionsFragment.java", "BodyUseAPI": [], "Fixed commit": "380d38e15e48a2ad4a2c77fbcc4023670d5f147b", "Url": "https://api.github.com/repos/codeaurora-unofficial/platform-packages-apps-Settings", "Date": "2015-09-21T14:10:49Z"},
{"Line": "=>353", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.android.settings.profiles.SetupActionsFragment.2.getSystemService(Context.NFC_SERVICE)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((nfcManager.getDefaultAdapter()) != null) { mProfile.setConnectionSettings(new android.app.ConnectionSettings(android.app.ConnectionSettings.PROFILE_CONNECTION_NFC, (nfcManager.getDefaultAdapter().isEnabled() ? 1 : 0), true)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/3243/buggy-version/src.com.android.settings.profiles.SetupActionsFragment.java", "BodyUseAPI": ["android.app.Profile.setConnectionSettings(android.app.ConnectionSettings)", "android.nfc.NfcManager.getDefaultAdapter()", "nfcManager.getDefaultAdapter().isEnabled()"], "Fixed commit": "380d38e15e48a2ad4a2c77fbcc4023670d5f147b", "Url": "https://api.github.com/repos/codeaurora-unofficial/platform-packages-apps-Settings", "Date": "2015-09-21T14:10:49Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!firstLine) { builder.append(\",\"); }else { firstLine = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/8157/buggy-version/src.com.michaelfotiadis.shpparser.containers.ergo.geometry.ErgoPolyline.java", "BodyUseAPI": [], "Fixed commit": "a343934879f020ccb15f84c5e43495d548765e4a", "Url": "https://api.github.com/repos/MikeFot/Java-GIS-Shapefile-Parser-and-Processor", "Date": "2014-11-21T13:11:00Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((previousScoreboard) != null) org.bukkit.Bukkit.getPlayer(player).setScoreboard(previousScoreboard);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/1679/buggy-version/src.me.F_o_F_1092.WeatherVote.WeatherVote.java", "BodyUseAPI": [], "Fixed commit": "84c88dfd5810f302f45e62c070a8e08502754eef", "Url": "https://api.github.com/repos/NoChanceSD/WeatherVote", "Date": "2017-01-15T22:06:40Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((dictionary.containsKey(substring)) != true) { dictionary.put(substring, \"prefix\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/4243/buggy-version/src.DictionaryBuilder.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)"], "Fixed commit": "ef925224e4b0e0a33a48473eb1477477baafab5b", "Url": "https://api.github.com/repos/anthonyyim/boggle-solver", "Date": "2013-04-18T03:09:30Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((deadLine) < 0) deadLine = java.lang.Long.MAX_VALUE;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/8574/buggy-version/src.main.java.no.antares.clutil.hitman.DeadLine.java", "BodyUseAPI": [], "Fixed commit": "cead82d406a04b93911b54c6645fbd0600e5528c", "Url": "https://api.github.com/repos/AntaTom/Clu-HitMan", "Date": "2012-09-26T13:56:04Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.orienteer.core.method.IMethod.getDisplayComponent(externalList.newChildId())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (component != null) { if ((component instanceof org.orienteer.core.component.IBootstrapAware) && (bootstrapTypeOverriden)) { ((org.orienteer.core.component.IBootstrapAware) (component)).setBootstrapType(bootstrapType); } externalList.add(component); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/5321/buggy-version/orienteer-core.src.main.java.org.orienteer.core.method.MethodsView.java", "BodyUseAPI": ["org.apache.wicket.markup.repeater.RepeatingView.add(org.apache.wicket.Component)"], "Fixed commit": "18244e0c3af8c32c3cc1a2c10afae27878bebb3c", "Url": "https://api.github.com/repos/OrienteerBAP/Orienteer", "Date": "2017-04-14T04:03:57Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(seedu.address.commons.util.FileUtil.isFileExists(targetFile))) { throw new java.io.FileNotFoundException(seedu.address.logic.commands.PhotoCommand.MESSAGE_LOCAL_PHOTOPATH_CONSTRAINTS); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/3070/buggy-version/src.main.java.seedu.address.logic.commands.PhotoCommand.java", "BodyUseAPI": [], "Fixed commit": "11b53f73e04beba6047c897ecf06f85e340bbb80", "Url": "https://api.github.com/repos/CindyTsai1/addressbook-level4", "Date": "2017-11-05T14:05:17Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mNotification) != null) mNotification.setRemove();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/5762/buggy-version/src.com.joewoo.ontime.ui.maintimeline.AboutFragment.java", "BodyUseAPI": [], "Fixed commit": "3873effa03ba0c5941970aa9d68d17c0fc853325", "Url": "https://api.github.com/repos/xJoeWoo/MyMaid", "Date": "2014-03-06T16:03:15Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (se.vgregion.alfresco.repo.scripts.SetPublishStatus.TYPE_UNPUBLISH_STATUS.equalsIgnoreCase(type)) { _nodeService.setProperty(nodeRef, VgrModel.PROP_UNPUBLISH_STATUS, publishingStatus); }else { throw new org.alfresco.error.AlfrescoRuntimeException((\"Unexpected type: \" + type)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/2668/buggy-version/repo.src.main.java.se.vgregion.alfresco.repo.scripts.SetPublishStatus.java", "BodyUseAPI": [], "Fixed commit": "440e4833723c97675c41ea9d0819ad73edb32e68", "Url": "https://api.github.com/repos/Vastra-Gotalandsregionen/oppna-program-alfresco", "Date": "2016-12-09T09:21:08Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((net.md_5.bungee.api.ProxyServer.getInstance().getPlayer(uuid)) != null) { return net.md_5.bungee.api.ProxyServer.getInstance().getPlayer(uuid).getName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/5496/buggy-version/src.main.java.com.github.acquized.retile.cache.impl.Offline.java", "BodyUseAPI": ["net.md_5.bungee.api.ProxyServer.getInstance().getPlayer(uuid).getName()", "net.md_5.bungee.api.ProxyServer.getInstance().getPlayer(java.util.UUID)"], "Fixed commit": "417b71d82956548babcd19cd77be341a0516761b", "Url": "https://api.github.com/repos/Acquized/ProjectRetile", "Date": "2016-11-19T21:24:31Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((net.md_5.bungee.api.ProxyServer.getInstance().getPlayer(name)) != null) { return net.md_5.bungee.api.ProxyServer.getInstance().getPlayer(name).getUniqueId(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/5496/buggy-version/src.main.java.com.github.acquized.retile.cache.impl.Offline.java", "BodyUseAPI": ["net.md_5.bungee.api.ProxyServer.getInstance().getPlayer(name).getUniqueId()", "net.md_5.bungee.api.ProxyServer.getInstance().getPlayer(java.lang.String)"], "Fixed commit": "417b71d82956548babcd19cd77be341a0516761b", "Url": "https://api.github.com/repos/Acquized/ProjectRetile", "Date": "2016-11-19T21:24:31Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ch.ybus.birthdaybook.BirthdayBook.findViewById(android.R.id.home)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (homeIcon != null) { ((android.view.View) (homeIcon.getParent())).setVisibility(View.GONE); homeIcon.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/7103/buggy-version/src.ch.ybus.birthdaybook.BirthdayBook.java", "BodyUseAPI": ["android.view.View.getParent()", "android.view.View.setVisibility(View.GONE)", "((android.view.View) (homeIcon.getParent())).setVisibility(View.GONE)"], "Fixed commit": "9f3e0aac06caad365990fdab7baaa542a6ea24ae", "Url": "https://api.github.com/repos/androman/BirthdayBook", "Date": "2014-11-22T11:28:43Z"},
{"Line": "=>2064", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (executor != null) { final java.util.concurrent.CountDownLatch latch = newLatch(1); executor.execute(new java.lang.Runnable() { @java.lang.Override public void run() { latch.countDown(); } }); awaitLatch(latch, (-1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/4643/buggy-version/artemis-journal.src.main.java.org.apache.activemq.artemis.core.journal.impl.JournalImpl.java", "BodyUseAPI": ["java.util.concurrent.Executor.execute(java.lang.Runnable)"], "Fixed commit": "e0f4cb4d854c5967068dbfa9a41219c7bec97ca7", "Url": "https://api.github.com/repos/clebertsuconic/activemq-artemis", "Date": "2016-10-26T13:18:52Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.biz.util.JDBCOracleUtil.executeQuery(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((result.size()) <= 0) { return dwz.getFailedJson(((\"\u672a\u627e\u5230\u7f16\u53f7\u4e3a\" + empId) + \"\u7684\u5458\u5de5\u4fe1\u606f!\")).toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/8269/buggy-version/src.main.java.net.biz.query.web.QueryAction.java", "BodyUseAPI": [], "Fixed commit": "10db75e8596d70abdb871a3a7230357e4f51a5d8", "Url": "https://api.github.com/repos/neuqik/jlxt", "Date": "2013-01-10T06:27:58Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (parseContainer(this, ((org.json.simple.JSONArray) (jsonParser.parse(reader))))) { lastModified = file.lastModified(); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/5272/buggy-version/src.sk.sorien.silexplugin.pimple.JsonFileContainer.java", "BodyUseAPI": [], "Fixed commit": "baed2a3e0f78038b97bbb80c6bf9a2df04c7a701", "Url": "https://api.github.com/repos/Sorien/silex-idea-plugin", "Date": "2015-06-18T13:19:08Z"},
{"Line": "=>445", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newResGrp) { for (java.lang.String resGrp : sortedGroups) { if (selectedResGrpValue.equals(resGrp)) { throw new com.microsoft.azuretools.azurecommons.exceptions.InvalidFormDataException(((\"The resource group \" + (selectedResGrpValue)) + \" is not available\")); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/4292/buggy-version/PluginsAndFeatures.azure-toolkit-for-eclipse.com.microsoft.azuretools.azureexplorer.src.com.microsoft.azuretools.azureexplorer.forms.createrediscache.CreateRedisCacheForm.java", "BodyUseAPI": [], "Fixed commit": "97c637668a10fcbe677ac892b66c2e35bbab195d", "Url": "https://api.github.com/repos/jdneo/azure-tools-for-java", "Date": "2017-10-20T04:10:49Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (stack.isEmpty()) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/253/buggy-version/src.main.java.vswe.stevescarts.compat.minecraft.DefaultTreeModule.java", "BodyUseAPI": [], "Fixed commit": "cf18dd26ceff3868022723a6ad3027cc0d747052", "Url": "https://api.github.com/repos/TechReborn/StevesCarts", "Date": "2017-05-06T18:57:01Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((myCurrentToken) == null) { myCurrentToken = FeatureTokenTypes.TEXT_TOKEN; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/1143/buggy-version/src.uk.co.itmoore.intellisubsteps.psi.feature.FeatureLexer.java", "BodyUseAPI": [], "Fixed commit": "c618200423dd4760f833028e4722f87cffeac391", "Url": "https://api.github.com/repos/iantmoore/substeps-intellij-plugin", "Date": "2017-08-09T21:31:15Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(qBuilder.isQuiet())) { if (rw.isToFile()) { info.radm.radscan.utils.RadsMessenger.writeMessage((((rw.getFileDescription()) + \" written to \") + (rw.getOutFilePath()))); rw.destroy(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/5029/buggy-version/src.info.radm.radscan.RadScan.java", "BodyUseAPI": [], "Fixed commit": "1db3811e65d9c5fb0956f0e4e97c5b21dd38b5fd", "Url": "https://api.github.com/repos/radmoore/RadScan", "Date": "2012-07-12T14:00:16Z"},
{"Line": "=>1465", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bulletAppState.isEnabled()) { assert numScenes == 2 : numScenes; }else { assert numScenes == 1 : numScenes; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/2690/buggy-version/src.main.java.maud.view.SceneView.java", "BodyUseAPI": [], "Fixed commit": "291f6d53a15b89749f5d459aba08a468a32aa464", "Url": "https://api.github.com/repos/stephengold/Maud", "Date": "2017-11-23T21:48:41Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((smgr.getStudentState().getLessonState().getNextProblemMode()) == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/8897/buggy-version/woServer.src.edu.umass.ckc.wo.tutor.intervSel2.CollaborationIS.java", "BodyUseAPI": [], "Fixed commit": "333380aeb0d62ecce974f5d510a5d5e0c54530f4", "Url": "https://api.github.com/repos/marshall62/mathspring", "Date": "2015-12-15T20:27:38Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(objects.isEmpty())) { com.parse.ParseUser friendUser = objects.get(0); friendUser.addUnique(\"FriendRequests\", edu.calpoly.android.imfree.DataStore.currentUser.getEmail()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/4412/buggy-version/src.edu.calpoly.android.imfree.DataStore.java", "BodyUseAPI": ["java.util.List<com.parse.ParseUser>.get(int)"], "Fixed commit": "3fedec60febd5a473133136d052a4319dc029373", "Url": "https://api.github.com/repos/ianw11/I-mFreeApp", "Date": "2014-03-06T06:18:46Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((c.getTeam()) != (teamNum)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/6731/buggy-version/BJChat.src.checkers.Player.java", "BodyUseAPI": [], "Fixed commit": "13eb5022cfe40e30533a3c4a51ec744d32481f14", "Url": "https://api.github.com/repos/lbro23/BJChat", "Date": "2016-05-20T15:08:42Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((splitter.length) > 1) { return splitter[((splitter.length) - 1)]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/8136/buggy-version/Game2D.src.com.Game2D.core.util.FileUtils.java", "BodyUseAPI": [], "Fixed commit": "90b8881930d2d7cc2acdcbe5aa7e5fd8c7d6cc79", "Url": "https://api.github.com/repos/Anttoni/Game2D", "Date": "2013-05-29T18:46:51Z"},
{"Line": "=>308", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ratesReview) == null) { return new java.util.ArrayList<>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/3225/buggy-version/app.src.main.java.com.imajiku.vegefinder.pojo.RestoDetail.java", "BodyUseAPI": [], "Fixed commit": "a5b5ae5a01337b4fc66bbe3417c36b53b6ec7b2c", "Url": "https://api.github.com/repos/ajoblaze/vege2", "Date": "2017-03-28T01:59:12Z"},
{"Line": "=>348", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Stack<loop.Context>.peek()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((!(context.thisFunction.patternMatching)) && ((context.thisFunction.children().size()) > 1)) { for (int i = 1; i < (context.thisFunction.children().size()); i++) { methodVisitor.visitInsn(loop.POP); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/666/buggy-version/src.loop.AsmCodeEmitter.java", "BodyUseAPI": ["context.thisFunction.children().size()", "context.thisFunction.children()"], "Fixed commit": "513dded4c2fd036cd6c27694343669d320fec6b7", "Url": "https://api.github.com/repos/yohanbeschi/loop", "Date": "2012-08-19T06:47:59Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (candidates.isEmpty()) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/6741/buggy-version/src.org.aiwolf.sample.player.SampleSeer.java", "BodyUseAPI": [], "Fixed commit": "adf27f3c09d37f5b037736b15c1256b1ff1ffb76", "Url": "https://api.github.com/repos/aiwolf/AIWolfClient", "Date": "2016-12-26T18:50:59Z"},
{"Line": "=>442", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!selected) setForeground(inactive);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/1394/buggy-version/src.main.java.io.breen.socrates.view.main.SubmissionTree.java", "BodyUseAPI": [], "Fixed commit": "3da0bb29de452b6a04af0055a976c5b95c863c49", "Url": "https://api.github.com/repos/abreen/Socrates", "Date": "2015-10-11T04:10:05Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (extraData != null) { bestExtraDatas.add(extraData); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/7619/buggy-version/thesis.src.main.java.pls.stats.PlsJobStats.java", "BodyUseAPI": ["java.util.List<pls.vrp.LnsExtraData>.add(pls.vrp.LnsExtraData)"], "Fixed commit": "260cc6eaf9b834eb645169417dd3f7ea95f20c51", "Url": "https://api.github.com/repos/sryza/dco", "Date": "2012-04-17T06:19:11Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (resource.isAnon()) return \"[]\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/5802/buggy-version/src.main.java.de.fuberlin.wiwiss.pubby.URIPrefixer.java", "BodyUseAPI": [], "Fixed commit": "6aaf1af61ef3e538a8d3dca7bfecc52d2f02dfe9", "Url": "https://api.github.com/repos/cygri/pubby", "Date": "2013-10-28T07:27:31Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (resource.isAnon()) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/5802/buggy-version/src.main.java.de.fuberlin.wiwiss.pubby.URIPrefixer.java", "BodyUseAPI": [], "Fixed commit": "6aaf1af61ef3e538a8d3dca7bfecc52d2f02dfe9", "Url": "https://api.github.com/repos/cygri/pubby", "Date": "2013-10-28T07:27:31Z"},
{"Line": "=>610", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((apiVersion) != (Version.VERSION_2_6)) { endpoint = \"oauth/device\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/5119/buggy-version/source.library.com.restfb.DefaultFacebookClient.java", "BodyUseAPI": [], "Fixed commit": "26dd0bc2560d145a8d83dc94b55823b78e73c1e8", "Url": "https://api.github.com/repos/restfb/restfb", "Date": "2016-04-28T22:04:04Z"},
{"Line": "=>593", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((apiVersion) != (Version.VERSION_2_6)) { endpoint = \"oauth/device\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/5119/buggy-version/source.library.com.restfb.DefaultFacebookClient.java", "BodyUseAPI": [], "Fixed commit": "26dd0bc2560d145a8d83dc94b55823b78e73c1e8", "Url": "https://api.github.com/repos/restfb/restfb", "Date": "2016-04-28T22:04:04Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.solovey.movieland.web.util.RequestInterceptor.getRequiredRoles(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (rolesOprional.isPresent()) { log.info(\"Request with empty uuid and role needed\"); writeResponseOnFail(response, HttpServletResponse.SC_FORBIDDEN, \"Guest do not have access to this function\"); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/2848/buggy-version/movieland_web.src.main.java.com.solovey.movieland.web.util.RequestInterceptor.java", "BodyUseAPI": [], "Fixed commit": "8e63e36d83a5d98f50cd128b36d54cb958e50adc", "Url": "https://api.github.com/repos/Ramoid/movieland", "Date": "2017-11-18T15:01:59Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((splitString.length) > 1) { if (splitString[1].equals(\"\u20ac\")) { this.price = java.lang.Float.parseFloat(splitString[0]); }else if (splitString[1].equals(\"$\")) { this.price = (java.lang.Float.parseFloat(splitString[0])) * 0.75F; }else { this.price = java.lang.Float.parseFloat(splitString[0]); } }else { this.price = java.lang.Float.parseFloat(splitString[0]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/833/buggy-version/OnlineShop.src.java.beans.caseProduct.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.Float.parseFloat(java.lang.String)", "java.lang.Float.parseFloat(java.lang.String)", "java.lang.Float.parseFloat(java.lang.String)", "java.lang.Float.parseFloat(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "a7bdee3949658ca3eaf035632822eafe28764a6a", "Url": "https://api.github.com/repos/chrisUse/WebEntwT", "Date": "2013-01-24T14:15:49Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.emc.storageos.util.VPlexUtil.getVPLEXBackendVolume(com.emc.storageos.db.client.model.Volume,boolean,com.emc.storageos.db.client.DbClient)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (sourceSideBackingVolume != null) { to.setReplicationGroupInstance(sourceSideBackingVolume.getReplicationGroupInstance()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/6648/buggy-version/apisvc.src.main.java.com.emc.storageos.api.mapper.BlockMapper.java", "BodyUseAPI": ["com.emc.storageos.model.block.VolumeRestRep.setReplicationGroupInstance(sourceSideBackingVolume.getReplicationGroupInstance())", "com.emc.storageos.db.client.model.Volume.getReplicationGroupInstance()"], "Fixed commit": "b9825f4c2752e7f03d5767c721c220a07961bea3", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-03-08T17:16:37Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getTagginsList().size()) > 0) { tagginsList = getTagginsList(); }else { android.widget.Toast.makeText(getApplicationContext(), \"Proposta n\u00e3o possui TAGS\", Toast.LENGTH_SHORT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/7094/buggy-version/app.src.main.java.com.mdsgpp.cidadedemocratica.controller.TagginsList.java", "BodyUseAPI": [], "Fixed commit": "c32c6c82b1a20b362877331272fd5b568bfde024", "Url": "https://api.github.com/repos/GPP-MDS-2016/2016.2-Time08-CidadeDemocratica", "Date": "2016-09-19T19:43:23Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (logicalPath.equals(\"**\")) { childModuleDTOs = getRootModules(); }else { java.lang.Module module = this.moduleService.getModuleByLogicalPath(logicalPath); husacct.common.dto.ModuleDTO moduleDTO = domainParser.parseModule(module); childModuleDTOs = moduleDTO.subModules; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/5152/buggy-version/src.husacct.define.DefineServiceImpl.java", "BodyUseAPI": ["husacct.define.domain.services.ModuleDomainService.getModuleByLogicalPath(java.lang.String)"], "Fixed commit": "12d6bf75e96280037da4907edf9cea5efe794479", "Url": "https://api.github.com/repos/rvgate/HUSACCT", "Date": "2012-06-09T14:38:22Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (intent.hasExtra(\"ACTION\")) { java.lang.String action = intent.getStringExtra(\"ACTION\"); if (action.equals(Constants.ACTION_LOGIN_SUCCESS)) { android.util.Log.d(\"example\", \"login success and show profile now\"); com.ikky.managers.UserManager.getInstance(this).showProfile(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/1051/buggy-version/src.com.ikky.activities.MainActivity.java", "BodyUseAPI": ["android.content.Intent.getStringExtra(java.lang.String)"], "Fixed commit": "b88a79a55512d3498df25d36cd098ea4a9091783", "Url": "https://api.github.com/repos/ryderlee/Test", "Date": "2014-04-07T03:38:19Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.xuhongxu.PATHoya.spy.RoomSpy.rooms.get(i).containsKey(buildingName))) { res.add(roomSet); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/8917/buggy-version/src.com.xuhongxu.PATHoya.spy.RoomSpy.java", "BodyUseAPI": [], "Fixed commit": "feede4a187db5e496ca377c19bc7972286867e27", "Url": "https://api.github.com/repos/xuhongxu96/ClassroomSpy", "Date": "2017-05-16T03:31:57Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(targetClass.isInterface())) { final java.lang.Class<?> superclass = targetClass.getSuperclass(); if (superclass != null) { com.truward.di.support.DefaultInjectionContext.addInterfacesToSink(interfaceSink, superclass); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/4888/buggy-version/micro-di.src.main.java.com.truward.di.support.DefaultInjectionContext.java", "BodyUseAPI": ["java.lang.Class<?>.getSuperclass()"], "Fixed commit": "96592c6671b83d2ef76d9e091ef63eeef386e13c", "Url": "https://api.github.com/repos/avshabanov/micro-di", "Date": "2014-04-04T05:13:26Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jivesoftware.os.routing.bird.shared.ReturnFirstNonFailure._call(com.jivesoftware.os.routing.bird.shared.IndexedClientStrategy,java.lang.String,long,com.jivesoftware.os.routing.bird.shared.ClientCall<C, R, com.jivesoftware.os.routing.bird.shared.HttpClientException>,int,C[],com.jivesoftware.os.routing.bird.shared.ClientHealth[],int,long,java.util.concurrent.atomic.AtomicInteger[],java.util.concurrent.atomic.AtomicLong[])"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (clientResponse != null) { return clientResponse.response; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/870/buggy-version/routing-bird-shared.src.main.java.com.jivesoftware.os.routing.bird.shared.ReturnFirstNonFailure.java", "BodyUseAPI": [], "Fixed commit": "23b4fde9fc024ab98c42ca67a8d9614b484926ad", "Url": "https://api.github.com/repos/bruceadowns/routing-bird", "Date": "2017-03-15T18:22:48Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((mQueueId) != (-1)) { mIsOpen = jsonObject.getBoolean(\"isOpen\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/7285/buggy-version/app.src.main.java.org.ihsan.android.nolineadmin.LoginResult.java", "BodyUseAPI": [], "Fixed commit": "e1db9dd1f88084cfe25ebeab8198d19c59e0a63f", "Url": "https://api.github.com/repos/myihsan/NoLineAdmin", "Date": "2015-05-19T09:24:42Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((processors) < 2) { processors = 2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/1876/buggy-version/BLCMiner.src.net.mohatu.bloocoin.miner.MinerHandler.java", "BodyUseAPI": [], "Fixed commit": "b65b20130a2af58f1ca29f3c0c096723e7989a96", "Url": "https://api.github.com/repos/Mohatu/BLC_Miner", "Date": "2013-05-04T01:26:58Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (matrix != null) { values = new float[9]; matrix.getValues(values); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/6674/buggy-version/tehreer-android.src.main.java.com.mta.tehreer.graphics.Typeface.java", "BodyUseAPI": ["android.graphics.Matrix.getValues(float[])"], "Fixed commit": "a489e3ee76ab3e288e00044d1eec9f7cd3b2950c", "Url": "https://api.github.com/repos/mta452/Tehreer-Android", "Date": "2017-02-18T17:52:38Z"},
{"Line": "=>486", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.puppycrawl.tools.checkstyle.checks.coding.RequireThisCheck.getBlockEndToken(com.puppycrawl.tools.checkstyle.api.DetailAST,com.puppycrawl.tools.checkstyle.api.DetailAST)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (blockEndToken != null) { final java.util.Set<com.puppycrawl.tools.checkstyle.api.DetailAST> variableUsagesInsideBlock = com.puppycrawl.tools.checkstyle.checks.coding.RequireThisCheck.getAllTokensWhichAreEqualToCurrent(definitionToken, ident, blockEndToken.getLineNo()); for (com.puppycrawl.tools.checkstyle.api.DetailAST variableUsage : variableUsagesInsideBlock) { final com.puppycrawl.tools.checkstyle.api.DetailAST prevSibling = variableUsage.getPreviousSibling(); if ((prevSibling != null) && ((prevSibling.getType()) == (com.puppycrawl.tools.checkstyle.api.TokenTypes.LITERAL_THIS))) { userDefinedArrangementOfThis = true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/7650/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.checks.coding.RequireThisCheck.java", "BodyUseAPI": ["com.puppycrawl.tools.checkstyle.api.DetailAST.getLineNo()", "com.puppycrawl.tools.checkstyle.checks.coding.RequireThisCheck.getAllTokensWhichAreEqualToCurrent(com.puppycrawl.tools.checkstyle.api.DetailAST,com.puppycrawl.tools.checkstyle.api.DetailAST,blockEndToken.getLineNo())"], "Fixed commit": "0a85131b141a185ec3d7bb92df8ccbd92d38570e", "Url": "https://api.github.com/repos/rnveach/checkstyle", "Date": "2016-07-05T16:56:02Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((viewConfig.equals(\"\")) || (viewConfig == null)) { com.tinymvc.core.InstanceFactory.logger.info(\"\u9ed8\u8ba4\u4f7f\u7528Jsp\u89c6\u56fe\"); return com.tinymvc.core.InstanceFactory.getInstance(com.tinymvc.core.InstanceFactory.VIEW_RESOLVER, com.tinymvc.view.ViewResolverFactory.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/527/buggy-version/src.main.java.com.tinymvc.core.InstanceFactory.java", "BodyUseAPI": [], "Fixed commit": "384f7572c156709660a0be409b2df05ae6f2fc1f", "Url": "https://api.github.com/repos/wenbo2018/WebS", "Date": "2016-07-20T11:26:30Z"},
{"Line": "=>504", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["zeldaswordskills.entity.mobs.EntityWizzrobe.getRareDrop(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (drop != null) { entityDropItem(drop, 0.0F); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/2389/buggy-version/src.main.java.zeldaswordskills.entity.mobs.EntityWizzrobe.java", "BodyUseAPI": ["zeldaswordskills.entity.mobs.EntityWizzrobe.entityDropItem(net.minecraft.item.ItemStack,float)"], "Fixed commit": "9f0f8c602a1c8c767632991b818ebcd2385fd436", "Url": "https://api.github.com/repos/coolAlias/ZeldaSwordSkills", "Date": "2017-02-11T22:18:38Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wgs.service.game.Group.getMember(int)", "org.wgs.service.game.Group.getMember(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((m0 != null) && (m1 != null)) { saveAchievement(g, m0.getRole(), m0.getUser(), \"WIN\", m1.getUser().getUid()); saveAchievement(g, m1.getRole(), m1.getUser(), \"RESIGN\", m0.getUser().getUid()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/6335/buggy-version/WgsAPI.src.org.wgs.service.game.TurnValidator.java", "BodyUseAPI": ["org.wgs.service.game.Member.getRole()", "org.wgs.service.game.Member.getUser()", "org.wgs.service.game.TurnValidator.saveAchievement(org.wgs.service.game.Group,m1.getRole(),m1.getUser(),java.lang.String,m0.getUser().getUid())", "org.wgs.service.game.Member.getRole()", "org.wgs.service.game.TurnValidator.saveAchievement(org.wgs.service.game.Group,m0.getRole(),m0.getUser(),java.lang.String,m1.getUser().getUid())", "org.wgs.service.game.Member.getUser()", "m0.getUser().getUid()", "m1.getUser().getUid()", "org.wgs.service.game.Member.getUser()", "org.wgs.service.game.Member.getUser()"], "Fixed commit": "921a7879ffb1feb429831fc0fd2a7589d9e5ff2c", "Url": "https://api.github.com/repos/jmarine/wgs", "Date": "2015-02-08T14:23:57Z"},
{"Line": "=>381", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (stringValue.contains(\"\\\\\\'\")) { stringValue = stringValue.replace(\"\\\\\\'\", \"'\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/4649/buggy-version/stack.corepersistence.queryindex.src.main.java.org.apache.usergrid.persistence.index.impl.EsQueryVistor.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "b6b944e71f25d90421fddcd92b582289e81f04bd", "Url": "https://api.github.com/repos/suntehnik/usergrid", "Date": "2017-03-24T06:10:34Z"},
{"Line": "=>319", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((serverChatFormat != null) && (serverChatFormat.isEmpty())) { serverChatFormat = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/1609/buggy-version/src.main.java.codecrafter47.freebungeechat.FreeBungeeChat.java", "BodyUseAPI": [], "Fixed commit": "91b34bd5ded8babe5150d92a0fb4650c2e57a5e4", "Url": "https://api.github.com/repos/CodeCrafter47/FreeBungeeChat", "Date": "2015-09-01T11:03:17Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (prevsubject == null) { mperiod = subject.getTimetable().get(0).getPeriod().get(0).getP(); }else { if (subject.equals(prevsubject)) { mperiod = subject.getTimetable().get(0).getPeriod().get(1).getP(); }else { mperiod = subject.getTimetable().get(0).getPeriod().get(0).getP(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/7187/buggy-version/app.src.main.java.com.kaungkhantthu.yuplanner.utils.Utils.java", "BodyUseAPI": ["com.kaungkhantthu.yuplanner.data.entity.Subject.equals(com.kaungkhantthu.yuplanner.data.entity.Subject)"], "Fixed commit": "aee1af162af2b30ef93a75018c11ae3465ba068f", "Url": "https://api.github.com/repos/Kaungkhant97/YUPlanner", "Date": "2016-12-12T17:30:13Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((data.has(com.adobe.phonegap.push.LOC_KEY)) || (data.has(com.adobe.phonegap.push.LOC_DATA))) { java.lang.String newKey = normalizeKey(key, messageKey, titleKey); android.util.Log.d(com.adobe.phonegap.push.FCMService.LOG_TAG, (((\"replace key \" + key) + \" with \") + newKey)); replaceKey(context, key, newKey, extras, newExtras); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/8449/buggy-version/src.android.com.adobe.phonegap.push.FCMService.java", "BodyUseAPI": [], "Fixed commit": "b8454d169a004a3414f029755647715bdba39531", "Url": "https://api.github.com/repos/phonegap/phonegap-plugin-push", "Date": "2017-11-20T20:59:45Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.spec.research.open.xtrace.adapters.inspectit.impl.SpanConverterHelper.getInvocationSequenceDataWithSpanID(childrenOfRemoteMeasurement.get(0).getSpanIdent().getId(),traceData.getInvocationSequenceDatas())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (remoteCall == null) { remoteInvocation.setTargetSubTrace(null); }else { remoteInvocation.setTargetSubTrace(new org.spec.research.open.xtrace.adapters.inspectit.impl.IITSubTraceImpl(trace, remoteCall, getPlatformIdentWithID(remoteCall.getPlatformIdent(), traceData.getPlatformIdents()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/5929/buggy-version/open.xtrace.adapters.adapters.inspectit.src.main.java.org.spec.research.open.xtrace.adapters.inspectit.impl.SpanConverterHelper.java", "BodyUseAPI": ["rocks.inspectit.shared.all.communication.data.InvocationSequenceData.getPlatformIdent()", "org.spec.research.open.xtrace.adapters.inspectit.impl.IITRemoteInvocation.setTargetSubTrace(org.spec.research.open.xtrace.adapters.inspectit.impl.IITSubTraceImpl)", "org.spec.research.open.xtrace.adapters.inspectit.impl.SpanConverterHelper.getPlatformIdentWithID(remoteCall.getPlatformIdent(),traceData.getPlatformIdents())"], "Fixed commit": "40b557796643bf95c4611614037b08419e9093b4", "Url": "https://api.github.com/repos/spec-rgdevops/OPEN.xtrace", "Date": "2017-05-08T09:38:35Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(filePathFile.exists())) filePathFile.mkdir();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/4344/buggy-version/src.main.java.com.macrohuang.fileq.impl.AbstractFileQueueImpl.java", "BodyUseAPI": ["java.io.File.mkdir()"], "Fixed commit": "b8dfc1d87a965fe388580e2d90de0abe56522d10", "Url": "https://api.github.com/repos/macrohuang/fileq", "Date": "2012-12-01T06:15:39Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((manager) != null) { manager.removeAllDefaultChannels(); }else { java.io.File fileDefaults = new java.io.File(com.github.ucchyocean.lc.LunaChat.getInstance().getDataFolder(), com.github.ucchyocean.lc.LunaChat.FILE_NAME_DCHANNELS); if (fileDefaults.exists()) { fileDefaults.delete(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/4385/buggy-version/src.main.java.com.github.ucchyocean.lc.LunaChat.java", "BodyUseAPI": [], "Fixed commit": "713501d85910e33cf2624446b287292d71604ff7", "Url": "https://api.github.com/repos/ucchyocean/LunaChat", "Date": "2014-04-14T23:34:45Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState == null) { createCustomToolbar(); initializeAccountFragment(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/386/buggy-version/app.src.main.java.group1.cpsc319.plurilock_client.Presenter.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "c9ec62ce244d44fd4f157299fffce53404c6fd89", "Url": "https://api.github.com/repos/plurilock1/plurilock", "Date": "2016-03-29T16:05:16Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState == null) { startAccountActivity(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/386/buggy-version/app.src.main.java.group1.cpsc319.plurilock_client.Presenter.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "c9ec62ce244d44fd4f157299fffce53404c6fd89", "Url": "https://api.github.com/repos/plurilock1/plurilock", "Date": "2016-03-29T16:05:16Z"},
{"Line": "=>374", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uk.co.joshuawoolley.simpleticketmanager.ticketsystem.TicketManager.getTicket(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (ticket.getState().equals(TicketStates.CLOSED)) { sender.sendMessage(((org.bukkit.ChatColor.translateAlternateColorCodes('&', checkMessages(plugin.messageData.get(\"ticketClosedBy\")))) + (getName(ticket.getClosedBy())))); sender.sendMessage(((org.bukkit.ChatColor.translateAlternateColorCodes('&', checkMessages(plugin.messageData.get(\"ticketClosedDate\")))) + (ticket.getClosedDate().toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/6766/buggy-version/java.uk.co.joshuawoolley.simpleticketmanager.ticketsystem.TicketManager.java", "BodyUseAPI": ["uk.co.joshuawoolley.simpleticketmanager.ticketsystem.TicketManager.getName(ticket.getClosedBy())", "org.bukkit.command.CommandSender.sendMessage(((org.bukkit.ChatColor.translateAlternateColorCodes('&', checkMessages(plugin.messageData.get(\"ticketClosedDate\")))) + (ticket.getClosedDate().toString())))", "uk.co.joshuawoolley.simpleticketmanager.ticketsystem.Ticket.getClosedBy()", "uk.co.joshuawoolley.simpleticketmanager.ticketsystem.Ticket.getClosedDate()", "org.bukkit.command.CommandSender.sendMessage(((org.bukkit.ChatColor.translateAlternateColorCodes('&', checkMessages(plugin.messageData.get(\"ticketClosedBy\")))) + (getName(ticket.getClosedBy()))))", "ticket.getClosedDate().toString()"], "Fixed commit": "732c5e3b2dc620d5c50fda2d711e0167087c03e8", "Url": "https://api.github.com/repos/Rodzynus/SimpleTicketManager", "Date": "2016-10-27T05:20:17Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["permanent.getCardType().contains(CardType.LAND)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!isLand) { permanent.getSubtype().clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/6857/buggy-version/Mage.Sets.src.mage.sets.eldritchmoon.ImprisonedInTheMoon.java", "BodyUseAPI": [], "Fixed commit": "9390ec20b08b70878737475ac61e1269022c3770", "Url": "https://api.github.com/repos/drmDev/mage", "Date": "2016-07-25T15:52:01Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["services.MetodiGruppi.searchGruppoById(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((gruppo.getProprietario()) != IDutente) { classi.Lista singleReport = new classi.Lista(); singleReport.setUtente(rs.getInt(\"utente\")); singleReport.setGruppo(rs.getInt(\"gruppo\")); singleReport.setInvitato(rs.getInt(\"INVITATO\")); listaGruppi.add(singleReport); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/8077/buggy-version/WebFinal.src.java.services.MetodiGruppi.java", "BodyUseAPI": [], "Fixed commit": "60fa72443ccc20df3fe87738ed1aad1158a7d81a", "Url": "https://api.github.com/repos/babolForFun/WebFinale", "Date": "2013-11-28T09:22:40Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.rahul.getup.PreferenceManager.getEnabledStatus(context))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/205/buggy-version/app.src.main.java.com.rahul.getup.AlarmReceiver.java", "BodyUseAPI": [], "Fixed commit": "93b8e5fb7616755553b55892b96d0db0356a6440", "Url": "https://api.github.com/repos/rahular/GetUp", "Date": "2014-12-24T18:21:49Z"},
{"Line": "=>1185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((++(org.torproject.android.service.TorService.notificationCounter)) % 10) == 0) startService(new android.content.Intent(INTENT_TOR_SERVICE));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/8867/buggy-version/src.org.torproject.android.service.TorService.java", "BodyUseAPI": [], "Fixed commit": "e1e8c224872bc442e3f55ce6011eaa87f45077de", "Url": "https://api.github.com/repos/amoghbl1/orbot", "Date": "2013-12-15T23:01:49Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (totalDuration < 10) { stringDuration = 0 + stringDuration; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/4880/buggy-version/src.mytunes.bll.MathManager.java", "BodyUseAPI": [], "Fixed commit": "67fbf60e818289a47d7216d8a223db95c90797a1", "Url": "https://api.github.com/repos/onero/MyTunes", "Date": "2016-12-08T08:58:42Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getResponse()) != null) { getResponse().setSpecialResponse(response); saveTimeEnded(); getResponse().save(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/1052/buggy-version/src.org.adaptlab.chpir.android.survey.QuestionFragment.java", "BodyUseAPI": [], "Fixed commit": "82462525abfa545d46b2846d9c1acd69e9ed6f22", "Url": "https://api.github.com/repos/mnipper/AndroidSurvey", "Date": "2014-03-25T15:55:51Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mFeedModelArrayList.size()) == 0) { noPostsWrapper.setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/4569/buggy-version/app.src.main.java.ink.fragments.Feed.java", "BodyUseAPI": [], "Fixed commit": "856dd06640c3f91d517a5572d24371c08990a1b2", "Url": "https://api.github.com/repos/vladimirarevshatyan/Ink", "Date": "2016-07-04T18:09:55Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (endDateAndTime == null) { return seedu.multitasky.model.util.EntryBuilder.build(name, tags); }else { return new seedu.multitasky.model.entry.Deadline(name, endDateAndTime, tags); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/6397/buggy-version/src.main.java.seedu.multitasky.model.util.EntryBuilder.java", "BodyUseAPI": [], "Fixed commit": "a357c0e32ed74aefce01b1f076c8226a110cbdaa", "Url": "https://api.github.com/repos/CS2103JUN2017-T2/main", "Date": "2017-07-12T16:08:43Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (requestCode != (fi.iki.murgo.irssinotifier.SettingsActivity.ICB_HOST_REQUEST_CODE)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2467/buggy-version/Android.IrssiNotifier.src.fi.iki.murgo.irssinotifier.SettingsActivity.java", "BodyUseAPI": [], "Fixed commit": "0f6e6ccd95f17c862d6e19feec783747ea646ccd", "Url": "https://api.github.com/repos/murgo/IrssiNotifier", "Date": "2012-09-25T19:06:59Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((customPrefix != null) && (!(customPrefix.isEmpty()))) builder = builder.tag(jenkinsci.plugins.influxdb.generators.AbstractPointGenerator.CUSTOM_PREFIX, measurementName(customPrefix));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/4965/buggy-version/src.main.java.jenkinsci.plugins.influxdb.generators.AbstractPointGenerator.java", "BodyUseAPI": ["jenkinsci.plugins.influxdb.generators.AbstractPointGenerator.measurementName(java.lang.String)", "Point.Builder.tag(java.lang.String,java.lang.String)"], "Fixed commit": "739f95d6fd0dce8ff95344e6463ba6c0b3ce572c", "Url": "https://api.github.com/repos/jenkinsci/influxdb-plugin", "Date": "2017-11-17T09:14:02Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["node.getGroupBy().iterator()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (expressions.hasNext()) { builder.append(','); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2057/buggy-version/presto-parser.src.main.java.com.facebook.presto.sql.VeroGenericSqlFormatter.java", "BodyUseAPI": [], "Fixed commit": "b6b5db7d779110ad790d2b816c2b1f47f8e54925", "Url": "https://api.github.com/repos/yulinwen/presto", "Date": "2014-06-19T16:10:55Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((serializedSoftLock.oldValueSerialized) != null) { oldValue = valueSerializer.read(java.nio.ByteBuffer.wrap(serializedSoftLock.oldValueSerialized)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2238/buggy-version/transactions.src.main.java.org.ehcache.transactions.xa.SoftLock.java", "BodyUseAPI": ["java.nio.ByteBuffer.wrap(byte[])", "org.ehcache.spi.serialization.Serializer<V>.read(java.nio.ByteBuffer)"], "Fixed commit": "42e36cd9a48ba2f114fa9ea8d3f153fb4671fbe8", "Url": "https://api.github.com/repos/ehcache/ehcache3", "Date": "2016-02-19T10:12:29Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((oldValue) != null) { serializedOldValue = valueSerializer.serialize(oldValue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2238/buggy-version/transactions.src.main.java.org.ehcache.transactions.xa.SoftLock.java", "BodyUseAPI": [], "Fixed commit": "42e36cd9a48ba2f114fa9ea8d3f153fb4671fbe8", "Url": "https://api.github.com/repos/ehcache/ehcache3", "Date": "2016-02-19T10:12:29Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (serializedOldValue != null) { this.oldValueSerialized = new byte[serializedOldValue.remaining()]; serializedOldValue.get(oldValueSerialized); }else { oldValueSerialized = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2238/buggy-version/transactions.src.main.java.org.ehcache.transactions.xa.SoftLock.java", "BodyUseAPI": [], "Fixed commit": "42e36cd9a48ba2f114fa9ea8d3f153fb4671fbe8", "Url": "https://api.github.com/repos/ehcache/ehcache3", "Date": "2016-02-19T10:12:29Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ioResultsQueue.isEmpty()) { return java.util.Collections.emptyList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/474/buggy-version/storage.driver.src.main.java.com.emc.mongoose.storage.driver.base.StorageDriverBase.java", "BodyUseAPI": [], "Fixed commit": "4a27582c62985e262c12d10255e5bccd4a5f4118", "Url": "https://api.github.com/repos/zayatsization/mongoose", "Date": "2017-07-03T22:26:46Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.lambdaworks.redis.RedisURI.getPassword()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (password != null) { connection.auth(new java.lang.String(password)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/5381/buggy-version/src.main.java.com.lambdaworks.redis.cluster.ClusterTopologyRefresh.java", "BodyUseAPI": ["com.lambdaworks.redis.RedisAsyncConnectionImpl<java.lang.String, java.lang.String>.auth(java.lang.String)"], "Fixed commit": "9f1b5f2b4ed6ea2e1161eea84c2ddf7dcd2fdba6", "Url": "https://api.github.com/repos/lettuce-io/lettuce-core", "Date": "2015-12-25T12:53:24Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(query))) { b.appendQueryParameter(ThingProvider.PARAM_QUERY, query); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2649/buggy-version/src.com.btmura.android.reddit.widget.ThingAdapter.java", "BodyUseAPI": ["Uri.Builder.appendQueryParameter(ThingProvider.PARAM_QUERY,java.lang.String)"], "Fixed commit": "0947a78eca3783dad12872c55ca725136de28fd1", "Url": "https://api.github.com/repos/btmura/rbb", "Date": "2012-08-26T18:43:15Z"},
{"Line": "=>446", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.undertow.server.handlers.proxy.mod_cluster.VirtualHost.match(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((result.getValue()) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/7150/buggy-version/core.src.main.java.io.undertow.server.handlers.proxy.mod_cluster.ModClusterContainer.java", "BodyUseAPI": [], "Fixed commit": "6b6f1567695dbf5e6455adab29dd91ff339cce88", "Url": "https://api.github.com/repos/ecki/undertow", "Date": "2014-09-19T00:50:37Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (defaultHandler.contexts.isEmpty()) { return new io.undertow.util.PathMatcher.PathMatch<>(path, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/7150/buggy-version/core.src.main.java.io.undertow.server.handlers.proxy.mod_cluster.VirtualHost.java", "BodyUseAPI": [], "Fixed commit": "6b6f1567695dbf5e6455adab29dd91ff339cce88", "Url": "https://api.github.com/repos/ecki/undertow", "Date": "2014-09-19T00:50:37Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (activity.isComment()) { return org.exoplatform.social.notification.LinkProviderUtils.getOpenLink(org.exoplatform.social.notification.Utils.getActivityManager().getParentActivity(activity)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2570/buggy-version/component.notification.src.main.java.org.exoplatform.social.notification.LinkProviderUtils.java", "BodyUseAPI": ["org.exoplatform.social.notification.Utils.getActivityManager().getParentActivity(org.exoplatform.social.core.activity.model.ExoSocialActivity)", "org.exoplatform.social.notification.LinkProviderUtils.getOpenLink(org.exoplatform.social.notification.Utils.getActivityManager().getParentActivity(activity))"], "Fixed commit": "6f7432249a97d04c98e6e7f2c0249d21cb47f481", "Url": "https://api.github.com/repos/exodev/social", "Date": "2016-08-24T11:35:04Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cntAxis) > 2) cnt[2] = this.iv_count[2];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/1630/buggy-version/geoserver-ext.src.main.java.org.geotools.data.aggregation.AggregationFeatureSource.java", "BodyUseAPI": [], "Fixed commit": "6f391a361742301ff8c2af79bfc26f8ae324acb4", "Url": "https://api.github.com/repos/utwente-db/neogeo", "Date": "2013-07-17T15:06:13Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((showGroupCount) != (joeykblack.organizer.todo.QueueActivity.SHOW_ALL)) { (showGroupCount)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/8911/buggy-version/app.src.main.java.joeykblack.organizer.todo.QueueActivity.java", "BodyUseAPI": [], "Fixed commit": "0575d08c85cf3b4fa11bf36679ef999c3ddba4a4", "Url": "https://api.github.com/repos/joeykblack/android.organizer.todo", "Date": "2016-05-30T15:23:45Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((rom.internalOffset) > 33554431) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/9240/buggy-version/src.us.plxhack.MEH.MapElements.WildPokemonData.java", "BodyUseAPI": [], "Fixed commit": "e563b398dc08e057fe13dce371c912f38622bcab", "Url": "https://api.github.com/repos/shinyquagsire23/MEH", "Date": "2014-02-06T22:22:03Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((lineChange != 0) || (newEndOffsetInLine <= (w.getStart()))) { w.setStart((distance + newEndOffsetInLine)); w.setLine((line + lineChange)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/3821/buggy-version/EDIDE.src.ru.compscicenter.edide.course.TaskFile.java", "BodyUseAPI": ["ru.compscicenter.edide.course.TaskWindow.setLine(int)", "ru.compscicenter.edide.course.TaskWindow.setStart(int)"], "Fixed commit": "0a25db7fc8b709331c6b23287533e2299d238265", "Url": "https://api.github.com/repos/cscenter/EDIDE", "Date": "2014-08-13T11:01:44Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<net.mabako.steamgifts.adapters.IEndlessAdaptable>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (item instanceof net.mabako.steamgifts.data.Comment) { net.mabako.steamgifts.data.Comment c = ((net.mabako.steamgifts.data.Comment) (item)); if ((c.getId()) == (comment.getId())) { items.set(i, comment); notifyItemChanged(comment); return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/9020/buggy-version/core.src.main.java.net.mabako.steamgifts.adapters.CommentAdapter.java", "BodyUseAPI": [], "Fixed commit": "2a81aba89bdeb9b10cc7c4480bff2e499745b2f9", "Url": "https://api.github.com/repos/SteamGifts/SteamGifts", "Date": "2016-02-11T14:13:08Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mActivity.getDataManager().getCachedRepoByID(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(mActivity.getDataManager().getRepoPasswordSet(repo.id))) { java.lang.String password = mActivity.getDataManager().getRepoPassword(repoId); mActivity.showPasswordDialog(repoName, repoId, new com.seafile.seadroid2.ui.dialog.TaskDialog.TaskDialogListener() { @java.lang.Override public void onTaskSuccess() { com.seafile.seadroid2.ui.fragment.ActivitiesFragment.LoadHistoryChangesTask task = new com.seafile.seadroid2.ui.fragment.ActivitiesFragment.LoadHistoryChangesTask(seafEvent); com.seafile.seadroid2.util.ConcurrentAsyncTask.execute(task); } }, password); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/4504/buggy-version/app.src.main.java.com.seafile.seadroid2.ui.fragment.ActivitiesFragment.java", "BodyUseAPI": ["mActivity.getDataManager().getRepoPassword(java.lang.String)", "com.seafile.seadroid2.ui.activity.BrowserActivity.showPasswordDialog(java.lang.String,java.lang.String,com.seafile.seadroid2.ui.dialog.TaskDialog.TaskDialogListener,java.lang.String)", "com.seafile.seadroid2.ui.activity.BrowserActivity.getDataManager()"], "Fixed commit": "c74ed0bfd98b1027606a1b57002443c991ab2875", "Url": "https://api.github.com/repos/Logan676/seadroid", "Date": "2016-08-13T06:05:38Z"},
{"Line": "=>467", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((from.getTypes()) != null) { to.setTypes(from.getTypes()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/6570/buggy-version/apisvc.src.main.java.com.emc.storageos.api.mapper.BlockMapper.java", "BodyUseAPI": ["com.emc.storageos.model.block.BlockConsistencyGroupRestRep.setTypes(from.getTypes())", "com.emc.storageos.db.client.model.BlockConsistencyGroup.getTypes()"], "Fixed commit": "89eef6ff8c846c51b7530dfeb58d93a3db860660", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-02-18T14:01:47Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (users.isEmpty()) lastUserLeftOn = java.lang.System.currentTimeMillis();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/1582/buggy-version/bigbluebutton-web.src.java.org.bigbluebutton.api.domain.Meeting.java", "BodyUseAPI": [], "Fixed commit": "e1d66c9e15e2ceff87e88955c815f8f980c2de16", "Url": "https://api.github.com/repos/pedrobmarin/bigbluebutton", "Date": "2015-03-18T17:51:40Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (com.helger.commons.system.JavaVersionHelper.s_aLogger.isDebugEnabled()) com.helger.commons.system.JavaVersionHelper.s_aLogger.debug((((((\"Java version '\" + (com.helger.commons.system.SystemProperties.getJavaVersion())) + \"' split into MAJOR=\") + (com.helger.commons.system.JavaVersionHelper.JAVA_MAJOR_VERSION)) + \" and MINOR=\") + (com.helger.commons.system.JavaVersionHelper.JAVA_MINOR_VERSION)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/632/buggy-version/ph-commons.src.main.java.com.helger.commons.system.JavaVersionHelper.java", "BodyUseAPI": [], "Fixed commit": "8a8b2ab0476540380d130c70362a10cabd3c90d1", "Url": "https://api.github.com/repos/phax/ph-commons", "Date": "2017-08-11T21:56:15Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i > j) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2041/buggy-version/src.algorithms.sortings.QuickSorting.java", "BodyUseAPI": [], "Fixed commit": "230251ba770944ede6e23f4af86280b4f6e2507c", "Url": "https://api.github.com/repos/QinJiangbo/Algorithms", "Date": "2017-01-31T16:03:16Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.View.getTag()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (viewData.containsExpenses) { tv2.setVisibility(View.INVISIBLE); if (!isOutOfMonth) { tv1.setTextColor(android.support.v4.content.ContextCompat.getColor(context, R.color.primary_text)); tv2.setTextColor(android.support.v4.content.ContextCompat.getColor(context, R.color.secondary_text)); } viewData.containsExpenses = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/6076/buggy-version/Android.EasyBudget.app.src.main.java.com.benoitletondor.easybudget.view.main.calendar.CalendarGridAdapter.java", "BodyUseAPI": [], "Fixed commit": "3aa59784bfff5bfbd424fc4b73aa187616217480", "Url": "https://api.github.com/repos/benoitletondor/EasyBudget", "Date": "2015-08-30T22:01:09Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.graphics.BitmapFactory.decodeStream(java.io.InputStream)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (bitmap != null) { avatarService.get().mXmppConnectionService.getBitmapCache().put(url, bitmap); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/4098/buggy-version/src.main.java.eu.siacs.conversations.services.AvatarService.java", "BodyUseAPI": ["avatarService.get().mXmppConnectionService.getBitmapCache().put(java.lang.String,android.graphics.Bitmap)"], "Fixed commit": "5d4c03bad657b9e222011b88d68de9db18566ce3", "Url": "https://api.github.com/repos/spreedbox/Spreedbox-Android", "Date": "2017-07-07T04:50:54Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(fibFile.exists())) { java.lang.System.out.println((\"N'existe pas: \" + fibFile)); java.lang.System.exit((-1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/3644/buggy-version/gina-core.src.main.java.org.openflexo.fib.FIBLibrary.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "5d34bb3cc98cec0685207a968517fc46d949d5a6", "Url": "https://api.github.com/repos/openflexo-team/gina", "Date": "2014-01-17T17:12:23Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (refBuilder != null) { ref = builderRef.getRef(); builder = refBuilder; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/3285/buggy-version/camel-core.src.main.java.org.apache.camel.management.DefaultManagementNamingStrategy.java", "BodyUseAPI": [], "Fixed commit": "ba77a9967546ced48dbb2ecfd38ecfa5937f9646", "Url": "https://api.github.com/repos/chanakaudaya/camel", "Date": "2015-09-25T12:45:23Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.camel.builder.ErrorHandlerBuilderRef.lookupErrorHandlerBuilder(org.apache.camel.spi.RouteContext,builderRef.getRef())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (refBuilder != null) { builder = refBuilder; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/3285/buggy-version/camel-core.src.main.java.org.apache.camel.management.DefaultManagementNamingStrategy.java", "BodyUseAPI": [], "Fixed commit": "ba77a9967546ced48dbb2ecfd38ecfa5937f9646", "Url": "https://api.github.com/repos/chanakaudaya/camel", "Date": "2015-09-25T12:45:23Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!exists) { java.lang.String userDir = java.lang.System.getProperty(\"user.dir\"); if (!(new java.io.File(((userDir + (java.io.File.separator)) + filename)).exists())) { throw new java.io.FileNotFoundException(((((((\"File \" + filename) + \" and \") + userDir) + (java.io.File.separator)) + filename) + \" doesn't exist\")); }else { filename = userDir + filename; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2178/buggy-version/src.main.java.it.unibo.lmc.pjdbc.PrologConnection.java", "BodyUseAPI": [], "Fixed commit": "b22baa0b44601ee45b9c38157a1bd4723e0301b4", "Url": "https://api.github.com/repos/yoghi/pjdbc", "Date": "2008-02-16T02:45:27Z"},
{"Line": "=>871", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["agis.ps.path.InternalPath.getCnt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (diGraph.isDivergenceVertex(c)) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/4258/buggy-version/src.agis.ps.util.PathBuilder.java", "BodyUseAPI": [], "Fixed commit": "70d523f814202906f2981eabc9ebc3683eb21ecc", "Url": "https://api.github.com/repos/shingocat/lrscaf", "Date": "2017-01-06T08:57:45Z"},
{"Line": "=>6", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (periodValue.equals(\"\")) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/8556/buggy-version/app.src.main.java.com.gmail.jorgegilcavazos.ballislife.Utils.Utilities.java", "BodyUseAPI": [], "Fixed commit": "93ce7aae420575e5d9a4c25ed67d90866413598f", "Url": "https://api.github.com/repos/jorgegil96/All-NBA", "Date": "2016-10-23T02:38:14Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(encoderSwitch.get())) { rateGoal = clamp(rateGoal, 0, 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/5034/buggy-version/src.org.usfirst.frc.team4624.robot.subsystems.Forklift.java", "BodyUseAPI": [], "Fixed commit": "c917c75ac59cfd73ae98397f4842366364f4d0b7", "Url": "https://api.github.com/repos/owatonnarobotics/2015RobotCode", "Date": "2015-03-19T20:16:21Z"},
{"Line": "=>471", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (i == null) { i = com.afforess.minecartmaniacore.world.Item.getItem(item.getTypeId(), (-1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/4295/buggy-version/src.com.afforess.minecartmaniacore.world.Item.java", "BodyUseAPI": [], "Fixed commit": "41ca53c1abc70711ecd8ddb7cb3bb8342bff3d83", "Url": "https://api.github.com/repos/N3X15/MinecartMania", "Date": "2011-12-07T11:06:31Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (sentinelPosition > position) { if (sentinel <= temp) { java.lang.System.out.println((((\"index1 is \" + position) + \", index2 is \") + sentinelPosition)); }else { java.lang.System.out.println((((\"index1 is \" + sentinelPosition) + \", index2 is \") + position)); } }else { java.lang.System.out.println(\"repeated element\"); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/3477/buggy-version/src.tutorial.array.TwoSum.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)", "java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "105ad6ab886d18d66726ccd30f2e6b55f5996a73", "Url": "https://api.github.com/repos/LeoChao1018/leetcode_solution", "Date": "2017-08-23T06:47:29Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.res.TypedArray.getDrawable(R.styleable.MultiLayout_loading_indicator)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (loading != null) { loadingDrawable = loading; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/8583/buggy-version/multi-layout.src.main.java.com.excelbkk.pong.multilayout.MultiLayout.java", "BodyUseAPI": [], "Fixed commit": "f32cfed2d2f9fd03c09c72207a72c22a71771384", "Url": "https://api.github.com/repos/mefuot/MultiLayout", "Date": "2017-08-16T04:45:46Z"},
{"Line": "=>351", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tree.chTree[i]) != null) queue.add(new memoryindex.QuadTree.NNEntry(tree.chTree[i], query));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2123/buggy-version/src.memoryindex.QuadTree.java", "BodyUseAPI": ["java.util.PriorityQueue<memoryindex.QuadTree.NNEntry>.add(memoryindex.QuadTree.NNEntry)"], "Fixed commit": "40cac9457689c7173dde1493d86d7e00402a224c", "Url": "https://api.github.com/repos/topskychen/myLibrary", "Date": "2014-07-20T14:05:13Z"},
{"Line": "=>478", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((gaRow.get(0).equals(this.source)) && (gaRow.get(1).equals(this.medium))) && (gaRow.get(2).equals(this.campaign))) && (gaRow.get(3).equals(this.adContent))) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/5585/buggy-version/src.main.java.DataAppCode.DDRecord.java", "BodyUseAPI": [], "Fixed commit": "ebb70bbc587ed449284ade9d435fa65b06981c97", "Url": "https://api.github.com/repos/crgrass/analytics-cmdline-sample", "Date": "2015-09-09T20:04:36Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (queryType == 7) { gaData = com.google.api.services.samples.analytics.cmdline.GACall.executeTwitterBehaviorQuery(analytics, profileId, testDates); }else if (queryType == 8) { gaData = com.google.api.services.samples.analytics.cmdline.GACall.executeMasterDigitalBehaviorQuery(analytics, profileId, testDates); }else { java.lang.System.out.println(\"Error: queryType value is not valid\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/5585/buggy-version/src.main.java.com.google.api.services.samples.analytics.cmdline.GACall.java", "BodyUseAPI": [], "Fixed commit": "ebb70bbc587ed449284ade9d435fa65b06981c97", "Url": "https://api.github.com/repos/crgrass/analytics-cmdline-sample", "Date": "2015-09-09T20:04:36Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (medium.equals(\"Hulu\")) { adContent = \"SAL_V1\"; }else if ((campaign.equals(\"FY2016_Undergrad\")) || (campaign.equals(\"Fy2016_Degree_Completion\"))) { adContent = \"Undergrad_SAL_V1\"; }else if (campaign.equals(\"FY2016_Graduate\")) { adContent = \"Graduate_SAL_V1\"; }else { java.lang.System.out.println(\"Adcontent could not be found\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/5585/buggy-version/src.main.java.DataAppCode.importUtils.java", "BodyUseAPI": [], "Fixed commit": "ebb70bbc587ed449284ade9d435fa65b06981c97", "Url": "https://api.github.com/repos/crgrass/analytics-cmdline-sample", "Date": "2015-09-09T20:04:36Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["items.get(0).getCause().getSkill()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(skill.getType().containsTag(SkillTag.\u6297\u4e0d\u5c48))) { ui.blockSkill(attacker, victim, skill, attackSkill); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/1169/buggy-version/workspace.CardFantasyCore.src.cfvbaibai.cardfantasy.engine.skill.Unbending.java", "BodyUseAPI": ["cfvbaibai.cardfantasy.GameUI.blockSkill(cfvbaibai.cardfantasy.engine.EntityInfo,cfvbaibai.cardfantasy.engine.CardInfo,cfvbaibai.cardfantasy.data.Skill,cfvbaibai.cardfantasy.data.Skill)"], "Fixed commit": "f3bae967b9439bc0c500be8b30b8493e0b1b6e6f", "Url": "https://api.github.com/repos/cfvbaibai/CardFantasy", "Date": "2015-01-03T18:09:47Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(associatedState.equals(AnimationState.RUNNING))) { currentFrame = 0; frameCounter = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/606/buggy-version/src.GameObject.Animation.Animation.java", "BodyUseAPI": [], "Fixed commit": "20dd02550c039e4e22d1c3fec63ca8435a134d32", "Url": "https://api.github.com/repos/Immortalsun/TheShadeGame", "Date": "2016-04-06T17:01:49Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((friends) == null) || (friends.isEmpty())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/8277/buggy-version/server.src.main.java.com.project.user.User.java", "BodyUseAPI": [], "Fixed commit": "705e5944bdb912f1264cd9c0311b910996610a97", "Url": "https://api.github.com/repos/yarlaxle/friend-localizator", "Date": "2017-05-18T16:25:36Z"},
{"Line": "=>468", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (file.getName().endsWith(ignoreSuffix)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/7935/buggy-version/external.storm-hdfs.src.main.java.org.apache.storm.hdfs.spout.HdfsSpout.java", "BodyUseAPI": [], "Fixed commit": "92c3d3e800bef9b2597e8995d8cb11d183101228", "Url": "https://api.github.com/repos/satishd/storm", "Date": "2015-12-09T23:13:08Z"},
{"Line": "=>347", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (conf.containsKey(Configs.IGNORE_SUFFIX)) { this.ignoreSuffix = conf.get(Configs.IGNORE_SUFFIX).toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/7935/buggy-version/external.storm-hdfs.src.main.java.org.apache.storm.hdfs.spout.HdfsSpout.java", "BodyUseAPI": ["java.util.Map.get(Configs.IGNORE_SUFFIX)", "java.lang.Object.toString()"], "Fixed commit": "92c3d3e800bef9b2597e8995d8cb11d183101228", "Url": "https://api.github.com/repos/satishd/storm", "Date": "2015-12-09T23:13:08Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isInEditMode())) { mDisplayOrientationDetector.enable((android.support.v4.view.ViewCompat.isAttachedToWindow(this) ? android.support.v4.hardware.display.DisplayManagerCompat.getInstance(getContext()).getDisplay(Display.DEFAULT_DISPLAY) : null)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/3170/buggy-version/camerakit.src.main.java.com.flurgle.camerakit.CameraView.java", "BodyUseAPI": [], "Fixed commit": "058dec6b6306b8c835489abbb4a4210a9972c658", "Url": "https://api.github.com/repos/bajicdusko/CameraKit-Android", "Date": "2017-05-26T14:51:38Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(isInEditMode())) { mDisplayOrientationDetector = new com.flurgle.camerakit.DisplayOrientationDetector(context) { @java.lang.Override public void onDisplayOrientationChanged(int displayOrientation) { mCameraImpl.setDisplayOrientation(displayOrientation); mPreviewImpl.setDisplayOrientation(displayOrientation); } }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/3170/buggy-version/camerakit.src.main.java.com.flurgle.camerakit.CameraView.java", "BodyUseAPI": [], "Fixed commit": "058dec6b6306b8c835489abbb4a4210a9972c658", "Url": "https://api.github.com/repos/bajicdusko/CameraKit-Android", "Date": "2017-05-26T14:51:38Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (chicagoMessage != null) { if (futureMap.containsKey(chicagoMessage.getId())) { if (chicagoMessage.getSuccess()) { futureMap.get(chicagoMessage.getId()).set(chicagoMessage.getVal()); }else { futureMap.get(chicagoMessage.getId()).setException(new com.xjeffrose.chicago.client.ChicagoClientException(\"Request Failed\")); } futureMap.remove(chicagoMessage.getId()); }else { } }else { com.xjeffrose.chicago.client.ChicagoClientHandler.log.error((\"Recieved Null response from server for: \" + ctx)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/4516/buggy-version/src.main.java.com.xjeffrose.chicago.client.ChicagoClientHandler.java", "BodyUseAPI": ["java.util.Map<java.util.UUID, com.google.common.util.concurrent.SettableFuture<byte[]>>.get(chicagoMessage.getId())", "java.util.Map<java.util.UUID, com.google.common.util.concurrent.SettableFuture<byte[]>>.get(chicagoMessage.getId())", "com.xjeffrose.chicago.ChicagoMessage.getId()", "com.xjeffrose.chicago.ChicagoMessage.getId()", "com.xjeffrose.chicago.ChicagoMessage.getId()", "com.xjeffrose.chicago.ChicagoMessage.getVal()", "java.util.Map<java.util.UUID, com.google.common.util.concurrent.SettableFuture<byte[]>>.containsKey(chicagoMessage.getId())", "futureMap.get(chicagoMessage.getId()).setException(com.xjeffrose.chicago.client.ChicagoClientException)", "com.xjeffrose.chicago.ChicagoMessage.getId()", "java.util.Map<java.util.UUID, com.google.common.util.concurrent.SettableFuture<byte[]>>.remove(chicagoMessage.getId())", "futureMap.get(chicagoMessage.getId()).set(chicagoMessage.getVal())", "com.xjeffrose.chicago.ChicagoMessage.getSuccess()"], "Fixed commit": "7531ed086c87d63a0e82efadbfdb981f28ed0c29", "Url": "https://api.github.com/repos/xjdr/chicago", "Date": "2016-07-30T03:40:05Z"},
{"Line": "=>436", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((localLockingStrategy == (com.orientechnologies.orient.core.storage.OStorage.LOCKING_STRATEGY.KEEP_EXCLUSIVE_LOCK)) || (localLockingStrategy == (com.orientechnologies.orient.core.storage.OStorage.LOCKING_STRATEGY.KEEP_SHARED_LOCK))) noCache = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2550/buggy-version/core.src.main.java.com.orientechnologies.orient.core.sql.OCommandExecutorSQLSelect.java", "BodyUseAPI": [], "Fixed commit": "f0bd8aeec3ba17549badcbe769650bd5d5e77c8d", "Url": "https://api.github.com/repos/kowalot/orientdb", "Date": "2014-10-07T11:23:48Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (this.netMangementOrganisation.equals(organisationIdentification)) { return this.organisationRepository.findAll(); }else { final com.alliander.osgp.domain.core.entities.Organisation org = this.organisationRepository.findByOrganisationIdentification(organisationIdentification); final java.util.List<com.alliander.osgp.domain.core.entities.Organisation> organisations = new java.util.ArrayList<>(); organisations.add(org); return organisations; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/8335/buggy-version/osgp-adapter-ws-core.src.main.java.com.alliander.osgp.adapter.ws.core.application.services.DeviceManagementService.java", "BodyUseAPI": ["com.alliander.osgp.domain.core.repositories.OrganisationRepository.findByOrganisationIdentification(java.lang.String)"], "Fixed commit": "a930f0c07ed7e9a94b396fb16c0ce52ed979b8bb", "Url": "https://api.github.com/repos/OSGP/Platform", "Date": "2015-11-04T11:40:32Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSize) < 0) return mResults.size(); else return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/4933/buggy-version/wc-android.src.com.wheaton.app.SportsAdapter.java", "BodyUseAPI": [], "Fixed commit": "6e63858fd3b579aed36d77f641f91cb7a40a0840", "Url": "https://api.github.com/repos/whyohwhyamihere/wc-android", "Date": "2013-10-27T06:57:04Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((facitonVersion.compareTo(new nz.co.lolnet.james137137.FactionChat.ComparableVersion(\"1.9.999\"))) < 0) { try { nz.co.lolnet.james137137.FactionChat.FactionChat.factionsAPI = ((nz.co.lolnet.james137137.FactionChat.FactionsAPI.FactionsAPI) (java.lang.Class.forName(\"nz.co.lolnet.james137137.FactionChat.FactionsAPI.FactionsAPI_1_8\").getConstructor().newInstance())); } catch (java.lang.Exception ex) { java.util.logging.Logger.getLogger(nz.co.lolnet.james137137.FactionChat.FactionChat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); } }else if ((facitonVersion.compareTo(new nz.co.lolnet.james137137.FactionChat.ComparableVersion(\"2.3.999\"))) < 0) { try { nz.co.lolnet.james137137.FactionChat.FactionChat.factionsAPI = ((nz.co.lolnet.james137137.FactionChat.FactionsAPI.FactionsAPI) (java.lang.Class.forName(\"nz.co.lolnet.james137137.FactionChat.FactionsAPI.FactionsAPI_2_0_0\").getConstructor().newInstance())); } catch (java.lang.Exception ex) { java.util.logging.Logger.getLogger(nz.co.lolnet.james137137.FactionChat.FactionChat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); } }else if ((facitonVersion.compareTo(new nz.co.lolnet.james137137.FactionChat.ComparableVersion(\"2.6.999\"))) < 0) { try { nz.co.lolnet.james137137.FactionChat.FactionChat.factionsAPI = ((nz.co.lolnet.james137137.FactionChat.FactionsAPI.FactionsAPI) (java.lang.Class.forName(\"nz.co.lolnet.james137137.FactionChat.FactionsAPI.FactionsAPI_2_6_0\").getConstructor().newInstance())); } catch (java.lang.Exception ex) { java.util.logging.Logger.getLogger(nz.co.lolnet.james137137.FactionChat.FactionChat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); } }else if ((facitonVersion.compareTo(new nz.co.lolnet.james137137.FactionChat.ComparableVersion(\"2.7.999\"))) < 0) { try { nz.co.lolnet.james137137.FactionChat.FactionChat.factionsAPI = ((nz.co.lolnet.james137137.FactionChat.FactionsAPI.FactionsAPI) (java.lang.Class.forName(\"nz.co.lolnet.james137137.FactionChat.FactionsAPI.FactionsAPI_2_7_0\").getConstructor().newInstance())); } catch (java.lang.Exception ex) { java.util.logging.Logger.getLogger(nz.co.lolnet.james137137.FactionChat.FactionChat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); } }else if ((facitonVersion.compareTo(new nz.co.lolnet.james137137.FactionChat.ComparableVersion(\"2.8.999\"))) < 0) { try { nz.co.lolnet.james137137.FactionChat.FactionChat.factionsAPI = ((nz.co.lolnet.james137137.FactionChat.FactionsAPI.FactionsAPI) (java.lang.Class.forName(\"nz.co.lolnet.james137137.FactionChat.FactionsAPI.FactionsAPI_2_8_0\").getConstructor().newInstance())); } catch (java.lang.Exception ex) { java.util.logging.Logger.getLogger(nz.co.lolnet.james137137.FactionChat.FactionChat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); } }else if ((facitonVersion.compareTo(new nz.co.lolnet.james137137.FactionChat.ComparableVersion(\"2.9.999\"))) < 0) { try { nz.co.lolnet.james137137.FactionChat.FactionChat.factionsAPI = ((nz.co.lolnet.james137137.FactionChat.FactionsAPI.FactionsAPI) (java.lang.Class.forName(\"nz.co.lolnet.james137137.FactionChat.FactionsAPI.FactionsAPI_2_9_0\").getConstructor().newInstance())); } catch (java.lang.Exception ex) { java.util.logging.Logger.getLogger(nz.co.lolnet.james137137.FactionChat.FactionChat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); } }else if ((facitonVersion.compareTo(new nz.co.lolnet.james137137.FactionChat.ComparableVersion(\"2.10.999\"))) < 0) { try { nz.co.lolnet.james137137.FactionChat.FactionChat.factionsAPI = ((nz.co.lolnet.james137137.FactionChat.FactionsAPI.FactionsAPI) (java.lang.Class.forName(\"nz.co.lolnet.james137137.FactionChat.FactionsAPI.FactionsAPI_2_10_0\").getConstructor().newInstance())); } catch (java.lang.Exception ex) { java.util.logging.Logger.getLogger(nz.co.lolnet.james137137.FactionChat.FactionChat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); } }else { nz.co.lolnet.james137137.FactionChat.FactionChat.log.warning(((\"[FactionChat]: This version of FactionChat might \" + (\"not support the latest factions, please update FactionChat;\" + \" if there isn't one advailble nag james137137. Your version is: \")) + facitonVersion)); try { nz.co.lolnet.james137137.FactionChat.FactionChat.factionsAPI = ((nz.co.lolnet.james137137.FactionChat.FactionsAPI.FactionsAPI) (java.lang.Class.forName(\"nz.co.lolnet.james137137.FactionChat.FactionsAPI.FactionsAPI_2_10_0\").getConstructor().newInstance())); } catch (java.lang.Exception ex) { java.util.logging.Logger.getLogger(nz.co.lolnet.james137137.FactionChat.FactionChat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2387/buggy-version/src.main.java.nz.co.lolnet.james137137.FactionChat.FactionChat.java", "BodyUseAPI": ["nz.co.lolnet.james137137.FactionChat.ComparableVersion.compareTo(nz.co.lolnet.james137137.FactionChat.ComparableVersion)", "nz.co.lolnet.james137137.FactionChat.ComparableVersion.compareTo(nz.co.lolnet.james137137.FactionChat.ComparableVersion)", "nz.co.lolnet.james137137.FactionChat.ComparableVersion.compareTo(nz.co.lolnet.james137137.FactionChat.ComparableVersion)", "nz.co.lolnet.james137137.FactionChat.ComparableVersion.compareTo(nz.co.lolnet.james137137.FactionChat.ComparableVersion)", "nz.co.lolnet.james137137.FactionChat.ComparableVersion.compareTo(nz.co.lolnet.james137137.FactionChat.ComparableVersion)", "nz.co.lolnet.james137137.FactionChat.ComparableVersion.compareTo(nz.co.lolnet.james137137.FactionChat.ComparableVersion)", "java.util.logging.Logger.warning(((\"[FactionChat]: This version of FactionChat might \" + (\"not support the latest factions, please update FactionChat;\" + \" if there isn't one advailble nag james137137. Your version is: \")) + facitonVersion))"], "Fixed commit": "ec205e3c93aa6968c95f30928ff87b751cdeac17", "Url": "https://api.github.com/repos/James137137/FactionChat", "Date": "2017-03-21T06:08:28Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((out) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/5354/buggy-version/ARE.components.actuator.linewriter.src.main.java.eu.asterics.component.actuator.linewriter.LineWriterInstance.java", "BodyUseAPI": [], "Fixed commit": "6ae643e5332e4ebba4578ad059f47a6550dc00ff", "Url": "https://api.github.com/repos/asterics/AsTeRICS", "Date": "2015-05-26T17:45:01Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (null == (field.getAnnotation(com.tts.android.mybatic.bean.DisabledForSql.class))) { this.voFields.add(field); this.databaseFields.put(field.getName(), underscoreName(field.getName())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/8094/buggy-version/needCopyJavaSourceFile.android.BeanPropertyHolder.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)", "java.lang.reflect.Field.getName()", "java.lang.reflect.Field.getName()", "java.util.List<java.lang.reflect.Field>.add(java.lang.reflect.Field)", "com.tts.android.mybatic.bean.BeanPropertyHolder<T>.underscoreName(java.lang.String)"], "Fixed commit": "61e90614b405b4c9c4398188be00920797418cde", "Url": "https://api.github.com/repos/SvenOu/SqlCodeGenerator", "Date": "2017-12-15T08:48:41Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.redhat.ceylon.model.typechecker.model.Scope.getContainer()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((container != null) && (com.redhat.ceylon.model.typechecker.model.ModelUtil.isLocalNotInitializerScope(container))) { local(container); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/6124/buggy-version/src.com.redhat.ceylon.compiler.java.codegen.Naming.java", "BodyUseAPI": ["com.redhat.ceylon.compiler.java.codegen.Naming.LocalIdVisitor.local(com.redhat.ceylon.model.typechecker.model.Scope)"], "Fixed commit": "c7853cfe0da0932ec3fad19de7322bbcc0f6c38b", "Url": "https://api.github.com/repos/ceylon/ceylon-compiler", "Date": "2015-08-27T14:04:02Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(java.lang.Character.isLetterOrDigit(nameOfAcceptStates.charAt(0)))) || (nameOfAcceptStates.isEmpty())) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/4870/buggy-version/src.Parse.java", "BodyUseAPI": [], "Fixed commit": "c3f7744c0974be28027aa02f8f718113c283a06e", "Url": "https://api.github.com/repos/DSLewis22/DFA_Builder", "Date": "2015-12-01T15:59:43Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (inputArray[i].isEmpty()) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/4870/buggy-version/src.DFA.java", "BodyUseAPI": [], "Fixed commit": "c3f7744c0974be28027aa02f8f718113c283a06e", "Url": "https://api.github.com/repos/DSLewis22/DFA_Builder", "Date": "2015-12-01T15:59:43Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.support.v7.widget.RecyclerView.getItemAnimator()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (itemAnimator instanceof android.support.v7.widget.SimpleItemAnimator) { ((android.support.v7.widget.SimpleItemAnimator) (itemAnimator)).setSupportsChangeAnimations(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/6621/buggy-version/app.src.main.java.geeksammao.bingyan.net.mydownloader.ui.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "7dfb6d458c2047d4cc89199bfb67feced3d4d70c", "Url": "https://api.github.com/repos/geeksammao/MultiThreadDownloader", "Date": "2016-02-20T16:22:45Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!requiredMove) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/786/buggy-version/app.src.main.java.com.intel.samples.russiancheckers.ChessBoardView.java", "BodyUseAPI": [], "Fixed commit": "e34c2a9cdbb5e8b37ca60f701889c70439ea1e2e", "Url": "https://api.github.com/repos/echuraev/RussianCheckers", "Date": "2015-08-20T15:37:51Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.tree.TreePath.getLastPathComponent()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((lastPathComponent.getData()) != null) { if (lastPathComponent.getData().getClass().equals(de.dfki.vsm.model.scenescript.SceneGroup.class)) { java.lang.String sceneLanguageSelect = ((de.dfki.vsm.editor.TreeEntry) (parentPath.getLastPathComponent())).getText(); de.dfki.vsm.model.scenescript.SceneGroup selectedScene = ((de.dfki.vsm.model.scenescript.SceneGroup) (((de.dfki.vsm.editor.TreeEntry) (path.getLastPathComponent())).getData())); launchSceneSelectedEvent(selectedScene, sceneLanguageSelect); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/462/buggy-version/src.de.dfki.vsm.editor.project.sceneflow.elements.SceneFlowElementPanel.java", "BodyUseAPI": ["lastPathComponent.getData().getClass()", "lastPathComponent.getData().getClass().equals(java.lang.Class)", "de.dfki.vsm.editor.TreeEntry.getData()"], "Fixed commit": "ee8a557c32fa5c791c4e5271369580c3fb99985e", "Url": "https://api.github.com/repos/SceneMaker/VisualSceneMaker", "Date": "2015-10-10T22:10:58Z"},
{"Line": "=>505", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((objChatRooms.get(i).usernames.size()) == 0) { listmodel.removeElement(objChatRooms.get(i).returnRoomId()); objChatRooms.remove(i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/9092/buggy-version/Client.src.client.Client.java", "BodyUseAPI": ["objChatRooms.get(i).returnRoomId()", "java.util.ArrayList<client.ChatRoom>.remove(int)", "javax.swing.DefaultListModel.removeElement(objChatRooms.get(i).returnRoomId())", "java.util.ArrayList<client.ChatRoom>.get(int)"], "Fixed commit": "0e59bc555ffcf4055da3272a127ddf5168e73ec7", "Url": "https://api.github.com/repos/102-2-NMLAB-9/ChatRoom", "Date": "2014-03-20T15:09:57Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (plugin.MConfig.getMessagesInConsole()) { for (java.lang.String s : sarray) { plugin.log.info(s); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/4737/buggy-version/src.com.zavteam.plugins.messageshandler.MessagesHandler.java", "BodyUseAPI": ["plugin.log.info(java.lang.String)"], "Fixed commit": "551c50a0fd3d13447deeeed773bdedac9aa86e9d", "Url": "https://api.github.com/repos/ZavCoding/ZavAutoMessager", "Date": "2012-04-20T14:11:47Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (plugin.MConfig.getMessagesInConsole()) { for (java.lang.String s : sarray) { plugin.log.info(s); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/4737/buggy-version/src.com.zavteam.plugins.messageshandler.MessagesHandler.java", "BodyUseAPI": ["plugin.log.info(java.lang.String)"], "Fixed commit": "551c50a0fd3d13447deeeed773bdedac9aa86e9d", "Url": "https://api.github.com/repos/ZavCoding/ZavAutoMessager", "Date": "2012-04-20T14:11:47Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((paths[i]) == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/379/buggy-version/uk.ac.diamond.sda.navigator.src.uk.ac.diamond.sda.navigator.views.FileContentProvider.java", "BodyUseAPI": [], "Fixed commit": "8075d4e50753c6090d9bd4bfadf18f5bcf4d12bc", "Url": "https://api.github.com/repos/DawnScience/scisoft-ui", "Date": "2015-03-30T15:23:01Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (paths == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/379/buggy-version/uk.ac.diamond.sda.navigator.src.uk.ac.diamond.sda.navigator.views.FileContentProvider.java", "BodyUseAPI": [], "Fixed commit": "8075d4e50753c6090d9bd4bfadf18f5bcf4d12bc", "Url": "https://api.github.com/repos/DawnScience/scisoft-ui", "Date": "2015-03-30T15:23:01Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((faultySB.length()) > 0) { sb.append(\"Icke existerande startnummer\\n\"); sb.append(generateHeader()); sb.append(faultySB); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/8377/buggy-version/src.register.model.LapCompetition.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.StringBuilder)"], "Fixed commit": "e7e7ca03ffb9a57e12c409e11ee9142f86ebdaeb", "Url": "https://api.github.com/repos/duralf2/EDA260-Team06", "Date": "2015-02-16T15:20:51Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!alreadyReported) { vulnerabilityDetected(ctx, cve); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/4656/buggy-version/src.main.java.com.redhat.victims.VictimsRule.java", "BodyUseAPI": [], "Fixed commit": "b6b7aafa1ed8de8cb8a85b1cde4b1877c5857c1d", "Url": "https://api.github.com/repos/kgreav/victims-enforcer", "Date": "2013-05-22T11:27:14Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.tinkerpop.blueprints.Vertex.getId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((graph.getVertex(id)) != null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/7259/buggy-version/bjoern-plugins.functionexport.src.FunctionExportPlugin.java", "BodyUseAPI": [], "Fixed commit": "60a941e5e0802c359ab5a3c0e09cabf97f976e72", "Url": "https://api.github.com/repos/octopus-platform/bjoern", "Date": "2016-03-15T14:44:20Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isConnected()) { java.lang.System.out.println(Constants.CONNECTION_ALREADY_ESTABLISHED); connectType = Connect.ConnectType.SUCCESS; }else { java.lang.System.out.println(Constants.CONNECT_FAILURE_NO_SESSION_ID); connectType = Connect.ConnectType.ERROR; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/7646/buggy-version/cli.src.main.java.com.vmware.bdd.cli.rest.RestClient.java", "BodyUseAPI": [], "Fixed commit": "acbcba80dd424e9fa7f57764966cfa344e1a0f32", "Url": "https://api.github.com/repos/vmware-serengeti/serengeti-ws", "Date": "2014-08-28T16:26:14Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event.hasBlock()) && ((event.getClickedBlock().getType()) == (org.bukkit.Material.SIGN))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/8110/buggy-version/src.main.java.com.fantasycraft.forgepermittor.listeners.ProtectionListener.java", "BodyUseAPI": [], "Fixed commit": "29a3bb8d3ec25e146b23101ce335234198621c87", "Url": "https://api.github.com/repos/TheFantasyCraft/Forge-Permittor", "Date": "2015-08-05T16:30:25Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((player.getWorld()) == (location.getWorld())) { if ((player.getLocation().distance(location)) > 2) { io.github.dre2n.commons.util.playerutil.PlayerUtil.secureTeleport(player, location); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/1098/buggy-version/src.main.java.io.github.dre2n.dungeonsxl.task.RespawnTask.java", "BodyUseAPI": ["player.getLocation().distance(org.bukkit.Location)", "io.github.dre2n.commons.util.playerutil.PlayerUtil.secureTeleport(org.bukkit.entity.Player,org.bukkit.Location)", "org.bukkit.entity.Player.getLocation()"], "Fixed commit": "62781f9f881629d8195dcb44a10bb341320474fc", "Url": "https://api.github.com/repos/DRE2N/DungeonsXL", "Date": "2016-05-15T16:49:20Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(columnModelDB.getColumnType().equalsIgnoreCase(columnModel.getColumnType()))) { if ((columnModel.getColumnType().equalsIgnoreCase(\"blob\")) && (android.text.TextUtils.isEmpty(columnModelDB.getColumnType()))) { }else { columnsToChangeType.add(columnModel); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/1158/buggy-version/litepal.src.main.java.org.litepal.tablemanager.Upgrader.java", "BodyUseAPI": ["org.litepal.tablemanager.model.ColumnModel.getColumnType()", "android.text.TextUtils.isEmpty(columnModelDB.getColumnType())", "java.util.List<org.litepal.tablemanager.model.ColumnModel>.add(org.litepal.tablemanager.model.ColumnModel)", "columnModel.getColumnType().equalsIgnoreCase(java.lang.String)", "org.litepal.tablemanager.model.ColumnModel.getColumnType()"], "Fixed commit": "e81b95c372e4dbd9464e70570adfe7a354f1dcca", "Url": "https://api.github.com/repos/LitePalFramework/LitePal", "Date": "2016-11-21T03:16:51Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.cattle.platform.agent.server.service.impl.AgentServiceImpl.getAgent(io.cattle.platform.eventing.model.Event)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (io.cattle.platform.agent.server.service.impl.AgentServiceImpl.REMOVED_AGENT_STATES.contains(agent.getState())) { handleError(event, io.cattle.platform.eventing.model.EventVO.replyWithException(agentEvent, io.cattle.platform.eventing.exception.AgentRemovedException.class, \"Agent is removed\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/5447/buggy-version/code.iaas.agent-server.src.main.java.io.cattle.platform.agent.server.service.impl.AgentServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "c3ab26f3d6bf434458e99e4b1bff612796923ea5", "Url": "https://api.github.com/repos/alena1108/cattle", "Date": "2016-06-09T20:35:17Z"},
{"Line": "=>310", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (invisibleProducts == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/4143/buggy-version/oscm-internal.javasrc.org.oscm.internal.usergroupmgmt.UserGroupServiceBean.java", "BodyUseAPI": [], "Fixed commit": "4f54f9e0c5debaa0b6c71ea7c66699d128f98020", "Url": "https://api.github.com/repos/servicecatalog/development", "Date": "2016-03-31T13:45:02Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getResources().getBoolean(R.bool.isTablet)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (tabletSize) { mRootView.findViewById(R.id.share_fab).setOnClickListener(new android.view.View.OnClickListener() { @java.lang.Override public void onClick(android.view.View view) { startActivity(android.content.Intent.createChooser(ShareCompat.IntentBuilder.from(getActivity()).setType(\"text/plain\").setText(\"Some sample text\").getIntent(), getString(R.string.action_share))); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/9079/buggy-version/XYZReader.src.main.java.com.example.xyzreader.ui.ArticleDetailFragment.java", "BodyUseAPI": [], "Fixed commit": "1f79d9e1a843b3cb4c1bca14886647756035a638", "Url": "https://api.github.com/repos/remonh87/Nanodegree_Material", "Date": "2017-03-05T16:30:25Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["guuber.cmu.edu.db.DBOperation.selectByUsernameAndPassword(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (user.getUserType().equals(\"Driver\")) { guuber.cmu.edu.server.Connections.addDriverConnection(user.getUsername(), connection); }else { guuber.cmu.edu.server.Connections.addPassengerConnection(user.getUsername(), connection); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/3298/buggy-version/Server.src.guuber.cmu.edu.server.ClientHandler.java", "BodyUseAPI": ["guuber.cmu.edu.server.Connections.addPassengerConnection(user.getUsername(),guuber.cmu.edu.server.Connection)", "guuber.cmu.edu.db.User.getUsername()", "guuber.cmu.edu.server.Connections.addDriverConnection(user.getUsername(),guuber.cmu.edu.server.Connection)", "guuber.cmu.edu.db.User.getUsername()"], "Fixed commit": "763bfbe27f61611866e17381286c4b61be29bdf9", "Url": "https://api.github.com/repos/helunwencser/Guuber", "Date": "2016-05-01T00:46:46Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.manalith.ircbot.plugin.tweetreader.TweetReader.TwitterUrlType.Photo.pattern.matcher(url).matches()) return org.manalith.ircbot.plugin.tweetreader.TweetReader.UrlType.PhotoURL;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/6735/buggy-version/ManalithBot.src.main.java.org.manalith.ircbot.plugin.tweetreader.TweetReader.java", "BodyUseAPI": [], "Fixed commit": "18bc9a8399f48f38d35584023a5b93ebd4a21e52", "Url": "https://api.github.com/repos/darkcircle/ManalithBot", "Date": "2014-05-10T16:42:13Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.nunnerycode.bukkit.mythicdrops.MythicDropsPlugin.getNewDropBuilder().withItemGenerationReason(ItemGenerationReason.MONSTER_SPAWN).useDurability(false).withTier(tier).build()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (itemStack == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/245/buggy-version/src.main.java.net.nunnerycode.bukkit.mythicdrops.spawning.ItemSpawningListener.java", "BodyUseAPI": [], "Fixed commit": "e77cf091bb3c54b5a8b93a8969eaab2f6a55056e", "Url": "https://api.github.com/repos/Nunnery/MythicDrops", "Date": "2014-02-17T20:18:07Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(smallerThanMachinePrecision[j])) { clone.setObjective(j, (((clone.getObjective(j)) - (minimum[j])) / ((maximum[j]) - (minimum[j])))); }else clone.setObjective(j, clone.getObjective(j));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/5767/buggy-version/MOEAFramework-2.4.src.org.moeaframework.core.indicator.Normalizer.java", "BodyUseAPI": ["org.moeaframework.core.Solution.setObjective(int,clone.getObjective(j))", "org.moeaframework.core.Solution.getObjective(int)", "org.moeaframework.core.Solution.setObjective(int,(((clone.getObjective(j)) - (minimum[j])) / ((maximum[j]) - (minimum[j]))))", "org.moeaframework.core.Solution.getObjective(int)"], "Fixed commit": "d78f36d7e426c2b73ca364a49e2fb6eda9c7d2a6", "Url": "https://api.github.com/repos/nh295/MOHEA", "Date": "2016-03-22T01:37:50Z"},
{"Line": "=>1622", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((column == null) || ((column = column.toLowerCase()).isEmpty())) || (column.equals(\"id\"))) || (column.equals(\"created_at\"))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/6534/buggy-version/src.paralaks_gmail_com.simpleorm.helper.DbHelper.java", "BodyUseAPI": [], "Fixed commit": "de8bc64a8abe48f958a7a49ec93f85057153fa97", "Url": "https://api.github.com/repos/paralaks/java-simple-orm", "Date": "2017-06-29T18:11:41Z"},
{"Line": "=>1369", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((fieldName == null) || ((fieldName = fieldName.toLowerCase()).isEmpty())) continue; else if (fieldMap.containsKey(fieldName)) try { paralaks_gmail_com.simpleorm.helper.DbHelper.FieldProperties fp = fieldMap.get(fieldName); java.lang.Object value = fieldValueMap.get(fieldName); fp.field.set(object, null); fieldCount++; if (value != null) { java.lang.String stringValue = value.toString(); java.lang.String trimmedValue = stringValue.trim(); if (fp.fieldType.equals(\"Integer\")) try { fp.field.set(object, new java.lang.Integer(trimmedValue)); } catch (java.lang.Exception e1) { fp.field.set(object, (trimmedValue.equalsIgnoreCase(\"true\") ? 1 : 0)); } else if (fp.fieldType.equals(\"String\")) fp.field.set(object, stringValue); else if ((fp.fieldType.equals(\"Date\")) && (value instanceof java.lang.String)) fp.field.set(object, DATE_FORMAT.parse(trimmedValue)); else if (fp.fieldType.equals(\"Boolean\")) try { fp.field.set(object, java.lang.Boolean.parseBoolean(trimmedValue)); } catch (java.lang.Exception e1) { fp.field.set(object, trimmedValue.equalsIgnoreCase(\"true\")); } else fp.field.set(object, value); } } catch (java.lang.Exception e) { paralaks_gmail_com.simpleorm.helper.DbHelper.LOGGER.severe(e.getStackTrace().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/6534/buggy-version/src.paralaks_gmail_com.simpleorm.helper.DbHelper.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, paralaks_gmail_com.simpleorm.helper.DbHelper.FieldProperties>.get(java.lang.String)", "java.util.HashMap<java.lang.String, paralaks_gmail_com.simpleorm.helper.DbHelper.FieldProperties>.containsKey(java.lang.String)", "java.util.HashMap<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Fixed commit": "de8bc64a8abe48f958a7a49ec93f85057153fa97", "Url": "https://api.github.com/repos/paralaks/java-simple-orm", "Date": "2017-06-29T18:11:41Z"},
{"Line": "=>947", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((fp.fieldName.equals(\"id\")) && (!(object.fieldWas(\"id\", null)))) && (object.fieldChanged(\"id\"))) values.put(\"id\", object.getOldValue(\"id\")); else values.put(fp.fieldName, fp.field.get(object));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/6534/buggy-version/src.paralaks_gmail_com.simpleorm.helper.DbHelper.java", "BodyUseAPI": ["java.lang.reflect.Field.get(T)", "java.util.HashMap<java.lang.String, java.lang.Object>.put(java.lang.String,object.getOldValue(\"id\"))", "T.getOldValue(java.lang.String)", "java.util.HashMap<java.lang.String, java.lang.Object>.put(java.lang.String,java.lang.Object)"], "Fixed commit": "de8bc64a8abe48f958a7a49ec93f85057153fa97", "Url": "https://api.github.com/repos/paralaks/java-simple-orm", "Date": "2017-06-29T18:11:41Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState == null) { editText.setText(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2184/buggy-version/example.src.main.java.de.mrapp.android.tabswitcher.example.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "fbc7ba72789980fc6e0f730023890f2c66975a86", "Url": "https://api.github.com/repos/michael-rapp/ChromeLikeTabSwitcher", "Date": "2017-10-02T16:49:43Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (savedInstanceState != null) { pic_id = savedInstanceState.getInt(\"pic_id\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/7725/buggy-version/A5.app.src.main.java.ipt341.zarrabi.hooman.a5.DetailFragment.java", "BodyUseAPI": ["android.os.Bundle.getInt(java.lang.String)"], "Fixed commit": "1c2ecb4679f5917fc99cc218ea8b09afbad09f63", "Url": "https://api.github.com/repos/hzarrabi/Android_Assignments_USC_ITP341", "Date": "2015-10-08T01:10:00Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (notificationId >= (oldNotificationId)) { oldNotificationId = notificationId; return originalResponse.newBuilder().body(new org.catrobat.catroid.web.ProgressResponseBody(originalResponse.body(), receiver, notificationId)).build(); }else { return originalResponse; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/4653/buggy-version/catroid.src.org.catrobat.catroid.web.ServerCalls.java", "BodyUseAPI": ["originalResponse.newBuilder().body(new org.catrobat.catroid.web.ProgressResponseBody(originalResponse.body(), receiver, notificationId)).build()", "originalResponse.newBuilder().body(org.catrobat.catroid.web.ProgressResponseBody)"], "Fixed commit": "c2fa4a2d960c525d379ae8968d3d3f24698732c1", "Url": "https://api.github.com/repos/FlorianWeissensteiner/Catroid", "Date": "2015-07-07T17:17:25Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((parameters.length) == 0) { return new liquibase.datatype.DatabaseDataType(database.escapeDataTypeName(\"varbinary\"), \"MAX\"); }else { return new liquibase.datatype.DatabaseDataType(database.escapeDataTypeName(\"varbinary\"), maybeMaxParam(parameters, database)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/1919/buggy-version/liquibase-core.src.main.java.liquibase.datatype.core.BlobType.java", "BodyUseAPI": ["liquibase.datatype.core.BlobType.maybeMaxParam(java.lang.Object[],liquibase.database.Database)"], "Fixed commit": "8fc28467d8372d3e67396e50a54b4fd54008eab9", "Url": "https://api.github.com/repos/NSIT/liquibase", "Date": "2016-03-15T19:28:00Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getVertices().size()) < numVertices) { throw new java.lang.IllegalArgumentException(\"There are not enough vertices in the graph\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2701/buggy-version/course_4.SocialNetwork.src.graph.SocialGraph.java", "BodyUseAPI": [], "Fixed commit": "afafe85c23304551028db4b5ed82c2cbd341a692", "Url": "https://api.github.com/repos/falkoner/OOJP", "Date": "2017-06-30T23:42:32Z"},
{"Line": "=>572", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (optParam == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/6253/buggy-version/es.alrocar.poiproxy.src.main.java.es.alrocar.poiproxy.proxy.POIProxy.java", "BodyUseAPI": [], "Fixed commit": "e7364a00a139023468d31041e307e4d9e10922a7", "Url": "https://api.github.com/repos/alrocar/POIProxy", "Date": "2016-06-27T16:04:46Z"},
{"Line": "=>343", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dC != 0) c += (dC > 0) ? 1 : -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/5526/buggy-version/src.worldBuilder.ExportDialog.java", "BodyUseAPI": [], "Fixed commit": "122193f1f5136cba8772245e100647d74bd3c292", "Url": "https://api.github.com/repos/markkampe/Java_Terrain", "Date": "2017-11-01T10:14:23Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((btnlbls[i].equals(\"\")) || (btnlbls[i].equals(null))) { btnlbls[i] = \"\" + (i + 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/568/buggy-version/app.src.main.java.bernie.tcpclient.TCPSenderActivity.java", "BodyUseAPI": [], "Fixed commit": "9ddcfe425e2e72a7c73160eb82bf84cb33957a6f", "Url": "https://api.github.com/repos/Nopx/AndroidTCPClient", "Date": "2015-01-23T15:38:11Z"},
{"Line": "=>894", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(iceUdpSocket.isClosed())) { e.printStackTrace(); fireEvent(new org.jitsi.jirecon.task.recorder.JireconTaskEvent(JireconTaskEvent.Type.RECORDER_ABORTED)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/1302/buggy-version/src.org.jitsi.jirecon.task.recorder.JireconRecorderImpl.java", "BodyUseAPI": [], "Fixed commit": "86c926879e9dafaf77b07fcd92efd0456ec75c39", "Url": "https://api.github.com/repos/jitsi/jirecon", "Date": "2014-08-11T15:17:42Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (snackBoxItem.getItemDetail_0().getItemByItem().getHealthyItem()) { currentSaving = currentSaving + ((snackBoxItem.getItemDetail_0().getPrice().doubleValue()) * (za.co.entelect.db.util.Constants.HEALTHY_SNACK_DISCOUNT)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/5058/buggy-version/Components.services.src.main.java.za.co.entelect.services.impl.CreditServiceImpl.java", "BodyUseAPI": ["snackBoxItem.getItemDetail_0().getPrice()", "snackBoxItem.getItemDetail_0().getPrice().doubleValue()", "za.co.entelect.db.domain.SnackBoxMemberItemEntity.getItemDetail_0()"], "Fixed commit": "14d9680f2f3ec289c16c09710e38c5c7b0a93bbd", "Url": "https://api.github.com/repos/candiceswarts/SnackBox", "Date": "2016-11-13T13:55:04Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.util.MathHelper.floor_double(mc.thePlayer.posY)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (posY > 0) { blockLight = chunk.getSavedLightValue(EnumSkyBlock.Block, (posX & 15), posY, (posZ & 15)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/3380/buggy-version/maxpowa.tukmc.GuiIngame.java", "BodyUseAPI": ["net.minecraft.world.chunk.Chunk.getSavedLightValue(EnumSkyBlock.Block,int,int,int)"], "Fixed commit": "8f08b2af55806f70ab8ef6518b7b48ca2b6f4eb9", "Url": "https://api.github.com/repos/maxpowa/tukmc", "Date": "2013-04-23T02:28:31Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (lpparam.packageName.equals(com.trypto.android.xbettercam.Constants.APP_PACKAGE_CAMERA)) { de.robv.android.xposed.XposedHelpers.findAndHookMethod(\"com.sonyericsson.android.camera.CameraActivity\", lpparam.classLoader, \"onResume\", new de.robv.android.xposed.XC_MethodHook() { @java.lang.Override protected void beforeHookedMethod(de.robv.android.xposed.XC_MethodHook.MethodHookParam param) throws java.lang.Throwable { de.robv.android.xposed.XposedBridge.log(\"Xglauncher: Entering CameraActivity.onResume()...\"); prefs.reload(); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/5739/buggy-version/src.com.trypto.android.xbettercam.XBetterCam.java", "BodyUseAPI": ["de.robv.android.xposed.XposedHelpers.findAndHookMethod(java.lang.String,lpparam.classLoader,java.lang.String,de.robv.android.xposed.XC_MethodHook)"], "Fixed commit": "09d80d95af699389a8d3e14cddfbdf3f472ddb2c", "Url": "https://api.github.com/repos/tryptophane/xperia-camera-enhancements", "Date": "2015-12-02T12:35:18Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (iocLoaders.contains(loader)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/8197/buggy-version/src.org.nutz.ioc.loader.combo.ComboIocLoader.java", "BodyUseAPI": [], "Fixed commit": "aeafd94ec08492dfdc9a91432f49ca5ceec82004", "Url": "https://api.github.com/repos/ywjno/nutz", "Date": "2015-04-08T08:52:00Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (AbstractPortalAction.VIRTUAL_ROOT_CODE.equals(treeNode.getCode())) { return ((org.entando.entando.apsadmin.portal.node.PageTreeNodeWrapper) (treeNode)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2137/buggy-version/admin-console.src.main.java.com.agiletec.apsadmin.portal.helper.AbstractPageActionHelper.java", "BodyUseAPI": [], "Fixed commit": "a4a4b7b83d90af54a192b700e7acce54884393df", "Url": "https://api.github.com/repos/entando/entando-core", "Date": "2017-05-28T21:17:34Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((cls.equals(int.class)) || (cls.equals(java.lang.Integer.class))) { com.jackwink.tweakable.Tweakable.mSharedPreferences.edit().putInt(preferenceKey, bundle.getInt(AbstractTweakableValue.BUNDLE_DEFAULT_VALUE_KEY)).commit(); }else if (cls.equals(java.lang.String.class)) { com.jackwink.tweakable.Tweakable.mSharedPreferences.edit().putString(preferenceKey, bundle.getString(AbstractTweakableValue.BUNDLE_DEFAULT_VALUE_KEY)).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/7418/buggy-version/Tweakable.tweakable-annotations.src.main.java.com.jackwink.tweakable.Tweakable.java", "BodyUseAPI": ["java.lang.Class.equals(java.lang.Class)"], "Fixed commit": "ce8cee5870f403c716e41d9848889e52097677b3", "Url": "https://api.github.com/repos/JackWink/tweakable", "Date": "2015-06-28T05:03:23Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.os.Bundle.getString(AbstractTweakableValue.BUNDLE_TYPEINFO_KEY)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (typeInfo.equals(int.class.getName())) { cls = int.class; }else { android.util.Log.e(com.jackwink.tweakable.Tweakable.TAG, (\"Class not found: \" + typeInfo)); e.printStackTrace(); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/7418/buggy-version/Tweakable.tweakable-annotations.src.main.java.com.jackwink.tweakable.Tweakable.java", "BodyUseAPI": ["android.util.Log.e(java.lang.String,java.lang.String)"], "Fixed commit": "ce8cee5870f403c716e41d9848889e52097677b3", "Url": "https://api.github.com/repos/JackWink/tweakable", "Date": "2015-06-28T05:03:23Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) < 16) { com.eleybourn.bookcatalogue.CatalogueDBAdapter dbh = new com.eleybourn.bookcatalogue.CatalogueDBAdapter(this); dbh.open(); dbh.getDb().getUnderlyingDatabase().acquireReference(); dbh.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/1090/buggy-version/src.com.eleybourn.bookcatalogue.BookCatalogueApp.java", "BodyUseAPI": [], "Fixed commit": "a68cb50339c01692160f4cacd91c56463975e632", "Url": "https://api.github.com/repos/eleybourn/Book-Catalogue", "Date": "2012-12-14T12:23:43Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["((android.widget.Spinner) (v)).getSelectedItem().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(java.util.Arrays.asList(this.sSpinnerNames).contains(selection))) { mUserInfoEditor.putString(name, selection); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/4203/buggy-version/PHC-Android.PHC.src.main.java.phc.android.OnContinueClickListener.java", "BodyUseAPI": ["phc.android.OnContinueClickListener.putString(java.lang.String,java.lang.String)"], "Fixed commit": "ff11681be5ccf4ee4cba19672d5759c6f840f10f", "Url": "https://api.github.com/repos/calblueprint/PHC", "Date": "2014-12-12T18:43:49Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (href.startsWith(\"file:///\")) { href = href.substring(7); }else if (href.startsWith(\"file:/\")) { href = href.substring(5); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/5441/buggy-version/src.com.xmlcalabash.io.PipeLogger.java", "BodyUseAPI": [], "Fixed commit": "e44b965d5043c83e166790e46eaf8648a42c4b38", "Url": "https://api.github.com/repos/rdeltour/xmlcalabash1", "Date": "2012-09-14T17:14:28Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mGoals.isEmpty()) { if (mShowLoading) { if (mLoadError.isEmpty()) { mListener.loadMore(); }else { rawHolder.itemView.findViewById(R.id.progress_progress).setVisibility(View.GONE); android.widget.TextView error = ((android.widget.TextView) (rawHolder.itemView.findViewById(R.id.progress_error))); error.setVisibility(View.VISIBLE); error.setText(mLoadError); } } }else { ((org.tndata.android.compass.adapter.ChooseGoalsAdapter.GoalsViewHolder) (rawHolder)).bind(mCategory); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/1777/buggy-version/src.main.java.org.tndata.android.compass.adapter.ChooseGoalsAdapter.java", "BodyUseAPI": [], "Fixed commit": "967b99957b9cfce6603aa91959b9cf675ed409c0", "Url": "https://api.github.com/repos/izzyalonso/android-app", "Date": "2016-02-23T18:56:33Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (newTask != null) { newTask.setDescription(Parser.CommandParser.parseDescription(newTask.getDescription())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/7/buggy-version/src.Parser.CommandParser.java", "BodyUseAPI": ["ScheduleHacks.Task.setDescription(java.lang.String)", "ScheduleHacks.Task.getDescription()", "Parser.CommandParser.parseDescription(newTask.getDescription())"], "Fixed commit": "70dc2f2c955a4d1b4e800757132f9da81af15132", "Url": "https://api.github.com/repos/cs2103jan2016-t09-2j/main", "Date": "2016-04-08T04:19:31Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (todoCurrent == null) todoCurrent = \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/4392/buggy-version/Commands.src.main.java.com.lothrazar.samscommands.command.CommandTodoList.java", "BodyUseAPI": [], "Fixed commit": "ccb1e44fad3f74cf2543bddcb033a9faf9024999", "Url": "https://api.github.com/repos/PrinceOfAmber/SamsPowerups", "Date": "2015-06-22T05:22:10Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (todoCurrent.isEmpty()) todoCurrent = message; else todoCurrent += \" \" + message;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/4392/buggy-version/Commands.src.main.java.com.lothrazar.samscommands.command.CommandTodoList.java", "BodyUseAPI": [], "Fixed commit": "ccb1e44fad3f74cf2543bddcb033a9faf9024999", "Url": "https://api.github.com/repos/PrinceOfAmber/SamsPowerups", "Date": "2015-06-22T05:22:10Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!isConnected) { android.widget.Toast.makeText(ctx, \"Make sure you are connected to the internet.\", Toast.LENGTH_LONG); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/4823/buggy-version/emotive.src.main.java.ca.pluszero.emotive.managers.NetworkManager.java", "BodyUseAPI": [], "Fixed commit": "271b7fbc5ba7a6f1ea82e5d3a7ad6073956c8154", "Url": "https://api.github.com/repos/agnanachandran/emotive", "Date": "2014-03-30T00:35:01Z"},
{"Line": "=>387", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (policyState.equals(JobState.finished)) { return com.emc.storageos.volumecontroller.impl.BiosCommandResult.createSuccessfulResult(); }else { com.emc.storageos.volumecontroller.impl.isilon.IsilonMirrorOperations._log.error(\"Replication Policy - {} can't be STARTED because policy is in {} state\", policyName, policyState); com.emc.storageos.svcs.errorhandling.model.ServiceError error = DeviceControllerErrors.isilon.jobFailed((\"doStartReplicationPolicy as : Replication Policy can't be STARTED because \" + \"policy is already in Active state\")); return com.emc.storageos.volumecontroller.impl.BiosCommandResult.createErrorResult(error); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/4938/buggy-version/controllersvc.src.main.java.com.emc.storageos.volumecontroller.impl.isilon.IsilonMirrorOperations.java", "BodyUseAPI": ["org.slf4j.Logger.error(java.lang.String,java.lang.String,com.emc.storageos.isilon.restapi.IsilonSyncPolicy.JobState)"], "Fixed commit": "dbf7d4c5c6d4b1a306c837c687dbdf721037b72c", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-08-19T09:05:23Z"},
{"Line": "=>571", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (rs != null) { rs.close(); java.sql.Statement st = rs.getStatement(); if (st != null) { st.close(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/8301/buggy-version/src.ganymede.arlut.csd.ganymede.server.DBLogPostGreSQLController.java", "BodyUseAPI": ["java.sql.ResultSet.getStatement()", "java.sql.ResultSet.close()"], "Fixed commit": "773ccca9095acc5b3dc978d9a85ac5fa37f1a3ec", "Url": "https://api.github.com/repos/jonabbey/Ganymede", "Date": "2012-04-23T17:45:16Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((server.port) == null) { server.port = 8080; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2717/buggy-version/ngrinder-starter.src.main.java.org.ngrinder.NGrinderControllerStarter.java", "BodyUseAPI": [], "Fixed commit": "48d38b2d1a62d765bafab7180f7a071e6e413a1b", "Url": "https://api.github.com/repos/nhnopensource/ngrinder", "Date": "2014-01-20T07:16:32Z"},
{"Line": "=>12", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2717/buggy-version/ngrinder-starter.src.main.java.org.ngrinder.PortAvailabilityValidator.java", "BodyUseAPI": [], "Fixed commit": "48d38b2d1a62d765bafab7180f7a071e6e413a1b", "Url": "https://api.github.com/repos/nhnopensource/ngrinder", "Date": "2014-01-20T07:16:32Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.marmalade.aRevelation.MainActivity.getCurrentFragment()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (currentFragment instanceof com.github.marmalade.aRevelation.MainMenuFragment) { super.onBackPressed(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/8403/buggy-version/src.com.github.marmalade.aRevelation.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "be5c6feaaaca44a3cc483ac9f85e1b585b91bee9", "Url": "https://api.github.com/repos/MarmaladeSky/aRevelation", "Date": "2013-10-27T21:27:14Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (file == null) { java.lang.System.err.println(net.sf.nuclearparsley.cli.AtomList.USAGE); java.lang.System.exit(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/843/buggy-version/src.main.java.net.sf.nuclearparsley.cli.AtomList.java", "BodyUseAPI": [], "Fixed commit": "83e8ab8ab3ba5fdb70cc9892c11789a916807508", "Url": "https://api.github.com/repos/yorn/nuclearparsley", "Date": "2012-12-22T00:44:26Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dexDiffMd5.equals(\"0\")) && (!(com.tencent.tinker.loader.shareutil.ShareTinkerInternals.isVmArt()))) { com.tencent.tinker.lib.util.TinkerLog.w(com.tencent.tinker.lib.patch.DexDiffPatchInternal.TAG, \"patch dex %s is only for art, just continue\", patchRealPath); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/3935/buggy-version/tinker-android.tinker-android-lib.src.main.java.com.tencent.tinker.lib.patch.DexDiffPatchInternal.java", "BodyUseAPI": [], "Fixed commit": "e4b56a3fd9733d04000fbb87b4f203d16b0da64b", "Url": "https://api.github.com/repos/yunair/tinker", "Date": "2016-11-01T06:41:51Z"},
{"Line": "=>480", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.common.base.Optional.fromNullable(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(contentType.isPresent())) return com.google.common.base.Optional.absent();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/6814/buggy-version/com.laboki.eclipse.plugin.fastopen.src.com.laboki.eclipse.plugin.fastopen.main.EditorContext.java", "BodyUseAPI": [], "Fixed commit": "b55a3fcdec3b23373fdf9450cce409525b8f1ceb", "Url": "https://api.github.com/repos/mystilleef/eclipse4-fastopen", "Date": "2015-05-01T15:20:54Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (wordsize > 1) { currentLemma += (_morpho.get(wordAfter).getLemma()) + \" \"; currentMorphoOffsetId.add(_morpho.get(wordAfter)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/4506/buggy-version/src.main.java.org.atilf.module.enrichment.lexicalResourceProjection.PhraseologyProjector.java", "BodyUseAPI": [], "Fixed commit": "c5cfb316540dde5e6dddd7d6dffcd6e6b295b2e5", "Url": "https://api.github.com/repos/simonmeoni/termith-java", "Date": "2017-06-13T10:41:47Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((QuestListView.getSelectionModel().getSelectedItem()) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/8436/buggy-version/1.SemesterProject.src.UI.GUI.QuestlogSceneController.java", "BodyUseAPI": [], "Fixed commit": "169b3773e76c8ef7058d15b464f4f076adc6344a", "Url": "https://api.github.com/repos/SduSeStGoupe25/1.Semester_project", "Date": "2017-12-06T18:34:21Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (source != null) { java.lang.Object inputValue = source.remove(targetName); if (inputValue != null) { if ((inputFunction) != null) { actionContext.setConstant(\"input\", inputValue); inputValue = org.structr.core.script.Scripting.evaluate(actionContext, null, ((\"${\" + (inputFunction)) + \"}\"), (\" virtual property \" + (sourceName))); } source.put(sourceName, inputValue); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/7191/buggy-version/structr-modules.structr-api-builder-module.src.main.java.org.structr.transform.Transformation.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,java.lang.Object)", "java.util.Map<java.lang.String, java.lang.Object>.remove(java.lang.String)"], "Fixed commit": "a5c5bd9656eacd6a379589fee8a5883a656f5f0d", "Url": "https://api.github.com/repos/structr/structr", "Date": "2017-08-29T21:33:10Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((localLibrary.getInfo(luid)) != null) { localLibrary.changeSource(luid, newSource, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/654/buggy-version/src.be.nikiroo.fanfix.reader.GuiReader.java", "BodyUseAPI": ["be.nikiroo.fanfix.library.LocalLibrary.changeSource(java.lang.String,java.lang.String,<nulltype>)"], "Fixed commit": "34eb62fc14c1f4db29e65ceb6b190811380aba7e", "Url": "https://api.github.com/repos/nikiroo/fanfix", "Date": "2017-08-06T13:45:05Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((request.routing()) != null) { boolean tokenMatch = false; for (java.lang.String type : request.types()) { try { org.apache.cassandra.dht.Token token = this.clusterService.getToken(shard.index(), type, request.routing()); if ((token != null) && (this.clusterService.tokenRangesContains(shard.tokenRanges(), token))) { tokenMatch = true; break; } } catch (java.io.IOException e) { logger.warn((((((\"Failed to parse _routing=\" + (request.routing())) + \" on \") + (shard.index())) + \".\") + type)); } } if (!tokenMatch) ignoreShard = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/4262/buggy-version/src.main.java.org.elasticsearch.action.search.type.TransportSearchTypeAction.java", "BodyUseAPI": ["org.elasticsearch.action.search.SearchRequest.types()", "org.elasticsearch.action.search.SearchRequest.routing()", "org.elasticsearch.action.search.SearchRequest.routing()", "org.elasticsearch.action.search.type.TransportSearchTypeAction.BaseAsyncAction.warn((((((\"Failed to parse _routing=\" + (request.routing())) + \" on \") + (shard.index())) + \".\") + type))", "org.elasticsearch.cluster.ClusterService.getToken(shard.index(),java.lang.String,request.routing())"], "Fixed commit": "e792f7592bfabf1d5381b38f262f2d2ee3f2c464", "Url": "https://api.github.com/repos/elassandra/elassandra", "Date": "2016-06-05T17:08:37Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!ignoreShard) { if (logger.isDebugEnabled()) { logger.debug(\"preference = [{}], searching on [{}] tokenRanges={} _routing={}\", request.preference(), shard.shortSummary(), request.tokenRanges(), request.routing()); } performFirstPhase(shardIndex, shardIt, shard); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/4262/buggy-version/src.main.java.org.elasticsearch.action.search.type.TransportSearchTypeAction.java", "BodyUseAPI": [], "Fixed commit": "e792f7592bfabf1d5381b38f262f2d2ee3f2c464", "Url": "https://api.github.com/repos/elassandra/elassandra", "Date": "2016-06-05T17:08:37Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!tokenRangesSpecified) { request.tokenRanges(shard.tokenRanges()); }else { if (this.clusterService.tokenRangesIntersec(shard.tokenRanges(), request.tokenRanges())) { break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/4262/buggy-version/src.main.java.org.elasticsearch.action.search.type.TransportSearchTypeAction.java", "BodyUseAPI": [], "Fixed commit": "e792f7592bfabf1d5381b38f262f2d2ee3f2c464", "Url": "https://api.github.com/repos/elassandra/elassandra", "Date": "2016-06-05T17:08:37Z"},
{"Line": "=>489", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event.getPointerCount()) == 2) { com.cpen321.circuitsolver.ui.draw.DrawActivity.zooming = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/7009/buggy-version/app.src.main.java.com.cpen321.circuitsolver.ui.draw.DrawActivity.java", "BodyUseAPI": [], "Fixed commit": "33b616298a7722c977c717a1720d4895a5c5aab4", "Url": "https://api.github.com/repos/Frikster/CircuitSolverApp", "Date": "2016-12-11T18:59:56Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (data == null) { data = new byte[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/758/buggy-version/exhibitor-core.src.main.java.com.netflix.exhibitor.core.index.IndexBuilder.java", "BodyUseAPI": [], "Fixed commit": "e8e044a3c232594a259241d3220220d8926e50ed", "Url": "https://api.github.com/repos/Netflix/exhibitor", "Date": "2013-02-22T18:58:36Z"},
{"Line": "=>420", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (npc != null) { player.sendMessage(((com.fullwall.Citizens.Utils.StringUtils.wrap(npc.getStrippedName())) + \" is enroute to your location!\")); npc.teleport(player.getLocation()); npc.getNPCData().setLocation(player.getLocation()); }else { player.sendMessage(MessageUtils.mustHaveNPCSelectedMessage); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/5449/buggy-version/src.com.fullwall.Citizens.Commands.CommandExecutors.BasicExecutor.java", "BodyUseAPI": ["org.bukkit.entity.Player.sendMessage(((com.fullwall.Citizens.Utils.StringUtils.wrap(npc.getStrippedName())) + \" is enroute to your location!\"))", "com.fullwall.resources.redecouverte.NPClib.HumanNPC.teleport(player.getLocation())", "npc.getNPCData().setLocation(player.getLocation())", "com.fullwall.resources.redecouverte.NPClib.HumanNPC.getStrippedName()", "com.fullwall.resources.redecouverte.NPClib.HumanNPC.getNPCData()", "com.fullwall.Citizens.Utils.StringUtils.wrap(npc.getStrippedName())"], "Fixed commit": "e04ddbfba1054e9463c8393e90c39e1bece7e130", "Url": "https://api.github.com/repos/fullwall/Citizens", "Date": "2011-06-21T14:50:55Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((statement.getAddAfterColumn()) != null) && (!(statement.getAddAfterColumn().isEmpty()))) { alterTable += (\" AFTER `\" + (statement.getAddAfterColumn())) + \"` \"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/7357/buggy-version/liquibase-core.src.main.java.liquibase.sqlgenerator.core.AddColumnGenerator.java", "BodyUseAPI": ["liquibase.statement.core.AddColumnStatement.getAddAfterColumn()"], "Fixed commit": "8851cd54b48ee6a4d5874b561386f19400ee5064", "Url": "https://api.github.com/repos/instantdelay/liquibase", "Date": "2014-09-10T14:27:49Z"},
{"Line": "=>615", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (snapshotMor != null) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2560/buggy-version/src.Tools.vmOpsTool.VMWareImpl.java", "BodyUseAPI": [], "Fixed commit": "b751291c10b6d75f2ce85d64fbca81542e178c76", "Url": "https://api.github.com/repos/Microsoft/vsts-vmware", "Date": "2016-11-28T05:04:17Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (endDate == null) { this.endDate = endDate; }else { setEndDateWithValidation(endDate); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/7578/buggy-version/Shared.src.com.google.paco.shared.model.ExperimentDAOCore.java", "BodyUseAPI": ["com.google.paco.shared.model.ExperimentDAOCore.setEndDateWithValidation(java.lang.String)"], "Fixed commit": "7823182b1ae549a6ff769c96fb8d0678afa0e143", "Url": "https://api.github.com/repos/google/paco", "Date": "2013-08-09T15:17:48Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(cMsg.getHeaders().contains(Constants.HOST))) { if (port != 80) { cMsg.getHeaders().set(Constants.HOST, ((host + \":\") + port)); }else { cMsg.getHeaders().set(Constants.HOST, host); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/4718/buggy-version/modules.ballerina-http.src.main.java.org.ballerinalang.net.http.actions.AbstractHTTPAction.java", "BodyUseAPI": ["cMsg.getHeaders().set(Constants.HOST,java.lang.String)", "org.wso2.carbon.transport.http.netty.message.HTTPCarbonMessage.getHeaders()", "cMsg.getHeaders().set(Constants.HOST,java.lang.String)", "org.wso2.carbon.transport.http.netty.message.HTTPCarbonMessage.getHeaders()"], "Fixed commit": "67c79448a1ad9abd3976ab20905db36b03405cd8", "Url": "https://api.github.com/repos/ballerina-platform/ballerina-lang", "Date": "2017-10-18T14:49:54Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<L, java.util.List<R>>.put(L,java.util.ArrayList<>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (prevList != null) { for (R value : prevList) backMap.remove(value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/1249/buggy-version/src.net.kopeph.ld31.util.OneToManyBiMap.java", "BodyUseAPI": [], "Fixed commit": "d1646283243a2481ca341632214f8b5bfa45feec", "Url": "https://api.github.com/repos/hazmatsuitor/Blockade-Runner", "Date": "2015-01-27T01:42:58Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Calendar.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (calendar.before(java.util.Calendar.getInstance())) alarm_time += (android.app.AlarmManager.INTERVAL_DAY) * 7;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/3969/buggy-version/app.src.main.java.teamqitalach.pillapp.EditActivity.java", "BodyUseAPI": [], "Fixed commit": "de7fc14e784ee11946567a00ba53b12445617c9e", "Url": "https://api.github.com/repos/Qitalach/PillApp", "Date": "2015-05-09T01:55:06Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isRequired) return new org.araqne.log.api.StringConfigType(optKey, names, descriptions, isRequired); else return new org.araqne.log.api.StringConfigType(optKey, names, descriptions, isRequired, defaultValues);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/8215/buggy-version/araqne-log-api.src.main.java.org.araqne.log.api.StringConfigTypeBuilder.java", "BodyUseAPI": [], "Fixed commit": "9979ab577ea4ad8b10c1e15c36bcdf0ca7f7720a", "Url": "https://api.github.com/repos/araqne/logdb", "Date": "2013-04-22T12:31:23Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ru.fizteh.fivt.students.adanilyak.shell.Main.intoCommandsAndArgs(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (commands.isEmpty()) { java.lang.System.err.println(\"There are no suitable commands in line\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/9246/buggy-version/src.ru.fizteh.fivt.students.ADanilyak.shell.Main.java", "BodyUseAPI": [], "Fixed commit": "66cbcaf2e0155da71ed0d2623c20563526dca780", "Url": "https://api.github.com/repos/adanilyak/fizteh-java-2013", "Date": "2013-10-12T15:16:32Z"},
{"Line": "=>337", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (optimization == null) { optimization = arg.optimization; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/7965/buggy-version/src.com.facebook.buck.apple.AppleDescriptions.java", "BodyUseAPI": [], "Fixed commit": "dad65f18af187726aa7551f55f6dba5b1712b507", "Url": "https://api.github.com/repos/robbertvanginkel/buck", "Date": "2016-11-14T17:55:23Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cache) != null) { byte[] data = cache.computeIfAbsent(absolute, this::compile); outputCss(response, data); addCacheHeaders(absolutePath, request, ((javax.servlet.http.HttpServletResponse) (response))); }else { outputCss(response, compile(absolute)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/5885/buggy-version/src.main.java.no.tornado.libsass.SassFilter.java", "BodyUseAPI": [], "Fixed commit": "5847583c4cda2857922d45520ed5908331926617", "Url": "https://api.github.com/repos/edvin/libsass-filter", "Date": "2015-08-25T08:56:04Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.cmu.model.Model.getEmployeeDAO()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((employeeDAO.match(org.genericdao.MatchArg.equals(\"username\", depositCheckFormBean.getUsername())).length) > 0) { depositCheckMessage = new edu.cmu.JSON.MessageJSON(\"The input you provided is not valid\"); return depositCheckMessage; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/9049/buggy-version/CFSWebServices.src.edu.cmu.resource.DepositCheckAction.java", "BodyUseAPI": [], "Fixed commit": "5b785fd97131b92b0c9d3e15107b40a5a9c61108", "Url": "https://api.github.com/repos/Ajinkya1993/WebServices-Task8-", "Date": "2017-02-17T22:34:07Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((errorInfos.size()) > 0) { logger.info(\"==============error information===========\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/5070/buggy-version/src.main.java.com.gsta.bigdata.etl.MRRunner.java", "BodyUseAPI": [], "Fixed commit": "25d44d08c9c172dfa2f6f5f39a04be41541556e2", "Url": "https://api.github.com/repos/styg/bumblebee-ETL", "Date": "2015-09-23T00:54:01Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((stack.size()) <= 0) { return false; }else { stack.remove(stack.get(((size()) - 1))); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/7018/buggy-version/src.com.tapia.foss.ds.Stack.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.Integer>.remove(java.lang.Integer)", "java.util.ArrayList<java.lang.Integer>.get(int)"], "Fixed commit": "c06f9f87eb11467dd5faa7fb3700bee150ee7b54", "Url": "https://api.github.com/repos/FOSSLGYS/DataVisualizer-JAVA", "Date": "2016-09-15T16:38:04Z"},
{"Line": "=>576", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["data.getAttachments().get(0).getFilename()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isEmpty(attachmentName)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/1651/buggy-version/src.main.java.org.jbei.ice.lib.bulkupload.BulkEntryCreator.java", "BodyUseAPI": [], "Fixed commit": "9efd3afae21bacec75005e5652426686566d0f44", "Url": "https://api.github.com/repos/JBEI/ice", "Date": "2017-06-20T17:43:15Z"},
{"Line": "=>580", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, java.io.InputStream>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (attachmentStream == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/1651/buggy-version/src.main.java.org.jbei.ice.lib.bulkupload.BulkEntryCreator.java", "BodyUseAPI": [], "Fixed commit": "9efd3afae21bacec75005e5652426686566d0f44", "Url": "https://api.github.com/repos/JBEI/ice", "Date": "2017-06-20T17:43:15Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mRecipes) != null) { outState.putParcelableArrayList(com.github.filipelipan.bakeryapp.modules.recipe.RecipeListFragment.LIST_KEY, mRecipes); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/7449/buggy-version/app.src.main.java.com.github.filipelipan.bakeryapp.modules.recipe.RecipeListFragment.java", "BodyUseAPI": [], "Fixed commit": "a79af32d7c4c63b6e4ba4140f34a845814ccc902", "Url": "https://api.github.com/repos/FilipeLipan/BakeryApp", "Date": "2017-11-26T01:47:46Z"},
{"Line": "=>431", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((WAVES) == null) WAVES = new java.util.HashMap<java.lang.Long, java.lang.String>();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/5625/buggy-version/funf-open-sensing-framework.src.edu.mit.media.funf.probe.builtin.EpidemicProbe.java", "BodyUseAPI": [], "Fixed commit": "45d5c36aa9af29ebd6236ca7cc021e95abf38754", "Url": "https://api.github.com/repos/OpenSensing/funf-v3", "Date": "2014-07-29T07:22:19Z"},
{"Line": "=>411", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sub.getOrcid()) != null) row.createCell(j).setCellValue(sub.getOrcid());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/6807/buggy-version/app.org.tdl.vireo.export.impl.ExcelPackagerImpl.java", "BodyUseAPI": ["org.tdl.vireo.model.Submission.getOrcid()", "row.createCell(j).setCellValue(sub.getOrcid())"], "Fixed commit": "9599d4ac5d9e1aa69ebd746b871c3b9bbab0d0ec", "Url": "https://api.github.com/repos/TexasDigitalLibrary/Vireo", "Date": "2015-02-11T21:07:27Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.folioreader.view.VerticalViewPager.getCurrentItem()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (position < (mSpineReferences.size())) { page = getFragment((position + 1)); ((com.folioreader.fragments.FolioPageFragment) (page)).reload(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2927/buggy-version/folioreader.src.main.java.com.folioreader.activity.FolioActivity.java", "BodyUseAPI": ["com.folioreader.activity.FolioActivity.getFragment(int)"], "Fixed commit": "284bb1e990c11560953fcf91eff18f091735d4bc", "Url": "https://api.github.com/repos/codetoart/FolioReader-Android", "Date": "2016-04-18T11:30:56Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["be.howest.util.LinkedList<E>.getNodeAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((node != null) && ((node.next) != null)) { return node.next.element; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/7091/buggy-version/src.be.howest.util.LinkedList.java", "BodyUseAPI": [], "Fixed commit": "2500437a8bfbed16572b7e7ea876dba38d669967", "Url": "https://api.github.com/repos/AvetisyanHayk/oop.list", "Date": "2017-06-06T07:58:09Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["be.howest.util.LinkedList<E>.getNodeAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((current != null) && ((current.next) != null)) { current.next = current.next.next; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/7091/buggy-version/src.be.howest.util.LinkedList.java", "BodyUseAPI": [], "Fixed commit": "2500437a8bfbed16572b7e7ea876dba38d669967", "Url": "https://api.github.com/repos/AvetisyanHayk/oop.list", "Date": "2017-06-06T07:58:09Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((com.mrlolethan.butteredpd.Dungeon.gamemode) == (com.mrlolethan.butteredpd.gamemodes.GameMode.ARENA)) && ((com.mrlolethan.butteredpd.Dungeon.level) instanceof com.mrlolethan.butteredpd.levels.ArenaShopLevel)) { com.mrlolethan.butteredpd.Statistics.deepestFloor = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/6220/buggy-version/src.com.mrlolethan.butteredpd.scenes.InterlevelScene.java", "BodyUseAPI": [], "Fixed commit": "772e0011742fb1a79c55355bd677401d46af16f4", "Url": "https://api.github.com/repos/mrlolethan/Buttered-Pixel-Dungeon", "Date": "2015-07-05T23:41:24Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.common.collect.Lists.newArrayListWithExpectedSize(int)", "java.lang.Integer.parseInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((inputLines.size()) < expectedInputLength) { se.atoulou.facebook.hackercup.common.HackApp.logger.error(\"The number of input lines read doesn't match the expected number given in the data file!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2215/buggy-version/src.main.java.se.atoulou.facebook.hackercup.common.HackApp.java", "BodyUseAPI": [], "Fixed commit": "9dc81bb495acebec014544d6cf610a8415db8a18", "Url": "https://api.github.com/repos/toulouse/facebook-hackercup-java", "Date": "2013-01-27T16:25:54Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (optional) { return paramTypeBean.getRequestOptionalParamType(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/7000/buggy-version/src.cn.ytxu.http_wrapper.model.field.FieldModel.java", "BodyUseAPI": [], "Fixed commit": "1d2609e197ad598cdc6d35d5ffa7bd5726d524d6", "Url": "https://api.github.com/repos/xuyt11/XHttpWrapper", "Date": "2016-12-18T03:13:13Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.startValues) != null) { this.iterationsTotal = (this.startValues.length) * (iterationsPerTry); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/1383/buggy-version/src.main.de.linearbits.newtonraphson.NewtonRaphson2D.java", "BodyUseAPI": [], "Fixed commit": "634fde9ad473664b61ee7870eed5ea609ea6002f", "Url": "https://api.github.com/repos/prasser/newtonraphson", "Date": "2015-07-07T14:27:22Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (region.getCenter().equals(center)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/4709/buggy-version/src.main.java.net.dzikoysk.funnyguilds.basic.util.RegionUtils.java", "BodyUseAPI": [], "Fixed commit": "cd1e912b6f9e438f02dc5c94d37011dc8908e205", "Url": "https://api.github.com/repos/Xierip/FunnyGuilds", "Date": "2017-08-04T21:49:02Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getConnectionId().equals(0)) { org.dyndns.fzoli.rccar.bridge.Main.showWarning(getSocket(), \"Dupl\u00e1zott tan\u00fas\u00edtv\u00e1ny\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/5284/buggy-version/src.org.dyndns.fzoli.rccar.bridge.socket.BridgeHandler.java", "BodyUseAPI": [], "Fixed commit": "f2b01695a042516e93b40b0d58777aa48962d69b", "Url": "https://api.github.com/repos/fzoli/RemoteControlCar", "Date": "2012-10-04T10:23:10Z"},
{"Line": "=>4046", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.almalence.opencam.cameracontroller.CameraController.isUseHALv3()) com.almalence.opencam.cameracontroller.HALv3.resetNeedPreviewFrame();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/5871/buggy-version/src.com.almalence.opencam.cameracontroller.CameraController.java", "BodyUseAPI": [], "Fixed commit": "7637c92bd8dfa9e7e949801401542b4983eb31e0", "Url": "https://api.github.com/repos/almalence/OpenCamera", "Date": "2015-06-18T12:38:50Z"},
{"Line": "=>4039", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.almalence.opencam.cameracontroller.CameraController.isUseHALv3()) com.almalence.opencam.cameracontroller.HALv3.setNeedPreviewFrame(needPreviewFrame);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/5871/buggy-version/src.com.almalence.opencam.cameracontroller.CameraController.java", "BodyUseAPI": [], "Fixed commit": "7637c92bd8dfa9e7e949801401542b4983eb31e0", "Url": "https://api.github.com/repos/almalence/OpenCamera", "Date": "2015-06-18T12:38:50Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.HONEYCOMB)) { opts.inMutable = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/7927/buggy-version/library.src.main.java.se.emilsjolander.sprinkles.typeserializers.BitmapSerializer.java", "BodyUseAPI": [], "Fixed commit": "63cb9c8423173280fdbaefd052db3ad92a2f37af", "Url": "https://api.github.com/repos/emilsjolander/sprinkles", "Date": "2014-03-27T18:39:00Z"},
{"Line": "=>564", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((obj.lines) != null) { if ((internalLightweightCmp) != null) { internalLightweightCmp.removeLayer(obj.lines); }else { browserBridge.waitForReady(); browserBridge.bridge.call(\"removeMapElement\", new java.lang.Object[]{ obj.mapKey }); } }else { if ((internalLightweightCmp) != null) { if ((points) != null) { points.removePoint(obj.point); } }else { browserBridge.waitForReady(); browserBridge.bridge.call(\"removeMapElement\", new java.lang.Object[]{ obj.mapKey }); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/683/buggy-version/GoogleMaps.src.com.codename1.googlemaps.MapContainer.java", "BodyUseAPI": ["com.codename1.maps.layers.PointsLayer.removePoint(com.codename1.maps.layers.PointLayer)", "com.codename1.maps.MapComponent.removeLayer(com.codename1.maps.layers.LinesLayer)", "com.codename1.javascript.JSObject.call(java.lang.String,java.lang.Object[])", "com.codename1.javascript.JSObject.call(java.lang.String,java.lang.Object[])"], "Fixed commit": "af4a33ebe0ef1c2429bbedf15ddada1992828c24", "Url": "https://api.github.com/repos/codenameone/codenameone-google-maps", "Date": "2017-03-09T18:20:58Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(chirptask.storage.StorageHandler.isGoogleStorageInit())) { addGoogleStorage(); if (chirptask.storage.StorageHandler.isGoogleStorageInit()) { if ((chirptask.storage.StorageHandler.googleStorage) instanceof chirptask.storage.GoogleStorage) { chirptask.storage.GoogleStorage currentGStorage = ((chirptask.storage.GoogleStorage) (chirptask.storage.StorageHandler.googleStorage)); if (currentGStorage != null) { currentGStorage.login(); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/801/buggy-version/src.chirptask.storage.StorageHandler.java", "BodyUseAPI": [], "Fixed commit": "e2fc18e387fb9a2ef2a708ad7117fd69529bf8b9", "Url": "https://api.github.com/repos/cs2103aug2014-w10-4j/main", "Date": "2014-10-27T11:27:38Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((logic.getSchritt()) == (de.hhu.propra16.avaders.logik.Step.RED)) logic.weiter(testUnit);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/7407/buggy-version/src.main.java.de.hhu.propra16.avaders.gui.CompilationUnits.java", "BodyUseAPI": ["de.hhu.propra16.avaders.logik.Logik.weiter(vk.core.api.CompilationUnit)"], "Fixed commit": "3e5f485c9febb579289178f2a617767269dbf5e9", "Url": "https://api.github.com/repos/ProPra16/programmierpraktikum-abschlussprojekt-the-avaders", "Date": "2016-07-14T20:57:32Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gestoreStudente.getStudente().getPassword()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (curr_pwd != null) { if (curr_pwd.equals(pwd)) { javax.servlet.http.HttpSession session = request.getSession(); session.setAttribute(\"JSONList\", this.gestoreStudente.toJSON()); session.setAttribute(\"Loggato\", ((this.gestoreStudente.getStudente()) != null)); session.setAttribute(\"IsStudente\", true); }else { op_result = \"password incorretta\"; } }else { op_result = \"accedi via social...\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/5394/buggy-version/haiHome-war.src.java.web.ServletStudente.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "7cb04af74f25f94f232875e93260b363f3aa9651", "Url": "https://api.github.com/repos/GianpieroSportelli/haiHome", "Date": "2016-04-03T01:20:00Z"},
{"Line": "=>609", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (playerCar.getIsDestroyed()) endingMsg = new schultz.personal.cor.helpers.UiText(\"You Have Failed!\", 1, game); else if ((i > 0) && (cars.get(i).getIsDestroyed())) endingMsg = new schultz.personal.cor.helpers.UiText(\"You Have Succeeded!\", 1, game); else endingMsg = new schultz.personal.cor.helpers.UiText(\"You Have Failed!\", 1, game);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/399/buggy-version/core.src.schultz.personal.cor.main.Track1.java", "BodyUseAPI": [], "Fixed commit": "da585276c64f3340b6525f3c556306290e3f5185", "Url": "https://api.github.com/repos/Elaguy/COR", "Date": "2017-12-26T15:53:47Z"},
{"Line": "=>301", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.templateResolvers) == null) || (this.templateResolvers.isEmpty())) { if (org.thymeleaf.TemplateEngine.logger.isDebugEnabled()) { org.thymeleaf.TemplateEngine.logger.debug((\"[THYMELEAF] No Template Resolver has been specified: using \" + (org.thymeleaf.templateresolver.StringTemplateResolver.class.getName()))); } setTemplateResolver(new org.thymeleaf.templateresolver.StringTemplateResolver()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/7420/buggy-version/src.main.java.org.thymeleaf.TemplateEngine.java", "BodyUseAPI": [], "Fixed commit": "6a6b09ce41ad05afefb99f0a5a24840480f4a08b", "Url": "https://api.github.com/repos/thymeleaf/thymeleaf", "Date": "2015-06-01T19:52:34Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((source.getTypeId()) != (com.sk89q.worldedit.blocks.BlockID.REDSTONE_REPEATER_OFF)) && ((source.getTypeId()) != (com.sk89q.worldedit.blocks.BlockID.REDSTONE_REPEATER_ON))) { if (chipState.isTriggered(i)) cnt++; }else { if (((chipState.get(i)) || (chipState.isTriggered(i))) || true) cnt++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/673/buggy-version/src.main.java.com.sk89q.craftbook.circuits.ic.ICMechanic.java", "BodyUseAPI": [], "Fixed commit": "486831b9457c993ec3869687969a371c1956d28b", "Url": "https://api.github.com/repos/sk89q/craftbook", "Date": "2013-01-10T07:56:44Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.sk89q.craftbook.bukkit.util.BukkitUtil.toWorld(pt).getBlockAt(com.sk89q.craftbook.bukkit.util.BukkitUtil.toLocation(pt))", "com.sk89q.craftbook.SourcedBlockRedstoneEvent.getSource()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((com.sk89q.craftbook.util.SignUtil.getBackBlock(block).equals(source)) || (block.equals(source))) if (((source.getTypeId()) != (com.sk89q.worldedit.blocks.BlockID.REDSTONE_REPEATER_OFF)) && ((source.getTypeId()) != (com.sk89q.worldedit.blocks.BlockID.REDSTONE_REPEATER_ON))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/673/buggy-version/src.main.java.com.sk89q.craftbook.circuits.ic.ICMechanic.java", "BodyUseAPI": ["org.bukkit.block.Block.getTypeId()", "org.bukkit.block.Block.getTypeId()"], "Fixed commit": "486831b9457c993ec3869687969a371c1956d28b", "Url": "https://api.github.com/repos/sk89q/craftbook", "Date": "2013-01-10T07:56:44Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((messageComponents.length) > 1) { messageComponents = messageComponents[1].split(\"\\r\\n\\r\\n\"); parsedRequestComponents.put(\"headers\", messageComponents[0]); if ((messageComponents.length) > 1) { parsedRequestComponents.put(\"body\", messageComponents[((messageComponents.length) - 1)]); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/4689/buggy-version/src.com.lisahamm.RequestParser.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)", "java.lang.String.split(java.lang.String)"], "Fixed commit": "e9b5a8eca61b698d0367f1bc9b6628b9d0812866", "Url": "https://api.github.com/repos/lisahamm/HTTPServer", "Date": "2015-05-07T16:57:08Z"},
{"Line": "=>336", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!parkingAvailable) { throw exceptionHandler.handleException(ExceptionMessage.PARKING_NOT_AVAILABLE, httpRequest); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/3086/buggy-version/src.main.java.parking.repositories.LotsRepositoryImpl.java", "BodyUseAPI": [], "Fixed commit": "4ee5d267ab0e7447f506e5de2af5c15b9c3b4020", "Url": "https://api.github.com/repos/parking-lots/parking-rest-api", "Date": "2016-07-25T10:17:38Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (java.io.InputStream.class.isAssignableFrom(request.getEntity().getClass())) { byte[] content = com.google.common.io.ByteStreams.toByteArray(((java.io.InputStream) (request.getEntity()))); body = com.squareup.okhttp.RequestBody.create(com.squareup.okhttp.MediaType.parse(request.getContentType()), content); }else { java.lang.String content = org.openstack4j.core.transport.ObjectMapperSingleton.getContext(request.getEntity().getClass()).writer().writeValueAsString(request.getEntity()); body = com.squareup.okhttp.RequestBody.create(com.squareup.okhttp.MediaType.parse(request.getContentType()), content); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/1321/buggy-version/connectors.okhttp.src.main.java.org.openstack4j.connectors.okhttp.HttpCommand.java", "BodyUseAPI": ["org.openstack4j.core.transport.HttpRequest<R>.getEntity()", "org.openstack4j.core.transport.HttpRequest<R>.getEntity()", "org.openstack4j.core.transport.ObjectMapperSingleton.getContext(request.getEntity().getClass()).writer()", "com.google.common.io.ByteStreams.toByteArray(((java.io.InputStream) (request.getEntity())))", "com.squareup.okhttp.RequestBody.create(com.squareup.okhttp.MediaType.parse(request.getContentType()),byte[])", "com.squareup.okhttp.MediaType.parse(request.getContentType())", "request.getEntity().getClass()", "org.openstack4j.core.transport.ObjectMapperSingleton.getContext(request.getEntity().getClass())", "com.squareup.okhttp.RequestBody.create(com.squareup.okhttp.MediaType.parse(request.getContentType()),java.lang.String)", "org.openstack4j.core.transport.HttpRequest<R>.getEntity()", "org.openstack4j.core.transport.HttpRequest<R>.getContentType()", "com.squareup.okhttp.MediaType.parse(request.getContentType())", "org.openstack4j.core.transport.ObjectMapperSingleton.getContext(request.getEntity().getClass()).writer().writeValueAsString(request.getEntity())", "org.openstack4j.core.transport.HttpRequest<R>.getContentType()"], "Fixed commit": "7fc81ed31611031c07632f30640f868ae2640624", "Url": "https://api.github.com/repos/ekasitk/openstack4j", "Date": "2015-03-31T22:56:13Z"},
{"Line": "=>830", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (truncateNames) { currLine = com.untamedears.JukeAlert.chat.ChatFiller.fillString((currLine + snitchGroup), (((worldColWidth + locationColWidth) + cullColWidth) + groupColWidth), truncateChars); currLine = com.untamedears.JukeAlert.chat.ChatFiller.fillString((currLine + snitchName), ((((worldColWidth + locationColWidth) + cullColWidth) + groupColWidth) + nameColWidth), truncateChars); }else { currLine = currLine + snitchGroup; currLine = currLine + snitchName; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/1902/buggy-version/src.main.java.com.untamedears.JukeAlert.storage.JukeAlertLogger.java", "BodyUseAPI": [], "Fixed commit": "ea2f5f4311ace30a412f6503efddd716e7bbfb98", "Url": "https://api.github.com/repos/DevotedMC/JukeAlert", "Date": "2016-12-28T22:22:59Z"},
{"Line": "=>327", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (type.endsWith(\"...\")) { type = type.substring(0, ((type.length()) - 3)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/7968/buggy-version/src.main.java.org.sdmlib.models.classes.logic.GenMethod.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "c9633ac246be36f2a2d9ee70f72c72308f7b851f", "Url": "https://api.github.com/repos/fujaba/SDMLib", "Date": "2016-02-26T12:59:09Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isThreadRunning)) { eu.telecomnancy.tncyiot.MainService.myTimer.scheduleAtFixedRate(eu.telecomnancy.tncyiot.MainService.timerTask, 0, 10000); isThreadRunning = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/1186/buggy-version/app.src.main.java.eu.telecomnancy.tncyiot.MainService.java", "BodyUseAPI": [], "Fixed commit": "3e6095346690acebf5b8e3bdce2540a18439c921", "Url": "https://api.github.com/repos/HALLERPierre/TncyIot", "Date": "2017-01-30T14:54:08Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (manager_id.equals(\"not_set\")) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/4429/buggy-version/src.login.Account.java", "BodyUseAPI": [], "Fixed commit": "a53c13cb88acf6716c7a6f8cbc68a6e2ed116741", "Url": "https://api.github.com/repos/jaytanna61/login", "Date": "2017-12-18T02:09:12Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((manager_commission) == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/4429/buggy-version/src.login.Account.java", "BodyUseAPI": [], "Fixed commit": "a53c13cb88acf6716c7a6f8cbc68a6e2ed116741", "Url": "https://api.github.com/repos/jaytanna61/login", "Date": "2017-12-18T02:09:12Z"},
{"Line": "=>1241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["spinner_duration.getSelectedItem().toString().trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (other_duration.equals(\"Others\")) { datePickerDialog3.show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/1366/buggy-version/app.src.main.java.com.narnolia.app.UpdateLeadActivity.java", "BodyUseAPI": [], "Fixed commit": "959ac3d793dcaf0da932d528f99b87c8b84a4c00", "Url": "https://api.github.com/repos/Mahikadu/Narnolia", "Date": "2017-04-27T09:15:20Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (range_map == null) { return matchingRanges; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/392/buggy-version/src.frontend.edu.brown.hashing.ReconfigurationPlan.java", "BodyUseAPI": [], "Fixed commit": "82f11b6cbd0e8f226bcf6a53999137493c44e61b", "Url": "https://api.github.com/repos/nbajiaoshi/h-store", "Date": "2016-12-25T02:37:15Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (range_map == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/392/buggy-version/src.frontend.edu.brown.hashing.ReconfigurationPlan.java", "BodyUseAPI": [], "Fixed commit": "82f11b6cbd0e8f226bcf6a53999137493c44e61b", "Url": "https://api.github.com/repos/nbajiaoshi/h-store", "Date": "2016-12-25T02:37:15Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((this.outgoing_ranges_map) != null) { for (java.util.TreeSet<edu.brown.hashing.ReconfigurationPlan.ReconfigurationRange> ranges : this.outgoing_ranges_map.values()) { outgoingRangesCount += ranges.size(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/392/buggy-version/src.frontend.edu.brown.hstore.reconfiguration.ReconfigurationTracking.java", "BodyUseAPI": [], "Fixed commit": "82f11b6cbd0e8f226bcf6a53999137493c44e61b", "Url": "https://api.github.com/repos/nbajiaoshi/h-store", "Date": "2016-12-25T02:37:15Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((this.incoming_ranges_map) != null) { for (java.util.TreeSet<edu.brown.hashing.ReconfigurationPlan.ReconfigurationRange> ranges : this.incoming_ranges_map.values()) { incomingRangesCount += ranges.size(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/392/buggy-version/src.frontend.edu.brown.hstore.reconfiguration.ReconfigurationTracking.java", "BodyUseAPI": [], "Fixed commit": "82f11b6cbd0e8f226bcf6a53999137493c44e61b", "Url": "https://api.github.com/repos/nbajiaoshi/h-store", "Date": "2016-12-25T02:37:15Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (reverseIndexer.contains(docid)) { gnu.trove.iterator.TIntIterator reverseIter = reverseIndexer.get(docid).iterator(); while (reverseIter.hasNext()) { int reverId = reverseIter.next(); scores.get(reverId).remove(docid); } reverseIndexer.remove(docid); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/6775/buggy-version/src.main.java.com.guokr.simbase.SimTable.java", "BodyUseAPI": ["reverseIndexer.get(docid).iterator()", "gnu.trove.map.hash.TIntObjectHashMap<gnu.trove.list.TIntList>.get(int)", "scores.get(reverId).remove(int)", "gnu.trove.map.hash.TIntObjectHashMap<gnu.trove.list.TIntList>.remove(int)"], "Fixed commit": "42a21683a9fb99acdf8bfc3d0f93724077338646", "Url": "https://api.github.com/repos/guokr/simbase", "Date": "2013-08-30T09:56:50Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (line.isEmpty()) { return new java.util.ArrayList<java.lang.String>().iterator(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/6502/buggy-version/src.main.java.com.iyonger.spark.example.NewJavaWordCount.java", "BodyUseAPI": [], "Fixed commit": "70a5c0520f7457af6f01adfc327c970229663f4f", "Url": "https://api.github.com/repos/yonger1516/spark-example", "Date": "2016-10-19T05:15:02Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActionBar()) != null) { setSupportActionBar(toolbar); getSupportActionBar().setDisplayShowTitleEnabled(false); getSupportActionBar().setHomeButtonEnabled(true); getSupportActionBar().setDisplayHomeAsUpEnabled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/4496/buggy-version/app.src.main.java.com.example.nautatvanavlakha.abcd.FirstActivity.java", "BodyUseAPI": [], "Fixed commit": "6c04e3b800ac1b08709a4d2a0db7961d90448838", "Url": "https://api.github.com/repos/IamAbhiKaushik/Techfest_App", "Date": "2017-11-04T07:06:25Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.container) != null) this.container.add(this.guiElement);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/473/buggy-version/ui.elem.Sprite.java", "BodyUseAPI": [], "Fixed commit": "b668fc5478a6fd37cac016e481984255b58e1c51", "Url": "https://api.github.com/repos/Enthri/aprctsrpg", "Date": "2015-02-24T19:39:55Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((s.contains(\"(\")) || (s.contains(\")\"))) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/5797/buggy-version/src.Main.java", "BodyUseAPI": [], "Fixed commit": "114d7d5ff61d8e32141ec77cbecab28deac45e81", "Url": "https://api.github.com/repos/Panpog1/potions", "Date": "2016-01-22T05:31:59Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (logger.isTraceEnabled()) logger.trace((\"Response:\\n\" + response));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/633/buggy-version/bergamot-check-http.src.main.java.com.intrbiz.bergamot.check.http.HTTPClientHandler.java", "BodyUseAPI": ["org.apache.log4j.Logger.trace((\"Response:\\n\" + response))"], "Fixed commit": "ee3718e68af605462b59517b199785261a6d9e0b", "Url": "https://api.github.com/repos/intrbiz/bergamot", "Date": "2014-12-06T21:20:56Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (logger.isTraceEnabled()) logger.trace((\"Request:\\n\" + (this.request)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/633/buggy-version/bergamot-check-http.src.main.java.com.intrbiz.bergamot.check.http.HTTPClientHandler.java", "BodyUseAPI": ["org.apache.log4j.Logger.trace((\"Request:\\n\" + (this.request)))"], "Fixed commit": "ee3718e68af605462b59517b199785261a6d9e0b", "Url": "https://api.github.com/repos/intrbiz/bergamot", "Date": "2014-12-06T21:20:56Z"},
{"Line": "=>1617", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.app.Activity.getResources()", "android.content.res.Resources.getIdentifier(java.lang.String,java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((Build.VERSION.SDK_INT) < (Build.VERSION_CODES.JELLY_BEAN_MR1)) && (!((softMenuIdentifier > 0) && (res.getBoolean(softMenuIdentifier))))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/8137/buggy-version/bottom-bar.src.main.java.com.roughike.bottombar.BottomBar.java", "BodyUseAPI": [], "Fixed commit": "72ac83cdb9847c26d06338daf386b3486c9137f0", "Url": "https://api.github.com/repos/roughike/BottomBar", "Date": "2016-06-06T15:30:39Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((min) > 9) { minute = (min) + \"\"; }else { minute = \"0\" + (min); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/455/buggy-version/app.src.main.java.com.autohome.autohomeclient.Date.java", "BodyUseAPI": [], "Fixed commit": "f65e7f623d4472edf40ea52182a6c41c3b90d7a8", "Url": "https://api.github.com/repos/ScholerBass-AutoHome/Android-Client", "Date": "2015-04-13T18:31:52Z"},
{"Line": "=>1763", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.filteredpush.qc.date.DateUtils.isDayInRange(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((dayResult.getResultState().equals(EventDQValidationState.COMPLETED)) && (dayResult.getResult().equals(EventDQValidationResult.COMPLIANT))) { result.setResultState(EventQCAmmendmentState.NO_CHANGE); }else { result.setResultState(EventQCAmmendmentState.INTERNAL_PREREQISITES_NOT_MET); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/993/buggy-version/src.main.java.org.filteredpush.qc.date.DateUtils.java", "BodyUseAPI": [], "Fixed commit": "da7d06bf5147e210891e97ecd9d4b8e00c9b185e", "Url": "https://api.github.com/repos/FilteredPush/event_date_qc", "Date": "2016-12-15T03:16:43Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dotsInResult == 0) { int indexOfFirstDot = baseVersion.indexOf('.'); return baseVersion.substring(0, indexOfFirstDot); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/6378/buggy-version/src.main.java.org.fred4jupiter.baseversion.BaseVersionCreator.java", "BodyUseAPI": [], "Fixed commit": "7088df906869dcb6edd78e49f714a2237de3a371", "Url": "https://api.github.com/repos/fred4jupiter/baseversion-maven-plugin", "Date": "2014-11-02T09:57:14Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((ret == null) || ((ret.length()) == 0)) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/7704/buggy-version/src.Client.java", "BodyUseAPI": [], "Fixed commit": "0c4e8ceceb62c1e6b0adeb8c849f79634c107b4c", "Url": "https://api.github.com/repos/chenzhangyu/FlyChess", "Date": "2016-05-24T18:41:42Z"},
{"Line": "=>805", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.valueOf(annotation.values.get(3))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(ignoredMods.contains(modID))) { boolean modFound = cpw.mods.fml.common.Loader.isModLoaded(modID); if (modFound) { java.lang.String inter = java.lang.String.valueOf(annotation.values.get(1)).replace(\".\", \"/\"); if (!(node.interfaces.contains(inter))) { java.lang.System.out.println(((((((\"Galacticraft added interface \\\"\" + inter) + \"\\\" dynamically from \\\"\") + modID) + \"\\\" to class \\\"\") + (node.name)) + \"\\\".\")); node.interfaces.add(inter); injectionCount++; } }else { ignoredMods.add(modID); java.lang.System.out.println(((\"Galacticraft ignored dynamic interface insertion since \\\"\" + modID) + \"\\\" was not found.\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/4475/buggy-version/common.micdoodle8.mods.miccore.MicdoodleTransformer.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)", "java.io.PrintStream.println(((((((\"Galacticraft added interface \\\"\" + inter) + \"\\\" dynamically from \\\"\") + modID) + \"\\\" to class \\\"\") + (node.name)) + \"\\\".\"))", "java.io.PrintStream.println(java.lang.String)", "cpw.mods.fml.common.Loader.isModLoaded(java.lang.String)"], "Fixed commit": "08aba5e29af33d87b45389fb8dd2eef9f518de01", "Url": "https://api.github.com/repos/micdoodle8/MicdoodleCore", "Date": "2014-02-03T23:12:42Z"},
{"Line": "=>1043", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["chessboard.Chessboard.getNodeFromGridPane(javafx.scene.layout.GridPane,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (rm instanceof javafx.scene.layout.Pane) { ((javafx.scene.layout.Pane) (rm)).getChildren().clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/5788/buggy-version/src.main.java.chessboard.Chessboard.java", "BodyUseAPI": [], "Fixed commit": "5441172eb50431352b64f0d45eb20b750f87e8d2", "Url": "https://api.github.com/repos/joshdemusz/laboon-chess", "Date": "2016-10-26T21:18:20Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.HttpURLConnection.getResponseCode()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (code == 200) { java.io.BufferedReader br = new java.io.BufferedReader(new java.io.InputStreamReader(conn.getInputStream(), \"UTF-8\")); sb.setLength(0); java.lang.String strTemp; while ((strTemp = br.readLine()) != null) { sb.append(strTemp).append('\\n'); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/9125/buggy-version/app.src.main.java.com.sysu.yizhu.Util.HttpUtil.java", "BodyUseAPI": [], "Fixed commit": "7788fb374cca6d1d10863af2d416a3d7ed1dbb23", "Url": "https://api.github.com/repos/zanhaofang/yizhu-client", "Date": "2017-06-30T06:17:54Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((this.city) != null) { sb.append((\"\\nCity: \" + (this.city))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/8746/buggy-version/src.event.TransportDiscontinued.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "222eab465bcac17d7dfc20bd803b3e12c738496c", "Url": "https://api.github.com/repos/Josh1994/SmartApp", "Date": "2017-06-13T01:15:39Z"},
{"Line": "=>1021", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["s.getValue(\"name\").stringValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (name.contains(\"#\")) return new it.eng.ontorepo.IndividualItem(name.substring(0, ((name.indexOf(\"#\")) + 1)), name, clazz);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/5568/buggy-version/cam-service.src.main.java.it.eng.ontorepo.sesame2.Sesame2RepositoryDAO.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.indexOf(java.lang.String)"], "Fixed commit": "a164c229bb35dbcfe8ae4dec928031dd0d1ddf59", "Url": "https://api.github.com/repos/BEinCPPS/fitman-cam", "Date": "2016-09-08T07:56:56Z"},
{"Line": "=>473", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Character, mathX.v3.IMathExp>.get(char)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (exp instanceof mathX.v3.AssignmentDelimitor) while ((stack.size()) > 0) sb.append((\" \" + (stack.pop()))); else if ((exp.getPriority()) < (ins.getPriority())) sb.append((\" \" + (stack.pop())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/282/buggy-version/src.mathX.v3.Calculator.java", "BodyUseAPI": ["mathX.v3.IMathExp.getPriority()"], "Fixed commit": "169d2df7cd21fb8abc5373e24fb1299e7402de18", "Url": "https://api.github.com/repos/kl23/J-CS3343-Calculator", "Date": "2016-11-15T03:39:09Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (forceMoveEnd) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/934/buggy-version/src.main.java.dk.bjop.wirecuddler.movement.moves.StraightLineMove.java", "BodyUseAPI": [], "Fixed commit": "a43f66fa5b1382c6bf8cc74cecce1dbbd073b560", "Url": "https://api.github.com/repos/bjopper/WireCuddler", "Date": "2015-04-18T19:28:00Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (forceMoveEnd) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/934/buggy-version/src.main.java.dk.bjop.wirecuddler.movement.moves.PointMove.java", "BodyUseAPI": [], "Fixed commit": "a43f66fa5b1382c6bf8cc74cecce1dbbd073b560", "Url": "https://api.github.com/repos/bjopper/WireCuddler", "Date": "2015-04-18T19:28:00Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["block.getState().getData()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (data instanceof org.bukkit.material.Leaves) species = ((org.bukkit.material.Leaves) (data)).getSpecies(); else if (data instanceof org.bukkit.material.Tree) species = ((org.bukkit.material.Tree) (data)).getSpecies();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/7907/buggy-version/src.main.java.com.sk89q.craftbook.mechanics.TreeLopper.java", "BodyUseAPI": [], "Fixed commit": "3723a52290da68195b5b8a952535347a7f56cdaa", "Url": "https://api.github.com/repos/EngineHub/CraftBook", "Date": "2016-07-19T08:21:31Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((markers) != null) { niz = new java.lang.String[markers.length]; for (int i = 0; i < (markers.length); i++) { niz[i] = ((\"address: \" + (markers[i].getAddress())) + \"\\nType of event: \") + (markers[i].getType_of_event()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/3365/buggy-version/app.src.main.java.edu.elfak.mosis.phoneguardian.ListFilterActivity.java", "BodyUseAPI": [], "Fixed commit": "d8f32e2e9a3061530ae561b0f98ecfa82643e093", "Url": "https://api.github.com/repos/PhoneGuardian/CitizenApp", "Date": "2015-04-16T09:34:04Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((aCell.X) != (-1)) && ((aCell.Y) != (-1))) { aCell.getCellPanel().removeImage(); aCell.getCellPanel().restoreDefaultBorder(); aCell.setEntityType(Entity.NO_ENTITY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/23/buggy-version/src.gui.toolbars.maptools.RoomTool.java", "BodyUseAPI": ["aCell.getCellPanel().restoreDefaultBorder()", "data.Cell.getCellPanel()", "aCell.getCellPanel().removeImage()", "data.Cell.setEntityType(Entity.NO_ENTITY)", "data.Cell.getCellPanel()"], "Fixed commit": "5a9403f2620212d36bd47a1e24d4b8fb2d932837", "Url": "https://api.github.com/repos/fado/JDig", "Date": "2014-07-28T09:18:33Z"},
{"Line": "=>318", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((selectedPiece) != (-1)) { if (piece == (pieces.get(selectedPiece))) { pass = false; }else { pass = true; } }else { pass = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/4680/buggy-version/app.src.main.java.edu.schaf170msu.matchpairs.Memory.java", "BodyUseAPI": [], "Fixed commit": "dc450b8b74c4ea2dd53e5b5ebda0f8b4d56d8c09", "Url": "https://api.github.com/repos/schaferandrew/MatchPairs", "Date": "2017-11-15T00:54:14Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.scripps.yates.annotations.uniprot.xml.Entry.getSequence()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (uniprotSeq != null) { java.lang.String actualSeq = uniprotSeq.getValue().trim(); if ((actualSeq != null) && (!(\"\".equals(actualSeq)))) { actualSeq = actualSeq.replaceAll(\"\\n\", \"\"); actualSeq = actualSeq.replaceAll(\" \", \"\"); ret.put(acc, actualSeq); if (\"1\".equals(edu.scripps.yates.annotations.uniprot.UniprotProteinLocalRetriever.getIsoformVersion(acc))) { final java.lang.String noIsoformAccession = edu.scripps.yates.annotations.uniprot.UniprotProteinLocalRetriever.getNoIsoformAccession(acc); edu.scripps.yates.annotations.uniprot.UniprotProteinRetriever.log.info((((\"Protein sequence from principal isoform \" + acc) + \" mapped also to accession \") + noIsoformAccession)); ret.put(noIsoformAccession, actualSeq); } } }else { edu.scripps.yates.annotations.uniprot.UniprotProteinRetriever.log.warn((\"There is entry in Uniprot, but no sequence for protein: \" + acc)); edu.scripps.yates.annotations.uniprot.UniprotProteinRetriever.notAvailableProteins.add(acc); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/4665/buggy-version/pint.annotations.src.main.java.edu.scripps.yates.annotations.uniprot.UniprotProteinRetriever.java", "BodyUseAPI": ["edu.scripps.yates.annotations.uniprot.xml.SequenceType.getValue()", "uniprotSeq.getValue().trim()"], "Fixed commit": "9c49487131f23dd15b72a9937309d96ca65c90a5", "Url": "https://api.github.com/repos/proteomicsyates/PINT", "Date": "2016-12-02T18:55:22Z"},
{"Line": "=>642", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isNullable == false) { throw new java.lang.Exception(((\"Attribute: \" + fieldName) + \": value is null but configured as not-nullable!\")); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/3453/buggy-version/src.main.java.de.cimt.talendcomp.json.JsonDocument.java", "BodyUseAPI": [], "Fixed commit": "a78dd18582f50593ecb6b9f4f7c3fa05b827ba57", "Url": "https://api.github.com/repos/jlolling/talendcomp_tJSONDoc", "Date": "2016-08-02T16:38:48Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((balance) < (-100)) { balance += amount; if ((numWithdraws) > 10) { balance += 2.0F; } (numWithdraws)--; return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/1050/buggy-version/given.src.banking.primitive.core.Checking.java", "BodyUseAPI": [], "Fixed commit": "5905df6053b3f422b90c0f62ec71cef6708ae7a6", "Url": "https://api.github.com/repos/cfroke/cst316_codereviewlab_cfroke", "Date": "2016-02-09T17:23:23Z"},
{"Line": "=>470", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (keys.isEmpty()) { edu.harvard.iq.dataverse.dataaccess.S3AccessIO.logger.warning(\"S3AccessIO: no auxiliary objects to delete..\"); }else { edu.harvard.iq.dataverse.dataaccess.S3AccessIO.logger.info(\"Trying to delete auxiliary files...\"); try { s3.deleteObjects(multiObjectDeleteRequest); } catch (com.amazonaws.services.s3.model.MultiObjectDeleteException e) { edu.harvard.iq.dataverse.dataaccess.S3AccessIO.logger.warning((\"S3AccessIO: Unable to delete auxilary objects\" + (e.getMessage()))); throw new java.io.IOException(\"S3AccessIO: Failed to delete one or more auxiliary objects.\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/9120/buggy-version/src.main.java.edu.harvard.iq.dataverse.dataaccess.S3AccessIO.java", "BodyUseAPI": [], "Fixed commit": "c3daebef6f2e892e67ef1b10ce5a9e70a677bf1b", "Url": "https://api.github.com/repos/IQSS/dataverse", "Date": "2017-08-15T20:41:49Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (android.text.TextUtils.isEmpty(flipType)) { flipType = \"vertical\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/1326/buggy-version/EasyFlipView.src.main.java.com.wajahatkarim3.easyflipview.EasyFlipView.java", "BodyUseAPI": [], "Fixed commit": "ac1c6f6c53795f2b50e805db87657ee6a7a49f37", "Url": "https://api.github.com/repos/sachinvarma/EasyFlipView", "Date": "2017-12-18T11:32:27Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Matcher.group(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((mtag == null) || (\"\".equals(mtag.trim()))) { ((javax.servlet.http.HttpServletResponse) (response)).sendRedirect(\"/\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/6235/buggy-version/src.main.java.org.zkoss.fiddle.filter.FiddleTagFilter.java", "BodyUseAPI": [], "Fixed commit": "3761219af1fe2b82b8fa7d6bbdd0a2ee1bd01e72", "Url": "https://api.github.com/repos/tony1223/zkfiddle", "Date": "2011-06-28T13:08:13Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!serviceNameEntryAvailable) { LocalOciCoordinator.LOGGER.info(\"No service name entry found\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/1978/buggy-version/local-oci-coordinator.src.main.java.oci.locic.ServiceNameResolverThread.java", "BodyUseAPI": [], "Fixed commit": "abdf6b654b61cb79949fc231ca1982d05aa16258", "Url": "https://api.github.com/repos/marckoerner/oci", "Date": "2017-08-23T20:03:05Z"},
{"Line": "=>1452", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((type) == null) { type = mapMapping.getDirectField().getType(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/5235/buggy-version/foundation.org.eclipse.persistence.core.src.org.eclipse.persistence.internal.jpa.jpql.TypeResolver.java", "BodyUseAPI": [], "Fixed commit": "83fa2d6a8d10c37e3f9f7e2c3e824a5a1e8fdb8e", "Url": "https://api.github.com/repos/sabineheider/eclipselink.runtime", "Date": "2013-05-06T17:56:00Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dialogController) != null) dialogController.closeAllDialogs(); else android.util.Log.e(\"Developer\", \"dialogController null\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2650/buggy-version/src.de.georgwiese.functionInspectorLite.MainScreen.java", "BodyUseAPI": [], "Fixed commit": "a78201b21d5dda814938d5ada4ffc2729a7de48e", "Url": "https://api.github.com/repos/georgwiese/Function-Inspector-Android", "Date": "2012-09-21T13:01:23Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((stateHolder) != null) stateHolder.saveCurrentState(); else android.util.Log.e(\"Developer\", \"stateHolder null\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2650/buggy-version/src.de.georgwiese.functionInspectorLite.MainScreen.java", "BodyUseAPI": [], "Fixed commit": "a78201b21d5dda814938d5ada4ffc2729a7de48e", "Url": "https://api.github.com/repos/georgwiese/Function-Inspector-Android", "Date": "2012-09-21T13:01:23Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((id == null) && ((en.getNameField()) != null)) { java.lang.String name = ((java.lang.String) (en.getNameField().getValue(obj))); if (!(org.nutz.lang.Strings.isBlank(name))) { return org.nutz.dao.util.Pojos.Items.cndName(en, name); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/7792/buggy-version/src.org.nutz.dao.util.Pojos.java", "BodyUseAPI": ["org.nutz.dao.util.Pojos.Items.cndName(org.nutz.dao.entity.Entity<?>,java.lang.String)", "org.nutz.dao.entity.Entity<?>.getNameField()", "en.getNameField().getValue(java.lang.Object)"], "Fixed commit": "75ed7c98af83830d6f330cec40518547eaed4516", "Url": "https://api.github.com/repos/FlakyTestDetection/nutz", "Date": "2017-11-12T12:02:30Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.javaweb.dao.LeaseDAOImpl.queryByForeignId(java.lang.Class,java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (leases != null) { for (com.javaweb.po.Lease element : leases) { if (element.getStatus().equals(\"current\")) return element.getId(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/5305/buggy-version/src.com.javaweb.dao.LeaseDAOImpl.java", "BodyUseAPI": [], "Fixed commit": "60b430c6ab0c03bfd4ab67046e3a89ac5c887253", "Url": "https://api.github.com/repos/UniHousing/UnivHousing", "Date": "2015-04-03T01:27:33Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((instances.size()) == 1) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/7075/buggy-version/src.main.java.openlauncher.ModPackInstaller.java", "BodyUseAPI": [], "Fixed commit": "0d0318f6872853c35b9e20f07b168190d5efa15c", "Url": "https://api.github.com/repos/OpenLauncher/OpenLauncher-StandAlone", "Date": "2015-03-29T18:07:36Z"},
{"Line": "=>375", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((onNewLine) && (!(aligned))) && ((comment.start) != (lombok.javac.CommentInfo.StartConnection.START_OF_LINE))) needsAlign = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/5598/buggy-version/src.delombok.lombok.delombok.PrettyPrinter.java", "BodyUseAPI": [], "Fixed commit": "dc5e1b9b35e853e6b503efac367999e02569108e", "Url": "https://api.github.com/repos/BruceRodrigues/lombok", "Date": "2015-10-31T15:05:33Z"},
{"Line": "=>390", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Stack<java.lang.String>.peek()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (current_dir.equals(\"\")) { actionBar.setTitle(getString(R.string.default_display_name_for_root_folder)); }else { actionBar.setTitle(current_dir); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/3131/buggy-version/src.com.owncloud.android.ui.activity.Uploader.java", "BodyUseAPI": ["android.support.v7.app.ActionBar.setTitle(java.lang.String)"], "Fixed commit": "9c5f4d7b468771e012a35607ddf1b07877aa30bf", "Url": "https://api.github.com/repos/owncloud/android", "Date": "2016-03-23T15:17:14Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mProgressDlg) == null) { mProgressDlg = new com.example.pyeonsangjin.ssmproject.MainActivity.ProgressDlg(this); mProgressDlg.execute(100); }else { mProgressDlg.execute(100); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/4440/buggy-version/app.src.main.java.com.example.pyeonsangjin.ssmproject.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "97c136d1bf1e1902bac6eb7d502bddf30ef7f3a6", "Url": "https://api.github.com/repos/WhatEatTodayProject/whateat_android", "Date": "2016-08-06T12:12:26Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((joueur.getMainDuJoueur().choisirCarte(idCarteSelected).getEffet_passif().getIdEffet()) == 1) { cDefaussee = joueur.getMainDuJoueur().choisirCarte(idCarteSelected); }else { cDefaussee = joueur.getMainDuJoueur().choisirCarte(idDefausseSelected); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/1560/buggy-version/London.src.fr.m1miage.london.ui.screens.ZoneConstructionScreen.java", "BodyUseAPI": ["joueur.getMainDuJoueur().choisirCarte(int)", "fr.m1miage.london.classes.Joueur.getMainDuJoueur()", "fr.m1miage.london.classes.Joueur.getMainDuJoueur()", "joueur.getMainDuJoueur().choisirCarte(int)"], "Fixed commit": "daabdece346b0bec272ffa7927bc1780b07d776d", "Url": "https://api.github.com/repos/Aethia/LONDON", "Date": "2014-04-24T07:49:08Z"},
{"Line": "=>376", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((idCarteEffet) != 24) { if ((ca.getCarte().getEffet_passif()) != null) { if ((ca.getCarte().getEffet_passif().getIdEffet()) == 1) { validerConstru.setVisible(true); } }else { afficherCartesCouleurs(ca); } }else { messageConstruire = (\"Vous pouvez encore construire \" + (compteurEffet)) + \" cartes\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/1560/buggy-version/London.src.fr.m1miage.london.ui.screens.ZoneConstructionScreen.java", "BodyUseAPI": [], "Fixed commit": "daabdece346b0bec272ffa7927bc1780b07d776d", "Url": "https://api.github.com/repos/Aethia/LONDON", "Date": "2014-04-24T07:49:08Z"},
{"Line": "=>865", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((airAirline.getAirticketPnr()) != null) && (!(\"\".equalsIgnoreCase(java.lang.String.valueOf(airAirline.getAirticketPnr().getId()))))) && ((airAirline.getAirticketPnr().getId()) != null)) { java.util.List<com.smi.travel.datalayer.entity.AirticketFlight> airticketFlightList = bookingAirticketService.getAirticketFlightListFromPNRId(airAirline.getAirticketPnr().getId()); if (airticketFlightList.isEmpty()) { order = 1; }else { order = (airticketFlightList.size()) + 1; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/3465/buggy-version/src.java.com.smi.travel.controller.AirTicketDetailController.java", "BodyUseAPI": ["com.smi.travel.datalayer.service.BookingAirticketService.getAirticketFlightListFromPNRId(airAirline.getAirticketPnr().getId())", "com.smi.travel.datalayer.entity.AirticketAirline.getAirticketPnr()", "airAirline.getAirticketPnr().getId()"], "Fixed commit": "3d30e5e1b7e215387a90107b08050f2a09489a39", "Url": "https://api.github.com/repos/iCONEXT/SMI_Travel", "Date": "2015-11-04T09:41:22Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portal.kernel.search.Document.get(Field.ROOT_ENTRY_CLASS_NAME)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.liferay.portal.kernel.util.Validator.isNull(className)) { className = document.get(Field.ENTRY_CLASS_NAME); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/5811/buggy-version/portal-impl.src.com.liferay.portal.search.SearchPermissionCheckerImpl.java", "BodyUseAPI": [], "Fixed commit": "3c1248a8ca88965d243dde9deba239c2826f7a1d", "Url": "https://api.github.com/repos/pei-jung/liferay-portal", "Date": "2015-05-22T21:08:16Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.silverware.microservices.monitoring.Metrics.getMinTime()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((elapsedTime.compareTo(minTime)) == (-1)) || ((count.compareTo(java.math.BigDecimal.ZERO)) == 0)) { metrics.setMinTime(elapsedTime); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/7161/buggy-version/monitoring.src.main.java.io.silverware.microservices.monitoring.MetricsManager.java", "BodyUseAPI": ["io.silverware.microservices.monitoring.Metrics.setMinTime(java.math.BigDecimal)"], "Fixed commit": "77de5401dac4a2607d6b0b81940000fc3a1203d2", "Url": "https://api.github.com/repos/SilverThings/SilverWare", "Date": "2017-02-16T11:21:06Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!((choice == 1) || (choice == 2))) { java.lang.System.out.println(java.lang.String.format(\"Invalid entry detected (%s), please enter 1 or 2\", choice)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/4683/buggy-version/src.main.java.com.tophatter.Main.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)", "java.lang.String.format(java.lang.String,int)"], "Fixed commit": "a37d8591a75dba5c8e7172556bf057d8aff54143", "Url": "https://api.github.com/repos/thebrettd/JavaSweeper", "Date": "2016-02-12T04:33:04Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((l.getWeir()) != null) { centaur.in.IdentifyCandidates.updateCurrentOverflow(l.getWeir().getCrestHeight()); if ((l.getNodeByIdNodeFrom().getElevation().compareTo(centaur.in.IdentifyCandidates.currentOverflow)) > 0) continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/6801/buggy-version/src.centaur.in.IdentifyCandidates.java", "BodyUseAPI": ["centaur.db.Link.getWeir()", "centaur.in.IdentifyCandidates.updateCurrentOverflow(l.getWeir().getCrestHeight())", "l.getNodeByIdNodeFrom().getElevation().compareTo(java.math.BigDecimal)", "l.getNodeByIdNodeFrom().getElevation()", "centaur.db.Link.getNodeByIdNodeFrom()", "l.getWeir().getCrestHeight()"], "Fixed commit": "4d412e308f240a8ebe9bed618eab978194063864", "Url": "https://api.github.com/repos/ldesousa/centaur.loc", "Date": "2016-02-23T14:54:32Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((args.length) > 1) { java.lang.System.out.println(\"Application only accepts one argument.\"); return 50; }else { try { return java.lang.Integer.parseInt(args[0]); } catch (java.lang.Exception ex) { java.lang.System.out.println(\"Given argument is not a valid integer.\"); return 50; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/8475/buggy-version/src.gernia.Main.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "ae25fab7f3815f7fe4260a232083eff90f00603b", "Url": "https://api.github.com/repos/humra/Battle-of-Gernia", "Date": "2015-12-12T08:38:06Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (element instanceof org.eclipse.eatop.examples.explorer.ChildWrapper) { element = ((org.eclipse.eatop.examples.explorer.ChildWrapper) (element)).getObject(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/72/buggy-version/examples.org.eclipse.eatop.examples.explorer.src.org.eclipse.eatop.examples.explorer.AppearanceExampleExplorerLabelProvider.java", "BodyUseAPI": [], "Fixed commit": "bb8ea768c8c9e8e2d1a97bbb71e01ba6e7af7242", "Url": "https://api.github.com/repos/Arccore/synligare", "Date": "2015-05-26T16:46:53Z"},
{"Line": "=>325", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (type == null) { name = be.nabu.libs.swagger.parser.SwaggerParser.cleanup(name); type = definition.getRegistry().getComplexType(definition.getId(), name); if (type == null) { type = definition.getRegistry().getSimpleType(definition.getId(), name); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/6977/buggy-version/src.main.java.be.nabu.libs.swagger.parser.SwaggerParser.java", "BodyUseAPI": [], "Fixed commit": "8b3dbc6fb109aa4e7d2112b742fdae3fd8ab9385", "Url": "https://api.github.com/repos/nablex/swagger-parser", "Date": "2017-02-11T17:04:53Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (transformedY < 0) { angleInRad = (2 * (java.lang.Math.PI)) - angleInRad; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/195/buggy-version/src.main.java.hu.oe.nik.szfmv17t.environment.utils.XmlParser.java", "BodyUseAPI": [], "Fixed commit": "02724288f9786a899cb70c37404061fad147e621", "Url": "https://api.github.com/repos/xpowerfullx/AutomatedCar", "Date": "2017-03-18T23:50:28Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(input.matches(\"((from|to)\\\\s\\\\d\\\\d:\\\\d\\\\d\\\\s?)+\"))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/7317/buggy-version/src.main.java.leanderk.izou.dontwakemeup.TimeChecker.java", "BodyUseAPI": [], "Fixed commit": "9e8261a2d3f2ff867bbac8cbe88fff0b0d841961", "Url": "https://api.github.com/repos/LeanderK/IzouDontWakeMeUp", "Date": "2015-01-25T17:38:31Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (tempTime == null) { if (currentTime.isBefore(time)) return true; }else { if ((currentTime.isAfter(tempTime)) && (currentTime.isBefore(time))) { return true; }else if (time.isBefore(tempTime)) { if (!((currentTime.isBefore(tempTime)) && (currentTime.isAfter(time)))) return true; } tempTime = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/7317/buggy-version/src.main.java.leanderk.izou.dontwakemeup.TimeChecker.java", "BodyUseAPI": ["java.time.LocalTime.isBefore(java.time.LocalTime)", "java.time.LocalTime.isAfter(java.time.LocalTime)", "java.time.LocalTime.isBefore(java.time.LocalTime)"], "Fixed commit": "9e8261a2d3f2ff867bbac8cbe88fff0b0d841961", "Url": "https://api.github.com/repos/LeanderK/IzouDontWakeMeUp", "Date": "2015-01-25T17:38:31Z"},
{"Line": "=>726", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!hasBatchInformation) { boolean allBAsHaveDate = true; ee = expressionExperimentService.thawBioAssays(ee); for (ubic.gemma.model.expression.bioAssay.BioAssay ba : ee.getBioAssays()) { if ((ba.getProcessingDate()) == null) { allBAsHaveDate = false; break; } } if (allBAsHaveDate) { hasBatchInformation = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/6428/buggy-version/gemma-web.src.main.java.ubic.gemma.web.controller.expression.experiment.ExpressionExperimentController.java", "BodyUseAPI": [], "Fixed commit": "650f69c0958cf65d6dfbdd844850d469ceca93e4", "Url": "https://api.github.com/repos/PavlidisLab/Gemma", "Date": "2017-09-20T21:36:55Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (parser.hasFontSettings()) { for (net.chocolapod.lwjgfont.packager.FontSetting fontSetting : parser.listFontSettings()) { lwjgFont.create(fontSetting); } lwjgFont.makePackage(); lwjgFont.writeProcessLog(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/9229/buggy-version/src.main.java.net.chocolapod.lwjgfont.cli.Main.java", "BodyUseAPI": ["net.chocolapod.lwjgfont.cli.CliArgumentParser.listFontSettings()"], "Fixed commit": "3bab28e81a2e63b91100af68e5858df5e1fdd13c", "Url": "https://api.github.com/repos/momokan/LWJGFont", "Date": "2014-03-01T05:40:38Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (null != (req.tags)) { if (null != (persist.tags)) { persist.tags.clear(); persist.tags.addAll(req.tags); }else { persist.tags = req.tags; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/4811/buggy-version/dajia-data.src.main.java.com.dajia.util.CommonUtils.java", "BodyUseAPI": ["persist.tags.addAll(req.tags)"], "Fixed commit": "a5efae237f7afefb3280107ac988c472d354a74d", "Url": "https://api.github.com/repos/dajia-network/dajia-base", "Date": "2017-01-07T17:28:34Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.URL.toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (str.startsWith(\"jar:file:\")) { str = str.substring(\"jar:file:\".length()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/7647/buggy-version/src.org.nutz.resource.Scans.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "0820c926c2e94c1efbbdec61e624ea8684e0f97f", "Url": "https://api.github.com/repos/hzl7652/nutz", "Date": "2013-02-16T03:05:08Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["stream.flarebot.flarebot.util.GeneralUtils.getInt(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (id >= (guild.getWelcome().getGuildMessages().size())) { stream.flarebot.flarebot.util.MessageUtils.sendErrorMessage(\"Invalid index!\", channel); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/8713/buggy-version/src.main.java.stream.flarebot.flarebot.commands.moderation.WelcomeCommand.java", "BodyUseAPI": [], "Fixed commit": "38ffb4e038f86809c6170ae4cd6a5f6bc69543f1", "Url": "https://api.github.com/repos/binaryoverload/FlareBot", "Date": "2017-10-08T17:23:10Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((balance) == null) { throw new java.lang.IllegalStateException(\"Loan wasn't initialized correctly.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/8435/buggy-version/src.main.java.banking.backend.accounts.Loan.java", "BodyUseAPI": [], "Fixed commit": "d54eaa55826bdea6db053ffb45e5636a9efbbb18", "Url": "https://api.github.com/repos/dhbw-stginf16a/java-banking1", "Date": "2017-05-30T12:16:00Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ConfigRegistry.DEBUGMODE.getState()) { Reika.DragonAPI.Libraries.ReikaChatHelper.write((((\"Key is held by \" + name) + \"; machine was placed by \") + (can.placer))); Reika.DragonAPI.Libraries.ReikaChatHelper.write((\"name.equals(placer): \" + (name.equals(can.placer)))); Reika.DragonAPI.Libraries.ReikaChatHelper.write((\"name.compareTo(placer): \" + (name.compareTo(can.placer)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2348/buggy-version/Items.ItemCannonKey.java", "BodyUseAPI": [], "Fixed commit": "715e1f07a42a4222b18e44a4c6edc51273b29c68", "Url": "https://api.github.com/repos/ReikaKalseki/RotaryCraft", "Date": "2013-06-20T02:50:57Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (sort != null) { try { this.sort = org.sonar.api.issue.IssueQuery.Builder.Sort.valueOf(sort).name(); } catch (java.lang.IllegalArgumentException e) { throw new java.lang.IllegalArgumentException((\"Sort should contain only : \" + (java.util.Arrays.toString(org.sonar.api.issue.IssueQuery.Builder.Sort.values()))), e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/8815/buggy-version/sonar-plugin-api.src.main.java.org.sonar.api.issue.IssueQuery.java", "BodyUseAPI": ["org.sonar.api.issue.IssueQuery.Builder.Sort.valueOf(java.lang.String)", "org.sonar.api.issue.IssueQuery.Builder.Sort.name()"], "Fixed commit": "49ae063a7ba3ea2f717138280bfac0583b415d23", "Url": "https://api.github.com/repos/SonarSource/sonar", "Date": "2013-04-25T06:57:57Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.demonbindestrichcraft.lib.bukkit.wbukkitlib.player.WPlayerInterface.getOnlinePlayersOld()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (players == null) { try { org.bukkit.entity.Player player = org.bukkit.Bukkit.getServer().getPlayer(name); if (player == null) { return null; } return player; } catch (java.lang.Throwable ex) { return null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/5660/buggy-version/src.main.java.de.demonbindestrichcraft.lib.bukkit.wbukkitlib.player.WPlayerInterface.java", "BodyUseAPI": [], "Fixed commit": "5a897b5555cfce436b5434d1afc0acf21c90be7a", "Url": "https://api.github.com/repos/de-demonbindestrichcraft/milkadmin", "Date": "2015-02-17T20:39:37Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(sourceMailbox.running.get())) throw new java.lang.IllegalStateException(\"A valid source mailbox can not be idle\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/266/buggy-version/src.main.java.org.agilewiki.pactor.impl.MailboxImpl.java", "BodyUseAPI": [], "Fixed commit": "0ceff1faf17a840ca915563517df0d205e91a524", "Url": "https://api.github.com/repos/laforge49/PActor", "Date": "2013-03-24T02:19:14Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.list()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (fileNames != null) { return com.Ben12345rocks.AdvancedCore.Utils.getInstance().convertArray(fileNames); }else { return new java.util.ArrayList<java.lang.String>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/6310/buggy-version/AdvancedCore.src.com.Ben12345rocks.AdvancedCore.Data.Data.java", "BodyUseAPI": ["com.Ben12345rocks.AdvancedCore.Utils.getInstance().convertArray(java.lang.String[])"], "Fixed commit": "63aeeab34eb841361f29f24a7e064408822a03ae", "Url": "https://api.github.com/repos/Ben12345rocks/AdvancedCore", "Date": "2016-10-31T19:22:09Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["triangle.triangleapp.helpers.MediaFileHelper.getBytesFromFile(mMediaFileHelper.getOutputMediaFile(triangle.triangleapp.helpers.MediaHelper.MEDIA_TYPE_VIDEO).toString())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (streamBytes != null) { mWebSocket.sendStream(streamBytes); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/3917/buggy-version/TriangleApp.app.src.main.java.triangle.triangleapp.helpers.MediaHelper.java", "BodyUseAPI": ["triangle.triangleapp.helpers.WebSocket.sendStream(byte[])"], "Fixed commit": "3ea7e94cf157bc1aa9fb9e05ddd704d07cfdc738", "Url": "https://api.github.com/repos/TheTryangle/triangle-android", "Date": "2017-06-14T13:06:24Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ru.nbakaev.cityguide.utils.StringUtils.isEmpty(databaseValue)) { return java.util.Collections.emptyList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/326/buggy-version/app.src.main.java.ru.nbakaev.cityguide.poi.db.GreenConverter.java", "BodyUseAPI": [], "Fixed commit": "8969d18a2e850f5dd29c5c85bcbba39537ffb719", "Url": "https://api.github.com/repos/NBakaev/cityguide", "Date": "2016-12-14T12:27:39Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.DefaultListModel.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (index >= 0) { listModel.removeElement(target); org.wavescale.sourcesync.factory.ConfigConnectionFactory configConnectionFactory = org.wavescale.sourcesync.factory.ConfigConnectionFactory.getInstance(); configConnectionFactory.removeConnectionConfiguration(target); if (index > 0) { lstTargets.setSelectedIndex((index - 1)); pnConfig.setVisible(true); }else { lbTarget.setText(\"\"); pnConfig.setVisible(false); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/1543/buggy-version/src.org.wavescale.sourcesync.ui.SourceSyncConfig.java", "BodyUseAPI": ["javax.swing.JList<java.lang.String>.setSelectedIndex(int)"], "Fixed commit": "7ddbe1c73fa2081d06e62dd4906acfc99220af43", "Url": "https://api.github.com/repos/fioan89/sourcesync", "Date": "2014-11-22T20:52:32Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (firstRun) { menu.render(g); firstRun = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2165/buggy-version/src.main.ui.GamePanel.java", "BodyUseAPI": [], "Fixed commit": "e6c1272fef5827a54ecc680b02277cbcfa4065cf", "Url": "https://api.github.com/repos/JordoBrooks/breakout", "Date": "2017-04-27T02:53:33Z"},
{"Line": "=>12911", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!r) r = eof(b, (l + 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/4915/buggy-version/gen.net.masterthought.dlanguage.parser.DLanguageParser.java", "BodyUseAPI": [], "Fixed commit": "83e409bc98167fe4a2e6c793f99341289d6d7570", "Url": "https://api.github.com/repos/pirocks/DLanguage", "Date": "2017-05-28T18:41:52Z"},
{"Line": "=>12909", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!r) r = consumeToken(b, net.masterthought.dlanguage.parser.KW_FOREACH);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/4915/buggy-version/gen.net.masterthought.dlanguage.parser.DLanguageParser.java", "BodyUseAPI": [], "Fixed commit": "83e409bc98167fe4a2e6c793f99341289d6d7570", "Url": "https://api.github.com/repos/pirocks/DLanguage", "Date": "2017-05-28T18:41:52Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((activeWorld) != null) activeWorld.resume();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/4616/buggy-version/core.src.se.doverfelt.Start.java", "BodyUseAPI": [], "Fixed commit": "ac3da7c4a7957d336236ba788c26d7f3c1d8d877", "Url": "https://api.github.com/repos/E241/Pongz", "Date": "2016-03-23T12:00:41Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((activeWorld) != null) activeWorld.render(batch);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/4616/buggy-version/core.src.se.doverfelt.Start.java", "BodyUseAPI": [], "Fixed commit": "ac3da7c4a7957d336236ba788c26d7f3c1d8d877", "Url": "https://api.github.com/repos/E241/Pongz", "Date": "2016-03-23T12:00:41Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((activeWorld) != null) activeWorld.pause();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/4616/buggy-version/core.src.se.doverfelt.Start.java", "BodyUseAPI": [], "Fixed commit": "ac3da7c4a7957d336236ba788c26d7f3c1d8d877", "Url": "https://api.github.com/repos/E241/Pongz", "Date": "2016-03-23T12:00:41Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(lives.isLive())) { game.setScreen(new com.mygdx.game.Fail(game)); dispose(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2896/buggy-version/core.src.com.mygdx.game.Question_15.java", "BodyUseAPI": [], "Fixed commit": "9448556e8991c2eb8e655f228fcaea78fc8957f4", "Url": "https://api.github.com/repos/Thebreak35/wtfQuiz", "Date": "2016-11-18T03:09:15Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(use64Bit)) { for (int i = 0; i < (markers.length); i++) { markers[i] = (markers[i]) & 4294967295L; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/5032/buggy-version/components.formats-gpl.src.loci.formats.in.NDPIReader.java", "BodyUseAPI": [], "Fixed commit": "345f2b8d425b2a21c39b5ee30b74a4fe05b28fe9", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2015-05-17T19:36:54Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (property.isArray()) { java.lang.Object defaultNode = getDefaultValueFromClass(containerNodeClass, property); if (value.equals(defaultNode)) { doDelete = true; }else if ((defaultNode == null) && ((((java.util.Collection) (value)).size()) == 0)) { doDelete = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/8608/buggy-version/dcm4che-conf.dcm4che-conf-core.src.main.java.org.dcm4che3.conf.core.normalization.DefaultsAndNullFilterDecorator.java", "BodyUseAPI": ["org.dcm4che3.conf.core.normalization.DefaultsAndNullFilterDecorator.1.getDefaultValueFromClass(java.lang.Class,org.dcm4che3.conf.core.api.internal.AnnotatedConfigurableProperty)"], "Fixed commit": "52f64d0a3e74325beb27e12d8d2e174c18c90259", "Url": "https://api.github.com/repos/nroduit/dcm4che", "Date": "2015-11-30T17:47:15Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.parent) != null) { return this.parent.getTree(); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2011/buggy-version/jahmm.src.jahmm.jadetree.DecisionNodeBase.java", "BodyUseAPI": [], "Fixed commit": "6f39a18fc09bc00c2700752fb31df028fd3ea56a", "Url": "https://api.github.com/repos/KommuSoft/jahmm", "Date": "2014-03-05T13:58:57Z"},
{"Line": "=>871", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (profileName == (com.okta.tools.awscli.DefaultProfileName)) { pw.println(((\"[\" + profileName) + \"]\")); }else { pw.println(((\"[profile \" + profileName) + \"]\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/8760/buggy-version/src.main.java.com.okta.tools.awscli.java", "BodyUseAPI": ["java.io.PrintWriter.println(java.lang.String)", "java.io.PrintWriter.println(java.lang.String)"], "Fixed commit": "b6a7cb852cb06592d8ebd0e02c1fe9531c58d3b3", "Url": "https://api.github.com/repos/junkangli/okta-aws-cli-assume-role", "Date": "2017-06-12T09:37:40Z"},
{"Line": "=>271", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!run) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/6168/buggy-version/JAVA3_Lab9.src.FHflowGraph.java", "BodyUseAPI": [], "Fixed commit": "f00d8f73da6610971307c23388ba722b7d28b8af", "Url": "https://api.github.com/repos/seanxtr/CS1C_Labs", "Date": "2016-03-11T04:22:12Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (minCost <= 0) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/6168/buggy-version/JAVA3_Lab9.src.FHflowGraph.java", "BodyUseAPI": [], "Fixed commit": "f00d8f73da6610971307c23388ba722b7d28b8af", "Url": "https://api.github.com/repos/seanxtr/CS1C_Labs", "Date": "2016-03-11T04:22:12Z"},
{"Line": "=>315", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (s == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/6168/buggy-version/JAVA3_Lab9.src.FHflowGraph.java", "BodyUseAPI": [], "Fixed commit": "f00d8f73da6610971307c23388ba722b7d28b8af", "Url": "https://api.github.com/repos/seanxtr/CS1C_Labs", "Date": "2016-03-11T04:22:12Z"},
{"Line": "=>454", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!found) { for (iter = dst.flowAdjList.iterator(); iter.hasNext();) { pair = iter.next(); if (src.equals(pair.first)) { found = true; pair.second -= cost; break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/6168/buggy-version/JAVA3_Lab9.src.FHflowGraph.java", "BodyUseAPI": [], "Fixed commit": "f00d8f73da6610971307c23388ba722b7d28b8af", "Url": "https://api.github.com/repos/seanxtr/CS1C_Labs", "Date": "2016-03-11T04:22:12Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!run) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/6168/buggy-version/JAVA3_Lab9.src.FHflowGraph.java", "BodyUseAPI": [], "Fixed commit": "f00d8f73da6610971307c23388ba722b7d28b8af", "Url": "https://api.github.com/repos/seanxtr/CS1C_Labs", "Date": "2016-03-11T04:22:12Z"},
{"Line": "=>358", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((startVert) == null) || ((endVert) == null)) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/6168/buggy-version/JAVA3_Lab9.src.FHflowGraph.java", "BodyUseAPI": [], "Fixed commit": "f00d8f73da6610971307c23388ba722b7d28b8af", "Url": "https://api.github.com/repos/seanxtr/CS1C_Labs", "Date": "2016-03-11T04:22:12Z"},
{"Line": "=>378", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((startVert) == null) || ((endVert) == null)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/6168/buggy-version/JAVA3_Lab9.src.FHflowGraph.java", "BodyUseAPI": [], "Fixed commit": "f00d8f73da6610971307c23388ba722b7d28b8af", "Url": "https://api.github.com/repos/seanxtr/CS1C_Labs", "Date": "2016-03-11T04:22:12Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((context.getNsContext()) != null) xPath.setNamespaceContext(context.getNsContext());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2785/buggy-version/zal.nutch.extractor.src.main.java.ir.co.bayan.simorq.zal.nutch.extractor.engine.XPathEngine.java", "BodyUseAPI": ["javax.xml.xpath.XPath.setNamespaceContext(context.getNsContext())", "ir.co.bayan.simorq.zal.nutch.extractor.engine.XPathContext.getNsContext()"], "Fixed commit": "958c0b9fdfffd50be61d67591010b305e749c1cb", "Url": "https://api.github.com/repos/BayanGroup/nutch-custom-search", "Date": "2013-06-13T14:12:51Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.northernwall.hadrian.handlers.vip.VipMigrateHandler.fromJson(org.eclipse.jetty.server.Request,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((data.newState) == 3) && (((data.migrateDCs) == null) || (data.migrateDCs.isEmpty()))) { throw new com.northernwall.hadrian.handlers.routing.Http400BadRequestException(\"No DCs selected\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/6176/buggy-version/src.main.java.com.northernwall.hadrian.handlers.vip.VipMigrateHandler.java", "BodyUseAPI": [], "Fixed commit": "59301e7091dd7b153f143899d5fce8bffa718275", "Url": "https://api.github.com/repos/Jukkorsis/Hadrian", "Date": "2017-07-18T02:44:26Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (scores == null) { handler.sendEmptyMessage(0); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/7821/buggy-version/src.org.gunnm.simplepac.AppPreferences.java", "BodyUseAPI": [], "Fixed commit": "e264e9e6928c165fd0df955273c02e008682f84a", "Url": "https://api.github.com/repos/juli1/simplepac", "Date": "2012-07-27T09:00:02Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["qa.dcsdr.diplomaticclub.Adapters.CategoryAdapter.ViewHolderCategories.getSubCategoryList()", "java.util.List<qa.dcsdr.diplomaticclub.Items.CategoryEntry>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((ln.getChildCount()) == (current.getSubCategories().size())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/8166/buggy-version/app.src.main.java.qa.dcsdr.diplomaticclub.Adapters.CategoryAdapter.java", "BodyUseAPI": [], "Fixed commit": "bcad3af3fe2b97f55e9126d9e10ccd7ed40f394d", "Url": "https://api.github.com/repos/Hostqa/DiplomaticCenter", "Date": "2015-06-27T09:32:49Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((imageCentrePC) != null) { java.text.DecimalFormat df = new java.text.DecimalFormat(\"#.##\"); java.lang.String label = (((df.format(imageCentrePC[0])) + \"px, \") + (df.format(imageCentrePC[1]))) + \"px\"; beamCentreRegion = drawCrosshairs(imageCentrePC, ((imageCentrePC[1]) / 50), ColorConstants.red, ColorConstants.black, \"beam centre\", label); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/8607/buggy-version/org.dawb.workbench.plotting.src.org.dawb.workbench.plotting.tools.diffraction.DiffractionImageAugmenter.java", "BodyUseAPI": [], "Fixed commit": "df0b249a10e72f31521b0d3281021f41b1da7d78", "Url": "https://api.github.com/repos/DawnScience/dawn-ui", "Date": "2012-11-16T10:59:16Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.molgenis.hadoop.pipeline.application.mapreduce.SamRecordGroupsRetriever.getGroupsOfContig(htsjdk.samtools.SAMRecord)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((contigGroups.size()) == 0) { return contigGroups; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/9261/buggy-version/hadoop-pipeline-application.src.main.java.org.molgenis.hadoop.pipeline.application.mapreduce.SamRecordGroupsRetriever.java", "BodyUseAPI": [], "Fixed commit": "69baa47a655e09f109b0ba7b26d88c93cb9d7f54", "Url": "https://api.github.com/repos/svandenhoek/hadoop-pipeline", "Date": "2015-12-18T14:51:26Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (c == 0) { org.w3c.dom.Element newElement = node.getOwnerDocument().createElement(elementName); node.appendChild(newElement); initialAttributes.forEach(( k, v) -> { newElement.setAttribute(k, v); }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/7202/buggy-version/xml.src.main.java.com.jeroensteenbeeke.andalite.xml.operations.EnsureElement.java", "BodyUseAPI": [], "Fixed commit": "aa1d5f4c8e39aefb690fe9e5c694843ead66edaf", "Url": "https://api.github.com/repos/jsteenbeeke/andalite", "Date": "2015-08-13T10:22:08Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (\"0\".equals(relationMapper.checkIsFriend(userId, fromUserId))) { relationMapper.saveRelation(userId, fromUserId); relationMapper.saveRelation(fromUserId, userId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2198/buggy-version/mychat-core.src.main.com.mychat.common.manager.RelationManager.java", "BodyUseAPI": ["com.mychat.common.mapper.RelationMapper.saveRelation(java.lang.String,java.lang.String)", "com.mychat.common.mapper.RelationMapper.saveRelation(java.lang.String,java.lang.String)"], "Fixed commit": "715a77b43fa999c48d6e8f6972ff8d80234e3c58", "Url": "https://api.github.com/repos/lj654548718/mychat", "Date": "2016-04-12T10:57:21Z"},
{"Line": "=>305", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.github.ibuildthecloud.gdapi.context.ApiContext.getContext().getPolicy()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (policy == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/3416/buggy-version/code.iaas.auth-logic.src.main.java.io.cattle.platform.iaas.api.auth.dao.impl.AuthDaoImpl.java", "BodyUseAPI": [], "Fixed commit": "bc4b6fd59066d72e354d3c1deec38d02a6db8f6c", "Url": "https://api.github.com/repos/hibooboo2/cattle", "Date": "2015-04-07T01:32:49Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.caluga.morphium.query.AnnotationAndReflectionHelper.getField(java.lang.Class<?>,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (field == null) { throw new java.lang.IllegalArgumentException(((\"Field \" + fieldNameInstance) + \" not found!\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/6285/buggy-version/src.de.caluga.morphium.query.QueryImpl.java", "BodyUseAPI": [], "Fixed commit": "dd6af0fc51e2ad998eff93806e7bfdb000b39096", "Url": "https://api.github.com/repos/sboesebeck/morphium", "Date": "2013-08-22T14:52:23Z"},
{"Line": "=>378", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (sToken.contains(\"*/\")) { sToken = removeCommentsInTheBeginning(sToken, 0, 0, \"/*\", \"*/\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/1494/buggy-version/src.main.java.com.microsoft.sqlserver.jdbc.SQLServerParameterMetaData.java", "BodyUseAPI": ["com.microsoft.sqlserver.jdbc.SQLServerParameterMetaData.removeCommentsInTheBeginning(java.lang.String,int,int,java.lang.String,java.lang.String)"], "Fixed commit": "c7d6ececee5963699de953d3aa3a446aeb142c0c", "Url": "https://api.github.com/repos/AfsanehR/mssql-jdbc", "Date": "2017-03-17T20:24:59Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.runwaysdk.vault.VaultFileDAOIF.getVaultFilePath()", "com.runwaysdk.vault.VaultDAOIF.getVaultPath()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!(rootPath.endsWith(\"/\"))) || (!(filePath.startsWith(\"/\")))) { rootPath += \"/\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/594/buggy-version/geoprism-server.src.main.java-gen.stub.net.geoprism.dashboard.layer.CategoryIcon.java", "BodyUseAPI": [], "Fixed commit": "7abf327b9df06f4572592a9b22ab9d66cbf6382b", "Url": "https://api.github.com/repos/terraframe/geoprism", "Date": "2016-07-14T00:17:57Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ex.getMessage().equals(\"unexpected response code: 401\")) { invalidToken = true; codeHandled = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/7697/buggy-version/src.DropboxGrader.DbxSession.java", "BodyUseAPI": [], "Fixed commit": "aa4ca572e7058fbf5e68b5094c207fd3818c3de4", "Url": "https://api.github.com/repos/mattlyons0/Java-Grader", "Date": "2014-03-15T18:04:05Z"},
{"Line": "=>1632", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_inputPtr) >= (_inputEnd)) { return com.fasterxml.aalto.async.AsyncByteScanner.EVENT_INCOMPLETE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/7808/buggy-version/src.main.java.com.fasterxml.aalto.async.AsyncByteScanner.java", "BodyUseAPI": [], "Fixed commit": "ba296670f1823ee0f7d44e3adfb998b7f4d1d6ff", "Url": "https://api.github.com/repos/FasterXML/aalto-xml", "Date": "2011-02-12T20:13:28Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((k < 1.001) && (k >= 0.0)) { base = (-(limes)) + (k * (2 * (limes))); }else { assert false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/6997/buggy-version/src.internetz.Experience.java", "BodyUseAPI": [], "Fixed commit": "e87d5d82fdbf56af1b7d7cfd3313c04f09d77b90", "Url": "https://api.github.com/repos/wikiteams/aon-emerging-wikiteams", "Date": "2014-01-12T17:45:49Z"},
{"Line": "=>337", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((state) == (PENDING)) notify.fire(o);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2169/buggy-version/gwtquery-core.src.main.java.com.google.gwt.query.client.plugins.deferred.Deferred.java", "BodyUseAPI": [], "Fixed commit": "79a35fd47a3ba0b3b3ed3ac03468837494da6a66", "Url": "https://api.github.com/repos/gwtquery/gwtquery", "Date": "2013-12-09T21:36:00Z"},
{"Line": "=>363", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((state) == (PENDING)) resolve.fire(o);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2169/buggy-version/gwtquery-core.src.main.java.com.google.gwt.query.client.plugins.deferred.Deferred.java", "BodyUseAPI": [], "Fixed commit": "79a35fd47a3ba0b3b3ed3ac03468837494da6a66", "Url": "https://api.github.com/repos/gwtquery/gwtquery", "Date": "2013-12-09T21:36:00Z"},
{"Line": "=>355", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((state) == (PENDING)) reject.fire(o);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2169/buggy-version/gwtquery-core.src.main.java.com.google.gwt.query.client.plugins.deferred.Deferred.java", "BodyUseAPI": [], "Fixed commit": "79a35fd47a3ba0b3b3ed3ac03468837494da6a66", "Url": "https://api.github.com/repos/gwtquery/gwtquery", "Date": "2013-12-09T21:36:00Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.boundary.config.ConsulWatchedConfigurationSource.valFunc(com.ecwid.consul.v1.kv.model.GetValue)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (value != null) { builder.put(keyFunc(gv), value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/3427/buggy-version/src.main.java.com.boundary.config.ConsulWatchedConfigurationSource.java", "BodyUseAPI": ["builder.put(java.lang.String,java.lang.Object)"], "Fixed commit": "585ac49106dc90d292fc05fc1345b61597c4bcd1", "Url": "https://api.github.com/repos/irenical/archaius-consul", "Date": "2015-11-12T12:55:57Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.zstack.core.db.SQL.New(\"select value from GlobalConfigVO where name='reservedMemory' or name='overProvisioning.memory' or name='cpu.overProvisioning.ratio' \").list()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((results.size()) == 3) { java.lang.Long reservedMemory = org.zstack.utils.SizeUtils.sizeStringToBytes(results.get(0)); java.lang.Double overProvisioningMemory = java.lang.Double.parseDouble(results.get(1)); java.lang.Double overProvisioningCpu = java.lang.Double.parseDouble(results.get(2)); java.lang.Double totalAvailablMemory = ((availableMemory + usedMemory) - reservedMemory) * overProvisioningMemory; java.lang.Double totalAvailableCpu = (availableCpu + usedCpu) * overProvisioningCpu; if (((requestCpu != null) && (requestCpu > totalAvailableCpu)) || ((requestMemory != null) && (requestMemory > totalAvailablMemory))) { throw new org.zstack.header.apimediator.ApiMessageInterceptionException(argerr(\"the host doesn't have enough capacity\")); } }else if ((results.size()) == 1) { java.lang.Long reservedMemory = org.zstack.utils.SizeUtils.sizeStringToBytes(results.get(0)); java.lang.Long totalAvailablMemory = (availableMemory + usedMemory) - reservedMemory; java.lang.Long totalAvailabllCpu = availableCpu + usedCpu; if (((requestCpu != null) && (requestCpu > totalAvailabllCpu)) || ((requestMemory != null) && (requestMemory > totalAvailablMemory))) { throw new org.zstack.header.apimediator.ApiMessageInterceptionException(argerr(\"the host doesn't have enough capacity\")); }else { throw new org.zstack.header.apimediator.ApiMessageInterceptionException(argerr(\"Shouldn't be here\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/6169/buggy-version/compute.src.main.java.org.zstack.compute.vm.VmInstanceApiInterceptor.java", "BodyUseAPI": ["java.util.List<java.lang.String>.size()", "java.util.List<java.lang.String>.get(int)", "org.zstack.utils.SizeUtils.sizeStringToBytes(java.lang.String)", "java.util.List<java.lang.String>.get(int)", "java.lang.Double.parseDouble(java.lang.String)", "java.lang.Double.parseDouble(java.lang.String)", "java.util.List<java.lang.String>.get(int)", "org.zstack.utils.SizeUtils.sizeStringToBytes(java.lang.String)", "java.util.List<java.lang.String>.get(int)"], "Fixed commit": "c59e7c3f6139e544f311b8b1130e33dd43a4d371", "Url": "https://api.github.com/repos/camilesing/zstack", "Date": "2017-04-13T12:42:36Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.goide.psi.impl.GoPsiImplUtil.isBlank(def)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/1570/buggy-version/src.com.goide.inspections.GoNoNewVariablesInspection.java", "BodyUseAPI": [], "Fixed commit": "8e01f6525601ae4b6e3ac49695556e1204dbf486", "Url": "https://api.github.com/repos/go-lang-plugin-org/go-lang-idea-plugin", "Date": "2014-12-21T15:55:25Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["teammates.storage.api.StudentsDb.getStudentForEmail(studentToDelete.course,studentToDelete.email)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (student != null) { deleteDocument(Const.SearchIndex.STUDENT, student.key); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/12/buggy-version/src.main.java.teammates.storage.api.StudentsDb.java", "BodyUseAPI": ["teammates.storage.api.StudentsDb.deleteDocument(Const.SearchIndex.STUDENT,student.key)"], "Fixed commit": "cda2d4fa45414cf20ee9ad1fed18e20644736caa", "Url": "https://api.github.com/repos/kanghj/repo", "Date": "2014-10-08T12:28:18Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (value instanceof java.lang.Boolean) { if (!((boolean) (value))) value = null; }else if ((value instanceof java.lang.Character) && (value.equals('\\u0000'))) value = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2103/buggy-version/src.cn.edu.gdut.zaoying.EChartsAnnotationProcessor.java", "BodyUseAPI": ["java.lang.Object.equals(char)"], "Fixed commit": "6c3b4b298d1fe8f802372bc24c300a8926ecb54d", "Url": "https://api.github.com/repos/zaoying/EChartsAnnotation", "Date": "2016-02-27T11:31:16Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (throwableMessage != null) { message = message.concat(\": \").concat(throwableMessage); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/6984/buggy-version/core.src.main.java.com.mindscapehq.raygun4java.core.messages.RaygunErrorMessage.java", "BodyUseAPI": [], "Fixed commit": "14682524373659dd067c25c21c42fbee4611424f", "Url": "https://api.github.com/repos/MindscapeHQ/raygun4java", "Date": "2013-10-14T02:20:31Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getModel().getStorageUnits().getDateSinceLastRemovedItemsReport()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (sinceDate == null) { getView().setSinceLastValue(sinceDate); getView().setSinceLast(false); }else { getView().setSinceLast(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/1274/buggy-version/src.gui.reports.removed.RemovedReportController.java", "BodyUseAPI": ["gui.reports.removed.IRemovedReportView.setSinceLastValue(java.util.Date)"], "Fixed commit": "17011586a14c5e6b33afe4da067a0070c4db6272", "Url": "https://api.github.com/repos/djhaskin987/snake", "Date": "2013-11-20T02:45:32Z"},
{"Line": "=>547", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getTabbedPane().getActiveDrawingLibraryInterface()) == null) { teo.isgci.gui.MessageDialog.error(this, \"The active tab contains no graph to export.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/4940/buggy-version/teo.teo.isgci.gui.ISGCIMainFrame.java", "BodyUseAPI": [], "Fixed commit": "8e07f2dce57ed06b5a7ab2d40c5de114ae508918", "Url": "https://api.github.com/repos/Konsteirama/KonDrawer-JGraphX-Integration", "Date": "2013-06-21T14:25:29Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.theelix.libreexplorer.FileUtilties.getMimeType(android.net.Uri)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (mimeType == null) { mimeType = \"*/*\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/5295/buggy-version/app.src.main.java.com.theelix.libreexplorer.FileManager.java", "BodyUseAPI": [], "Fixed commit": "cf2a8bda9ccd96b6222440cf938a1909d8137c8c", "Url": "https://api.github.com/repos/TheElixZammuto/LibreEXplorer", "Date": "2016-01-31T16:14:54Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(this.path.exists())) { java.lang.String zip = element.getAttribute(\"zip\"); java.io.File zipFile = new java.io.File(bundleDir, zip); if (zipFile.exists()) { if (ts.utils.ZipUtils.isZipFile(zipFile)) { ts.utils.ZipUtils.extractZip(zipFile, baseDir); }else if (ts.utils.ZipUtils.isTarGZFile(zipFile)) { ts.utils.ZipUtils.extractTarGZ(zipFile, baseDir); }else if (ts.utils.ZipUtils.isTarXZFile(zipFile)) { ts.utils.ZipUtils.extractTarXZ(zipFile, baseDir); } if (this.path.exists()) { this.path.setExecutable(true); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/5584/buggy-version/eclipse.ts.eclipse.ide.core.src.ts.eclipse.ide.internal.core.nodejs.NodejsInstall.java", "BodyUseAPI": ["java.io.File.setExecutable(boolean)", "java.io.File.exists()"], "Fixed commit": "c9911363c030d13e9c3de95651b159294072916f", "Url": "https://api.github.com/repos/angelozerr/typescript.java", "Date": "2017-11-30T13:21:30Z"},
{"Line": "=>1394", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((fileDetailPanel.getCurrentMovie()) != null) { movieToWriteToDiskList.add(fileDetailPanel.getCurrentMovie()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/5300/buggy-version/JAVMovieScraper.src.moviescraper.doctord.GUI.GUIMain.java", "BodyUseAPI": ["java.util.List<moviescraper.doctord.Movie>.add(fileDetailPanel.getCurrentMovie())", "moviescraper.doctord.GUI.FileDetailPanel.getCurrentMovie()"], "Fixed commit": "6fdc1033922b23ee6d14968d692f07f96b0e9f91", "Url": "https://api.github.com/repos/DoctorD1501/JAVMovieScraper", "Date": "2014-09-27T15:59:59Z"},
{"Line": "=>516", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((siForPnode[pneigh]) == si) { try { java.lang.Object pAttr = pgraph.getEdgeAttr(pneigh, patternNodes[si]); java.lang.Object tAttr = tgraph.getEdgeAttr(matchedNodes[pneigh], tnode); if (!(tgraph.isEdge(tnode, tnode))) { if (!(tgraph.compatibleEdge(pAttr, tAttr))) return false; }else return false; } catch (java.lang.Exception e) { return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/7850/buggy-version/src.netmatch.algorithm.RIMatch.java", "BodyUseAPI": ["netmatch.algorithm.Graph.getEdgeAttr(int,int)", "netmatch.algorithm.Graph.getEdgeAttr(int,int)"], "Fixed commit": "1e23f259fb8b7b0fb510a46b58bea3936f5246c1", "Url": "https://api.github.com/repos/fabiorinnone/NetMatchStar", "Date": "2016-06-21T09:07:20Z"},
{"Line": "=>554", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.useRecurringLearner) selectNewActiveModel();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/1079/buggy-version/RecurringConceptsAdaptiveRandomForest.java", "BodyUseAPI": [], "Fixed commit": "e052db4c3d5245865f44e9f8e21c172c46fe9e76", "Url": "https://api.github.com/repos/cetrulin/RCARF", "Date": "2017-12-19T22:29:00Z"},
{"Line": "=>683", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((java.util.Collections.min(ranking.values())) <= (((moa.evaluation.DynamicWindowClassificationPerformanceEvaluator) (this.bkgLearner.internalWindowEvaluator)).getFractionIncorrectlyClassified(this.bkgLearner.indexOriginal))) { this.bkgLearner = moa.classifiers.meta.RecurringConceptsAdaptiveRandomForest.ConceptHistory.extractConcept(getMinKey(ranking)); java.lang.System.out.println((((\"RECURRING DRIFT RESET IN MODEL #\" + (this.indexOriginal)) + \" TO MODEL #\") + (this.bkgLearner.indexOriginal))); }else { java.lang.System.out.println((((\"The minimum recurrent concept error: \" + (java.util.Collections.min(ranking.values()))) + \" is not better than the bbk learner one: \") + (((moa.evaluation.DynamicWindowClassificationPerformanceEvaluator) (this.bkgLearner.internalWindowEvaluator)).getFractionIncorrectlyClassified(this.bkgLearner.indexOriginal)))); java.lang.System.out.println((((\"DRIFT RESET IN MODEL #\" + (this.indexOriginal)) + \" TO NEW BKG MODEL #\") + (this.bkgLearner.indexOriginal))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/1079/buggy-version/RecurringConceptsAdaptiveRandomForest.java", "BodyUseAPI": ["moa.evaluation.DynamicWindowClassificationPerformanceEvaluator.getFractionIncorrectlyClassified(int)", "java.util.Collections.min(java.util.Collection<java.lang.Double>)", "java.util.HashMap<java.lang.Integer, java.lang.Double>.values()", "java.io.PrintStream.println(java.lang.String)", "moa.classifiers.meta.RecurringConceptsAdaptiveRandomForest.RCARFBaseLearner.getMinKey(java.util.HashMap<java.lang.Integer, java.lang.Double>)", "moa.classifiers.meta.RecurringConceptsAdaptiveRandomForest.ConceptHistory.extractConcept(java.lang.Integer)", "java.io.PrintStream.println((((\"The minimum recurrent concept error: \" + (java.util.Collections.min(ranking.values()))) + \" is not better than the bbk learner one: \") + (((moa.evaluation.DynamicWindowClassificationPerformanceEvaluator) (this.bkgLearner.internalWindowEvaluator)).getFractionIncorrectlyClassified(this.bkgLearner.indexOriginal))))"], "Fixed commit": "e052db4c3d5245865f44e9f8e21c172c46fe9e76", "Url": "https://api.github.com/repos/cetrulin/RCARF", "Date": "2017-12-19T22:29:00Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (m_bRemote) { rbRemote.setChecked(true); }else { rbLocal.setChecked(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/851/buggy-version/src.org.dobots.communication.zmq.ZmqSettings.java", "BodyUseAPI": [], "Fixed commit": "ca2d414edf20bd58587ba5a0f52c3ca5dfa3505b", "Url": "https://api.github.com/repos/eggerdo/Robot-Lib", "Date": "2013-09-25T11:56:26Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!initHand) { Player.hand.add(top); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/1329/buggy-version/jblackjack.src.Player.java", "BodyUseAPI": [], "Fixed commit": "e24cdd4f44dfd865aa7b9bd0e11c354ea1792270", "Url": "https://api.github.com/repos/khal28/jblackjack", "Date": "2012-12-19T00:24:01Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (n < 0) { initHand = true; n = java.lang.Math.abs(n); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/1329/buggy-version/jblackjack.src.Player.java", "BodyUseAPI": ["java.lang.Math.abs(int)"], "Fixed commit": "e24cdd4f44dfd865aa7b9bd0e11c354ea1792270", "Url": "https://api.github.com/repos/khal28/jblackjack", "Date": "2012-12-19T00:24:01Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((source.getPriority()) != null) { target.setPriority(source.getPriority().getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/5867/buggy-version/mirrorgate-api.src.main.java.com.bbva.arq.devops.ae.mirrorgate.mapper.IssueMapper.java", "BodyUseAPI": ["com.bbva.arq.devops.ae.mirrorgate.model.Feature.setPriority(source.getPriority().getName())", "source.getPriority().getName()", "com.bbva.arq.devops.ae.mirrorgate.core.dto.IssueDTO.getPriority()"], "Fixed commit": "a7f98486c0ef8ed8e1700cca7527887682182a3c", "Url": "https://api.github.com/repos/BBVA/mirrorgate", "Date": "2017-06-21T07:59:49Z"},
{"Line": "=>8488", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mEditor) != null) mEditor.mDiscardNextActionUp = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/1055/buggy-version/core.java.android.widget.TextView.java", "BodyUseAPI": [], "Fixed commit": "ef640f6b90fc278a5923ae7ee07840c4d16ea6ef", "Url": "https://api.github.com/repos/codeaurora-unofficial/platform-frameworks-base", "Date": "2017-02-16T16:48:47Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (channel == null) { java.lang.System.out.println(\"Channel is null ...\"); }else if (!(channel.isClosed())) { channel.disconnect(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/5905/buggy-version/portal.src.main.java.org.scigap.iucig.filemanager.util.CommandCentral.java", "BodyUseAPI": ["com.jcraft.jsch.Channel.disconnect()", "com.jcraft.jsch.Channel.isClosed()"], "Fixed commit": "9678b4657c73bb1c2c3c05edfe433ab3488a26c0", "Url": "https://api.github.com/repos/SciGaP/IUGateway", "Date": "2014-03-24T16:12:53Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (channel == null) { java.lang.System.out.println(\"Channel is null ...\"); }else if (!(channel.isClosed())) { channel.disconnect(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/5905/buggy-version/portal.src.main.java.org.scigap.iucig.filemanager.util.CommandCentral.java", "BodyUseAPI": ["com.jcraft.jsch.Channel.isClosed()", "com.jcraft.jsch.Channel.disconnect()"], "Fixed commit": "9678b4657c73bb1c2c3c05edfe433ab3488a26c0", "Url": "https://api.github.com/repos/SciGaP/IUGateway", "Date": "2014-03-24T16:12:53Z"},
{"Line": "=>1491", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ref1.matches(\"(.*)CHEBI(.*)\")) { datanodeRes.addProperty(Wp.bdbChEBI, model.createResource((((org.wikipathways.wp2rdf.utils.Utils.IDENTIFIERS_ORG_URL) + \"/chebi/\") + (ref.getId().trim().replaceAll(\" \", \"_\"))))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2285/buggy-version/WP2RDF.src.main.java.org.wikipathways.wp2rdf.converter.DataNodeConverter.java", "BodyUseAPI": [], "Fixed commit": "861ab298736e38d3a138f4614faeb677aa0b408f", "Url": "https://api.github.com/repos/wikipathways/GPML2RDF", "Date": "2015-10-15T11:37:25Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["elem.getDataSource().getIdentifiersOrgUri(elem.getXref().getId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (url.matches(\"(.*)chebi/CHEBI:(.*)\")) { datanodeRes = model.createResource(url.trim().replaceAll(\" \", \"_\")); datanodeRes.addProperty(DC.identifier, model.createResource(url.trim().replaceAll(\" \", \"_\"))); }else if (url.matches(\"(.*)chebi(.*)\")) { datanodeRes = model.createResource(url.trim().replaceAll(\" \", \"_\").replace(\"chebi/\", \"chebi/CHEBI:\")); datanodeRes.addProperty(DC.identifier, model.createResource(url.trim().replaceAll(\" \", \"_\").replace(\"chebi/\", \"chebi/CHEBI:\"))); }else { datanodeRes = model.createResource(url.trim().replaceAll(\" \", \"_\")); datanodeRes.addProperty(DC.identifier, model.createResource(url.trim().replaceAll(\" \", \"_\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2285/buggy-version/WP2RDF.src.main.java.org.wikipathways.wp2rdf.converter.DataNodeConverter.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)", "com.hp.hpl.jena.rdf.model.Model.createResource(java.lang.String)", "java.lang.String.trim()", "java.lang.String.trim()", "java.lang.String.trim()", "java.lang.String.trim()", "java.lang.String.replaceAll(java.lang.String,java.lang.String)", "java.lang.String.replaceAll(java.lang.String,java.lang.String)", "java.lang.String.replaceAll(java.lang.String,java.lang.String)", "com.hp.hpl.jena.rdf.model.Model.createResource(java.lang.String)", "com.hp.hpl.jena.rdf.model.Model.createResource(java.lang.String)", "com.hp.hpl.jena.rdf.model.Resource.addProperty(DC.identifier,model.createResource(url.trim().replaceAll(\" \", \"_\")))", "java.lang.String.replaceAll(java.lang.String,java.lang.String)", "java.lang.String.matches(java.lang.String)", "java.lang.String.trim()", "java.lang.String.replaceAll(java.lang.String,java.lang.String)", "com.hp.hpl.jena.rdf.model.Model.createResource(java.lang.String)", "com.hp.hpl.jena.rdf.model.Resource.addProperty(DC.identifier,model.createResource(url.trim().replaceAll(\" \", \"_\")))", "java.lang.String.replace(java.lang.String,java.lang.String)", "java.lang.String.replace(java.lang.String,java.lang.String)", "com.hp.hpl.jena.rdf.model.Model.createResource(java.lang.String)", "com.hp.hpl.jena.rdf.model.Model.createResource(java.lang.String)", "java.lang.String.trim()", "com.hp.hpl.jena.rdf.model.Resource.addProperty(DC.identifier,model.createResource(url.trim().replaceAll(\" \", \"_\").replace(\"chebi/\", \"chebi/CHEBI:\")))"], "Fixed commit": "861ab298736e38d3a138f4614faeb677aa0b408f", "Url": "https://api.github.com/repos/wikipathways/GPML2RDF", "Date": "2015-10-15T11:37:25Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event != null) && ((event.getAction()) != (android.view.KeyEvent.ACTION_DOWN))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/5864/buggy-version/android.src.com.github.donkirkby.vograbulary.UltraghostActivity.java", "BodyUseAPI": [], "Fixed commit": "b0472afc9f5d10093ec8240a5ecddf31c86bce93", "Url": "https://api.github.com/repos/donkirkby/vograbulary", "Date": "2015-03-06T04:45:41Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((repair.getCreateDate()) == null) { this.createDate = null; }else { this.createDate = repair.getCreateDate().getTime(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/37/buggy-version/src.main.java.com.webgis.web.dto.WebRepair.java", "BodyUseAPI": [], "Fixed commit": "2ea0e8c4ce8c56aa2759d5282a840f0446cb344f", "Url": "https://api.github.com/repos/XLab-Tongji/WebGIS-BackEnd", "Date": "2017-06-18T12:44:35Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((repair.getState()) == null) { this.state = null; }else { this.state = repair.getState().getValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/37/buggy-version/src.main.java.com.webgis.web.dto.WebRepair.java", "BodyUseAPI": [], "Fixed commit": "2ea0e8c4ce8c56aa2759d5282a840f0446cb344f", "Url": "https://api.github.com/repos/XLab-Tongji/WebGIS-BackEnd", "Date": "2017-06-18T12:44:35Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((currentThrottleValue) != lastWrittenThrottleValue) || ((currentSteerValue) != lastWrittenSteerValue)) { sendValuesToCar(); lastWrittenThrottleValue = currentThrottleValue; lastWrittenSteerValue = currentSteerValue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2767/buggy-version/src.moped.src.main.java.core.car_control.CarControlImpl.java", "BodyUseAPI": [], "Fixed commit": "c3a942d7d7a35855a8c75ac44061f5dd040bb299", "Url": "https://api.github.com/repos/felixnorden/moppepojkar", "Date": "2017-10-04T13:37:27Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(java.lang.Character.isLetter(move.charAt(0)))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2671/buggy-version/hw1.PgnReader.java", "BodyUseAPI": [], "Fixed commit": "57f2568179173eac2739ac3bbe47be0989dc17bb", "Url": "https://api.github.com/repos/matthewsklar/CS-1331", "Date": "2017-09-29T21:26:47Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.teamshi.collectionsystem3.DataManager.getCalculatingList(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((calculatingRigs.size()) == 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/5258/buggy-version/app.src.main.java.com.teamshi.collectionsystem3.RigGraphActivity.java", "BodyUseAPI": [], "Fixed commit": "ad5eb70277620abc0e3abbd20efac24c111fba8f", "Url": "https://api.github.com/repos/TeamShi/CollectionSystem3", "Date": "2016-12-25T13:16:49Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((android.widget.TextView) (findViewById(v.getId()))).getText()) == null) { android.content.Intent intent = new android.content.Intent(); intent.setAction(Intent.ACTION_VIEW); intent.setDataAndType(android.net.Uri.parse(fileUri.toString()), \"image/*\"); startActivity(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/6369/buggy-version/src.ch.m335.controllers.DetailActivity.java", "BodyUseAPI": [], "Fixed commit": "a24cac583e7438fe3ec4b06799ca95f634e3ac9f", "Url": "https://api.github.com/repos/EhMann365/DoSomething", "Date": "2014-06-20T12:57:04Z"},
{"Line": "=>357", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(isRestricted())) && (mFile.canRead())) { try { java.io.BufferedReader reader = new java.io.BufferedReader(new java.io.FileReader(mFile)); java.lang.String line = reader.readLine(); reader.close(); return line; } catch (java.lang.Throwable e) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/1414/buggy-version/src.com.spazedog.lib.rootfw3.extenders.FileExtender.java", "BodyUseAPI": [], "Fixed commit": "ded5ad51e2458c0f44171b0313a22e9b90f5c04b", "Url": "https://api.github.com/repos/SpazeDog/rootfw", "Date": "2013-09-17T23:23:04Z"},
{"Line": "=>320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(isRestricted())) && (mFile.canRead())) { try { java.io.BufferedReader reader = new java.io.BufferedReader(new java.io.FileReader(mFile)); java.util.List<java.lang.String> content = new java.util.ArrayList<java.lang.String>(); java.lang.String line; while ((line = reader.readLine()) != null) { content.add(line); } reader.close(); return new com.spazedog.lib.rootfw3.extenders.FileExtender.FileData(content.toArray(new java.lang.String[content.size()])); } catch (java.lang.Throwable e) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/1414/buggy-version/src.com.spazedog.lib.rootfw3.extenders.FileExtender.java", "BodyUseAPI": [], "Fixed commit": "ded5ad51e2458c0f44171b0313a22e9b90f5c04b", "Url": "https://api.github.com/repos/SpazeDog/rootfw", "Date": "2013-09-17T23:23:04Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(outputType.equals(org.openpixi.pixi.diagnostics.methods.OccupationNumbersInTime.OUTPUT_NONE))) { org.openpixi.pixi.diagnostics.FileFunctions.clearFile((\"output/\" + (outputFileName))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/1593/buggy-version/pixi.src.main.java.org.openpixi.pixi.diagnostics.methods.OccupationNumbersInTime.java", "BodyUseAPI": [], "Fixed commit": "3bbfb4cd46502286fdc46741cd365fb2583af75b", "Url": "https://api.github.com/repos/d-mueller/openpixi", "Date": "2016-07-28T15:13:11Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rotation) < 0) { rotation += 6; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2475/buggy-version/src.main.view.View.java", "BodyUseAPI": [], "Fixed commit": "d8adb13220e288226fc9fb2e5f24905bdf833555", "Url": "https://api.github.com/repos/OOPteam10/Iteration3", "Date": "2017-03-29T17:07:07Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rotation) > 6) { rotation -= 6; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2475/buggy-version/src.main.view.View.java", "BodyUseAPI": [], "Fixed commit": "d8adb13220e288226fc9fb2e5f24905bdf833555", "Url": "https://api.github.com/repos/OOPteam10/Iteration3", "Date": "2017-03-29T17:07:07Z"},
{"Line": "=>394", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (key.contains(bakatxt.core.Database.TAG_DELETED)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/1874/buggy-version/src.bakatxt.core.Database.java", "BodyUseAPI": [], "Fixed commit": "da86d7814d73011e1087f23d0aefc0364821dbac", "Url": "https://api.github.com/repos/cs2103aug2014-t09-4j/main", "Date": "2014-10-08T13:40:24Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((-0.1F) > deltaX) || (deltaX > 0.1F)) || (((-0.1F) > deltaY) || (deltaY > 0.1F))) { float currentDuration = (getDuration()) - (getTime()); restart(); setDuration(currentDuration); }else { currentX = (startX) + (((endX) - (startX)) * percent); currentY = (startY) + (((endY) - (startY)) * percent); actor.setPosition(((currentX) - ((actor.getWidth()) / 2.0F)), ((currentY) - ((actor.getHeight()) / 2.0F))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/9213/buggy-version/catroid.src.org.catrobat.catroid.content.actions.GlideToAction.java", "BodyUseAPI": [], "Fixed commit": "f5a534cd8ba8c62bdcb654abc5a404949ea547d8", "Url": "https://api.github.com/repos/Catrobat/Catroid", "Date": "2013-02-18T10:43:25Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["parser.ASTunarySetExpression.jjtGetChild(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((unarExprChild.jjtGetNumChildren()) != 1) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/8724/buggy-version/SparcTranslator.translating.TermFetcher.java", "BodyUseAPI": [], "Fixed commit": "f91a20aa2736c868d188e16799ee3acfdd140c0e", "Url": "https://api.github.com/repos/iensen/sparc", "Date": "2016-07-28T22:26:40Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["parser.ASTunarySetExpression.jjtGetChild(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((argUnarExprChild.jjtGetNumChildren()) != 1) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/8724/buggy-version/SparcTranslator.translating.TermFetcher.java", "BodyUseAPI": [], "Fixed commit": "f91a20aa2736c868d188e16799ee3acfdd140c0e", "Url": "https://api.github.com/repos/iensen/sparc", "Date": "2016-07-28T22:26:40Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(composite.isDisposed())) { composite.removeListener(SWT.PaintItem, this); composite.removeListener(SWT.EraseItem, this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/9060/buggy-version/plugins.com.xored.glance.ui.controls.src.com.xored.glance.ui.controls.items.ItemDecorator.java", "BodyUseAPI": ["org.eclipse.swt.widgets.Composite.removeListener(SWT.PaintItem,com.xored.glance.ui.controls.items.ItemDecorator)", "org.eclipse.swt.widgets.Composite.removeListener(SWT.EraseItem,com.xored.glance.ui.controls.items.ItemDecorator)"], "Fixed commit": "9f2beedec5206d5ce18db56de020fdcbe69fe227", "Url": "https://api.github.com/repos/albfan/glance", "Date": "2016-07-07T02:08:33Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(composite.isDisposed())) { org.eclipse.swt.graphics.Rectangle rect = composite.getClientArea(); composite.redraw(rect.x, rect.y, rect.width, rect.height, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/9060/buggy-version/plugins.com.xored.glance.ui.controls.src.com.xored.glance.ui.controls.items.ItemDecorator.java", "BodyUseAPI": ["org.eclipse.swt.widgets.Composite.getClientArea()", "org.eclipse.swt.widgets.Composite.redraw(rect.x,rect.y,rect.width,rect.height,boolean)"], "Fixed commit": "9f2beedec5206d5ce18db56de020fdcbe69fe227", "Url": "https://api.github.com/repos/albfan/glance", "Date": "2016-07-07T02:08:33Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["melnorme.lang.tooling.parser.lexer.ICharacterReader.lookahead()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(((la == '{') || (la == '}')) || (isHexDigit(la)))) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/8833/buggy-version/plugin_tooling.src-lang.melnorme.lang.tooling.parser.lexer.CharacterLexingRule.java", "BodyUseAPI": [], "Fixed commit": "112c7ab7ae0562847d90ce81cac2b3c290b1567b", "Url": "https://api.github.com/repos/GoClipse/goclipse", "Date": "2015-04-09T20:13:21Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((solicitud) != null) solicitud.init();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/3923/buggy-version/fap.app.models.Evaluacion.java", "BodyUseAPI": [], "Fixed commit": "a71a3c00496db79ccd056f3992129756272730cb", "Url": "https://api.github.com/repos/FAP-Team/Fap-Module", "Date": "2011-11-22T15:26:13Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((socket) != null) { socket.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/3661/buggy-version/DroidPlanner.src.com.MAVLink.MAVLink.java", "BodyUseAPI": [], "Fixed commit": "29f5500050cc851a662cff489bbfb2bb38231caa", "Url": "https://api.github.com/repos/arthurbenemann/droidplanner", "Date": "2013-03-01T01:25:40Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((_text.length()) > 0) { float startX = (((_sprite.getX()) + (_sprite.getWidth())) - 5) - (com.cpaulus.music_thing.Cell._font.getBounds(_text).width); float startY = (_sprite.getY()) + 55; com.cpaulus.music_thing.Cell._font.draw(batch, _text, startX, startY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/7115/buggy-version/music_things.src.com.cpaulus.music_thing.Cell.java", "BodyUseAPI": ["com.badlogic.gdx.graphics.g2d.BitmapFont.draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,java.lang.String,float,float)", "com.badlogic.gdx.graphics.g2d.BitmapFont.getBounds(java.lang.String)"], "Fixed commit": "a563e72ed6ca42822bce600878627f0de7bca6b8", "Url": "https://api.github.com/repos/CyrilPaulus/MusicThing", "Date": "2014-03-16T20:59:26Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((inputs[i]) != null) inputs[i].registerAsSubscriber(this);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/7372/buggy-version/sandbox.prototype.common.src.main.java.org.apache.drill.common.logical.data.Union.java", "BodyUseAPI": ["inputs[i].registerAsSubscriber(org.apache.drill.common.logical.data.Union)"], "Fixed commit": "29c2a16c1ee0d16e493594d150c1dd9e41b19b88", "Url": "https://api.github.com/repos/XingCloud/incubator-drill", "Date": "2013-08-16T02:57:58Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((inputs[i]) != null) inputs[i].unregisterSubscriber(this);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/7372/buggy-version/sandbox.prototype.common.src.main.java.org.apache.drill.common.logical.data.Union.java", "BodyUseAPI": ["inputs[i].unregisterSubscriber(org.apache.drill.common.logical.data.Union)"], "Fixed commit": "29c2a16c1ee0d16e493594d150c1dd9e41b19b88", "Url": "https://api.github.com/repos/XingCloud/incubator-drill", "Date": "2013-08-16T02:57:58Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.left) != null) { this.left.registerAsSubscriber(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/7372/buggy-version/sandbox.prototype.common.src.main.java.org.apache.drill.common.logical.data.Join.java", "BodyUseAPI": [], "Fixed commit": "29c2a16c1ee0d16e493594d150c1dd9e41b19b88", "Url": "https://api.github.com/repos/XingCloud/incubator-drill", "Date": "2013-08-16T02:57:58Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.right) != null) { this.right.registerAsSubscriber(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/7372/buggy-version/sandbox.prototype.common.src.main.java.org.apache.drill.common.logical.data.Join.java", "BodyUseAPI": [], "Fixed commit": "29c2a16c1ee0d16e493594d150c1dd9e41b19b88", "Url": "https://api.github.com/repos/XingCloud/incubator-drill", "Date": "2013-08-16T02:57:58Z"},
{"Line": "=>355", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((reward) == null) { throw new java.lang.IllegalStateException(\"reward cannot be null\"); }else if ((bid) == (-1)) { throw new java.lang.IllegalStateException(\"bid hasn't been set\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/4714/buggy-version/src.main.java.com.sainttx.auction.structure.AbstractAuction.java", "BodyUseAPI": [], "Fixed commit": "6b726dd3812e26429c9ac4a8fa09c3faee14e608", "Url": "https://api.github.com/repos/sainttx/Auctions", "Date": "2015-05-09T18:22:05Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getLastCashierClosure()) == null) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/3623/buggy-version/src.main.java.controllers.CashierClosuresController.java", "BodyUseAPI": [], "Fixed commit": "6a2580114bd8a69fee55bcd0354c1353725af82b", "Url": "https://api.github.com/repos/miw-upm/SPRING.tpv", "Date": "2017-05-15T10:01:01Z"},
{"Line": "=>276", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraftforge.fml.client.FMLClientHandler.instance().getClient().playerController.interactWithEntity(net.minecraft.client.entity.EntityPlayerSP,net.minecraft.entity.passive.EntityAnimal,net.minecraft.item.ItemStack,EnumHand.MAIN_HAND)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (result == (net.minecraft.util.EnumActionResult.SUCCESS)) { lastUsedItem = handItem; minusOneInHand(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/7432/buggy-version/src.main.java.org.devinprogress.autoharvest.TickListener.java", "BodyUseAPI": [], "Fixed commit": "8bbf9b98abfc6dc3dfc50e9e36305cc37fd97c17", "Url": "https://api.github.com/repos/RecursiveG/AutoHarvestMod", "Date": "2016-05-17T12:13:38Z"},
{"Line": "=>500", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((string.equals(\"\")) && (input.getValue().equals(\"\"))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/495/buggy-version/console.src.main.java.org.vaadin7.console.client.TextConsole.java", "BodyUseAPI": [], "Fixed commit": "da3741bcb0a5678224415705014fc73546e148a6", "Url": "https://api.github.com/repos/markathomas/vaadin7-console-addon", "Date": "2016-04-19T20:01:17Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.jdt.core.IField.getElementName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(org.eclipse.iee.translator.antlr.translator.JavaTranslator.fFoundedVariables.contains(fieldName))) org.eclipse.iee.translator.antlr.translator.JavaTranslator.fFoundedVariables.add(fieldName);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/1210/buggy-version/org.eclipse.iee.translator.antlr.src.org.eclipse.iee.translator.antlr.translator.JavaTranslator.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "81e635e0f5f75064c3822c89b69f290df3a61f2a", "Url": "https://api.github.com/repos/iee/iee", "Date": "2013-04-29T10:51:47Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.jdt.core.IField.getElementName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(org.eclipse.iee.translator.antlr.translator.JavaTranslator.fFoundedVariables.contains(fieldName))) org.eclipse.iee.translator.antlr.translator.JavaTranslator.fFoundedVariables.add(fieldName);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/1210/buggy-version/org.eclipse.iee.translator.antlr.src.org.eclipse.iee.translator.antlr.translator.JavaTranslator.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "81e635e0f5f75064c3822c89b69f290df3a61f2a", "Url": "https://api.github.com/repos/iee/iee", "Date": "2013-04-29T10:51:47Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((parameters.getParameterBooleanValue(\"removeDocuments\")) || (parameters.getParameterBooleanValue(\"keepDocuments\"))) || (parameters.getParameterBooleanValue(\"reorderDocuments\"))) { java.util.List<java.lang.String> ids = new java.util.ArrayList<java.lang.String>(); for (java.lang.String docId : parameters.getParameterValues(\"docId\")) { if ((docId.isEmpty()) == false) { ids.add(docId); } } corpus = getCorpus(); java.lang.String[] docIndices = parameters.getParameterValues(\"docIndex\"); if (((docIndices.length) > 0) && ((docIndices[0].isEmpty()) == false)) { for (int docIndex : parameters.getParameterIntValues(\"docIndex\")) { if (docIndex < (corpus.size())) { ids.add(corpus.getDocument(docIndex).getId()); } } } java.util.List<java.lang.String> keepers = new java.util.ArrayList<java.lang.String>(); if (parameters.getParameterBooleanValue(\"removeDocuments\")) { java.util.Set<java.lang.String> set = new java.util.HashSet<java.lang.String>(ids); for (java.lang.String id : corpus.getDocumentIds()) { if ((set.contains(id)) == false) { keepers.add(id); } } } if (parameters.getParameterBooleanValue(\"keepDocuments\")) { java.util.Set<java.lang.String> set = new java.util.HashSet<java.lang.String>(ids); for (java.lang.String id : ids) { if (set.contains(id)) { keepers.add(id); } } } if (parameters.getParameterBooleanValue(\"reorderDocuments\")) { java.util.Set<java.lang.String> set = new java.util.HashSet<java.lang.String>(corpus.getDocumentIds()); for (java.lang.String id : ids) { if (set.contains(id)) { keepers.add(id); } } } java.lang.String corpusId = storage.storeStrings(keepers); org.voyanttools.trombone.util.FlexibleParameters params = new org.voyanttools.trombone.util.FlexibleParameters(new java.lang.String[]{ \"storedId=\" + corpusId, \"nextCorpusCreatorStep=corpus\" }); org.voyanttools.trombone.tool.build.RealCorpusCreator realCorpusCreator = new org.voyanttools.trombone.tool.build.RealCorpusCreator(storage, params); realCorpusCreator.run(); this.id = realCorpusCreator.getStoredId(); this.corpus = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/4458/buggy-version/src.main.java.org.voyanttools.trombone.tool.corpus.CorpusManager.java", "BodyUseAPI": ["org.voyanttools.trombone.tool.corpus.CorpusManager.getParameterValues(java.lang.String)", "org.voyanttools.trombone.tool.corpus.CorpusManager.getParameterBooleanValue(java.lang.String)", "org.voyanttools.trombone.tool.corpus.CorpusManager.getParameterBooleanValue(java.lang.String)", "org.voyanttools.trombone.tool.corpus.CorpusManager.getParameterBooleanValue(java.lang.String)", "org.voyanttools.trombone.tool.corpus.CorpusManager.getParameterValues(java.lang.String)", "org.voyanttools.trombone.tool.corpus.CorpusManager.getParameterIntValues(java.lang.String)"], "Fixed commit": "8fab5c8ba900a23d809cb4765d1b6b6c959b2396", "Url": "https://api.github.com/repos/sgsinclair/trombone", "Date": "2015-11-05T19:19:02Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((col - counter) == 0) { merged = checkForEquality(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/1840/buggy-version/src.main.java.groupProject.twentyFortyEight.GameLogic.java", "BodyUseAPI": [], "Fixed commit": "44ae3ebf474ff3966087c21cf1ed55d4dfa8bfa4", "Url": "https://api.github.com/repos/shiradusowitz/groupProject-2048", "Date": "2016-03-09T00:16:50Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((col - counter) == 0) { merged = checkForEquality(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/1840/buggy-version/src.main.java.groupProject.twentyFortyEight.GameLogic.java", "BodyUseAPI": [], "Fixed commit": "44ae3ebf474ff3966087c21cf1ed55d4dfa8bfa4", "Url": "https://api.github.com/repos/shiradusowitz/groupProject-2048", "Date": "2016-03-09T00:16:50Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((col - counter) == 0) { merged = checkForEquality(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/1840/buggy-version/src.main.java.groupProject.twentyFortyEight.GameLogic.java", "BodyUseAPI": [], "Fixed commit": "44ae3ebf474ff3966087c21cf1ed55d4dfa8bfa4", "Url": "https://api.github.com/repos/shiradusowitz/groupProject-2048", "Date": "2016-03-09T00:16:50Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((col - counter) == 0) { merged = checkForEquality(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/1840/buggy-version/src.main.java.groupProject.twentyFortyEight.GameLogic.java", "BodyUseAPI": [], "Fixed commit": "44ae3ebf474ff3966087c21cf1ed55d4dfa8bfa4", "Url": "https://api.github.com/repos/shiradusowitz/groupProject-2048", "Date": "2016-03-09T00:16:50Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (progress.isShowing()) progress.dismiss();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/1993/buggy-version/app.src.main.java.com.tuncay.superlotteryluckynumbers.SonCekilisActivity.java", "BodyUseAPI": ["android.app.ProgressDialog.dismiss()"], "Fixed commit": "1b1305afb4f5e9bd1278b2c0c27fdbdcbcd8f494", "Url": "https://api.github.com/repos/tuncayalt/SuperLotteryLuckyNumbers", "Date": "2017-12-27T19:23:59Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((etLogin.getText().toString()) == \"\") { return \"Error: Please enter your email address.\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/3437/buggy-version/app.src.main.java.sweng500team2summer15.hov_helper.Account.ResendVerificationCodeActivity.java", "BodyUseAPI": [], "Fixed commit": "a312f905651de731321ec5fec5dfe94788b3510a", "Url": "https://api.github.com/repos/FergusonTR/HOV_Helper", "Date": "2015-08-10T23:16:24Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sump.device.logicsniffer.LogicSnifferConfigDialog.getEnabledChannelGroups()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (chGroups > 0) { int sampleRate = parent.getSelectedSampleRate(); double timeSpace = (US_PER_S * ((double) ((java.lang.Integer) (aValue)))) / (sampleRate * chGroups); if (timeSpace >= US_PER_S) { timeStr = java.lang.String.format(\" (%.2fs)\", (timeSpace / US_PER_S)); }else if (timeSpace >= US_PER_MS) { timeStr = java.lang.String.format(\" (%.2fms)\", (timeSpace / US_PER_MS)); }else { timeStr = java.lang.String.format(\" (%.2fus)\", timeSpace); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/6334/buggy-version/device.logicsniffer.src.main.java.org.sump.device.logicsniffer.LogicSnifferConfigDialog.java", "BodyUseAPI": [], "Fixed commit": "d8ee726ce840c92b0a4ddabd67723355302c4d57", "Url": "https://api.github.com/repos/Zizzle/ols", "Date": "2013-03-11T21:27:22Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isFetchingTweets)) { isFetchingTweets = true; lvTweets.addFooterView(footerView); requestOldTweets(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/8668/buggy-version/src.codepath.apps.twitter.fragments.TweetsListFragment.java", "BodyUseAPI": [], "Fixed commit": "d29076ac055d36529a51f3430a6e2a0436b9bb03", "Url": "https://api.github.com/repos/nguo/cpath-twitter-v2", "Date": "2014-04-06T07:04:53Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.usac.brayan.mensajeriaarquitectura.MensajesAlumnos.actualCurso) != null) { toolbar.setTitle((((com.usac.brayan.mensajeriaarquitectura.MensajesAlumnos.actualCurso.nombre) + \" - \") + (com.usac.brayan.mensajeriaarquitectura.MensajesAlumnos.actualCurso.seccion))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/62/buggy-version/app.src.main.java.com.usac.brayan.mensajeriaarquitectura.MensajesAlumnos.java", "BodyUseAPI": [], "Fixed commit": "c31a98c8e18e9ddb74ada57af0290e6cbe2590e3", "Url": "https://api.github.com/repos/bragonya1992/MIA", "Date": "2017-06-06T17:34:53Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.usac.brayan.mensajeriaarquitectura.MensajesMaestros.actualCurso) != null) { toolbar.setTitle((((com.usac.brayan.mensajeriaarquitectura.MensajesMaestros.actualCurso.nombre) + \" - \") + (com.usac.brayan.mensajeriaarquitectura.MensajesMaestros.actualCurso.seccion))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/62/buggy-version/app.src.main.java.com.usac.brayan.mensajeriaarquitectura.MensajesMaestros.java", "BodyUseAPI": [], "Fixed commit": "c31a98c8e18e9ddb74ada57af0290e6cbe2590e3", "Url": "https://api.github.com/repos/bragonya1992/MIA", "Date": "2017-06-06T17:34:53Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ServicioNotificacionesFARUSAC.sm) == null) { ServicioNotificacionesFARUSAC.sm = new com.usac.brayan.mensajeriaarquitectura.SessionManager(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/62/buggy-version/app.src.main.java.com.usac.brayan.mensajeriaarquitectura.principal.java", "BodyUseAPI": [], "Fixed commit": "c31a98c8e18e9ddb74ada57af0290e6cbe2590e3", "Url": "https://api.github.com/repos/bragonya1992/MIA", "Date": "2017-06-06T17:34:53Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (list == null) return \"()\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/3415/buggy-version/src.main.java.sample.Tools.java", "BodyUseAPI": [], "Fixed commit": "9b18426ce1c22fd25179e630fa120ec9958d77b3", "Url": "https://api.github.com/repos/andrewyashin/IPK", "Date": "2017-02-21T16:58:56Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(OCommandExecutorSQLAbstract.CLUSTER_PREFIX.length())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((clusterNames.startsWith(\"[\")) && (clusterNames.endsWith(\"]\"))) { final java.util.Collection<java.lang.String> clusters = new java.util.HashSet<java.lang.String>(3); com.orientechnologies.orient.core.serialization.serializer.OStringSerializerHelper.getCollection(clusterNames, 0, clusters); for (java.lang.String cl : clusters) { targetClusters.put(cl, cl); } }else targetClusters.put(clusterNames, alias);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/5347/buggy-version/core.src.main.java.com.orientechnologies.orient.core.sql.filter.OSQLTarget.java", "BodyUseAPI": ["com.orientechnologies.orient.core.serialization.serializer.OStringSerializerHelper.getCollection(java.lang.String,int,java.util.Collection<java.lang.String>)", "java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)"], "Fixed commit": "a3e4007a3189ea7d1c94323d7e188422c103e486", "Url": "https://api.github.com/repos/aheintz/orientdb", "Date": "2015-06-19T15:22:26Z"},
{"Line": "=>1300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (iPropertyValue instanceof com.orientechnologies.orient.core.record.impl.ODocument) { if (OType.EMBEDDED.equals(fieldType)) { final com.orientechnologies.orient.core.record.impl.ODocument embeddedDocument = ((com.orientechnologies.orient.core.record.impl.ODocument) (iPropertyValue)); com.orientechnologies.orient.core.record.impl.ODocumentInternal.addOwner(embeddedDocument, this); }else if (OType.LINK.equals(fieldType)) { final com.orientechnologies.orient.core.record.impl.ODocument embeddedDocument = ((com.orientechnologies.orient.core.record.impl.ODocument) (iPropertyValue)); com.orientechnologies.orient.core.record.impl.ODocumentInternal.removeOwner(embeddedDocument, this); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/8462/buggy-version/core.src.main.java.com.orientechnologies.orient.core.record.impl.ODocument.java", "BodyUseAPI": [], "Fixed commit": "112b9ef4b39ca3cbb3013537526cd07a04795bf2", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2016-07-27T10:23:23Z"},
{"Line": "=>412", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.alibaba.fastjson.JSONObject.getString(cn.edu.xidian.platform.gen.utils.uml.parse.processor.JAVA_TYPE.toString())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (type == null) { attribute.setJavaType(JavaType.Object); }else if ((cn.edu.xidian.platform.gen.entity.uml.JavaType.convertFromString(type.trim())) != null) { attribute.setJavaType(cn.edu.xidian.platform.gen.entity.uml.JavaType.convertFromString(type)); }else { com.alibaba.fastjson.JSONObject var4 = var3.getJSONObject(cn.edu.xidian.platform.gen.utils.uml.parse.processor.JAVA_TYPE.toString()); java.lang.String refTypeId = var4.getString(cn.edu.xidian.platform.gen.utils.uml.parse.processor.PARENT_ID.toString()); if (cn.edu.xidian.platform.gen.utils.uml.parse.processor.DefaultProcessor.classesCachedMap.get().containsKey(refTypeId)) { attribute.setOtherType(cn.edu.xidian.platform.gen.utils.uml.parse.processor.DefaultProcessor.classesCachedMap.get().get(refTypeId).getName()); }else if (cn.edu.xidian.platform.gen.utils.uml.parse.processor.DefaultProcessor.interfacesCachedMap.get().containsKey(refTypeId)) { attribute.setOtherType(cn.edu.xidian.platform.gen.utils.uml.parse.processor.DefaultProcessor.interfacesCachedMap.get().get(refTypeId).getName()); }else if (cn.edu.xidian.platform.gen.utils.uml.parse.processor.DefaultProcessor.enumsCachedMap.get().containsKey(refTypeId)) { attribute.setOtherType(cn.edu.xidian.platform.gen.utils.uml.parse.processor.DefaultProcessor.enumsCachedMap.get().get(refTypeId).getName()); }else { if ((cn.edu.xidian.platform.gen.utils.uml.parse.processor.DefaultProcessor.otherTypeAttrRefPendingMap.get()) == null) { cn.edu.xidian.platform.gen.utils.uml.parse.processor.DefaultProcessor.otherTypeAttrRefPendingMap.set(new java.util.HashMap()); } if (cn.edu.xidian.platform.gen.utils.uml.parse.processor.DefaultProcessor.otherTypeAttrRefPendingMap.get().containsKey(refTypeId)) { cn.edu.xidian.platform.gen.utils.uml.parse.processor.DefaultProcessor.otherTypeAttrRefPendingMap.get().get(refTypeId).add(attribute); }else { java.util.List<cn.edu.xidian.platform.gen.entity.uml.UMLAttribute> pendingLists = new java.util.ArrayList<cn.edu.xidian.platform.gen.entity.uml.UMLAttribute>(); pendingLists.add(attribute); cn.edu.xidian.platform.gen.utils.uml.parse.processor.DefaultProcessor.otherTypeAttrRefPendingMap.get().put(refTypeId, pendingLists); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/821/buggy-version/gen.src.main.java.cn.edu.xidian.platform.gen.utils.uml.parse.processor.DefaultProcessor.java", "BodyUseAPI": ["java.lang.String.trim()", "cn.edu.xidian.platform.gen.entity.uml.JavaType.convertFromString(java.lang.String)", "cn.edu.xidian.platform.gen.entity.uml.JavaType.convertFromString(java.lang.String)", "cn.edu.xidian.platform.gen.entity.uml.UMLAttribute.setJavaType(cn.edu.xidian.platform.gen.entity.uml.JavaType.convertFromString(type))"], "Fixed commit": "9fc9fd7661734349314702edab8c8deec02f3c1a", "Url": "https://api.github.com/repos/HelloFy/agile-develop-platform", "Date": "2017-05-07T13:15:33Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getEntityManager().find(java.lang.Class,accountJson.getInt(ch.bfh.awt.passwords_safe.services.UserService.AC_ID))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((persistedAccount.getUser().getUserId()) == (user.getUserId())) { persistedAccount.setEncryptedPassword(accountJson.getJSONObject(ch.bfh.awt.passwords_safe.services.UserService.AC_PWD).toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2219/buggy-version/src.main.java.ch.bfh.awt.passwords_safe.services.UserService.java", "BodyUseAPI": ["ch.bfh.awt.passwords_safe.domain.Account.setEncryptedPassword(accountJson.getJSONObject(ch.bfh.awt.passwords_safe.services.UserService.AC_PWD).toString())"], "Fixed commit": "caa320b2a7ebc21cd8d2664686f1ba1a62e797f1", "Url": "https://api.github.com/repos/kofmp1/SecurePasswordsSafe", "Date": "2016-11-20T13:21:46Z"},
{"Line": "=>617", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(sr.firstUnknownWordMatches)) { sr.firstUnknownWordMatches = ((localeName.equals(getUnknownSearchWord())) || (getNameStringMatcher().matches(localeName))) || (getNameStringMatcher().matches(otherNames)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2206/buggy-version/OsmAnd-java.src.net.osmand.search.core.SearchPhrase.java", "BodyUseAPI": [], "Fixed commit": "c08484d63e7e6002f86b489c4468eb36e4ec020d", "Url": "https://api.github.com/repos/osmandapp/Osmand", "Date": "2017-04-17T16:43:49Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (nucs.containsKey(i.getChr())) { for (edu.unc.genomics.nucleosomes.NucleosomeCall call : nucs.get(i.getChr())) { if (((call.getDyad()) >= (i.low())) && ((call.getDyad()) <= (i.high()))) { intervalNucs.add(call); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/4322/buggy-version/src.edu.unc.genomics.nucleosomes.FindBoundaryNucleosomes.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.util.List<edu.unc.genomics.nucleosomes.NucleosomeCall>>.get(i.getChr())", "edu.unc.genomics.Interval.high()", "edu.unc.genomics.Interval.low()", "edu.unc.genomics.Interval.getChr()"], "Fixed commit": "d0bdd3b003d9860d08812bc5bef3c5a52ab77fed", "Url": "https://api.github.com/repos/timpalpant/java-genomics-toolkit", "Date": "2012-03-28T17:33:56Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (task.isDeleted()) { removeEquivalentTask(task); }else { addTaskToMap(task); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/5562/buggy-version/src.bakatxt.core.Database.java", "BodyUseAPI": ["bakatxt.core.Database.removeEquivalentTask(bakatxt.core.Task)", "bakatxt.core.Database.addTaskToMap(bakatxt.core.Task)"], "Fixed commit": "31f2433115d2aebe4cf3ac100ba58d524fe1a767", "Url": "https://api.github.com/repos/cs2103aug2014-t09-4j/main", "Date": "2014-11-09T15:54:51Z"},
{"Line": "=>434", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (point >= 0) { point = ((float) ((java.lang.Math.floor((point / 90))) + 1)) * 90; }else { point = ((float) (java.lang.Math.floor((point / 90)))) * 90; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/6736/buggy-version/src.oldschool.superdice.Die.java", "BodyUseAPI": ["java.lang.Math.floor(float)", "java.lang.Math.floor(float)"], "Fixed commit": "88cde0a6eb8080aa6dd57648ad798f02977a78e5", "Url": "https://api.github.com/repos/hanjo77/SuperDice", "Date": "2014-03-09T13:53:28Z"},
{"Line": "=>942", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.alibaba.druid.wall.spi.WallUpdateCheckHandler.check(java.lang.String,java.lang.String,java.lang.Object,java.util.List<java.lang.Object>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!validate) { visitor.addViolation(new com.alibaba.druid.wall.violation.IllegalSQLObjectViolation(com.alibaba.druid.wall.violation.ErrorCode.UPDATE_CHECK_FAIL, \"update check failed.\", visitor.toSQL(x))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/8787/buggy-version/src.main.java.com.alibaba.druid.wall.spi.WallVisitorUtils.java", "BodyUseAPI": [], "Fixed commit": "9c5353ea981682197fef9b0cbc3076f0d49eb3b7", "Url": "https://api.github.com/repos/xjt283525476/druid", "Date": "2017-12-14T09:03:13Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (tmpPath == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/8454/buggy-version/GDSConHand.src.com.winjune.wifiindoor.navi.Navigator.java", "BodyUseAPI": [], "Fixed commit": "4c3065f73610876a1d38c2a40ad016c27a7eb1a7", "Url": "https://api.github.com/repos/winjunetech/GDSConHandAndroid", "Date": "2014-02-28T14:38:44Z"},
{"Line": "=>385", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (joinBeforeInstall == null) { install = org.cloudml.deployer2.workflow.util.ActivityBuilder.action(outgoingFromPaas, null, ownerVM, \"executeInstallCommand\"); }else { install = org.cloudml.deployer2.workflow.util.ActivityBuilder.action(joinBeforeInstall.getOutgoing().get(0), null, ownerVM, \"executeInstallCommand\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/7486/buggy-version/deployer2.src.main.java.org.cloudml.deployer2.workflow.util.ActivityDiagram.java", "BodyUseAPI": ["org.cloudml.deployer2.workflow.util.ActivityBuilder.action(joinBeforeInstall.getOutgoing().get(0),<nulltype>,org.cloudml.deployer2.workflow.util.VMInstance,java.lang.String)", "org.cloudml.deployer2.workflow.util.Join.getOutgoing()", "joinBeforeInstall.getOutgoing().get(int)"], "Fixed commit": "71f7b0e7ef7d34c32e3fc6541908bd924f13338c", "Url": "https://api.github.com/repos/SINTEF-9012/cloudml", "Date": "2015-04-07T17:29:27Z"},
{"Line": "=>365", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["retrieve.getOutgoing().get(int)", "org.cloudml.deployer2.workflow.util.ActivityDiagram.buildPaas(org.cloudml.deployer2.workflow.util.InternalComponentInstance,relationships.toList(),org.cloudml.deployer2.workflow.util.ActivityEdge)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(outgoingFromPaas.equals(incoming))) { org.cloudml.deployer2.workflow.util.Action moveToOtherThread = ((org.cloudml.deployer2.workflow.util.Action) (incoming.getTarget())); for (org.cloudml.deployer2.workflow.util.Action action : provisioned) { if (action.getInputs().get(0).equals(moveToOtherThread.getInputs().get(0))) { retrieve.removeEdge(incoming, ActivityNode.Direction.OUT); action.addEdge(incoming, ActivityNode.Direction.OUT); } } org.cloudml.deployer2.workflow.util.Action lastFromPaas = ((org.cloudml.deployer2.workflow.util.Action) (outgoingFromPaas.getSource())); lastFromPaas.removeEdge(outgoingFromPaas, ActivityNode.Direction.OUT); joinBeforeInstall = ((org.cloudml.deployer2.workflow.util.Join) (org.cloudml.deployer2.workflow.util.ActivityBuilder.forkOrJoin(2, false, false))); java.util.ArrayList<org.cloudml.deployer2.workflow.util.Action> actionsToJoin = new java.util.ArrayList<>(); actionsToJoin.add(retrieve); actionsToJoin.add(lastFromPaas); org.cloudml.deployer2.workflow.util.ActivityBuilder.connectActionsWithJoinNodes(actionsToJoin, joinBeforeInstall, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/7486/buggy-version/deployer2.src.main.java.org.cloudml.deployer2.workflow.util.ActivityDiagram.java", "BodyUseAPI": ["org.cloudml.deployer2.workflow.util.ActivityEdge.getTarget()", "org.cloudml.deployer2.workflow.util.Action.addEdge(org.cloudml.deployer2.workflow.util.ActivityEdge,ActivityNode.Direction.OUT)", "org.cloudml.deployer2.workflow.util.Action.removeEdge(org.cloudml.deployer2.workflow.util.ActivityEdge,ActivityNode.Direction.OUT)", "org.cloudml.deployer2.workflow.util.Action.removeEdge(org.cloudml.deployer2.workflow.util.ActivityEdge,ActivityNode.Direction.OUT)", "org.cloudml.deployer2.workflow.util.ActivityEdge.getSource()"], "Fixed commit": "71f7b0e7ef7d34c32e3fc6541908bd924f13338c", "Url": "https://api.github.com/repos/SINTEF-9012/cloudml", "Date": "2015-04-07T17:29:27Z"},
{"Line": "=>3046", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((imname == null) || (imname.isEmpty())) { setImInfo(table, \"name\", filename.getName()); }else { setImInfo(table, \"name\", imname); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2543/buggy-version/LimeStudio.app.src.main.java.net.toload.main.hd.limedb.LimeDB.java", "BodyUseAPI": ["net.toload.main.hd.limedb.LimeDB.1.setImInfo(java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "d2ae30d01d261aafcd80fefe880ef3f4039af2e7", "Url": "https://api.github.com/repos/lime-ime/limeime", "Date": "2015-05-20T14:49:54Z"},
{"Line": "=>303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (categoryId != null) { text += \" join p.categories c \"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/735/buggy-version/src.com.schlock.website.services.database.blog.impl.PostDAOImpl.java", "BodyUseAPI": [], "Fixed commit": "7b8f8e2a42f176efe5466494b36ffbfc28eb00af", "Url": "https://api.github.com/repos/dyreschlock/schlock-website", "Date": "2014-03-08T01:25:42Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Subjects.getSubject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((subject.getGrade(grade.getStudentId())) == null) { subject.addGrade(grade); return javax.ws.rs.core.Response.status(Response.Status.CREATED).entity(\"grade added\").type(\"text/plain\").build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2620/buggy-version/src.main.java.SubjectsDataResource.java", "BodyUseAPI": ["Subject.addGrade(Grade)"], "Fixed commit": "c25859c696d210a7decb733338138f7b1d36f728", "Url": "https://api.github.com/repos/PaulinaSadowska/REST", "Date": "2016-04-21T20:33:29Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (filename == null) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/6803/buggy-version/src.main.java.com.appdynamics.extensions.memcached.MemcachedMonitor.java", "BodyUseAPI": [], "Fixed commit": "d6c1e91fe310050e07f0f54eb506cb6c5caefb82", "Url": "https://api.github.com/repos/Appdynamics/memcached-monitoring-extension", "Date": "2014-04-23T04:21:25Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (reportData.getData().isEmpty()) { return table; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/6468/buggy-version/api.src.main.java.org.openmrs.module.dataentrystatistics.DataEntryStatistic.java", "BodyUseAPI": [], "Fixed commit": "279c833f5d0bd1d5ff90dd42718e5d356575ab9d", "Url": "https://api.github.com/repos/emaposse/openmrs-module-dataentrystatistics", "Date": "2017-09-21T08:35:50Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((qr.getCellset()) == null) { return \"No Data\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/8651/buggy-version/saiku-core.saiku-web.src.main.java.org.saiku.web.export.JSConverter.java", "BodyUseAPI": [], "Fixed commit": "e69e4a7c06c0cb647462f3add90d24da6134964d", "Url": "https://api.github.com/repos/pstoellberger/saiku", "Date": "2016-11-14T14:42:33Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (inventory == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/916/buggy-version/src.main.java.reborncore.common.util.inventory.InventoryCapabilityProvider.java", "BodyUseAPI": [], "Fixed commit": "6e06ab7e6c6ea2bd86bc3d51934e84213cfcc737", "Url": "https://api.github.com/repos/TechReborn/RebornCore", "Date": "2016-06-07T12:23:35Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.Statement.executeQuery((((\"SELECT * FROM gameStateTransitions WHERE gameStateId=\" + (player.getCurrentGameStateId())) + \" AND singlePushButtonColor=\") + (buttonColor.ordinal())))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (resultSet.next()) { for (int n = 0; n < ((player.getTeamNumber()) - 1); n++) { resultSet.next(); } int nextGameState = resultSet.getInt(\"nextGameStateTransition\"); if (nextGameState != 0) { player.setCurrentGameState(nextGameState); player.setCurrentGameStateId(resultSet.getInt(\"gameStateId\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/6866/buggy-version/src.WearableLearningBackend.src.wlbe.tasks.GameInstance.java", "BodyUseAPI": ["java.sql.ResultSet.next()", "java.sql.ResultSet.getInt(java.lang.String)", "wlbe.model.PlayerData.setCurrentGameStateId(int)", "java.sql.ResultSet.getInt(java.lang.String)"], "Fixed commit": "1c3b713f5d4bd24cd51b8f94510cf05b609ad8e4", "Url": "https://api.github.com/repos/mmicciolo/WearableLearningII", "Date": "2017-02-17T06:13:04Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((recordIcon) != (-1)) { canvas.drawBitmap(bitmap, (cx - ((bitmap.getHeight()) / 2)), (cy - ((bitmap.getWidth()) / 2)), null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/3235/buggy-version/recordbuttonlib.src.main.java.com.emrekose.recordbutton.RecordButton.java", "BodyUseAPI": [], "Fixed commit": "ef40893b74f4749ba85a78873e44f4a6638ff45d", "Url": "https://api.github.com/repos/emrekose26/RecordButton", "Date": "2017-10-21T08:35:19Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((propertyWidgets) == null) { propertyWidgets = new java.util.ArrayList<com.google.gwt.user.client.ui.Widget>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/767/buggy-version/src.main.java.com.willshex.blogwt.client.page.admin.PropertiesPage.java", "BodyUseAPI": [], "Fixed commit": "43ed1813393f71b3b7ec67d4a071d3b631b16cd5", "Url": "https://api.github.com/repos/billy1380/blogwt", "Date": "2015-07-21T09:02:46Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((propertyWidgets) != null) { for (com.google.gwt.user.client.ui.Widget widget : propertyWidgets) { widget.removeFromParent(); } propertyWidgets.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/767/buggy-version/src.main.java.com.willshex.blogwt.client.page.admin.PropertiesPage.java", "BodyUseAPI": [], "Fixed commit": "43ed1813393f71b3b7ec67d4a071d3b631b16cd5", "Url": "https://api.github.com/repos/billy1380/blogwt", "Date": "2015-07-21T09:02:46Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.easystogu.easymoney.helper.DailyZiJinLiuFatchDataHelper.getAllStockIdsZiJinLiu(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((list.size()) > 0) && (org.easystogu.utils.Strings.isNotEmpty(fatchDataHelper.currentDate))) zijinliuTableHelper.deleteByDate(fatchDataHelper.currentDate);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/1916/buggy-version/EasyMoneyCollect.src.main.java.org.easystogu.easymoney.runner.DailyZiJinLiuRunner.java", "BodyUseAPI": ["org.easystogu.db.access.table.ZiJinLiuTableHelper.deleteByDate(fatchDataHelper.currentDate)"], "Fixed commit": "fb55822d53493221ed879c272b9a4bb5c651a63f", "Url": "https://api.github.com/repos/albertyang2007/EasyStoGu", "Date": "2016-09-20T03:47:33Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.worldObj.getBlockId(de.minestar.cok.tileentity.TileEntitySocket,((yCoord) + i),de.minestar.cok.tileentity.TileEntitySocket)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (blockID == (de.minestar.cok.ClashOfKingdoms.towerBrickID)) { res++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/3335/buggy-version/cok_common.de.minestar.cok.tileentity.TileEntitySocket.java", "BodyUseAPI": [], "Fixed commit": "8991e19210e6fbc7c771bbadce1126ca798f295b", "Url": "https://api.github.com/repos/DerGeras/CoK", "Date": "2013-08-14T17:50:03Z"},
{"Line": "=>1328", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (csg == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2447/buggy-version/src.org.nschmidt.ldparteditor.helpers.composite3d.MouseActions.java", "BodyUseAPI": [], "Fixed commit": "eb673e5a03786f227ece86ac08f1c3056d2e7fcf", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2016-04-20T19:35:07Z"},
{"Line": "=>318", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(word.equals(\"\"))) { java.lang.String temp = convertToAnswerStringFormat(msg.command); int ind = temp.indexOf(word); if (ind >= 0) { msg.command = ((msg.command.substring(0, ind)) + \"****\") + (msg.command.substring((ind + (word.length())), msg.command.length())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/4621/buggy-version/Serveur.src.server.Game.java", "BodyUseAPI": ["java.lang.String.indexOf(java.lang.String)", "java.lang.String.length()", "msg.command.substring(int,msg.command.length())"], "Fixed commit": "4e1e79cbf14e73f5fcb39560a4775e4062272b4c", "Url": "https://api.github.com/repos/ProjetPict/Application", "Date": "2013-04-06T17:33:02Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.getEntity()) instanceof org.bukkit.entity.Player) { com.projectkorra.projectkorra.Element element = com.projectkorra.projectkorra.Element.getElement(\"Spirit\"); org.bukkit.entity.Player player = ((org.bukkit.entity.Player) (event.getEntity())); com.projectkorra.projectkorra.BendingPlayer bPlayer = com.projectkorra.projectkorra.BendingPlayer.getBendingPlayer(player); if ((event.isCancelled()) || (bPlayer == null)) { return; } if ((bPlayer.hasElement(element)) && ((event.getCause()) == (org.bukkit.event.entity.EntityDamageEvent.DamageCause.FALL))) { event.setDamage(0.0); event.setCancelled(true); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2054/buggy-version/src.me.xnuminousx.spirits.listeners.AbilityListener.java", "BodyUseAPI": ["org.bukkit.event.entity.EntityDamageEvent.setCancelled(boolean)", "org.bukkit.event.entity.EntityDamageEvent.setDamage(double)", "org.bukkit.event.entity.EntityDamageEvent.getEntity()", "org.bukkit.event.entity.EntityDamageEvent.isCancelled()", "org.bukkit.event.entity.EntityDamageEvent.getCause()"], "Fixed commit": "6c1153ada707e5c4e125b18297dcf0726696726d", "Url": "https://api.github.com/repos/xNuminousx/Spirits", "Date": "2017-09-20T22:25:24Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (editMode) { this.buttonAddLocation.setClickable(false); this.buttonAddLocation.setEnabled(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2378/buggy-version/TaskLoc.app.src.main.java.de.unima.pc2016.taskloc.application.activities.AddNewTask.java", "BodyUseAPI": [], "Fixed commit": "34a953967442542f4054a0918b4fa981ccc3a009", "Url": "https://api.github.com/repos/dflaxx/unima-pc2016", "Date": "2016-05-10T08:34:25Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tdo.getLocations()) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2378/buggy-version/TaskLoc.app.src.main.java.de.unima.pc2016.taskloc.application.Geofences.GeofenceController.java", "BodyUseAPI": [], "Fixed commit": "34a953967442542f4054a0918b4fa981ccc3a009", "Url": "https://api.github.com/repos/dflaxx/unima-pc2016", "Date": "2016-05-10T08:34:25Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((actionState) != (ActionState.ATTACKING)) { attackingComponent.startAttacking(); treasureComponent.loseTreasure(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/5222/buggy-version/core.src.com.lothbrok.game.model.entities.Player.java", "BodyUseAPI": [], "Fixed commit": "450d8958dca78ed2d59b86707c70e1afaf609bcc", "Url": "https://api.github.com/repos/leventemathe/Lothbrok", "Date": "2016-12-18T18:47:16Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (split[i].equals(\"XXX\")) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/8478/buggy-version/Code.src.Board.java", "BodyUseAPI": [], "Fixed commit": "db63e717ecf26b24dc29e4a76684a7d6ebf72694", "Url": "https://api.github.com/repos/NickWaltCSU/cs414-f17-301-UltraLiteCoding", "Date": "2017-10-20T01:56:55Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.support.v4.app.ActivityCompat.checkSelfPermission(this, Manifest.permission.READ_EXTERNAL_STORAGE)) != (android.content.pm.PackageManager.PERMISSION_GRANTED)) { android.support.v4.app.ActivityCompat.requestPermissions(this, new java.lang.String[]{ Manifest.permission.READ_EXTERNAL_STORAGE, Manifest.permission.INTERNET }, 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/3104/buggy-version/app.src.main.java.aggrathon.a360video.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "71846ea860837ff7ed14d2e8b0a558f7b30e5dc9", "Url": "https://api.github.com/repos/Aggrathon/360-Video-Player", "Date": "2016-11-26T19:22:33Z"},
{"Line": "=>625", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["FPlayers.i.get(org.bukkit.entity.Player)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((!(me.getFaction().hasHome())) && (!(me.getFaction().hasOutpost()))) { me.msg((\"<b>Please set a faction home first. \" + ((me.getRole().value) < (Role.MODERATOR.value) ? \"<i>Ask your leader to:\" : \"<i>You should:\"))); me.sendMessage(P.p.cmdBase.cmdSethome.getUseageTemplate()); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/4017/buggy-version/src.main.java.com.massivecraft.factions.listeners.FactionsPlayerListener.java", "BodyUseAPI": ["com.massivecraft.factions.FPlayer.getRole()", "com.massivecraft.factions.FPlayer.msg((\"<b>Please set a faction home first. \" + ((me.getRole().value) < (Role.MODERATOR.value) ? \"<i>Ask your leader to:\" : \"<i>You should:\")))", "com.massivecraft.factions.FPlayer.sendMessage(P.p.cmdBase.cmdSethome.getUseageTemplate())"], "Fixed commit": "92d0ea0445094f0d95f4af611e745b9f4663ae6d", "Url": "https://api.github.com/repos/MineSworn/SwornNations", "Date": "2014-01-29T18:54:22Z"},
{"Line": "=>1622", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((candidate) != null) { stream.setStepMeta(candidate.getToStep()); candidate.getFromStep().getStepMetaInterface().handleStreamSelection(stream); spoon.newHop(transMeta, candidate); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/5335/buggy-version/ui.src.org.pentaho.di.ui.spoon.trans.TransGraph.java", "BodyUseAPI": [], "Fixed commit": "3c7c531e74b1c77df75406fc5d4e2f7546b50ebf", "Url": "https://api.github.com/repos/HiromuHota/pentaho-kettle", "Date": "2017-01-09T18:38:45Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sign.getText(0).startsWith(\"#\")) && ((sign.getText(0).length()) > 1)) toParse += \" \" + (sign.getText(0).substring(1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/7016/buggy-version/Source.tectonicus.ViewUtil.java", "BodyUseAPI": ["tectonicus.world.Sign.getText(int)", "sign.getText(0).substring(int)"], "Fixed commit": "f230276fda9789c9229b651cd6e7c91f68571fef", "Url": "https://api.github.com/repos/tectonicus/tectonicus", "Date": "2016-05-13T03:00:23Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.showOther) { if ((this.mtmp_series.size()) > (this.mSize)) { return java.lang.Math.min(((this.mSize) + 1), this.mtmp_series.size()); }else { return java.lang.Math.min(this.mSize, this.mtmp_series.size()); } }else { return java.lang.Math.min(this.mSize, this.mtmp_series.size()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/1539/buggy-version/src.com.osg.osgmon.monitoring.StackedXYMultipleSeries.java", "BodyUseAPI": [], "Fixed commit": "42c7d25b86e214a5972eb729a64813cc11d3ce5e", "Url": "https://api.github.com/repos/djw8605/OSG-Android", "Date": "2011-09-24T07:10:56Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (other_series != null) series_copy.add(other_series);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/1539/buggy-version/src.com.osg.osgmon.monitoring.StackedXYMultipleSeries.java", "BodyUseAPI": ["java.util.ArrayList<org.achartengine.model.XYSeries>.add(org.achartengine.model.XYSeries)"], "Fixed commit": "42c7d25b86e214a5972eb729a64813cc11d3ce5e", "Url": "https://api.github.com/repos/djw8605/OSG-Android", "Date": "2011-09-24T07:10:56Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((pointerIndex == 0) && (currentElement != ((segments.length) - 1))) { throw new org.ballerinalang.services.dispatchers.uri.URITemplateException(\"/* is only allowed at the end of the Path\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/6281/buggy-version/modules.ballerina-core.src.main.java.org.ballerinalang.services.dispatchers.uri.parser.URITemplateParser.java", "BodyUseAPI": [], "Fixed commit": "ebd1aeb04c64c8049ce5c95f81ec9a8270b4b37e", "Url": "https://api.github.com/repos/shafreenAnfar/ballerina", "Date": "2017-06-28T05:36:33Z"},
{"Line": "=>642", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portlet.dynamicdatamapping.service.DDMStructureLocalServiceUtil.fetchStructure(long,com.liferay.portal.util.PortalUtil.getClassNameId(com.liferay.portlet.journal.model.JournalArticle.class),java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (ddmStructure == null) { ddmStructure = com.liferay.portlet.dynamicdatamapping.service.DDMStructureLocalServiceUtil.fetchStructure(themeDisplay.getCompanyGroupId(), com.liferay.portal.util.PortalUtil.getClassNameId(com.liferay.portlet.journal.model.JournalArticle.class), structureId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/8789/buggy-version/portal-impl.src.com.liferay.portlet.journal.action.EditArticleAction.java", "BodyUseAPI": [], "Fixed commit": "4636b50953020d7ee539956af20b2cbdba15a0cb", "Url": "https://api.github.com/repos/sammso/liferay-portal", "Date": "2013-03-26T08:45:05Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((group != null) && (group.startsWith(\"$\"))) { java.lang.Object value = ((argValue == null) || (argValue == group)) ? objectRepository.getUserVariables().get(group) : argValue; return value == null ? group : value; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/6499/buggy-version/toast-tk-runtime.src.main.java.com.synaptix.toast.runtime.action.item.StringValueHandler.java", "BodyUseAPI": ["objectRepository.getUserVariables().get(java.lang.String)"], "Fixed commit": "3b4e44e37c9637a54c7e7886704ef061e2c0b1da", "Url": "https://api.github.com/repos/toast-tk/toast-tk-engine", "Date": "2016-07-01T14:35:11Z"},
{"Line": "=>331", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((result.sideHit.getAxisDirection()) == (net.minecraft.util.EnumFacing.AxisDirection.NEGATIVE)) absoluteHit.add(result.sideHit);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/667/buggy-version/src.main.java.com.creativemd.littletiles.common.items.ItemLittleChisel.java", "BodyUseAPI": ["com.creativemd.littletiles.common.tiles.vec.LittleTileVec.add(result.sideHit)"], "Fixed commit": "7b3dcd580bded255482d70a6efd798347b63cad3", "Url": "https://api.github.com/repos/CreativeMD/LittleTiles", "Date": "2017-10-20T20:11:43Z"},
{"Line": "=>493", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["services.command.CommandService.getCommandByName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (command instanceof services.command.CombatCommand) { return ((services.command.CombatCommand) (command)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/756/buggy-version/src.services.command.CommandService.java", "BodyUseAPI": [], "Fixed commit": "44c4d8632cbde5d9415cb8fc210f460de61fb223", "Url": "https://api.github.com/repos/CharonInferar/NGECore2", "Date": "2014-04-07T04:22:44Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((iAmMasterFileTokens.size()) > 0) nodeOps.broadcastIAmMaster(iAmMasterFileTokens, this.neighbours);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/4047/buggy-version/src.main.java.lk.ac.mrt.distributed.SearchNode.java", "BodyUseAPI": ["lk.ac.mrt.distributed.api.NodeOps.broadcastIAmMaster(java.util.ArrayList<java.lang.String>,java.util.Set<lk.ac.mrt.distributed.api.Node>)"], "Fixed commit": "4273008b9ef55a3da1de582643e25e7230a3e790", "Url": "https://api.github.com/repos/chathurawidanage/CS4262-Project", "Date": "2017-01-08T19:12:43Z"},
{"Line": "=>479", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((builder.charAt(((builder.length()) - 3))) == ',') builder.deleteCharAt(((builder.length()) - 3));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/7566/buggy-version/LeoApp.app.src.main.java.de.slg.leoapp.notification.NotificationHandler.java", "BodyUseAPI": ["java.lang.StringBuilder.length()", "java.lang.StringBuilder.deleteCharAt(int)"], "Fixed commit": "437a25edd4a9144cb644f943cdc645c3c9d2d2e7", "Url": "https://api.github.com/repos/Leo-App/android", "Date": "2017-12-11T14:45:14Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["((android.widget.TextView) (view)).getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (fileName.contains(\" (\")) fileName = fileName.substring(0, fileName.lastIndexOf(\" (\")).trim();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/8628/buggy-version/hipda.src.main.java.net.jejer.hipda.ui.TextViewWithEmoticon.java", "BodyUseAPI": ["java.lang.String.lastIndexOf(java.lang.String)", "java.lang.String.trim()", "java.lang.String.substring(int,int)"], "Fixed commit": "25a72315a57a033aa6b030c990a9816bee6a8f49", "Url": "https://api.github.com/repos/GreenSkinMonster/hipda", "Date": "2015-04-21T13:33:56Z"},
{"Line": "=>250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (verbose) { command.add(\"-v\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/6512/buggy-version/src.main.java.com.zenjava.javafx.maven.plugin.GenerateKeyStoreMojo.java", "BodyUseAPI": [], "Fixed commit": "076c3b650f1ce7903378e4613da16a5e7fbab075", "Url": "https://api.github.com/repos/FibreFoX/javafx-maven-plugin", "Date": "2016-03-09T11:26:55Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((insightsUserDataDo.getUserData().get(0).getGradeInPercentage()) != null) { java.lang.String grade = insightsUserDataDo.getUserData().get(0).getGradeInPercentage(); java.lang.String minScore = insightsUserDataDo.getMinimumScore(); if ((grade.equals(minScore)) || ((java.lang.Integer.parseInt(grade)) > (java.lang.Integer.parseInt(minScore)))) { unitCircleView.getElement().getFirstChildElement().setClassName(unitStyle.greenCircle()); }else { unitCircleView.getElement().getFirstChildElement().setClassName(unitStyle.redCircle()); } if ((insightsUserDataDo.getIsRequired()) != null) { if ((insightsUserDataDo.getIsRequired()) == 0) { unitCircleView.getElement().getFirstChildElement().setClassName(unitStyle.stylishBub()); }else { } } if ((((insightsUserDataDo.getStatus()) != null) && (insightsUserDataDo.getStatus().equals(\"1\"))) || (((classpageItemDo.getStatus()) != null) && (classpageItemDo.getStatus().equalsIgnoreCase(\"completed\")))) { try { unitCircleView.getElement().getFirstChildElement().setAttribute(\"style\", \"background-image: url(../images/checkMark.png);\"); } catch (java.lang.Exception ex) { ex.printStackTrace(); } } }else { if ((insightsUserDataDo.getIsRequired()) != null) { if ((insightsUserDataDo.getIsRequired()) == 0) { unitCircleView.getElement().getFirstChildElement().setClassName(unitStyle.stylishBub()); }else { } } if ((((insightsUserDataDo.getStatus()) != null) && (insightsUserDataDo.getStatus().equals(\"1\"))) || (((classpageItemDo.getStatus()) != null) && (classpageItemDo.getStatus().equalsIgnoreCase(\"completed\")))) { try { unitCircleView.getElement().getFirstChildElement().setAttribute(\"style\", \"background-image: url(../images/checkMark.png);\"); } catch (java.lang.Exception ex) { ex.printStackTrace(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/1724/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.classpages.unitSetup.AssignmentsContainerWidget.java", "BodyUseAPI": ["insightsUserDataDo.getUserData().get(0).getGradeInPercentage()", "org.ednovo.gooru.shared.model.content.InsightsUserDataDo.getIsRequired()", "org.ednovo.gooru.shared.model.content.InsightsUserDataDo.getStatus()", "org.ednovo.gooru.shared.model.content.InsightsUserDataDo.getUserData()", "org.ednovo.gooru.shared.model.content.InsightsUserDataDo.getIsRequired()", "org.ednovo.gooru.shared.model.content.InsightsUserDataDo.getStatus()", "org.ednovo.gooru.shared.model.content.InsightsUserDataDo.getIsRequired()", "insightsUserDataDo.getStatus().equals(java.lang.String)", "org.ednovo.gooru.shared.model.content.InsightsUserDataDo.getMinimumScore()", "org.ednovo.gooru.shared.model.content.InsightsUserDataDo.getIsRequired()", "org.ednovo.gooru.shared.model.content.InsightsUserDataDo.getStatus()", "insightsUserDataDo.getStatus().equals(java.lang.String)", "insightsUserDataDo.getUserData().get(int)", "org.ednovo.gooru.shared.model.content.InsightsUserDataDo.getStatus()"], "Fixed commit": "0112b6679544b677563d86889950ca5159c47ba9", "Url": "https://api.github.com/repos/mitraj/Gooru-Web", "Date": "2014-10-08T12:25:43Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (i >= (longName.length)) { }else { if (longName[i].toLowerCase().equals(input[i].toLowerCase())) { matched++; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/1162/buggy-version/KioskApplication.src.main.java.pathfinder.FuzzySearch.java", "BodyUseAPI": ["java.lang.String.toLowerCase()", "java.lang.String.toLowerCase()", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "e0e754160f04e400288bcfcf6ca00bfca6cc869b", "Url": "https://api.github.com/repos/CS3733-Team-I/CS3733", "Date": "2017-12-10T02:55:55Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((dcline3 != null) && (signUtils.isDelayedSign(dcline3))) scheduler.startSchedule(signUtils.getSignFromChest(dc), signUtils.getPeriod(dcline3));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/7805/buggy-version/dev.org.xcp23x.restockit.listeners.java", "BodyUseAPI": ["org.xcp23x.restockit.listeners.getPeriod(java.lang.String)", "org.xcp23x.restockit.listeners.startSchedule(signUtils.getSignFromChest(dc),signUtils.getPeriod(dcline3))", "org.xcp23x.restockit.listeners.getSignFromChest(org.bukkit.block.Block)"], "Fixed commit": "aa589003d04ed6e9c33fb20c616d8dd8b2c04e50", "Url": "https://api.github.com/repos/xCP23x/RestockIt", "Date": "2012-06-11T16:17:50Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sourceType == destType) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/3803/buggy-version/src.soot.jimple.infoflow.problems.AbstractInfoflowProblem.java", "BodyUseAPI": [], "Fixed commit": "3ff52a5497f8fe72e48a9806df56cf521b2b43c1", "Url": "https://api.github.com/repos/secure-software-engineering/soot-infoflow", "Date": "2015-04-01T08:29:46Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.team33.services.AccountService.getAccount(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (account != null) { map.put(\"Name\", account.getName()); map.put(\"Orders\", ((account.getOrdersCollection()) == null ? new java.util.ArrayList<com.team33.entities.Orders>() : account.getOrdersCollection())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/9271/buggy-version/VSS-web.src.main.java.com.team33.controllers.MyAccountController.java", "BodyUseAPI": ["com.team33.entities.Account.getName()", "java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,account.getName())", "com.team33.entities.Account.getOrdersCollection()", "com.team33.entities.Account.getOrdersCollection()", "java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,((account.getOrdersCollection()) == null ? new java.util.ArrayList<com.team33.entities.Orders>() : account.getOrdersCollection()))"], "Fixed commit": "4a46f07d64ce0aab3abeafc015a7f415ff72ae28", "Url": "https://api.github.com/repos/caleb-chan/sysc4907-video-store-system", "Date": "2013-03-26T05:52:53Z"},
{"Line": "=>1329", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((backgroundImage.getTransparency()) != (java.awt.Transparency.OPAQUE)) { g2.fillRect(clipBounds.x, clipBounds.y, clipBounds.width, clipBounds.height); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/4850/buggy-version/WorldPainter.WPUtils.src.main.java.org.pepsoft.util.swing.TiledImageViewer.java", "BodyUseAPI": [], "Fixed commit": "f992c73c5b9e8e5ab51b73a6d054e9161741551b", "Url": "https://api.github.com/repos/Captain-Chaos/WorldPainter", "Date": "2016-12-05T17:39:57Z"},
{"Line": "=>1295", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((backgroundImage.getTransparency()) != (java.awt.Transparency.OPAQUE)) { g2.fillRect(clipBounds.x, clipBounds.y, clipBounds.width, clipBounds.height); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/4850/buggy-version/WorldPainter.WPUtils.src.main.java.org.pepsoft.util.swing.TiledImageViewer.java", "BodyUseAPI": [], "Fixed commit": "f992c73c5b9e8e5ab51b73a6d054e9161741551b", "Url": "https://api.github.com/repos/Captain-Chaos/WorldPainter", "Date": "2016-12-05T17:39:57Z"},
{"Line": "=>1335", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((backgroundImage.getTransparency()) != (java.awt.Transparency.OPAQUE)) { g2.fillRect(clipBounds.x, clipBounds.y, clipBounds.width, clipBounds.height); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/4850/buggy-version/WorldPainter.WPUtils.src.main.java.org.pepsoft.util.swing.TiledImageViewer.java", "BodyUseAPI": [], "Fixed commit": "f992c73c5b9e8e5ab51b73a6d054e9161741551b", "Url": "https://api.github.com/repos/Captain-Chaos/WorldPainter", "Date": "2016-12-05T17:39:57Z"},
{"Line": "=>1322", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((backgroundImage.getTransparency()) != (java.awt.Transparency.OPAQUE)) { g2.fillRect(clipBounds.x, clipBounds.y, clipBounds.width, clipBounds.height); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/4850/buggy-version/WorldPainter.WPUtils.src.main.java.org.pepsoft.util.swing.TiledImageViewer.java", "BodyUseAPI": [], "Fixed commit": "f992c73c5b9e8e5ab51b73a6d054e9161741551b", "Url": "https://api.github.com/repos/Captain-Chaos/WorldPainter", "Date": "2016-12-05T17:39:57Z"},
{"Line": "=>295", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((statusInfoDoc) != null) && (statusInfoDoc.getStatusInfo().getStatus().equals(org.n52.wps.server.response.ExecuteResponseBuilderV200.Status.Failed.toString()))) { return org.n52.wps.server.database.DatabaseFactory.getDatabase().lookupResponse(request.getUniqueId().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/8683/buggy-version/52n-wps-server.src.main.java.org.n52.wps.server.response.ExecuteResponseBuilderV200.java", "BodyUseAPI": [], "Fixed commit": "2660c54252ff26a0c2fcb0a060a1654e85e23385", "Url": "https://api.github.com/repos/spacebel/WPS", "Date": "2017-05-18T12:42:50Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (handler == null) { response.sendError(HttpServletResponse.SC_NOT_FOUND, (\"Reports application cannot handle url \" + (request.getRequestURI()))); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/5327/buggy-version/src.main.java.org.bahmni.reports.web.security.AuthenticationFilter.java", "BodyUseAPI": [], "Fixed commit": "de62ad00ed39ad89e454a0345de3dbdab8ad39df", "Url": "https://api.github.com/repos/Bahmni/bahmni-reports", "Date": "2016-07-29T11:07:59Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getCookies()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (cookies == null) { return redirectToLogin(request, response); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/5327/buggy-version/src.main.java.org.bahmni.reports.web.security.AuthenticationFilter.java", "BodyUseAPI": [], "Fixed commit": "de62ad00ed39ad89e454a0345de3dbdab8ad39df", "Url": "https://api.github.com/repos/Bahmni/bahmni-reports", "Date": "2016-07-29T11:07:59Z"},
{"Line": "=>329", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (FaReportDocumentType.NOTIFICATION.name().equals(faReportDocument.getTypeCode().getValue())) { abstractFact = activityFactMapper.generateFactsForNotificationOfTranshipment(activity, faReportDocument); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/6527/buggy-version/service.src.main.java.eu.europa.ec.fisheries.uvms.rules.service.business.generator.ActivityRequestFactGenerator.java", "BodyUseAPI": ["eu.europa.ec.fisheries.uvms.rules.service.mapper.fact.ActivityFactMapper.generateFactsForNotificationOfTranshipment(un.unece.uncefact.data.standard.reusableaggregatebusinessinformationentity._20.FishingActivity,un.unece.uncefact.data.standard.reusableaggregatebusinessinformationentity._20.FAReportDocument)"], "Fixed commit": "a8a51b06df07c9dff0ac2ec3e09b458d551669f7", "Url": "https://api.github.com/repos/UnionVMS/UVMS-RulesModule-APP", "Date": "2017-08-03T12:29:22Z"},
{"Line": "=>342", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cannon.getWorld().equals(center.getWorld().getUID())) { org.bukkit.Location newLoc = cannon.getCannonDesign().getBarrelBlocks(cannon).get(0); if ((newLoc.distance(center)) < sphereRadius) newCannonList.add(cannon); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/9047/buggy-version/src.main.java.at.pavlov.cannons.cannon.CannonManager.java", "BodyUseAPI": ["org.bukkit.Location.distance(org.bukkit.Location)", "java.util.HashSet<at.pavlov.cannons.cannon.Cannon>.add(at.pavlov.cannons.cannon.Cannon)", "at.pavlov.cannons.cannon.Cannon.getCannonDesign()", "cannon.getCannonDesign().getBarrelBlocks(cannon).get(int)", "cannon.getCannonDesign().getBarrelBlocks(at.pavlov.cannons.cannon.Cannon)"], "Fixed commit": "2e6a98adc0c234146af90d5bf2bba0351080747d", "Url": "https://api.github.com/repos/DerPavlov/Cannons", "Date": "2015-08-01T09:46:23Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.rwth.ti.db.StorageHandler.getAllAccessPoints()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((all.size()) > 0) { java.lang.String bssid = all.get(0).getBssid(); java.util.List<de.rwth.ti.db.AccessPoint> first = storage.getAccessPoint(bssid); textStatus.append(((\"\\n\" + bssid) + \"\\n\")); for (de.rwth.ti.db.AccessPoint ap : first) { textStatus.append(((((((((\"AP\\t\" + (ap.getId())) + \"\\t\") + (ap.getScanId())) + \"\\t\") + (ap.getBssid())) + \"\\t\") + (ap.getLevel())) + \"\\n\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/4969/buggy-version/WPS.src.de.rwth.ti.wps.LocalisationActivity.java", "BodyUseAPI": ["all.get(0).getBssid()", "java.util.List<de.rwth.ti.db.AccessPoint>.get(int)"], "Fixed commit": "caf0ec45a25fcfb12ecbb3fab3b0167819c7cbfa", "Url": "https://api.github.com/repos/tcuje/PraktikumSS13-WLAN-Fingerprint", "Date": "2013-05-15T07:22:41Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((currentLine.length) >= 2) && (!(currentLine[key].startsWith(\"#\")))) { properties.put(currentLine[key], currentLine[value]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2759/buggy-version/Workspace.PatchBuilder3.src.main.java.org.patchBuilder.properties.SimplePropertiesParser.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)"], "Fixed commit": "4c2b5097bc4d256ad647238d69fcc217c19a4982", "Url": "https://api.github.com/repos/OresytO/MyPrograms", "Date": "2015-03-06T17:00:39Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((types.size()) > 0) { this.type = types.get(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/6690/buggy-version/modules.ballerina-lang.src.main.java.org.wso2.ballerinalang.compiler.tree.expressions.BLangInvocation.java", "BodyUseAPI": [], "Fixed commit": "c10ed065a4ee5d5066ed27202d21d790ba908d2a", "Url": "https://api.github.com/repos/hasithaa/ballerina", "Date": "2017-10-05T12:37:57Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((response.isSuccessful()) == false) { callback.completed(new net.dankito.appdownloader.responses.GetAppDetailsResponse(appInfo, response.getError())); }else { getAppDetailsCompleted(appInfo, response, callback); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2640/buggy-version/AppDownloaderLib.src.main.java.net.dankito.appdownloader.PlayStoreAppSearcher.java", "BodyUseAPI": ["net.dankito.appdownloader.PlayStoreAppSearcher.3.getAppDetailsCompleted(net.dankito.appdownloader.app.AppInfo,net.dankito.appdownloader.util.web.WebClientResponse,net.dankito.appdownloader.responses.callbacks.GetAppDetailsCallback)", "net.dankito.appdownloader.util.web.WebClientResponse.getError()", "net.dankito.appdownloader.responses.callbacks.GetAppDetailsCallback.completed(net.dankito.appdownloader.responses.GetAppDetailsResponse)"], "Fixed commit": "1e6ef8212d71732da3cd17db7a7ab26f92a9f55e", "Url": "https://api.github.com/repos/dankito/AppDownloader", "Date": "2016-11-19T22:35:24Z"},
{"Line": "=>1028", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((collisionRectFHeight) == 0) collisionRectFHeight = h; else collisionRectFHeight = (((float) (h)) / (this.h)) * (collisionRectFHeight);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/1872/buggy-version/Try_GameEngine5.src.com.example.try_gameengine.framework.Sprite.java", "BodyUseAPI": [], "Fixed commit": "5a74a7cb058bb027f79bee6cfe9e40725c98a7ec", "Url": "https://api.github.com/repos/irons163/Try_GameEngine", "Date": "2016-03-25T08:43:28Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((user.isSamePassword(user.getPassword(), user.getPasswordConfirm())) == true) { userDao.save(user); return \"login\"; }else { return \"register\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/5423/buggy-version/src.main.java.com.watchdog.controllers.RegisterController.java", "BodyUseAPI": ["com.watchdog.dao.UserDao.save(com.watchdog.business.User)"], "Fixed commit": "2400a209c865c3e5420514f970db851582967bd4", "Url": "https://api.github.com/repos/jrmullen/Watchdog", "Date": "2016-10-09T22:31:01Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (num == n) { return res; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/4140/buggy-version/src.com.leetcode.www.AndroidUnlockPatterns.java", "BodyUseAPI": [], "Fixed commit": "3b2c690b006bc21a65f5a3b4aa09bfcce9d44409", "Url": "https://api.github.com/repos/yao23/Java_Playground", "Date": "2017-08-19T23:43:21Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.getBytes(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((bytes[pos]) == ' ') { encoded += \"+\"; }else { encoded += java.lang.String.format(\"%%%02X\", bytes[pos]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/736/buggy-version/src.com.xmlcalabash.library.WWWFormURLEncode.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,byte)"], "Fixed commit": "20baa34e36750c3623173cd5061b00a91059d3f2", "Url": "https://api.github.com/repos/xquery/xmlcalabash1", "Date": "2014-08-15T23:05:02Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (md != null) { md = java.security.MessageDigest.getInstance(\"SHA-512\"); }else { security.PasswordUtilities.log.severe(\"MessageDigest object is null and should not be. Exiting.\"); java.lang.System.exit(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/1109/buggy-version/src.security.PasswordUtilities.java", "BodyUseAPI": [], "Fixed commit": "4fdb4f2fb2f5d5a84481e7615cb9080fa3e3b6e7", "Url": "https://api.github.com/repos/nicholasrusso/TeamPlay", "Date": "2016-05-24T05:22:20Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mContactList) != null) { for (com.lazooz.lbm.businessClasses.Contact contact : mContactList) add(contact); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/7182/buggy-version/src.com.lazooz.lbm.ContanctAdapter.java", "BodyUseAPI": [], "Fixed commit": "063afa0e333859e4c052c5dc6d2cc635fc73f496", "Url": "https://api.github.com/repos/lazooz/lbm-client", "Date": "2014-11-12T16:40:30Z"},
{"Line": "=>555", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.isFinishing())) { alertDialog.show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/7182/buggy-version/src.com.lazooz.lbm.RegistrationActivity.java", "BodyUseAPI": [], "Fixed commit": "063afa0e333859e4c052c5dc6d2cc635fc73f496", "Url": "https://api.github.com/repos/lazooz/lbm-client", "Date": "2014-11-12T16:40:30Z"},
{"Line": "=>580", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.isFinishing())) alertDialog.show();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/7182/buggy-version/src.com.lazooz.lbm.RegistrationActivity.java", "BodyUseAPI": [], "Fixed commit": "063afa0e333859e4c052c5dc6d2cc635fc73f496", "Url": "https://api.github.com/repos/lazooz/lbm-client", "Date": "2014-11-12T16:40:30Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Process.exitValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (exitValue == (ProcessExecutor.PROCESS_RESULT_OK)) { handleProcessEndWithoutErrors(p); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/4316/buggy-version/egradle-plugin-main.src.main.java.de.jcup.egradle.core.process.SimpleProcessExecutor.java", "BodyUseAPI": [], "Fixed commit": "f91c9c93e8711967f5b19a3901ec0e77f2205658", "Url": "https://api.github.com/repos/de-jcup/egradle", "Date": "2016-09-23T18:55:51Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (isOperand(last)) { if (hasSingleLeftBracket()) { infix = (infix) + \")\"; } }else if (isOperator(last)) { if (hasSingleLeftBracket()) { infix = infix.substring(0, ((infix.length()) - 2)); }else { infix = infix.substring(0, ((infix.length()) - 1)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2084/buggy-version/Calculator.src.com.janja.calculator.expression.InfixBuilder.java", "BodyUseAPI": ["com.janja.calculator.expression.InfixBuilder.isOperator(java.lang.String)"], "Fixed commit": "1b5916ef0970e8638bd550ef12cb0a186adad39d", "Url": "https://api.github.com/repos/janjawu/SimpleApps", "Date": "2014-06-09T14:55:17Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasSingleLeftBracket()) { java.lang.String last = infix.substring(((infix.length()) - 1), infix.length()); if ((!(hasOperandInBuffer())) && (!(isOperand(last)))) { infix = infix.substring(0, ((infix.length()) - 2)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2084/buggy-version/Calculator.src.com.janja.calculator.expression.InfixBuilder.java", "BodyUseAPI": [], "Fixed commit": "1b5916ef0970e8638bd550ef12cb0a186adad39d", "Url": "https://api.github.com/repos/janjawu/SimpleApps", "Date": "2014-06-09T14:55:17Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pet == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/8830/buggy-version/app.src.main.java.com.example.android.pets.EditorActivity.java", "BodyUseAPI": [], "Fixed commit": "55e580bae63f93448457b04271550f83863c704f", "Url": "https://api.github.com/repos/jandoant/pets", "Date": "2017-01-10T14:50:28Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edit_txt_weight.getText().toString().trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (android.text.TextUtils.isEmpty(strWeight)) { weight = 0; }else { weight = java.lang.Integer.parseInt(strWeight); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/8830/buggy-version/app.src.main.java.com.example.android.pets.EditorActivity.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "55e580bae63f93448457b04271550f83863c704f", "Url": "https://api.github.com/repos/jandoant/pets", "Date": "2017-01-10T14:50:28Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.android.pets.EditorActivity.createPetFromUserInput()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (savePet(pet)) { finish(); }else { android.widget.Toast.makeText(this, \"Please put in some Values\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/8830/buggy-version/app.src.main.java.com.example.android.pets.EditorActivity.java", "BodyUseAPI": [], "Fixed commit": "55e580bae63f93448457b04271550f83863c704f", "Url": "https://api.github.com/repos/jandoant/pets", "Date": "2017-01-10T14:50:28Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edit_txt_breed.getText().toString().trim()", "edit_txt_weight.getText().toString().trim()", "edit_txt_name.getText().toString().trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((((android.text.TextUtils.isEmpty(name)) && (android.text.TextUtils.isEmpty(breed))) && (gender == (com.example.android.pets.data.ShelterContract.PetEntry.PET_GENDER_UNKNOWN))) && (android.text.TextUtils.isEmpty(strWeight))) { return null; }else { return new com.example.android.pets.models.Pet(0, name, breed, gender, weight); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/8830/buggy-version/app.src.main.java.com.example.android.pets.EditorActivity.java", "BodyUseAPI": [], "Fixed commit": "55e580bae63f93448457b04271550f83863c704f", "Url": "https://api.github.com/repos/jandoant/pets", "Date": "2017-01-10T14:50:28Z"},
{"Line": "=>375", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((link.getContext()) != null) { ((org.apache.activemq.artemis.protocol.amqp.proton.ProtonDeliveryHandler) (link.getContext())).onFlow(link.getCredit(), link.getDrain()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/6990/buggy-version/artemis-protocols.artemis-amqp-protocol.src.main.java.org.apache.activemq.artemis.protocol.amqp.proton.AMQPConnectionContext.java", "BodyUseAPI": ["org.apache.qpid.proton.engine.Link.getDrain()", "((org.apache.activemq.artemis.protocol.amqp.proton.ProtonDeliveryHandler) (link.getContext())).onFlow(link.getCredit(),link.getDrain())", "org.apache.qpid.proton.engine.Link.getContext()", "org.apache.qpid.proton.engine.Link.getCredit()"], "Fixed commit": "6e5b917cc5c83ba9771e8f884b07eb271affbeff", "Url": "https://api.github.com/repos/apache/activemq-artemis", "Date": "2016-10-21T13:22:46Z"},
{"Line": "=>1463", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == content) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/6506/buggy-version/src.main.java.com.PATHoleilu.hutool.util.StrUtil.java", "BodyUseAPI": [], "Fixed commit": "bf53a0a4484b604be1379c1d62049368ab6801a4", "Url": "https://api.github.com/repos/looly/hutool", "Date": "2016-12-01T01:26:30Z"},
{"Line": "=>541", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (nitezh.ministock.UserData.writeExternalStorage(context, backupStocks.toString(), (backupName + \".txt\"), \"widgetbackups\")) nitezh.ministock.DialogTools.showSimpleDialog(context, \"Widget backup successful.\", (\"Your widget has been backed up to ministocks/widgetbackups/\" + backupName));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/9051/buggy-version/src.nitezh.ministock.domain.PortfolioStockRepository.java", "BodyUseAPI": ["nitezh.ministock.DialogTools.showSimpleDialog(android.content.Context,java.lang.String,java.lang.String)"], "Fixed commit": "3b7b0ee0bcd322ad17c11cd7eef8a5b6debe7ad6", "Url": "https://api.github.com/repos/Skrittles/SPMinistocks", "Date": "2016-07-03T15:06:27Z"},
{"Line": "=>297", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cs340.programming.project.CS340ProgrammingProject.findClass(java.lang.Integer,java.lang.Class[])"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((wantToEnroll.getSectionTimes().length) != 0) { if (wantToEnrolllimit <= wantToEnrollNumEnrolled) { canEnroll = false; break; } java.lang.Integer timeToCheck = thisClass.getSectionTimes()[currentlyEnrolledStudents.get(k)]; if (wantToEnroll.getSectionTimes()[p].equals(timeToCheck)) { canEnroll = false; break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/8207/buggy-version/CS340-Programming-Project.src.cs340.programming.project.CS340ProgrammingProject.java", "BodyUseAPI": ["wantToEnroll.getSectionTimes()[p].equals(java.lang.Integer)", "java.lang.Class.getSectionTimes()"], "Fixed commit": "2da1954af58b12bd1a3f8bae4e6a0463e55ae901", "Url": "https://api.github.com/repos/alquintero/CS340-Programming-Project", "Date": "2017-11-21T00:16:50Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["at.sti2.spark.rete.alpha.WorkingMemory.getRDFTypeAlphaNode()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (rdfTypeAlphaNode != null) { for (at.sti2.spark.rete.alpha.AlphaNode childNode : rdfTypeAlphaNode.getChildren()) if (childNode instanceof at.sti2.spark.rete.alpha.ConstantObjectTestAlphaNode) alphaNodes.add(childNode); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/1988/buggy-version/spark-rete.src.main.java.at.sti2.spark.rete.alpha.WorkingMemory.java", "BodyUseAPI": ["at.sti2.spark.rete.alpha.AlphaNode.getChildren()"], "Fixed commit": "ce2b1b22b492f76afe7c4e4f2fc915e05382379a", "Url": "https://api.github.com/repos/Rogger/Sparkwave", "Date": "2013-03-25T11:07:24Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["at.sti2.spark.rete.alpha.WorkingMemory.getRDFTypeAlphaNode()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (rdfTypeAlphaNode != null) { for (at.sti2.spark.rete.alpha.AlphaNode childNode : rdfTypeAlphaNode.getChildren()) if (!(childNode instanceof at.sti2.spark.rete.alpha.ConstantObjectTestAlphaNode)) alphaNodes.add(childNode); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/1988/buggy-version/spark-rete.src.main.java.at.sti2.spark.rete.alpha.WorkingMemory.java", "BodyUseAPI": ["at.sti2.spark.rete.alpha.AlphaNode.getChildren()"], "Fixed commit": "ce2b1b22b492f76afe7c4e4f2fc915e05382379a", "Url": "https://api.github.com/repos/Rogger/Sparkwave", "Date": "2013-03-25T11:07:24Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (args[1].contains(\"/\")) { player.sendMessage(((org.bukkit.ChatColor.RED) + \"Please do not use '/' in the TravelPad name!\")); }else { if (manager.nameIsValid(args[1])) { java.lang.String name = args[1]; boolean set = plugin.namePad(player, name); if (set) { player.sendMessage((((((org.bukkit.ChatColor.GREEN) + (l.name_message())) + (org.bukkit.ChatColor.WHITE)) + \" \") + name)); }else { player.sendMessage(((org.bukkit.ChatColor.RED) + (l.name_deny_nopad()))); } }else { player.sendMessage(((org.bukkit.ChatColor.RED) + (l.name_deny_inuse()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/7389/buggy-version/src.main.java.net.h31ix.travelpad.TravelPadCommandExecutor.java", "BodyUseAPI": ["net.h31ix.travelpad.api.TravelPadManager.nameIsValid(java.lang.String)"], "Fixed commit": "026af76a30a9b9bb4d74fcbc495201415ce99785", "Url": "https://api.github.com/repos/h31ix/TravelPad", "Date": "2012-04-29T00:57:50Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (object instanceof java.lang.Integer) value = ((java.lang.Integer) (object)).toString(); else value = object.toString();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/4383/buggy-version/main6.envoy.src.java.com.globalsight.everest.servlet.util.ServletUtil.java", "BodyUseAPI": ["java.lang.Object.toString()"], "Fixed commit": "36e1da40aec9bae41ecd83740446c3f480cdbf7e", "Url": "https://api.github.com/repos/tingley/globalsight", "Date": "2016-09-14T07:08:39Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(this.davCmp.isExists())) { throw DcCoreException.Dav.CELL_NOT_FOUND; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/1842/buggy-version/core.src.main.java.com.fujitsu.dc.core.rs.cell.CellResource.java", "BodyUseAPI": [], "Fixed commit": "e43cece52f87f04f818379fa45846b8370f9012b", "Url": "https://api.github.com/repos/fujitsu-pio/io", "Date": "2016-01-29T01:01:05Z"},
{"Line": "=>345", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActualStage()) == 0) { cards[0] = deck.getNextCard(); cards[1] = deck.getNextCard(); cards[2] = deck.getNextCard(); adapter.addThreeCards(cards); stage = (getActualStage()) + 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2956/buggy-version/src.main.java.Model.ModelOne.java", "BodyUseAPI": [], "Fixed commit": "5152f363b34d7db315d0f08df5c6fa78affad30e", "Url": "https://api.github.com/repos/Zixxy/PokerTCS", "Date": "2014-05-28T10:02:25Z"},
{"Line": "=>352", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActualStage()) == 1) { cards[3] = deck.getNextCard(); adapter.addOneCard(cards[3]); stage = (getActualStage()) + 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2956/buggy-version/src.main.java.Model.ModelOne.java", "BodyUseAPI": [], "Fixed commit": "5152f363b34d7db315d0f08df5c6fa78affad30e", "Url": "https://api.github.com/repos/Zixxy/PokerTCS", "Date": "2014-05-28T10:02:25Z"},
{"Line": "=>357", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActualStage()) == 2) { cards[4] = deck.getNextCard(); adapter.addOneCard(cards[4]); stage = (getActualStage()) + 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2956/buggy-version/src.main.java.Model.ModelOne.java", "BodyUseAPI": [], "Fixed commit": "5152f363b34d7db315d0f08df5c6fa78affad30e", "Url": "https://api.github.com/repos/Zixxy/PokerTCS", "Date": "2014-05-28T10:02:25Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (dataFromServer != null) { java.util.List<java.lang.String> arrayOfRankedStatus = java.util.Arrays.asList(dataFromServer.split(\"/\")); setupTitle(rootView); setupRank(rootView, arrayOfRankedStatus); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/7460/buggy-version/app.src.main.java.com.raingoddess.lapclient.main.TabProfile.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)", "java.util.Arrays.asList(java.lang.String[])"], "Fixed commit": "e753bd449c63b5be96d37816d8334891a16a1ac6", "Url": "https://api.github.com/repos/The-Rain-Goddess/LAP-Client", "Date": "2017-02-07T01:24:34Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.raingoddess.lapclient.main.TabAnalysis.temp_list.size()) != 0) { setupChampPool(v); }else { android.widget.TextView errorText = new android.widget.TextView(getContext()); java.lang.String errorMsg = \"No Ranked Games Played This Season!\"; errorText.setText(errorMsg); errorText.setTextColor(getResources().getColor(R.color.black)); layout.addView(errorText, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/7460/buggy-version/app.src.main.java.com.raingoddess.lapclient.main.TabAnalysis.java", "BodyUseAPI": [], "Fixed commit": "e753bd449c63b5be96d37816d8334891a16a1ac6", "Url": "https://api.github.com/repos/The-Rain-Goddess/LAP-Client", "Date": "2017-02-07T01:24:34Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(command instanceof seedu.address.logic.commands.RedoCommand)) { undoStack.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/3103/buggy-version/src.main.java.seedu.address.logic.UndoRedoStack.java", "BodyUseAPI": [], "Fixed commit": "b0fef516f116a63b19a1b5c930d2199ccfba3a9b", "Url": "https://api.github.com/repos/CS2103AUG2017-W13-B4/main", "Date": "2017-10-20T12:21:17Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (sourceSpecs != null) { this.sourceSpecimenInfos = sourceSpecs; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/1941/buggy-version/eclipse_ws.biobank.common.src.edu.ualberta.med.biobank.common.action.collectionEvent.CollectionEventSaveAction.java", "BodyUseAPI": [], "Fixed commit": "e757736d05050f91200a48e1faadc49011720f6c", "Url": "https://api.github.com/repos/cbsrbiobank/biobank", "Date": "2013-07-05T23:53:20Z"},
{"Line": "=>1385", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.ednovo.gooru.client.uc.BrowserAgent.isDevice())) { successPopupVc.setWidth(\"500px\"); successPopupVc.setHeight(\"515px\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/1641/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.home.library.LibraryTopicListView.java", "BodyUseAPI": [], "Fixed commit": "39553f76973a9db684f3d3300636dbfabf741419", "Url": "https://api.github.com/repos/anilgooru/Gooru-Web", "Date": "2015-03-23T07:21:24Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraftforge.common.util.ForgeDirection.getOrientation(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((world.getBlock((x + (d.offsetX)), y, (z + (d.offsetZ)))) == (SDBlock.ringPlatform)) { this.setOrientation(world, (x + (d.offsetX)), y, (z + (d.offsetZ))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/8424/buggy-version/src.main.java.jw.spacedistortion.common.block.BlockRingPlatform.java", "BodyUseAPI": ["jw.spacedistortion.common.block.BlockRingPlatform.setOrientation(net.minecraft.world.World,(x + (d.offsetX)),int,(z + (d.offsetZ)))"], "Fixed commit": "0a808978ab4a410f1c77762db9838246d50f5d8a", "Url": "https://api.github.com/repos/jwosty/Minecraft-SpaceDistortionMod", "Date": "2014-09-20T23:33:16Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (routePoints) { paint.setStrokeCap(Cap.BUTT); }else { paint.setStrokeCap(Cap.ROUND); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/8084/buggy-version/OsmAnd.src.net.osmand.plus.views.GPXLayer.java", "BodyUseAPI": [], "Fixed commit": "d7790a7bf2ee82f2a179d2272a03d0aff1563632", "Url": "https://api.github.com/repos/Zahnstocher/Osmand", "Date": "2014-06-26T12:06:03Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rb.overrideBlockTexture) == null) { for (net.minecraftforge.common.util.ForgeDirection dir : externals) { renderExternalConnection(dir); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/5538/buggy-version/src.main.java.crazypants.enderio.conduit.render.ConduitBundleRenderer.java", "BodyUseAPI": [], "Fixed commit": "a394aaa1f064e93f12e75b535bad17ae0987e9b8", "Url": "https://api.github.com/repos/HenryLoenwind/EnderIO", "Date": "2015-03-30T09:18:08Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.wpi.cs.wpisuitetng.exceptions.WPISuiteException.getMessage()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (message == null) { message = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/4967/buggy-version/Core.WPISuite.src.edu.wpi.cs.wpisuitetng.HtmlErrorResponseFormatter.java", "BodyUseAPI": [], "Fixed commit": "76a61c01f471a1420e66295e2bfee681780b7338", "Url": "https://api.github.com/repos/fracture91/wpi-suite-tng", "Date": "2013-01-24T17:18:21Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jetbrains.java.decompiler.modules.renamer.PoolInterceptor.getOldName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (oldClassName != null) { className = oldClassName; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/7168/buggy-version/plugins.java-decompiler.engine.src.org.jetbrains.java.decompiler.struct.consts.ConstantPool.java", "BodyUseAPI": [], "Fixed commit": "e1b4995d6eb38a26f8a6854b0f2de96539687444", "Url": "https://api.github.com/repos/jwren/intellij-community", "Date": "2016-01-21T06:06:45Z"},
{"Line": "=>345", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((results.getRouteFilter()) != null) && ((results.getRouteFilter().size()) > 1)) { results.getRouteFilter().clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2540/buggy-version/onebusaway-nyc-presentation.src.main.java.org.onebusaway.nyc.presentation.impl.search.SearchServiceImpl.java", "BodyUseAPI": ["org.onebusaway.nyc.presentation.model.SearchResultCollection.getRouteFilter()", "results.getRouteFilter().clear()"], "Fixed commit": "beb3c6e45a6539a2aba2188e0a3d2f66418e1813", "Url": "https://api.github.com/repos/camsys/onebusaway-nyc", "Date": "2013-02-20T22:05:17Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toLowerCase()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (l.getSubject().toLowerCase().contains(constraintLowerCase)) { subjectFilterText = constraint.toString(); i.add(l); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/3021/buggy-version/src.no.digipost.android.gui.LetterListAdapter.java", "BodyUseAPI": ["java.util.ArrayList<no.digipost.android.model.Letter>.add(no.digipost.android.model.Letter)"], "Fixed commit": "a792c4f956a180bf97d079809fb6e8a9cb57f821", "Url": "https://api.github.com/repos/digipost/android", "Date": "2013-03-19T13:49:33Z"},
{"Line": "=>539", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == (directory.listFiles())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2697/buggy-version/jmda.core.src.main.java.de.jmda.core.util.fileset.FileSet.java", "BodyUseAPI": [], "Fixed commit": "6e5515a067de833b76326f2a5361f73ef913d6ea", "Url": "https://api.github.com/repos/r-uu/jmda", "Date": "2015-09-06T21:18:49Z"},
{"Line": "=>611", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == (directory.listFiles())) { return result; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2697/buggy-version/jmda.core.src.main.java.de.jmda.core.util.fileset.FileSet.java", "BodyUseAPI": [], "Fixed commit": "6e5515a067de833b76326f2a5361f73ef913d6ea", "Url": "https://api.github.com/repos/r-uu/jmda", "Date": "2015-09-06T21:18:49Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == (currentDirectory.listFiles())) { return result; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2697/buggy-version/jmda.core.src.main.java.de.jmda.core.util.classpath.ResourceContainerDirectory.java", "BodyUseAPI": [], "Fixed commit": "6e5515a067de833b76326f2a5361f73ef913d6ea", "Url": "https://api.github.com/repos/r-uu/jmda", "Date": "2015-09-06T21:18:49Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getClass()) != (object.getClass())) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2697/buggy-version/jmda.core.src.main.java.de.jmda.core.util.fileset.DirectoryFileFilter.java", "BodyUseAPI": [], "Fixed commit": "6e5515a067de833b76326f2a5361f73ef913d6ea", "Url": "https://api.github.com/repos/r-uu/jmda", "Date": "2015-09-06T21:18:49Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this) == object) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2697/buggy-version/jmda.core.src.main.java.de.jmda.core.util.fileset.DirectoryFileFilter.java", "BodyUseAPI": [], "Fixed commit": "6e5515a067de833b76326f2a5361f73ef913d6ea", "Url": "https://api.github.com/repos/r-uu/jmda", "Date": "2015-09-06T21:18:49Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (object == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2697/buggy-version/jmda.core.src.main.java.de.jmda.core.util.fileset.DirectoryFileFilter.java", "BodyUseAPI": [], "Fixed commit": "6e5515a067de833b76326f2a5361f73ef913d6ea", "Url": "https://api.github.com/repos/r-uu/jmda", "Date": "2015-09-06T21:18:49Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fileFilter) == null) { if ((other.fileFilter) != null) return false; }else if (!(fileFilter.equals(other.fileFilter))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2697/buggy-version/jmda.core.src.main.java.de.jmda.core.util.fileset.DirectoryFileFilter.java", "BodyUseAPI": [], "Fixed commit": "6e5515a067de833b76326f2a5361f73ef913d6ea", "Url": "https://api.github.com/repos/r-uu/jmda", "Date": "2015-09-06T21:18:49Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.willshex.blogwt.client.controller.PropertyController.get().updateProperties(propertyLookup.values()))) { ready(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2489/buggy-version/src.main.java.com.willshex.blogwt.client.page.admin.PropertiesPage.java", "BodyUseAPI": [], "Fixed commit": "cadbc288b14cdc278f73cb4b8fa30c43b67596a8", "Url": "https://api.github.com/repos/billy1380/blogwt", "Date": "2015-08-06T10:14:11Z"},
{"Line": "=>486", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((customerToView.getAdress()) != null) && (customerToView.getAdress().trim().equals(\"\"))) { java.lang.String[] split = customerToView.getAdress().split(\"\\n\"); if (((split.length) > 0) && (!(split[0].isEmpty()))) { customerStreetTextField.setText(split[0]); } if (((split.length) > 1) && (!(split[1].isEmpty()))) { customerZipcodeTextField.setText(split[1]); } if (((split.length) > 2) && (!(split[2].isEmpty()))) { customerCityTextField.setText(split[2]); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/3461/buggy-version/src.carrental.CustomerPanel.java", "BodyUseAPI": ["customerToView.getAdress().split(java.lang.String)", "carrental.Customer.getAdress()"], "Fixed commit": "8c934ba5f7e1535aa562eb615ce5fc55754d10c3", "Url": "https://api.github.com/repos/CNN/CarRental", "Date": "2011-12-19T03:11:43Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(milestoneModelObject.getStrMilestoneStatus().equalsIgnoreCase(\"completed\"))) { simpleTooltip.show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/1289/buggy-version/app.src.main.java.com.hdfc.caregiver.MilestoneActivity.java", "BodyUseAPI": [], "Fixed commit": "34afc2362838b27b32528818ea8897b238372a6b", "Url": "https://api.github.com/repos/Mahikadu/CareGiver", "Date": "2016-06-23T12:08:20Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(milestoneModelObject.getStrMilestoneStatus().equalsIgnoreCase(\"completed\"))) { simpleTooltip.show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/1289/buggy-version/app.src.main.java.com.hdfc.caregiver.MilestoneActivity.java", "BodyUseAPI": [], "Fixed commit": "34afc2362838b27b32528818ea8897b238372a6b", "Url": "https://api.github.com/repos/Mahikadu/CareGiver", "Date": "2016-06-23T12:08:20Z"},
{"Line": "=>1053", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.hdfc.config.Config.intSelectedMenu) == 3) { bWhichScreen = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/1289/buggy-version/app.src.main.java.com.hdfc.caregiver.FeatureActivity.java", "BodyUseAPI": [], "Fixed commit": "34afc2362838b27b32528818ea8897b238372a6b", "Url": "https://api.github.com/repos/Mahikadu/CareGiver", "Date": "2016-06-23T12:08:20Z"},
{"Line": "=>452", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (targetClass != null) { @java.lang.SuppressWarnings(\"unchecked\") java.lang.reflect.Constructor<? extends org.restlet.Component> ctor = ((java.lang.Class<? extends org.restlet.Component>) (targetClass)).getConstructor(org.restlet.representation.Representation.class); log(\"[Restlet] ServerServlet: configuring component from war:///WEB-INF/restlet.xml\"); component = ((org.restlet.Component) (ctor.newInstance(response.getEntity()))); }else { component = new org.restlet.Component(response.getEntity()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/4791/buggy-version/modules.org.restlet.ext.servlet.src.org.restlet.ext.servlet.ServerServlet.java", "BodyUseAPI": [], "Fixed commit": "ed707302e796255b992cd3825dd7601f60393548", "Url": "https://api.github.com/repos/jgustie/restlet-framework-java", "Date": "2014-03-26T19:30:08Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.databases.example.Checkbook.findViewById(R.id.checkbook_frag_frame)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (checkbook_frame == null) { getSupportFragmentManager().beginTransaction().replace(R.id.account_frag_frame, account_frag, \"account_frag_tag\").replace(R.id.transaction_frag_frame, transaction_frag, \"transaction_frag_tag\").commit(); }else { getSupportFragmentManager().beginTransaction().replace(R.id.checkbook_frag_frame, account_frag, \"account_frag_tag\").commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2774/buggy-version/src.com.databases.example.Checkbook.java", "BodyUseAPI": [], "Fixed commit": "9dc117c8bd85ed1042096769f3877cf3355a3d04", "Url": "https://api.github.com/repos/welshk91/FinanceApp", "Date": "2013-02-11T21:55:23Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((((texturesToLoad.size()) + (soundsToLoad.size())) + (fontsToLoad.size())) + (modelsToLoad.size())) == 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2098/buggy-version/src.main.java.com.shc.silenceengine.core.ResourceLoader.java", "BodyUseAPI": [], "Fixed commit": "31231a400f9eca6891a296a1af1c678c227ae0e4", "Url": "https://api.github.com/repos/ShadowLordAlpha/SilenceEngine", "Date": "2015-04-20T16:08:58Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((m_Connection) != null) && (m_Connection.isConnected())) { m_Connection.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/8443/buggy-version/src.main.java.net.wimpi.modbus.io.ModbusTCPTransaction.java", "BodyUseAPI": ["net.wimpi.modbus.net.TCPMasterConnection.close()"], "Fixed commit": "d31d3adbde9bcd4d16987353f0e1b8b6864059bb", "Url": "https://api.github.com/repos/openhab/jamod", "Date": "2015-10-02T06:06:45Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.BufferedReader.readLine()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (line == null) { line = \"Player\" + id; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/5271/buggy-version/Poker.src.poker.server.Room.java", "BodyUseAPI": [], "Fixed commit": "f09d3a9ab79280544a34bae6df0a05fdf8d66c76", "Url": "https://api.github.com/repos/Alekseylv/Poker-game", "Date": "2013-07-23T11:26:40Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.WeakHashMap<org.bukkit.entity.Painting, java.lang.ref.WeakReference<java.lang.String>>.get(org.bukkit.entity.Painting)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (ref == null) return false; else if ((ref.get()) == null) { paintings.remove(paint); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/4694/buggy-version/src.main.java.com.sk89q.craftbook.mech.PaintingSwitch.java", "BodyUseAPI": ["java.lang.ref.WeakReference<java.lang.String>.get()"], "Fixed commit": "055fb8d91ba2be3d2e461d68197f6c11ae8f7790", "Url": "https://api.github.com/repos/sk89q/craftbook", "Date": "2013-08-09T23:06:15Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nextStr.equals(endWord)) return length + 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/6961/buggy-version/src.leetcode.p127.Solution.java", "BodyUseAPI": [], "Fixed commit": "1cf05e42134e3fd2e322883cfd84834b9dd4ef5b", "Url": "https://api.github.com/repos/theodoregao/leetcode", "Date": "2015-10-11T18:20:02Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (attachment == null) throw new org.gatein.management.api.exceptions.OperationException(operationName, \"No attachment was found for this operation.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/3766/buggy-version/core.src.main.java.org.gatein.management.core.spi.AnnotatedOperation.java", "BodyUseAPI": [], "Fixed commit": "fced500587e0b7f00efe0aee94cad62d912e22c9", "Url": "https://api.github.com/repos/nscavell/gatein-management", "Date": "2012-07-24T14:59:59Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ikasan.spec.component.routing.MultiRecipientRouter.route(flowEvent.getPayload())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (targetCount < (targetNames.size())) { routedFlowEvent = replicationFactory.replicate(flowEvent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2698/buggy-version/ikasaneip.flow.visitorPatternFlow.src.main.java.org.ikasan.flow.visitorPattern.invoker.MultiRecipientRouterFlowElementInvoker.java", "BodyUseAPI": [], "Fixed commit": "d10b2c86432194f78af13efb713283a6ddbc79c4", "Url": "https://api.github.com/repos/ikasanEIP/ikasan", "Date": "2015-01-26T17:41:24Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((user) != null) { if ((user.getRoleId()) == (com.jprogrammers.model.User.GOD)) setCustomers(com.jprogrammers.service.CustomerService.getCustomers()); else setCustomers(com.jprogrammers.service.CustomerService.getCustomers(user.getUserId())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/4472/buggy-version/src.com.jprogrammers.bean.CustomerBean.java", "BodyUseAPI": [], "Fixed commit": "06ecfa19715014cf2a0f8d56f7eb71f21698646a", "Url": "https://api.github.com/repos/jprogrammers/car-manager", "Date": "2014-10-16T12:01:46Z"},
{"Line": "=>466", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((today.getYear()) == (nextDate.getYear())) && ((today.getMonth()) == (nextDate.getMonth()))) && ((today.getDate()) == (nextDate.getDate()))) { if ((today.getMinutes()) >= 45) { start = new java.util.Date(today.getYear(), today.getMonth(), today.getDate(), ((today.getHours()) + 1), 0); }else if ((today.getMinutes()) < 15) { start = new java.util.Date(today.getYear(), today.getMonth(), today.getDate(), today.getHours(), 0); }else if (((today.getMinutes()) < 45) && ((today.getMinutes()) >= 15)) { start = new java.util.Date(today.getYear(), today.getMonth(), today.getDate(), today.getHours(), 30); } }else { start = START_OF_DAY; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/3968/buggy-version/app.src.main.java.cmsc436group6.taskscheduler.MainActivity.java", "BodyUseAPI": ["java.util.Date.getDate()", "java.util.Date.getHours()", "java.util.Date.getMonth()", "java.util.Date.getMinutes()", "java.util.Date.getHours()", "java.util.Date.getYear()", "java.util.Date.getMinutes()", "java.util.Date.getMonth()", "java.util.Date.getHours()", "java.util.Date.getMonth()", "java.util.Date.getYear()", "java.util.Date.getMinutes()", "java.util.Date.getDate()", "java.util.Date.getDate()", "java.util.Date.getMinutes()", "java.util.Date.getYear()"], "Fixed commit": "229515ab5be92f78628ed89705afd4d75b1e8145", "Url": "https://api.github.com/repos/abijanakiraman/CMSC436Group6", "Date": "2016-05-06T19:59:03Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((ownerUUID) == null) ownerUUID = java.util.UUID.randomUUID();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2580/buggy-version/src.com.bekvon.bukkit.residence.protection.ResidencePermissions.java", "BodyUseAPI": [], "Fixed commit": "e5d7931a1a079a61351ba657d477c1fde18b1e32", "Url": "https://api.github.com/repos/MDrollette/Residence", "Date": "2015-04-05T00:59:06Z"},
{"Line": "=>925", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSearchView) != null) { outState.putBoolean(com.owncloud.android.ui.activity.FileDisplayActivity.KEY_IS_SEARCH_OPEN, (!(mSearchView.isIconified()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/5224/buggy-version/src.com.owncloud.android.ui.activity.FileDisplayActivity.java", "BodyUseAPI": [], "Fixed commit": "6c88064446477fd751973dd231e1e0fed2ccd1e4", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2017-01-23T10:00:13Z"},
{"Line": "=>408", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (t != null) if (c.isAssignableFrom(t.getClass())) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/722/buggy-version/src.main.java.us.myles.ViaVersion.util.PacketUtil.java", "BodyUseAPI": ["java.lang.Class<? extends java.lang.Throwable>.isAssignableFrom(java.lang.Class<? extends java.lang.Throwable>)", "java.lang.Throwable.getClass()"], "Fixed commit": "f462ff9e8a9b95879251f56d3b595653165cc7ac", "Url": "https://api.github.com/repos/Matsv/ViaVersion", "Date": "2016-03-05T22:16:43Z"},
{"Line": "=>471", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((taskList.size()) < index) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/5691/buggy-version/TaskManagerProject.src.data.TaskData.java", "BodyUseAPI": [], "Fixed commit": "c58d88771fbff64a51ead6212cd6fc86ebf0cd7c", "Url": "https://api.github.com/repos/cs2103aug2014-w11-1j/main", "Date": "2014-10-06T11:12:40Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (escapeIntoStr) { val = val.replace(\"\\\\r\", \"\\\\\\\\r\"); val = val.replace(\"\\\\n\", \"\\\\\\\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/1930/buggy-version/src.org.futurepages.util.html.HtmlRegex.java", "BodyUseAPI": [], "Fixed commit": "cc8365798cad80180d72479a0badbb75a3e1877e", "Url": "https://api.github.com/repos/futurepages/4", "Date": "2017-01-10T16:28:28Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((metaData) == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/7020/buggy-version/src.main.java.com.pratilipi.data.type.gcs.BlobEntryGcsImpl.java", "BodyUseAPI": [], "Fixed commit": "ad1b6ef9d696e8034b32f36354e3124080344326", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2016-08-30T11:35:00Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["player.Archer.getAttackTile()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (t != null) { if (!(t.isEmpty())) { player.Unit enemy = t.getUnit(); game.Battle battle = new game.Battle(a, enemy, 5); battle.doBattle(a); } a.reduceRemaining(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/4886/buggy-version/src.game.Combat.java", "BodyUseAPI": ["map.Tile.getUnit()", "map.Tile.isEmpty()"], "Fixed commit": "bec4f0941113c8f19ee37cc52fbdb4add3fbb219", "Url": "https://api.github.com/repos/lin331/Skirmish", "Date": "2015-02-05T04:02:00Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wso2.carbon.utils.multitenancy.MultitenantUtils.getTenantDomain(org.wso2.carbon.apimgt.impl.utils.APIUtil.replaceEmailDomainBack(username))", "org.wso2.carbon.apimgt.keymgt.util.APIKeyMgtDataHolder.getRealmService().getTenantManager().getTenant(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((tenant == null) && (MultitenantConstants.SUPER_TENANT_DOMAIN_NAME.equals(tenantDomain))) { tenant = new org.wso2.carbon.user.core.tenant.Tenant(); tenant.setDomain(MultitenantConstants.SUPER_TENANT_DOMAIN_NAME); tenant.setId(MultitenantConstants.SUPER_TENANT_ID); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2258/buggy-version/components.apimgt.org.wso2.carbon.apimgt.keymgt.src.main.java.org.wso2.carbon.apimgt.keymgt.listeners.KeyManagerUserOperationListener.java", "BodyUseAPI": [], "Fixed commit": "a2356e80febc40cf3fd53ce6b2b149432dd61ee1", "Url": "https://api.github.com/repos/irham0019/carbon-apimgt", "Date": "2016-11-08T08:08:07Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["forestry.core.tiles.TileUtil.getTile(net.minecraft.world.World,int,int,int,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (leaves != null) { leaves.setTree(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/5142/buggy-version/src.main.java.forestry.arboriculture.genetics.Tree.java", "BodyUseAPI": ["forestry.arboriculture.tiles.TileLeaves.setTree(forestry.arboriculture.genetics.Tree)"], "Fixed commit": "ce888fe1453a76ff5443263b40de0bff14839478", "Url": "https://api.github.com/repos/AnodeCathode/ForestryMC", "Date": "2015-10-20T05:34:25Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (milliIterator == nextMilliWithNewDemand) { int uselessThing = 5; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/5663/buggy-version/src.edu.model.city.CitySimulator.java", "BodyUseAPI": [], "Fixed commit": "8afdb5493b0a7c43ece64d247efbb7a1c17aed34", "Url": "https://api.github.com/repos/NateHawk85/Project12", "Date": "2017-12-13T21:57:28Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newValue == (WAVEFORM_RECTANGLE)) rstep = ((int) (((count) * (frequency)) / 500));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2912/buggy-version/ARE.components.sensor.signalgenerator.src.main.java.eu.asterics.component.sensor.signalgenerator.CoordinatesGenerator.java", "BodyUseAPI": [], "Fixed commit": "5be0fa1e1c971bf76e7dd920402eb61bca52860d", "Url": "https://api.github.com/repos/asterics/AsTeRICS", "Date": "2016-03-02T23:56:30Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newValue == (WAVEFORM_RECTANGLE)) rstep = ((int) (((count) * (frequency)) / 500));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2912/buggy-version/ARE.components.sensor.signalgenerator.src.main.java.eu.asterics.component.sensor.signalgenerator.CoordinatesGenerator.java", "BodyUseAPI": [], "Fixed commit": "5be0fa1e1c971bf76e7dd920402eb61bca52860d", "Url": "https://api.github.com/repos/asterics/AsTeRICS", "Date": "2016-03-02T23:56:30Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jnibwapi.JNIBWAPI.getUnit(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (bwapi.getMyUnits().contains(unit)) { java.lang.String unitName = game.getUnits().getUnitNames().get(id); game.getUnits().deleteUnit(unitName, id); if (!(eisbw.BwapiUtility.getUnitName(unit).contains(\"zergZergling\"))) { game.getUnits().addUnit(unit, factory); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/8236/buggy-version/eisbw.src.main.java.eisbw.BwapiListener.java", "BodyUseAPI": ["eisbw.BwapiUtility.getUnitName(jnibwapi.Unit)", "game.getUnits().addUnit(jnibwapi.Unit,eisbw.units.StarcraftUnitFactory)", "eisbw.BwapiUtility.getUnitName(unit).contains(java.lang.String)"], "Fixed commit": "c1ceeb92cd4b437b1b164431a698a754b42cf45d", "Url": "https://api.github.com/repos/eishub/Starcraft", "Date": "2016-05-26T17:03:34Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((data != null) && ((oldData) != null)) && (data.equals(oldData))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/677/buggy-version/android.src.main.java.com.thebluealliance.androidclient.binders.TeamTabBinder.java", "BodyUseAPI": [], "Fixed commit": "bca83d1a87e8c361b2be70356a77e555c16fbe22", "Url": "https://api.github.com/repos/the-blue-alliance/the-blue-alliance-android", "Date": "2016-02-23T00:11:29Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isMac) drawingImage = config.createCompatibleImage(camera.getSize().x, camera.getSize().y, java.awt.Transparency.TRANSLUCENT); else drawingImage = config.createCompatibleImage(camera.getSize().x, camera.getSize().y);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/4177/buggy-version/OmegaCentauri.src.MainPackage.Renderer.java", "BodyUseAPI": [], "Fixed commit": "57f9ab15e4894d29953767b5d3c1c0328d4d4b9d", "Url": "https://api.github.com/repos/codeNinja77/Omega-Centauri", "Date": "2014-06-05T23:43:14Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((cmd.length) == 0) && ((cmd.text.length()) == 1)) && (isLineEnding(doc, cmd.text))) { smartIndentAfterNewline(doc, cmd); }else if (((cmd.text.length()) == 1) || ((com.redhat.ceylon.eclipse.imp.editor.CeylonAutoEditStrategy.getIndentWithSpaces()) && (isIndent(cmd.text)))) { smartIndentOnKeypress(doc, cmd); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/8486/buggy-version/plugins.com.redhat.ceylon.eclipse.ui.src.com.redhat.ceylon.eclipse.imp.editor.CeylonAutoEditStrategy.java", "BodyUseAPI": ["com.redhat.ceylon.eclipse.imp.editor.CeylonAutoEditStrategy.smartIndentOnKeypress(org.eclipse.jface.text.IDocument,org.eclipse.jface.text.DocumentCommand)", "com.redhat.ceylon.eclipse.imp.editor.CeylonAutoEditStrategy.smartIndentAfterNewline(org.eclipse.jface.text.IDocument,org.eclipse.jface.text.DocumentCommand)", "cmd.text.length()", "com.redhat.ceylon.eclipse.imp.editor.CeylonAutoEditStrategy.isIndent(cmd.text)"], "Fixed commit": "5a9a4e7661985a8e4c96c0622dc389bbf529c9af", "Url": "https://api.github.com/repos/eclipse/ceylon-ide-eclipse", "Date": "2011-12-27T04:12:58Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (operation instanceof com.owncloud.android.operations.GetSharesForFileOperation) { if ((result.getCode()) == (com.owncloud.android.lib.common.operations.RemoteOperationResult.ResultCode.MAINTENANCE_MODE)) { message = res.getString(R.string.maintenance_mode); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/3016/buggy-version/src.com.owncloud.android.utils.ErrorMessageAdapter.java", "BodyUseAPI": [], "Fixed commit": "9bdfdbdfd4068e496dc9a1b6122033fd75b2b602", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2016-12-28T09:27:05Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eu.play_project.play_platformservices_querydispatcher.types.VariableTypeManager.getSelectSharedVariables(VariableTypes.REALTIME_TYPE,VariableTypes.CONSTRUCT_TYPE,VariableTypes.HISTORIC_TYPE)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((vars.size()) > 0) { hq.setHasSharedVariablesWithRealtimePart(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/5178/buggy-version/play-platformservices-querydispatcher.src.main.java.com.hp.hpl.jena.sparql.serializer.PlaySerializer.java", "BodyUseAPI": [], "Fixed commit": "d4df7f3b61cb9a0f98cbaeea7fe308870305c7a7", "Url": "https://api.github.com/repos/play-project/play-dcep", "Date": "2014-03-07T10:00:29Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((this.parent) != null) { this.parent.addChild(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2/buggy-version/src.main.java.jsonTemplate.ArrayMapper.java", "BodyUseAPI": [], "Fixed commit": "722dc08c2ee8a8d55a70ddf15e9dbf264bcc080d", "Url": "https://api.github.com/repos/nxf/jsonTemplate", "Date": "2015-10-10T10:00:42Z"},
{"Line": "=>690", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(com.keylesspalace.tusky.util.ListUtils.isEmpty(existingUris))) { deleteMedia(com.keylesspalace.tusky.ComposeActivity.setDifference(existingUris, savedList)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/8504/buggy-version/app.src.main.java.com.keylesspalace.tusky.ComposeActivity.java", "BodyUseAPI": ["com.keylesspalace.tusky.ComposeActivity.setDifference(java.util.ArrayList<java.lang.String>,java.util.List<java.lang.String>)", "com.keylesspalace.tusky.ComposeActivity.deleteMedia(java.util.List<java.lang.String>)"], "Fixed commit": "c3ffed56da4e5110138b5dba97ca4dca4e5f08db", "Url": "https://api.github.com/repos/tuskyapp/Tusky", "Date": "2017-10-17T07:37:59Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (text == null) { textView.setText(\"\"); }else { textView.setText(android.text.Html.fromHtml(text)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/3044/buggy-version/mobile.src.main.java.com.piotapps.blendle.utils.Utils.java", "BodyUseAPI": ["android.widget.TextView.setText(android.text.Html.fromHtml(text))", "android.text.Html.fromHtml(java.lang.String)"], "Fixed commit": "34473ddaa8bbc37062e341a67b9f2dd10c514f27", "Url": "https://api.github.com/repos/PieterAelse/blendle", "Date": "2015-04-03T16:43:10Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getUser()) != null) { appointment.setUser(new com.huixinpn.dionysus.domain.user.User(this.getUser().getId())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/1037/buggy-version/dionysus-rest.src.main.java.com.huixinpn.dionysus.dto.appointment.AppointmentData.java", "BodyUseAPI": [], "Fixed commit": "65869293700da9ee58f57da8b887f79834f16371", "Url": "https://api.github.com/repos/perrywang/dionysus", "Date": "2015-06-08T16:39:32Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getDate()) != null) { appointment.setDate(this.getDate()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/1037/buggy-version/dionysus-rest.src.main.java.com.huixinpn.dionysus.dto.appointment.AppointmentData.java", "BodyUseAPI": [], "Fixed commit": "65869293700da9ee58f57da8b887f79834f16371", "Url": "https://api.github.com/repos/perrywang/dionysus", "Date": "2015-06-08T16:39:32Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getConsultant()) != null) { appointment.setConsultant(new com.huixinpn.dionysus.domain.user.Consultant(this.getConsultant().getId())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/1037/buggy-version/dionysus-rest.src.main.java.com.huixinpn.dionysus.dto.appointment.AppointmentData.java", "BodyUseAPI": [], "Fixed commit": "65869293700da9ee58f57da8b887f79834f16371", "Url": "https://api.github.com/repos/perrywang/dionysus", "Date": "2015-06-08T16:39:32Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (LOG.isDebugEnabled()) { LOG.debug(java.lang.String.format(\"Query will be requested to %s queue\", queueNames)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/3810/buggy-version/tajo-client.src.main.java.org.apache.tajo.client.TajoClient.java", "BodyUseAPI": ["org.apache.commons.logging.Log.debug(java.lang.String)"], "Fixed commit": "5c41e2b2b564716384087f5914106353ab481d27", "Url": "https://api.github.com/repos/babokim/tajo", "Date": "2014-06-18T04:30:36Z"},
{"Line": "=>982", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.netflix.discovery.DiscoveryClient.clientConfig.shouldFetchRegistry()) { cacheRefreshTimer.schedule(new com.netflix.discovery.DiscoveryClient.CacheRefreshThread(), ((com.netflix.discovery.DiscoveryClient.clientConfig.getRegistryFetchIntervalSeconds()) * 1000), ((com.netflix.discovery.DiscoveryClient.clientConfig.getRegistryFetchIntervalSeconds()) * 1000)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/3647/buggy-version/eureka-client.src.main.java.com.netflix.discovery.DiscoveryClient.java", "BodyUseAPI": ["com.netflix.discovery.EurekaClientConfig.getRegistryFetchIntervalSeconds()", "java.util.Timer.schedule(com.netflix.discovery.DiscoveryClient.CacheRefreshThread,((com.netflix.discovery.DiscoveryClient.clientConfig.getRegistryFetchIntervalSeconds()) * 1000),((com.netflix.discovery.DiscoveryClient.clientConfig.getRegistryFetchIntervalSeconds()) * 1000))", "com.netflix.discovery.EurekaClientConfig.getRegistryFetchIntervalSeconds()"], "Fixed commit": "3b346852019f67085a8c6f7d01e743c602858e47", "Url": "https://api.github.com/repos/Netflix/eureka", "Date": "2014-01-13T07:35:07Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.ffzx.cas.support.StringUtils.isNotBlank(ticket)) { java.lang.String auth = sessionManager.retrieveFromSession(((SessionManager.SERVER_SESSION_KEY_PREFIX) + ticket)); if (com.ffzx.cas.support.StringUtils.isBlank(auth)) { java.lang.String casBase = (com.ffzx.cas.support.PropertiesLoader.getProperty(\"cas.base\")) + \"/login.jsp\"; java.lang.String webBase = com.ffzx.cas.support.PropertiesLoader.getProperty(\"web.base\"); casBase = urlParameterAdd(casBase, webBase); httpResponse.sendRedirect(casBase); return; } }else { java.lang.String casBase = (com.ffzx.cas.support.PropertiesLoader.getProperty(\"cas.base\")) + \"/login.jsp\"; java.lang.String webBase = com.ffzx.cas.support.PropertiesLoader.getProperty(\"web.base\"); casBase = urlParameterAdd(casBase, webBase); httpResponse.sendRedirect(casBase); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/6443/buggy-version/cas-web.src.main.java.com.ffzx.cas.LoginFilter.java", "BodyUseAPI": ["com.ffzx.cas.SessionManager.retrieveFromSession(((SessionManager.SERVER_SESSION_KEY_PREFIX) + ticket))"], "Fixed commit": "926084489bdf851201d42710caf0a87ce6c24ba2", "Url": "https://api.github.com/repos/shanjunmei/cas-web", "Date": "2016-08-15T07:07:24Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (jsonStr == null) return movies;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2539/buggy-version/app.src.main.java.net.kechol.udacity.android.popularmovies.loaders.DiscoverMovieLoader.java", "BodyUseAPI": [], "Fixed commit": "15ba79660132f3aab1845f152be80f5652c37509", "Url": "https://api.github.com/repos/kechol/PopularMovies", "Date": "2015-07-22T18:26:01Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isDecodeFinished)) { handler.postDelayed(new java.lang.Runnable() { @java.lang.Override public void run() { invalidateSelf(); } }, 160); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/1911/buggy-version/giflibrary.src.main.java.com.joe.giflibrary.model.GifDrawable.java", "BodyUseAPI": [], "Fixed commit": "ab1a4f03c9a8804fa736f5b1b721ae14c6f30b5b", "Url": "https://api.github.com/repos/1030310877/JoeGif", "Date": "2017-01-05T10:58:28Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getEndTime()) != null) { values.put(DbHelper.COLUMN_ENDTIME, hslu.bda.medimemory.entity.ConsumeInterval.simpleDateFormat.format(getEndTime().getTime())); }else { values.put(DbHelper.COLUMN_ENDTIME, ((java.lang.String) (null))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/1925/buggy-version/app.src.main.java.hslu.bda.medimemory.entity.ConsumeInterval.java", "BodyUseAPI": [], "Fixed commit": "41ae8834ac02ac1f3337a24527d155558dbd6d9b", "Url": "https://api.github.com/repos/tcalbiss/MediMemory", "Date": "2016-04-27T22:44:51Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getStartTime()) != null) { values.put(DbHelper.COLUMN_STARTTIME, hslu.bda.medimemory.entity.ConsumeInterval.simpleDateFormat.format(getStartTime().getTime())); }else { values.put(DbHelper.COLUMN_STARTTIME, ((java.lang.String) (null))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/1925/buggy-version/app.src.main.java.hslu.bda.medimemory.entity.ConsumeInterval.java", "BodyUseAPI": [], "Fixed commit": "41ae8834ac02ac1f3337a24527d155558dbd6d9b", "Url": "https://api.github.com/repos/tcalbiss/MediMemory", "Date": "2016-04-27T22:44:51Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getConsumeTime()) != null) { values.put(DbHelper.COLUMN_CONSTIME, hslu.bda.medimemory.entity.ConsumeIndividual.simpleDateFormat.format(getConsumeTime().getTime())); }else { values.put(DbHelper.COLUMN_CONSTIME, ((java.lang.String) (null))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/1925/buggy-version/app.src.main.java.hslu.bda.medimemory.entity.ConsumeIndividual.java", "BodyUseAPI": [], "Fixed commit": "41ae8834ac02ac1f3337a24527d155558dbd6d9b", "Url": "https://api.github.com/repos/tcalbiss/MediMemory", "Date": "2016-04-27T22:44:51Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isGroupFiles())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2383/buggy-version/components.formats-bsd.src.loci.formats.in.MicromanagerReader.java", "BodyUseAPI": [], "Fixed commit": "ab1965135f581158ea70aa85cd219919afe03881", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2015-03-25T12:11:20Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["loci.formats.FormatReader.isThisType(java.lang.String,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (valid && (!(isGroupFiles()))) { try { return isSingleFile(metaFile); } catch (java.lang.Exception e) { loci.formats.in.LOGGER.debug(\"\", e); return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2383/buggy-version/components.formats-bsd.src.loci.formats.in.OMETiffReader.java", "BodyUseAPI": [], "Fixed commit": "ab1965135f581158ea70aa85cd219919afe03881", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2015-03-25T12:11:20Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (useDefaultDisplayVsync) { vsyncSampler = com.google.android.exoplayer2.video.VideoFrameReleaseTimeHelper.VSyncSampler.getInstance(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/4613/buggy-version/library.core.src.main.java.com.google.android.exoplayer2.video.VideoFrameReleaseTimeHelper.java", "BodyUseAPI": [], "Fixed commit": "c72fadd989bdbb7c7fd81e9d9adc575319b22a49", "Url": "https://api.github.com/repos/drhill/ExoPlayer", "Date": "2017-10-20T00:28:17Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (this.rules.containsKey(rule)) return this.rules.get(rule); else return java.util.Collections.emptySet();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/8856/buggy-version/src.main.java.org.swrlapi.drools.owl2rl.DroolsOWL2RLRules.java", "BodyUseAPI": ["java.util.Map<OWL2RLNames.OWL2RLRule, java.util.Set<org.swrlapi.drools.core.DroolsRuleDefinition>>.get(OWL2RLNames.OWL2RLRule)"], "Fixed commit": "5f0eb7b25b4c05974d8c6e4d5d712b40ae4530f8", "Url": "https://api.github.com/repos/protegeproject/swrlapi-drools-engine", "Date": "2015-12-09T20:11:19Z"},
{"Line": "=>317", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mDisplayMode) == (com.lucasurbas.listitemview.ListItemView.MODE_ICON)) { mIconView.setImageDrawable(mIconDrawable); }else if ((mDisplayMode) == (com.lucasurbas.listitemview.ListItemView.MODE_CIRCULAR_ICON)) { mCircularIconView.setIconDrawable(mIconDrawable); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/3586/buggy-version/listitemview.src.main.java.com.lucasurbas.listitemview.ListItemView.java", "BodyUseAPI": [], "Fixed commit": "848e2373e1ec201716212efe06f35eeafaddcdab", "Url": "https://api.github.com/repos/lurbas/ListItemView", "Date": "2017-03-26T19:08:44Z"},
{"Line": "=>499", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((connection.getOriginalTarget()) == null) || ((connection.getOriginalTarget().size()) == 0)) source = connection.getTarget(); else if (((connection.getOriginalTarget()) != null) && ((connection.getOriginalTarget().size()) == 1)) source = connection.getOriginalTarget().get(0); else throw new java.lang.Exception(((\"Too many original tagets in connection available. Please check the the original targets of connection: \\\"\" + (connection.getName())) + \"\\\"\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/970/buggy-version/de.tud.cs.st.vespucci.diagram.src.de.tud.cs.st.vespucci.diagram.converter.DiagramConverter.java", "BodyUseAPI": ["de.tud.cs.st.vespucci.vespucci_model.Connection.getOriginalTarget()", "de.tud.cs.st.vespucci.vespucci_model.Connection.getTarget()", "de.tud.cs.st.vespucci.vespucci_model.Connection.getOriginalTarget()", "de.tud.cs.st.vespucci.vespucci_model.Connection.getOriginalTarget()", "connection.getOriginalTarget().get(int)", "connection.getOriginalTarget().size()", "de.tud.cs.st.vespucci.vespucci_model.Connection.getName()"], "Fixed commit": "d812ab385c414444fbd0dc6a69c72ec0592911e2", "Url": "https://api.github.com/repos/mitschke/vespucci", "Date": "2011-03-17T08:35:31Z"},
{"Line": "=>521", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (connection instanceof de.tud.cs.st.vespucci.vespucci_model.Expected) transactionSB.append((((((((((((\"expected\" + \"('\") + fileName) + \"', \") + (mDependencyCounter)) + \", \") + (getDependencyEnsembleName(source))) + \", [], \") + (getDependencyEnsembleName(target))) + \", [], \") + (connection.getName())) + \").\\n\")); else if (connection instanceof de.tud.cs.st.vespucci.vespucci_model.NotAllowed) transactionSB.append((((((((((((\"not_allowed\" + \"('\") + fileName) + \"', \") + (mDependencyCounter)) + \", \") + (getDependencyEnsembleName(source))) + \", [], \") + (getDependencyEnsembleName(target))) + \", [], \") + (connection.getName())) + \").\\n\")); else if (connection instanceof de.tud.cs.st.vespucci.vespucci_model.InAndOut) { transactionSB.append((((((((((((\"incoming\" + \"('\") + fileName) + \"', \") + (mDependencyCounter)) + \", \") + (getDependencyEnsembleName(source))) + \", [], \") + (getDependencyEnsembleName(target))) + \", [], \") + (connection.getName())) + \").\\n\")); transactionSB.append((((((((((((\"outgoing\" + \"('\") + fileName) + \"', \") + (mDependencyCounter)) + \", \") + (getDependencyEnsembleName(source))) + \", [], \") + (getDependencyEnsembleName(target))) + \", [], \") + (connection.getName())) + \").\\n\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/970/buggy-version/de.tud.cs.st.vespucci.diagram.src.de.tud.cs.st.vespucci.diagram.converter.DiagramConverter.java", "BodyUseAPI": ["java.lang.StringBuilder.append((((((((((((\"expected\" + \"('\") + fileName) + \"', \") + (mDependencyCounter)) + \", \") + (getDependencyEnsembleName(source))) + \", [], \") + (getDependencyEnsembleName(target))) + \", [], \") + (connection.getName())) + \").\\n\"))", "de.tud.cs.st.vespucci.vespucci_model.Connection.getName()", "java.lang.StringBuilder.append((((((((((((\"not_allowed\" + \"('\") + fileName) + \"', \") + (mDependencyCounter)) + \", \") + (getDependencyEnsembleName(source))) + \", [], \") + (getDependencyEnsembleName(target))) + \", [], \") + (connection.getName())) + \").\\n\"))", "java.lang.StringBuilder.append((((((((((((\"incoming\" + \"('\") + fileName) + \"', \") + (mDependencyCounter)) + \", \") + (getDependencyEnsembleName(source))) + \", [], \") + (getDependencyEnsembleName(target))) + \", [], \") + (connection.getName())) + \").\\n\"))", "de.tud.cs.st.vespucci.vespucci_model.Connection.getName()", "de.tud.cs.st.vespucci.vespucci_model.Connection.getName()", "de.tud.cs.st.vespucci.vespucci_model.Connection.getName()", "java.lang.StringBuilder.append((((((((((((\"outgoing\" + \"('\") + fileName) + \"', \") + (mDependencyCounter)) + \", \") + (getDependencyEnsembleName(source))) + \", [], \") + (getDependencyEnsembleName(target))) + \", [], \") + (connection.getName())) + \").\\n\"))"], "Fixed commit": "d812ab385c414444fbd0dc6a69c72ec0592911e2", "Url": "https://api.github.com/repos/mitschke/vespucci", "Date": "2011-03-17T08:35:31Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mTimer) != null) { mTimer.cancel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/6779/buggy-version/src.com.ftechz.DebatingTimer.BellRepeater.java", "BodyUseAPI": [], "Fixed commit": "0127804c54085ce337016a174e46288750c79b02", "Url": "https://api.github.com/repos/czlee/debatekeeper", "Date": "2012-05-13T10:52:00Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cmdLine.hasOption(\"httpPort\")) { int port = ((java.lang.Number) (cmdLine.getParsedOptionValue(\"httpPort\"))).intValue(); winrock.Launcher.log.debug(\"port:{}\", port); if (port < 0) { tomcat.getConnector().destroy(); }else { tomcat.getConnector().setPort(port); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/6596/buggy-version/src.main.java.winrock.Launcher.java", "BodyUseAPI": ["org.apache.commons.cli.CommandLine.getParsedOptionValue(java.lang.String)", "((java.lang.Number) (cmdLine.getParsedOptionValue(\"httpPort\"))).intValue()"], "Fixed commit": "252d222eecb64100c244604112db821043d4bf28", "Url": "https://api.github.com/repos/kaven125/winrock", "Date": "2016-04-13T08:50:42Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.zuoPATHolong.blog.common.cache.SingletonCache.instance().get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.zuoPATHolong.blog.common.utils.ObjectUtils.isNull(articleRankResponseDtos)) { return articleMap; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/5640/buggy-version/blog-service.src.main.java.com.zuoPATHolong.blog.service.impl.UserArticleServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "65a0d3ea9bbff6c515dcfee4c87f37a81ee9e1eb", "Url": "https://api.github.com/repos/iCodingStar/everyone-java-blog", "Date": "2016-07-17T13:49:01Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (explored.contains(parent)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2277/buggy-version/src.main.java.org.protege.owl.codegeneration.property.JavaPropertyDeclarationCache.java", "BodyUseAPI": [], "Fixed commit": "a2ca4470c0168a8e975ac3859ee6fe590bd5a342", "Url": "https://api.github.com/repos/protegeproject/code-generation", "Date": "2014-12-17T03:50:06Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (millis != (Alarm.NEXT_NON_REAL)) alarm = this.get(earliestIndex); else alarm = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2902/buggy-version/application.src.se.chalmers.dat255.sleepfighter.model.AlarmsManager.java", "BodyUseAPI": [], "Fixed commit": "795e6ede699fa49e78d6cf80d21f5116e1a5cc46", "Url": "https://api.github.com/repos/Hasselmannen/sleepfighter", "Date": "2013-09-19T15:29:16Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.View.getTag(R.string.COMMON_VIEW_TAG2)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (null != editText2) { editText2.setFocusable(true); editText2.setFocusableInTouchMode(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/8306/buggy-version/src.com.appolis.adapter.ReceivingItemDetailAdapter.java", "BodyUseAPI": ["android.widget.EditText.setFocusable(boolean)", "android.widget.EditText.setFocusableInTouchMode(boolean)"], "Fixed commit": "46cc24cee2884ae984064911654e5f1010bb7216", "Url": "https://api.github.com/repos/hunglefpt/AppolisAndroidTbl", "Date": "2015-02-26T12:43:42Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (activity != null) { com.google.android.gms.analytics.Tracker tracker = io.evercam.androidapp.EvercamPlayApplication.getAppTracker(activity); tracker.send(new com.google.android.gms.analytics.HitBuilders.ExceptionBuilder().setDescription(e.getStackTrace()[0].toString().replace(\"io.evercam.androidapp\", e.toString())).setFatal(true).build()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/6261/buggy-version/evercamPlay.src.main.java.io.evercam.androidapp.EvercamPlayApplication.java", "BodyUseAPI": ["io.evercam.androidapp.EvercamPlayApplication.getAppTracker(android.app.Activity)"], "Fixed commit": "f70bbafb1a5057b3d675b3b11308803b51082863", "Url": "https://api.github.com/repos/evercam/evercam-android", "Date": "2016-03-03T09:53:51Z"},
{"Line": "=>405", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((timer) != null) { timer.cancel(); timer = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/6535/buggy-version/app.src.main.java.mygames.lineball.Activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "65e8b110b47b297edbaa54bf5c739a33f8ce0c4e", "Url": "https://api.github.com/repos/nicot95/LineBall", "Date": "2015-09-28T21:02:41Z"},
{"Line": "=>409", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fiveSecsLessTimer) != null) { fiveSecsLessTimer.cancel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/6535/buggy-version/app.src.main.java.mygames.lineball.Activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "65e8b110b47b297edbaa54bf5c739a33f8ce0c4e", "Url": "https://api.github.com/repos/nicot95/LineBall", "Date": "2015-09-28T21:02:41Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (world.isRemote) { cpw.mods.fml.client.FMLClientHandler.instance().getClient().sndManager.playSound(\"mob.wither.death\", (((float) (x)) + 0.5F), (((float) (y)) + 0.5F), (((float) (z)) + 0.5F), 5.0F, 10.0F); cpw.mods.fml.client.FMLClientHandler.instance().getClient().sndManager.playSound(\"mob.enderdragon.growl\", (((float) (x)) + 0.5F), (((float) (y)) + 0.5F), (((float) (z)) + 0.5F), 5.0F, 1.0F); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/1464/buggy-version/src.minecraft.biomesoplenty.blocks.BlockBOPGlass.java", "BodyUseAPI": [], "Fixed commit": "b4a5c46105b30245f73ea14af611ffed891dff86", "Url": "https://api.github.com/repos/BiomesOPlenty/BiomesOPlenty", "Date": "2013-07-30T09:45:46Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (attr.getQualifiedName().equals(\"android:text\")) { value = (\"\\\"\" + value) + \"\\\"\"; }else if (value.matches(\"#[0-9a-fA-F]+\")) { value = (\"Color.parseColor(\\\"\" + value) + \"\\\")\"; }else if (((value.equals(\"gone\")) || (value.equals(\"visibile\"))) || (value.equals(\"invisibile\"))) { value = \"View.\" + (value.toUpperCase()); }else if (value.startsWith(\"@drawable/\")) { value = value.substring(((value.indexOf('/')) + 1)); value = \"R.drawable.\" + value; value = (\"AXMLResources.getDrawable(\" + value) + \")\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/3457/buggy-version/src.com.excelsecu.axml.LayoutTranslater.java", "BodyUseAPI": [], "Fixed commit": "39e999a54d3f21f989032e522d43c3d20542dce6", "Url": "https://api.github.com/repos/sickworm/AndroidXMLToJava", "Date": "2015-01-19T08:03:26Z"},
{"Line": "=>250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portal.model.impl.LayoutTemplateImpl.getServletContextName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((servletContextName != null) && (com.liferay.portal.kernel.servlet.ServletContextPool.containsKey(servletContextName))) { javax.servlet.ServletContext servletContext = com.liferay.portal.kernel.servlet.ServletContextPool.get(servletContextName); return servletContext.getContextPath(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/325/buggy-version/portal-impl.src.com.liferay.portal.model.impl.LayoutTemplateImpl.java", "BodyUseAPI": ["com.liferay.portal.kernel.servlet.ServletContextPool.get(java.lang.String)"], "Fixed commit": "544f14c554ffc185b0257aa1374c4931823fd047", "Url": "https://api.github.com/repos/achaparro/liferay-portal", "Date": "2011-08-26T09:40:10Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portal.model.impl.ThemeImpl.getServletContextName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((servletContextName != null) && (com.liferay.portal.kernel.servlet.ServletContextPool.containsKey(servletContextName))) { javax.servlet.ServletContext servletContext = com.liferay.portal.kernel.servlet.ServletContextPool.get(servletContextName); return servletContext.getContextPath(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/325/buggy-version/portal-impl.src.com.liferay.portal.model.impl.ThemeImpl.java", "BodyUseAPI": ["com.liferay.portal.kernel.servlet.ServletContextPool.get(java.lang.String)"], "Fixed commit": "544f14c554ffc185b0257aa1374c4931823fd047", "Url": "https://api.github.com/repos/achaparro/liferay-portal", "Date": "2011-08-26T09:40:10Z"},
{"Line": "=>3006", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portal.model.PortletApp.getServletContextName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((servletContextName != null) && (com.liferay.portal.kernel.servlet.ServletContextPool.containsKey(servletContextName))) { javax.servlet.ServletContext servletContext = com.liferay.portal.kernel.servlet.ServletContextPool.get(servletContextName); return servletContext.getContextPath(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/325/buggy-version/portal-impl.src.com.liferay.portal.model.impl.PortletImpl.java", "BodyUseAPI": ["com.liferay.portal.kernel.servlet.ServletContextPool.get(java.lang.String)"], "Fixed commit": "544f14c554ffc185b0257aa1374c4931823fd047", "Url": "https://api.github.com/repos/achaparro/liferay-portal", "Date": "2011-08-26T09:40:10Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currentRow > rows) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/5189/buggy-version/chapter_003.src.main.java.ru.job4j.ConvertList.java", "BodyUseAPI": [], "Fixed commit": "d12fb6c718a2e468415978881198fab428c18232", "Url": "https://api.github.com/repos/StanislavEsin/estanislav", "Date": "2017-08-30T09:44:42Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isCurrentlyConnected()) { disconnect(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/5657/buggy-version/Client.src.client.Client.java", "BodyUseAPI": [], "Fixed commit": "149247db0b141f77bfaf96e061134202b2901c6f", "Url": "https://api.github.com/repos/meister4ever/quigon", "Date": "2016-04-28T17:25:30Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["msg.getMonUrls().stream().map(MonUri::new).map(MonUri::getHostname).collect(java.util.stream.Collector<java.lang.Object, ?, java.util.List<java.lang.Object>>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.zstack.core.db.Q.New(org.zstack.storage.ceph.CephPrimaryStorageMonVO.class).in(CephPrimaryStorageMonVO_.hostname, hostnames).isExists()) { throw new org.zstack.header.apimediator.ApiMessageInterceptionException(argerr(\"Adding the same Mon node is not allowed\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/3178/buggy-version/plugin.ceph.src.main.java.org.zstack.storage.ceph.CephApiInterceptor.java", "BodyUseAPI": [], "Fixed commit": "3642665be3cbf022ebe0eeb060c233f7639f453f", "Url": "https://api.github.com/repos/zstackio/zstack", "Date": "2017-08-24T06:28:14Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (assignment3.Main.DFS(assignment3.Main.words[0], assignment3.Main.words[1])) { assignment3.Main.ladder.add(start); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/8223/buggy-version/src.assignment3.Main.java", "BodyUseAPI": [], "Fixed commit": "9275b0a7a4c41309678b18a0a36fc013a1b0f453", "Url": "https://api.github.com/repos/AABabber/EE_422C_Project3", "Date": "2016-09-29T21:34:20Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.dspace.content.BitstreamFormat.findByMIMEType(org.dspace.core.Context,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (exists == null) { exists = org.dspace.content.BitstreamFormat.findByShortDescription(context, shortDesc); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/8992/buggy-version/dspace-api.src.main.java.org.dspace.administer.RegistryLoader.java", "BodyUseAPI": [], "Fixed commit": "c868cb20dbfca54ca7632834b166b2c905280040", "Url": "https://api.github.com/repos/mwoodiupui/DSpace", "Date": "2014-10-23T22:16:23Z"},
{"Line": "=>375", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((correctPath.get(0).equals(maze.entrance)) && (correctPath.get(((correctPath.size()) - 1)).equals(maze.exit))) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/3674/buggy-version/mazeAssign.mazeSolver.RecursiveBacktrackerSolver.java", "BodyUseAPI": [], "Fixed commit": "79834f3224d15ba439fc7b5a6bc216f28d56e773", "Url": "https://api.github.com/repos/paulbutera/AA_A2_MazeSolver", "Date": "2016-05-29T04:10:43Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_alpha) == ((java.lang.Math.PI) / 2)) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/6324/buggy-version/MMN12.Point.java", "BodyUseAPI": [], "Fixed commit": "6c61051c4974a52fc3961541d6811412a4091778", "Url": "https://api.github.com/repos/eyalcohen4/intro-to-cs", "Date": "2017-04-13T23:34:12Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (e.isPopupTrigger()) { tmBox.selectedPacket = pkt; tmBox.showPopup(translateEvent(e)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/520/buggy-version/yamcs-core.src.main.java.org.yamcs.ui.archivebrowser.IndexLine.java", "BodyUseAPI": ["org.yamcs.ui.archivebrowser.IndexBox.showPopup(java.awt.event.MouseEvent)", "org.yamcs.ui.archivebrowser.IndexLine.translateEvent(java.awt.event.MouseEvent)"], "Fixed commit": "bc19b93c9f22d30d0eeed8a72f52671b7c3da8d1", "Url": "https://api.github.com/repos/yamcs/yamcs", "Date": "2013-01-22T10:36:02Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((wagonHint) == null) || ((wagonHint.length()) <= 0)) { throw new org.sonatype.aether.transfer.NoRepositoryConnectorException(repository); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/5981/buggy-version/aether-connector-wagon.src.main.java.org.sonatype.aether.connector.wagon.WagonRepositoryConnector.java", "BodyUseAPI": [], "Fixed commit": "2eea203a8209420532fc3c91b38f408bf018d376", "Url": "https://api.github.com/repos/sonatype/sonatype-aether", "Date": "2011-03-01T18:43:03Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (savedInstanceState != null) { mWorkout = ((de.skubware.opentraining.basic.Workout) (savedInstanceState.getSerializable(de.skubware.opentraining.activity.start_training.FExListActivity.ARG_WORKOUT))); }else { mWorkout = ((de.skubware.opentraining.basic.Workout) (getIntent().getExtras().getSerializable(de.skubware.opentraining.activity.start_training.FExListActivity.ARG_WORKOUT))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/732/buggy-version/app.src.de.skubware.opentraining.activity.start_training.FExListActivity.java", "BodyUseAPI": ["android.os.Bundle.getSerializable(java.lang.String)"], "Fixed commit": "edb4e3fd7cc233419fa93f07cadf8c405a626a15", "Url": "https://api.github.com/repos/chaosbastler/opentraining", "Date": "2013-12-08T19:58:08Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)", "javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((email.length()) == 0) || ((password.length()) == 0)) { nz.ac.aut.bcis.chickenfarm.InfoMessage error = new nz.ac.aut.bcis.chickenfarm.InfoMessage(); error.setMessageType(\"ERROR\"); error.setMessage(\"User information cannot be empty\"); request.setAttribute(\"error\", error); request.getRequestDispatcher(\"/login.jsp\").forward(request, response); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/3031/buggy-version/src.java.nz.ac.aut.bcis.chickenfarm.Register.java", "BodyUseAPI": [], "Fixed commit": "5a3d841055f7d0f06f0c8ba536eb61e4a577e874", "Url": "https://api.github.com/repos/gazzdingo/DMS_ASSIGNMENT1", "Date": "2015-03-27T22:39:40Z"},
{"Line": "=>918", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((!(mail.isEditmode())) && ((mail.getAttachmentsOriginal()) != null)) && ((mail.getAttachmentsOriginal().size()) > 0)) && (mail.getFrom().equals(sender))) { sender.sendMessage((pre + (org.bitbucket.ucchy.undine.Messages.get(\"MailDetailAttachmentsOriginalLine\")))); for (org.bukkit.inventory.ItemStack i : mail.getAttachmentsOriginal()) { sender.sendMessage((((pre + \" \") + (org.bukkit.ChatColor.WHITE)) + (getItemDesc(i, true)))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/201/buggy-version/src.main.java.org.bitbucket.ucchy.undine.MailManager.java", "BodyUseAPI": ["org.bitbucket.ucchy.undine.MailData.getAttachmentsOriginal()", "org.bitbucket.ucchy.undine.sender.MailSender.sendMessage((pre + (org.bitbucket.ucchy.undine.Messages.get(\"MailDetailAttachmentsOriginalLine\"))))", "org.bitbucket.ucchy.undine.sender.MailSender.sendMessage((((pre + \"  \") + (org.bukkit.ChatColor.WHITE)) + (getItemDesc(i, true))))"], "Fixed commit": "80dde20c9742de60db321dc979b83978fcf8b87d", "Url": "https://api.github.com/repos/ucchyocean/UndineMailer", "Date": "2015-08-16T14:06:46Z"},
{"Line": "=>674", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["template.getRecordSet().getRecord(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (data != null) { return data.getValues(language); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/4901/buggy-version/core-library.src.main.java.org.silverpeas.core.contribution.template.publication.PublicationTemplateManager.java", "BodyUseAPI": ["org.silverpeas.core.contribution.content.form.DataRecord.getValues(java.lang.String)"], "Fixed commit": "736027202fda82dc0f8f584a2a259a3ed235114c", "Url": "https://api.github.com/repos/Silverpeas/Silverpeas-Core", "Date": "2017-10-18T13:02:24Z"},
{"Line": "=>443", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((game[x][y]) == 'A') { java.lang.System.out.print(\" | \"); }else { java.lang.System.out.print(((game[x][y]) + \" | \")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/5066/buggy-version/src.lab5TicTacToe.TicTacToe.java", "BodyUseAPI": ["java.io.PrintStream.print(java.lang.String)"], "Fixed commit": "92eb119d022df0af24750c35b013e12af2af6efd", "Url": "https://api.github.com/repos/Ylvakiller/Theme05lab05", "Date": "2014-10-26T12:58:26Z"},
{"Line": "=>339", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (FaReportDocumentType.DECLARATION.name().equals(faReportDocument.getTypeCode().getValue())) { abstractFact = activityFactMapper.generateFactsForFishingOperation(activity, faReportDocument); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/3363/buggy-version/service.src.main.java.eu.europa.ec.fisheries.uvms.rules.service.business.generator.ActivityRequestFactGenerator.java", "BodyUseAPI": ["eu.europa.ec.fisheries.uvms.rules.service.mapper.fact.ActivityFactMapper.generateFactsForFishingOperation(un.unece.uncefact.data.standard.reusableaggregatebusinessinformationentity._20.FishingActivity,un.unece.uncefact.data.standard.reusableaggregatebusinessinformationentity._20.FAReportDocument)"], "Fixed commit": "9632e94eb92876590b38d6d37d18fe4ce25d5c97", "Url": "https://api.github.com/repos/UnionVMS/UVMS-RulesModule-APP", "Date": "2017-08-28T10:58:55Z"},
{"Line": "=>9", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((1 == 1) & (2 == 2)) { java.lang.System.out.println(\"VERDADEIRO\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/1491/buggy-version/GitHub.src.HelloWorld.java", "BodyUseAPI": [], "Fixed commit": "55da5a742e79209f33cf6505061a5ad3b0c6d6e6", "Url": "https://api.github.com/repos/rodrigozim/zimm", "Date": "2015-05-18T01:03:04Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(memoryLogPositionManager.isStart())) { memoryLogPositionManager.start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/6360/buggy-version/parse.src.main.java.com.alibaba.otter.canal.parse.index.MixedLogPositionManager.java", "BodyUseAPI": ["com.alibaba.otter.canal.parse.index.MemoryLogPositionManager.start()"], "Fixed commit": "6b20959a2d90f861d6fab587ff4bdb0580b4fb3b", "Url": "https://api.github.com/repos/dbl-x/canal", "Date": "2017-04-06T12:13:59Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(zooKeeperLogPositionManager.isStart())) { zooKeeperLogPositionManager.start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/6360/buggy-version/parse.src.main.java.com.alibaba.otter.canal.parse.index.MixedLogPositionManager.java", "BodyUseAPI": ["com.alibaba.otter.canal.parse.index.ZooKeeperLogPositionManager.start()"], "Fixed commit": "6b20959a2d90f861d6fab587ff4bdb0580b4fb3b", "Url": "https://api.github.com/repos/dbl-x/canal", "Date": "2017-04-06T12:13:59Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((java.lang.String.valueOf(input).indexOf(\"E\")) > 0) { java.lang.String a = sciFormatter.format(input); return sciFormatter.format(input); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/3619/buggy-version/app.src.main.java.space.markwen.www.units.LengthActivity.java", "BodyUseAPI": ["java.text.NumberFormat.format(double)", "java.text.NumberFormat.format(double)"], "Fixed commit": "69c5d8f741a6788181cde8b4c704e44b663ad457", "Url": "https://api.github.com/repos/thousight/Units", "Date": "2016-09-22T19:10:08Z"},
{"Line": "=>506", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(pushPlanet)) { lastCreatedPlanet = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/5652/buggy-version/src.planets.src.se.exuvo.planets.systems.InputSystem.java", "BodyUseAPI": [], "Fixed commit": "f0741f87d900f09528652c2e1674300fd5370f2d", "Url": "https://api.github.com/repos/jesajx/inda12-proj", "Date": "2013-05-11T22:07:43Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getSupportFragmentManager().findFragmentById(R.id.tagcontent)", "com.pindroid.activity.BrowseBookmarks.findViewById(R.id.panel_collapse_button)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((tagFrag != null) && (panelBtn != null)) { if (tagFrag.isVisible()) findViewById(R.id.panel_collapse_button).setVisibility(View.GONE); else findViewById(R.id.panel_collapse_button).setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2908/buggy-version/src.com.pindroid.activity.BrowseBookmarks.java", "BodyUseAPI": ["android.support.v4.app.Fragment.isVisible()"], "Fixed commit": "9360f42637f5c1920965d0749302511b0bd5c6a1", "Url": "https://api.github.com/repos/maxpower47/PinDroid", "Date": "2012-06-08T15:38:17Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((lastYear == (eventModelList.get(0).startYear)) && (lastMonth == (eventModelList.get(0).startMonth))) { }else { eventModelList.add(0, new io.caly.calyandroid.Model.DataModel.EventModel(eventModelList.get(0).startYear, eventModelList.get(0).startMonth)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/3265/buggy-version/app.src.main.java.io.caly.calyandroid.Activity.EventListActivity.java", "BodyUseAPI": ["java.util.List<io.caly.calyandroid.Model.DataModel.EventModel>.get(int)", "java.util.List<io.caly.calyandroid.Model.DataModel.EventModel>.get(int)", "java.util.List<io.caly.calyandroid.Model.DataModel.EventModel>.add(int,io.caly.calyandroid.Model.DataModel.EventModel)"], "Fixed commit": "97af1f703404607d43ae7eb591b193dcf0ff07e0", "Url": "https://api.github.com/repos/CalyFactory/caly-android", "Date": "2017-04-15T08:56:11Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((net.osmand.plus.activities.MapActivity) (activity)).getMapViewTrackingUtilities().isMapLinkedToLocation()) { newIntent.putExtra(SearchActivity.SEARCH_NEARBY, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/202/buggy-version/OsmAnd.src.net.osmand.plus.dashboard.DashSearchFragment.java", "BodyUseAPI": [], "Fixed commit": "ebe029290bd765d8c51a30f1b426bd67c161a591", "Url": "https://api.github.com/repos/osmandapp/Osmand", "Date": "2015-11-09T15:45:28Z"},
{"Line": "=>539", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (parameterValue.replace(\" \", \"+\").equalsIgnoreCase(value)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/7428/buggy-version/hdiv-core.src.main.java.org.hdiv.util.HDIVUtil.java", "BodyUseAPI": [], "Fixed commit": "c4533d7ca51b744e538da84e9466fa9ec0a2b1fd", "Url": "https://api.github.com/repos/hdiv/hdiv", "Date": "2017-11-13T16:37:59Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (climbing.abilityActive) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/1468/buggy-version/rabbit-escape-engine.src.rabbitescape.engine.behaviours.Brollychuting.java", "BodyUseAPI": [], "Fixed commit": "4e01018277cb7f970dfcabf232ec66ed672cd9b6", "Url": "https://api.github.com/repos/andybalaam/rabbit-escape", "Date": "2015-12-26T15:13:50Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((regId) != null) { if ((regId.isEmpty()) && (isUnregisterBtnClicked)) { initiateUnregistration(); }else { org.wso2.emm.agent.beans.ServerConfig utils = new org.wso2.emm.agent.beans.ServerConfig(); utils.setServerIP(serverIP); if (((utils.getHostFromPreferences(context)) != null) && (!(utils.getHostFromPreferences(context).isEmpty()))) { org.wso2.emm.agent.utils.CommonUtils.callSecuredAPI(this, (((utils.getAPIServerURL(context)) + (org.wso2.emm.agent.utils.Constants.IS_REGISTERED_ENDPOINT)) + (regId)), HTTP_METHODS.GET, null, this, Constants.IS_REGISTERED_REQUEST_CODE); }else { try { org.wso2.emm.agent.utils.CommonUtils.clearAppData(context); } catch (org.wso2.emm.agent.AndroidAgentException e) { java.lang.String msg = \"Device already dis-enrolled.\"; android.util.Log.e(org.wso2.emm.agent.AlreadyRegisteredActivity.TAG, msg, e); } loadServerDetailsActivity(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/4619/buggy-version/modules.mobile-agents.android.client.client.src.main.java.org.wso2.emm.agent.AlreadyRegisteredActivity.java", "BodyUseAPI": ["org.wso2.emm.agent.utils.CommonUtils.callSecuredAPI(org.wso2.emm.agent.AlreadyRegisteredActivity,(((utils.getAPIServerURL(context)) + (org.wso2.emm.agent.utils.Constants.IS_REGISTERED_ENDPOINT)) + (regId)),HTTP_METHODS.GET,<nulltype>,org.wso2.emm.agent.AlreadyRegisteredActivity,Constants.IS_REGISTERED_REQUEST_CODE)"], "Fixed commit": "f5bb8799bc29c3c949bf66bb53347566f9f61444", "Url": "https://api.github.com/repos/Kamidu/product-mdm", "Date": "2015-12-15T09:47:42Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((nbPrototypesMax) > 10) nbPrototypesMax = 10;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2668/buggy-version/src.classif.ExperimentsLauncher.java", "BodyUseAPI": [], "Fixed commit": "bdcf79afa35cff05ccc655b85b3d7f8b7514ff1f", "Url": "https://api.github.com/repos/BlancRay/ICDM", "Date": "2016-04-03T23:45:15Z"},
{"Line": "=>429", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((nbPrototypesMax) > 10) nbPrototypesMax = 10;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2668/buggy-version/src.classif.ExperimentsLauncher.java", "BodyUseAPI": [], "Fixed commit": "bdcf79afa35cff05ccc655b85b3d7f8b7514ff1f", "Url": "https://api.github.com/repos/BlancRay/ICDM", "Date": "2016-04-03T23:45:15Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((stitchingRule.size()) < 2) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2462/buggy-version/src.main.java.net.onrc.onos.apps.segmentrouting.SegmentRoutingTunnel.java", "BodyUseAPI": [], "Fixed commit": "93d7881404411af9111ba3d885cd8cafb2c15b2d", "Url": "https://api.github.com/repos/opennetworkinglab/spring-open", "Date": "2015-01-20T17:56:40Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.wisc.cs.sdn.vnet.rt.RouteTable.lookup(packet.getDestinationAddress())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((routeEntry.getInterface()) == inIface) { if (DEBUG) java.lang.System.out.println(\"Found route entry has the same interface that the packet came from\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/6490/buggy-version/src.edu.wisc.cs.sdn.vnet.rt.Router.java", "BodyUseAPI": [], "Fixed commit": "d27a3ca279c9b69a173264c89fccad0e8df6aa0b", "Url": "https://api.github.com/repos/MingiK1m/cs640_hw2", "Date": "2017-02-25T11:39:40Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (cursor != null) { while (cursor.moveToNext()) { final com.android.documentsui.model.RootInfo root = com.android.documentsui.model.RootInfo.fromRootsCursor(authority, cursor); roots.add(root); } }else { android.util.Log.w(com.android.documentsui.DocumentsActivity.TAG, (\"Failed to load some roots from \" + authority)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/5217/buggy-version/packages.DocumentsUI.src.com.android.documentsui.RootsCache.java", "BodyUseAPI": ["android.database.Cursor.moveToNext()", "com.android.documentsui.model.RootInfo.fromRootsCursor(java.lang.String,android.database.Cursor)"], "Fixed commit": "a348a0055a6ad0114313b7d9ef47b647016ec9aa", "Url": "https://api.github.com/repos/InfinitiveOS/platform_frameworks_base", "Date": "2015-06-19T12:22:40Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (cursor != null) { libcore.io.IoUtils.closeQuietly(cursor); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/5217/buggy-version/packages.DocumentsUI.src.com.android.documentsui.RootsCache.java", "BodyUseAPI": ["libcore.io.IoUtils.closeQuietly(android.database.Cursor)"], "Fixed commit": "a348a0055a6ad0114313b7d9ef47b647016ec9aa", "Url": "https://api.github.com/repos/InfinitiveOS/platform_frameworks_base", "Date": "2015-06-19T12:22:40Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((ans.denom) < 0) && ((ans.num) > 0)) { ans.denom = (ans.denom) * (-1); ans.num = (ans.num) * (-1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/8644/buggy-version/src.Rational.java", "BodyUseAPI": [], "Fixed commit": "1f0068b1629b07bf5038e42323c58efc10a02df6", "Url": "https://api.github.com/repos/dkirby13/lab01_dkirby13", "Date": "2016-10-04T02:35:30Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eol.globi.domain.Specimen.getSampleLocation()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (location != null) { for (org.eol.globi.domain.Environment env : location.getEnvironments()) { java.lang.String envoId = env.getExternalId(); org.semanticweb.owlapi.model.OWLClass envoCls = getOWLClassViaOBOID(envoId); org.semanticweb.owlapi.model.OWLObjectProperty occurs_in = getOWLObjectProperty(\"occurs-in\"); this.addLocation(i, envoCls); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/8115/buggy-version/eol-globi-data-tool.src.main.java.org.eol.globi.export.GlobiOWLExporter.java", "BodyUseAPI": ["org.eol.globi.domain.Location.getEnvironments()"], "Fixed commit": "dc6d868226ea120c850020f3e1c984ce8cb38a86", "Url": "https://api.github.com/repos/jhpoelen/eol-globi-data", "Date": "2014-02-14T18:48:39Z"},
{"Line": "=>318", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.cinnober.msgcodec.Schema.resolveToType(field.getType(),boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((type.getType()) == (org.objectweb.asm.Type.SEQUENCE)) { componentType = schema.resolveToType(((com.cinnober.msgcodec.TypeDef.Sequence) (type)).getComponentType(), false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/3304/buggy-version/msgcodec-blink.src.main.java.com.cinnober.msgcodec.blink.BaseByteCodeGenerator.java", "BodyUseAPI": [], "Fixed commit": "9cfaaed4e61cf31335f2e4c456bb70255dda9475", "Url": "https://api.github.com/repos/cinnober/msgcodec", "Date": "2015-08-28T09:31:58Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["user.GestionUsers.isUser(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (user == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/776/buggy-version/src.useful.classes.UtilityFunctions.java", "BodyUseAPI": [], "Fixed commit": "b411a1e64074a706ef4c222d70df0cd5b1a189e1", "Url": "https://api.github.com/repos/ThomasOlivares/MultiTiers", "Date": "2017-02-26T18:16:37Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((user.GestionUsers.users) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/776/buggy-version/src.user.GestionUsers.java", "BodyUseAPI": [], "Fixed commit": "b411a1e64074a706ef4c222d70df0cd5b1a189e1", "Url": "https://api.github.com/repos/ThomasOlivares/MultiTiers", "Date": "2017-02-26T18:16:37Z"},
{"Line": "=>362", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(recoverMap.containsKey(entry.getKey()))) recoverMap.put(entry.getKey(), entry.getValue());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/8970/buggy-version/WeWrite.src.umich.eecs441.project.TextEditorActivity.java", "BodyUseAPI": ["java.util.Map.Entry<java.lang.Long, java.lang.Integer>.getKey()", "java.util.HashMap<java.lang.Long, java.lang.Integer>.put(java.lang.Long,java.lang.Integer)", "java.util.Map.Entry<java.lang.Long, java.lang.Integer>.getValue()"], "Fixed commit": "724217a2c2213f30a8a2516b9754a23c2819c7c9", "Url": "https://api.github.com/repos/bingjiex/f13eecs441p1.bingjiex.ssx", "Date": "2013-09-30T04:03:42Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ageColumnConfig) == null) { return org.runningdinner.core.converter.config.AgeColumnConfig.noAgeColumn(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/5715/buggy-version/src.main.java.org.runningdinner.core.converter.config.ParsingConfiguration.java", "BodyUseAPI": [], "Fixed commit": "b505057a857ec468cb87037c0e0d0414e429dea5", "Url": "https://api.github.com/repos/Clemens85/runningdinner-core", "Date": "2014-10-14T19:06:39Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(org.apache.commons.lang3.StringUtils.isEmpty(dataSourceName))) { parameters.put(\"dataSourceName\", dataSourceName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/6282/buggy-version/src.main.java.com.nexosis.impl.ModelClient.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,java.lang.String)"], "Fixed commit": "974da22df781e786d6b65c982fda16c0790c58d0", "Url": "https://api.github.com/repos/Nexosis/nexosisclient-java", "Date": "2017-10-04T17:08:43Z"},
{"Line": "=>437", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (newSuperClasses.contains(cls)) { throw new com.orientechnologies.orient.core.exception.OSchemaException(((\"Duplicated superclass '\" + (cls.getName())) + \"'\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2201/buggy-version/core.src.main.java.com.orientechnologies.orient.core.metadata.schema.OClassImpl.java", "BodyUseAPI": ["com.orientechnologies.orient.core.metadata.schema.OClassImpl.getName()"], "Fixed commit": "802b1e4a26c99763860cdd6a8ced2c007af31624", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2016-01-12T12:12:41Z"},
{"Line": "=>296", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (d != (java.lang.Math.floor(d))) { error(org.xeroserver.x0library.gui.InputField.INT); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/5143/buggy-version/src.org.xeroserver.x0library.gui.InputField.java", "BodyUseAPI": [], "Fixed commit": "f04f194c2ec2a0a4b7efdf2d8aecd3294598a537", "Url": "https://api.github.com/repos/DanielEnglisch/x0Library", "Date": "2016-12-21T15:25:51Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.sqrt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((sqrt % 1) == 0) { divisors1.add(((int) (sqrt))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2739/buggy-version/src.util.Util.java", "BodyUseAPI": [], "Fixed commit": "416db6c951b5abf6af6e8b10f8e7c83b2213731d", "Url": "https://api.github.com/repos/leodenault/project-euler-problems", "Date": "2015-07-08T18:01:26Z"},
{"Line": "=>603", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (resultCode == (android.app.Activity.RESULT_OK)) { java.lang.String laiString = intent.getStringExtra(\"eu.marcofoi.android.PocketLAI.LAI\"); ((com.geoodk.collect.android.views.ODKView) (mCurrentView)).setBinaryData(laiString); saveAnswersForCurrentScreen(com.geoodk.collect.android.activities.FormEntryActivity.DO_NOT_EVALUATE_CONSTRAINTS); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/1222/buggy-version/app.src.main.java.com.geoodk.collect.android.activities.FormEntryActivity.java", "BodyUseAPI": [], "Fixed commit": "d006388632306161a57d3e88ff633937af2ec906", "Url": "https://api.github.com/repos/mcfoi/collect", "Date": "2015-06-01T16:36:11Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["etMessageInput.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((messageToSend.equals(\"\")) || (messageToSend == null)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2989/buggy-version/src.com.example.shutapp.ChatActivity.java", "BodyUseAPI": [], "Fixed commit": "830ce059cc9092d330edaa3c83c82aef647f8cbd", "Url": "https://api.github.com/repos/HampusLilja/AndroidProject", "Date": "2012-10-04T14:30:09Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["etChatroomInput.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((chatRoomToBeAdded.equals(\"\")) || (chatRoomToBeAdded == null)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2989/buggy-version/src.com.example.shutapp.NearbyConversationsActivity.java", "BodyUseAPI": [], "Fixed commit": "830ce059cc9092d330edaa3c83c82aef647f8cbd", "Url": "https://api.github.com/repos/HampusLilja/AndroidProject", "Date": "2012-10-04T14:30:09Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((mPet) != null) && (mPet.isDead())) && (!(mPlayer.hasAura(mAspectOfTheMonkey)))) { switchActionBar(2); mKeyboard.type('8'); switchActionBar(1); }else if ((((((mPlayerLevel) >= 20) && ((u.getTarget()) == (mPlayer.getGUID()))) && ((mPet) != null)) && (!(mPet.isDead()))) && (!(mBot.anyOnCD(mDisengage)))) { mKeyboard.type('-'); }else if ((!(mBot.anyOnCD(mRaptorStrike))) && (manaValue >= 0.15F)) { mKeyboard.type('2'); }else { mKeyboard.type('7'); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/7459/buggy-version/src.rotations.HunterSolver.java", "BodyUseAPI": ["com.betterbot.api.pub.Unit.isDead()", "com.betterbot.api.pub.Unit.getGUID()"], "Fixed commit": "f90d099472b19d6aeae9c42ec8754f2646b0927b", "Url": "https://api.github.com/repos/TheCruxDev/BetterBotProfiles", "Date": "2017-09-23T11:29:36Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mPlayerLevel) >= 4) && (!(mPlayer.hasAura(mAspectOfTheMonkey)))) { switchActionBar(2); mKeyboard.type('8'); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/7459/buggy-version/src.rotations.HunterSolver.java", "BodyUseAPI": [], "Fixed commit": "f90d099472b19d6aeae9c42ec8754f2646b0927b", "Url": "https://api.github.com/repos/TheCruxDev/BetterBotProfiles", "Date": "2017-09-23T11:29:36Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (wordB.isEmpty()) { spanString.setSpan(new android.text.style.UnderlineSpan(), 0, wordA.length(), 0); return spanString; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/4630/buggy-version/app.src.main.java.nl.mprog.axel.wrds_programmeerproject.Algorithms.AnswerComparison.java", "BodyUseAPI": [], "Fixed commit": "9665082540775565a5bf28f00ee9daa7dbafe78f", "Url": "https://api.github.com/repos/MangoDream1/Wrds---Programmeer-Project", "Date": "2017-01-18T10:04:41Z"},
{"Line": "=>3894", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.aelitis.azureus.plugins.xmwebui.Download.getState()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (state == (Download.ST_ERROR)) { download.stop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/7719/buggy-version/com.aelitis.azureus.plugins.xmwebui.XMWebUIPlugin.java", "BodyUseAPI": [], "Fixed commit": "c15afd8bb1602fe4f3651f22f9d45c1fefb6e70e", "Url": "https://api.github.com/repos/BiglySoftware/BiglyBT-plugin-xmwebui", "Date": "2017-09-02T21:16:36Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (\"*\".equals(names)) { for (java.lang.String name : sqlEngineFactory.getNames()) { try { sqlEngineFactory.getCheckedProcedureEngine(name); } catch (org.sqlproc.engine.SqlEngineException ex) { errors.append(ex.getMessage()).append(\"\\n\"); } } }else { for (java.lang.String name : names.split(\",\")) { try { sqlEngineFactory.getCheckedProcedureEngine(name); } catch (org.sqlproc.engine.SqlEngineException ex) { errors.append(ex.getMessage()).append(\"\\n\"); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/4435/buggy-version/sql-processor.src.main.java.org.sqlproc.engine.jmx.SqlSimpleFactoryJmx.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "66a60046e9e04ec92cb7fd25fd9ead9fe738ae78", "Url": "https://api.github.com/repos/hudec/sql-processor", "Date": "2014-09-16T12:44:53Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (\"*\".equals(names)) { for (java.lang.String name : sqlEngineFactory.getNames()) { try { sqlEngineFactory.getCheckedQueryEngine(name); } catch (org.sqlproc.engine.SqlEngineException ex) { errors.append(ex.getMessage()).append(\"\\n\"); } } }else { for (java.lang.String name : names.split(\",\")) { try { sqlEngineFactory.getCheckedQueryEngine(name); } catch (org.sqlproc.engine.SqlEngineException ex) { errors.append(ex.getMessage()).append(\"\\n\"); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/4435/buggy-version/sql-processor.src.main.java.org.sqlproc.engine.jmx.SqlSimpleFactoryJmx.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "66a60046e9e04ec92cb7fd25fd9ead9fe738ae78", "Url": "https://api.github.com/repos/hudec/sql-processor", "Date": "2014-09-16T12:44:53Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (\"*\".equals(names)) { for (java.lang.String name : sqlEngineFactory.getNames()) { try { sqlEngineFactory.getCheckedCrudEngine(name); } catch (org.sqlproc.engine.SqlEngineException ex) { errors.append(ex.getMessage()).append(\"\\n\"); } } }else { for (java.lang.String name : names.split(\",\")) { try { sqlEngineFactory.getCheckedCrudEngine(name); } catch (org.sqlproc.engine.SqlEngineException ex) { errors.append(ex.getMessage()).append(\"\\n\"); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/4435/buggy-version/sql-processor.src.main.java.org.sqlproc.engine.jmx.SqlSimpleFactoryJmx.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "66a60046e9e04ec92cb7fd25fd9ead9fe738ae78", "Url": "https://api.github.com/repos/hudec/sql-processor", "Date": "2014-09-16T12:44:53Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((slide) != 0) quad.translate(slide, 0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/5756/buggy-version/EclipseProject.SketchupBlocks.src.sketchupblocks.gui.Menu.java", "BodyUseAPI": [], "Fixed commit": "34c94e6f0f24f0aa704fc2ffefdf8f0786816243", "Url": "https://api.github.com/repos/Threepud/Sketchup-Blocks", "Date": "2013-09-10T19:26:32Z"},
{"Line": "=>626", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (fileOutput.exists()) { org.apache.commons.io.FileUtils.forceDelete(fileOutput); fileOutput = new java.io.File(com.stratelia.webactiv.util.FileRepositoryManager.getTemporaryPath(), ((getComponentId()) + (com.stratelia.silverpeas.infoLetter.control.InfoLetterSessionController.EXPORT_CSV_NAME))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/6052/buggy-version/infoletter.infoletter-war.src.main.java.com.stratelia.silverpeas.infoLetter.control.InfoLetterSessionController.java", "BodyUseAPI": ["org.apache.commons.io.FileUtils.forceDelete(java.io.File)"], "Fixed commit": "25666e747802a1a1bfa5496ecc8985a71784c018", "Url": "https://api.github.com/repos/CecileBONIN/Silverpeas-Components", "Date": "2015-01-13T15:24:41Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.ServletContext.getContextPath()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (contextPath.equals(\"/\")) { viewUri = \"/pilot\" + viewUri; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2390/buggy-version/src.main.java.com.ctb.pilot.chat.service.ChatServlet.java", "BodyUseAPI": [], "Fixed commit": "b5e557d98e63491746924bedfa129ec658e88a0f", "Url": "https://api.github.com/repos/izeye/pilot", "Date": "2012-09-13T21:40:45Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (null != transformer) { mViewPager.setPageTransformer(false, transformer); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/100/buggy-version/lib.src.main.java.lib.kalu.banner.BannerLayout.java", "BodyUseAPI": ["lib.kalu.banner.BannerViewPager.setPageTransformer(boolean,ViewPager.PageTransformer)"], "Fixed commit": "2d0c33ec4621d1716ddaf5e0864ee683d35e4917", "Url": "https://api.github.com/repos/153437803/BannerLayout", "Date": "2017-12-10T21:22:12Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(wrapAdapter.isLoading())) { com.dd.library.adapter.base.BaseQuickAdapter.RequestRefreshListener mRequestRefreshListener = wrapAdapter.getRequestRefreshListener(); if (mRequestRefreshListener != null) { wrapAdapter.setLoading(); mRequestRefreshListener.onRefreshRequested(); } }else { mRefreshHeader.refreshComplete(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2987/buggy-version/libAdapterHelper.src.main.java.com.dd.library.adapter.base.PullRecyclerView.java", "BodyUseAPI": ["com.dd.library.adapter.base.BaseQuickAdapter.setLoading()", "com.dd.library.adapter.base.BaseQuickAdapter.getRequestRefreshListener()"], "Fixed commit": "9da2124e244767077c8f9fc94621cf9d248b3ca9", "Url": "https://api.github.com/repos/zhengdongdong/my-libs", "Date": "2017-10-30T14:04:40Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.wso2.carbon.identity.authenticator.token2.internal.Token2AuthenticatorServiceComponent.log.isDebugEnabled()) { org.wso2.carbon.identity.authenticator.token2.internal.Token2AuthenticatorServiceComponent.log.debug(\"Setting the Realm Service\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/943/buggy-version/component.authenticator.src.main.java.org.wso2.carbon.identity.authenticator.token2.internal.Token2AuthenticatorServiceComponent.java", "BodyUseAPI": ["org.apache.commons.logging.Log.debug(java.lang.String)"], "Fixed commit": "24c7505c9768ead90869a8435d2bc5be0060b89b", "Url": "https://api.github.com/repos/Kanapriya/identity-outbound-auth-token2", "Date": "2016-12-04T08:58:02Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.wso2.carbon.identity.authenticator.token2.internal.Token2AuthenticatorServiceComponent.log.isDebugEnabled()) { org.wso2.carbon.identity.authenticator.token2.internal.Token2AuthenticatorServiceComponent.log.debug(\"UnSetting the Realm Service\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/943/buggy-version/component.authenticator.src.main.java.org.wso2.carbon.identity.authenticator.token2.internal.Token2AuthenticatorServiceComponent.java", "BodyUseAPI": ["org.apache.commons.logging.Log.debug(java.lang.String)"], "Fixed commit": "24c7505c9768ead90869a8435d2bc5be0060b89b", "Url": "https://api.github.com/repos/Kanapriya/identity-outbound-auth-token2", "Date": "2016-12-04T08:58:02Z"},
{"Line": "=>700", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (base instanceof framework.scuba.domain.StaticElem) { ret = getAbstractMemLoc(((framework.scuba.domain.StaticElem) (base)), field); }else if (base instanceof framework.scuba.domain.LocalVarElem) { assert false : base + \" can NOT be a LocalVarElem\"; }else { assert false : \"wried things!\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2909/buggy-version/src.framework.scuba.domain.AbstractHeap.java", "BodyUseAPI": [], "Fixed commit": "1b843994229cc9b48723ad7c2d35c8027c45123f", "Url": "https://api.github.com/repos/fredfeng/Scuba", "Date": "2014-06-02T20:59:04Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["MainWindow.4.getIdsFromSelectedRows()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (idArray.isEmpty()) { PromptWindow pw = new PromptWindow(\"You did not choose anything to be modified!\"); pw.setVisible(true); }else { ModifyWindow mf = new ModifyWindow(mainRef, getDatabase(), idArray, tabbedPane.getSelectedIndex()); mf.setVisible(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2237/buggy-version/src.MainWindow.java", "BodyUseAPI": [], "Fixed commit": "2b1ca62cf7f4ddedc13a64306506e2b4c5a3f0d6", "Url": "https://api.github.com/repos/korvatap/MediaCollector", "Date": "2013-12-31T09:15:39Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cn.bluemobi.dylan.sqlitelibrary.SQLiteDbUtil.rawQuery(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((rawQuery != null) && ((rawQuery.size()) > 0)) { int count = java.lang.Integer.parseInt(rawQuery.get(0).get(\"count(*)\").toString()); if (count > 0) { return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/9070/buggy-version/sqlitelibrary.src.main.java.cn.bluemobi.dylan.sqlitelibrary.SQLiteDbUtil.java", "BodyUseAPI": ["java.lang.Object.toString()", "java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)", "java.util.List<java.util.Map<java.lang.String, java.lang.Object>>.get(int)", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "8e0b052ad0d14c21c8c8acffac858883886bda0b", "Url": "https://api.github.com/repos/linglongxin24/SQLite", "Date": "2017-10-26T09:43:25Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["imageInfoEditor.getModel().getImageInfo().getCpdFileName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (cpdFileName == null) { cpdFileName = imageInfoEditor.getModel().getImageInfo().getColorPaletteDef().getCpdFileName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/3381/buggy-version/beam-visat-rcp.src.main.java.org.esa.beam.visat.toolviews.imageinfo.BasicColorEditor.java", "BodyUseAPI": [], "Fixed commit": "df2d0c535e83b7585f980cdb6aa68c8c81edcfa5", "Url": "https://api.github.com/repos/seadas/beam", "Date": "2013-12-18T20:33:05Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(search.getText().toString().equals(\"\"))) { search.setText(\"\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/1047/buggy-version/app.src.main.java.rad19566.ddnss.de.hausbar.DrinkListActivity.java", "BodyUseAPI": ["android.widget.EditText.setText(java.lang.String)"], "Fixed commit": "e4a4abe708a382e23ab521cc96b6263a5849a7a5", "Url": "https://api.github.com/repos/dramsauer/HausbarApp", "Date": "2017-09-01T10:14:51Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (currentOptionsFormat.toUpperCase().equals(\"JSON\")) { layer.setOutputFormat(\"json\"); response.setContentType(\"text/javascript\"); response.getWriter().println(de.ifgi.lod4wfs.facade.Facade.getInstance().getFeature(layer)); }else if (currentOptionsFormat.toUpperCase().equals(\"GEOJSON\")) { layer.setOutputFormat(\"geojson\"); response.setContentType(\"text/javascript\"); response.getWriter().println(de.ifgi.lod4wfs.facade.Facade.getInstance().getFeature(layer)); }else if (currentOptionsFormat.toUpperCase().equals(\"ZIP\")) { response.setContentType(\"application/zip\"); java.io.File zipFile = de.ifgi.lod4wfs.core.Utils.compressFile(de.ifgi.lod4wfs.facade.Facade.getInstance().getFeature(layer), ((layer.getName().replace(\":\", \"_\")) + \".json\")); byte[] buffer = new byte[128]; de.ifgi.lod4wfs.web.ServletWFS.logger.info(((\"Feature \" + (layer.getName())) + \" successfully compressed.\")); java.io.FileInputStream fileInput = new java.io.FileInputStream(zipFile); response.setHeader(\"Content-Disposition\", ((\"attachment;filename=\\\"\" + (layer.getName().replace(\":\", \"_\"))) + \".zip\\\"\")); int totalRead = 0; int readBytes = 0; while (totalRead < (zipFile.length())) { if (((zipFile.length()) - totalRead) > 128) { readBytes = fileInput.read(buffer, 0, 128); totalRead += readBytes; }else { readBytes = fileInput.read(buffer, 0, (((int) (zipFile.length())) - totalRead)); totalRead = totalRead + readBytes; } response.getOutputStream().write(buffer, 0, readBytes); } fileInput.close(); }else { response.getWriter().println(de.ifgi.lod4wfs.facade.Facade.getInstance().getFeature(layer)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2450/buggy-version/lod4wfs.src.main.java.de.ifgi.lod4wfs.web.ServletWFS.java", "BodyUseAPI": ["java.lang.String.toUpperCase()", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.toUpperCase()"], "Fixed commit": "06c4220830c470ab9075895261238d6972bee0c1", "Url": "https://api.github.com/repos/jimjonesbr/lod4wfs", "Date": "2016-09-09T11:06:12Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (taxonConcept.has(\"taxonRank\")) { properties.put(PropertyAndValueDictionary.RANK, taxonConcept.get(\"taxonRank\").getValueAsText()); }else { java.lang.String name = properties.get(PropertyAndValueDictionary.NAME); if ((org.apache.commons.lang3.StringUtils.split(name).length) > 1) { properties.put(PropertyAndValueDictionary.RANK, \"Species\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/63/buggy-version/eol-globi-data-tool.src.main.java.org.eol.globi.service.EOLService.java", "BodyUseAPI": ["taxonConcept.get(\"taxonRank\").getValueAsText()", "org.codehaus.jackson.JsonNode.get(java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.put(PropertyAndValueDictionary.RANK,taxonConcept.get(\"taxonRank\").getValueAsText())"], "Fixed commit": "44604d1aefb4ecc5ab483c888bd7b60c1c879a12", "Url": "https://api.github.com/repos/jhpoelen/eol-globi-data", "Date": "2014-05-22T22:03:23Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.shiro.subject.SimplePrincipalCollection.getPrimaryPrincipal()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((p.getAccessTokenCredentials()) != null) { ret = ((p.getAccessTokenCredentials().getToken()) + \"_\") + typeName; }else { if (p instanceof org.apache.usergrid.security.shiro.OrganizationPrincipal) { org.apache.usergrid.security.shiro.OrganizationPrincipal op = ((org.apache.usergrid.security.shiro.OrganizationPrincipal) (p)); ret = ((op.getOrganizationId()) + \"_\") + typeName; }else { ret = ((p.getApplicationId()) + \"_\") + typeName; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/1786/buggy-version/stack.services.src.main.java.org.apache.usergrid.security.shiro.ShiroCache.java", "BodyUseAPI": ["org.apache.usergrid.security.shiro.PrincipalIdentifier.getApplicationId()", "org.apache.usergrid.security.shiro.PrincipalIdentifier.getAccessTokenCredentials()", "p.getAccessTokenCredentials().getToken()"], "Fixed commit": "cf0b65366b18eb11635d11a5ad13e2870d31a10f", "Url": "https://api.github.com/repos/apache/usergrid", "Date": "2017-02-10T18:57:56Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(_mainActivity.IsOpen())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/6155/buggy-version/app.src.main.java.com.example.m5.oximetergui.Activities.MainActivity.SliderFragment.java", "BodyUseAPI": [], "Fixed commit": "a25d99ace5423b7f63932e3315f2fbb44d0cd08f", "Url": "https://api.github.com/repos/M5Capstone2015/oximeterGui", "Date": "2015-02-27T22:56:34Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.elasticsearch.client.Client.prepareBulk()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((bulkRequest.numberOfActions()) == 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2274/buggy-version/src.main.java.org.openstreetmap.osmosis.plugin.elasticsearch.dao.EntityDao.java", "BodyUseAPI": [], "Fixed commit": "3546886865e98d80567c928249f6de292c454da0", "Url": "https://api.github.com/repos/ncolomer/elasticsearch-osmosis-plugin", "Date": "2013-03-10T11:47:31Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (drawerLayout.isDrawerOpen(Gravity.LEFT)) { drawerLayout.closeDrawer(Gravity.LEFT); }else { super.onBackPressed(); overridePendingTransition(R.anim.activity_parallax_in, R.anim.top_bottom); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/8038/buggy-version/Flickresque.app.src.main.java.don.com.flickresque.MainActivity.java", "BodyUseAPI": ["android.support.v4.widget.DrawerLayout.closeDrawer(Gravity.LEFT)"], "Fixed commit": "cd5adda4e4ac1d29a35985df27ea97a55a4da1fe", "Url": "https://api.github.com/repos/DonLiangGit/Android-Copymao", "Date": "2015-01-25T22:49:54Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((product != null) && ((product.getImage()) != null)) { return product.getImage().getBytes(1, ((int) (product.getImage().length()))); }else { java.io.InputStream stream = getClass().getClassLoader().getResourceAsStream(\"static/images/noImageFound.jpg\"); try { return org.apache.commons.io.IOUtils.toByteArray(stream); } catch (java.lang.Exception e) { throw new com.veanchondo.puntoVenta.api.exceptions.NotFoundException(\"Image not found\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/7503/buggy-version/src.main.java.com.veanchondo.puntoVenta.api.controllers.ProductController.java", "BodyUseAPI": ["com.veanchondo.puntoVenta.api.models.Product.getImage()", "product.getImage().getBytes(int,((int) (product.getImage().length())))", "com.veanchondo.puntoVenta.api.models.Product.getImage()", "product.getImage().length()"], "Fixed commit": "6cfb193abceaed53907311fea2d02aa22a1c8a9e", "Url": "https://api.github.com/repos/vedannt/vventas-api", "Date": "2017-12-18T05:31:37Z"},
{"Line": "=>468", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.pid) == (nachos.userprog.UserProcess.ROOT)) { nachos.userprog.Machine.halt(); nachos.userprog.Lib.assertNotReached(\"Machine.halt() did not halt machine!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/5278/buggy-version/userprog.UserProcess.java", "BodyUseAPI": [], "Fixed commit": "dd0b9decadb4c2de52751de30f6782e3c783ccea", "Url": "https://api.github.com/repos/ShiliangZuo/Nachos", "Date": "2017-04-30T00:08:55Z"},
{"Line": "=>346", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((selectedAirplane.stateType) == (StateType.QUEUEING)) { com.icarus.project.PIScreen.getInstance().setSelectedAirplane(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/1043/buggy-version/core.src.com.icarus.project.MainUi.java", "BodyUseAPI": [], "Fixed commit": "4a63331c119737b8ab279649b30729858ff12d5b", "Url": "https://api.github.com/repos/project-icarus/icarus-atc", "Date": "2017-05-19T05:07:36Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((game) != null) game.removePlayer(id);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2182/buggy-version/src.thefuryoftherabbidgrans.server.implementations.Player.java", "BodyUseAPI": [], "Fixed commit": "773ed7ea1135d44df3c3dd85c1c88ec09f028d5b", "Url": "https://api.github.com/repos/UCDP-Brony/FuryOfTheRabbidGransServer", "Date": "2016-07-21T16:16:58Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((binding) != null) && (!(binding.isDisposed()))) { bindingContext.removeBinding(binding); binding.dispose(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/3281/buggy-version/org.bbaw.bts.ui.commons.src.org.bbaw.bts.ui.commons.widgets.TranslationEditorComposite.java", "BodyUseAPI": ["org.eclipse.core.databinding.DataBindingContext.removeBinding(org.eclipse.core.databinding.Binding)", "org.eclipse.core.databinding.Binding.dispose()"], "Fixed commit": "e429f93491a4ae3ff9c62aec5846f83cb791c2e9", "Url": "https://api.github.com/repos/cplutte/bts", "Date": "2017-01-20T17:59:31Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jwildfire.base.Tools.FTOI(double)", "org.jwildfire.base.Tools.FTOI(double)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (h < rH) { return -1; }else if (h > rH) { return 1; }else { if ((hsv.v) < (rHSV.v)) { return -1; }else if ((hsv.v) > (rHSV.v)) { return 1; }else { return 0; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/8697/buggy-version/src.org.jwildfire.create.tina.palette.RGBColor.java", "BodyUseAPI": [], "Fixed commit": "acd8349c6f5f94e2e3c2a7a295cde2f296a022bc", "Url": "https://api.github.com/repos/thargor6/JWildfire", "Date": "2012-07-22T09:26:44Z"},
{"Line": "=>460", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dtInfo != null) { com.mongodb.DBObject whoisField = new com.mongodb.BasicDBObject(\"dtInfo\", dtInfoOb); fullUpdate = new com.mongodb.BasicDBObject().append(\"$addToSet\", ipsField).append(\"$set\", whoisField); }else { org.stopbadware.dsp.data.EventReportsHandler.LOG.error(\"Could not retrieve Domaintools whois info for host = {}\", host); fullUpdate = new com.mongodb.BasicDBObject().append(\"$addToSet\", ipsField); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/4525/buggy-version/src.org.stopbadware.dsp.data.EventReportsHandler.java", "BodyUseAPI": [], "Fixed commit": "76858e15d7562843f41f2758a7200594ca9bd5b0", "Url": "https://api.github.com/repos/StopBadware/dsp-core", "Date": "2015-05-18T13:54:03Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (arg1 == null) { android.view.LayoutInflater inflater = android.view.LayoutInflater.from(mContext); arg1 = inflater.inflate(R.layout.phonebook_row, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/5226/buggy-version/EventPrototype.app.src.main.java.edu.ggc.john.eventprototype.PhoneBookAdapter.java", "BodyUseAPI": [], "Fixed commit": "c041ab45892e95e26abb21babaacf2e5d2b404f2", "Url": "https://api.github.com/repos/jtran3/EventPrototype", "Date": "2016-11-10T23:08:42Z"},
{"Line": "=>2248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.os.Build.VERSION.SDK_INT) < (Build.VERSION_CODES.N)) { datetime = exif.getAttribute(ExifInterface.TAG_DATETIME); }else { datetime = exif.getAttribute(ExifInterface.TAG_DATETIME_ORIGINAL); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/3334/buggy-version/iNaturalist.src.main.java.org.inaturalist.android.ObservationEditor.java", "BodyUseAPI": [], "Fixed commit": "b4c42a769db18c266af633a6ab879bd759fcfb38", "Url": "https://api.github.com/repos/inaturalist/iNaturalistAndroid", "Date": "2017-03-08T23:57:07Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (shouldPreloadNewAnecdote()) { android.util.Log.d(io.gresse.hugo.anecdote.anecdote.list.AnecdoteFragment.TAG, \"afterRequestFinished, load new anecdotes\"); loadNewAnecdotes(mNextPageNumber); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/6059/buggy-version/app.src.main.java.io.gresse.hugo.anecdote.anecdote.list.AnecdoteFragment.java", "BodyUseAPI": [], "Fixed commit": "08ceae561c79b2cdaeabf370ed8b23d3e8f914a2", "Url": "https://api.github.com/repos/HugoGresse/Anecdote", "Date": "2017-03-18T21:51:16Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((currentImage) != null) && (!(currentImg.equals(\"user.gif\")))) grid.setImage(loc1, currentImg);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/1221/buggy-version/Game.java", "BodyUseAPI": ["Grid.setImage(Location,java.lang.String)"], "Fixed commit": "b50c09a35464d5374051f34247bd3f994b605351", "Url": "https://api.github.com/repos/Gene64/ScrollingGame", "Date": "2017-01-04T20:58:02Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(getCurrentLine().isEmpty())) { this.appendText((\"\\n\" + (interpreter.exec(instructions.get(posInList))))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/6352/buggy-version/src.main.java.de.prob2.ui.consoles.b.BConsole.java", "BodyUseAPI": [], "Fixed commit": "46b007fe444aa5414f3ce56ab86bd410482f722d", "Url": "https://api.github.com/repos/bendisposto/prob2-ui", "Date": "2016-10-26T08:35:35Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com._42six.amino.common.service.datacache.SortedIndexCache.getIndexForValue(bucket.getBucketDataSource())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (datasourceNameIndex < 0) { throw new java.io.IOException((\"Could not find index in cache for datasource: \" + (bucket.getBucketDataSource()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/1544/buggy-version/amino-impl.database.accumulo.common.src.main.java.com._42six.amino.bitmap.ByBucketMapper.java", "BodyUseAPI": [], "Fixed commit": "86e4adf4100608a9e63b57a837c3a0e7f7345be2", "Url": "https://api.github.com/repos/amino-cloud/amino", "Date": "2014-08-14T18:34:43Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com._42six.amino.common.service.datacache.SortedIndexCache.getIndexForValue(bucket.getBucketVisibility())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (visibilityIndex < 0) { throw new java.io.IOException((\"Could not find index in cache for visibility: \" + (bucket.getBucketVisibility()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/1544/buggy-version/amino-impl.database.accumulo.common.src.main.java.com._42six.amino.bitmap.ByBucketMapper.java", "BodyUseAPI": [], "Fixed commit": "86e4adf4100608a9e63b57a837c3a0e7f7345be2", "Url": "https://api.github.com/repos/amino-cloud/amino", "Date": "2014-08-14T18:34:43Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com._42six.amino.common.service.datacache.SortedIndexCache.getIndexForValue(bucket.getBucketName())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (bucketNameIndex < 0) { throw new java.io.IOException((\"Could not find index in cache for bucket value: \" + (bucket.getBucketName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/1544/buggy-version/amino-impl.database.accumulo.common.src.main.java.com._42six.amino.bitmap.ByBucketMapper.java", "BodyUseAPI": [], "Fixed commit": "86e4adf4100608a9e63b57a837c3a0e7f7345be2", "Url": "https://api.github.com/repos/amino-cloud/amino", "Date": "2014-08-14T18:34:43Z"},
{"Line": "=>297", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mPaint) != null) { canvas.drawPath(path, mPaint); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2307/buggy-version/src.com.topodroid.DistoX.DrawingPath.java", "BodyUseAPI": [], "Fixed commit": "9e1a58ef069d06070681f589ad6f64b4a4c35049", "Url": "https://api.github.com/repos/marcocorvi/topodroid", "Date": "2016-06-30T14:52:13Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mPaint) != null) { canvas.save(); canvas.clipPath(path); canvas.drawPaint(mPaint); canvas.restore(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2307/buggy-version/src.com.topodroid.DistoX.DrawingPath.java", "BodyUseAPI": [], "Fixed commit": "9e1a58ef069d06070681f589ad6f64b4a4c35049", "Url": "https://api.github.com/repos/marcocorvi/topodroid", "Date": "2016-06-30T14:52:13Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity().getIntent().getExtras()) != null) { isTravel = getActivity().getIntent().getExtras().getBoolean(\"ISTRAVEL\"); travelId = getActivity().getIntent().getExtras().getInt(\"TRAVELID\", 0); travelTitle = getActivity().getIntent().getExtras().getString(\"TRAVEL_TITLE\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/1757/buggy-version/src.com.goofy.travelbuddy.PlacesFragment.java", "BodyUseAPI": [], "Fixed commit": "4b64703a2fb18b421acd4fa47789574ab296bc2d", "Url": "https://api.github.com/repos/slav40o/TravelBuddyAndroidApp", "Date": "2014-10-15T22:07:16Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(char)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (nextSpaceIndex == (lol.Constants.NOT_FOUND)) { nextSpaceIndexInOriginalString = lol.Constants.NOT_FOUND; }else { nextSpaceIndexInOriginalString = nextSpaceIndex + index; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/8870/buggy-version/LifeOnLine.src.parser.LocationParser.java", "BodyUseAPI": [], "Fixed commit": "9b644116d793b2da1a8a44bfe825074261c35a4a", "Url": "https://api.github.com/repos/cs2103-t10-1j/main", "Date": "2014-11-08T13:44:47Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (nextSpaceIndexInOriginalString == (lol.Constants.NOT_FOUND)) { nextKeywordIndex = lol.Constants.NOT_FOUND; }else { nextKeywordIndex = getIndexOfNextReservedWord(nextSpaceIndexInOriginalString); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/8870/buggy-version/LifeOnLine.src.parser.LocationParser.java", "BodyUseAPI": ["parser.LocationParser.getIndexOfNextReservedWord(int)"], "Fixed commit": "9b644116d793b2da1a8a44bfe825074261c35a4a", "Url": "https://api.github.com/repos/cs2103-t10-1j/main", "Date": "2014-11-08T13:44:47Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lanes) != null) { for (crossyroad.Lane lane : lanes) { lane.update(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/3393/buggy-version/src.crossyroad.GameSurface.java", "BodyUseAPI": [], "Fixed commit": "da61b9b0ed5d6182ad9ded483db9bd5ad70e6cb0", "Url": "https://api.github.com/repos/aidan-martin/CrossyRoad", "Date": "2016-04-18T16:23:39Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.todoroo.astrid.data.Task.getValue(Task.USER_ID)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((userId != (com.todoroo.astrid.data.Task.USER_ID_SELF)) && (userId != (com.todoroo.astrid.actfm.sync.ActFmPreferenceService.userId()))) model.putTransitory(TaskService.TRANS_ASSIGNED, true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/5264/buggy-version/astrid.plugin-src.com.todoroo.astrid.actfm.sync.ActFmSyncV2Provider.java", "BodyUseAPI": [], "Fixed commit": "642f84f817c4c53052382abc82e26e874d7847d1", "Url": "https://api.github.com/repos/sbosley/astrid", "Date": "2012-04-13T20:39:13Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((paramValue.getValue()) instanceof org.hibernate.envers.RevisionType) { query.setParameter(paramValue.getKey(), paramValue.getValue(), new org.hibernate.type.CustomType(new org.hibernate.envers.internal.entities.RevisionTypeType())); }else { query.setParameter(paramValue.getKey(), paramValue.getValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/466/buggy-version/hibernate-envers.src.main.java.org.hibernate.envers.internal.tools.query.QueryBuilder.java", "BodyUseAPI": ["org.hibernate.Query.setParameter(java.lang.String,java.lang.Object,org.hibernate.type.CustomType)", "java.util.Map.Entry<java.lang.String, java.lang.Object>.getKey()", "java.util.Map.Entry<java.lang.String, java.lang.Object>.getValue()", "java.util.Map.Entry<java.lang.String, java.lang.Object>.getKey()", "java.util.Map.Entry<java.lang.String, java.lang.Object>.getValue()", "org.hibernate.Query.setParameter(java.lang.String,java.lang.Object)"], "Fixed commit": "86bbb1de8f2c61fc87cf645d3f4765cdafdab556", "Url": "https://api.github.com/repos/rvansa/hibernate-orm", "Date": "2015-09-23T11:10:35Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(topElement instanceof com.intellij.psi.PsiCodeBlock)) { final com.intellij.psi.PsiMethod psiMethod = com.intellij.psi.util.PsiTreeUtil.getParentOfType(element, com.intellij.psi.PsiMethod.class); return (psiMethod != null) && (isExceptionHandled(psiMethod, exceptionType)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/7220/buggy-version/lombok-plugin.src.main.java.de.plushnikov.intellij.plugin.handler.SneakyThrowsExceptionHandler.java", "BodyUseAPI": [], "Fixed commit": "62ba1f123989fa7371a1a78b8eed4e887d056680", "Url": "https://api.github.com/repos/mplushnikov/lombok-intellij-plugin", "Date": "2015-04-26T09:33:06Z"},
{"Line": "=>603", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["spoon.reflect.reference.CtTypeReference<?>.getActualClass()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((actualClass != null) && (java.util.Collection.class.isAssignableFrom(actualClass))) { java.util.List<spoon.reflect.reference.CtTypeReference<?>> actualTypeArguments = type.getActualTypeArguments(); if ((actualTypeArguments.size()) == 1) { actualType = actualTypeArguments.get(0); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/5935/buggy-version/jaxrs-to-raml.jaxrs-raml-maven-plugin.src.main.java.org.raml.jaxrs.codegen.spoon.SpoonProcessor.java", "BodyUseAPI": [], "Fixed commit": "7e3ebf82190c4994bafb1d3d521bb9866f184027", "Url": "https://api.github.com/repos/mulesoft-labs/raml-for-jax-rs", "Date": "2015-06-18T10:36:16Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mDestDir.exists()) && (!(mDestDir.isDirectory()))) { mDestDir.delete(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/6193/buggy-version/lesscode-core.src.main.java.com.jayfeng.lesscode.core.UpdateService.java", "BodyUseAPI": ["java.io.File.delete()"], "Fixed commit": "edaca1e5231ce66e1eaf1f396273b315205636b3", "Url": "https://api.github.com/repos/openproject/LessCode", "Date": "2015-07-02T11:55:15Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((xbox.getRawAxis(0)) != 0.0) return xbox.getRawAxis(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/949/buggy-version/src.org.discobots.steamworks.OI.java", "BodyUseAPI": ["org.discobots.steamworks.utils.GamePad.getRawAxis(int)"], "Fixed commit": "9a0e2ee5fc195e2a1dfb28792f20a72c0b87ee96", "Url": "https://api.github.com/repos/discobots2587/2017-Steamworks", "Date": "2017-02-04T17:38:39Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((xbox.getRawAxis(2)) != 0.0) return xbox.getRawAxis(2);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/949/buggy-version/src.org.discobots.steamworks.OI.java", "BodyUseAPI": ["org.discobots.steamworks.utils.GamePad.getRawAxis(int)"], "Fixed commit": "9a0e2ee5fc195e2a1dfb28792f20a72c0b87ee96", "Url": "https://api.github.com/repos/discobots2587/2017-Steamworks", "Date": "2017-02-04T17:38:39Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((xbox.getRawAxis(1)) != 0.0) return xbox.getRawAxis(1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/949/buggy-version/src.org.discobots.steamworks.OI.java", "BodyUseAPI": ["org.discobots.steamworks.utils.GamePad.getRawAxis(int)"], "Fixed commit": "9a0e2ee5fc195e2a1dfb28792f20a72c0b87ee96", "Url": "https://api.github.com/repos/discobots2587/2017-Steamworks", "Date": "2017-02-04T17:38:39Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openmrs.module.rulesengine.engine.RulesEngine.getRuleObject(orderSetDrugRow.getRule())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (rule == null) { org.openmrs.module.rulesengine.rule.CSVBasedDosageRule.log.error((\"Rule implementation not found for \" + (orderSetDrugRow.getRule()))); throw new java.lang.Exception((\"Rule implementation not found for \" + (orderSetDrugRow.getRule()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/5497/buggy-version/api.src.main.java.org.openmrs.module.rulesengine.rule.CSVBasedDosageRule.java", "BodyUseAPI": [], "Fixed commit": "3f00b2c31a81a33d7220d3a88d51461a6e3c30cd", "Url": "https://api.github.com/repos/Bahmni/openmrs-module-rulesengine", "Date": "2016-09-02T11:58:41Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (this.getWaypoints())) { for (com.cfar.swim.worldwind.planning.Waypoint waypoint : this.getWaypoints()) { waypoint.render(dc); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/3222/buggy-version/src.main.java.com.cfar.swim.worldwind.planning.Trajectory.java", "BodyUseAPI": [], "Fixed commit": "20bd3bfff2056a7452211f5488a7b6e1717d6652", "Url": "https://api.github.com/repos/stephanheinemann/worldwind", "Date": "2016-11-25T03:01:07Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<com.ronakmanglani.watchlist.model.Credit>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((credit.imagePath) == null) || (credit.imagePath.equals(\"null\"))) { holder.creditImage.setImageResource(R.drawable.default_cast_square); }else { com.ronakmanglani.watchlist.util.VolleySingleton.getInstance(context).imageLoader.get(com.ronakmanglani.watchlist.util.TMDBHelper.getImageURL(credit.imagePath, imageSize), new com.android.volley.toolbox.ImageLoader.ImageListener() { @java.lang.Override public void onResponse(com.android.volley.toolbox.ImageLoader.ImageContainer imageContainer, boolean b) { holder.creditImage.setImageBitmap(imageContainer.getBitmap()); } @java.lang.Override public void onErrorResponse(com.android.volley.VolleyError volleyError) { holder.creditImage.setImageResource(R.drawable.default_cast_square); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/2433/buggy-version/app.src.main.java.com.ronakmanglani.watchlist.adapter.CreditAdapter.java", "BodyUseAPI": ["com.ronakmanglani.watchlist.util.VolleySingleton.getInstance(context).imageLoader.get(com.ronakmanglani.watchlist.util.TMDBHelper.getImageURL(credit.imagePath, imageSize),com.android.volley.toolbox.ImageLoader.ImageListener)", "com.ronakmanglani.watchlist.util.TMDBHelper.getImageURL(credit.imagePath,int)"], "Fixed commit": "43c6a2f0f17a1dfa286e2413885f8f4e713f71d9", "Url": "https://api.github.com/repos/Ronak-LM/watchlist", "Date": "2016-03-28T18:39:23Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((delete.charAt(0)) == '+') delete = \"\\\\\" + delete;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/8432/buggy-version/src.BigInteger.java", "BodyUseAPI": [], "Fixed commit": "88a9120b84502f53b5ddeef6741c1dbb56c5d478", "Url": "https://api.github.com/repos/gangmul12/BigInteger", "Date": "2015-03-14T07:43:21Z"},
{"Line": "=>385", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (i1 < (text.getLength())) text.set(tagsBytes, i1, ((text.getLength()) - i1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/3320/buggy-version/src.edu.umn.cs.spatialHadoop.io.TextSerializerHelper.java", "BodyUseAPI": ["org.apache.hadoop.io.Text.set(byte[],int,((text.getLength()) - i1))", "org.apache.hadoop.io.Text.getLength()"], "Fixed commit": "c32ed573a51ad6883cb4d5d2de13526252d4dfb6", "Url": "https://api.github.com/repos/aseldawy/spatialhadoop2", "Date": "2014-06-24T06:23:43Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((text.getLength()) > 0) edu.umn.cs.spatialHadoop.io.TextSerializerHelper.consumeMap(text, tags);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/3320/buggy-version/src.edu.umn.cs.spatialHadoop.osm.OSMPoint.java", "BodyUseAPI": ["edu.umn.cs.spatialHadoop.io.TextSerializerHelper.consumeMap(org.apache.hadoop.io.Text,java.util.Map<java.lang.String, java.lang.String>)"], "Fixed commit": "c32ed573a51ad6883cb4d5d2de13526252d4dfb6", "Url": "https://api.github.com/repos/aseldawy/spatialhadoop2", "Date": "2014-06-24T06:23:43Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (spaceStatusJson.has(\"unknown_users\")) { status.unknownHackers = spaceStatusJson.getInt(\"unknown_users\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/120/buggy-version/app.src.main.java.org.flipdot.flipdotapp.spacestatus.SpacestatusLoadTask.java", "BodyUseAPI": ["org.json.JSONObject.getInt(java.lang.String)"], "Fixed commit": "4e4a155170170a2d0c6b7b69393371f7caf7bd58", "Url": "https://api.github.com/repos/flipdot/android-app", "Date": "2015-01-15T21:17:12Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (position == null) { throw new java.lang.IllegalArgumentException(\"A SpriteComponent cannot have a null position.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/207/buggy-version/src.com.valkryst.VRoguelike.components.SpriteComponent.java", "BodyUseAPI": [], "Fixed commit": "c43070922e68cda1e24e77d36fa0bd12f379eae5", "Url": "https://api.github.com/repos/Valkryst/VRoguelike", "Date": "2017-07-07T14:01:00Z"},
{"Line": "=>339", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (node instanceof de.uka.aifb.com.systemDynamics.model.SharedNode) { de.uka.aifb.com.systemDynamics.model.SharedNode sharedNode = ((de.uka.aifb.com.systemDynamics.model.SharedNode) (node)); for (de.uka.aifb.com.systemDynamics.model.RateNode rateNode : sharedNode.getIncomingFlows()) { removeFlowFromRateNode2SharedNode(rateNode, sharedNode); } for (de.uka.aifb.com.systemDynamics.model.RateNode rateNode : sharedNode.getOutgoingFlows()) { removeFlowFromSharedNode2RateNode(sharedNode, rateNode); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/4400/buggy-version/SD-S10.src.de.uka.aifb.com.systemDynamics.model.Model.java", "BodyUseAPI": [], "Fixed commit": "8c2756cd3120130f40f2318913056a5c08ada304", "Url": "https://api.github.com/repos/asdlane/SystemDynamics", "Date": "2016-09-27T18:42:15Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((suggesters) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/8030/buggy-version/dynamo-core.src.main.java.dynamo.magazines.tasks.RefreshKioskExecutor.java", "BodyUseAPI": [], "Fixed commit": "859c5636f8b707568142af3bc7eb21e9bcf2e434", "Url": "https://api.github.com/repos/mozvip/dynamo", "Date": "2016-08-30T15:09:07Z"},
{"Line": "=>271", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((chargeableInventory) != null) { chargeableInventory.setInventorySlotContents((slot - (inventory.length)), itemStack); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/1388/buggy-version/src.pneumaticCraft.common.tileentity.TileEntityChargingStation.java", "BodyUseAPI": [], "Fixed commit": "3c4ed1ddcc451b0dc2f3ff66918b1741306c58a7", "Url": "https://api.github.com/repos/Bunsan/PneumaticCraft", "Date": "2016-02-06T13:56:03Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.Integer.parseInt(args[1])) > 0) cp.hw3.Main.runPageRankTask(\"PageRank/iteration_0/part-00000\", \"PageRank/iteration_1\", 1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/5146/buggy-version/src.main.java.cp.hw3.Main.java", "BodyUseAPI": [], "Fixed commit": "ee99dec736ff5358f898b0d39e5c802c7f37985c", "Url": "https://api.github.com/repos/yuzzwx/CP2015-hw3-PageRank", "Date": "2015-06-24T04:22:23Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((newEvent.eventType) == (org.odk.collect.android.utilities.TimerLogger.EventTypes.FORM_EXIT)) || ((newEvent.eventType) == (org.odk.collect.android.utilities.TimerLogger.EventTypes.HIERARCHY))) { for (int i = 0; i < (mEvents.size()); i++) { mEvents.get(i).setEnd(start); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/2942/buggy-version/collect_app.src.main.java.org.odk.collect.android.utilities.TimerLogger.java", "BodyUseAPI": [], "Fixed commit": "5934940f820e5b85b4de94bd7cafb2c18a9569e9", "Url": "https://api.github.com/repos/nap2000/collect", "Date": "2017-05-10T01:44:46Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mGameServer) != null) { mGameServer.tearDown(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/6263/buggy-version/app.src.main.java.com.monopoly.domke.sebastian.monopoly.common.GameConnection.java", "BodyUseAPI": [], "Fixed commit": "72aa3a13c2ab35dee0037ae2629322d040e10b80", "Url": "https://api.github.com/repos/sdomke/Monopoly", "Date": "2016-12-21T17:03:12Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mGameClient) != null) { mGameClient.tearDown(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/6263/buggy-version/app.src.main.java.com.monopoly.domke.sebastian.monopoly.common.GameConnection.java", "BodyUseAPI": [], "Fixed commit": "72aa3a13c2ab35dee0037ae2629322d040e10b80", "Url": "https://api.github.com/repos/sdomke/Monopoly", "Date": "2016-12-21T17:03:12Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.dashbuilder.client.google.GoogleBubbleChartViewer.createColorArray(org.dashbuilder.client.google.GoogleBubbleChartViewer)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((colors.length) > 0) options.setColors(colors);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/3621/buggy-version/dashbuilder-ui.dashbuilder-ui-renderers.dashbuilder-renderer-google.src.main.java.org.dashbuilder.client.google.GoogleBubbleChartViewer.java", "BodyUseAPI": ["com.googlecode.gwt.charts.client.corechart.BubbleChartOptions.setColors(java.lang.String[])"], "Fixed commit": "27fb9789c124c65cf680bc52331cd311f7e48fcb", "Url": "https://api.github.com/repos/dgutierr/dashbuilder", "Date": "2014-06-26T17:02:49Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mLayoutManager) != null) { int lastItemPosition = mLayoutManager.findFirstVisibleItemPosition(); java.lang.String chapterId = mAdapter.getFocusedChapterId(lastItemPosition); java.lang.String frameId = mAdapter.getFocusedFrameId(lastItemPosition); com.door43.translationstudio.util.AppContext.setLastFocus(mTargetTranslation.getId(), chapterId, frameId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/336/buggy-version/app.src.main.java.com.door43.translationstudio.newui.translate.ViewModeFragment.java", "BodyUseAPI": [], "Fixed commit": "eea098f50c91f14736a9f11370c15d888b670db8", "Url": "https://api.github.com/repos/unfoldingWord-dev/ts-android", "Date": "2015-09-22T09:44:00Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((itemType.getCost()) * numberOf) > (money)) { return ableList; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/393/buggy-version/src.model.Party.java", "BodyUseAPI": [], "Fixed commit": "b063df19e09d01769a867a08c22bf6c100befd4c", "Url": "https://api.github.com/repos/Tanner/Oregon-Trail", "Date": "2011-10-12T03:07:39Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((details) != null) return java.util.Arrays.copyOf(details, details.length);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/5613/buggy-version/src.main.java.ch.fhnw.lernstickwelcome.controller.exception.ValidationException.java", "BodyUseAPI": [], "Fixed commit": "59bb155e14be23c92f85ce8cd46b7a6e8d3d1130", "Url": "https://api.github.com/repos/valendinosaurus/lernstickWelcome", "Date": "2017-06-06T12:40:32Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((details) != null) return java.util.Arrays.copyOf(details, details.length);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/5613/buggy-version/src.main.java.ch.fhnw.lernstickwelcome.controller.exception.ProcessingException.java", "BodyUseAPI": [], "Fixed commit": "59bb155e14be23c92f85ce8cd46b7a6e8d3d1130", "Url": "https://api.github.com/repos/valendinosaurus/lernstickWelcome", "Date": "2017-06-06T12:40:32Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.liferay.portal.kernel.util.Validator.isNull(getPortletId())) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/8162/buggy-version/portal-service.src.com.liferay.portlet.asset.model.BaseAssetRendererFactory.java", "BodyUseAPI": [], "Fixed commit": "1c0549dc42b271e2469c6ee0b9403501dcb268e0", "Url": "https://api.github.com/repos/vsingleton/liferay-portal", "Date": "2013-05-09T01:23:04Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (meth != null) { lookupMethod(meth.name(), filterFactory); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/7473/buggy-version/modules.library.main.src.main.java.org.geotools.styling.ContrastEnhancementImpl.java", "BodyUseAPI": [], "Fixed commit": "3cc764df13b9b31aa08414acf805b35f4009a43a", "Url": "https://api.github.com/repos/ianturton/geotools", "Date": "2015-08-03T09:04:32Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newValue != null) { newValueDisplay = newValue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/5053/buggy-version/omod.src.main.java.org.openmrs.module.auditlog.web.dwr.DWRAuditLogService.java", "BodyUseAPI": [], "Fixed commit": "701a291d0c3a65fe9dd93ab05968c61b432f3422", "Url": "https://api.github.com/repos/openmrs/openmrs-module-auditlog", "Date": "2012-10-12T02:31:44Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (previousValue != null) { preValueDisplay = previousValue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/5053/buggy-version/omod.src.main.java.org.openmrs.module.auditlog.web.dwr.DWRAuditLogService.java", "BodyUseAPI": [], "Fixed commit": "701a291d0c3a65fe9dd93ab05968c61b432f3422", "Url": "https://api.github.com/repos/openmrs/openmrs-module-auditlog", "Date": "2012-10-12T02:31:44Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((freeTurn) > 0) (freeTurn)--;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/4293/buggy-version/src.rich.Player.java", "BodyUseAPI": [], "Fixed commit": "42ab99d544c944b682b0d88d32f839e73b9995ca", "Url": "https://api.github.com/repos/SigridZhangSY/rich-game-java-functional", "Date": "2016-11-12T09:13:18Z"},
{"Line": "=>360", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.hp.hpl.jena.util.iterator.ExtendedIterator<? extends com.hp.hpl.jena.ontology.OntResource>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((res.getURI()) != null) { org.weso.wesearch.domain.Matter m = new org.weso.wesearch.domain.impl.MatterImpl(org.weso.wesearch.model.OntologyHelper.getLabel(res), res.getURI(), org.weso.wesearch.model.OntologyHelper.getComment(res)); matters.addMatter(m); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/3608/buggy-version/src.main.java.org.weso.wesearch.model.OntologyHelper.java", "BodyUseAPI": ["com.hp.hpl.jena.ontology.OntResource.getURI()", "org.weso.wesearch.model.OntologyHelper.getComment(com.hp.hpl.jena.ontology.OntResource)", "org.weso.wesearch.model.OntologyHelper.getLabel(com.hp.hpl.jena.ontology.OntResource)"], "Fixed commit": "d6dab1cc62f0ec1e0527aa1bea8fe8925a21cac5", "Url": "https://api.github.com/repos/weso/wesearch", "Date": "2013-04-11T11:14:13Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (didWin == 0) { java.lang.System.out.println(\"Congratulations, you won! More difficult enemies come to the arena!\"); if ((currentFightCeiling) < 4) { (currentFightCeiling)++; } }else if (didWin == 1) { java.lang.System.out.println(\"The guy who beats you took all your gold!\\n But he used it to pay the inkeep to nurse you back to health\"); exit = true; lost = true; }else if (didWin == 2) { java.lang.System.out.println(\"You ran away shamefully...\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/7842/buggy-version/GenericRPG.src.ver0.Arena.java", "BodyUseAPI": [], "Fixed commit": "f259f5f90a0651fd59e02465eb71d13b3fc41502", "Url": "https://api.github.com/repos/austinBailey5624/GenericRPGConsole", "Date": "2016-04-17T18:25:13Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (c == '*') { }else { sc.setState(state.State.CommentHandleState); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/1763/buggy-version/src.main.java.state.State.java", "BodyUseAPI": [], "Fixed commit": "f6db57948294e541d475adb9ccfb2dbff7206425", "Url": "https://api.github.com/repos/liyuntao/JavaCommentRemover", "Date": "2014-10-31T12:53:48Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((items) != null) com.campus.prime.ui.PagedCardFragment.GetDataTask.getListAdapter().set(items);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/1357/buggy-version/code.CampusPrime.src.com.campus.prime.ui.PagedCardFragment.java", "BodyUseAPI": [], "Fixed commit": "0fd7651cada7647ca0b8a870d90826308d6d3735", "Url": "https://api.github.com/repos/Bazinga-/Campus", "Date": "2013-10-28T09:12:09Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(getGeneratedDirectory().mkdirs())) { throw new org.apache.maven.plugin.MojoExecutionException((\"Unable to create directory \" + (getGeneratedDirectory().getAbsolutePath()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/905/buggy-version/hk2-configuration.persistence.hk2-xml-dom.config-generator.src.main.java.org.jvnet.hk2.config.generator.maven.AbstractConfigGeneratorMojo.java", "BodyUseAPI": [], "Fixed commit": "f447df85a961df43050c9bf5e83a1b64c0eadc79", "Url": "https://api.github.com/repos/javaee/hk2", "Date": "2015-05-06T18:59:32Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["repositories.TheaterRepository.findTheatersByExactName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (theaters.isEmpty()) theaters = theaterRepository.findTheatersByName(theaterName);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/5967/buggy-version/app.controllers.Webhook.java", "BodyUseAPI": [], "Fixed commit": "a517d2a44b20c144b57c5f3dbd5245557e85f5c9", "Url": "https://api.github.com/repos/sagungw/line_bot", "Date": "2017-03-28T15:25:15Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portal.kernel.portlet.PortletBag.getWebDAVStorageInstance()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (webDAVStorage == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/7412/buggy-version/hooks.so-compat-hook.docroot.WEB-INF.src.com.liferay.so.compat.servlet.SOCompatServletContextListener.java", "BodyUseAPI": [], "Fixed commit": "7923aaca0c6b25665ff009d39cac950c77547721", "Url": "https://api.github.com/repos/AndyYang78/liferay-plugins", "Date": "2012-10-02T22:52:51Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ch018.library.service.PersonService.simpleSearch(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((person.size()) > 0) { model.addAttribute(\"users\", person); }else { model.addAttribute(\"users\", personService.getAll()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/1255/buggy-version/src.main.java.com.ch018.library.controller.LibrarianUsersController.java", "BodyUseAPI": ["org.springframework.ui.Model.addAttribute(java.lang.String,java.util.List<com.ch018.library.entity.Person>)"], "Fixed commit": "50344d58e690fca027b27d66b24471f6c46f89c5", "Url": "https://api.github.com/repos/nromanen/ch018-2team-", "Date": "2014-01-15T22:55:45Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ch018.library.service.PersonService.advancedSearch(com.ch018.library.entity.Person)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((person.size()) > 0) { model.addAttribute(\"users\", person); }else { model.addAttribute(\"users\", personService.getAll()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/1255/buggy-version/src.main.java.com.ch018.library.controller.LibrarianUsersController.java", "BodyUseAPI": ["org.springframework.ui.Model.addAttribute(java.lang.String,java.util.List<com.ch018.library.entity.Person>)"], "Fixed commit": "50344d58e690fca027b27d66b24471f6c46f89c5", "Url": "https://api.github.com/repos/nromanen/ch018-2team-", "Date": "2014-01-15T22:55:45Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ch018.library.service.BookService.advancedSearch(com.ch018.library.entity.Book)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((books.size()) > 0) { model.addAttribute(\"books\", books); }else { model.addAttribute(\"books\", bookService.getAll()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/1255/buggy-version/src.main.java.com.ch018.library.controller.LibrarianBooksController.java", "BodyUseAPI": ["org.springframework.ui.Model.addAttribute(java.lang.String,java.util.List<com.ch018.library.entity.Book>)"], "Fixed commit": "50344d58e690fca027b27d66b24471f6c46f89c5", "Url": "https://api.github.com/repos/nromanen/ch018-2team-", "Date": "2014-01-15T22:55:45Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ch018.library.service.BookService.simpleSearch(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((books.size()) > 0) { model.addAttribute(\"books\", books); }else { model.addAttribute(\"books\", bookService.getAll()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/1255/buggy-version/src.main.java.com.ch018.library.controller.LibrarianBooksController.java", "BodyUseAPI": ["org.springframework.ui.Model.addAttribute(java.lang.String,java.util.List<com.ch018.library.entity.Book>)"], "Fixed commit": "50344d58e690fca027b27d66b24471f6c46f89c5", "Url": "https://api.github.com/repos/nromanen/ch018-2team-", "Date": "2014-01-15T22:55:45Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (alreadyPlayer != 1) { if (gameRunning) { player.sendMessage(((org.bukkit.ChatColor.GOLD) + \"You have joined a game in progress.\")); java.util.Random object = new java.util.Random(); int test; for (int counter = 1; counter <= 1; counter++) { test = 1 + (object.nextInt(3)); if (test == 1) { player.sendMessage(((org.bukkit.ChatColor.GREEN) + \"You are innocent.\")); }else if (test == 2) { player.sendMessage(((org.bukkit.ChatColor.RED) + \"You are a roughian\")); }else if (test == 3) { player.sendMessage(((org.bukkit.ChatColor.GOLD) + \"You are a sheriff\")); } } }else { player.sendMessage(((org.bukkit.ChatColor.GOLD) + \"You have joined! The game will start shortly...\")); java.util.Random object = new java.util.Random(); int test; for (int counter = 1; counter <= 1; counter++) { test = 1 + (object.nextInt(3)); if (test == 1) { player.sendMessage(((org.bukkit.ChatColor.GREEN) + \"You are innocent.\")); }else if (test == 2) { player.sendMessage(((org.bukkit.ChatColor.RED) + \"You are a roughian\")); }else if (test == 3) { player.sendMessage(((org.bukkit.ChatColor.GOLD) + \"You are a sheriff\")); } } } addPlayer(player, playerName); if ((gamePlayerCount()) == 1) { getServer().broadcastMessage(((\"There is now \" + (gamePlayerCount())) + \" player in game.\")); }else { getServer().broadcastMessage(((\"There are now \" + (gamePlayerCount())) + \" players in game.\")); } }else { player.sendMessage(((org.bukkit.ChatColor.RED) + \"You have already joined the game!\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/5583/buggy-version/src.com.tammcd.troubleinminecraft.Main.java", "BodyUseAPI": [], "Fixed commit": "f4222a82b1a3cc2ba20c6559be217cf16de5a7f3", "Url": "https://api.github.com/repos/TamMcDonald/TroubleInMinecraft", "Date": "2012-09-15T16:59:51Z"},
{"Line": "=>390", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((info.versionCode) < (Build.VERSION_CODES.HONEYCOMB)) { names = getContentResolver().query(uri, null, null, null, ((android.provider.ContactsContract.CommonDataKinds.Phone.DISPLAY_NAME) + \" ASC\")); }else { names = getContentResolver().query(uri, projection, selection, null, ((android.provider.ContactsContract.CommonDataKinds.Phone.DISPLAY_NAME) + \" ASC\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/1789/buggy-version/src.com.austindiviness.drunkfriend.FavoritesActivity.java", "BodyUseAPI": [], "Fixed commit": "3ede72942a3dfef63e314d2ce25e3b986d325a1c", "Url": "https://api.github.com/repos/TheCrownedFox/DrunkFriend", "Date": "2013-04-13T01:52:53Z"},
{"Line": "=>2051", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != names) { for (int i = 0; i < (names.length); i++) { java.lang.String name = names[i]; if (!(name.endsWith(\".tmp\"))) { filteredFilenames.add(name); }else { tmpFilenames.add(name.substring(0, ((name.length()) - (\".tmp\".length())))); } } for (java.lang.String tmpFileName : tmpFilenames) { if (!(filteredFilenames.contains(tmpFileName))) { org.matrix.androidsdk.util.Log.e(org.matrix.androidsdk.data.store.MXFileStore.LOG_TAG, ((\"## listFiles() : \" + tmpFileName) + \" does not exist but a tmp file has been retrieved\")); filteredFilenames.add(tmpFileName); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/1942/buggy-version/matrix-sdk.src.main.java.org.matrix.androidsdk.data.store.MXFileStore.java", "BodyUseAPI": [], "Fixed commit": "2682e191c34de1b7598379ff5128e5cb5aea4596", "Url": "https://api.github.com/repos/matrix-org/matrix-android-sdk", "Date": "2017-02-02T10:37:42Z"},
{"Line": "=>375", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dateFilter) == null) return new org.homeunix.thecave.buddi.model.impl.TransactionFilterAllDates().getDateFilter();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/2662/buggy-version/ca.digitalcave.buddi.src.org.homeunix.thecave.buddi.model.impl.FilteredLists.java", "BodyUseAPI": [], "Fixed commit": "770e4aa0044dc7121a68c75bfb786e4ac03eb27e", "Url": "https://api.github.com/repos/waseem000/SOEN-6471-Buddi", "Date": "2014-04-09T22:08:29Z"},
{"Line": "=>622", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.System.currentTimeMillis()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((currentTime - (lastGraphApiCall)) > (1000 * 5)) { java.lang.System.out.println(\"making api call 3h for graph\"); ca.cumulonimbus.pressurenetsdk.CbApiCall api = buildMapAPICall(3); api.setLimit(5000); makeAPICall(api); lastGraphApiCall = currentTime; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/6082/buggy-version/src.ca.cumulonimbus.barometernetwork.BarometerNetworkActivity.java", "BodyUseAPI": [], "Fixed commit": "d7573bdfdc4c9eee2de5762c966607243f8ab432", "Url": "https://api.github.com/repos/Cbsoftware/pressureNET", "Date": "2013-07-09T19:06:57Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.sliceSize) >= (java.lang.Integer.MAX_VALUE)) { logger.error(\"slice size can't exceed Integer.MAX_VALUE,you can increase thread size or cut file to more small file\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/2326/buggy-version/src.main.java.com.gsta.bigdata.etl.localFile.SliceReaderTask.java", "BodyUseAPI": [], "Fixed commit": "3e46464dd028f49fd26f4a3765d792c0787b6ed9", "Url": "https://api.github.com/repos/styg/bumblebee-ETL", "Date": "2015-09-06T01:34:54Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.spiel.getAktuellerSpieler().getIsKI()) && (this.spiel.getAktuellerSpieler().getIsDran())) { this.spiel.nextSpielzug(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/8158/buggy-version/GUI.BitfolgenSchaltflaeche.java", "BodyUseAPI": ["Logik.Spiel.nextSpielzug()"], "Fixed commit": "f71e195b83f81b11b7a7b08620096aeff4453410", "Url": "https://api.github.com/repos/Dani636/Projektarbeit", "Date": "2013-04-19T07:56:48Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (x > 4) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/8017/buggy-version/src.main.java.game.model.Board.java", "BodyUseAPI": [], "Fixed commit": "2b457df4c4886fd5eacdfe89eb4f740f941fe7ad", "Url": "https://api.github.com/repos/piobpl/Zombies", "Date": "2013-06-01T11:11:12Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (x > 4) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/8017/buggy-version/src.main.java.game.model.Board.java", "BodyUseAPI": [], "Fixed commit": "2b457df4c4886fd5eacdfe89eb4f740f941fe7ad", "Url": "https://api.github.com/repos/piobpl/Zombies", "Date": "2013-06-01T11:11:12Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((stack.peekTag()) != null) && (!(stack.peekTag().equals(tag)))) { fragment = ((mobi.cangol.mobile.base.BaseFragment) (android.support.v4.app.Fragment.instantiate(fActivity, clazz.getName(), args))); }else { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/8105/buggy-version/uiframe.src.main.java.mobi.cangol.mobile.base.CustomFragmentManager.java", "BodyUseAPI": [], "Fixed commit": "01d2423ebb4f8a9d2cf5de1c8ecd8a1359110f41", "Url": "https://api.github.com/repos/Cangol/Cangol-uiframe", "Date": "2017-12-11T07:20:08Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.ednovo.gooru.security.DoAuthorization.LOGGER.isErrorEnabled()) { org.ednovo.gooru.security.DoAuthorization.LOGGER.error(\"Failed to put value from redis server {} \", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/6621/buggy-version/api.src.main.java.org.ednovo.gooru.security.DoAuthorization.java", "BodyUseAPI": ["org.slf4j.Logger.error(java.lang.String,java.lang.Exception)"], "Fixed commit": "201904cb476523a591489ace0b35c5a81d7c1fbd", "Url": "https://api.github.com/repos/shanmugas/Gooru-Core-API", "Date": "2015-03-17T14:58:42Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) < 11) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/4040/buggy-version/src.main.java.anabolicandroids.chanobol.ui.images.ImageActivity.java", "BodyUseAPI": [], "Fixed commit": "7bccc1f1bff20ec288524c01eb220d1041bfe5fc", "Url": "https://api.github.com/repos/eugenkiss/chanobol", "Date": "2015-02-15T19:22:13Z"},
{"Line": "=>270", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["anabolicandroids.chanobol.ui.images.ImageActivity.getDrawingCache()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (bm == null) { toolbar.setDrawingCacheEnabled(false); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/4040/buggy-version/src.main.java.anabolicandroids.chanobol.ui.images.ImageActivity.java", "BodyUseAPI": [], "Fixed commit": "7bccc1f1bff20ec288524c01eb220d1041bfe5fc", "Url": "https://api.github.com/repos/eugenkiss/chanobol", "Date": "2015-02-15T19:22:13Z"},
{"Line": "=>478", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.JELLY_BEAN_MR1)) holder.textView.setTextAlignment(com.rey.material.widget.TEXT_ALIGNMENT_GRAVITY);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/4062/buggy-version/lib.src.main.java.com.rey.material.widget.TabIndicatorView.java", "BodyUseAPI": [], "Fixed commit": "69e7d39d012bfb1f546f6c889d67f19fc9f4277f", "Url": "https://api.github.com/repos/rey5137/material", "Date": "2015-09-15T18:20:13Z"},
{"Line": "=>778", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (jsonWrapper.getResponse().isJsonPrimitive()) { throw new uk.co.visalia.brightpearl.apiclient.BrightpearlAuthException(jsonWrapper.getResponse().getAsString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/7082/buggy-version/src.main.java.uk.co.visalia.brightpearl.apiclient.BrightpearlApiClient.java", "BodyUseAPI": ["uk.co.visalia.brightpearl.apiclient.client.parsing.JsonWrapper.getResponse()", "jsonWrapper.getResponse().getAsString()"], "Fixed commit": "dafe9a0f41fa823103d9553f3731cd1432990a96", "Url": "https://api.github.com/repos/davemorrissey/brightpearl-api-client-java", "Date": "2014-05-27T22:47:36Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.Math.abs(ret.getMagnitude())) < (Geometry.EPSILON)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/7112/buggy-version/shapes.Keyboard.java", "BodyUseAPI": [], "Fixed commit": "21c241769713efd271e3ab7033ff1bb2fdc0111a", "Url": "https://api.github.com/repos/nate00/shapes", "Date": "2013-03-08T23:05:12Z"},
{"Line": "=>536", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((rnQueryString != null) && (!(rnQueryString.isEmpty()))) { rnQueryString += \"&\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/1427/buggy-version/src.main.java.net.respectnetwork.csp.application.controller.RegistrationController.java", "BodyUseAPI": [], "Fixed commit": "1cacb8c6a5fa03fd4ae74d4d0d9d30257e6f0c5b", "Url": "https://api.github.com/repos/RespectNetwork/csp-provisioning-application", "Date": "2014-04-23T12:29:52Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((media) != null) return media.size(); else return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/708/buggy-version/app.src.org.witness.iwitness.utils.adapters.GalleryGridAdapter.java", "BodyUseAPI": [], "Fixed commit": "0592bbef0ed880e38948484470b26eab11800e8f", "Url": "https://api.github.com/repos/guardianproject/iWitness", "Date": "2013-07-24T11:20:51Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((media) != null) return media.size(); else return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/708/buggy-version/app.src.org.witness.iwitness.utils.adapters.GalleryListAdapter.java", "BodyUseAPI": [], "Fixed commit": "0592bbef0ed880e38948484470b26eab11800e8f", "Url": "https://api.github.com/repos/guardianproject/iWitness", "Date": "2013-07-24T11:20:51Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(clause.getValue().equals(\"\"))) { if (!(clause.getValue().equals(value))) { clauseStatus = com.bitdubai.fermat_cbp_api.all_definition.enums.ClauseStatus.CHANGED; }else { if (clause.getStatus().equals(ClauseStatus.DRAFT)) clauseStatus = com.bitdubai.fermat_cbp_api.all_definition.enums.ClauseStatus.ACCEPTED; else clauseStatus = clause.getStatus(); } }else { if (clause.getStatus().equals(ClauseStatus.DRAFT)) clauseStatus = com.bitdubai.fermat_cbp_api.all_definition.enums.ClauseStatus.ACCEPTED; else clauseStatus = clause.getStatus(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/672/buggy-version/CBP.android.reference_wallet.fermat-cbp-android-reference-wallet-crypto-broker-bitdubai.src.main.java.com.bitdubai.reference_wallet.crypto_broker_wallet.common.models.NegotiationWrapper.java", "BodyUseAPI": ["com.bitdubai.fermat_cbp_api.layer.wallet_module.common.interfaces.ClauseInformation.getStatus()", "clause.getStatus().equals(ClauseStatus.DRAFT)", "clause.getValue().equals(java.lang.String)", "com.bitdubai.fermat_cbp_api.layer.wallet_module.common.interfaces.ClauseInformation.getValue()", "com.bitdubai.fermat_cbp_api.layer.wallet_module.common.interfaces.ClauseInformation.getStatus()", "com.bitdubai.fermat_cbp_api.layer.wallet_module.common.interfaces.ClauseInformation.getStatus()", "clause.getStatus().equals(ClauseStatus.DRAFT)", "com.bitdubai.fermat_cbp_api.layer.wallet_module.common.interfaces.ClauseInformation.getStatus()"], "Fixed commit": "40630e9b6fbed141d21985bad378933f7beb6f66", "Url": "https://api.github.com/repos/nelsonalfo/fermat", "Date": "2016-07-22T01:51:43Z"},
{"Line": "=>405", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["activeAccountAndAddressBiMap.inverse().get(accountSpinner.getSelectedItemPosition())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (object == null) { accountSpinner.setSelection(0); object = activeAccountAndAddressBiMap.inverse().get(accountSpinner.getSelectedItemPosition()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/7247/buggy-version/app.src.main.java.info.blockchain.wallet.BalanceFragment.java", "BodyUseAPI": [], "Fixed commit": "75d260d4023911e8a875ae14fde12007c0c23204", "Url": "https://api.github.com/repos/blockchain/My-Wallet-V3-Android", "Date": "2016-02-03T15:51:31Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((domain.getOwnerGender()) != null) { licenseSearchContract.setOwnerGender(domain.getOwnerGender().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/2994/buggy-version/tradelicense.tl-services.src.main.java.org.egov.tradelicense.web.repository.TradeLicenseSearchContractRepository.java", "BodyUseAPI": ["org.egov.tl.commons.web.contract.TradeLicenseSearchContract.setOwnerGender(domain.getOwnerGender().toString())", "org.egov.tradelicense.domain.model.TradeLicense.getOwnerGender()", "domain.getOwnerGender().toString()"], "Fixed commit": "a92a7952911c95a09ac51d671000b7bccb883441", "Url": "https://api.github.com/repos/egovernments/egov-services", "Date": "2017-10-11T20:32:46Z"},
{"Line": "=>1699", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((nameIdEntry.getValue()) >= 0) { final com.orientechnologies.orient.core.storage.fs.OFileClassic fileClassic = files.get(externalFileId(nameIdEntry.getValue())); final java.lang.String fileSystemName = fileClassic.getName(); final com.orientechnologies.orient.core.storage.cache.local.OWOWCache.NameFileIdEntry nameFileIdEntry = new com.orientechnologies.orient.core.storage.cache.local.OWOWCache.NameFileIdEntry(nameIdEntry.getKey(), nameIdEntry.getValue(), fileSystemName); writeNameIdEntry(v2NameIdMapHolder, nameFileIdEntry, false); }else { final com.orientechnologies.orient.core.storage.cache.local.OWOWCache.NameFileIdEntry nameFileIdEntry = new com.orientechnologies.orient.core.storage.cache.local.OWOWCache.NameFileIdEntry(nameIdEntry.getKey(), nameIdEntry.getValue(), \"\"); writeNameIdEntry(v2NameIdMapHolder, nameFileIdEntry, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/7423/buggy-version/core.src.main.java.com.orientechnologies.orient.core.storage.cache.local.OWOWCache.java", "BodyUseAPI": ["java.util.Map.Entry<java.lang.String, java.lang.Integer>.getValue()", "com.orientechnologies.orient.core.storage.cache.local.OWOWCache.externalFileId(java.lang.Integer)", "java.util.Map.Entry<java.lang.String, java.lang.Integer>.getKey()", "java.util.Map.Entry<java.lang.String, java.lang.Integer>.getKey()", "java.util.Map.Entry<java.lang.String, java.lang.Integer>.getValue()", "com.orientechnologies.common.collection.closabledictionary.OClosableLinkedContainer<java.lang.Long, com.orientechnologies.orient.core.storage.fs.OFileClassic>.get(long)", "java.util.Map.Entry<java.lang.String, java.lang.Integer>.getValue()"], "Fixed commit": "eb24b1870a6f02c32534d42cdfdd737929ac5b73", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2017-05-22T14:31:34Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (rotation < 0) { wm.freezeRotation(rotation); }else { wm.freezeRotation(((android.os.SystemProperties.getInt(\"persist.panel.orientation\", 0)) / 90)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/1313/buggy-version/core.java.com.android.internal.view.RotationPolicy.java", "BodyUseAPI": ["android.view.IWindowManager.freezeRotation(int)"], "Fixed commit": "caa5b5b389a5dd88e212fac1afce7313217a3283", "Url": "https://api.github.com/repos/codeaurora-unofficial/platform-frameworks-base", "Date": "2015-07-15T02:22:41Z"},
{"Line": "=>470", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((contexts != null) && ((contexts.size()) != 0)) { statementContexts.addAll(contexts); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/2051/buggy-version/src.main.java.nl.vu.datalayer.hbase.sail.HBaseSailConnection.java", "BodyUseAPI": ["java.util.Set<org.openrdf.model.URI>.addAll(java.util.Set<org.openrdf.model.URI>)"], "Fixed commit": "d89f985a7f0aa9aea82676fbe8aeea9108f530a4", "Url": "https://api.github.com/repos/pgroth/hbase-rdf", "Date": "2012-09-04T11:40:47Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((boid.getId()) == 1) java.lang.System.out.println((((((\"id:\" + (boid.getId())) + \" \") + (boid.r)) + \" \") + rDistance));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/4817/buggy-version/src.behavior.Behavior.java", "BodyUseAPI": ["java.io.PrintStream.println((((((\"id:\" + (boid.getId())) + \" \") + (boid.r)) + \" \") + rDistance))", "environment.Boid.getId()"], "Fixed commit": "28e8435f5a312e06de1e2a19beaef93d97ed3798", "Url": "https://api.github.com/repos/yaooluu/RobotArena", "Date": "2015-04-04T15:04:41Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.atmosphere.cpr.AtmosphereResourceImpl.getRequest()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (org.atmosphere.cpr.AtmosphereRequest.class.isAssignableFrom(request.getClass())) { request = org.atmosphere.cpr.AtmosphereRequest.class.cast(request).getRequest(); }else { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/731/buggy-version/modules.cpr.src.main.java.org.atmosphere.container.Jetty7CometSupport.java", "BodyUseAPI": ["org.atmosphere.cpr.AtmosphereRequest.getRequest()", "java.lang.Class.cast(javax.servlet.ServletRequest)"], "Fixed commit": "79ff0360197771331619b92aa55ebf70c6420758", "Url": "https://api.github.com/repos/Atmosphere/atmosphere", "Date": "2011-12-22T20:53:36Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lazyStart) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/245/buggy-version/src.freenet.node.RequestStarter.java", "BodyUseAPI": [], "Fixed commit": "2241783e21e7d413c60028cf51baa7d17ea33db3", "Url": "https://api.github.com/repos/toad/fred-staging", "Date": "2016-03-25T22:41:42Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((readPairId.endsWith(\"/1\")) || (readPairId.endsWith(\"/2\"))) { readPairId = readPairId.substring(0, ((readPairId.length()) - 2)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/7040/buggy-version/src.main.java.edu.ohsu.sonmezsysbio.cloudbreak.mapper.AlignerMapper.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "b028535d94278e2402f066df26c10f53b504ae82", "Url": "https://api.github.com/repos/cwhelan/cloudbreak", "Date": "2013-10-04T22:15:30Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (releaseX >= (lastX)) { lastBody.applyLinearImpulse(((float) (((-1000) * len) * (java.lang.Math.cos(angle)))), ((float) (((-1000) * len) * (java.lang.Math.sin(angle)))), lastX, lastY, false); }else { lastBody.applyLinearImpulse(((float) ((1000 * len) * (java.lang.Math.cos(angle)))), ((float) ((1000 * len) * (java.lang.Math.sin(angle)))), lastX, lastY, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/1919/buggy-version/core.src.com.mygdx.game.TokenSoccer.java", "BodyUseAPI": [], "Fixed commit": "fb2d039d6d74f192022ace1eca5ea8eaf1d18710", "Url": "https://api.github.com/repos/manalmohania/token-soccer", "Date": "2017-06-12T05:29:05Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["notification.repository.UserNotificationPreferenceDao.getNotificationPreference(java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.springframework.util.CollectionUtils.isEmpty(prefs)) { prefs = java.util.Arrays.asList(new notification.entity.NotificationPreference(user, notification.enums.NotificationTypeEnum.EMAIL)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/568/buggy-version/src.main.java.notification.impl.NotificationServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "b6126d7c63e71b86aa1ee512345dc7b7f5a2610e", "Url": "https://api.github.com/repos/aknigam/NotificationSystem", "Date": "2017-04-08T11:31:51Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.awt.SplashScreen.getSplashScreen()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (splash != null) splash.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/5747/buggy-version/prototype.src.edu.erau.ateam.prototype.MainFrame.java", "BodyUseAPI": ["java.awt.SplashScreen.close()"], "Fixed commit": "5a13a0696bbc25e136dcbc74385f6b9ed8328359", "Url": "https://api.github.com/repos/AteamCapstone/prototype", "Date": "2013-11-10T23:40:21Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isFolded()) list.add(\"***Floded***\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/7253/buggy-version/src.Engine.Players.Player.java", "BodyUseAPI": [], "Fixed commit": "a2e5e4a10efebc9af5263b07a94a42211bde8620", "Url": "https://api.github.com/repos/danieltg/TexaxHoldem", "Date": "2017-12-05T22:14:47Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_originalInstantiator.canCreateFromObjectWith()) || (_originalInstantiator.canCreateUsingDelegate())) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/6605/buggy-version/src.main.java.com.fasterxml.jackson.module.afterburner.deser.CreatorOptimizer.java", "BodyUseAPI": [], "Fixed commit": "1659c714a44134654f7e5c45042f30be401e80bf", "Url": "https://api.github.com/repos/FasterXML/jackson-module-afterburner", "Date": "2012-11-17T21:04:40Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.exists()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((!wasOverwritten) && (defaultConfigDest.exists())) squeek.creativeblocks.config.JSONConfigHandler.configFiles.add(defaultConfigDest);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/5058/buggy-version/java.squeek.creativeblocks.config.JSONConfigHandler.java", "BodyUseAPI": ["java.util.List<java.io.File>.add(java.io.File)"], "Fixed commit": "3334f5a9e584b6aaa26bf301299d03481126b17e", "Url": "https://api.github.com/repos/squeek502/CreativeBlocks", "Date": "2015-02-03T07:26:46Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (isInEditMode()) { floatingLabelTextSize = 24; bottomSpacing = 16; bottomEllipsisSize = 8; }else { floatingLabelTextSize = getResources().getDimensionPixelSize(R.dimen.floating_label_text_size); bottomSpacing = getResources().getDimensionPixelSize(R.dimen.inner_components_spacing); bottomEllipsisSize = getResources().getDimensionPixelSize(R.dimen.bottom_ellipsis_height); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/2393/buggy-version/library.src.main.java.com.rengwuPATHn.materialedittext.MaterialEditText.java", "BodyUseAPI": [], "Fixed commit": "ff70f78d944b58eab969b163ffe85bad945312bd", "Url": "https://api.github.com/repos/MaTriXy/MaterialEditText", "Date": "2014-12-18T22:33:23Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!isValid) { login = us.loginWithEmail(login, password); if (login != null) { isValid = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/5985/buggy-version/src.main.java.uk.ac.dundee.computing.aec.instagrim.servlets.Login.java", "BodyUseAPI": [], "Fixed commit": "2d6322b7708b379e8df226e1a3858ce4e398d3d9", "Url": "https://api.github.com/repos/TwoRice/instagrim", "Date": "2016-10-20T01:40:11Z"},
{"Line": "=>319", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(char)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (idx > 0) { url = url.substring(0, idx); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/4146/buggy-version/core.src.org.tangram.components.MetaLinkHandler.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "e1adcf13b4678c6442dbf95470198f2f5a071101", "Url": "https://api.github.com/repos/mgoellnitz/tangram", "Date": "2015-02-28T13:37:20Z"},
{"Line": "=>623", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.satra.traveler.services.SpeedMeterService.hasReachLimit) { com.satra.traveler.services.SpeedMeterService.so.setLatitude_end(location.getLatitude()); com.satra.traveler.services.SpeedMeterService.so.setLongitude_end(location.getLongitude()); com.satra.traveler.services.SpeedMeterService.so.setSpeed_end(vitesse); com.satra.traveler.services.SpeedMeterService.so.setDate_end(new java.text.SimpleDateFormat(\"dd/MM/yyyy HH:mm:ss\", java.util.Locale.US).format(java.util.Calendar.getInstance().getTime())); com.satra.traveler.services.SpeedMeterService.so.save(); com.satra.traveler.services.SpeedMeterService.hasReachLimit = false; boolean speakOut = android.preference.PreferenceManager.getDefaultSharedPreferences(this).getBoolean(\"high_speed_pref\", false); if (speakOut) { tts.speak(getString(R.string.highspeed, com.satra.traveler.utils.Tutility.round((vitesse * (com.satra.traveler.services.SpeedMeterService.COEFF_CONVERSION_MS_KMH)))), TextToSpeech.QUEUE_ADD, null); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/5690/buggy-version/app.src.main.java.com.satra.traveler.services.SpeedMeterService.java", "BodyUseAPI": [], "Fixed commit": "fd6c6c0c144ccd7d6b4de5abba7075b6c48a3d21", "Url": "https://api.github.com/repos/larrytech7/traveler", "Date": "2017-05-14T14:33:33Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.craftfire.commons.ip.IPv6Address.getInetAddress()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (inet.isLoopbackAddress()) { return new com.craftfire.commons.ip.IPv4Address(127, 0, 0, 1); }else if (inet.isAnyLocalAddress()) { return new com.craftfire.commons.ip.IPv4Address(0, 0, 0, 0); }else if (((this.data[0]) == ((short) (8194))) || ((this.data[0]) == ((short) (65152)))) { java.nio.ByteBuffer buffer = java.nio.ByteBuffer.allocate(4); buffer.putShort(this.data[6]).putShort(this.data[7]); return new com.craftfire.commons.ip.IPv4Address(buffer.array()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/5498/buggy-version/src.main.java.com.craftfire.commons.ip.IPv6Address.java", "BodyUseAPI": ["java.net.InetAddress.isAnyLocalAddress()"], "Fixed commit": "2379a8e433b58761810b2c8dc80eee019ea1256f", "Url": "https://api.github.com/repos/Wolf480pl/CraftCommons", "Date": "2012-10-26T19:30:06Z"},
{"Line": "=>723", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (stringCreator == null) { stringCreator = new com.hazelcast.nio.UTFEncoderDecoder.DefaultStringCreator(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/2777/buggy-version/hazelcast.src.main.java.com.hazelcast.nio.UTFEncoderDecoder.java", "BodyUseAPI": [], "Fixed commit": "1820521d56d53c30e9732a7c1a10ceb80c793e1b", "Url": "https://api.github.com/repos/mdogan/hazelcast", "Date": "2015-08-20T20:13:33Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getBounds().width()", "getBounds().height()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((width <= 0) || (height <= 0)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/8063/buggy-version/carbon.src.main.java.carbon.drawable.VectorDrawable.java", "BodyUseAPI": [], "Fixed commit": "9b89f0d1f8316ba599411dc497adc867911fad8a", "Url": "https://api.github.com/repos/ZieIony/Carbon", "Date": "2015-09-24T17:07:54Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (t == obj) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/3275/buggy-version/src.io.ologn.common.OlognHashCode.java", "BodyUseAPI": [], "Fixed commit": "40ff70f0f2bb73f3428a3458721a23c7e5957b3a", "Url": "https://api.github.com/repos/lisq199/ologn-tools", "Date": "2016-08-12T20:03:54Z"},
{"Line": "=>411", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(skus.isEmpty())) { com.amazon.inapp.purchasing.PurchasingManager.initiateItemDataRequest(skus); int timeoutInMillis = 7500; long timeoutStamp = (java.lang.System.currentTimeMillis()) + timeoutInMillis; while (mBlockedOnItemDataRequest) { if ((java.lang.System.currentTimeMillis()) > timeoutStamp) { break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/1273/buggy-version/src.com.buzzwords.PackPurchaseActivity.java", "BodyUseAPI": ["com.amazon.inapp.purchasing.PurchasingManager.initiateItemDataRequest(java.util.Set<java.lang.String>)"], "Fixed commit": "7ed83530910f955e6045eefeff44c6c9544b2e1b", "Url": "https://api.github.com/repos/siramix/buzzwords", "Date": "2013-12-10T22:31:25Z"},
{"Line": "=>2472", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((defaultNetwork == null) || ((defaultNetwork.getGuestType()) != (Network.GuestType.Shared))) { throw new com.cloud.exception.InvalidParameterValueException((\"Cannot find default network for vm:\" + (vm.getId()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/3/buggy-version/server.src.com.cloud.vm.UserVmManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "7bce4badbe29724e575883ef9485312603dfc46c", "Url": "https://api.github.com/repos/DaanHoogland/cloudstack", "Date": "2016-01-12T09:56:07Z"},
{"Line": "=>2460", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.cloud.dc.dao.DataCenterDao.findById(vm.getDataCenterId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((zone.getNetworkType()) == (com.cloud.dc.DataCenter.NetworkType.Basic)) { defaultNetwork = _networkModel.getExclusiveGuestNetwork(zone.getId()); }else { if (zone.isSecurityGroupEnabled()) { com.cloud.vm.NicVO defaultNic = _nicDao.findDefaultNicForVM(vm.getId()); if (defaultNic != null) { defaultNetwork = _networkDao.findById(defaultNic.getNetworkId()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/3/buggy-version/server.src.com.cloud.vm.UserVmManagerImpl.java", "BodyUseAPI": ["com.cloud.dc.DataCenterVO.getId()", "com.cloud.dc.DataCenterVO.isSecurityGroupEnabled()", "com.cloud.network.NetworkModel.getExclusiveGuestNetwork(zone.getId())"], "Fixed commit": "7bce4badbe29724e575883ef9485312603dfc46c", "Url": "https://api.github.com/repos/DaanHoogland/cloudstack", "Date": "2016-01-12T09:56:07Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Tree.AttributeDeclaration.getDeclarationModel()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(declarationModel.isTransient())) result.add(com.redhat.ceylon.compiler.java.codegen.FIELD);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/4395/buggy-version/compiler-java.src.com.redhat.ceylon.compiler.java.codegen.AnnotationUtil.java", "BodyUseAPI": [], "Fixed commit": "f6d1bc4d5987a3dcdc624e83f17a07c3b2c96461", "Url": "https://api.github.com/repos/eclipse/ceylon", "Date": "2016-08-24T10:48:40Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((editContent) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/3888/buggy-version/app.src.main.java.com.landscape.schoolexandroid.ui.fragment.worktask.answercard.EditRichFragment.java", "BodyUseAPI": [], "Fixed commit": "06f6d383802439354a6b10deb74cd787802d517e", "Url": "https://api.github.com/repos/landscapeside/SchoolExAndroid", "Date": "2016-08-23T01:22:37Z"},
{"Line": "=>299", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (worstTime == 0) { worstTime = java.lang.Integer.MAX_VALUE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/5075/buggy-version/opentripplanner-routing.src.main.java.org.opentripplanner.routing.impl.raptor.Raptor.java", "BodyUseAPI": [], "Fixed commit": "ca7a24056f73b623f3b9013b4aea25a3a4a88622", "Url": "https://api.github.com/repos/openplans/OpenTripPlanner", "Date": "2012-08-09T19:35:13Z"},
{"Line": "=>1273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tabFolder[0].getSelection()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((selection.getTextComposite().getSelection().y) == x) { selection.getTextComposite().forceFocus(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/3700/buggy-version/src.org.nschmidt.ldparteditor.shells.editortext.EditorTextWindow.java", "BodyUseAPI": ["org.nschmidt.ldparteditor.composites.compositetab.CompositeTab.getTextComposite()", "selection.getTextComposite().forceFocus()"], "Fixed commit": "499392af74fbac8f640200b95ba41728956cee9c", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2016-04-02T06:18:16Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.Server.getWorld(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (bukkitWorld == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/8448/buggy-version/src.com.prosicraft.bukkitwrapper.Server.java", "BodyUseAPI": [], "Fixed commit": "ed7ac4cbcdcb3f9cf8cedcfec15a1d3845b90b01", "Url": "https://api.github.com/repos/prosicraft/BukkitWrapper", "Date": "2015-03-30T16:36:12Z"},
{"Line": "=>439", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((work.inputSettings.getOPTICSMode()) == (gdsc.smlm.ij.settings.OPTICSSettings.OPTICSMode.FAST_OPTICS)) { distance = (opticsManager.computeGeneratingDistance(work.inputSettings.minPoints)) * nmPerPixel; if (nmPerPixel != 1) { gdsc.core.ij.Utils.log(((TITLE) + \": Default clustering distance %s nm\"), gdsc.core.ij.Utils.rounded(distance)); } }else { distance = (opticsResult.generatingDistance) * nmPerPixel; if ((work.inputSettings.clusteringDistance) > 0) distance = java.lang.Math.min(work.inputSettings.clusteringDistance, distance); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/2094/buggy-version/src.main.java.gdsc.smlm.ij.plugins.OPTICS.java", "BodyUseAPI": ["gdsc.core.clustering.optics.OPTICSManager.computeGeneratingDistance(work.inputSettings.minPoints)", "java.lang.Math.min(work.inputSettings.clusteringDistance,double)"], "Fixed commit": "b09953fe13e8010edece1043bdbef19f92589568", "Url": "https://api.github.com/repos/aherbert/GDSC-SMLM", "Date": "2017-01-19T16:02:32Z"},
{"Line": "=>665", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((work.inputSettings.getOPTICSMode()) == (gdsc.smlm.ij.settings.OPTICSSettings.OPTICSMode.FAST_OPTICS)) { gdsc.core.clustering.optics.OPTICSManager opticsManager = ((gdsc.core.clustering.optics.OPTICSManager) (work.settings.get(1))); distance = (opticsManager.computeGeneratingDistance(work.inputSettings.minPoints)) * nmPerPixel; }else { distance = (opticsResult.generatingDistance) * nmPerPixel; if ((work.inputSettings.clusteringDistance) > 0) distance = java.lang.Math.min(work.inputSettings.clusteringDistance, distance); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/2094/buggy-version/src.main.java.gdsc.smlm.ij.plugins.OPTICS.java", "BodyUseAPI": ["java.lang.Math.min(work.inputSettings.clusteringDistance,double)", "gdsc.core.utils.Settings.get(int)", "gdsc.core.clustering.optics.OPTICSManager.computeGeneratingDistance(work.inputSettings.minPoints)"], "Fixed commit": "b09953fe13e8010edece1043bdbef19f92589568", "Url": "https://api.github.com/repos/aherbert/GDSC-SMLM", "Date": "2017-01-19T16:02:32Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(items.get(z).toString().contains(temp.store))) { items.get(z).price[storeId] = temp.price; items.get(z).stores[storeId] = temp.store; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/8436/buggy-version/code.mergeToOne.java", "BodyUseAPI": [], "Fixed commit": "b7ebe944aa624ea6f1fd50afb2e5ead17dc6b9cd", "Url": "https://api.github.com/repos/ChenWangCarleton/234Broject", "Date": "2017-10-21T18:24:32Z"},
{"Line": "=>1129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isTarget) { if (volume.getVirtualArray().getId().equals(virtualArray)) { subGroups.add(volume.getReplicationGroupInstance()); } }else { if (((((volume.getProtection()) == null) || ((volume.getProtection().getRpRep()) == null)) || ((volume.getProtection().getRpRep().getPersonality()) == null)) || (volume.getProtection().getRpRep().getPersonality().equalsIgnoreCase(\"SOURCE\"))) { subGroups.add(volume.getReplicationGroupInstance()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/9145/buggy-version/vipr-portal.com.iwave.isa.content.src.java.com.emc.sa.asset.providers.BlockProvider.java", "BodyUseAPI": [], "Fixed commit": "e2290421c7078bbfd0b1d0dcd0ecff3820d4deca", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-02-26T21:07:34Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((userRoles != null) && ((amRoles) != null)) { java.lang.String strUserRoles = org.intalio.tempo.security.util.StringArrayUtils.toCommaDelimited(userRoles).toLowerCase(); java.lang.String strAmRoles = org.intalio.tempo.security.util.StringArrayUtils.toCommaDelimited(((java.lang.String[]) (amRoles.toArray(new java.lang.String[amRoles.size()])))).toLowerCase(); java.lang.String[] arrUserRoles = org.intalio.tempo.security.util.StringArrayUtils.parseCommaDelimited(strUserRoles); java.lang.String[] arrAmRoles = org.intalio.tempo.security.util.StringArrayUtils.parseCommaDelimited(strAmRoles); if (org.apache.commons.collections.CollectionUtils.containsAny(java.util.Arrays.asList(arrUserRoles), java.util.Arrays.asList(arrAmRoles))) { isAbsenceManager = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/891/buggy-version/ui-fw.src.main.java.org.intalio.tempo.uiframework.VacationController.java", "BodyUseAPI": ["org.intalio.tempo.security.util.StringArrayUtils.toCommaDelimited(userRoles).toLowerCase()", "org.intalio.tempo.security.util.StringArrayUtils.toCommaDelimited(java.lang.String[])"], "Fixed commit": "7dc37acaf0618716468c13bd52c8944bcfcc83fb", "Url": "https://api.github.com/repos/intalio/tempo", "Date": "2013-06-06T06:28:11Z"},
{"Line": "=>950", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.hadoop.security.UserGroupInformation.getBestUGI(null, \"yarn\").doAs(java.security.PrivilegedExceptionAction<org.apache.hadoop.yarn.api.records.ApplicationId>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (applicationId != null) { org.apache.ambari.view.slider.SliderAppsViewControllerImpl.logger.debug((\"Slider app has been frozen - \" + (applicationId.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/3232/buggy-version/contrib.views.slider.src.main.java.org.apache.ambari.view.slider.SliderAppsViewControllerImpl.java", "BodyUseAPI": ["org.apache.log4j.Logger.debug((\"Slider app has been frozen - \" + (applicationId.toString())))", "org.apache.hadoop.yarn.api.records.ApplicationId.toString()"], "Fixed commit": "74f138a4b556770358889a8972f7312ccb2b2db5", "Url": "https://api.github.com/repos/apache/ambari", "Date": "2014-05-30T23:40:44Z"},
{"Line": "=>982", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.hadoop.security.UserGroupInformation.getBestUGI(null, \"yarn\").doAs(java.security.PrivilegedExceptionAction<org.apache.hadoop.yarn.api.records.ApplicationId>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (applicationId != null) { org.apache.ambari.view.slider.SliderAppsViewControllerImpl.logger.debug((\"Slider app has been thawed - \" + (applicationId.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/3232/buggy-version/contrib.views.slider.src.main.java.org.apache.ambari.view.slider.SliderAppsViewControllerImpl.java", "BodyUseAPI": ["org.apache.hadoop.yarn.api.records.ApplicationId.toString()", "org.apache.log4j.Logger.debug((\"Slider app has been thawed - \" + (applicationId.toString())))"], "Fixed commit": "74f138a4b556770358889a8972f7312ccb2b2db5", "Url": "https://api.github.com/repos/apache/ambari", "Date": "2014-05-30T23:40:44Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(okReceived)) { java.lang.System.out.println(\"No leader found. Be leader myself.\"); leaderId = myId; notifyNewLeader(myId); java.util.Timer resignTimer = new java.util.Timer(); resignTimer.schedule(new java.util.TimerTask() { @java.lang.Override public void run() { if (isTrader()) resign(); } }, leaderPeriod); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/4021/buggy-version/src.Peer.java", "BodyUseAPI": [], "Fixed commit": "04d985b4c285b1d5e35808ca312c917b464434fe", "Url": "https://api.github.com/repos/oyx15/proj2", "Date": "2016-04-07T00:41:36Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ericyl.example.util.AppProperties.getDatabaseDir(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((!(file.exists())) && (file.mkdirs())) { file.delete(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/5820/buggy-version/example.src.main.java.com.ericyl.example.util.DatabaseUtils.java", "BodyUseAPI": ["java.io.File.delete()"], "Fixed commit": "acd71b1d6d59571f0fc2400dbd87bc52824fd136", "Url": "https://api.github.com/repos/ericyl/EricylUtils", "Date": "2017-03-14T05:54:03Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["github.daneren2005.dsub.adapter.PlaylistAdapter.getItemForPosition(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (item instanceof github.daneren2005.dsub.domain.Playlist) { return getNameIndex(((github.daneren2005.dsub.domain.Playlist) (item)).getName()); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/8087/buggy-version/app.src.main.java.github.daneren2005.dsub.adapter.PlaylistAdapter.java", "BodyUseAPI": [], "Fixed commit": "183004516e23e777026c4a15ecc83d3613fcc216", "Url": "https://api.github.com/repos/daneren2005/Subsonic", "Date": "2015-11-03T16:49:05Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (message.contains(\"Username already registered\")) { javax.swing.JOptionPane.showMessageDialog(null, \"Voc\u00ea j\u00e1 est\u00e1 registrado no OTC WoT. Tente fazer login.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/696/buggy-version/java.BitcoinWot.src.info.walltime.bitcoinwot.IrcBot.java", "BodyUseAPI": [], "Fixed commit": "c1e1c1b5e225f71469ce69167e7b9b27deb0a997", "Url": "https://api.github.com/repos/btcbrdev/bitcoin-otc-wot-for-the-lazy", "Date": "2016-02-01T22:20:53Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.appdynamics.extensions.riak.RiakMonitorTask.logger.isDebugEnabled()) { com.appdynamics.extensions.riak.RiakMonitorTask.logger.debug((((\"Metric key:value before rounding off = \" + key) + \":\") + (java.lang.String.valueOf(value)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/6540/buggy-version/src.main.java.com.appdynamics.extensions.riak.RiakMonitorTask.java", "BodyUseAPI": ["org.apache.log4j.Logger.debug(java.lang.String)"], "Fixed commit": "6e555c6ecf846f9fa871dce7a3135bbb33bb9858", "Url": "https://api.github.com/repos/Appdynamics/riak-monitoring-extension", "Date": "2014-07-23T03:14:45Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((selectList.list.getItems().size) == 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/7006/buggy-version/adventure-editor.src.main.java.com.bladecoder.engineeditor.ui.components.EditableSelectBox.java", "BodyUseAPI": [], "Fixed commit": "5fde417bd724a54f6fe5029cd869f5ba5db16607", "Url": "https://api.github.com/repos/bladecoder/bladecoder-adventure-engine", "Date": "2016-04-01T17:41:34Z"},
{"Line": "=>295", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((delegate) != null) { delegate.hide(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/6542/buggy-version/client.src.com.vaadin.client.ui.VNotification.java", "BodyUseAPI": [], "Fixed commit": "e8c015c84f71567574f40bb53a91d32cc418dc43", "Url": "https://api.github.com/repos/cuba-platform/vaadin", "Date": "2016-07-07T14:16:29Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.orientechnologies.orient.core.record.impl.ODocument.rawField(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((fieldValue instanceof java.util.Map<?, ?>) && (type == null)) { final int size = com.orientechnologies.common.collection.OMultiValue.getSize(fieldValue); java.lang.Boolean autoConvertLinks = null; if (fieldValue instanceof com.orientechnologies.orient.core.db.record.ORecordLazyMap) { autoConvertLinks = ((com.orientechnologies.orient.core.db.record.ORecordLazyMap) (fieldValue)).isAutoConvertToRecord(); if (autoConvertLinks) ((com.orientechnologies.orient.core.db.record.ORecordLazyMap) (fieldValue)).setAutoConvertToRecord(false); } if (size > 0) { final java.lang.Object firstValue = com.orientechnologies.common.collection.OMultiValue.getFirstValue(fieldValue); if (firstValue != null) { if (((ODatabaseRecordThreadLocal.INSTANCE.isDefined()) && ((firstValue instanceof com.orientechnologies.orient.core.record.impl.ODocument) && (!(((com.orientechnologies.orient.core.record.impl.ODocument) (firstValue)).isEmbedded())))) && ((firstValue instanceof com.orientechnologies.orient.core.record.ORecord<?>) || (((ODatabaseRecordThreadLocal.INSTANCE.get().getDatabaseOwner()) instanceof com.orientechnologies.orient.core.db.object.ODatabaseObject) && ((((com.orientechnologies.orient.core.db.object.ODatabaseObject) (ODatabaseRecordThreadLocal.INSTANCE.get().getDatabaseOwner())).getEntityManager().getEntityClass(getClassName(firstValue))) != null)))) { linkedClass = getLinkInfo(ODatabaseRecordThreadLocal.INSTANCE.get(), getClassName(firstValue)); linkedType = com.orientechnologies.orient.core.metadata.schema.OType.LINK; type = com.orientechnologies.orient.core.metadata.schema.OType.LINKMAP; }else { type = com.orientechnologies.orient.core.metadata.schema.OType.EMBEDDEDMAP; } } }else type = com.orientechnologies.orient.core.metadata.schema.OType.EMBEDDEDMAP; if ((fieldValue instanceof com.orientechnologies.orient.core.db.record.ORecordLazyMap) && autoConvertLinks) { ((com.orientechnologies.orient.core.db.record.ORecordLazyMap) (fieldValue)).setAutoConvertToRecord(true); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/3815/buggy-version/core.src.main.java.com.orientechnologies.orient.core.serialization.serializer.record.string.ORecordSerializerSchemaAware2CSV.java", "BodyUseAPI": ["com.orientechnologies.common.collection.OMultiValue.getFirstValue(java.lang.Object)", "com.orientechnologies.common.collection.OMultiValue.getSize(java.lang.Object)"], "Fixed commit": "264198624799bc741605cbc4786960f489a1896e", "Url": "https://api.github.com/repos/nuvolabase/orientdb", "Date": "2012-06-01T13:08:07Z"},
{"Line": "=>533", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((reqWidth > 0) && (reqHeight > 0)) ret = android.graphics.Bitmap.createScaledBitmap(ret, reqWidth, reqHeight, true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/1935/buggy-version/app.src.main.java.org.invotek.apps.easyvsd_shell.BackgroundHighlightButton.java", "BodyUseAPI": ["android.graphics.Bitmap.createScaledBitmap(android.graphics.Bitmap,int,int,boolean)"], "Fixed commit": "165f414b77458c5e7cf3fc744a4d2a498c4cea9f", "Url": "https://api.github.com/repos/ejakobs/EasyVSD_Shell", "Date": "2017-11-07T17:36:40Z"},
{"Line": "=>320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["lorian.graph.fileio.GraphFileReader.reconstructFactor(lorian.graph.fileio.FactorData)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((tmp.startsWith(\"1/\")) && ((s.length()) > 0)) s += \"*\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/6342/buggy-version/lorian.graph.fileio.GraphFileReader.java", "BodyUseAPI": [], "Fixed commit": "cb9cc762ba5d8ac182796e6eca3d4404a0d5cab6", "Url": "https://api.github.com/repos/lorian1333/graph", "Date": "2013-04-15T18:13:47Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (s.endsWith(\"^1\")) { s = s.substring(0, ((s.length()) - 2)); }else if (s.endsWith(\"^-1\")) { s = java.lang.String.format(\"1/%s\", s.subSequence(0, ((s.length()) - 3))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/6342/buggy-version/lorian.graph.fileio.GraphFileReader.java", "BodyUseAPI": ["java.lang.String.subSequence(int,int)", "java.lang.String.endsWith(java.lang.String)", "java.lang.String.format(java.lang.String,java.lang.CharSequence)", "java.lang.String.length()", "java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "cb9cc762ba5d8ac182796e6eca3d4404a0d5cab6", "Url": "https://api.github.com/repos/lorian1333/graph", "Date": "2013-04-15T18:13:47Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (waiting) java.lang.System.err.println((\"DONE WAITING AT NODE \" + (parent.getID())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/9049/buggy-version/simulator.de.upb.mf.simulator.sortedListExtended.SearchByForwardAndWaitThread.java", "BodyUseAPI": [], "Fixed commit": "d076c8526a307ac43e6430f97c8687182f3e30b6", "Url": "https://api.github.com/repos/Krakomat/Simulator", "Date": "2015-07-09T08:17:23Z"},
{"Line": "=>338", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((nickname.length()) == 0) { nickname = phone; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/2633/buggy-version/src.com.imeeting.mvc.controller.UserController.java", "BodyUseAPI": [], "Fixed commit": "8fe430c58be0cd192c5be52fe75685c929f648be", "Url": "https://api.github.com/repos/huuguanghui/web_portal", "Date": "2012-10-16T07:49:18Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((file) != null) { file.delete(); file = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/5625/buggy-version/src.mc.lib.network.AsyncFileDownloader.java", "BodyUseAPI": [], "Fixed commit": "cea239f5998db3f905bdfbe9f9a304bd0d3ede6a", "Url": "https://api.github.com/repos/mc-android-developer/mclib", "Date": "2013-01-30T08:25:55Z"},
{"Line": "=>639", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((requestSpec) & (GRANTED_SAW)) == (GRANTED_SAW)) && (((grantedSpec) & (GRANTED_SAW)) != (GRANTED_SAW))) { deniedResults.add(\"Manifest.permission.SYSTEM_ALERT_WINDOW\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/6162/buggy-version/app.src.main.java.com.itheima.mobilesafe.HomeActivity.java", "BodyUseAPI": [], "Fixed commit": "f2f6f2ffaef89b6c10311d8d991e1cf7269185e6", "Url": "https://api.github.com/repos/Catherine22/MobileManager", "Date": "2016-12-19T06:07:47Z"},
{"Line": "=>643", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((deniedResults.size()) != 0) { listener.onDenied(deniedResults); }else { listener.onGranted(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/6162/buggy-version/app.src.main.java.com.itheima.mobilesafe.HomeActivity.java", "BodyUseAPI": ["com.itheima.mobilesafe.interfaces.OnRequestPermissionsListener.onDenied(java.util.List<java.lang.String>)"], "Fixed commit": "f2f6f2ffaef89b6c10311d8d991e1cf7269185e6", "Url": "https://api.github.com/repos/Catherine22/MobileManager", "Date": "2016-12-19T06:07:47Z"},
{"Line": "=>680", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((requestSpec) & (GRANTED_SAW)) == (GRANTED_SAW)) && (((grantedSpec) & (GRANTED_SAW)) != (GRANTED_SAW))) { deniedResults.add(\"Manifest.permission.SYSTEM_ALERT_WINDOW\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/6162/buggy-version/app.src.main.java.com.itheima.mobilesafe.HomeActivity.java", "BodyUseAPI": [], "Fixed commit": "f2f6f2ffaef89b6c10311d8d991e1cf7269185e6", "Url": "https://api.github.com/repos/Catherine22/MobileManager", "Date": "2016-12-19T06:07:47Z"},
{"Line": "=>684", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((deniedResults.size()) != 0) { listener.onDenied(deniedResults); }else { listener.onGranted(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/6162/buggy-version/app.src.main.java.com.itheima.mobilesafe.HomeActivity.java", "BodyUseAPI": ["com.itheima.mobilesafe.interfaces.OnRequestPermissionsListener.onDenied(java.util.List<java.lang.String>)"], "Fixed commit": "f2f6f2ffaef89b6c10311d8d991e1cf7269185e6", "Url": "https://api.github.com/repos/Catherine22/MobileManager", "Date": "2016-12-19T06:07:47Z"},
{"Line": "=>381", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (hour == 12) { hour = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/4409/buggy-version/src.main.parser.createTask.java", "BodyUseAPI": [], "Fixed commit": "dd48ac16a086524a358551d3dbe980a82ca07757", "Url": "https://api.github.com/repos/cs2103jan2016-f13-2j/main", "Date": "2016-04-10T18:04:48Z"},
{"Line": "=>393", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hour == 24) { hour = 12; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/4409/buggy-version/src.main.parser.createTask.java", "BodyUseAPI": [], "Fixed commit": "dd48ac16a086524a358551d3dbe980a82ca07757", "Url": "https://api.github.com/repos/cs2103jan2016-f13-2j/main", "Date": "2016-04-10T18:04:48Z"},
{"Line": "=>306", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dato.equalsIgnoreCase(giorno)) AnimeIndex.filterModel.addElement(((java.lang.String) (modelArray[i])));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/2680/buggy-version/src.util.Filters.java", "BodyUseAPI": [], "Fixed commit": "696d9cabb8123f6b8aad8103480bd5afdcd334c5", "Url": "https://api.github.com/repos/MyAnimeManager/MyAnimeManager", "Date": "2015-08-13T20:13:58Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.StringBuilder.toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (numString.isEmpty()) { msgUser(channel, sender, \"Invalid time\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/6277/buggy-version/src.main.java.com.drtshock.willie.command.fun.CountdownCommandHandler.java", "BodyUseAPI": [], "Fixed commit": "a5ca7b3a779f1231e7e05cee8ba754d2f2b2c506", "Url": "https://api.github.com/repos/hatstand0/Willie", "Date": "2014-05-05T01:30:11Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<com.drtshock.willie.command.fun.CountdownCommandHandler.TimeUnit, java.lang.Integer>.getKey()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (key == null) { msgUser(channel, sender, \"Invalid time\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/6277/buggy-version/src.main.java.com.drtshock.willie.command.fun.CountdownCommandHandler.java", "BodyUseAPI": [], "Fixed commit": "a5ca7b3a779f1231e7e05cee8ba754d2f2b2c506", "Url": "https://api.github.com/repos/hatstand0/Willie", "Date": "2014-05-05T01:30:11Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["engine.save.levelData.MobData.loadSave(engine.save.SaveComponent,level.maps.Level)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (loadedMob != null) level.entityManager.addMob(loadedMob);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/9250/buggy-version/src.engine.save.LevelData.java", "BodyUseAPI": ["level.entityManager.addMob(entity.mobs.Mob)"], "Fixed commit": "1cc238a754fcb0299163ec590e452979debe458d", "Url": "https://api.github.com/repos/DrFair/Game", "Date": "2016-05-01T13:26:54Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["engine.GlobalData.getMob(java.lang.String,level.maps.Level)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (mob == null) { java.lang.System.err.println(((((\"Loaded mob of type \" + type) + \" on level \") + (level.getIslandString())) + \" was invalid.\")); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/9250/buggy-version/src.engine.save.levelData.MobData.java", "BodyUseAPI": [], "Fixed commit": "1cc238a754fcb0299163ec590e452979debe458d", "Url": "https://api.github.com/repos/DrFair/Game", "Date": "2016-05-01T13:26:54Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (readAmount > 0) { writer.write(buffer, 0, readAmount); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/7091/buggy-version/src.ch.se.inf.ethz.jcd.batman.io.HostBridge.java", "BodyUseAPI": ["java.io.OutputStream.write(byte[],int,int)"], "Fixed commit": "b79c34a2114128843e40582070f0fca578692147", "Url": "https://api.github.com/repos/groggi/eth-jcd", "Date": "2013-04-06T08:27:50Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.megamip.voice.VoiceInput.getAction()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (action.equals(\"back\")) mCommand = mc.new com.megamip.voice.GuiBack(receiver);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/908/buggy-version/Megamip.src.com.megamip.voice.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "9b14d22d855297a2d1874225c4990ba409315061", "Url": "https://api.github.com/repos/bens-unit01/Megamip", "Date": "2013-08-09T15:44:05Z"},
{"Line": "=>317", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((a[i][k]) == 0) test.setTextColor(Color.BLACK); else test.setTextColor(Color.GRAY);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/2069/buggy-version/app.src.main.java.com.example.ben.game.Game2.java", "BodyUseAPI": [], "Fixed commit": "66fc4489d7fa99dc64d2b0d84b306e85aece1b37", "Url": "https://api.github.com/repos/Ben-wu14/Game", "Date": "2016-09-25T07:03:53Z"},
{"Line": "=>325", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((a[k][j]) == 0) test.setTextColor(Color.BLACK); else test.setTextColor(Color.GRAY);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/2069/buggy-version/app.src.main.java.com.example.ben.game.Game2.java", "BodyUseAPI": [], "Fixed commit": "66fc4489d7fa99dc64d2b0d84b306e85aece1b37", "Url": "https://api.github.com/repos/Ben-wu14/Game", "Date": "2016-09-25T07:03:53Z"},
{"Line": "=>334", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((a[w][k]) == 0) test.setTextColor(Color.BLACK); else test.setTextColor(Color.GRAY);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/2069/buggy-version/app.src.main.java.com.example.ben.game.Game2.java", "BodyUseAPI": [], "Fixed commit": "66fc4489d7fa99dc64d2b0d84b306e85aece1b37", "Url": "https://api.github.com/repos/Ben-wu14/Game", "Date": "2016-09-25T07:03:53Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((context.getSupportActionBar()) != null) context.getSupportActionBar().setTitle(R.string.App__name);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/3570/buggy-version/app.src.main.java.com.doplgangr.secrecy.Views.VaultsListFragment.java", "BodyUseAPI": ["android.support.v7.app.ActionBarActivity.getSupportActionBar()", "context.getSupportActionBar().setTitle(R.string.App__name)"], "Fixed commit": "8566d72e150a0f76d11eaf2519e9e12a11adf6d2", "Url": "https://api.github.com/repos/L-Henke/secrecy", "Date": "2014-11-05T09:22:49Z"},
{"Line": "=>866", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((rButtonImages) != null) && ((rButtonImages.length) > 0)) { d.setWidth((((rButtonImages[0].getWidth()) + (d.getWidth())) + (rb.getGap()))); }else { d.setWidth((((d.getWidth()) + height) + (rb.getGap()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/7548/buggy-version/CodenameOne.src.com.codename1.ui.plaf.DefaultLookAndFeel.java", "BodyUseAPI": ["com.codename1.ui.geom.Dimension.setWidth((((rButtonImages[0].getWidth()) + (d.getWidth())) + (rb.getGap())))", "rButtonImages[0].getWidth()"], "Fixed commit": "2463722e86521e15f926f2e92c6a907357b01bb2", "Url": "https://api.github.com/repos/codenameone/CodenameOne", "Date": "2015-05-08T07:59:58Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.mobidev.mpesa.PinActivity.phoneNo) == null) { com.mobidev.mpesa.PinActivity.phoneNo = \"My Number\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/2883/buggy-version/app.src.main.java.com.mobidev.mpesa.PinActivity.java", "BodyUseAPI": [], "Fixed commit": "a3e93599c7d5051d3d514e1c91555c04187d91da", "Url": "https://api.github.com/repos/startupkenya/mpesa-demo", "Date": "2015-07-03T09:31:55Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((track.getUser()) != null) { filter.append(\"userId\", track.getUser().getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/3418/buggy-version/mongodbDAO.src.main.java.com.postman.impl.TrackMongoDAOImpl.java", "BodyUseAPI": ["com.postman.model.Track.getUser()", "track.getUser().getId()", "org.bson.Document.append(java.lang.String,track.getUser().getId())"], "Fixed commit": "465fef8cb1873f4a3c995def3e2bde6d6b6f345d", "Url": "https://api.github.com/repos/sakhno/postman", "Date": "2016-06-21T17:46:35Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["request.getSession().getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (newCart != null) { for (edu.mum.models.InventoryItem item : edu.mum.dao.CartDAO.getCartByUserName(userName).getAllCartItems()) { newCart.addItem(item); } }else { newCart = edu.mum.dao.CartDAO.getCartByUserName(userName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/7035/buggy-version/src.main.java.edu.mum.contollers.Login.java", "BodyUseAPI": ["edu.mum.models.Cart.addItem(edu.mum.models.InventoryItem)"], "Fixed commit": "47166224f168458fdef46240962448538c81b83b", "Url": "https://api.github.com/repos/arginbek/CS472-Project", "Date": "2017-07-19T23:27:04Z"},
{"Line": "=>426", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((m_Camera) != null) { m_Camera.setPreviewDisplay(holder); m_Camera.startPreview(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/8044/buggy-version/src.main.java.com.imdp.instaclimb.CameraActivity.java", "BodyUseAPI": [], "Fixed commit": "835f7a4515ebaffe8e0d3116c348a160a186f06e", "Url": "https://api.github.com/repos/gambineri/InstaClimb", "Date": "2014-11-15T22:57:52Z"},
{"Line": "=>419", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((formData.containsKey(\"defaultTriggers\")) && (formData.getJSONObject(\"defaultTriggers\").isArray())) { defaultTriggers.clear(); for (java.lang.Object tName : formData.getJSONArray(\"defaultTriggers\")) { java.lang.String triggerName = tName.toString(); hudson.plugins.emailext.plugins.EmailTriggerDescriptor d = ((hudson.plugins.emailext.plugins.EmailTriggerDescriptor) (jenkins.model.Jenkins.getInstance().getDescriptorByName(triggerName))); if (d != null) { defaultTriggers.add(d); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/8423/buggy-version/src.main.java.hudson.plugins.emailext.ExtendedEmailPublisherDescriptor.java", "BodyUseAPI": ["net.sf.json.JSONObject.getJSONArray(java.lang.String)"], "Fixed commit": "3a9c472471f1466be3d6f51336906bb3d1fcc7a5", "Url": "https://api.github.com/repos/jenkinsci/email-ext-plugin", "Date": "2015-04-10T03:14:48Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (first_half != 0) pasi_verticala = (Constants.WORLD_SIZE) / first_half; else pasi_verticala = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/1873/buggy-version/src.Main.java", "BodyUseAPI": [], "Fixed commit": "4cac31d17944fb41a287fbe9ea514b770a9498e4", "Url": "https://api.github.com/repos/vladbogo/AgentsPart2", "Date": "2015-05-22T09:13:45Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (second_half != 0) pasi_orizontala = (Constants.WORLD_SIZE) / second_half; else pasi_orizontala = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/1873/buggy-version/src.Main.java", "BodyUseAPI": [], "Fixed commit": "4cac31d17944fb41a287fbe9ea514b770a9498e4", "Url": "https://api.github.com/repos/vladbogo/AgentsPart2", "Date": "2015-05-22T09:13:45Z"},
{"Line": "=>1321", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(((com.html5parser.classes.token.TagToken) (token)).isFlagAcknowledgeSelfClosingTag())) { parserContext.getOpenElements().pop(); ((com.html5parser.classes.token.TagToken) (token)).setFlagAcknowledgeSelfClosingTag(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/4990/buggy-version/Code.src.main.java.com.html5parser.insertionModes.InBody.java", "BodyUseAPI": ["com.html5parser.classes.Token.setFlagAcknowledgeSelfClosingTag(boolean)"], "Fixed commit": "818fc6236ac67c4bbcbe7e38ae605179fb23de52", "Url": "https://api.github.com/repos/carlos-anaya/HTML5_Complete_Parser", "Date": "2015-04-19T01:26:47Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((args.startsWith(\"\\\"\")) && (args.endsWith(\"\\\"\"))) { args = a.substring(1, ((a.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/3548/buggy-version/src.com.gmail.berndivader.mmSkriptAddon.mm400.events.custom.mmMythicMobsSkriptSkill.java", "BodyUseAPI": [], "Fixed commit": "dc60161697e81ff6337b057d37202ebd02df668a", "Url": "https://api.github.com/repos/BerndiVader/mmSkriptAddon", "Date": "2017-03-27T19:47:50Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (nPos > 0) { if ((strSql.charAt((nPos - 1))) == '\\\"') { strTable = (\"\\\"\" + strTable) + \"\\\"\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/4402/buggy-version/src.com.rhomobile.hsqldata.HsqlData.java", "BodyUseAPI": ["java.lang.String.charAt(int)"], "Fixed commit": "2447ab3787b31b5ed47bef8534fff2b2c94d784e", "Url": "https://api.github.com/repos/rhomobile/hsqldata", "Date": "2011-03-06T07:28:50Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (instance instanceof org.ksoap2.serialization.AttributeContainer) { org.ksoap2.serialization.AttributeContainer attributeContainer = ((org.ksoap2.serialization.AttributeContainer) (instance)); int cnt = attributeContainer.getAttributeCount(); for (int counter = 0; counter < cnt; counter++) { org.ksoap2.serialization.AttributeInfo attributeInfo = new org.ksoap2.serialization.AttributeInfo(); attributeContainer.getAttributeInfo(counter, attributeInfo); writer.attribute(attributeInfo.getNamespace(), attributeInfo.getName(), attributeInfo.getValue().toString()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/3540/buggy-version/ksoap2-base.src.main.java.org.ksoap2.serialization.DM.java", "BodyUseAPI": [], "Fixed commit": "f0e23aed58d2b8d0aabc4ae2436a2dc8c4e036bc", "Url": "https://api.github.com/repos/mosabua/ksoap2-android", "Date": "2012-03-21T04:07:32Z"},
{"Line": "=>437", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lexer.isEnabled(Feature.UseObjectArray)) { value = list.toArray(); }else { value = list; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/2648/buggy-version/src.main.java.com.alibaba.fastjson.parser.DefaultJSONParser.java", "BodyUseAPI": [], "Fixed commit": "2a2c3824dd2e2b4f8c917d9ff583f094324cbdf5", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2016-04-13T14:34:12Z"},
{"Line": "=>1288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lexer.isEnabled(Feature.UseObjectArray)) { return array.toArray(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/2648/buggy-version/src.main.java.com.alibaba.fastjson.parser.DefaultJSONParser.java", "BodyUseAPI": [], "Fixed commit": "2a2c3824dd2e2b4f8c917d9ff583f094324cbdf5", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2016-04-13T14:34:12Z"},
{"Line": "=>1117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lexer.isEnabled(Feature.UseObjectArray)) { value = items.toArray(); }else { value = items; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/2648/buggy-version/src.main.java.com.alibaba.fastjson.parser.DefaultJSONParser.java", "BodyUseAPI": [], "Fixed commit": "2a2c3824dd2e2b4f8c917d9ff583f094324cbdf5", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2016-04-13T14:34:12Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((seed.length) != (io.github.pr0methean.betterrandom.prng.XorShiftRandom.SEED_SIZE_BYTES)) { throw new java.lang.IllegalArgumentException(\"XorShiftRandom requires a 20-byte seed\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/6665/buggy-version/betterrandom.src.main.java.io.github.pr0methean.betterrandom.prng.XorShiftRandom.java", "BodyUseAPI": [], "Fixed commit": "6e86680be691e074fea18c614cc9e1467e9febaa", "Url": "https://api.github.com/repos/Pr0methean/BetterRandom", "Date": "2017-09-12T18:39:41Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class.getResource(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (url == null) { java.util.Locale localeWithoutCountry = ((locale.getCountry()) == null) ? locale : new java.util.Locale(locale.getLanguage()); path = control.toBundleName(baseName, localeWithoutCountry); url = org.sonar.plsqlopen.CustomAnnotationBasedRulesDefinition.class.getResource(path); if (url == null) { path = baseName; url = org.sonar.plsqlopen.CustomAnnotationBasedRulesDefinition.class.getResource(path); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/5386/buggy-version/sonar-plsql-open-plugin.src.main.java.org.sonar.plsqlopen.CustomAnnotationBasedRulesDefinition.java", "BodyUseAPI": [], "Fixed commit": "fd1b0dd846e2ee0034fedd0501c281f154f57289", "Url": "https://api.github.com/repos/felipebz/sonar-plsql", "Date": "2015-12-18T15:10:41Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (oneFromWoDistinctOrGroupby) { int paramBoundPos = sql.indexOf('?'); if ((paramBoundPos >= 0) && (paramBoundPos < fromPos)) { oneFromWoDistinctOrGroupby = false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/4927/buggy-version/src.main.java.org.n3r.eql.DbDialect.java", "BodyUseAPI": [], "Fixed commit": "d96603b9c44de524853cafa151a7e294767ec53c", "Url": "https://api.github.com/repos/bingoohuang/eql", "Date": "2014-06-12T03:38:38Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActionBar()) != null) { getActionBar().hide(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/5443/buggy-version/app.src.main.java.com.arnastofnun.idordabanki.activities.Beygingar.java", "BodyUseAPI": [], "Fixed commit": "75b4dbfb93e4bb73d6460f10d4917ddb8892167b", "Url": "https://api.github.com/repos/arnastofnun/Ordabanki_for_android", "Date": "2015-04-12T02:09:30Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((defects[i].getAssignee()) != null) { entries[i][4] = defects[i].getAssignee().getName(); }else { entries[i][4] = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/9030/buggy-version/DefectTracker.src.edu.wpi.cs.wpisuitetng.modules.defecttracker.search.RetrieveAllDefectsController.java", "BodyUseAPI": ["defects[i].getAssignee().getName()", "defects[i].getAssignee()"], "Fixed commit": "87e5a6ac32878b9b20bd89a6b810c7cf78fd5ea4", "Url": "https://api.github.com/repos/fracture91/wpi-suite-tng", "Date": "2013-01-13T22:39:08Z"},
{"Line": "=>270", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(txtAssignee.getText().equals(\"\"))) { defect.setAssignee(new edu.wpi.cs.wpisuitetng.modules.core.models.User(\"\", txtAssignee.getText(), \"\", (-1))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/9030/buggy-version/DefectTracker.src.edu.wpi.cs.wpisuitetng.modules.defecttracker.defect.DefectPanel.java", "BodyUseAPI": ["edu.wpi.cs.wpisuitetng.modules.defecttracker.models.Defect.setAssignee(edu.wpi.cs.wpisuitetng.modules.core.models.User)", "javax.swing.JTextField.getText()"], "Fixed commit": "87e5a6ac32878b9b20bd89a6b810c7cf78fd5ea4", "Url": "https://api.github.com/repos/fracture91/wpi-suite-tng", "Date": "2013-01-13T22:39:08Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.HONEYCOMB)) { actionBarTitleId = getResources().getIdentifier(\"action_bar_title\", \"id\", \"android\"); }else { actionBarTitleId = R.id.action_bar_title; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/3706/buggy-version/Swipper2.src.com.globant.labs.swipper2.PlaceDetailActivity.java", "BodyUseAPI": [], "Fixed commit": "9f369ab2910095ab3c62c5631d1d32401f7ec8fd", "Url": "https://api.github.com/repos/globant/swipper", "Date": "2014-10-03T18:44:17Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (id >= (engine.gameData.TileData.tiles.size())) id = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/4725/buggy-version/src.engine.gameData.TileData.java", "BodyUseAPI": [], "Fixed commit": "cc2d6c8fb723d172c6937be1f9fa00c3a5ff605f", "Url": "https://api.github.com/repos/DrFair/Game", "Date": "2017-07-18T17:20:28Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(location.delete())) { throw new java.lang.RuntimeException((\"Could not delete file \" + location)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/9032/buggy-version/SubLibrary.src.main.java.org.lodder.subtools.sublibrary.cache.DiskCacheManager.java", "BodyUseAPI": [], "Fixed commit": "392c2ea3f364fe4ed092c78e0f714538b712bb89", "Url": "https://api.github.com/repos/phdelodder/SubTools", "Date": "2014-11-09T16:16:32Z"},
{"Line": "=>688", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((robot) != null) { robot.mouseMove(((frame.getLocation().x) + 400), ((frame.getLocation().y) + 200)); robot.mousePress(java.awt.event.InputEvent.BUTTON1_MASK); robot.mouseRelease(java.awt.event.InputEvent.BUTTON1_MASK); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/6002/buggy-version/pong.build-tmp.source.pong.java", "BodyUseAPI": [], "Fixed commit": "77d43c3f3757999086c33bd62afed6f7c840dc10", "Url": "https://api.github.com/repos/justijndepover/New-Media-Project", "Date": "2015-05-19T15:43:15Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mButtons[((mButtons.length) - 1)]) == button) { translation.addListener(new android.animation.Animator.AnimatorListener() { @java.lang.Override public void onAnimationStart(android.animation.Animator animation) { } @java.lang.Override public void onAnimationEnd(android.animation.Animator animation) { isShownAsTutorial = false; } @java.lang.Override public void onAnimationCancel(android.animation.Animator animation) { } @java.lang.Override public void onAnimationRepeat(android.animation.Animator animation) { } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/6891/buggy-version/presentation.src.main.java.com.jorge.boats.xkcd.navigation.NavigationLinearLayout.java", "BodyUseAPI": [], "Fixed commit": "10bc862669f341f7cacc2a8ba21e5baca25c0c93", "Url": "https://api.github.com/repos/stoyicker/boats-xkcd", "Date": "2016-03-18T21:04:33Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((meal.getRecipeIds().size()) == 0) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/327/buggy-version/DailyCookApp.src.main.java.com.vn.dailycookapp.restmodel.model.GetPlanMeal.java", "BodyUseAPI": [], "Fixed commit": "392edcadc603a81de081c94d7903abac40a91765", "Url": "https://api.github.com/repos/duyetpt/dailycook_restructe", "Date": "2015-11-10T10:09:18Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (GuessClass.difficulty.equals(\"medium\")) { (GuessClass.not_number)--; GuessClass.hasTyped[GuessClass.not_number] = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/9059/buggy-version/src.GuessClass.java", "BodyUseAPI": [], "Fixed commit": "72a4e03b8282cc07483bd0565876b5d878da225c", "Url": "https://api.github.com/repos/perryprog/GuessGame", "Date": "2015-06-25T17:43:14Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.earnCode) != null) { org.kuali.kpme.core.api.earncode.EarnCodeContract earnCode = getEarnCodeService().getEarnCode(this.earnCode, org.joda.time.LocalDate.now()); if ((earnCode != null) && (org.apache.commons.lang.StringUtils.isNotBlank(earnCode.getDescription()))) { return earnCode.getDescription(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/430/buggy-version/core.impl.src.main.java.org.kuali.kpme.core.earncode.group.EarnCodeGroupDefinitionBo.java", "BodyUseAPI": [], "Fixed commit": "123e9b7f165fbf082055e3a82972459984852bd9", "Url": "https://api.github.com/repos/kuali/kpme", "Date": "2014-07-22T16:02:40Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((c.getOrderForThisCargo()) == null) { throw new com.tsystems.javaschool.logiweb.service.exceptions.ServiceValidationException(\"Order for this cargo does not exist.\"); }else if ((c.getOrderForThisCargo().getStatus()) != (com.tsystems.javaschool.logiweb.model.status.OrderStatus.NOT_READY)) { throw new com.tsystems.javaschool.logiweb.service.exceptions.ServiceValidationException(\"Order must be in NOT READY status to add new cargo.\"); }else if ((c.getOrderForThisCargo().getAssignedTruck()) != null) { throw new com.tsystems.javaschool.logiweb.service.exceptions.ServiceValidationException(\"Order can't be assigned to Truck.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/6390/buggy-version/src.main.java.com.tsystems.javaschool.logiweb.service.impl.OrdersAndCargoServiceImpl.java", "BodyUseAPI": ["com.tsystems.javaschool.logiweb.model.Cargo.getOrderForThisCargo()", "c.getOrderForThisCargo().getStatus()", "c.getOrderForThisCargo().getAssignedTruck()", "com.tsystems.javaschool.logiweb.model.Cargo.getOrderForThisCargo()"], "Fixed commit": "ef58e98372618b0e69a82255c2e9014f6cceb911", "Url": "https://api.github.com/repos/AndrewBaliushin/JavaSchool", "Date": "2015-07-11T14:17:35Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (containsTag = true) { cards.add(card); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/1064/buggy-version/dhbwApp.src.wi2010d.dhbwapp.control.Create.java", "BodyUseAPI": [], "Fixed commit": "058fcd2c6381099a070e2c8b2dc291ce2058b090", "Url": "https://api.github.com/repos/BenediktBeuttler/dhbwApp", "Date": "2013-01-04T08:57:10Z"},
{"Line": "=>337", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jloda.util.Basic.stopCollectingStdErr()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((collected.length()) > 0) printStream.print(collected);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/8511/buggy-version/src.jloda.gui.message.MessageWindow.java", "BodyUseAPI": ["java.io.PrintStream.print(java.lang.String)"], "Fixed commit": "69c000ea4238ee6d7afe0d85afc58945807d4300", "Url": "https://api.github.com/repos/danielhuson/jloda", "Date": "2016-01-26T14:50:12Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((listOne.size()) != (listTwo.size())) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/3055/buggy-version/src.main.java.com.tenggyut.common.utils.ListUtils.java", "BodyUseAPI": [], "Fixed commit": "7df6bdfcd641ce31a33bd30f4bc9ac6083b3a387", "Url": "https://api.github.com/repos/tenggyut/java-tools", "Date": "2016-01-12T03:29:31Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (micdoodle8.mods.galacticraft.core.util.ConfigManagerCore.enableDebug) { for (java.lang.Object o : objList) { if (o instanceof java.lang.String[]) { for (java.lang.String s : ((java.lang.String[]) (o))) { java.lang.System.out.println(s); } }else { java.lang.System.out.println(o); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/8/buggy-version/src.main.java.micdoodle8.mods.galacticraft.core.dimension.SpaceRaceManager.java", "BodyUseAPI": [], "Fixed commit": "ffecbc8188c5e4614f378c4fc2f04e61b088a672", "Url": "https://api.github.com/repos/micdoodle8/Galacticraft", "Date": "2015-01-23T21:04:18Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((task) != null) task.cancel(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/838/buggy-version/src.org.qii.weiciyuan.ui.preference.SettingsFragment.java", "BodyUseAPI": [], "Fixed commit": "643a097f7a429162316a62e0289323fed3dadaf1", "Url": "https://api.github.com/repos/qii/weiciyuan", "Date": "2012-09-06T11:57:23Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.world.IBlockAccess.getTileEntity(int,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (te == null) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/8739/buggy-version/src.main.java.aroma1997.betterchests.BlockBChest.java", "BodyUseAPI": [], "Fixed commit": "78ef9ac82129f355d2aaed91ede193ea7fd78320", "Url": "https://api.github.com/repos/Aroma1997/BetterChests", "Date": "2014-08-20T16:55:59Z"},
{"Line": "=>370", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (intersections == null) { return new java.awt.Color(this.scene.getmBackGroundColor()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/6922/buggy-version/src.RayTracer.java", "BodyUseAPI": [], "Fixed commit": "888851c44daf58e23873a8c36e5f85bfd971802a", "Url": "https://api.github.com/repos/itaiyifrach/RayCasting", "Date": "2017-06-04T16:24:13Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.support.v4.app.RemoteInput.getResultsFromIntent(android.content.Intent)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (input == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/7090/buggy-version/infobip-mobile-messaging-android-interactive-sdk.src.main.java.org.infobip.mobile.messaging.interactive.notification.NotificationActionTapReceiver.java", "BodyUseAPI": [], "Fixed commit": "1b0cb072d0a29a21b0bf81b98c65aca76b6699a2", "Url": "https://api.github.com/repos/infobip/mobile-messaging-sdk-android", "Date": "2017-08-24T13:20:19Z"},
{"Line": "=>275", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.exist.dom.persistent.NodeImpl.getQName().getNamespaceURI()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (nsUri.equals(javax.xml.XMLConstants.NULL_NS_URI)) { return null; }else { return nsUri; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/3757/buggy-version/src.org.exist.dom.persistent.NodeImpl.java", "BodyUseAPI": [], "Fixed commit": "b5c3c5a7aed212fbe55f020de08c3b7bdfb4eedf", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2017-07-31T19:39:13Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((square.value) == 0) { java.lang.String valueInField = ((java.lang.String) (f.getValue())); if (!(valueInField.equals(\" \"))) { square.setValue(java.lang.Integer.valueOf(valueInField)); } java.lang.System.out.println(square.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/4844/buggy-version/src.com.roastlechon.games.sudoku.business.SolutionAlgorithm.java", "BodyUseAPI": [], "Fixed commit": "30b3a0649f586adb5d584837c1055d356ef3b58b", "Url": "https://api.github.com/repos/brian618/sudoku", "Date": "2015-11-29T05:09:41Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (parentService != null) code = parentService.getCode();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/5706/buggy-version/src.main.java.org.kesler.simplereg.gui.services.ServicesDialogController.java", "BodyUseAPI": ["org.kesler.simplereg.logic.Service.getCode()"], "Fixed commit": "b2caf2e4b4488350401c0a3536094b3cd320fb6b", "Url": "https://api.github.com/repos/alexkesler/simplereg", "Date": "2014-01-29T04:24:47Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.joelj.jcss.parse.CssUtils.indexOfNotQuoted(java.lang.String,char)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (openBracketIndex < 0) { if (cssSelector.isEmpty()) { return \"*\"; } return cssSelector; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/38/buggy-version/src.com.joelj.jcss.parse.CssUtils.java", "BodyUseAPI": [], "Fixed commit": "dc3501066bff3dbf8ae565b11ed163f397f05258", "Url": "https://api.github.com/repos/JoelJ/JCss", "Date": "2012-05-19T00:10:43Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ability instanceof mage.abilities.SpellAbility) { int count = game.getBattlefield().getAllActivePermanents(mage.abilities.keyword.AffinityForArtifactsAbility.filter, ability.getControllerId(), game).size(); if (count > 0) { mage.util.CardUtil.adjustCost(((mage.abilities.SpellAbility) (ability)), count); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/7999/buggy-version/Mage.src.mage.abilities.keyword.AffinityForArtifactsAbility.java", "BodyUseAPI": ["mage.abilities.Ability.getControllerId()", "game.getBattlefield().getAllActivePermanents(mage.filter.common.FilterControlledPermanent,ability.getControllerId(),mage.game.Game)", "game.getBattlefield().getAllActivePermanents(mage.abilities.keyword.AffinityForArtifactsAbility.filter, ability.getControllerId(), game).size()"], "Fixed commit": "469e9f3519201739437766a05055a89ddd7d6acf", "Url": "https://api.github.com/repos/magefree/mage", "Date": "2013-07-01T18:26:18Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.quickblox.q_municate.ui.adapters.chats.DialogsListAdapter.getItem(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!(baseActivity.checkNetworkAvailableWithError())) && (isFirstOpeningDialog(dialog.getDialogId()))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/3311/buggy-version/Q-municate_app.src.main.java.com.quickblox.q_municate.ui.fragments.chats.DialogsListFragment.java", "BodyUseAPI": [], "Fixed commit": "bc6510ebe971a91e1cda2b1e6f75e89d3ec6dece", "Url": "https://api.github.com/repos/QuickBlox/q-municate-android", "Date": "2016-02-02T10:20:12Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JOptionPane.showInputDialog(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (name != null) { if ((name.length()) > 20) name = name.substring(0, 20); Game.addHighScore(name, game.getScore()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/7907/buggy-version/src.GameControl.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "9095ba601a720df6781790c0a6022e9ab5d072f8", "Url": "https://api.github.com/repos/philippe554/DKEProject1Tetris", "Date": "2015-11-25T12:06:28Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["controller.FieldController.EndGameChecker()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (g.contains(\"end\")) { out_IP1.println(g); out_IP2.println(g); h = true; model.GameStarter.b = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/7899/buggy-version/Othello.src.model.GameStarter.java", "BodyUseAPI": ["java.io.PrintWriter.println(java.lang.String)", "java.io.PrintWriter.println(java.lang.String)"], "Fixed commit": "c40d965c79636d00a422d79c25e03aa319409e76", "Url": "https://api.github.com/repos/ZappaStefano/Othello_Zappa_Negri_Bonilla", "Date": "2017-06-05T16:28:12Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["controller.FieldController.EndGameChecker()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (g.contains(\"end\")) { out_IP1.println(g); out_IP2.println(g); h = true; model.GameStarter.b = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/7899/buggy-version/Othello.src.model.GameStarter.java", "BodyUseAPI": ["java.io.PrintWriter.println(java.lang.String)", "java.io.PrintWriter.println(java.lang.String)"], "Fixed commit": "c40d965c79636d00a422d79c25e03aa319409e76", "Url": "https://api.github.com/repos/ZappaStefano/Othello_Zappa_Negri_Bonilla", "Date": "2017-06-05T16:28:12Z"},
{"Line": "=>412", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (visitLevel.equalsIgnoreCase(\"location\")) { sg.setExtId((socialGroupPrefix + \"00\")); }else { sg.setExtId((socialGroupPrefix + \"01\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/2518/buggy-version/src.main.java.org.openhds.mobile.model.LocationVisit.java", "BodyUseAPI": [], "Fixed commit": "21d892ceb3c27d7af69bab3a186265e532b206c3", "Url": "https://api.github.com/repos/SwissTPH/openhds-tablet", "Date": "2016-07-19T15:59:42Z"},
{"Line": "=>4008", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isTerminal())) { mResultSet.reset(); branchingFactor = recursiveGreedyRollout(mResultSet, factor, moveWeights, playedMoves, cutoffDepth); if ((mResultSet.mChoosingRoleIndex) != (-1)) { setPropNetUsage(mResultSet.mState); setBasePropositionsFromState(mResultSet.mState, true); } rolloutDepth = rolloutStackDepth; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/3099/buggy-version/src.org.ggp.base.util.statemachine.implementation.propnet.forwardDeadReckon.ForwardDeadReckonPropnetStateMachine.java", "BodyUseAPI": [], "Fixed commit": "fdfa49dd207bb4e98a4812a59562a737eae8f0a3", "Url": "https://api.github.com/repos/SteveDraper/ggp-base", "Date": "2014-08-24T15:25:52Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (null == (request.getHeaders(HttpHeaders.ACCEPT_LANGUAGE))) { request.addHeader(HttpHeaders.ACCEPT_LANGUAGE, defaultDomain.getLocale()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/5101/buggy-version/src.main.java.io.sprucehill.zalando.api.service.AbstractService.java", "BodyUseAPI": ["io.sprucehill.zalando.api.service.HttpRequestBase.addHeader(HttpHeaders.ACCEPT_LANGUAGE,defaultDomain.getLocale())"], "Fixed commit": "7ebb499c7a54e54efdfe65ce8a054642661a257f", "Url": "https://api.github.com/repos/SpruceHillio/zalando-java-api-wrapper", "Date": "2015-09-28T11:40:26Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.team1540.quasarhelios.Igneous.getIsDisabled().get()) { yaw -= org.team1540.quasarhelios.DriveCode.centricAngleOffset.get(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/7495/buggy-version/QuasarHelios2015.src.org.team1540.quasarhelios.DriveCode.java", "BodyUseAPI": [], "Fixed commit": "8f0148cd54b8bb5c40f5c89d613e0af9ebbf810d", "Url": "https://api.github.com/repos/flamingchickens1540/quasar-helios-2015", "Date": "2015-01-26T19:33:34Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((_data.get(org.cxio.metadata.MetaDataElement.LAST_UPDATE)) != null) { return java.lang.Long.valueOf(((java.lang.String) (_data.get(org.cxio.metadata.MetaDataElement.LAST_UPDATE)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/5916/buggy-version/cxio.src.main.java.org.cxio.metadata.MetaDataElement.java", "BodyUseAPI": ["java.util.SortedMap<java.lang.String, java.lang.Object>.get(java.lang.String)", "java.lang.Long.valueOf(java.lang.Object)"], "Fixed commit": "6a571083beb36296f6d29976c7534b3f9bc23df8", "Url": "https://api.github.com/repos/cytoscape/cxio", "Date": "2015-10-08T18:51:29Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((_data.get(org.cxio.metadata.MetaDataElement.ID_COUNTER)) != null) { return java.lang.Long.valueOf(((java.lang.String) (_data.get(org.cxio.metadata.MetaDataElement.ID_COUNTER)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/5916/buggy-version/cxio.src.main.java.org.cxio.metadata.MetaDataElement.java", "BodyUseAPI": ["java.util.SortedMap<java.lang.String, java.lang.Object>.get(java.lang.String)", "java.lang.Long.valueOf(java.lang.Object)"], "Fixed commit": "6a571083beb36296f6d29976c7534b3f9bc23df8", "Url": "https://api.github.com/repos/cytoscape/cxio", "Date": "2015-10-08T18:51:29Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((_data.get(org.cxio.metadata.MetaDataElement.CONSISTENCY_GROUP)) != null) { return java.lang.Long.valueOf(((java.lang.String) (_data.get(org.cxio.metadata.MetaDataElement.CONSISTENCY_GROUP)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/5916/buggy-version/cxio.src.main.java.org.cxio.metadata.MetaDataElement.java", "BodyUseAPI": ["java.util.SortedMap<java.lang.String, java.lang.Object>.get(java.lang.String)", "java.lang.Long.valueOf(java.lang.Object)"], "Fixed commit": "6a571083beb36296f6d29976c7534b3f9bc23df8", "Url": "https://api.github.com/repos/cytoscape/cxio", "Date": "2015-10-08T18:51:29Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((_data.get(org.cxio.metadata.MetaDataElement.ELEMENT_COUNT)) != null) { return java.lang.Long.valueOf(((java.lang.String) (_data.get(org.cxio.metadata.MetaDataElement.ELEMENT_COUNT)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/5916/buggy-version/cxio.src.main.java.org.cxio.metadata.MetaDataElement.java", "BodyUseAPI": ["java.lang.Long.valueOf(java.lang.Object)", "java.util.SortedMap<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Fixed commit": "6a571083beb36296f6d29976c7534b3f9bc23df8", "Url": "https://api.github.com/repos/cytoscape/cxio", "Date": "2015-10-08T18:51:29Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (view == null) throw new java.lang.NullPointerException(\"view cann't be null\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/7803/buggy-version/Android-Scrap.app.src.main.java.org.heaven7.scrap.core.BaseScrapView.java", "BodyUseAPI": [], "Fixed commit": "24c1288568a586feba8c8905b6c2e63487132b0f", "Url": "https://api.github.com/repos/LightSun/android-scrap", "Date": "2015-08-05T10:22:05Z"},
{"Line": "=>412", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(freeExploration)) { storyLineManager.getBeaconManager().disconnect(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/5383/buggy-version/MuseeDesOndes.app.src.main.java.com.example.nspace.museedesondes.MapActivity.java", "BodyUseAPI": [], "Fixed commit": "a2428d5e54361e62b3d4d556ec00bc897284413d", "Url": "https://api.github.com/repos/mv740/390-E-Wok", "Date": "2016-03-16T18:11:44Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dirtyFlag.exits()) dirtyFlag.open(); else { dirtyFlag.create(); dirtyFlag.clearDirty(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/7429/buggy-version/core.src.main.java.com.orientechnologies.orient.core.storage.impl.local.paginated.OLocalPaginatedStorage.java", "BodyUseAPI": ["com.orientechnologies.orient.core.storage.impl.local.paginated.OPaginatedStorageDirtyFlag.open()", "com.orientechnologies.orient.core.storage.impl.local.paginated.OPaginatedStorageDirtyFlag.create()", "com.orientechnologies.orient.core.storage.impl.local.paginated.OPaginatedStorageDirtyFlag.clearDirty()"], "Fixed commit": "dfbfd098b5c2bd5403ee9497f28b94d772001a12", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2014-06-12T13:33:31Z"},
{"Line": "=>546", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (root)) { originToScreen = root.localToScreen(0, 0); }else { originToScreen = this.localToScreen(0, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/6048/buggy-version/src.main.java.org.dockfx.DockPane.java", "BodyUseAPI": [], "Fixed commit": "e1f119737cd5bd1445624fda81febc5007cda677", "Url": "https://api.github.com/repos/SamCooper/DockFX", "Date": "2016-11-02T09:05:18Z"},
{"Line": "=>519", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (pane.getChildrenList().isEmpty()) { if ((root) == pane) { this.getChildren().remove(((javafx.scene.Node) (pane))); root = null; } }else if ((((pane.getChildrenList().size()) == 1) && (pane instanceof org.dockfx.pane.ContentTabPane)) && ((pane.getChildrenList().get(0)) instanceof org.dockfx.DockNode)) { java.util.List<javafx.scene.Node> children = pane.getChildrenList(); javafx.scene.Node sibling = children.get(0); org.dockfx.pane.ContentPane contentParent = pane.getContentParent(); contentParent.set(((javafx.scene.Node) (pane)), sibling); ((org.dockfx.DockNode) (sibling)).tabbedProperty().setValue(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/6048/buggy-version/src.main.java.org.dockfx.DockPane.java", "BodyUseAPI": ["pane.getChildrenList().size()", "org.dockfx.pane.ContentPane.getContentParent()", "pane.getChildrenList().get(int)", "org.dockfx.pane.ContentPane.getChildrenList()", "org.dockfx.pane.ContentPane.getChildrenList()", "org.dockfx.pane.ContentPane.getChildrenList()"], "Fixed commit": "e1f119737cd5bd1445624fda81febc5007cda677", "Url": "https://api.github.com/repos/SamCooper/DockFX", "Date": "2016-11-02T09:05:18Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.graphiti.mm.algorithms.Text.getFont()", "org.eclipse.graphiti.mm.algorithms.Text.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if ((value != null) && (font != null)) { org.eclipse.graphiti.datatypes.IDimension textSize = org.eclipse.graphiti.ui.services.GraphitiUi.getUiLayoutService().calculateTextSize(value, font); if (textSize != null) { width = textSize.getWidth(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/620/buggy-version/DND.src.edu.teco.dnd.graphiti.DNDLayoutBlockFeature.java", "BodyUseAPI": ["org.eclipse.graphiti.ui.services.GraphitiUi.getUiLayoutService().calculateTextSize(java.lang.String,org.eclipse.graphiti.mm.algorithms.styles.Font)"], "Fixed commit": "da69f1205666882463953d38374e08e2d014866d", "Url": "https://api.github.com/repos/DesignAndDeploy/dnd", "Date": "2013-08-14T11:28:36Z"},
{"Line": "=>661", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.riddenByEntity) == var1) var1.mountEntity(null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/1844/buggy-version/src.main.java.micdoodle8.mods.galacticraft.core.entities.EntityBuggy.java", "BodyUseAPI": ["net.minecraft.entity.player.EntityPlayer.mountEntity(<nulltype>)"], "Fixed commit": "c850f617565859df2a3505cad9710de074180c07", "Url": "https://api.github.com/repos/micdoodle8/Galacticraft", "Date": "2017-03-19T00:09:42Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (TreeRoot.p.equals(PointToGet)) return TreeRoot.p;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/285/buggy-version/KdTree.src.KdTree.java", "BodyUseAPI": [], "Fixed commit": "a8d6070dcc92b6a7226ec95eb40ee087ed611eba", "Url": "https://api.github.com/repos/abhishekbhardwaj007/Algorithms", "Date": "2013-11-09T14:04:21Z"},
{"Line": "=>332", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(p.isDead())) { p.teleport(com.endercrest.colorcube.game.SettingsManager.getInstance().getSpawnPoint(id, i)); clearInv(p); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/5626/buggy-version/src.main.java.com.endercrest.colorcube.game.Game.java", "BodyUseAPI": ["org.bukkit.entity.Player.teleport(com.endercrest.colorcube.game.SettingsManager.getInstance().getSpawnPoint(id, i))", "com.endercrest.colorcube.game.Game.clearInv(org.bukkit.entity.Player)"], "Fixed commit": "3669d1aa86da246b232805eba344f097451f477d", "Url": "https://api.github.com/repos/endercrest/ColorCube", "Date": "2015-01-06T06:29:45Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (base != null) { is.setSystemId(base); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/4492/buggy-version/src.com.xmlcalabash.model.Parser.java", "BodyUseAPI": ["org.xml.sax.InputSource.setSystemId(java.lang.String)"], "Fixed commit": "3fb5315ca50282cf19fa90e2370ba62120c323de", "Url": "https://api.github.com/repos/rdeltour/xmlcalabash1", "Date": "2014-08-25T23:18:43Z"},
{"Line": "=>392", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.alibaba.otter.canal.parse.inbound.mysql.MysqlEventParser.findAsPerTimestampInSpecificLogFile(com.alibaba.otter.canal.parse.inbound.mysql.MysqlConnection,long,com.alibaba.otter.canal.protocol.position.EntryPosition,fixedPosition.getJournalName())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (entryPosition == null) { throw new com.alibaba.otter.canal.parse.exception.CanalParseException((((\"[fixed timestamp] can't found begin/commit position before with fixed position\" + (fixedPosition.getJournalName())) + \":\") + (fixedPosition.getPosition()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/6664/buggy-version/parse.src.main.java.com.alibaba.otter.canal.parse.inbound.mysql.MysqlEventParser.java", "BodyUseAPI": [], "Fixed commit": "912f5db2c70eece6263e84e9f0c8316798d1955b", "Url": "https://api.github.com/repos/yakirChen/canal", "Date": "2017-12-08T15:20:15Z"},
{"Line": "=>455", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mRefreshHeaderContainer) != null) { mRefreshHeaderContainer.setVisibility((mLoadMoreEnabled ? android.view.View.VISIBLE : android.view.View.GONE)); mRefreshHeaderContainer.getLayoutParams().height = (mLoadMoreEnabled) ? ViewGroup.LayoutParams.WRAP_CONTENT : 0; mRefreshHeaderContainer.requestLayout(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/541/buggy-version/EasyRecyclerView.src.main.java.cc.easyandroid.easyrecyclerview.EasyRecyclerView.java", "BodyUseAPI": [], "Fixed commit": "c2952daa375183b47921485f567e1821ae703713", "Url": "https://api.github.com/repos/cgpllx/EasyRecyclerView", "Date": "2016-07-28T08:40:15Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(hasNext())) { throw new java.util.NoSuchElementException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/1128/buggy-version/src.org.kered.dko.SelectFromOAI.java", "BodyUseAPI": [], "Fixed commit": "5f14443f74a103e4830e4a91d10d3c5416f17e49", "Url": "https://api.github.com/repos/salynch/DKO", "Date": "2015-07-08T13:22:18Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.getIntent().getStringExtra(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (mode.equals(\"rider\")) { setFragment(riderSummaryFragment); }else if (mode.equals(\"driver\")) { setFragment(driverSummaryFragment); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/4443/buggy-version/CloudyCar.app.src.main.java.com.cloudycrew.cloudycar.SummaryActivity.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "4cceaf18d79d853225c6823a3625b1a86f438ae8", "Url": "https://api.github.com/repos/CMPUT301F16T12/CloudyCar", "Date": "2016-11-24T05:10:37Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((parsetempuser.get(\"uri\").toString()) != null) td.profileUri = parsetempuser.get(\"uri\").toString();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/441/buggy-version/app.src.main.java.com.arish.trend.CurrentTrendsActivity.java", "BodyUseAPI": ["com.parse.ParseUser.get(java.lang.String)", "parsetempuser.get(\"uri\").toString()"], "Fixed commit": "043734cec9ca6d67684296b5af1e827b5f0a6f0f", "Url": "https://api.github.com/repos/amitkma/Trend", "Date": "2016-01-27T12:10:43Z"},
{"Line": "=>322", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.mtransit.android.data.DataSourceType.parseId(java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (type != null) { org.mtransit.android.data.AgencyProperties agency = org.mtransit.android.data.DataSourceManager.findAgencyProperties(context, authority, type, isRTS); if (agency != null) { if (isRTS) { agency.setLogo(org.mtransit.android.data.DataSourceManager.findAgencyRTSRouteLogo(context, authority)); } addNewAgency(agency); }else { org.mtransit.android.commons.MTLog.w(this, \"Invalid agency '%s'!\", authority); } }else { org.mtransit.android.commons.MTLog.w(this, \"Invalid type for ID '%s', skipping agency provider '%s'!\", typeId, authority); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/1583/buggy-version/src.org.mtransit.android.data.DataSourceProvider.java", "BodyUseAPI": ["org.mtransit.android.data.DataSourceManager.findAgencyProperties(android.content.Context,java.lang.String,org.mtransit.android.data.DataSourceType,boolean)"], "Fixed commit": "381ef8583258b40a55283e6d3ab7553c589c54cb", "Url": "https://api.github.com/repos/fraga/mtransit-for-android", "Date": "2015-03-09T13:57:52Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(config.hasPath(org.apache.drill.exec.ExecConstants.USER_AUTHENTICATOR_IMPL))) { throw new org.apache.drill.exec.exception.DrillbitStartupException(java.lang.String.format(\"BOOT option '%s' is missing in config.\", org.apache.drill.exec.ExecConstants.USER_AUTHENTICATOR_IMPL)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/1557/buggy-version/exec.java-exec.src.main.java.org.apache.drill.exec.rpc.user.security.UserAuthenticatorFactory.java", "BodyUseAPI": [], "Fixed commit": "e6daf9fe43b0e7febb49d9d4e138f1bfd1572826", "Url": "https://api.github.com/repos/sohami/drill", "Date": "2017-02-28T07:28:14Z"},
{"Line": "=>408", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (path.startsWith(alluxio.underfs.swift.SwiftUnderFileSystem.PATH_SEPARATOR)) { return stripPrefixIfPresent(path, alluxio.underfs.swift.SwiftUnderFileSystem.PATH_SEPARATOR); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/6458/buggy-version/underfs.swift.src.main.java.alluxio.underfs.swift.SwiftUnderFileSystem.java", "BodyUseAPI": ["alluxio.underfs.swift.SwiftUnderFileSystem.stripPrefixIfPresent(java.lang.String,java.lang.String)"], "Fixed commit": "428a61956ce09dd85ec690cbf6d68513d15ea812", "Url": "https://api.github.com/repos/ErgeSun/alluxio", "Date": "2016-04-11T15:36:28Z"},
{"Line": "=>356", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fThreads == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/4377/buggy-version/src.com.feilimb.vbgeofinder.VBGeoFinder.java", "BodyUseAPI": [], "Fixed commit": "441cf2640588bac8dc83d83085eab3c7ad788487", "Url": "https://api.github.com/repos/feilimb/vbGeoFinder", "Date": "2015-02-16T12:15:35Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["global.Mysql.mysqlCount(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (count2 == 0) { global.ConsoleColor.out((\"De balance moet toegevoegd worden van de coin: \" + cointag)); insertBalance(exchangeID, cointag, balance, pending, available); }else if (count == 1) { global.ConsoleColor.out(((\"Balance data moet geupdate worden van coin: \" + cointag) + \".\")); balanceUpdater(exchangeID, cointag, balance, pending, available); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/2058/buggy-version/src.main.java.privateRouter.BalanceSaver.java", "BodyUseAPI": [], "Fixed commit": "682af7d9e6530eaa01a50d2bf765a453664bf98c", "Url": "https://api.github.com/repos/softwareTeamB/clientServerMaven", "Date": "2017-10-15T14:57:43Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (position < 0) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/4818/buggy-version/src.main.java.cofh.lib.gui.element.ElementListBox.java", "BodyUseAPI": [], "Fixed commit": "487ab499af1e367e1d45a8971a4a3fc98f19f760", "Url": "https://api.github.com/repos/CoFH/CoFHLib", "Date": "2015-07-29T23:06:36Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sender.getData()) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/154/buggy-version/common.src.com.hixi_hyi.idumo.common.handler.SimpleRommbaCommandHandler.java", "BodyUseAPI": [], "Fixed commit": "8c28ba4b61a7426be67ff373c6a48a2d0cc62ebe", "Url": "https://api.github.com/repos/hixi-hyi/IDUMO", "Date": "2011-12-25T15:15:40Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.hixi_hyi.idumo.core.Sender.getData()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (data == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/154/buggy-version/console.src.com.hixi_hyi.idumo.console.receiptor.SerialSendReceiptor.java", "BodyUseAPI": [], "Fixed commit": "8c28ba4b61a7426be67ff373c6a48a2d0cc62ebe", "Url": "https://api.github.com/repos/hixi-hyi/IDUMO", "Date": "2011-12-25T15:15:40Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.cidic.design.service.UserService.createUser(com.cidic.design.model.User)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (result == (com.cidic.design.util.ResponseCodeUtil.UESR_CREATE_EXIST)) { resultModel.setResultCode(300); resultModel.setSuccess(false); resultModel.setMessage(\"\u7528\u6237\u5df2\u7ecf\u5b58\u5728!\"); }else { resultModel.setResultCode(200); resultModel.setSuccess(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/5955/buggy-version/src.main.java.com.cidic.design.controller.UserController.java", "BodyUseAPI": [], "Fixed commit": "6309eaa376d66148daefe50734e5a874206f152e", "Url": "https://api.github.com/repos/zyhndesign/DesignCompetition", "Date": "2017-05-17T01:25:04Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getNode().getHolder().world()) != null) { super.update(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/2088/buggy-version/src.main.java.com.raoulvdberge.refinedstorage.tile.TileNode.java", "BodyUseAPI": [], "Fixed commit": "c8def986776bbed95b524b5bf40c15862ee63f81", "Url": "https://api.github.com/repos/way2muchnoise/refinedstorage", "Date": "2017-02-03T16:29:17Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["MineProxy.DL_BUKKIT.matcher(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (dl_bukkit.matches()) { java.lang.System.out.println(\"Bukkit Fix\"); data = mineshafter.proxy.MineProxyHandler.getRequest(url); }else { java.lang.System.out.println(\"No handler. Piping.\"); try { if ((!(url.startsWith(\"http://\"))) && (!(url.startsWith(\"https://\")))) { url = \"http://\" + url; } java.net.URL u = new java.net.URL(url); if (method.equals(\"CONNECT\")) { int port = u.getPort(); if (port == (-1)) port = 80; java.net.Socket sock = new java.net.Socket(u.getHost(), port); mineshafter.util.Streams.pipeStreamsActive(sock.getInputStream(), this.toClient); mineshafter.util.Streams.pipeStreamsActive(this.connection.getInputStream(), sock.getOutputStream()); }else if (method.equals(\"GET\")) { java.net.HttpURLConnection c = ((java.net.HttpURLConnection) (u.openConnection(java.net.Proxy.NO_PROXY))); c.setRequestMethod(\"GET\"); for (java.lang.String k : headers.keySet()) { c.setRequestProperty(k, headers.get(k)); } java.lang.String res = (((\"HTTP/1.0 \" + (c.getResponseCode())) + \" \") + (c.getResponseMessage())) + \"\\r\\n\"; res += \"Connection: close\\r\\nProxy-Connection: close\\r\\n\"; java.util.Map<java.lang.String, java.util.List<java.lang.String>> h = c.getHeaderFields(); for (java.lang.String k : h.keySet()) { if (((k == null) || (k.equalsIgnoreCase(\"Connection\"))) || (k.equalsIgnoreCase(\"Proxy-Connection\"))) continue; java.util.List<java.lang.String> vals = h.get(k); for (java.lang.String v : vals) { res += ((k + \": \") + v) + \"\\r\\n\"; } } res += \"\\r\\n\"; this.toClient.writeBytes(res); int size = mineshafter.util.Streams.pipeStreams(c.getInputStream(), this.toClient); this.toClient.close(); this.connection.close(); java.lang.System.out.println((\"Piping finished, data size: \" + size)); }else if (method.equals(\"HEAD\")) { java.net.HttpURLConnection c = ((java.net.HttpURLConnection) (u.openConnection(java.net.Proxy.NO_PROXY))); c.setRequestMethod(\"HEAD\"); for (java.lang.String k : headers.keySet()) { c.setRequestProperty(k, headers.get(k)); } java.lang.String res = (((\"HTTP/1.0 \" + (c.getResponseCode())) + \" \") + (c.getResponseMessage())) + \"\\r\\n\"; res += \"Proxy-Connection: close\\r\\n\"; java.util.Map<java.lang.String, java.util.List<java.lang.String>> h = c.getHeaderFields(); for (java.lang.String k : h.keySet()) { if (k == null) continue; java.util.List<java.lang.String> vals = h.get(k); for (java.lang.String v : vals) { res += ((k + \": \") + v) + \"\\r\\n\"; } } res += \"\\r\\n\"; this.toClient.writeBytes(res); this.toClient.close(); this.connection.close(); }else { java.lang.System.out.println((\"UNEXPECTED REQUEST TYPE: \" + method)); } } catch (java.lang.Exception e) { e.printStackTrace(); } return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/4624/buggy-version/src.mineshafter.proxy.MineProxyHandler.java", "BodyUseAPI": [], "Fixed commit": "d667e8c24f7ddb97c10b2936e9832b829b025504", "Url": "https://api.github.com/repos/KayoticSully/Mineshafter-Squared-Proxy", "Date": "2012-03-12T06:45:24Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.frameworkium.config.SystemProperty.GRID_URL.isSpecified()) { com.frameworkium.config.drivers.ElectronImpl.remoteURL = new java.net.URL(com.frameworkium.config.SystemProperty.GRID_URL.getValue()); }else { com.frameworkium.config.drivers.ElectronImpl.remoteURL = new java.net.URL(\"http://localhost:9515\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/6918/buggy-version/src.main.java.com.frameworkium.config.drivers.ElectronImpl.java", "BodyUseAPI": [], "Fixed commit": "2da94cf7dcf090518c624f0ece22ec395316456c", "Url": "https://api.github.com/repos/Frameworkium/frameworkium-core", "Date": "2015-11-23T11:13:08Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((declareNode) != null) { declareNode.cancel(true); declareNode = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/8527/buggy-version/indexr-server.src.main.java.io.indexr.server.IndexRNode.java", "BodyUseAPI": [], "Fixed commit": "a79587ac0919f4d5fe281388a0923afe275abe92", "Url": "https://api.github.com/repos/shunfei/indexr", "Date": "2017-01-06T07:10:20Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sead.acr.common.utilities.json.JSONObject.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((child instanceof java.lang.String) && (\"\".equals(child.toString()))) { return result; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/4124/buggy-version/SEAD-VA-extensions.services.bagItRestService.src.main.java.org.seadva.bagit.util.AcrQueryUtil.java", "BodyUseAPI": [], "Fixed commit": "427cf096091b42e8deec5d1e0de4ca2591d8ab85", "Url": "https://api.github.com/repos/Data-to-Insight-Center/sead-virtual-archive", "Date": "2014-09-09T21:09:30Z"},
{"Line": "=>459", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((path.length) < 4) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/3776/buggy-version/core.src.main.java.com.crawljax.core.state.StateFlowGraph.java", "BodyUseAPI": [], "Fixed commit": "b6fc5671402a7c76526328e16cf14b96201d813f", "Url": "https://api.github.com/repos/team-l2c2-cjproject/crawljax", "Date": "2013-03-30T06:03:04Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((t.getType()) == \"empty\") && ((this.getDepth()) >= 1)) || (((this.getType()) == \"empty\") && ((t.getDepth()) >= 1))) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/5076/buggy-version/Compiler_ww424.src.compiler_ww424.Type.java", "BodyUseAPI": [], "Fixed commit": "f7d4abec1b2d533f4fdd88e1f7e07d11373a4ce6", "Url": "https://api.github.com/repos/jpw234/Compilers", "Date": "2016-03-19T15:36:09Z"},
{"Line": "=>301", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (mediaRs != null) mediaRs.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/7055/buggy-version/src.main.java.net.easymodo.asagi.SQL.java", "BodyUseAPI": ["java.sql.ResultSet.close()"], "Fixed commit": "ea3b9c27a3524300c5f2394839d25fc73de974d4", "Url": "https://api.github.com/repos/eksopl/asagi", "Date": "2012-05-30T18:16:05Z"},
{"Line": "=>898", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getErrorCode()) == (com.heroku.eclipse.core.services.exceptions.HerokuServiceException.SECURE_STORE_ERROR)) { org.eclipse.jface.dialogs.MessageDialog.openError(getShell(), com.heroku.eclipse.ui.messages.Messages.getString(\"Heroku_Common_Error_SecureStoreInvalid_Title\"), com.heroku.eclipse.ui.messages.Messages.getString(\"Heroku_Common_Error_SecureStoreInvalid\")); }else { com.heroku.eclipse.ui.utils.HerokuUtils.herokuError(getShell(), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/1634/buggy-version/com.heroku.eclipse.ui.src.com.heroku.eclipse.ui.views.HerokuApplicationManagerViewPart.java", "BodyUseAPI": ["com.heroku.eclipse.ui.utils.HerokuUtils.herokuError(org.eclipse.swt.widgets.Shell,com.heroku.eclipse.core.services.exceptions.HerokuServiceException)"], "Fixed commit": "a0de969953f3b14e452604456bc309e7bdffecd8", "Url": "https://api.github.com/repos/heroku/heroku-eclipse-plugin", "Date": "2012-07-20T11:05:48Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.openapi.vfs.VirtualFile.getParent()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (parent == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/8964/buggy-version/src.consulo.javaee.jsp.psi.impl.java.psi.JspClassImpl.java", "BodyUseAPI": [], "Fixed commit": "779fc24e7bd5f5fb34dde2e40bf6cf4180aae130", "Url": "https://api.github.com/repos/consulo/consulo-javaee", "Date": "2017-06-30T09:23:15Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (alarm.isEmpty()) { alarm = \"0\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/266/buggy-version/thermospy-android.app.src.main.java.com.luan.thermospy.android.fragments.Alarm.java", "BodyUseAPI": [], "Fixed commit": "29d4eb9387cdb89b7674ac2305b335254b07e9f3", "Url": "https://api.github.com/repos/ludwigandersson/thermospy", "Date": "2015-02-09T20:20:47Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fileNameTemp.equals(\"\\\"\")) || (fileNameTemp.equals(\"\\\"\\\"\"))) throw new hu.petert.lab3.SyntaxException();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/881/buggy-version/Lab3.src.hu.petert.lab3.Helper.java", "BodyUseAPI": [], "Fixed commit": "da07eab8cdf2a0efdc46a1cadd5da86e052fa21c", "Url": "https://api.github.com/repos/petert37/Prog3_Lab", "Date": "2015-09-22T14:02:54Z"},
{"Line": "=>308", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gcEngine.Access().getLocation(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (loc == null) android.widget.Toast.makeText(this, ((\"Location: \" + id) + \" was not found\"), Toast.LENGTH_LONG).show(); else onLocationChanged(loc);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/4470/buggy-version/app.src.main.java.ca.mixitmedia.ghostcatcher.app.MainActivity.java", "BodyUseAPI": ["ca.mixitmedia.ghostcatcher.app.MainActivity.onLocationChanged(ca.mixitmedia.ghostcatcher.experience.gcLocation)"], "Fixed commit": "aa3b61e470d35295d2fc200c6437ddcfc3b265a7", "Url": "https://api.github.com/repos/MHDante/ghostCatcherAndroid", "Date": "2014-07-14T19:43:12Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["refinedstorage.container.ContainerGrid.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (slot == (craftingResultSlot)) { ((refinedstorage.tile.grid.TileGrid) (grid)).onCraftedShift(this, player); }else if ((((grid.getGridHandler()) != null) && (slot != (patternResultSlot))) && (!(slot instanceof refinedstorage.container.SlotSpecimenLegacy))) { slot.putStack(grid.getGridHandler().onInsert(slot.getStack())); detectAndSendChanges(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/7447/buggy-version/src.main.java.refinedstorage.container.ContainerGrid.java", "BodyUseAPI": ["net.minecraft.inventory.Slot.putStack(grid.getGridHandler().onInsert(slot.getStack()))", "grid.getGridHandler().onInsert(slot.getStack())", "net.minecraft.inventory.Slot.getStack()"], "Fixed commit": "d5d98a5584fb4c4bb329bb2d31cdda66907db851", "Url": "https://api.github.com/repos/raoulvdberge/refinedstorage", "Date": "2016-07-19T22:32:48Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((selectedParticipants) != null) { for (model.SocketThread skt : selectedParticipants) { try { skt.send(m); skt.terminate(); } catch (java.io.IOException e) { e.printStackTrace(); } } participants.removeAll(selectedParticipants); insert(m); }else { disconnectAll(); insert(m); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/4884/buggy-version/JavaChat.src.model.Conversation.java", "BodyUseAPI": [], "Fixed commit": "cec3b71c97dde6751d3e9905f7326366e4014344", "Url": "https://api.github.com/repos/johwic/OOPK-Project", "Date": "2014-04-30T11:29:45Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["framework.scuba.domain.CstFactory.lift(framework.scuba.domain.MemNode)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (term.isTrue()) return framework.scuba.domain.CstFactory.trueExpr;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/4507/buggy-version/src.framework.scuba.domain.CstFactory.java", "BodyUseAPI": [], "Fixed commit": "4b6b1bbde935b46ccdb804512b9336b77b9f632c", "Url": "https://api.github.com/repos/xwangsd/Scuba", "Date": "2014-08-29T04:05:25Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (context != null) { com.fasterxml.jackson.databind.JsonNode dataNode = context.get(\"data\"); if (dataNode != null) { java.lang.String dataJson = context.get(\"data\").asText(); com.fasterxml.jackson.databind.ObjectMapper om = new com.fasterxml.jackson.databind.ObjectMapper(); try { toolbox.common.workflow.engine.scripting.ActiveRecord activeRecord = om.readValue(dataJson, toolbox.common.workflow.engine.scripting.ActiveRecord.class); scriptEngine.put(\"record\", activeRecord); } catch (java.io.IOException e) { log.warn(\"execution has no binding for variable record\"); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/6077/buggy-version/src.main.java.toolbox.common.workflow.engine.SimpleExecutionContext.java", "BodyUseAPI": ["com.fasterxml.jackson.databind.JsonNode.get(java.lang.String)", "com.fasterxml.jackson.databind.JsonNode.get(java.lang.String)", "context.get(\"data\").asText()"], "Fixed commit": "2abb559d295325e881cda0caba7395c56b8c6085", "Url": "https://api.github.com/repos/perrywang/LiteWorkflow", "Date": "2016-09-26T09:51:14Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (spaceSummary.getWiki().equals(wiki.getWikiId())) { result.add(spaceSummary); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/168/buggy-version/plugins.org.xwiki.eclipse.storage.src.main.java.org.xwiki.eclipse.storage.LocalXWikiDataStorage.java", "BodyUseAPI": ["java.util.List<org.xwiki.eclipse.model.XWikiEclipseSpaceSummary>.add(org.xwiki.eclipse.model.XWikiEclipseSpaceSummary)"], "Fixed commit": "2bd358cdd038c1991eba20556bc8e87088b6a1b0", "Url": "https://api.github.com/repos/junhan/xwiki-eclipse", "Date": "2011-08-04T03:04:48Z"},
{"Line": "=>818", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((pageSummary.getWiki().equals(spaceSummary.getWiki())) && (pageSummary.getSpace().equals(spaceSummary.getName()))) { result.add(pageSummary); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/168/buggy-version/plugins.org.xwiki.eclipse.storage.src.main.java.org.xwiki.eclipse.storage.LocalXWikiDataStorage.java", "BodyUseAPI": ["java.util.List<org.xwiki.eclipse.model.XWikiEclipsePageSummary>.add(org.xwiki.eclipse.model.XWikiEclipsePageSummary)"], "Fixed commit": "2bd358cdd038c1991eba20556bc8e87088b6a1b0", "Url": "https://api.github.com/repos/junhan/xwiki-eclipse", "Date": "2011-08-04T03:04:48Z"},
{"Line": "=>440", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.javascript.rhino.Node.getParent()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (parent.isMemberFunctionDef()) { }else { parent.addChildBefore(buildInstrumentationStatement(node.getLineno()), node); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/2524/buggy-version/src.main.java.jscover.instrument.NodeProcessor.java", "BodyUseAPI": ["com.google.javascript.rhino.Node.addChildBefore(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node)"], "Fixed commit": "e73f4e519d9f1b760c981be834a9640adcd26884", "Url": "https://api.github.com/repos/tntim96/JSCover", "Date": "2017-08-04T11:48:08Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (check != (-1)) { bWatP.setText(java.lang.Integer.toString(check)); swatP.setText(java.lang.Integer.toString(check)); }else { bWatP.setText(\"N/A\"); swatP.setText(\"N/A\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/7376/buggy-version/SpaceTrader.src.spacetrader.UniverseController.java", "BodyUseAPI": ["javafx.scene.control.Label.setText(java.lang.String)", "java.lang.Integer.toString(int)", "javafx.scene.control.Label.setText(java.lang.String)", "java.lang.Integer.toString(int)"], "Fixed commit": "ea81202771b68953138cd1f6dc2eab751140e338", "Url": "https://api.github.com/repos/38DaysLater/SpaceTrader", "Date": "2014-09-30T00:55:21Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["spacetrader.Singleton.getUniverse().getCurrentPlanet(0, 0).getMarket().getInventory().getItemPrice(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (check != (-1)) { bfoodP.setText(java.lang.Integer.toString(check)); sfoodP.setText(java.lang.Integer.toString(check)); }else { bfoodP.setText(\"N/A\"); sfoodP.setText(\"N/A\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/7376/buggy-version/SpaceTrader.src.spacetrader.UniverseController.java", "BodyUseAPI": ["javafx.scene.control.Label.setText(java.lang.String)", "java.lang.Integer.toString(int)", "java.lang.Integer.toString(int)", "javafx.scene.control.Label.setText(java.lang.String)"], "Fixed commit": "ea81202771b68953138cd1f6dc2eab751140e338", "Url": "https://api.github.com/repos/38DaysLater/SpaceTrader", "Date": "2014-09-30T00:55:21Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cOnGoingStroll) { cg.group4.view.screen_mechanics.ScreenStore.getInstance().addScreen(\"Stroll\", new cg.group4.view.screen.StrollScreen()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/3502/buggy-version/view.src.cg.group4.view.screen.HomeScreen.java", "BodyUseAPI": [], "Fixed commit": "cdda6f96634a9dbad009ce052f28366e2d46846b", "Url": "https://api.github.com/repos/foresterre/ctxp", "Date": "2015-06-22T22:20:49Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.time.LocalTime.parse(bookingDto.getStartTime())", "java.time.LocalTime.parse(roomService.findByIdTransactional(bookingDto.getRoomId()).getWorkingHoursStart())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (dateStartTimeWorking.equals(startTime)) { isValid = true; }else if ((dateStartTimeWorking.isBefore(startTime)) && (dateEndTimeWorking.isAfter(startTime))) { isValid = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/5780/buggy-version/src.main.java.ua.softserveinc.tc.validator.TimeValidatorImpl.java", "BodyUseAPI": ["java.time.LocalTime.isAfter(java.time.LocalTime)", "java.time.LocalTime.isBefore(java.time.LocalTime)"], "Fixed commit": "ca114a1025236ff69d5896ba214e5a9ec0a51d82", "Url": "https://api.github.com/repos/koldovsky/kids-room", "Date": "2017-02-23T20:33:59Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState == null) { getSupportFragmentManager().beginTransaction().add(R.id.content, com.mikescamell.sharedelementtransitions.picasso_fragment_to_fragment.PicassoFragmentA.newInstance()).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/4190/buggy-version/app.src.main.java.com.mikescamell.sharedelementtransitions.picasso_fragment_to_fragment.PicassoFragmentToFragmentActivity.java", "BodyUseAPI": [], "Fixed commit": "77d3e682ce766664b61154e856c858695b05d3eb", "Url": "https://api.github.com/repos/jonathan-caryl/shared-element-transitions", "Date": "2017-03-03T16:42:35Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState == null) { getSupportFragmentManager().beginTransaction().add(R.id.content, com.mikescamell.sharedelementtransitions.glide_fragment_to_fragment.GlideFragmentA.newInstance()).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/4190/buggy-version/app.src.main.java.com.mikescamell.sharedelementtransitions.glide_fragment_to_fragment.GlideFragmentToFragmentActivity.java", "BodyUseAPI": [], "Fixed commit": "77d3e682ce766664b61154e856c858695b05d3eb", "Url": "https://api.github.com/repos/jonathan-caryl/shared-element-transitions", "Date": "2017-03-03T16:42:35Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isSelected) { l.setForeground(com.intellij.openapi.editor.colors.EditorColorsManager.getInstance().getSchemeForCurrentUITheme().getDefaultForeground()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/8760/buggy-version/src.net.offbeatpioneer.intellij.plugins.grav.editor.ValueEnteredTableCellRenderer.java", "BodyUseAPI": [], "Fixed commit": "66037fc7be6b909cf5e52f77617019e052bd3bbd", "Url": "https://api.github.com/repos/PioBeat/GravSupport", "Date": "2017-08-15T20:35:03Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.averageMonthlyRainfall.length) >= 12) throw new java.lang.IllegalArgumentException(\"All the months are filled with information\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/6471/buggy-version/City.java", "BodyUseAPI": [], "Fixed commit": "2c33b4d32adc66fb52ca00c31956b2cb9aaa6c6b", "Url": "https://api.github.com/repos/bhnxmm/src", "Date": "2017-12-23T14:51:48Z"},
{"Line": "=>376", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<java.lang.String>.iterator()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (valueIterator.hasNext()) { rgbVal = ((java.lang.String) (valueIterator.next())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/2790/buggy-version/src.rgbtopng.RGBtoPNG.java", "BodyUseAPI": ["java.util.Iterator.next()"], "Fixed commit": "5c98bd3baf52aa139798f6cfc9f83a441bc3aac8", "Url": "https://api.github.com/repos/caffeineandfoxes/RGBtoPNG", "Date": "2016-02-15T16:50:04Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((Client.replicas.size()) < 1) { java.lang.System.out.println(\"No replica servers found, treating master server as a replica\"); Client.replicas.add(servers.get(0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/3136/buggy-version/Client.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "03b3bfc0d97d417b357ed1f59eedc6241bec4acb", "Url": "https://api.github.com/repos/chandravadans/DistributedFS", "Date": "2014-03-29T06:39:59Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["RegistryInterface.getFileServers()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((servers.size()) < 1) { java.lang.System.out.println(\"FATAL! No servers registered with the registry server. Exiting..\"); java.lang.System.exit(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/3136/buggy-version/Client.java", "BodyUseAPI": [], "Fixed commit": "03b3bfc0d97d417b357ed1f59eedc6241bec4acb", "Url": "https://api.github.com/repos/chandravadans/DistributedFS", "Date": "2014-03-29T06:39:59Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["okhttp3.Request.header(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((authorizationHeader != null) && (authorizationHeader.startsWith(\"Digest\"))) { android.util.Log.w(com.burgstaller.okhttp.digest.DigestAuthenticator.TAG, \"previous digest authentication failed, returning null\"); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/4045/buggy-version/src.main.java.com.burgstaller.okhttp.digest.DigestAuthenticator.java", "BodyUseAPI": [], "Fixed commit": "4393b639717b84357de04d0351afb26c7b7290f7", "Url": "https://api.github.com/repos/rburgst/okhttp-digest", "Date": "2016-04-11T07:06:23Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (j.has(\"error\")) { if (reportBack) dataListener.noDataAvailable(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/6152/buggy-version/DeltionRooster.src.main.java.nl.deltionmobiel.rooster.Data.java", "BodyUseAPI": [], "Fixed commit": "0726bf446a5073cb6011637e0731396c98389fea", "Url": "https://api.github.com/repos/cornedor/mayhem", "Date": "2014-06-09T13:48:58Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["negotiator.boaframework.NegotiationSession.getDiscountFactor()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (d == 0) d = 1.0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/1290/buggy-version/NegotiationAgent.src.negotiator.group7.Group7_BS.java", "BodyUseAPI": [], "Fixed commit": "cc139b5918a24de66d18e46dfa7c969e9d322300", "Url": "https://api.github.com/repos/tomrunia/negotiation-project", "Date": "2014-02-04T06:00:42Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (span >= (bases.length)) return new java.lang.String(bases);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/6040/buggy-version/src.main.java.net.sf.cram.structure.Slice.java", "BodyUseAPI": [], "Fixed commit": "e62646cda957dcabbb845b348434c6cda7157ee6", "Url": "https://api.github.com/repos/enasequence/cramtools", "Date": "2015-04-17T17:00:19Z"},
{"Line": "=>532", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.exasol.adapter.dialects.impl.SqlSelectList.getExpressions()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (expressionList != null) { for (com.exasol.adapter.dialects.impl.SqlNode expression : expressionList) { if (nodeRequiresCast(expression)) { requiresCasts = true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/360/buggy-version/jdbc-adapter.virtualschema-jdbc-adapter.src.main.java.com.exasol.adapter.dialects.impl.OracleSqlGenerationVisitor.java", "BodyUseAPI": [], "Fixed commit": "199733d5652f481186ec126643baef057a3b6f20", "Url": "https://api.github.com/repos/natasha-pel/virtual-schemas", "Date": "2017-02-09T09:28:43Z"},
{"Line": "=>451", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(paramString.isEmpty())) { url += \"&\" + paramString; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/7883/buggy-version/src.main.java.com.gds.report.CronHelper.java", "BodyUseAPI": [], "Fixed commit": "c460d0914227cf775bb6c008e2b47a84d28a027c", "Url": "https://api.github.com/repos/adexbn/gds_report", "Date": "2015-06-12T09:22:58Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (effectiveEvents == null) { effectiveEvents = new java.util.ArrayList<com.microsoft.azure.eventhubs.EventData>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/1618/buggy-version/azure-eventhubs-eph.src.main.java.com.microsoft.azure.eventprocessorhost.EventHubPartitionPump.java", "BodyUseAPI": [], "Fixed commit": "7b2cdb0499dd7e1747334ba6f17352ebc9621c91", "Url": "https://api.github.com/repos/SreeramGarlapati/azure-event-hubs-java", "Date": "2017-03-02T21:23:13Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.github.hexocraft.worldrestorer.WorldRestorer.config.useMetrics) super.RunMetrics(delay);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/8864/buggy-version/src.main.java.com.github.hexocraft.worldrestorer.WorldRestorer.java", "BodyUseAPI": [], "Fixed commit": "c8e76ffe50d1cc71b5fc17b92ece1def88332826", "Url": "https://api.github.com/repos/HexoCraft/WorldRestorer", "Date": "2017-04-03T11:05:17Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["buildcraft.api.power.IPowerReceptor.getPowerReceiver(ForgeDirection.DOWN)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (rec == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/443/buggy-version/samoht2401.universalwire.system.System.java", "BodyUseAPI": [], "Fixed commit": "358f3e7a7b307db7df48c49882f67604d047253a", "Url": "https://api.github.com/repos/samoht2401/UniversalWire", "Date": "2013-07-25T19:02:33Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((timerTask) != null) { timerTask._enableStats = false; timerTask.resetStats(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/6371/buggy-version/esper.src.main.java.com.espertech.esper.timer.TimerServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "f98cc6b09d3c428d29cab17bdc7683131c71fdb5", "Url": "https://api.github.com/repos/espertechinc/esper", "Date": "2015-08-17T11:56:43Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((timerTask) != null) { timerTask._enableStats = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/6371/buggy-version/esper.src.main.java.com.espertech.esper.timer.TimerServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "f98cc6b09d3c428d29cab17bdc7683131c71fdb5", "Url": "https://api.github.com/repos/espertechinc/esper", "Date": "2015-08-17T11:56:43Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((listFG.getSelectedValue()) != null) { de.jattyv.jcapi.client.gui.cell.FG fg = ((de.jattyv.jcapi.client.gui.cell.FG) (listFG.getSelectedValue())); if ((fg.getType()) == (de.jattyv.jcapi.client.gui.cell.FG.FG_TYPE_FRIEND)) { java.util.LinkedList<java.lang.String> messages = window.getHandler().getMessages(fg.getTitle()); for (java.lang.String message : messages) { addMessage(fg.getTitle(), message); } }else if ((fg.getType()) == (de.jattyv.jcapi.client.gui.cell.FG.FG_TYPE_GROUP)) { java.util.LinkedList<java.lang.String> messages = window.getHandler().getGroupMessages(fg.getId()); for (java.lang.String message : messages) { addMessage(fg.getTitle(), message); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/7207/buggy-version/src.main.java.de.jattyv.desktop.gui.cards.ChatCard.java", "BodyUseAPI": ["javax.swing.JList.getSelectedValue()"], "Fixed commit": "ac8fd71e42d2bd363488cd63a8c0a124e2db79d1", "Url": "https://api.github.com/repos/Lixja/jattyv-chat-desktop", "Date": "2017-02-21T12:40:32Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (triggerList.isEmpty()) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/5490/buggy-version/src.se.hal.struct.TriggerFlow.java", "BodyUseAPI": [], "Fixed commit": "09651491e3bb7ec015f8efd5cee48f9c94cc99d7", "Url": "https://api.github.com/repos/Ziver/hal", "Date": "2017-03-16T16:00:52Z"},
{"Line": "=>344", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(hasVarArgs)) && (size != (this.formals.size()))) throw new org.rascalmpl.interpreter.staticErrors.ArgumentsMismatchError(\"Non-var-args function with 1 or more formal arguments called with 0 actual arguments\", ctx.getCurrentAST());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/5023/buggy-version/src.org.rascalmpl.interpreter.result.RascalFunction.java", "BodyUseAPI": [], "Fixed commit": "7c02612a219fd410a9a3fb999eed273561ff592f", "Url": "https://api.github.com/repos/cwi-swat/rascal", "Date": "2012-11-28T17:21:11Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (throwOnError) { throw new java.lang.Exception(\"error replacing argument, argument not present in instruction\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/8200/buggy-version/src.ir.base.NaryInstruction.java", "BodyUseAPI": [], "Fixed commit": "d5e902b3aed37009967ddca2c8dee32fc9278c42", "Url": "https://api.github.com/repos/BrianBelleville/optimizing-compiler", "Date": "2014-02-10T23:03:39Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(player.capabilities.isCreativeMode)) { player.inventory.mainInventory[player.inventory.currentItem] = null; ((net.minecraft.entity.player.EntityPlayerMP) (player)).mcServer.getConfigurationManager().syncPlayerInventory(((net.minecraft.entity.player.EntityPlayerMP) (player))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/3610/buggy-version/common.enhancedportals.item.ItemPortalModifierUpgrade.java", "BodyUseAPI": [], "Fixed commit": "43c116dcccc2f82ac9dc7a6a51e603009ee786e0", "Url": "https://api.github.com/repos/ShadedDimension/enhanced-portals", "Date": "2013-06-09T19:06:03Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isSeriesDisabled(name)) { return psiprobe.beans.stats.listeners.AbstractThresholdListener.DEFAULT_THRESHOLD; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/1332/buggy-version/core.src.main.java.psiprobe.beans.stats.listeners.AbstractThresholdListener.java", "BodyUseAPI": [], "Fixed commit": "27b16e4330622122523d9982274162ffb9902bb0", "Url": "https://api.github.com/repos/psi-probe/psi-probe", "Date": "2016-12-28T05:44:03Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.min(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (lostPackets != 0) { com.github.dreamrec.EEGDataProvider.log.warn(((((\"Lost packet!!! Packet number = \" + (packetNumber)) + \"; \") + lostPackets) + \"packets were lost\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/8050/buggy-version/src.com.github.dreamrec.EEGDataProvider.java", "BodyUseAPI": ["org.apache.commons.logging.Log.warn(java.lang.String)"], "Fixed commit": "abd46b8c2dd8e675754399eae2a22cb417505eb8", "Url": "https://api.github.com/repos/Alvw/dreamrec", "Date": "2012-05-15T15:06:41Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getClient().getDimStorages(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((storages != null) && (!(storages.isEmpty()))) { for (java.lang.String storage : storages) { if (!(storage.isEmpty())) { sb.append(storage).append(\"\\n\"); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/6699/buggy-version/lens-cli.src.main.java.org.apache.lens.cli.commands.LensDimensionTableCommands.java", "BodyUseAPI": [], "Fixed commit": "261c2a5347d43f7c9731c3080686d34663ef252e", "Url": "https://api.github.com/repos/Amareshwari/incubator-lens", "Date": "2015-03-20T05:35:55Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (views != null) { if ((views.size()) > 0) { au.org.intersect.faims.android.ui.view.ICustomView firstView = views.get(0); if ((firstView instanceof au.org.intersect.faims.android.ui.view.CustomCheckBoxGroup) || (firstView instanceof au.org.intersect.faims.android.ui.view.ICustomFileView)) { au.org.intersect.faims.android.beanshell.AttributeHelper.AttributeViewGroup.setAttribute(linker, attribute, firstView, ignoreAnnotation, ignoreCertainty); }else if ((views.size()) > i) { au.org.intersect.faims.android.ui.view.ICustomView view = views.get(i); au.org.intersect.faims.android.beanshell.AttributeHelper.AttributeViewGroup.setAttribute(linker, attribute, view, ignoreAnnotation, ignoreCertainty); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/8276/buggy-version/faims-android-app.src.au.org.intersect.faims.android.beanshell.AttributeHelper.java", "BodyUseAPI": ["java.util.List<au.org.intersect.faims.android.ui.view.ICustomView>.size()", "java.util.List<au.org.intersect.faims.android.ui.view.ICustomView>.get(int)", "java.util.List<au.org.intersect.faims.android.ui.view.ICustomView>.get(int)", "java.util.List<au.org.intersect.faims.android.ui.view.ICustomView>.size()"], "Fixed commit": "a0cd0131ddf01f80cabdc7f429ba0f370b9f8902", "Url": "https://api.github.com/repos/IntersectAustralia/faims-android", "Date": "2014-08-13T03:49:21Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((net.blay09.mods.bmc.api.BetterMinecraftChatAPI.getChatChannel(\"*\", false)) != null) { channel.setTargetTabName(\"*\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/2722/buggy-version/src.main.java.net.blay09.mods.bmc.twitchintegration.handler.TwitchManager.java", "BodyUseAPI": [], "Fixed commit": "91289a1957080ad2e26353cef0f1cfecae2c35d6", "Url": "https://api.github.com/repos/blay09/TwitchIntegration", "Date": "2016-05-26T22:26:07Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.lang3.StringUtils.join(java.lang.String[],char,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (message.startsWith(\"/me \")) { message = message.substring(4); twitchChatHandler.onActionMessage(twitchClient, args[0], twitchChatHandler.getThisUser(twitchClient), message); }else { twitchChatHandler.onChatMessage(twitchClient, args[0], twitchChatHandler.getThisUser(twitchClient), message); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/2722/buggy-version/src.main.java.net.blay09.mods.bmc.twitchintegration.CommandTwitch.java", "BodyUseAPI": ["net.blay09.mods.bmc.twitchintegration.handler.TwitchChatHandler.onChatMessage(net.blay09.javatmi.TMIClient,java.lang.String,twitchChatHandler.getThisUser(twitchClient),java.lang.String)", "java.lang.String.substring(int)"], "Fixed commit": "91289a1957080ad2e26353cef0f1cfecae2c35d6", "Url": "https://api.github.com/repos/blay09/TwitchIntegration", "Date": "2016-05-26T22:26:07Z"},
{"Line": "=>318", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (a == null) a = new java.util.Date(java.lang.Long.MIN_VALUE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/5992/buggy-version/src.RSSReader.java", "BodyUseAPI": [], "Fixed commit": "59f1a4c066dfd7f46e6817b69497cd11fd396d0d", "Url": "https://api.github.com/repos/abacon/rssReader", "Date": "2013-04-17T20:24:02Z"},
{"Line": "=>320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (b == null) b = new java.util.Date(java.lang.Long.MIN_VALUE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/5992/buggy-version/src.RSSReader.java", "BodyUseAPI": [], "Fixed commit": "59f1a4c066dfd7f46e6817b69497cd11fd396d0d", "Url": "https://api.github.com/repos/abacon/rssReader", "Date": "2013-04-17T20:24:02Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(locationCheckBox.isChecked())) { confirmPageIntent.putExtra(\"Zipcode\", locationText.getText().toString()); }else { ZipCode = com.parse.ParseUser.getCurrentUser().getString(\"postalCode\"); if (((ZipCode) != null) && (!(ZipCode.equals(\"\")))) { confirmPageIntent.putExtra(\"Zipcode\", ZipCode); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/5635/buggy-version/app.src.main.java.com.example.cse110mb260t14.ffs.SellTab.java", "BodyUseAPI": [], "Fixed commit": "f4709acb8c036c31af8e75be219456c6170902cf", "Url": "https://api.github.com/repos/ucsdCSE110wi16/CSE110M260T14", "Date": "2016-03-07T04:32:53Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ZipCode.equals(\"\")) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/5635/buggy-version/app.src.main.java.com.example.cse110mb260t14.ffs.SellTab.java", "BodyUseAPI": [], "Fixed commit": "f4709acb8c036c31af8e75be219456c6170902cf", "Url": "https://api.github.com/repos/ucsdCSE110wi16/CSE110M260T14", "Date": "2016-03-07T04:32:53Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((checkCallingOrSelfPermission(\"com.sonelli.juicessh.api.v1.permission.READ_CONNECTIONS\")) == (android.content.pm.PackageManager.PERMISSION_GRANTED)) { getSupportLoaderManager().initLoader(0, null, new com.sonelli.juicessh.performancemonitor.loaders.ConnectionListLoader(this, spinnerAdapter)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/2475/buggy-version/Plugin.src.main.java.com.sonelli.juicessh.performancemonitor.activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "c22a1626a4a64a638ac8239337381177c8003b49", "Url": "https://api.github.com/repos/bobpattersonjr/juicessh-performancemonitor", "Date": "2014-09-21T20:05:36Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((window.table.getSelectedColumn()) != (-1)) && ((window.table.getSelectedRow()) != (-1))) { java.lang.String columnName = window.table.getColumnName(window.table.getSelectedColumn()); if (columnName == \"Date\") columnName = \"Year\"; window.inputList.filterBy(((javax.swing.table.DefaultTableModel) (window.table.getModel())), columnName, ((java.lang.String) (window.table.getValueAt(window.table.getSelectedRow(), window.table.getSelectedColumn())))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/480/buggy-version/src.main.guiFrames.MainFrame.java", "BodyUseAPI": ["javax.swing.JTable.getModel()", "javax.swing.JTable.getSelectedColumn()", "javax.swing.JTable.getSelectedColumn()", "main.guiFrames.RefineTable.filterBy(javax.swing.table.TableModel,java.lang.String,java.lang.Object)", "javax.swing.JTable.getSelectedRow()", "javax.swing.JTable.getValueAt(int,int)", "javax.swing.JTable.getColumnName(int)"], "Fixed commit": "df13a26dcd7c6e72e0b7875ff015ca4b8fafcf7b", "Url": "https://api.github.com/repos/TechnionYP5777/Info-Evaluation", "Date": "2017-01-14T14:37:22Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (feature != null) { return feature; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/777/buggy-version/containers.pax-exam-container-eclipse.src.main.java.org.ops4j.pax.exam.container.eclipse.impl.CombinedSource.java", "BodyUseAPI": [], "Fixed commit": "327266475a2d6fc0f7d5a32654e2740bfa11c049", "Url": "https://api.github.com/repos/ops4j/org.ops4j.pax.exam2", "Date": "2017-10-06T09:09:21Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (entry.hasName()) { com.google.gdata.data.extensions.Name contactName = entry.getName(); if (contactName.hasFullName()) { java.lang.String fullNameToDisplay = contactName.getFullName().getValue(); if (name.equals(fullNameToDisplay)) { return new java.net.URL(entry.getId()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/2930/buggy-version/EnhRick.src.com.noiraak.enhrick.google.GoogleContactsService.java", "BodyUseAPI": ["com.google.gdata.data.contacts.ContactEntry.getName()", "com.google.gdata.data.contacts.ContactEntry.getId()"], "Fixed commit": "2df083abbf98378635f041eb614cbd6cdc0d1379", "Url": "https://api.github.com/repos/Raak/EnhRick", "Date": "2014-08-16T22:09:12Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (mail != null) { mail = mail.toLowerCase().trim(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/9060/buggy-version/src.com.tt.mariage.server.LoginServiceImpl.java", "BodyUseAPI": ["java.lang.String.toLowerCase()", "java.lang.String.trim()"], "Fixed commit": "65d82da70527a9d13b5461a4323f00e2a75c6b60", "Url": "https://api.github.com/repos/thoratou/mariagett", "Date": "2012-12-29T10:21:36Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (mail != null) { mail = mail.toLowerCase().trim(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/9060/buggy-version/src.com.tt.mariage.server.RegisterServiceImpl.java", "BodyUseAPI": ["java.lang.String.trim()", "java.lang.String.toLowerCase()"], "Fixed commit": "65d82da70527a9d13b5461a4323f00e2a75c6b60", "Url": "https://api.github.com/repos/thoratou/mariagett", "Date": "2012-12-29T10:21:36Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (mail != null) { mail = mail.toLowerCase().trim(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/9060/buggy-version/src.com.tt.mariage.server.RetrieveServiceImpl.java", "BodyUseAPI": ["java.lang.String.trim()", "java.lang.String.toLowerCase()"], "Fixed commit": "65d82da70527a9d13b5461a4323f00e2a75c6b60", "Url": "https://api.github.com/repos/thoratou/mariagett", "Date": "2012-12-29T10:21:36Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["iRequest.authorization.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((authParts.length) != 2) { sendAuthorizationRequest(iRequest, iResponse); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/1211/buggy-version/server.src.main.java.com.orientechnologies.orient.server.network.protocol.http.command.OServerCommandAuthenticatedServerAbstract.java", "BodyUseAPI": [], "Fixed commit": "9558ef5619b4f20f54a3ddb9797b33dadc6b2d81", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2015-05-22T13:59:25Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.dougqh.jak.disassembler.JvmInputStream.head()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((this.headPos) == (head.length)) { this.removeHead(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/3812/buggy-version/net.dougqh.jak.jvm.disassembler.src.net.dougqh.jak.disassembler.JvmInputStream.java", "BodyUseAPI": [], "Fixed commit": "fbfa2ce94d9d8e91a0a31dda88a273642dda79a1", "Url": "https://api.github.com/repos/dougqh/JAK", "Date": "2012-09-20T01:56:27Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((activity.getDayIndicator()) != null) { dayIndicator = activity.getDayIndicator().toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/617/buggy-version/src.main.java.edu.ucdavis.dss.ipa.services.jpa.JpaActivityService.java", "BodyUseAPI": ["edu.ucdavis.dss.ipa.entities.Activity.getDayIndicator()", "activity.getDayIndicator().toString()"], "Fixed commit": "63fd2335bd65cf5b901acfb8fc8840d83874073c", "Url": "https://api.github.com/repos/ucdavis/ipa-web", "Date": "2017-05-04T17:44:18Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((activity.getStartTime()) != null) { startTime = activity.getStartTime().toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/617/buggy-version/src.main.java.edu.ucdavis.dss.ipa.services.jpa.JpaActivityService.java", "BodyUseAPI": ["edu.ucdavis.dss.ipa.entities.Activity.getStartTime()", "activity.getStartTime().toString()"], "Fixed commit": "63fd2335bd65cf5b901acfb8fc8840d83874073c", "Url": "https://api.github.com/repos/ucdavis/ipa-web", "Date": "2017-05-04T17:44:18Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((activity.getEndTime()) != null) { endTime = activity.getEndTime().toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/617/buggy-version/src.main.java.edu.ucdavis.dss.ipa.services.jpa.JpaActivityService.java", "BodyUseAPI": ["activity.getEndTime().toString()", "edu.ucdavis.dss.ipa.entities.Activity.getEndTime()"], "Fixed commit": "63fd2335bd65cf5b901acfb8fc8840d83874073c", "Url": "https://api.github.com/repos/ucdavis/ipa-web", "Date": "2017-05-04T17:44:18Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((((dwActivity.getSsrmeet_bldg_code()) == null) || ((dwActivity.getSsrmeet_bldg_code().length()) > 0)) || ((dwActivity.getSsrmeet_room_code()) == null)) || ((dwActivity.getSsrmeet_room_code().length()) > 0)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/617/buggy-version/src.main.java.edu.ucdavis.dss.ipa.services.jpa.JpaActivityService.java", "BodyUseAPI": [], "Fixed commit": "63fd2335bd65cf5b901acfb8fc8840d83874073c", "Url": "https://api.github.com/repos/ucdavis/ipa-web", "Date": "2017-05-04T17:44:18Z"},
{"Line": "=>1415", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(contentSpec.getPublicanCfg().contains(\"condition:\"))) { final java.lang.String condition = specTopic.getConditionStatement(true); org.jboss.pressgang.ccms.contentspec.builder.utils.DocbookBuildUtilities.processConditionalStatements(condition, doc); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/5899/buggy-version/src.main.java.org.jboss.pressgang.ccms.contentspec.builder.DocbookBuilder.java", "BodyUseAPI": [], "Fixed commit": "ceb3c9925326604bc24698432526890ee1a0d356", "Url": "https://api.github.com/repos/pressgang-ccms/PressGangCCMSBuilder", "Date": "2013-02-08T00:39:15Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getType()) == (((mekhq.campaign.parts.equipment.AmmoBin) (replacement)).getType())) { actualReplacement = replacement.clone(); }else { actualReplacement = new mekhq.campaign.parts.equipment.AmmoBin(getUnitTonnage(), getType(), getEquipmentNum(), getFullShots(), isOneShot(), isOmniPodded(), campaign); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/2601/buggy-version/MekHQ.src.mekhq.campaign.parts.equipment.MissingAmmoBin.java", "BodyUseAPI": [], "Fixed commit": "354d87921ebb20db68f2388fdcace3d534c09d62", "Url": "https://api.github.com/repos/MegaMek/mekhq", "Date": "2017-09-29T15:44:33Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.openflexo.connie.binding.BindingValueListChangeListener.getDataBinding().toString().equals(\"data.selectedDocumentElements\")) { java.lang.System.out.println((\">>>>>>>>>> fireChange for \" + (org.openflexo.connie.binding.BindingValueListChangeListener.getDataBinding().toString()))); java.lang.System.out.println((\"newValue=\" + newValue)); java.lang.System.out.println((\"lastNotifiedValue=\" + (lastNotifiedValue))); java.lang.System.out.println((\"lastKnownValues=\" + (lastKnownValues))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/2478/buggy-version/connie-core.src.main.java.org.openflexo.connie.binding.BindingValueListChangeListener.java", "BodyUseAPI": [], "Fixed commit": "93a909b8d40f81b0ab778b11fedfd9748d38c62d", "Url": "https://api.github.com/repos/openflexo-team/connie", "Date": "2015-09-24T08:25:03Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.servicecomb.config.archaius.sources.AbstractConfigLoader.loadData(java.net.URL)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (config == null) { config = new java.util.LinkedHashMap<>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/2590/buggy-version/foundations.foundation-config.src.main.java.io.servicecomb.config.archaius.sources.AbstractConfigLoader.java", "BodyUseAPI": [], "Fixed commit": "2a8e267f756efb1e429eb5b7e7b87ed48a68b8b8", "Url": "https://api.github.com/repos/wujimin/java-chassis", "Date": "2017-08-22T02:43:17Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(canRefresh)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/7393/buggy-version/src.com.custom.widget.PullToRefreshListView.java", "BodyUseAPI": [], "Fixed commit": "be0d8e34dfb58807c35fb8789f7ce51e2070b3bd", "Url": "https://api.github.com/repos/Jayin/XPullToRefreshListView", "Date": "2014-01-22T14:02:07Z"},
{"Line": "=>453", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (net.minecraftforge.common.ForgeHooks.onTravelToDimension(this.thePlayer, transferDimension)) { net.minecraft.server.MinecraftServer server = net.minecraftforge.fml.common.FMLCommonHandler.instance().getMinecraftServerInstance(); com.legacy.aether.world.TeleporterAether teleporter = new com.legacy.aether.world.TeleporterAether(shouldSpawnPortal, server.worldServerForDimension(transferDimension)); for (net.minecraft.entity.Entity passenger : this.thePlayer.getPassengers()) { com.legacy.aether.player.PlayerAether.transferEntity(shouldSpawnPortal, passenger, server.worldServerForDimension(previousDimension), server.worldServerForDimension(transferDimension)); passenger.dismountRidingEntity(); } server.getPlayerList().transferPlayerToDimension(((net.minecraft.entity.player.EntityPlayerMP) (this.thePlayer)), transferDimension, teleporter); if ((this.thePlayer.getRidingEntity()) != null) { com.legacy.aether.player.PlayerAether.transferEntity(shouldSpawnPortal, this.thePlayer.getRidingEntity(), server.worldServerForDimension(previousDimension), server.worldServerForDimension(transferDimension)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/7084/buggy-version/src.main.java.com.legacy.aether.player.PlayerAether.java", "BodyUseAPI": ["server.getPlayerList().transferPlayerToDimension(net.minecraft.entity.player.EntityPlayer,int,com.legacy.aether.world.TeleporterAether)", "com.legacy.aether.player.PlayerAether.transferEntity(boolean,this.thePlayer.getRidingEntity(),server.worldServerForDimension(previousDimension),server.worldServerForDimension(transferDimension))", "com.legacy.aether.player.PlayerAether.transferEntity(boolean,net.minecraft.entity.Entity,server.worldServerForDimension(previousDimension),server.worldServerForDimension(transferDimension))", "net.minecraft.entity.player.EntityPlayer.getRidingEntity()", "net.minecraft.entity.player.EntityPlayer.getPassengers()", "net.minecraft.server.MinecraftServer.worldServerForDimension(int)", "net.minecraft.server.MinecraftServer.worldServerForDimension(int)", "net.minecraft.server.MinecraftServer.worldServerForDimension(int)", "net.minecraft.entity.player.EntityPlayer.getRidingEntity()"], "Fixed commit": "9b8540a79ee5986b9ebfaab718e91b62f459718c", "Url": "https://api.github.com/repos/Modding-Legacy/Aether-Legacy", "Date": "2017-12-26T03:43:23Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lastChar == '.') { point.setEnabled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/3172/buggy-version/Calc.src.ru.ifmo.mobdev.loboda.calc.MyActivity.java", "BodyUseAPI": [], "Fixed commit": "d74e7ae9ddd4a8f303b91cb136aa02e4be7f9ee0", "Url": "https://api.github.com/repos/oskol-it/lesson4", "Date": "2013-10-10T16:27:03Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((friendId != null) && (!(friendId.isEmpty()))) { number++; java.lang.System.out.println((friendId + \"\")); java.lang.PublicMethods.insertRelationshipSql(conUser, java.lang.Long.parseLong(friendId), userId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/2559/buggy-version/src.swarm.GetRelationship.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)", "java.lang.Long.parseLong(java.lang.String)", "java.lang.PublicMethods.insertRelationshipSql(java.sql.Connection,long,java.lang.Long)"], "Fixed commit": "91f35c7c197c11e137fa80cef31274d18dc77ecb", "Url": "https://api.github.com/repos/iswangheng/Sina-Weibo-Crawler-based-on-V2", "Date": "2011-11-20T05:40:03Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (((old != null) && (old instanceof java.util.Map)) && (v instanceof java.util.Map)) { ((java.util.Map<java.lang.String, java.lang.Object>) (old)).putAll(((java.util.Map<java.lang.String, java.lang.Object>) (v))); }else { map.put(key, v); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/1210/buggy-version/src.main.java.tigase.conf.ConfigWriter.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,java.lang.Object)"], "Fixed commit": "a100d0e1c2533f9050e46784e900702e799e3335", "Url": "https://api.github.com/repos/KZax1l/server", "Date": "2017-06-29T07:16:38Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((buffer.amount) < 0) { buffer.amount = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/7673/buggy-version/src.main.java.mekanism.common.EnergyNetwork.java", "BodyUseAPI": [], "Fixed commit": "91d323ccdd1ebeb3c3320a787b6942c5af243dfc", "Url": "https://api.github.com/repos/TehStoneMan/Mekanism", "Date": "2015-04-10T22:41:12Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((buffer.amount) < 0) buffer.amount = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/7673/buggy-version/src.main.java.mekanism.common.multipart.PartUniversalCable.java", "BodyUseAPI": [], "Fixed commit": "91d323ccdd1ebeb3c3320a787b6942c5af243dfc", "Url": "https://api.github.com/repos/TehStoneMan/Mekanism", "Date": "2015-04-10T22:41:12Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((node.poi) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/8777/buggy-version/KNN.src.VQuadTree.Tree.java", "BodyUseAPI": [], "Fixed commit": "5830df239651b1385c0d14fc73073b35a27c5df2", "Url": "https://api.github.com/repos/udbhav-sharma/Hadoop-Workspace", "Date": "2015-05-06T16:31:38Z"},
{"Line": "=>250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (name.isEmpty()) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/8058/buggy-version/dal-dao-gen.src.main.java.com.ctrip.platform.dal.daogen.resource.GenTaskByFreeSqlResource.java", "BodyUseAPI": [], "Fixed commit": "2b8fecc59a9ac7a102657c8da9ab95460f108774", "Url": "https://api.github.com/repos/ctripcorp/dal", "Date": "2017-02-17T09:18:23Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (paramsTypes != null) { for (int i = 1; i <= (paramsTypes.length); i++) { if ((paramsTypes[(i - 1)]) == 10001) { stat.setObject(i, mockedVals[(i - 1)], java.sql.Types.CHAR); }else { stat.setObject(i, mockedVals[(i - 1)], paramsTypes[(i - 1)]); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/8058/buggy-version/dal-dao-gen.src.main.java.com.ctrip.platform.dal.daogen.sql.validate.SQLValidation.java", "BodyUseAPI": ["java.sql.PreparedStatement.setObject(int,java.lang.Object,int)"], "Fixed commit": "2b8fecc59a9ac7a102657c8da9ab95460f108774", "Url": "https://api.github.com/repos/ctripcorp/dal", "Date": "2017-02-17T09:18:23Z"},
{"Line": "=>327", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == (getCurrentTab())) { tv_tab_title.setTextSize(TypedValue.COMPLEX_UNIT_PX, mSelectedTextSize); }else { tv_tab_title.setTextSize(TypedValue.COMPLEX_UNIT_PX, mTextsize); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/2003/buggy-version/FlycoTabLayout_Lib.src.main.java.com.flyco.tablayout.SlidingTabLayout.java", "BodyUseAPI": [], "Fixed commit": "1afbeb9c2dddab8a913ed432307dd384a67d4dde", "Url": "https://api.github.com/repos/TokenYc/FlycoTabLayout", "Date": "2017-07-10T06:35:04Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (metrics == null) { throw new java.lang.IllegalArgumentException(\"null metric definition list\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/1228/buggy-version/main.src.main.java.io.novaordis.databot.task.SourceQueryTask.java", "BodyUseAPI": [], "Fixed commit": "31d13bc07358b806a1bb25dbfca62324a69e0bff", "Url": "https://api.github.com/repos/NovaOrdis/databot", "Date": "2017-07-13T21:01:47Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (config != null) { command.add(config.getRawLocation().toOSString()); process(command); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/8509/buggy-version/plugins.de.ovgu.featureide.core.featurecpp.src.de.ovgu.featureide.featurecpp.wrapper.FeatureCppWrapper.java", "BodyUseAPI": ["config.getRawLocation().toOSString()", "org.eclipse.core.resources.IFile.getRawLocation()", "java.util.LinkedList<java.lang.String>.add(config.getRawLocation().toOSString())"], "Fixed commit": "efe93a213af77ea82a1a95c6679fd6316205d923", "Url": "https://api.github.com/repos/FeatureIDE/FeatureIDE", "Date": "2017-04-03T10:17:19Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mInput.getText().toString().trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (input.isEmpty()) { android.widget.Toast.makeText(v.getContext(), \"Please enter a url\", Toast.LENGTH_LONG).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/77/buggy-version/app.src.main.java.com.youravgjoe.apps.coloringpagegenerator.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "9eecf9782880cf2a6300fa6a35e725419cf897d3", "Url": "https://api.github.com/repos/youravgjoe/ColoringPageGenerator", "Date": "2016-12-02T23:29:18Z"},
{"Line": "=>1770", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((providerVlanId != null) && (!(providerVlanId.equals(\"\")))) { parameters.put(\"Filter.1.Name\", \"vpc-id\"); parameters.put(\"Filter.1.Value.1\", providerVlanId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/471/buggy-version/src.main.java.org.dasein.cloud.aws.network.VPC.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)"], "Fixed commit": "2e8a9d914db23bb480697f059dc3a99bccc6b6a0", "Url": "https://api.github.com/repos/TheWeatherCompany/dasein-cloud-aws", "Date": "2013-09-04T14:25:42Z"},
{"Line": "=>437", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.cloud.storage.dao.VolumeDao.search(com.cloud.utils.db.SearchCriteria<com.cloud.storage.VolumeVO>,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((volumes == null) || ((volumes.size()) == 0)) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/2950/buggy-version/server.src.com.cloud.server.StatsCollector.java", "BodyUseAPI": [], "Fixed commit": "f17f35eeb853ef170ba48d67ddd99d4f91f6a231", "Url": "https://api.github.com/repos/apache/cloudstack", "Date": "2013-11-27T13:38:25Z"},
{"Line": "=>3355", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.cloud.storage.dao.VolumeDao.search(com.cloud.utils.db.SearchCriteria<com.cloud.storage.VolumeVO>,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((volumes == null) || ((volumes.size()) == 0)) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/2950/buggy-version/server.src.com.cloud.vm.UserVmManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "f17f35eeb853ef170ba48d67ddd99d4f91f6a231", "Url": "https://api.github.com/repos/apache/cloudstack", "Date": "2013-11-27T13:38:25Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hudson.model.AbstractBuild.getAction(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (action == null) { action = new hudson.model.ParametersAction(value); build.addAction(action); }else { java.util.List<hudson.model.ParameterValue> parameters = new java.util.ArrayList<hudson.model.ParameterValue>(action.getParameters()); parameters.add(value); action = new hudson.model.ParametersAction(parameters); build.replaceAction(action); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/2138/buggy-version/src.main.java.se.diabol.jenkins.pipeline.PipelineVersionContributor.java", "BodyUseAPI": ["hudson.model.ParametersAction.getParameters()"], "Fixed commit": "e2409076431de1efb8bda90a93532ecdea576f1c", "Url": "https://api.github.com/repos/patbos/delivery-pipeline-plugin", "Date": "2015-06-11T15:36:43Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.LinkedList.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((e.getHealth()) <= 0) { wrench.remove(i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/3149/buggy-version/STTD.src.sttd.STTD.java", "BodyUseAPI": [], "Fixed commit": "3d5689fa49fe94c8f6bac65b585afbd969fad4d2", "Url": "https://api.github.com/repos/alfhh/MadDevs", "Date": "2014-04-28T02:56:09Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) < (Build.VERSION_CODES.M)) { if ((!(com.cjt2325.cameralibrary.util.CheckPermission.isCameraUseable(SELECTED_CAMERA))) && ((this.errorLisenter) != null)) { this.errorLisenter.onError(); return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/5620/buggy-version/camera.src.main.java.com.cjt2325.cameralibrary.CameraInterface.java", "BodyUseAPI": [], "Fixed commit": "3983e71c075000baf06061da7cd74112078d614c", "Url": "https://api.github.com/repos/CJT2325/CameraView", "Date": "2017-09-18T10:18:10Z"},
{"Line": "=>3824", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.tilak.noteshare.NoteMainActivity.background.startsWith(\"#\")) bitmapCanvas.drawColor(android.graphics.Color.parseColor(com.tilak.noteshare.NoteMainActivity.background)); else bitmapCanvas.drawColor(android.graphics.Color.parseColor(\"#ffffff\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/5397/buggy-version/app.src.main.java.com.tilak.noteshare.NoteMainActivity.java", "BodyUseAPI": ["android.graphics.Canvas.drawColor(android.graphics.Color.parseColor(com.tilak.noteshare.NoteMainActivity.background))", "android.graphics.Color.parseColor(java.lang.String)"], "Fixed commit": "22564102cc6e16157e73f0fdf2ca55ad65476403", "Url": "https://api.github.com/repos/WohligTechnology/NoteShareNative", "Date": "2016-01-11T06:51:39Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fr.inria.main.evolution.MainjGenProg.executeExample(java.lang.String[])"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isExample) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/7563/buggy-version/src.main.java.fr.inria.main.evolution.MainjGenProg.java", "BodyUseAPI": [], "Fixed commit": "7465033244d03333dd81b872abc3ed803ea86934", "Url": "https://api.github.com/repos/clegoues/astor", "Date": "2015-06-01T16:27:32Z"},
{"Line": "=>635", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (theRow == null) { java.lang.String appName = null; if ((controller.getContext()) instanceof org.opendatakit.activities.IAppAwareActivity) { appName = ((org.opendatakit.activities.IAppAwareActivity) (controller.getContext())).getAppName(); } org.opendatakit.logging.WebLogger.getLogger(appName).e(org.opendatakit.tables.views.TabularView.TAG, \"Out of bounds exception bug AGAIN\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/1694/buggy-version/tables_app.src.main.java.org.opendatakit.tables.views.TabularView.java", "BodyUseAPI": [], "Fixed commit": "daf80370b44c3a0a66ac1dac4da4ffeed8174a08", "Url": "https://api.github.com/repos/opendatakit/tables", "Date": "2017-06-26T20:56:32Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((requirements[i].getId()) >= (nextID)) nextID = (requirements[i].getId()) + 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/3331/buggy-version/RequirementManager.src.edu.wpi.cs.wpisuitetng.modules.requirementmanager.models.RequirementModel.java", "BodyUseAPI": ["requirements[i].getId()"], "Fixed commit": "abb68a015813967fd099b1a795f36de6a4d634ce", "Url": "https://api.github.com/repos/djkirby/wpi-suite-tng", "Date": "2013-04-10T03:38:44Z"},
{"Line": "=>599", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (record == null) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/889/buggy-version/core.src.main.java.com.orientechnologies.orient.core.sql.OCommandExecutorSQLSelect.java", "BodyUseAPI": [], "Fixed commit": "a2137c976ed9fd5849ca8796c66cdb6a7d36ae69", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2016-03-14T09:23:42Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ru.platinn.vitacore.util.PreferenceUtils.getParam(PreferenceUtils.DOMAIN_NAME)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(domain))) url = java.lang.String.format(ru.platinn.vitacore.AppVitacore.getContext().getResources().getString(R.string.host_url), domain); else url = ru.platinn.vitacore.BuildConfig.API_ENDPOINT;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/6468/buggy-version/app.src.main.java.ru.platinn.vitacore.api.ApiFactory.java", "BodyUseAPI": ["java.lang.String.format(ru.platinn.vitacore.AppVitacore.getContext().getResources().getString(R.string.host_url),java.lang.String)"], "Fixed commit": "d4f99f70ff16c2372d9442444aad5b17872ec1b9", "Url": "https://api.github.com/repos/rodionovk/vitacore", "Date": "2017-09-14T14:10:24Z"},
{"Line": "=>364", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == domain) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/6211/buggy-version/rdap-webapp.src.main.java.cn.cnnic.rdap.dao.impl.DomainQueryDaoImpl.java", "BodyUseAPI": [], "Fixed commit": "01b20e14c05fd8f47708b8bee1e77e7314e37d26", "Url": "https://api.github.com/repos/wade1012/rdap", "Date": "2014-07-03T07:27:28Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((gr.sepals.eshop.util.device.DeviceOptionsHandler.checkAvailableExternalMemory(getActivity())) == (-1)) { memoryOption.removeView(removable); }else { removable.setTypeface(descFont); removable.setOnClickListener(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/2449/buggy-version/Sepals.src.gr.sepals.eshop.info.gui.SyncSlidePageFragment.java", "BodyUseAPI": [], "Fixed commit": "ccecfdf35dd8ea1c94b4b7a88bd9a1608ff33713", "Url": "https://api.github.com/repos/aggelikh/Sepals", "Date": "2014-10-30T13:43:46Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.System.getenv(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (pathToTarget == null) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/2449/buggy-version/Sepals.src.gr.sepals.eshop.util.device.DeviceOptionsHandler.java", "BodyUseAPI": [], "Fixed commit": "ccecfdf35dd8ea1c94b4b7a88bd9a1608ff33713", "Url": "https://api.github.com/repos/aggelikh/Sepals", "Date": "2014-10-30T13:43:46Z"},
{"Line": "=>425", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jlime.pc.edition.CommandParser.doCommand(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (y != (-1)) { return y; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/4963/buggy-version/jlime.pc.edition.CommandParser.java", "BodyUseAPI": [], "Fixed commit": "89327c4019045e44309e1248d1dda6cf2966440d", "Url": "https://api.github.com/repos/hotrodman106/Jlime-PC", "Date": "2015-01-29T03:29:09Z"},
{"Line": "=>408", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jlime.pc.edition.CommandParser.doCommand(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (y != (-1)) { return y; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/4963/buggy-version/jlime.pc.edition.CommandParser.java", "BodyUseAPI": [], "Fixed commit": "89327c4019045e44309e1248d1dda6cf2966440d", "Url": "https://api.github.com/repos/hotrodman106/Jlime-PC", "Date": "2015-01-29T03:29:09Z"},
{"Line": "=>305", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (date != null) { int weekDay = date.get(java.util.Calendar.DAY_OF_WEEK); hour = getWorkTime(weekDay).getEnd(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/5211/buggy-version/app.src.main.java.ru.fallgamlet.androiddayview.DaysViewActivity.java", "BodyUseAPI": ["java.util.Calendar.get(int)"], "Fixed commit": "3829d2fac3f0c9b47d393961e9be677cc0f0931f", "Url": "https://api.github.com/repos/fallGamlet/AndroidDayView", "Date": "2017-08-11T06:59:13Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((menu) == null) || (menu.isDisposed())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/3114/buggy-version/eu.openanalytics.phaedra.base.ui.util.src.eu.openanalytics.phaedra.base.ui.util.toolitem.DropdownSelectionListener.java", "BodyUseAPI": [], "Fixed commit": "084e77437f7b0930bb4b0f6d3156ee5bf8b87e21", "Url": "https://api.github.com/repos/openanalytics/phaedra", "Date": "2017-11-07T14:25:58Z"},
{"Line": "=>902", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (originalSyntax.contains(\":\")) { originalSyntax = org.apache.camel.runtimecatalog.CatalogHelper.after(originalSyntax, \":\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/2154/buggy-version/camel-core.src.main.java.org.apache.camel.runtimecatalog.AbstractCamelCatalog.java", "BodyUseAPI": ["org.apache.camel.runtimecatalog.CatalogHelper.after(java.lang.String,java.lang.String)"], "Fixed commit": "49c3c024d4f8de9b89da5b7c738e123011a74180", "Url": "https://api.github.com/repos/onderson/camel", "Date": "2017-07-23T13:29:03Z"},
{"Line": "=>902", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (originalSyntax.contains(\":\")) { originalSyntax = org.apache.camel.catalog.CatalogHelper.after(originalSyntax, \":\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/2154/buggy-version/platforms.camel-catalog.src.main.java.org.apache.camel.catalog.AbstractCamelCatalog.java", "BodyUseAPI": ["org.apache.camel.catalog.CatalogHelper.after(java.lang.String,java.lang.String)"], "Fixed commit": "49c3c024d4f8de9b89da5b7c738e123011a74180", "Url": "https://api.github.com/repos/onderson/camel", "Date": "2017-07-23T13:29:03Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((choreographer) != null) { choreographer.postFrameCallbackDelayed(this, com.google.android.exoplayer2.video.VideoFrameReleaseTimeHelper.CHOREOGRAPHER_SAMPLE_DELAY_MILLIS); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/5565/buggy-version/library.core.src.main.java.com.google.android.exoplayer2.video.VideoFrameReleaseTimeHelper.java", "BodyUseAPI": [], "Fixed commit": "15d7de3c5e15d2e22cc14cc2f78d53ef1ccc261b", "Url": "https://api.github.com/repos/michalliu/Google_ExoPlayer", "Date": "2017-07-12T11:11:30Z"},
{"Line": "=>410", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<java.lang.Double>.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (size >= 15) { map.addMarker(pokeMarker.position(new com.google.android.gms.maps.model.LatLng(latitudeList.get(15), longitudeList.get(15)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/1179/buggy-version/app.src.main.java.gogobike.egg.com.gogobike.MapActivity.java", "BodyUseAPI": [], "Fixed commit": "3ff9e5e16bdf6917f3f8f0c744fe3a8fb2dd1809", "Url": "https://api.github.com/repos/LittleZombie/GoGoBike", "Date": "2016-10-31T16:40:16Z"},
{"Line": "=>413", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<java.lang.Double>.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (size >= 20) { map.addMarker(pokeMarker.position(new com.google.android.gms.maps.model.LatLng(latitudeList.get(20), longitudeList.get(20)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/1179/buggy-version/app.src.main.java.gogobike.egg.com.gogobike.MapActivity.java", "BodyUseAPI": [], "Fixed commit": "3ff9e5e16bdf6917f3f8f0c744fe3a8fb2dd1809", "Url": "https://api.github.com/repos/LittleZombie/GoGoBike", "Date": "2016-10-31T16:40:16Z"},
{"Line": "=>407", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<java.lang.Double>.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (size >= 5) { map.addMarker(pokeMarker.position(new com.google.android.gms.maps.model.LatLng(latitudeList.get(5), longitudeList.get(5)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/1179/buggy-version/app.src.main.java.gogobike.egg.com.gogobike.MapActivity.java", "BodyUseAPI": [], "Fixed commit": "3ff9e5e16bdf6917f3f8f0c744fe3a8fb2dd1809", "Url": "https://api.github.com/repos/LittleZombie/GoGoBike", "Date": "2016-10-31T16:40:16Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.kylin.storage.tuple.TupleInfo.getDataType(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((\"integer\".equals(dataType)) && (!(fieldValue instanceof java.lang.Integer))) { fieldValue = ((java.lang.Number) (fieldValue)).intValue(); }else if ((\"float\".equals(dataType)) && (fieldValue instanceof java.math.BigDecimal)) { fieldValue = ((java.math.BigDecimal) (fieldValue)).floatValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/2247/buggy-version/storage.src.main.java.org.apache.kylin.storage.tuple.Tuple.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "eb889e690580e95cfbfaab64704245299933193d", "Url": "https://api.github.com/repos/apache/kylin", "Date": "2015-03-13T18:24:29Z"},
{"Line": "=>359", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hudson.FilePath.getName()", "hudson.FilePath.read()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(ftpClient.storeFile(localfilename, in))) { in.close(); throw new java.io.IOException((\"Failed to upload \" + localfilename)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/8391/buggy-version/src.main.java.com.zanox.hudson.plugins.FTPSite.java", "BodyUseAPI": ["java.io.InputStream.close()"], "Fixed commit": "3c61c932a5a65402da5f0d38e7142ab1a93580ee", "Url": "https://api.github.com/repos/hudson3-plugins/ftppublisher", "Date": "2015-04-18T06:27:15Z"},
{"Line": "=>388", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((com.codename1.impl.ios.IOSImplementation.instance.currentEditing) != null) { com.codename1.impl.ios.IOSImplementation.instance.currentEditing.requestFocus(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/5326/buggy-version/Ports.iOSPort.src.com.codename1.impl.ios.IOSImplementation.java", "BodyUseAPI": ["com.codename1.ui.TextArea.requestFocus()"], "Fixed commit": "b31722325b0bf1916249febdcde214244a3afca3", "Url": "https://api.github.com/repos/codenameone/CodenameOne", "Date": "2015-12-01T21:25:53Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (metricSchedule.add(event)) { java.lang.System.err.println(((\"Added MetricAction \" + (event.getId())) + \" to metric schedule\")); metricSchedule.notify(); }else { throw new java.lang.Exception((((\"Failed to add MetricAction \" + (event.getId())) + \" to metric schedule, exists:\") + (metricSchedule.contains(event)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/5589/buggy-version/Distiller-server.src.main.java.com.mapr.distiller.server.scheduler.MetricActionScheduler.java", "BodyUseAPI": ["java.util.TreeSet<com.mapr.distiller.server.metricactions.MetricAction>.notify()", "java.util.TreeSet<com.mapr.distiller.server.metricactions.MetricAction>.contains(com.mapr.distiller.server.metricactions.MetricAction)", "com.mapr.distiller.server.metricactions.MetricAction.getId()", "com.mapr.distiller.server.metricactions.MetricAction.getId()", "java.io.PrintStream.println(((\"Added MetricAction \" + (event.getId())) + \" to metric schedule\"))"], "Fixed commit": "46687fe1da226079676dcab5af51e9cbb18f7670", "Url": "https://api.github.com/repos/aaroneng/Distiller", "Date": "2015-08-17T07:10:35Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.ownerId) != (other.ownerId)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/6200/buggy-version/src.main.java.com.moodmapper.entity.GroupEntity.java", "BodyUseAPI": [], "Fixed commit": "63acc6cb32c851526e77896efcb63e8d1d07d3a1", "Url": "https://api.github.com/repos/SE452Group3Project/Mood_Mapper", "Date": "2015-10-20T19:47:49Z"},
{"Line": "=>297", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.email) != (other.email)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/6200/buggy-version/src.main.java.com.moodmapper.entity.UserEntity.java", "BodyUseAPI": [], "Fixed commit": "63acc6cb32c851526e77896efcb63e8d1d07d3a1", "Url": "https://api.github.com/repos/SE452Group3Project/Mood_Mapper", "Date": "2015-10-20T19:47:49Z"},
{"Line": "=>375", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (t instanceof java.lang.Error) { throw ((java.lang.Error) (t)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/4736/buggy-version/hazelcast.src.main.java.com.hazelcast.map.impl.mapstore.writebehind.DefaultWriteBehindProcessor.java", "BodyUseAPI": [], "Fixed commit": "346345d0aa675f28e7bafafc50168773947637db", "Url": "https://api.github.com/repos/ahmetmircik/hazelcast", "Date": "2015-06-29T10:06:05Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((GameServer.socket) != null) { GameServer.socket.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/4566/buggy-version/src.GameServer.java", "BodyUseAPI": [], "Fixed commit": "c5c5ea5f59387071e42ed70004f568889b79a1c0", "Url": "https://api.github.com/repos/tmjonker/BattleShip", "Date": "2017-08-22T06:47:21Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((inputStream) != null) && ((outputStream) != null)) { try { inputStream.close(); outputStream.close(); } catch (java.io.IOException ex) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/4566/buggy-version/src.GameHelper.java", "BodyUseAPI": [], "Fixed commit": "c5c5ea5f59387071e42ed70004f568889b79a1c0", "Url": "https://api.github.com/repos/tmjonker/BattleShip", "Date": "2017-08-22T06:47:21Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.evernote.android.job.JobManager.getAllJobRequestsForTag(UMSyncJob.TAG)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((allUMSyncJobRequests.size()) > 5) { java.lang.System.out.println(\" >>UMSyncJob:App: More than 5 job requests. Cancelling all.\"); mJobManager.cancelAllForTag(UMSyncJob.TAG); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/904/buggy-version/app-android.src.main.java.com.ustadmobile.port.android.App.java", "BodyUseAPI": [], "Fixed commit": "fc32bc13d3b5a24422c27d4ac66e278fb2b596ea", "Url": "https://api.github.com/repos/UstadMobile/UstadMobile", "Date": "2017-09-10T12:05:13Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.example.cmput301.model.TaskManager.dbman.getLocalTaskList()) == null) { return sharedList; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/1111/buggy-version/src.com.example.cmput301.model.TaskManager.java", "BodyUseAPI": [], "Fixed commit": "2bb9164f916f04f95ad245a2564f79468c9dfa44", "Url": "https://api.github.com/repos/CMPUT301F12T04/CMPUT301F12T04", "Date": "2012-12-01T19:29:12Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (line.startsWith(\"/*- combine\")) { foundStart = true; foundCommentStart = true; line = line.substring(4); }else if ((line.startsWith(\"/*\")) || (line.startsWith(\"/*-\"))) { foundCommentStart = true; }else if ((foundCommentStart) && (line.startsWith(\"* combine\"))) { foundStart = true; line = line.substring(2); }else if (((foundCommentStart) && (!(line.startsWith(\"*/\")))) && (line.startsWith(\"*\"))) { line = line.substring(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/6630/buggy-version/src.main.java.se.intem.web.taglib.combined.node.CombineCommentParser.java", "BodyUseAPI": ["java.lang.String.startsWith(java.lang.String)", "java.lang.String.startsWith(java.lang.String)", "java.lang.String.substring(int)", "java.lang.String.substring(int)", "java.lang.String.startsWith(java.lang.String)"], "Fixed commit": "53ab29ca929fc13e486c43e3279b85df1e3046a6", "Url": "https://api.github.com/repos/jmbe/combine-taglib", "Date": "2013-09-28T00:44:52Z"},
{"Line": "=>276", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (max_length == 0) { game.App.open_path = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/3515/buggy-version/src.game.App.java", "BodyUseAPI": [], "Fixed commit": "5b0464dfb8853fc4aa4aa916ed1b15617330a0b8", "Url": "https://api.github.com/repos/CompSciGuyIT/MazeGenerator_1_Java", "Date": "2016-08-06T02:28:52Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (tracker != null) { int sentDelta = ((int) (sentData - totalSentData)); if (sentDelta != 0) { try { tracker.updateStats(fileSize, sentData, sentDelta, endTime); } catch (java.lang.Exception ex) { ex.printStackTrace(); } totalSentData = sentData; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/9005/buggy-version/src.com.codebrig.beam.transfer.FileTransferChannel.java", "BodyUseAPI": ["com.codebrig.beam.transfer.TransferTracker.updateStats(long,long,int,long)"], "Fixed commit": "40af0cd7f32f20d5c493f1c7d4b2c6bded6e088d", "Url": "https://api.github.com/repos/BFergerson/Beam", "Date": "2015-01-31T18:49:07Z"},
{"Line": "=>1662", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["upperBound.getDeclaration().getSelfType()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (self != null) { upperBound = self; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/3399/buggy-version/src.com.redhat.ceylon.compiler.java.codegen.AbstractTransformer.java", "BodyUseAPI": [], "Fixed commit": "1cb0ce8ea0d8a1f8b88731c214522734a61783da", "Url": "https://api.github.com/repos/ceylon/ceylon-compiler", "Date": "2013-04-10T11:10:07Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (responseHeaders.containsKey(\"Set-Cookie\")) { for (java.lang.String responseHeader : responseHeaders.get(\"Set-Cookie\")) { java.lang.String[] responseHeaderArray = responseHeader.split(\";\"); for (java.lang.String cookieInfo : responseHeaderArray) { try { java.lang.String[] cookieKeyValPair = cookieInfo.split(\"=\"); cookieMap.put(cookieKeyValPair[0], cookieKeyValPair[1]); } catch (java.lang.Exception e) { java.lang.System.out.println((\"Skipped: \" + cookieInfo)); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/4977/buggy-version/core.src.main.java.com.ps.rest.plugin.core.session.SessionCookieHolder.java", "BodyUseAPI": ["java.util.Map<java.lang.String, ? extends java.lang.Iterable<java.lang.String>>.get(java.lang.String)"], "Fixed commit": "b6c914cbb1175cb586b5dfd7f3a628c37dcc529a", "Url": "https://api.github.com/repos/spranab/rest-plugin", "Date": "2016-09-12T23:28:13Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (action == (controller.terminal.controller.VueStateMachine.ACTION_DO_CANCEL)) { controller.terminal.controller.VueStateMachine.doCancel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/1162/buggy-version/src.controller.terminal.controller.VueStateMachine.java", "BodyUseAPI": [], "Fixed commit": "f4b29ea8b97d06ba3eeb10fc2896a8bfdee3b24b", "Url": "https://api.github.com/repos/Yoldark34/NemoVelo", "Date": "2013-07-01T19:26:34Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.location.LocationManager.getLastKnownLocation(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (location != null) { latLng = new com.google.android.gms.maps.model.LatLng(location.getLatitude(), location.getLongitude()); }else latLng = new com.google.android.gms.maps.model.LatLng(0, 0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/7805/buggy-version/app.src.main.java.ge.pol.icmia.vano.carfinder.app.MapsActivity.java", "BodyUseAPI": ["android.location.Location.getLatitude()", "android.location.Location.getLongitude()"], "Fixed commit": "842e0f4e073d0dd8b8dd7a112624a0ac02721540", "Url": "https://api.github.com/repos/vvaannoo/CarFinder", "Date": "2014-04-10T14:59:20Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((provider) == null) { java.lang.System.err.println(\"provider is null\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/7805/buggy-version/app.src.main.java.ge.pol.icmia.vano.carfinder.app.MapsActivity.java", "BodyUseAPI": [], "Fixed commit": "842e0f4e073d0dd8b8dd7a112624a0ac02721540", "Url": "https://api.github.com/repos/vvaannoo/CarFinder", "Date": "2014-04-10T14:59:20Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((resourceRoot) != null) { return resourceRoot; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/1419/buggy-version/jaxrs.src.main.java.org.jboss.as.jaxrs.deployment.JaxrsSpringProcessor.java", "BodyUseAPI": [], "Fixed commit": "6bb803da54871f704b98d2bb83d0c9ea6cc37170", "Url": "https://api.github.com/repos/esantana/jboss-as", "Date": "2015-04-07T00:27:46Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.Character.isLetter(newChar)) { if (java.lang.Character.isLetter(oldChar)) { return newChar; }else if ((numAnagramLetters) < curWordLen) { (numAnagramLetters)++; return newChar; }else { return '\\u0000'; } }else { return '\\u0000'; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/3993/buggy-version/app.src.main.java.com.totsp.crossword.NotesActivity.java", "BodyUseAPI": [], "Fixed commit": "84285b22ec22e90d517ac72bd291b9a2fd91865d", "Url": "https://api.github.com/repos/yourealwaysbe/shortyz", "Date": "2015-04-10T07:30:36Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mStateListener) != null) mStateListener.onTextChange(updated, mCursorPosition);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/6008/buggy-version/projects.android_studio.JavaLisp.AndroidLispGuiBuilder.src.main.java.com.evolved.automata.android.lisp.guibuilder.LispEditText.java", "BodyUseAPI": [], "Fixed commit": "4d03d0fb9ca80b77597ad33db49cf5f7047493e6", "Url": "https://api.github.com/repos/hexagonc/Android-Lisp", "Date": "2017-09-08T03:20:36Z"},
{"Line": "=>387", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mParseNode) != null) { mCurrentSelection = mParseNode.findNode(mCursorPosition); renderSelection(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/6008/buggy-version/projects.android_studio.JavaLisp.AndroidLispGuiBuilder.src.main.java.com.evolved.automata.android.lisp.guibuilder.LispEditText.java", "BodyUseAPI": [], "Fixed commit": "4d03d0fb9ca80b77597ad33db49cf5f7047493e6", "Url": "https://api.github.com/repos/hexagonc/Android-Lisp", "Date": "2017-09-08T03:20:36Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((client) != null) { client.register(selector, java.nio.channels.SelectionKey.OP_CONNECT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/9001/buggy-version/src.net.tootallnate.websocket.WebSocketClient.java", "BodyUseAPI": [], "Fixed commit": "1087c5ee653e3a0b79c6adf514004f970e8748af", "Url": "https://api.github.com/repos/xpepermint/Java-WebSocket", "Date": "2011-07-03T16:26:31Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (obj instanceof net.minecraft.item.Item) { uId = cpw.mods.fml.common.registry.GameRegistry.findUniqueIdentifierFor(((net.minecraft.item.Item) (obj))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/8825/buggy-version/java.ak.ChainDestruction.ChainDestruction.java", "BodyUseAPI": [], "Fixed commit": "953cc9a316f3f92dff719c60c1af2c3fa898c19e", "Url": "https://api.github.com/repos/aksource/ChainDestruction", "Date": "2014-09-07T13:41:20Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.habzy.image.models.ViewParams.ShownStyle.Pick_Single) == (mParams.getShownStyle())) { mModelsList.get(mCurrentItem).isSeleted = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/7401/buggy-version/source.src.com.habzy.image.viewpager.wrap.ViewPagerDialogFragment.java", "BodyUseAPI": [], "Fixed commit": "d1bb4c6c6b752662cd30a579d5eda9e12ad12f84", "Url": "https://api.github.com/repos/habzy/GridImagePicker", "Date": "2014-10-22T09:51:17Z"},
{"Line": "=>539", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((emotionalState()) == 0) { return 1 / 0.1; }else { return 1 / (emotionalState()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/6782/buggy-version/src.massim.agents.empathic.EmpathicAgent.java", "BodyUseAPI": [], "Fixed commit": "0771a3a71037331e9670979485d59d92e0d2368c", "Url": "https://api.github.com/repos/omimo/MASSim", "Date": "2012-03-19T03:30:06Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(service.HeaderService.isSessionStarted(request))) { service.HeaderService.resetSession(request); service.HeaderService.startSession(request); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/1872/buggy-version/src.servlets.LoginWithTempServlet.java", "BodyUseAPI": ["service.HeaderService.startSession(javax.servlet.http.HttpServletRequest)", "service.HeaderService.resetSession(javax.servlet.http.HttpServletRequest)"], "Fixed commit": "d5f3be3a4f55d35600d0ecf91990ed0e26c0e7fb", "Url": "https://api.github.com/repos/sfrink/CERTUS-Web", "Date": "2014-05-01T00:06:23Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (service.HeaderService.hasAccess(request, \"election\")) { routineExistingElectionsForVoting(request); routineExistingElectionsForResults(request); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/1872/buggy-version/src.servlets.MainServlet.java", "BodyUseAPI": ["servlets.MainServlet.routineExistingElectionsForVoting(javax.servlet.http.HttpServletRequest)", "servlets.MainServlet.routineExistingElectionsForResults(javax.servlet.http.HttpServletRequest)"], "Fixed commit": "d5f3be3a4f55d35600d0ecf91990ed0e26c0e7fb", "Url": "https://api.github.com/repos/sfrink/CERTUS-Web", "Date": "2014-05-01T00:06:23Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!found) { throw new java.lang.RuntimeException(\"element was not visible after scrolling\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/2444/buggy-version/client.src.main.java.com.paypal.selion.platform.grid.SeLionAppiumIOSDriver.java", "BodyUseAPI": [], "Fixed commit": "271f6e6b1173d02ed8fa3e410967ca21a9159fea", "Url": "https://api.github.com/repos/alizelzele/SeLion", "Date": "2016-09-05T09:16:40Z"},
{"Line": "=>426", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.security.core.Authentication.getPrincipal()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(com.stormpath.sdk.lang.Strings.hasText(username))) { throw new org.springframework.security.authentication.AuthenticationServiceException(\"must have username and password\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/4003/buggy-version/extensions.spring.stormpath-spring-security.src.main.java.com.stormpath.spring.security.provider.StormpathAuthenticationProvider.java", "BodyUseAPI": [], "Fixed commit": "c1078c0b718d0e05f37d9794ca1ca6c75767fbcc", "Url": "https://api.github.com/repos/stormpath/stormpath-sdk-java", "Date": "2016-03-04T16:40:01Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (block != (this.block)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/5348/buggy-version/hazelcast-client.src.main.java.com.hazelcast.client.proxy.ClientFlakeIdGeneratorProxy.java", "BodyUseAPI": [], "Fixed commit": "fde91a02969226a6ac825b670bffcac48d847074", "Url": "https://api.github.com/repos/viliam-durina/hazelcast", "Date": "2017-11-10T13:31:18Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jetbrains.jet.lang.resolve.calls.TypeResolver.resolveType(context.scope,org.jetbrains.jet.lang.resolve.calls.JetTypeReference,context.trace,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.jetbrains.jet.lang.resolve.calls.ErrorUtils.isErrorType(constructedType)) { return checkArgumentTypesAndFail(context); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/8613/buggy-version/compiler.frontend.src.org.jetbrains.jet.lang.resolve.calls.CallResolver.java", "BodyUseAPI": [], "Fixed commit": "78cb5381f7cf527a7f65b92a8304521e9d5d2f0a", "Url": "https://api.github.com/repos/JetBrains/kotlin", "Date": "2012-08-29T18:47:50Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.util.List<java.lang.String>>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (servicesList != null) { for (java.lang.String agentName : servicesList) { reputationList.add(producentReputations.get(agentName)); } servicesMap.put(goodTypeName, reputationList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/1988/buggy-version/goodsim.src.main.java.pl.edu.agh.goodsim.serviceregistry.ServiceRegistry.java", "BodyUseAPI": [], "Fixed commit": "81161542c2cb4c9e25a15d05001c727a92bb5a42", "Url": "https://api.github.com/repos/null00/GoodSim", "Date": "2012-06-20T15:05:43Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (InstagramJSON != null) { com.example.tagsaver.utils.InstagramUtils.TagItem tag = instagramUtil.parseTagJSON(InstagramJSON); mTagAdapter.addTag(tag); }else { android.util.Log.d(com.example.tagsaver.Adder.TAG, \"InsgramJson was null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/4675/buggy-version/app.src.main.java.com.example.tagsaver.Adder.java", "BodyUseAPI": ["com.example.tagsaver.utils.InstagramUtils.parseTagJSON(java.lang.String)"], "Fixed commit": "bfd426eb9e257ec7f44625eebbabdc6b660cf38f", "Url": "https://api.github.com/repos/OSU-CS496-Sp2017/final-project-tagsaver", "Date": "2017-06-15T06:05:06Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (InstagramJSON != null) { com.example.tagsaver.utils.InstagramUtils.TagItem tag = instagramUtil.parseTagJSON(InstagramJSON); mTagAdapter.addTag(tag); }else { android.util.Log.d(com.example.tagsaver.Editer.TAG, \"InsgramJson was null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/4675/buggy-version/app.src.main.java.com.example.tagsaver.Editer.java", "BodyUseAPI": ["com.example.tagsaver.utils.InstagramUtils.parseTagJSON(java.lang.String)"], "Fixed commit": "bfd426eb9e257ec7f44625eebbabdc6b660cf38f", "Url": "https://api.github.com/repos/OSU-CS496-Sp2017/final-project-tagsaver", "Date": "2017-06-15T06:05:06Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((this.locationProvider) == null) { this.locationManager = null; }else { this.locationManager.requestLocationUpdates(locationProvider, 0, 0, this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/5392/buggy-version/app.src.main.java.com.gmail.takashi316.tminchart.location.Location.java", "BodyUseAPI": [], "Fixed commit": "34e110e99f74ba6b6d4cf93f3425367ff41175b9", "Url": "https://api.github.com/repos/TakashiSasaki/tMinChart", "Date": "2015-11-17T12:55:30Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((filledWith > 0) && (filledWith <= 9)) { availableNumbers = null; isFilled = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/930/buggy-version/Cell.java", "BodyUseAPI": [], "Fixed commit": "9614930779bae48d3e54f920ec8b765e5e03ac26", "Url": "https://api.github.com/repos/roccobarbi/sudokuSolver", "Date": "2016-09-26T20:41:33Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(getConn().availableGroups().containsAll(ise.gameoflife.groups.LoansGroup.inNeed.keySet()))) { java.util.Set<java.lang.String> available = getConn().availableGroups(); for (java.lang.String inNeedMember : ise.gameoflife.groups.LoansGroup.inNeed.keySet()) { if (!(available.contains(inNeedMember))) { ise.gameoflife.groups.LoansGroup.inNeed.remove(inNeedMember); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/6705/buggy-version/src.ise.gameoflife.groups.LoansGroup.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Double>.remove(java.lang.String)", "java.util.Map<java.lang.String, java.lang.Double>.keySet()"], "Fixed commit": "2b490ee0d6ba1ee71ca8579ce9e73577dda771cc", "Url": "https://api.github.com/repos/javajawa/ISEGameOfLife", "Date": "2011-06-19T18:29:38Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((((csv.getDatatypeURI()) == null) && ((com.github.thesmartenergy.sparql.generate.jena.function.library.FN_CSV.datatypeUri) == null)) || ((((csv.getDatatypeURI()) != null) && (!(csv.getDatatypeURI().equals(com.github.thesmartenergy.sparql.generate.jena.function.library.FN_CSV.datatypeUri)))) && (!(csv.getDatatypeURI().equals(\"http://www.w3.org/2001/XMLSchema#string\"))))) { com.github.thesmartenergy.sparql.generate.jena.function.library.FN_CSV.LOG.warn(((((\"The URI of NodeValue1 MUST be <\" + (com.github.thesmartenergy.sparql.generate.jena.function.library.FN_CSV.datatypeUri)) + \">\") + \"or <http://www.w3.org/2001/XMLSchema#string>.\") + \" Returning null.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/3778/buggy-version/sparql-generate-jena.src.main.java.com.github.thesmartenergy.sparql.generate.jena.function.library.FN_CSV.java", "BodyUseAPI": ["org.apache.log4j.Logger.warn(java.lang.String)"], "Fixed commit": "83d6db8f7fa821dbf618964c45818e8a2599b734", "Url": "https://api.github.com/repos/sparql-generate/sparql-generate", "Date": "2016-05-03T14:16:02Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["twitter4j.ResponseList<twitter4j.Status>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (status.isRetweet()) { messageBody += ((\"_rt_ _\" + (status.getRetweetedStatus().getUser().getScreenName())) + \"_: \") + (status.getRetweetedStatus().getText()); }else { messageBody += status.getText(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/79/buggy-version/src.com.chitter.bot.TaskServlet.java", "BodyUseAPI": ["status.getRetweetedStatus().getUser()", "status.getRetweetedStatus().getText()", "twitter4j.Status.getRetweetedStatus()", "twitter4j.Status.getRetweetedStatus()", "status.getRetweetedStatus().getUser().getScreenName()", "twitter4j.Status.getText()"], "Fixed commit": "42b1b929d7f304adfbf4bf083d1abb6b24fab9ed", "Url": "https://api.github.com/repos/cansin/chitterim", "Date": "2011-03-26T23:09:12Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (month == (seasons[0][1])) { if (day < (seasons[0][0])) return 0; if (day >= (seasons[0][0])) return 1; }else return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/1774/buggy-version/TimeSystem.src.com.heerbann.timesystem.defaultImplementation.DefaultSeasons.java", "BodyUseAPI": [], "Fixed commit": "7ff41dd1cf1ddca1415f7c5c1b696a8af183f851", "Url": "https://api.github.com/repos/Heerbann/TimeSystem", "Date": "2016-12-15T23:32:26Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (month == (seasons[1][0])) { if (day < (seasons[1][1])) return 1; if (day >= (seasons[1][1])) return 2; }else return 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/1774/buggy-version/TimeSystem.src.com.heerbann.timesystem.defaultImplementation.DefaultSeasons.java", "BodyUseAPI": [], "Fixed commit": "7ff41dd1cf1ddca1415f7c5c1b696a8af183f851", "Url": "https://api.github.com/repos/Heerbann/TimeSystem", "Date": "2016-12-15T23:32:26Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (month == (seasons[3][0])) { if (day < (seasons[3][1])) return 3; if (day >= (seasons[3][1])) return 0; }else return 3;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/1774/buggy-version/TimeSystem.src.com.heerbann.timesystem.defaultImplementation.DefaultSeasons.java", "BodyUseAPI": [], "Fixed commit": "7ff41dd1cf1ddca1415f7c5c1b696a8af183f851", "Url": "https://api.github.com/repos/Heerbann/TimeSystem", "Date": "2016-12-15T23:32:26Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (month == (seasons[2][0])) { if (day < (seasons[2][1])) return 2; if (day >= (seasons[2][1])) return 3; }else return 2;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/1774/buggy-version/TimeSystem.src.com.heerbann.timesystem.defaultImplementation.DefaultSeasons.java", "BodyUseAPI": [], "Fixed commit": "7ff41dd1cf1ddca1415f7c5c1b696a8af183f851", "Url": "https://api.github.com/repos/Heerbann/TimeSystem", "Date": "2016-12-15T23:32:26Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.netty.buffer.ByteBuf.readInt()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (id == (-1)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/5140/buggy-version/src.main.java.com.crowsofwar.avatar.common.network.DataTransmitters.java", "BodyUseAPI": [], "Fixed commit": "b058ce70e2eee5c492bcf73c1b7999a6f8b2cf77", "Url": "https://api.github.com/repos/CrowsOfWar/AvatarMod", "Date": "2017-06-04T16:15:19Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((profile_id) == (Profile.DEFAULT_PROFILE_ID)) resultCode = RESULT_OK;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/3626/buggy-version/phoneProfiles.src.main.java.sk.henrichg.phoneprofiles.ProfilePreferencesActivity.java", "BodyUseAPI": [], "Fixed commit": "17d7910553dc9fde62f9977e58a925540c367109", "Url": "https://api.github.com/repos/henrichg/PhoneProfiles", "Date": "2017-09-28T11:32:03Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((nodes.contains(node)) && (!(graph.isInitialNode(node)))) && (isDoLoop(node))) stack.push(new adt.graph.CyclePath<V>(nodes.subList(nodes.lastIndexOf(node), nodes.size()))); else if (((nodes.contains(node)) && (!(graph.isInitialNode(node)))) && (!(isDoLoop(node)))) stack.push(new adt.graph.CyclePath<V>(nodes.subList(nodes.lastIndexOf(node), nodes.size())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/1134/buggy-version/PESTT.src.domain.coverage.algorithms.CompletePathCoverage.java", "BodyUseAPI": ["java.util.LinkedList<adt.graph.Node<V>>.subList(nodes.lastIndexOf(node),nodes.size())", "domain.coverage.algorithms.CompletePathCoverage<V>.CompletePathCoverageVisitor.isDoLoop(adt.graph.Node<V>)", "java.util.LinkedList<adt.graph.Node<V>>.size()", "java.util.LinkedList<adt.graph.Node<V>>.lastIndexOf(adt.graph.Node<V>)", "java.util.LinkedList<adt.graph.Node<V>>.contains(adt.graph.Node<V>)", "java.util.LinkedList<adt.graph.Node<V>>.subList(nodes.lastIndexOf(node),nodes.size())", "java.util.Stack<adt.graph.CyclePath<V>>.push(adt.graph.CyclePath<V>)", "java.util.LinkedList<adt.graph.Node<V>>.lastIndexOf(adt.graph.Node<V>)", "java.util.Stack<adt.graph.CyclePath<V>>.push(adt.graph.CyclePath<V>)", "java.util.LinkedList<adt.graph.Node<V>>.size()", "adt.graph.Graph<V>.isInitialNode(adt.graph.Node<V>)"], "Fixed commit": "43cf6e36214b64bf7e3d72d59ec89394c1d2323a", "Url": "https://api.github.com/repos/ruigameiro/PESTT", "Date": "2012-05-07T16:07:33Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.json.JsonObject.getString(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (gname.isEmpty()) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/8927/buggy-version/Server.src.java.data.entity.Dishgroup.java", "BodyUseAPI": [], "Fixed commit": "0e29dab64c500a2a54133e4a8c73a918d17d0467", "Url": "https://api.github.com/repos/jolin1337/Restaurang", "Date": "2014-10-15T04:24:19Z"},
{"Line": "=>1911", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((invoiceNumber) != null) && (!(invoiceNumber.equals(\"\")))) { jsonObject.put(\"invoice_number\", invoiceNumber); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/396/buggy-version/source.com.zoho.books.model.Invoice.java", "BodyUseAPI": ["org.json.JSONObject.put(java.lang.String,java.lang.String)"], "Fixed commit": "6230d2b28ed80218fec750f0fd20e2c0bd729b48", "Url": "https://api.github.com/repos/zoho/books-java-wrappers", "Date": "2015-11-04T05:27:18Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((arr.length) < (size())) arr = java.util.Arrays.copyOf(arr, size());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/4704/buggy-version/src.com.citron.collections.OrderlyHashSet.java", "BodyUseAPI": ["java.util.Arrays.copyOf(T[],int)"], "Fixed commit": "2f156d0ea12552976b5edefd7d669da2e4deee91", "Url": "https://api.github.com/repos/nrhoffmann/Set", "Date": "2017-11-09T23:53:53Z"},
{"Line": "=>1469", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((child.entityInstance) != null) child.getEntityInstance();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/2824/buggy-version/zeidon-joe.src.main.java.com.quinsoft.zeidon.standardoe.EntityCursorImpl.java", "BodyUseAPI": ["com.quinsoft.zeidon.standardoe.EntityCursorImpl.getEntityInstance()"], "Fixed commit": "08e65336401be07b7939895646d674709699a214", "Url": "https://api.github.com/repos/zeidon/zeidon-joe", "Date": "2016-05-16T20:58:15Z"},
{"Line": "=>1445", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((child.entityInstance) != null) child.getEntityInstance();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/2824/buggy-version/zeidon-joe.src.main.java.com.quinsoft.zeidon.standardoe.EntityCursorImpl.java", "BodyUseAPI": ["com.quinsoft.zeidon.standardoe.EntityCursorImpl.getEntityInstance()"], "Fixed commit": "08e65336401be07b7939895646d674709699a214", "Url": "https://api.github.com/repos/zeidon/zeidon-joe", "Date": "2016-05-16T20:58:15Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.ignite.internal.processors.cache.distributed.near.ERR_UPD.compareAndSet(this, null, e)) onComplete();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/2020/buggy-version/modules.core.src.main.java.org.apache.ignite.internal.processors.cache.distributed.near.GridNearOptimisticSerializableTxPrepareFuture.java", "BodyUseAPI": [], "Fixed commit": "2d7c712813b8b4cbffe226afbcb8e82cdacac48c", "Url": "https://api.github.com/repos/voipp/ignite", "Date": "2017-07-13T17:49:24Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (savedInstanceState != null) { android.util.Log.i(this.toString(), (\"onCreate:\" + (savedInstanceState.getInt(\"pageIdx\")))); this.pageIdx = savedInstanceState.getInt(\"pageIdx\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/7041/buggy-version/src.jp.imho.scrollabletabsample.TabContentFragment.java", "BodyUseAPI": ["android.os.Bundle.getInt(java.lang.String)", "android.os.Bundle.getInt(java.lang.String)", "android.util.Log.i(java.lang.String,(\"onCreate:\" + (savedInstanceState.getInt(\"pageIdx\"))))"], "Fixed commit": "93f2c518107d6a91d9d7ce8b33e2cac85b9ffd69", "Url": "https://api.github.com/repos/hkurosawa/ScrollableTabSample", "Date": "2012-07-10T14:51:51Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (commandParam.contains(\" to \")) { commonClasses.SummaryReport.setFeedBackMsg(\"Please make sure '-' sign is used for 'to' command\"); throw new java.security.InvalidParameterException(); }else if (date == null) { commonClasses.SummaryReport.setFeedBackMsg(Constants.MESSAGE_INVALID_DATE); throw new java.security.InvalidParameterException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/3003/buggy-version/src.Parser.OptionalCommandInterpreter.java", "BodyUseAPI": [], "Fixed commit": "7fc1acc2b19d06013c51b951b22cfcd273e7b176", "Url": "https://api.github.com/repos/cs2103aug2014-t17-1j/main", "Date": "2014-10-28T06:22:29Z"},
{"Line": "=>340", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (previousTag.equals(\"TEST\")) { ((com.simi.hftl_app.Main.MainActivity) (getActivity())).setToolbarTitle(getResources().getString(R.string.ACTIVITY_Test_TITLE)); }else if (previousTag.equals(\"APP\")) { ((com.simi.hftl_app.Main.MainActivity) (getActivity())).setToolbarTitle(getResources().getString(R.string.ACTIVITY_APP_TITLE)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/3473/buggy-version/app.src.main.java.com.simi.hftl_app.Fragmente.SettingsFragment.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "c80ff2e59cf474961cc48b9ed2b4e9d257de2a45", "Url": "https://api.github.com/repos/frozenyogurt/WAB_App", "Date": "2016-04-18T12:01:44Z"},
{"Line": "=>341", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (title.equals(getResources().getString(R.string.ACTIVITY_Test_TITLE))) { toolbarTitle.setTag(\"TEST\"); }else if (title.equals(getResources().getString(R.string.ACTIVITY_APP_TITLE))) { toolbarTitle.setTag(\"APP\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/3473/buggy-version/app.src.main.java.com.simi.hftl_app.Main.MainActivity.java", "BodyUseAPI": ["java.lang.String.equals(getResources().getString(R.string.ACTIVITY_APP_TITLE))"], "Fixed commit": "c80ff2e59cf474961cc48b9ed2b4e9d257de2a45", "Url": "https://api.github.com/repos/frozenyogurt/WAB_App", "Date": "2016-04-18T12:01:44Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (obj == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/6765/buggy-version/src.main.java.org.uqbar.commons.model.Entity.java", "BodyUseAPI": [], "Fixed commit": "49357f4514009b1682b2e230f49caeae5ebaf0d8", "Url": "https://api.github.com/repos/uqbar-project/uqbar-domain", "Date": "2015-12-21T21:44:23Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dataSource) == null) { synchronized(this) { if ((dataSource) == null) dataSource = net.jplugin.core.das.api.impl.ConfigedDataSource.getDataSource(\"database\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/8026/buggy-version/net.jplugin.core.das.src.net.jplugin.core.das.api.DataSourceHolder.java", "BodyUseAPI": [], "Fixed commit": "0170131203ca65b7ddec328c0514cb72c7c8739d", "Url": "https://api.github.com/repos/sunlet/jplugin", "Date": "2016-03-17T08:25:47Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<Classes>.remove(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (tempCls.hasTeacher()) { tempCls.removeTeacher(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/2100/buggy-version/src.ScheduleTeachers.java", "BodyUseAPI": ["Classes.removeTeacher()"], "Fixed commit": "a0492ed23237706309d75bf1ae16331d2b3b882e", "Url": "https://api.github.com/repos/iverstyle/cse758", "Date": "2012-05-28T19:28:29Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<Classes>.remove(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (tempCls.hasTeacher()) { tempCls.removeTeacher(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/2100/buggy-version/src.ScheduleTeachers.java", "BodyUseAPI": ["Classes.removeTeacher()"], "Fixed commit": "a0492ed23237706309d75bf1ae16331d2b3b882e", "Url": "https://api.github.com/repos/iverstyle/cse758", "Date": "2012-05-28T19:28:29Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<Classes>.remove(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (tempCls.hasTeacher()) { tempCls.removeTeacher(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/2100/buggy-version/src.ScheduleTeachers.java", "BodyUseAPI": ["Classes.removeTeacher()"], "Fixed commit": "a0492ed23237706309d75bf1ae16331d2b3b882e", "Url": "https://api.github.com/repos/iverstyle/cse758", "Date": "2012-05-28T19:28:29Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<Classes>.remove(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (tempCls.hasTeacher()) { tempCls.removeTeacher(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/2100/buggy-version/src.ScheduleTeachers.java", "BodyUseAPI": ["Classes.removeTeacher()"], "Fixed commit": "a0492ed23237706309d75bf1ae16331d2b3b882e", "Url": "https://api.github.com/repos/iverstyle/cse758", "Date": "2012-05-28T19:28:29Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<Classes>.remove(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (tempCls.hasTeacher()) { tempCls.removeTeacher(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/2100/buggy-version/src.ScheduleTeachers.java", "BodyUseAPI": ["Classes.removeTeacher()"], "Fixed commit": "a0492ed23237706309d75bf1ae16331d2b3b882e", "Url": "https://api.github.com/repos/iverstyle/cse758", "Date": "2012-05-28T19:28:29Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (valueIdx < 0) node.addError(message); else node.addError(message, positions.get(valueIdx));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/126/buggy-version/src.lombok.javac.Javac.java", "BodyUseAPI": ["lombok.javac.JavacAST.Node.addError(java.lang.String,com.sun.tools.javac.util.JCDiagnostic.DiagnosticPosition)", "java.util.List<com.sun.tools.javac.util.JCDiagnostic.DiagnosticPosition>.get(int)"], "Fixed commit": "bcf6f51cd35db683e5d2ab1b54016616e0869e95", "Url": "https://api.github.com/repos/redundent/lombok", "Date": "2009-09-03T00:40:49Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (valueIdx < 0) node.addWarning(message); else node.addWarning(message, positions.get(valueIdx));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/126/buggy-version/src.lombok.javac.Javac.java", "BodyUseAPI": ["lombok.javac.JavacAST.Node.addWarning(java.lang.String,com.sun.tools.javac.util.JCDiagnostic.DiagnosticPosition)", "java.util.List<com.sun.tools.javac.util.JCDiagnostic.DiagnosticPosition>.get(int)"], "Fixed commit": "bcf6f51cd35db683e5d2ab1b54016616e0869e95", "Url": "https://api.github.com/repos/redundent/lombok", "Date": "2009-09-03T00:40:49Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((savedState) == null) || (state != (savedState))) { for (util.propnet.architecture.components.Proposition p : basePropositions.values()) { p.setValue(false); } for (util.gdl.grammar.GdlSentence s : state.getContents()) { basePropositions.get(s.toTerm()).setValue(true); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/7950/buggy-version/src.com.dumplings.general.DumplingPropNetStateMachine.java", "BodyUseAPI": ["util.statemachine.MachineState.getContents()"], "Fixed commit": "dfd7c6d95553c8bd9c3fa664b83b74e3cbb3a415", "Url": "https://api.github.com/repos/luyota/CS227B-Dumplings", "Date": "2011-05-16T05:45:37Z"},
{"Line": "=>2641", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (edu.umich.clarity.MPSSim.finishedQueries.get(i).peek().getQuery_name().equals(\"dig\")) { real_latency = ((finishedQuery.getEnd_time()) - (finishedQuery.getStart_time())) + ((edu.umich.clarity.MPSSim.randQuery.nextFloat()) * 5.0F); }else { real_latency = (finishedQuery.getEnd_time()) - (finishedQuery.getStart_time()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/5320/buggy-version/src.edu.umich.clarity.MPSSim.java", "BodyUseAPI": [], "Fixed commit": "d1393dab1e3fb545d63e9af4a0844503f34db5a2", "Url": "https://api.github.com/repos/lisqu/GPUSIM", "Date": "2015-11-11T14:37:33Z"},
{"Line": "=>1129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.inaturalist.android.INaturalistService.getObservationJson(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (json == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/7545/buggy-version/iNaturalist.src.main.java.org.inaturalist.android.INaturalistService.java", "BodyUseAPI": [], "Fixed commit": "0f6c738424767a5b7e7bfac01c7c2ef93378e0f5", "Url": "https://api.github.com/repos/budowski/iNaturalistAndroid", "Date": "2016-05-22T06:16:49Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.uci.ics.sdcl.firefly.util.PropertyManager.initializeSingleton()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((manager.pastWorkersFilePath) == null) || (manager.pastWorkersFilePath.isEmpty())) { throw new java.lang.IllegalArgumentException(\"'pastWorkersFilePath' property is not specified.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/5731/buggy-version/src.edu.uci.ics.sdcl.firefly.controller.LiteContainerManager.java", "BodyUseAPI": [], "Fixed commit": "74b2dc9371c25fec9983eb033a747c6b8dd8f9d9", "Url": "https://api.github.com/repos/ferspanghero/photinus", "Date": "2016-01-18T23:24:22Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.counter) <= (this.r)) { java.lang.System.out.println(((this.counter) != (this.r))); java.lang.System.out.println(this.counter); java.lang.System.out.println(this.r); for (int i = 0; i < count; i++) { $$$setupUI$$$(); init(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/3664/buggy-version/src.main.java.GraphView.java", "BodyUseAPI": ["java.io.PrintStream.println(boolean)"], "Fixed commit": "2459747cf3267413a8ae1e875b0384d4ac265282", "Url": "https://api.github.com/repos/Mapkn3/TryJUNG", "Date": "2017-10-31T10:22:27Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(use64Bit)) { for (int i = 0; i < (markers.length); i++) { markers[i] = (markers[i]) & 4294967295L; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/170/buggy-version/components.formats-gpl.src.loci.formats.in.NDPIReader.java", "BodyUseAPI": [], "Fixed commit": "a57d31068ab0977f0ae8a6bdd06ecef9cbcfd5bf", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2015-05-25T11:26:16Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mgdeploy.jsch.MGDJschStopDBTask.getJschSession()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (this.psProcExist(session, MGDSysConfig.CASSANDRA_JCMD_PATTERN)) { if (!(nodeDrain(session))) { logFailure(\"Failed to do node drain\"); session.disconnect(); return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/4059/buggy-version/src.mgdeploy.jsch.MGDJschStopDBTask.java", "BodyUseAPI": ["mgdeploy.jsch.MGDJschStopDBTask.nodeDrain(com.jcraft.jsch.Session)", "com.jcraft.jsch.Session.disconnect()"], "Fixed commit": "db958d468c79bea5c5abc3022f2f392e2b21c975", "Url": "https://api.github.com/repos/zjjljs/mg_deploy", "Date": "2015-03-27T02:01:56Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((z < 1) || (z > (stack.getSize()))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/4614/buggy-version/src.org.doube.util.RoiMan.java", "BodyUseAPI": [], "Fixed commit": "33c7c0313ed749e78355e4ba11ccd628c34577c4", "Url": "https://api.github.com/repos/mdoube/BoneJ", "Date": "2011-04-13T15:02:50Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.greenrobot.eventbus.EventBus.getDefault().isRegistered(this))) { org.greenrobot.eventbus.EventBus.getDefault().register(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/4027/buggy-version/app.src.main.java.es.upsa.mimo.android.diexpenses.fragments.BankAccountsFragment.java", "BodyUseAPI": [], "Fixed commit": "06a5e7b22109d396254cbe12f317ff675363d515", "Url": "https://api.github.com/repos/sepulvedablanco/diexpenses-android", "Date": "2016-04-30T18:54:58Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.greenrobot.eventbus.EventBus.getDefault().isRegistered(this))) { org.greenrobot.eventbus.EventBus.getDefault().register(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/4027/buggy-version/app.src.main.java.es.upsa.mimo.android.diexpenses.fragments.HomeFragment.java", "BodyUseAPI": [], "Fixed commit": "06a5e7b22109d396254cbe12f317ff675363d515", "Url": "https://api.github.com/repos/sepulvedablanco/diexpenses-android", "Date": "2016-04-30T18:54:58Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.greenrobot.eventbus.EventBus.getDefault().isRegistered(this))) { org.greenrobot.eventbus.EventBus.getDefault().register(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/4027/buggy-version/app.src.main.java.es.upsa.mimo.android.diexpenses.fragments.MovementsFragment.java", "BodyUseAPI": [], "Fixed commit": "06a5e7b22109d396254cbe12f317ff675363d515", "Url": "https://api.github.com/repos/sepulvedablanco/diexpenses-android", "Date": "2016-04-30T18:54:58Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.greenrobot.eventbus.EventBus.getDefault().isRegistered(this))) { org.greenrobot.eventbus.EventBus.getDefault().register(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/4027/buggy-version/app.src.main.java.es.upsa.mimo.android.diexpenses.activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "06a5e7b22109d396254cbe12f317ff675363d515", "Url": "https://api.github.com/repos/sepulvedablanco/diexpenses-android", "Date": "2016-04-30T18:54:58Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.LOLLIPOP)) { importDialog = new android.app.Dialog(this, android.R.style.Theme_Material_Light_Dialog_Alert); }else { importDialog = new android.app.Dialog(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/2112/buggy-version/app.src.main.java.com.thoughtworks.mindit.view.HomeActivity.java", "BodyUseAPI": [], "Fixed commit": "268a42b47bfa2249cfd9f8db97f9ecf7732ee928", "Url": "https://api.github.com/repos/Allminds/mind-it-android", "Date": "2016-02-11T10:50:27Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((e.getJoinedUsers().length) + 1) == (edu.chl._2DRacingGame.controllers.MultiplayerSetupController.RACE_SIZE)) { Gdx.app.log(\"MultiplayerSetupController\", \"Locking the room to prevent more players from joining\"); roomProperties.put(\"started\", true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/1083/buggy-version/core.src.edu.chl._2DRacingGame.controllers.MultiplayerSetupController.java", "BodyUseAPI": [], "Fixed commit": "98b607bb4cc285a8da63cddc830ab36b3e15b061", "Url": "https://api.github.com/repos/larsniklasson/2DRacingGame", "Date": "2015-05-21T11:16:36Z"},
{"Line": "=>378", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (fixSpFrag != null) { if (com.vegnab.vegnab.database.VNContract.LDebug.ON) android.util.Log.d(com.vegnab.vegnab.MainVNActivity.LOG_TAG, \"fixSpFrag != null\"); android.content.Context c = getApplicationContext(); android.widget.Toast.makeText(c, c.getResources().getString(R.string.nav_drawer_item_already_up), Toast.LENGTH_SHORT).show(); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/145/buggy-version/app.src.main.java.com.vegnab.vegnab.MainVNActivity.java", "BodyUseAPI": [], "Fixed commit": "60a54d10a3dcfc1a353d9f81fca06b19669b5c04", "Url": "https://api.github.com/repos/rickshory/VegNabAS", "Date": "2017-04-13T12:10:26Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(jsonObj.isNull(nodeName))) { io.leocad.dumbledroid.data.JsonReflector.reflectJsonObject(obj, jsonObj.getJSONObject(nodeName)); }else { obj = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/6311/buggy-version/Dumbledroid.src.io.leocad.dumbledroid.data.JsonReflector.java", "BodyUseAPI": ["org.json.JSONObject.getJSONObject(java.lang.String)", "io.leocad.dumbledroid.data.JsonReflector.reflectJsonObject(java.lang.Object,jsonObj.getJSONObject(nodeName))"], "Fixed commit": "ec2e2c03685369341b8ae3753e0eb66164682e7b", "Url": "https://api.github.com/repos/leocadiotine/Dumbledroid", "Date": "2013-03-21T04:39:02Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["client.AI.game.getMap().getMyCells()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((myCell[i]) == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/2580/buggy-version/src.client.AI.java", "BodyUseAPI": [], "Fixed commit": "6b816c914795750b4991054d1caa6da0cea8946d", "Url": "https://api.github.com/repos/PJeBeK/Soosk", "Date": "2017-02-22T08:48:35Z"},
{"Line": "=>387", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (useLocalizedDpuName()) { eu.unifiedviews.helpers.dpu.localization.Messages messages = moduleFacade.getMessageFromDPUInstance(newDpuInstance); if (!(messages.getString(cz.cuni.mff.xrg.odcs.commons.app.module.DPUModuleManipulator.DPU_NAME_KEY).equals(cz.cuni.mff.xrg.odcs.commons.app.module.DPUModuleManipulator.DPU_NAME_KEY))) { dpu.setName(messages.getString(cz.cuni.mff.xrg.odcs.commons.app.module.DPUModuleManipulator.DPU_NAME_KEY)); } if (!(messages.getString(cz.cuni.mff.xrg.odcs.commons.app.module.DPUModuleManipulator.DPU_MENU_NAME_KEY).equals(cz.cuni.mff.xrg.odcs.commons.app.module.DPUModuleManipulator.DPU_MENU_NAME_KEY))) { dpu.setMenuName(messages.getString(cz.cuni.mff.xrg.odcs.commons.app.module.DPUModuleManipulator.DPU_MENU_NAME_KEY)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/5224/buggy-version/commons-app.src.main.java.cz.cuni.mff.xrg.odcs.commons.app.module.DPUModuleManipulator.java", "BodyUseAPI": [], "Fixed commit": "e177c54e9f09dc184121956e89357ebf92578454", "Url": "https://api.github.com/repos/UnifiedViews/Core", "Date": "2015-06-11T12:12:25Z"},
{"Line": "=>4048", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List.get(int)", "java.util.Collections.synchronizedList(java.util.ArrayList<ucar.unidata.data.DataSource>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((displayControl == null) && (!(uniqueSources.contains(ds)))) { uniqueSources.add(ds); }else if ((!(uniqueSources.contains(ds))) && (!(dcSources.contains(ds)))) { uniqueSources.add(ds); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/1996/buggy-version/src.ucar.unidata.idv.ViewManager.java", "BodyUseAPI": ["java.util.List<ucar.unidata.data.DataSource>.add(ucar.unidata.data.DataSourceImpl)", "java.util.List<ucar.unidata.data.DataSource>.add(ucar.unidata.data.DataSourceImpl)", "java.util.List<ucar.unidata.data.DataSource>.contains(ucar.unidata.data.DataSourceImpl)", "java.util.List<ucar.unidata.data.DataSource>.contains(ucar.unidata.data.DataSourceImpl)"], "Fixed commit": "ce62d1324753aea4fdc362830d14f3500486fa93", "Url": "https://api.github.com/repos/jon4than/IDV", "Date": "2014-02-11T23:23:57Z"},
{"Line": "=>4032", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (displayControl != null) dcSources = ((ucar.unidata.idv.control.DisplayControlImpl) (displayControl)).getDataSources();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/1996/buggy-version/src.ucar.unidata.idv.ViewManager.java", "BodyUseAPI": [], "Fixed commit": "ce62d1324753aea4fdc362830d14f3500486fa93", "Url": "https://api.github.com/repos/jon4than/IDV", "Date": "2014-02-11T23:23:57Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ucar.unidata.idv.IdvPersistenceManager.getBundleIdvVersion()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((ver == null) || ((java.lang.Character.getNumericValue(ver.charAt(0))) < 5)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/1996/buggy-version/src.ucar.unidata.data.imagery.AddeImageDataSource.java", "BodyUseAPI": [], "Fixed commit": "ce62d1324753aea4fdc362830d14f3500486fa93", "Url": "https://api.github.com/repos/jon4than/IDV", "Date": "2014-02-11T23:23:57Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(currentBridge.equals(beginBridge))) { this.shortestPath = this.getRootPath(currentBridge); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/3835/buggy-version/impl.src.main.java.org.opendaylight.netfloc.impl.NetworkGraph.java", "BodyUseAPI": ["ch.icclab.netfloc.impl.NetworkGraph.1.getRootPath(ch.icclab.netfloc.iface.ITraversableBridge)"], "Fixed commit": "74c1e8e375f36ab604dbfbccced05dce882df8c2", "Url": "https://api.github.com/repos/icclab/netfloc", "Date": "2015-11-19T10:14:34Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cz.cvut.fel.webrtc.UserRegistry.getBySession(org.springframework.web.socket.WebSocketSession)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (user != null) { usersByName.remove(user.getName()); usersBySessionId.remove(session.getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/2336/buggy-version/kurento-agent.src.main.java.cz.cvut.fel.webrtc.UserRegistry.java", "BodyUseAPI": ["cz.cvut.fel.webrtc.UserSession.getName()", "java.util.concurrent.ConcurrentHashMap<java.lang.String, cz.cvut.fel.webrtc.UserSession>.remove(user.getName())"], "Fixed commit": "0f4e1f4e0577208aa779e4474316465449ffc861", "Url": "https://api.github.com/repos/charllie/webrtc", "Date": "2015-07-09T09:27:04Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (selection.equals(\"Genres\")) model.addAttribute(\"movies\", movieDao.searchForGenreRecommendations(genreDao.getGenre(searchString), 6)); else return \"forward:search\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/6121/buggy-version/src.at.fh.swenga.controller.MovieController.java", "BodyUseAPI": [], "Fixed commit": "675353f1526bcc43b6490a5d75acd6d24ef25711", "Url": "https://api.github.com/repos/MrOrange1992/oreely", "Date": "2017-06-21T22:25:46Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (str.equalsIgnoreCase(\"pwm\")) { this.type = hu.barbar.tasker.util.OutputConfig.Type.PWM; }else if (str.equalsIgnoreCase(\"io\")) { this.type = hu.barbar.tasker.util.OutputConfig.Type.IO; }else if ((java.lang.Integer.valueOf(str)) == 2) { this.type = hu.barbar.tasker.util.OutputConfig.Type.PWM; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/754/buggy-version/TaskerApp.src.main.java.hu.barbar.tasker.util.OutputState.java", "BodyUseAPI": [], "Fixed commit": "4328d06b17378ce403e0ccfcf4111a81503f0945", "Url": "https://api.github.com/repos/bbkbarbar/pi-tasker", "Date": "2016-12-17T07:48:41Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (p.hasTreasure()) for (int i = 0; i < (allLocations.size()); i++) { if (!(usedLocations.contains(allLocations.get((((allLocations.size()) - 1) - i))))) { bestTarget = allLocations.get((((allLocations.size()) - 1) - i)); break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/5494/buggy-version/MyBot.java", "BodyUseAPI": [], "Fixed commit": "85260c622d85c177216c25dd007fbc8664a58aef", "Url": "https://api.github.com/repos/skzgv/bot", "Date": "2016-03-17T21:07:46Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((((game.treasures().size()) == 0) && ((p.getTurnsToSober()) == 0)) && ((game.allEnemyPirates().get(p.getId()).getTurnsToSober()) == 0)) && ((p.getReloadTurns()) < 2)) { move(game, p, game.allEnemyPirates().get(p.getId()).getLocation(), ((remainingActions) / (availablePirates.size()))); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/5494/buggy-version/MyBot.java", "BodyUseAPI": ["pirates.game.Pirate.getId()", "bots.MyBot.move(pirates.game.PirateGame,pirates.game.Pirate,game.allEnemyPirates().get(p.getId()).getLocation(),((remainingActions) / (availablePirates.size())))", "game.allEnemyPirates().get(p.getId()).getLocation()", "pirates.game.PirateGame.allEnemyPirates()", "game.allEnemyPirates().get(p.getId())"], "Fixed commit": "85260c622d85c177216c25dd007fbc8664a58aef", "Url": "https://api.github.com/repos/skzgv/bot", "Date": "2016-03-17T21:07:46Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(p.hasTreasure())) for (pirates.game.Location l : allLocations) { if (!(usedLocations.contains(l))) { bestTarget = l; break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/5494/buggy-version/MyBot.java", "BodyUseAPI": [], "Fixed commit": "85260c622d85c177216c25dd007fbc8664a58aef", "Url": "https://api.github.com/repos/skzgv/bot", "Date": "2016-03-17T21:07:46Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (availableTreasures.isEmpty()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/5494/buggy-version/MyBot.java", "BodyUseAPI": [], "Fixed commit": "85260c622d85c177216c25dd007fbc8664a58aef", "Url": "https://api.github.com/repos/skzgv/bot", "Date": "2016-03-17T21:07:46Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["softPkg.getDescriptor().getComponent().getComponentType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (ComponentType.RESOURCE.getLiteral().equals(componentType)) { code.setType(CodeFileType.SHARED_LIBRARY); }else { code.setType(CodeFileType.EXECUTABLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/1499/buggy-version/plugins.gov.redhawk.ide.codegen.jinja.cplusplus.src.gov.redhawk.ide.codegen.jinja.cplusplus.CplusplusGenerator.java", "BodyUseAPI": [], "Fixed commit": "f9386d34f5233ca5bf35d635ff2e54812b22fe46", "Url": "https://api.github.com/repos/RedhawkSDR/eclipse-gov.redhawk.codegen", "Date": "2017-02-06T20:06:12Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["softPkg.getDescriptor().getComponent().getComponentType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (ComponentType.RESOURCE.getLiteral().equals(componentType)) { entryPoint = (getSpdBaseName(softPkg)) + (gov.redhawk.ide.codegen.jinja.cplusplus.CplusplusGenerator.SO_SUFFIX); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/1499/buggy-version/plugins.gov.redhawk.ide.codegen.jinja.cplusplus.src.gov.redhawk.ide.codegen.jinja.cplusplus.CplusplusGenerator.java", "BodyUseAPI": [], "Fixed commit": "f9386d34f5233ca5bf35d635ff2e54812b22fe46", "Url": "https://api.github.com/repos/RedhawkSDR/eclipse-gov.redhawk.codegen", "Date": "2017-02-06T20:06:12Z"},
{"Line": "=>305", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.github.ibuildthecloud.gdapi.context.ApiContext.getContext().getPolicy()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (policy == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/1472/buggy-version/code.iaas.auth-logic.src.main.java.io.cattle.platform.iaas.api.auth.dao.impl.AuthDaoImpl.java", "BodyUseAPI": [], "Fixed commit": "953d1deb8947c0b9f99aa98e41aa0c8b56e1b818", "Url": "https://api.github.com/repos/hibooboo2/cattle", "Date": "2015-04-07T01:32:49Z"},
{"Line": "=>548", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((gMaps) != null) { android.view.ViewGroup parent = ((android.view.ViewGroup) (gMaps.getParent())); if (parent != null) { parent.removeView(gMaps); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/5080/buggy-version/android.source.src.es.juvecyl.app.LodgingDetail.java", "BodyUseAPI": [], "Fixed commit": "c26d1b7bd18bf35532896db806fff7bbde210836", "Url": "https://api.github.com/repos/berikin/JuveCyL", "Date": "2014-12-12T11:50:46Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(main.DegreesToHitler.path.isEmpty())) { java.lang.System.out.println(main.DegreesToHitler.path); }else { java.lang.System.out.println(\"This page does not exist\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/2529/buggy-version/src.main.DegreesToHitler.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "e58460bfd356a730190c192aca84b090cd836caa", "Url": "https://api.github.com/repos/Bonspiel2/degrees-of-wikipedia", "Date": "2015-12-14T14:41:44Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (loadShedding == 0) { loadShedding = 0.001; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/2343/buggy-version/src.algorithm.aco.multi.source.Ant.java", "BodyUseAPI": [], "Fixed commit": "947ea92518dc6b0bf4371ca9c1231a4e3a7c5c06", "Url": "https://api.github.com/repos/muztaba/SmartGridOptimization", "Date": "2015-08-05T20:38:43Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["femr.data.daos.IRepository<femr.common.models.IPatient>.findAll(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((patients.size()) > 0) { response.setResponseObject(patients); }else { response.addError(\"patients\", \"No patients available\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/6804/buggy-version/app.femr.business.services.ResearchService.java", "BodyUseAPI": ["femr.business.dtos.ServiceResponse<java.util.List<? extends femr.common.models.IPatient>>.setResponseObject(java.util.List<? extends femr.common.models.IPatient>)"], "Fixed commit": "39d272b0609fa9a655713f3a629bd91fe661abee", "Url": "https://api.github.com/repos/codeitandloadit/femr", "Date": "2014-03-09T04:02:22Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.pow(double,double)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (shift > (((second.prototype.MapView.ruler) * (second.prototype.MapView.mag)) * 1.5)) { float shX = (((((-(myX)) / shift) * (second.prototype.MapView.ruler)) * (second.prototype.MapView.mag)) / 2) + (viewCenterw); float shY = (((((-(myY)) / shift) * (second.prototype.MapView.ruler)) * (second.prototype.MapView.mag)) / 2) + (viewCenterh); canvas.drawLine(shX, shY, ((shX * 11) / 10), ((shY * 11) / 10), text); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/4723/buggy-version/src.second.prototype.MapView.java", "BodyUseAPI": [], "Fixed commit": "dc7628bc15f7ee283d43b1be9c85fb0ca39bbf80", "Url": "https://api.github.com/repos/phenolplus/secondPrototype", "Date": "2011-12-12T08:13:53Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.aksw.defacto.search.query.BingQuery.normalizePredicate(query.getPropertyLabel().trim())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (property.equals(\"NONE\")) { queryString = java.lang.String.format(\"\\\"%s\\\" AND \\\"%s\\\"\", subject, object); }else { queryString = java.lang.String.format(\"\\\"%s\\\" AND \\\"%s\\\" AND \\\"%s\\\"\", subject, property, object); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/8104/buggy-version/defacto-core.src.main.java.org.aksw.defacto.search.query.BingQuery.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "996bf5fbd1ad1e8c7d7a58a7bdd038a1a92a2f67", "Url": "https://api.github.com/repos/SmartDataAnalytics/DeFacto", "Date": "2015-09-02T07:57:04Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.jface.viewers.TreeSelection.getFirstElement()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (selectedObj instanceof org.eclipse.core.resources.IProject) { project = ((org.eclipse.core.resources.IProject) (selectedObj)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/3257/buggy-version/PluginsAndFeatures.azure-toolkit-for-eclipse.com.microsoft.azuretools.hdinsight.src.com.microsoft.azuretools.hdinsight.spark.actions.SubmitHandler.java", "BodyUseAPI": [], "Fixed commit": "47b44d0545b21fd6fc646e1d9d4d5c4318d62d3a", "Url": "https://api.github.com/repos/Eskibear/azure-tools-for-java", "Date": "2017-07-05T04:10:16Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (savedInstanceState != null) mDisplayMode = ((org.gnucash.android.ui.account.AccountsListFragment.DisplayMode) (savedInstanceState.getSerializable(org.gnucash.android.ui.account.AccountsListFragment.STATE_DISPLAY_MODE)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/1584/buggy-version/app.src.main.java.org.gnucash.android.ui.account.AccountsListFragment.java", "BodyUseAPI": ["android.os.Bundle.getSerializable(java.lang.String)"], "Fixed commit": "4a34625499862ce17b29c02e26a3e3a8296037f0", "Url": "https://api.github.com/repos/codinguser/gnucash-android", "Date": "2016-04-11T20:54:36Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["QueryResult.print()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((resultLine.length()) > 0) { java.lang.System.out.println(resultLine); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/3321/buggy-version/src.SocialNetwork.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "1f71c0f0174f73df30f4524fbac41707a0320798", "Url": "https://api.github.com/repos/johnandrewsduvall/CSC_316_Project3", "Date": "2015-12-05T20:34:55Z"},
{"Line": "=>665", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (solrField.startsWith(\"_g_\")) { comparisonBuilder.append(\"(*:* && -[-90,-180 TO 90,180])\"); }else { comparisonBuilder.append(\"(*:* && -[* TO *])\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/5063/buggy-version/db.src.main.java.com.psddev.dari.db.SolrDatabase.java", "BodyUseAPI": [], "Fixed commit": "3829f9ca87429153137acb351ad5995c3b382ac2", "Url": "https://api.github.com/repos/perfectsense/dari", "Date": "2012-10-12T11:25:49Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (startingPage < 1) { return new java.util.ArrayList<com.meltmedia.representation.UserRepresentation>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/3953/buggy-version/src.main.java.com.meltmedia.resource.UserResource.java", "BodyUseAPI": [], "Fixed commit": "9045b3355f6c28b3fbef97c586df856a9db4aba2", "Url": "https://api.github.com/repos/TheFern/theoctagon", "Date": "2015-11-03T22:51:47Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (clazz.isAssignableFrom(throwable.getClass())) return clazz.cast(throwable);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/8634/buggy-version/server.src.main.groovy.ru.ratauth.server.utils.ExceptionUtils.java", "BodyUseAPI": ["java.lang.Class<T>.cast(java.lang.Throwable)"], "Fixed commit": "2497a4377554b5009f0cf2fca93d0e3a7c68ffc7", "Url": "https://api.github.com/repos/lavcraft/ratauth", "Date": "2016-03-08T13:52:15Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (throwable == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/8634/buggy-version/server.src.main.groovy.ru.ratauth.server.utils.ExceptionUtils.java", "BodyUseAPI": [], "Fixed commit": "2497a4377554b5009f0cf2fca93d0e3a7c68ffc7", "Url": "https://api.github.com/repos/lavcraft/ratauth", "Date": "2016-03-08T13:52:15Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<java.lang.String>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (toTag.containsKey(key)) { java.util.List<java.lang.Long> acc = toTag.get(key); acc.addAll(resolved.get(key)); toTag.put(key, acc); }else { toTag.putAll(resolved); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/2197/buggy-version/SciGraph-core.src.main.java.io.scigraph.owlapi.OwlPostprocessor.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.util.List<java.lang.Long>>.put(java.lang.String,java.util.List<java.lang.Long>)", "java.util.Map<java.lang.String, java.util.List<java.lang.Long>>.get(java.lang.String)", "java.util.List<java.lang.Long>.addAll(java.util.List<java.lang.Long>)", "java.util.Map<java.lang.String, java.util.List<java.lang.Long>>.get(java.lang.String)", "java.util.Map<java.lang.String, java.util.List<java.lang.Long>>.putAll(java.util.Map<java.lang.String, java.util.List<java.lang.Long>>)"], "Fixed commit": "4af062e968173eb9d9790c2e4adffa22c3a0e2b3", "Url": "https://api.github.com/repos/SciGraph/SciGraph", "Date": "2015-11-14T00:38:05Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.neutron.server.persistence.iface.T_relationMapper.selectByExample(com.neutron.server.persistence.model.T_relationExample)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (relations != null) { if ((relations.size()) == 1) { paraList.add(\"ok\"); relation = relations.get(0); returnValue = relationMapper.updateByExample(relation, relationExample); paraList.add(returnValue); }else { paraList.add(\"moreThanOneToDelete\"); } }else { paraList.add(\"error\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/2061/buggy-version/src.com.neutron.server.sns.Relation.java", "BodyUseAPI": ["java.util.ArrayList<com.neutron.server.persistence.model.T_relation>.get(int)", "java.util.ArrayList<com.neutron.server.persistence.model.T_relation>.size()"], "Fixed commit": "23633b1bff98346e1f4d0efe369bac62d84bdb2a", "Url": "https://api.github.com/repos/crazypg/neutronserver", "Date": "2014-01-16T08:25:20Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((result.size()) == 0) { sb.append(\"\\t0\\t0\"); }else { sb.append('\\t').append(result.size()); maxT = result.getMaxFrame(); sb.append('\\t').append(maxT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/8879/buggy-version/src.main.java.gdsc.smlm.ij.plugins.SummariseResults.java", "BodyUseAPI": ["gdsc.smlm.results.MemoryPeakResults.size()", "gdsc.smlm.results.MemoryPeakResults.getMaxFrame()", "java.lang.StringBuilder.append(result.size())"], "Fixed commit": "f480ea706471d8b07ed561525637c06d66564101", "Url": "https://api.github.com/repos/aherbert/GDSC-SMLM", "Date": "2017-09-18T11:48:37Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (type instanceof java.lang.reflect.TypeVariable) { if (realTypeMap == null) { return ((java.lang.reflect.TypeVariable) (type)).getBounds()[0]; } java.lang.reflect.Type typeFoundInMap = realTypeMap.get(type.getTypeName()); if (typeFoundInMap != null) { return typeFoundInMap; } return type; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/2801/buggy-version/src.main.java.de.bild.codec.ReflectionHelper.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.reflect.Type>.get(java.lang.String)", "java.lang.reflect.Type.getTypeName()"], "Fixed commit": "e8ea9e894ced863a7b1d90745d162c0df86debca", "Url": "https://api.github.com/repos/axelspringer/polymorphia", "Date": "2017-12-13T12:39:03Z"},
{"Line": "=>934", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(connection.isColumnEncryptionSettingEnabled())) || ((connection.isColumnEncryptionSettingEnabled()) && (encryptionMetadataIsRetrieved))) { if (cachedHandle.tryAddReference()) { setPreparedStatementHandle(cachedHandle.getHandle()); cachedPreparedStatementHandle = cachedHandle; return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/4139/buggy-version/src.main.java.com.microsoft.sqlserver.jdbc.SQLServerPreparedStatement.java", "BodyUseAPI": [], "Fixed commit": "1b8a8db0849d428245f6267a361a611c7a3ae050", "Url": "https://api.github.com/repos/v-PATHngs/mssql-jdbc-PATHngs", "Date": "2017-06-26T20:55:27Z"},
{"Line": "=>323", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((de.dakror.arise.layer.CityHUDLayer.selectedBuilding) != null) de.dakror.arise.layer.CityHUDLayer.selectedBuilding.triggerEvents();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/6/buggy-version/src.main.java.de.dakror.arise.layer.CityHUDLayer.java", "BodyUseAPI": [], "Fixed commit": "b53b2c8bc0539bfd18e674b0206834b9588b640b", "Url": "https://api.github.com/repos/Dakror/Arise", "Date": "2014-04-04T10:47:35Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(upgradeMode)) enabled = canEffort;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/6/buggy-version/src.main.java.de.dakror.arise.ui.BuildButton.java", "BodyUseAPI": [], "Fixed commit": "b53b2c8bc0539bfd18e674b0206834b9588b640b", "Url": "https://api.github.com/repos/Dakror/Arise", "Date": "2014-04-04T10:47:35Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tSpec.getColumnSpec(idCol).getDomain()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((domain.getLowerBound()) != null) { double lower = ((org.knime.core.data.DoubleValue) (domain.getLowerBound())).getDoubleValue(); if (lower < 0) { throw new org.knime.core.node.InvalidSettingsException(\"Negative values in the column\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/583/buggy-version/de.mpicbg.knime.hcs.base.src.de.mpicbg.knime.hcs.base.nodes.manip.col.numformat.NumberFormatterNodeModel.java", "BodyUseAPI": ["org.knime.core.data.DataColumnDomain.getLowerBound()", "((org.knime.core.data.DoubleValue) (domain.getLowerBound())).getDoubleValue()"], "Fixed commit": "48a177916a0ad108c1fd3847a03d6487f819eaa3", "Url": "https://api.github.com/repos/knime-mpicbg/HCS-Tools", "Date": "2016-02-09T13:30:31Z"},
{"Line": "=>360", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (p.self) { com.timepath.Launcher.download(new java.net.URL(p.hash), new java.io.File(((f.getPath()) + \".MD5\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/4869/buggy-version/src.com.timepath.Launcher.java", "BodyUseAPI": ["com.timepath.Launcher.download(java.net.URL,java.io.File)"], "Fixed commit": "efec2a948af4a78d4cf1c400087b21a67e112e92", "Url": "https://api.github.com/repos/TimePath/launcher", "Date": "2013-09-20T23:06:04Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["wyil.util.AttributedCodeBlock.get(java.lang.Class<T>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (map != null) { return map.get(id); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/4652/buggy-version/modules.wyil.src.wyil.util.AttributedCodeBlock.java", "BodyUseAPI": ["map.get(wyil.lang.CodeBlock.Index)"], "Fixed commit": "c5c59ebf7389ff54d5418e6bfa66c582faa8259b", "Url": "https://api.github.com/repos/Whiley/WhileyCompiler", "Date": "2014-11-12T23:32:48Z"},
{"Line": "=>308", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.unacceptableuse.unacceptablebot.handler.ConfigHandler.getLog(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((!((logRS.getString(3).charAt(0)) == '.')) || (!((logRS.getString(3).charAt(0)) == '!'))) { bot.sendIRC().message(channel, logRS.getString(3).toUpperCase(java.util.Locale.ENGLISH)); }else { bot.sendIRC().message(channel, ((sender.getNick()) + \" is a bad boy :(\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/6238/buggy-version/src.com.unacceptableuse.unacceptablebot.UnacceptableBot.java", "BodyUseAPI": ["java.lang.String.toUpperCase(java.util.Locale)", "bot.sendIRC().message(java.lang.String,java.lang.String)", "java.sql.ResultSet.getString(int)"], "Fixed commit": "f1d9be2e3601ce2a646030db9b6de953910dac43", "Url": "https://api.github.com/repos/UnacceptableUse/UnacceptableBOT2", "Date": "2014-08-31T15:41:40Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (oauthModule.isAllowUserCreation()) { userCreationEl.select(org.olat.login.oauth.ui.OAuthAdminController.keys[0], true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/6535/buggy-version/src.main.java.org.olat.login.oauth.ui.OAuthAdminController.java", "BodyUseAPI": [], "Fixed commit": "d69db4363313256b2bbb105dd13dbd26c2a267ee", "Url": "https://api.github.com/repos/klemens/openolat", "Date": "2015-01-06T09:46:45Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentlySelectedMicroscopyFileNode) != null) { ch.ethz.scu.obit.microscopy.processors.data.MicroscopyProcessor.MicroscopyFile microscopyFile = ((ch.ethz.scu.obit.microscopy.processors.data.MicroscopyProcessor.MicroscopyFile) (currentlySelectedMicroscopyFileNode.getUserObject())); boolean found = false; java.util.Iterator<java.util.Map.Entry<java.lang.String, ch.ethz.scu.obit.microscopy.processors.data.MicroscopyProcessor.MicroscopyFile>> it = metadata.getExperiment().microscopyFiles.entrySet().iterator(); while (it.hasNext()) { java.util.Map.Entry<java.lang.String, ch.ethz.scu.obit.microscopy.processors.data.MicroscopyProcessor.MicroscopyFile> entry = it.next(); if ((entry.getValue()) == microscopyFile) { found = true; break; } } if (!found) { currentlySelectedMicroscopyFileNode = null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/6982/buggy-version/AnnotationToolMicroscopy.ch.ethz.scu.obit.microscopy.gui.editors.data.MicroscopyEditor.java", "BodyUseAPI": [], "Fixed commit": "af958b047bc0eaeccfdc41bc743e84c1e2afca10", "Url": "https://api.github.com/repos/aarpon/obit_annotation_tool", "Date": "2014-09-01T08:37:54Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((deck.size()) > 0) addCards(3); else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/2805/buggy-version/src.GameBackEnd.GameBoard.java", "BodyUseAPI": [], "Fixed commit": "be57ec243ab582835cb9a112a9d90c50caf60c8d", "Url": "https://api.github.com/repos/sheryanresutov/Set", "Date": "2015-02-21T18:45:27Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.wso2telco.services.dep.sandbox.util.CommonUtil.getNullOrTrimmedValue(wrapperDTO.getMnc())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (mnc != null) { validationRulesList.add(new com.wso2telco.dep.oneapivalidation.util.ValidationRule(com.wso2telco.dep.oneapivalidation.util.ValidationRule.VALIDATION_TYPE_OPTIONAL_INT_GE_ZERO, \"mnc\", mnc)); validationRulesList.add(new com.wso2telco.dep.oneapivalidation.util.ValidationRule(com.wso2telco.dep.oneapivalidation.util.ValidationRule.VALIDATION_TYPE_MANDATORY_INT_GE_ZERO, \"mcc\", mcc)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/8860/buggy-version/dep-sandbox.src.main.java.com.wso2telco.services.dep.sandbox.servicefactory.customerinfo.GetAttributeRequestHandler.java", "BodyUseAPI": ["java.util.List<com.wso2telco.dep.oneapivalidation.util.ValidationRule>.add(com.wso2telco.dep.oneapivalidation.util.ValidationRule)"], "Fixed commit": "6da660a7329725053c45baf08b12d185ff1bff6c", "Url": "https://api.github.com/repos/rshahintha/sandbox-service", "Date": "2017-01-18T07:04:17Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mode == 0) { results.printDocument(file, i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/4743/buggy-version/cermine-tools.src.main.java.pl.edu.icm.cermine.evaluation.systems.SystemEvaluator.java", "BodyUseAPI": [], "Fixed commit": "a8365412f4c77cc9ce221b44df54cb163780e326", "Url": "https://api.github.com/repos/CeON/CERMINE", "Date": "2016-09-30T18:19:33Z"},
{"Line": "=>488", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (item.hasParent()) { parent = (\" with parent '\" + (item.getParent().getName())) + \"'\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/2686/buggy-version/src.ch.thn.commandop.CommandOP.java", "BodyUseAPI": ["item.getParent().getName()", "ch.thn.commandop.CmdLnItem.getParent()"], "Fixed commit": "32b9405f3a553d0de13c8be0edec3ae5debe0257", "Url": "https://api.github.com/repos/thnaeff/CommandOP", "Date": "2015-04-21T03:20:28Z"},
{"Line": "=>499", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (item.hasParent()) { parent = (\" with parent '\" + (item.getParent().getName())) + \"'\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/2686/buggy-version/src.ch.thn.commandop.CommandOP.java", "BodyUseAPI": ["item.getParent().getName()", "ch.thn.commandop.CmdLnItem.getParent()"], "Fixed commit": "32b9405f3a553d0de13c8be0edec3ae5debe0257", "Url": "https://api.github.com/repos/thnaeff/CommandOP", "Date": "2015-04-21T03:20:28Z"},
{"Line": "=>477", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (item.hasParent()) { parent = (\" with parent '\" + (item.getParent().getName())) + \"'\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/2686/buggy-version/src.ch.thn.commandop.CommandOP.java", "BodyUseAPI": ["item.getParent().getName()", "ch.thn.commandop.CmdLnItem.getParent()"], "Fixed commit": "32b9405f3a553d0de13c8be0edec3ae5debe0257", "Url": "https://api.github.com/repos/thnaeff/CommandOP", "Date": "2015-04-21T03:20:28Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (word.startsWith(\"/*\")) { net.jplugin.core.mtenant.handler.MultiDbSqlHelper.handleTableName(list, (i + 1), schema); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/8525/buggy-version/net.jplugin.core.mtenant.src.net.jplugin.core.mtenant.handler.MultiDbSqlHelper.java", "BodyUseAPI": [], "Fixed commit": "7ccf40d41dd2072fe35ef55ad643a25b5866d14b", "Url": "https://api.github.com/repos/sunlet/jplugin", "Date": "2017-09-28T11:24:21Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.lang3.time.DateUtils.parseDate(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((newRole.getTime()) < (date.getTime())) { time = \" 09:01:00\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/3745/buggy-version/src.main.java.me.kelei.wa.utils.WaUtil.java", "BodyUseAPI": [], "Fixed commit": "b2590c78f25b54847eb0910979ddd251f4de8f15", "Url": "https://api.github.com/repos/keleilei/work-attendance", "Date": "2016-11-04T08:38:34Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((elem.getAnnotation(ru.finam.bustard.Consumes.class)) != null) { generator.addListener(((javax.lang.model.element.ExecutableElement) (elem))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/3694/buggy-version/bustard-java.src.main.java.ru.finam.bustard.codegen.ListenerProcessor.java", "BodyUseAPI": [], "Fixed commit": "38a10204d2a1a6362274d9566cfbf33acd02f589", "Url": "https://api.github.com/repos/FinamTrade/bustard", "Date": "2013-04-19T15:11:00Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (shareListener != null) { shareListener.onSuccess(getShareMedia(), BiliShareStatusCode.ST_CODE_SUCCESSED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/9291/buggy-version/library.src.main.java.com.bilibili.socialize.share.core.handler.generic.GenericShareHandler.java", "BodyUseAPI": ["SocializeListeners.ShareListener.onSuccess(com.bilibili.socialize.share.core.SocializeMedia,BiliShareStatusCode.ST_CODE_SUCCESSED)"], "Fixed commit": "913cd961542972f5ec76d273099644f923049047", "Url": "https://api.github.com/repos/gnastnosaj/BiliShare", "Date": "2017-10-30T01:44:01Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((b.getType()) == (org.bukkit.Material.WATER)) && ((b.getData().getData()) >= 6)) isEvaporating = true; else if (((b.getType()) == (org.bukkit.Material.STATIONARY_WATER)) && ((b.getData().getData()) == 1)) isEvaporating = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/1390/buggy-version/src.main.java.net.chrisknyfe.watersensor.WaterSensor.java", "BodyUseAPI": ["org.bukkit.block.BlockState.getData()", "org.bukkit.block.BlockState.getType()", "b.getData().getData()"], "Fixed commit": "e98ce8514a5dbaa2d70bb51ecc0701a8fc494ab4", "Url": "https://api.github.com/repos/Chrisknyfe/WaterSensor", "Date": "2011-10-29T19:19:28Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this._regionTaskStackMap.containsKey(region)) == false) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/5939/buggy-version/src.com.secpro.platform.monitoring.schedule.services.TaskCoreService.java", "BodyUseAPI": [], "Fixed commit": "86e039078b253b92186802a7449816ef4935a487", "Url": "https://api.github.com/repos/baiyanwei/metrics-schedule-unit", "Date": "2013-12-16T06:58:34Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((taskObj.getIsRealtime()) == true) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/5939/buggy-version/src.com.secpro.platform.monitoring.schedule.services.taskunit.RegionTaskStack.java", "BodyUseAPI": [], "Fixed commit": "86e039078b253b92186802a7449816ef4935a487", "Url": "https://api.github.com/repos/baiyanwei/metrics-schedule-unit", "Date": "2013-12-16T06:58:34Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(scanner.hasNextLine())) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/3952/buggy-version/src.org.yoooo.se1.Application.java", "BodyUseAPI": [], "Fixed commit": "9f92c3a8fc35cce850b9e54ed1d996994584b8cf", "Url": "https://api.github.com/repos/SE-Lab2017/Lab1", "Date": "2017-09-15T08:43:48Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (inputText != null) java.lang.System.out.println(org.yoooo.se1.Main.generateNewText(inputText));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/3952/buggy-version/src.org.yoooo.se1.Application.java", "BodyUseAPI": ["org.yoooo.se1.Main.generateNewText(java.lang.String)", "java.io.PrintStream.println(org.yoooo.se1.Main.generateNewText(inputText))"], "Fixed commit": "9f92c3a8fc35cce850b9e54ed1d996994584b8cf", "Url": "https://api.github.com/repos/SE-Lab2017/Lab1", "Date": "2017-09-15T08:43:48Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["item.getPrice().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((price.length()) > 6) price = price.substring(0, 5);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/4780/buggy-version/Code.ShoppingList.src.ch.unibe.ese.shopnote.adapters.ItemAdapter.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "35dfa7b0a312d1a07c3f0a76229a158458088b39", "Url": "https://api.github.com/repos/ese-unibe-ch/ese2013-team8", "Date": "2013-12-09T20:09:39Z"},
{"Line": "=>543", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (directory.exists()) { org.apache.cassandra.io.util.FileUtils.deleteRecursive(directory); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/4256/buggy-version/src.java.org.apache.cassandra.net.OutboundTcpConnection.java", "BodyUseAPI": [], "Fixed commit": "4a1b95df8fb411a1e7cfef351f6c126d6c178104", "Url": "https://api.github.com/repos/aweisberg/cassandra", "Date": "2015-02-11T21:25:29Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ac.simons.autolinker.AutoLinker.autoLinkHelper(java.lang.String,org.jsoup.nodes.Node,ac.simons.autolinker.Linkable)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (changedElement != null) { newAnchors.remove(childNode); newAnchors.add(changedElement); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/233/buggy-version/src.main.java.ac.simons.autolinker.AutoLinker.java", "BodyUseAPI": ["java.util.List<org.jsoup.nodes.Node>.add(org.jsoup.nodes.Element)"], "Fixed commit": "5219e73767d24fbe1b62465e6d146ad8473cb245", "Url": "https://api.github.com/repos/michael-simons/java-autolinker", "Date": "2012-09-21T21:09:00Z"},
{"Line": "=>493", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (table == null) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/8458/buggy-version/src.main.java.com.sk89q.craftbook.circuits.plc.lang.Perlstone.java", "BodyUseAPI": [], "Fixed commit": "2caf0e84b27f2492488ac0b4e5f2f69bd587af9e", "Url": "https://api.github.com/repos/sk89q/craftbook", "Date": "2013-07-17T08:24:44Z"},
{"Line": "=>378", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.zst.xposed.halo.floatingwindow3.Util.getFailsafeStringFromObject(<nulltype>,java.lang.Object,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (packageName.equals(\"com.whatsapp\")) isMovable = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/1467/buggy-version/app.src.main.java.com.zst.xposed.halo.floatingwindow3.AndroidHooks.java", "BodyUseAPI": [], "Fixed commit": "9e515d19a97b5ba9a6c04849ae49ef7c9bb28a19", "Url": "https://api.github.com/repos/shooash/XHFW3", "Date": "2016-06-04T14:38:35Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (event.getSlotType().equals(InventoryType.SlotType.OUTSIDE)) { return; }else { if (viewing.contains(event.getWhoClicked().getName())) { event.setCancelled(true); org.bukkit.entity.Player player = ((org.bukkit.entity.Player) (event.getWhoClicked())); com.thorindev.gui.InventoryGUI.Row row = getRowFromSlot(event.getSlot()); if (!(click.click(player, this, row, ((event.getSlot()) - ((row.getRow()) * 9)), event.getCurrentItem()))) { close(player); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/1491/buggy-version/src.com.thorindev.gui.InventoryGUI.java", "BodyUseAPI": ["com.thorindev.gui.InventoryGUI.getRowFromSlot(event.getSlot())", "org.bukkit.event.inventory.InventoryClickEvent.getSlot()", "event.getWhoClicked().getName()", "org.bukkit.event.inventory.InventoryClickEvent.getWhoClicked()", "com.thorindev.gui.InventoryGUI.onClick.click(org.bukkit.entity.Player,com.thorindev.gui.InventoryGUI,com.thorindev.gui.InventoryGUI.Row,((event.getSlot()) - ((row.getRow()) * 9)),event.getCurrentItem())", "java.util.List<java.lang.String>.contains(event.getWhoClicked().getName())", "org.bukkit.event.inventory.InventoryClickEvent.getWhoClicked()", "org.bukkit.event.inventory.InventoryClickEvent.getCurrentItem()", "org.bukkit.event.inventory.InventoryClickEvent.setCancelled(boolean)", "org.bukkit.event.inventory.InventoryClickEvent.getSlot()"], "Fixed commit": "65bd45dd55604c2d4376af23d8a9e8ef45306ff5", "Url": "https://api.github.com/repos/chriscn/Darwin", "Date": "2016-11-26T12:18:48Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javassist.CtClass.getDeclaredFields()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((fields.length) > 0) { decodeBuff.append(\"try {\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/4588/buggy-version/agent.src.main.java.io.bigio.agent.JATransformer.java", "BodyUseAPI": [], "Fixed commit": "a98a7c68e5f77ba1c2c6caea40e3932f05f5838a", "Url": "https://api.github.com/repos/Archarithms/bigio", "Date": "2015-04-29T14:12:40Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javassist.CtClass.getDeclaredFields()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((fields.length) > 0) { decodeBuff.append(\"} catch (Exception ex) { ex.printStackTrace(); }\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/4588/buggy-version/agent.src.main.java.io.bigio.agent.JATransformer.java", "BodyUseAPI": [], "Fixed commit": "a98a7c68e5f77ba1c2c6caea40e3932f05f5838a", "Url": "https://api.github.com/repos/Archarithms/bigio", "Date": "2015-04-29T14:12:40Z"},
{"Line": "=>367", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.max(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((overlapScores.size()) > k) return ((java.lang.Integer) (overlapScores.toArray()[k])); else return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/834/buggy-version/src.main.java.model.MARK_II.SpatialPooler.java", "BodyUseAPI": ["java.util.Set<java.lang.Integer>.toArray()"], "Fixed commit": "58895f9520379443d936748518e5c835be4362bf", "Url": "https://api.github.com/repos/WalnutiQ/WalnutiQ", "Date": "2014-05-04T06:07:58Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((result.getOriginalAccuracy()) - (result.getZeroRAccuracy())) == 0.0) { list.add(((result.getAccuracy()) / (result.getZeroRAccuracy()))); }else { list.add((((result.getAccuracy()) - (result.getZeroRAccuracy())) / ((result.getOriginalAccuracy()) - (result.getZeroRAccuracy())))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/6218/buggy-version/src.gui.org.deidentifier.arx.gui.view.impl.utility.ViewStatisticsLogisticRegressionOutput.java", "BodyUseAPI": ["java.util.List<java.lang.Double>.add((((result.getAccuracy()) - (result.getZeroRAccuracy())) / ((result.getOriginalAccuracy()) - (result.getZeroRAccuracy()))))", "org.deidentifier.arx.aggregates.StatisticsClassification.getZeroRAccuracy()", "java.util.List<java.lang.Double>.add(((result.getAccuracy()) / (result.getZeroRAccuracy())))", "org.deidentifier.arx.aggregates.StatisticsClassification.getZeroRAccuracy()", "org.deidentifier.arx.aggregates.StatisticsClassification.getZeroRAccuracy()", "org.deidentifier.arx.aggregates.StatisticsClassification.getAccuracy()", "org.deidentifier.arx.aggregates.StatisticsClassification.getOriginalAccuracy()", "org.deidentifier.arx.aggregates.StatisticsClassification.getAccuracy()"], "Fixed commit": "d8b6a902100f69c965365ab09ffe3ee496a56085", "Url": "https://api.github.com/repos/arx-deidentifier/arx", "Date": "2016-04-25T16:25:49Z"},
{"Line": "=>449", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((context.model.getSelectedFeatures().isEmpty()) || (context.model.getSelectedClasses().isEmpty())) { doReset(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/6218/buggy-version/src.gui.org.deidentifier.arx.gui.view.impl.utility.ViewStatisticsLogisticRegression.java", "BodyUseAPI": [], "Fixed commit": "d8b6a902100f69c965365ab09ffe3ee496a56085", "Url": "https://api.github.com/repos/arx-deidentifier/arx", "Date": "2016-04-25T16:25:49Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (genericCaptcha) { android.widget.Toast toast = android.widget.Toast.makeText(context, \"Please fill out Captcha\", Toast.LENGTH_SHORT); toast.show(); android.widget.EditText captchaText = ((android.widget.EditText) (((android.app.Activity) (context)).findViewById(R.id.post_comment_captcha_editText))); captchaText.setVisibility(View.VISIBLE); getCaptcha(context); return; }else if (jsonObjectResponse.getResult().has(\"error\")) { android.widget.Toast toast = android.widget.Toast.makeText(context, jsonObjectResponse.getResult().get(\"error\").getAsString(), Toast.LENGTH_SHORT); toast.show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/4243/buggy-version/app.src.main.java.com.luorrak.ouroboros.util.NetworkHelper.java", "BodyUseAPI": [], "Fixed commit": "572e2fadbaca893f97b21534f74862ee59e6e922", "Url": "https://api.github.com/repos/Luorrak/Ouroboros", "Date": "2015-07-18T22:38:12Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tower.get(0)[0].isDestroyed()) && ((tower.get(0)[0].getDestroyTimer()) == 0)) { java.lang.System.out.println(\"riemuf\"); tower.remove(0); (diffCounter)++; tower.add(new net.codegames.towerninja.Brick[net.codegames.towerninja.Game.TOWER_WIDTH]); for (int i = 0; i < (net.codegames.towerninja.Game.TOWER_HEIGHT); i++) { for (int j = 0; j < (net.codegames.towerninja.Game.TOWER_WIDTH); j++) { if ((tower.get(i)[j]) != null) { tower.get(i)[j].setDestination(i, j); if (tower.get(i)[j].isOnTower()) tower.get(i)[j].setyLocation(tower.get(i)[j].exactYDestination()); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/2711/buggy-version/TowerNinja.src.net.codegames.towerninja.Game.java", "BodyUseAPI": ["java.util.Vector<net.codegames.towerninja.Brick[]>.remove(int)", "tower.get(i)[j].isOnTower()", "java.util.Vector<net.codegames.towerninja.Brick[]>.get(int)", "java.util.Vector<net.codegames.towerninja.Brick[]>.get(int)", "java.util.Vector<net.codegames.towerninja.Brick[]>.add(net.codegames.towerninja.Brick[])", "java.util.Vector<net.codegames.towerninja.Brick[]>.get(int)", "java.util.Vector<net.codegames.towerninja.Brick[]>.get(int)", "tower.get(i)[j].setyLocation(tower.get(i)[j].exactYDestination())", "tower.get(i)[j].exactYDestination()", "tower.get(i)[j].setDestination(int,int)", "java.util.Vector<net.codegames.towerninja.Brick[]>.get(int)"], "Fixed commit": "39557e37e561292aa75eecaafea573d03d0b0fb8", "Url": "https://api.github.com/repos/chameleonw/towerninja", "Date": "2013-02-03T18:50:54Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isResumed()) selectActionsBar((-1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/1712/buggy-version/Android.src.org.droidplanner.android.fragments.FlightActionsFragment.java", "BodyUseAPI": [], "Fixed commit": "c661ca43ea47a720fafd8b25b53577777ee9be53", "Url": "https://api.github.com/repos/ne0fhyk/droidplanner", "Date": "2014-11-12T10:40:23Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(initialDirectory.exists())) { initialDirectory = new java.io.File(bayern.steinbrecher.green2.data.EnvironmentHandler.DEFAULT_SAVE_PATH); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/1060/buggy-version/EnvironmentHandler.src.bayern.steinbrecher.green2.data.EnvironmentHandler.java", "BodyUseAPI": [], "Fixed commit": "583c622811f4972c9b73c514c5ded2a60116f8de", "Url": "https://api.github.com/repos/TrackerSB/Green2", "Date": "2017-02-11T14:16:29Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.enterprise.inject.Instance<org.glassfish.jersey.grizzly2.httpserver.GrizzlyHttpContainer>.get()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if ((container == null) && (org.microbean.jersey.container.grizzly2.http.cdi.Producers.logger.isWarnEnabled())) { org.microbean.jersey.container.grizzly2.http.cdi.Producers.logger.warn(\"No GrizzlyHttpContainer present\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/3290/buggy-version/src.main.java.org.microbean.jersey.container.grizzly2.http.cdi.Producers.java", "BodyUseAPI": ["org.slf4j.Logger.warn(java.lang.String)"], "Fixed commit": "12b1b6db5315ce9d0f892115c175f4c4de9bc070", "Url": "https://api.github.com/repos/ljnelson/microbean-jersey-container-grizzly2-http-cdi", "Date": "2017-05-01T00:11:36Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.microbean.jersey.container.grizzly2.http.cdi.Producers.logger.isInfoEnabled()) { org.microbean.jersey.container.grizzly2.http.cdi.Producers.logger.info(\"Created HttpServer: {}\", returnValue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/3290/buggy-version/src.main.java.org.microbean.jersey.container.grizzly2.http.cdi.Producers.java", "BodyUseAPI": ["org.slf4j.Logger.info(java.lang.String,org.glassfish.grizzly.http.server.HttpServer)"], "Fixed commit": "12b1b6db5315ce9d0f892115c175f4c4de9bc070", "Url": "https://api.github.com/repos/ljnelson/microbean-jersey-container-grizzly2-http-cdi", "Date": "2017-05-01T00:11:36Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.microbean.jersey.container.grizzly2.http.cdi.Producers.logger.isInfoEnabled()) { org.microbean.jersey.container.grizzly2.http.cdi.Producers.logger.info(\"Created GrizzlyHttpContainer: {}\", returnValue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/3290/buggy-version/src.main.java.org.microbean.jersey.container.grizzly2.http.cdi.Producers.java", "BodyUseAPI": ["org.slf4j.Logger.info(java.lang.String,org.glassfish.jersey.grizzly2.httpserver.GrizzlyHttpContainer)"], "Fixed commit": "12b1b6db5315ce9d0f892115c175f4c4de9bc070", "Url": "https://api.github.com/repos/ljnelson/microbean-jersey-container-grizzly2-http-cdi", "Date": "2017-05-01T00:11:36Z"},
{"Line": "=>401", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((plugin.getConfig().getStringList(\"commandsonwin\")) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/4619/buggy-version/src.tntrun.arena.handlers.GameHandler.java", "BodyUseAPI": [], "Fixed commit": "ab438b08e4e83f8fe69ea5b60ecc7e2158447f0e", "Url": "https://api.github.com/repos/ShevchikUnsupportedProjects/TNTRun", "Date": "2015-07-28T07:18:30Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.overlord.rtgov.common.jpa.JpaStore.withJpa(org.overlord.rtgov.common.jpa.JpaStore.JpaWork<java.util.List<org.overlord.rtgov.analytics.situation.Situation>>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (situations2 != null) { if (situations != null) { situations.addAll(situations2); }else { situations = situations2; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/3060/buggy-version/modules.activity-analysis.situation-store-jpa.src.main.java.org.overlord.rtgov.analytics.situation.store.jpa.JPASituationStore.java", "BodyUseAPI": ["java.util.List<org.overlord.rtgov.analytics.situation.Situation>.addAll(java.util.List<org.overlord.rtgov.analytics.situation.Situation>)"], "Fixed commit": "9fe4f25a82bd089ed1fcc3248ee4c4949839ac60", "Url": "https://api.github.com/repos/Governance/rtgov", "Date": "2015-04-27T14:32:50Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!testing) { try { initImages(); } catch (java.lang.Exception e) { java.lang.System.out.println(\"exception\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/9114/buggy-version/src.main.java.WeaponList.java", "BodyUseAPI": [], "Fixed commit": "344838f122ddf934d051dac31f8ba4bbb2485495", "Url": "https://api.github.com/repos/geenen124/Team1BubbleTrouble", "Date": "2015-09-11T11:40:36Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((((x < (l1.getP1().X)) && (x < (l1.getP2().X))) | ((x > (l1.getP1().X)) && (x > (l1.getP2().X)))) | ((y > (l1.getP1().Y)) && (y > (l1.getP2().Y)))) | ((y < (l1.getP1().Y)) && (y < (l1.getP2().Y)))) { throw new components.InvalidCoordinatesException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/5642/buggy-version/src.main.java.components.Intersection.java", "BodyUseAPI": [], "Fixed commit": "2e5abe73f0043ddb11201e786c01fddc004ed603", "Url": "https://api.github.com/repos/Tushar-Naik/Coordinates", "Date": "2015-01-09T19:24:21Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((((x < (l2.getP1().X)) && (x < (l2.getP2().X))) | ((x > (l2.getP1().X)) && (x > (l2.getP2().X)))) | ((y > (l2.getP1().Y)) && (y > (l2.getP2().Y)))) | ((y < (l2.getP1().Y)) && (y < (l2.getP2().Y)))) { throw new components.InvalidCoordinatesException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/5642/buggy-version/src.main.java.components.Intersection.java", "BodyUseAPI": [], "Fixed commit": "2e5abe73f0043ddb11201e786c01fddc004ed603", "Url": "https://api.github.com/repos/Tushar-Naik/Coordinates", "Date": "2015-01-09T19:24:21Z"},
{"Line": "=>296", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((wakeLock) != null) wakeLock.acquire();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/3120/buggy-version/src.com.yy2039.answermachine.AnswerMachineActivity.java", "BodyUseAPI": [], "Fixed commit": "d438c651e5b0b35c2ac8ea8e85cb2848a4dd2ed4", "Url": "https://api.github.com/repos/PATHouC/AM", "Date": "2016-06-08T14:16:31Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((wakeLock) != null) wakeLock.release();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/3120/buggy-version/src.com.yy2039.answermachine.AnswerMachineActivity.java", "BodyUseAPI": [], "Fixed commit": "d438c651e5b0b35c2ac8ea8e85cb2848a4dd2ed4", "Url": "https://api.github.com/repos/PATHouC/AM", "Date": "2016-06-08T14:16:31Z"},
{"Line": "=>320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sectionEntry.getKey()) != null) { writer.write(((\"[\" + (sectionEntry.getKey())) + \"]\")); writer.newLine(); for (java.util.Map.Entry<java.lang.String, java.lang.String> pairEntry : sectionEntry.getValue().entrySet()) { writer.write((((\"\\t\" + (pairEntry.getKey())) + \"=\") + (pairEntry.getValue()))); writer.newLine(); } writer.newLine(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/2331/buggy-version/src.btwmods.io.Settings.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.entrySet()", "java.io.BufferedWriter.write(java.lang.String)", "java.util.Map.Entry<java.lang.String, java.util.Map<java.lang.String, java.lang.String>>.getKey()", "java.util.Map.Entry<java.lang.String, java.util.Map<java.lang.String, java.lang.String>>.getValue()"], "Fixed commit": "80ae5efd272d456233d67fb0813b95be04901c33", "Url": "https://api.github.com/repos/btwmodsbiz/server-api", "Date": "2012-11-17T05:05:34Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.zohaltech.app.corevocabulary.data.Vocabularies.select(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((currentVocab.getThemeId()) > themeId) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/4407/buggy-version/app.src.main.java.com.zohaltech.app.corevocabulary.classes.LearningStatus.java", "BodyUseAPI": [], "Fixed commit": "5bd3c1549ed94164794c39fc7039fcbe8cf1eebb", "Url": "https://api.github.com/repos/zohaltech/CoreVocabulary", "Date": "2015-10-18T13:18:01Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.jsoup.helper.StringUtil.isBlank(thisOption)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/7304/buggy-version/src.main.java.application.util.BuildUrlParser.java", "BodyUseAPI": [], "Fixed commit": "c616355d4ae448259befa26546ad3bb7237db76f", "Url": "https://api.github.com/repos/sidola/BuildFinder", "Date": "2016-05-03T15:16:13Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (amountOfPlayers > 2) { cardsInSupply.put(tempCard, 12); }else { cardsInSupply.put(tempCard, 8); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/7459/buggy-version/src.tda367.dominion.server.model.Supply.java", "BodyUseAPI": [], "Fixed commit": "e3fc1607c400dde273d7be0c6994c384c50e313a", "Url": "https://api.github.com/repos/Glazastik/Dominion", "Date": "2013-05-08T13:34:31Z"},
{"Line": "=>365", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (type == (java.lang.Double.class)) { try { double i = java.lang.Double.parseDouble(s); return true; } catch (java.lang.NumberFormatException e) { return false; } }else if (type == (java.lang.String.class)) { return true; }else { java.lang.System.err.println(((\"Invalid class: \" + (type.getName())) + \"...\\nHandling as a String\")); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/1194/buggy-version/DB_Project_3.src.DataBaseHelper.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)", "java.lang.Class<?>.getName()"], "Fixed commit": "afa1203048b5a9a8924fa9f160f04bcfe1c49b49", "Url": "https://api.github.com/repos/jtfakult/DB_Project_3", "Date": "2017-02-27T04:03:42Z"},
{"Line": "=>306", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cols.size()) > 0) { for (java.lang.String field : cols) { if ((updateStr.length()) > 0) { updateStr.append(','); } if (!(field.equals(optLckCol))) { updateStr.append(identifier(field)).append(\"=IFNULL(?,\").append(identifier(field)).append(\")\"); }else { updateStr.append(identifier(field)).append(\"=(IFNULL(\").append(identifier(field)).append(\",IFNULL(?,0))+1)\"); } append(params, field, (++pos)); } }else { for (java.lang.String field : cols) { if ((updateStr.length()) > 0) { updateStr.append(','); } updateStr.append(identifier(field)).append(\"=\").append(identifier(field)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/585/buggy-version/obase-mysql.src.main.java.com.github.obase.mysql.jdbc.SqlMetaKit.java", "BodyUseAPI": [], "Fixed commit": "64ad4bd833a07f743ca8dd6b0f23bc300901533e", "Url": "https://api.github.com/repos/obase/java", "Date": "2017-01-04T07:58:05Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eu.esdihumboldt.hale.io.gml.reader.internal.StreamGmlReader.getSource()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((source.getLocation()) != null) { scheme = source.getLocation().getScheme(); query = source.getLocation().getQuery(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/3045/buggy-version/io.plugins.eu.esdihumboldt.hale.io.gml.src.eu.esdihumboldt.hale.io.gml.reader.internal.StreamGmlReader.java", "BodyUseAPI": ["source.getLocation().getScheme()", "eu.esdihumboldt.hale.common.core.io.supplier.LocatableInputSupplier<? extends java.io.InputStream>.getLocation()", "source.getLocation().getQuery()", "eu.esdihumboldt.hale.common.core.io.supplier.LocatableInputSupplier<? extends java.io.InputStream>.getLocation()"], "Fixed commit": "e00ebc61e203bb734beb08a22f32128e40a09dc6", "Url": "https://api.github.com/repos/stempler/hale", "Date": "2017-01-18T18:42:52Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(android.text.TextUtils.isEmpty(com.project.ada.silversparro.core.Persistence.getDataSetName()))) { input.setText(com.project.ada.silversparro.core.Persistence.getDataSetName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/5677/buggy-version/app.src.main.java.com.project.ada.silversparro.core.DataSetActivity.java", "BodyUseAPI": [], "Fixed commit": "52c8977ee204205a46502fd9b39f5a299702bdde", "Url": "https://api.github.com/repos/ankit209/silver-sparro", "Date": "2017-09-03T07:17:02Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((pvLoggerID) != (PV_LOG_CHOOSER.getPVLogId())) pvLoggerDataSource = new xal.service.pvlogger.sim.PVLoggerDataSource(PV_LOG_CHOOSER.getPVLogId());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/1598/buggy-version/apps.machinesimulator.src.xal.app.machinesimulator.MachineSimulatorDocument.java", "BodyUseAPI": ["xal.service.pvlogger.apputils.browser.PVLogSnapshotChooser.getPVLogId()"], "Fixed commit": "922dcfe88dda517773adf3ec5d43bd1d2d8b10b1", "Url": "https://api.github.com/repos/openxal/openxal", "Date": "2016-04-06T16:16:05Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles(java.io.FileFilter)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (filesArray == null) { filesArray = new java.io.File[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/2047/buggy-version/FTP.src.main.java.core.server.Server.java", "BodyUseAPI": [], "Fixed commit": "3545cabc3b2ff4a09c92c6390c0088514044218f", "Url": "https://api.github.com/repos/demarkok/JavaHwTerm4", "Date": "2017-05-01T14:48:39Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.StringBuffer.toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((content.length()) > 4500) { content = content.replaceAll(\"&nbsp;\", \" \").replaceAll(\"<div>\", \"\").replaceAll(\"<br>\", \"\\r\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/3759/buggy-version/ffaccore.src.com.sai.ffac.core.jobs.SendOrderReportingJob.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)", "java.lang.String.replaceAll(java.lang.String,java.lang.String)", "java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "a8db0be67678e83d6d3ebb528b681a7fb5645e1b", "Url": "https://api.github.com/repos/saiffac/ffac", "Date": "2014-10-05T07:37:11Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.System.currentTimeMillis()) > (timeWhenNextFiringPermittedMillis)) pendingFiring = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/2390/buggy-version/src.main.java.org.jtrfp.trcl.beh.ProjectileFiringBehavior.java", "BodyUseAPI": [], "Fixed commit": "c6dfeed14092d484e70bd31b096d1ba4127b2e9d", "Url": "https://api.github.com/repos/jtrfp/terminal-recall", "Date": "2015-01-30T06:27:35Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((portalCommand.startsWith(\"#\")) && (!((this.plugin.getSettings().hasCommandLevel(\"c\")) && ((sender.hasPermission(\"advancedportals.createportal.commandlevel.console\")) || ((this.plugin.getSettings().hasCommandLevel(\"k\")) && (sender.isOp())))))) { player.sendMessage(((PluginMessages.customPrefixFail) + \" You need permission to make a console command portal!\")); return true; }else if ((portalCommand.startsWith(\"!\")) && (!((this.plugin.getSettings().hasCommandLevel(\"o\")) && ((sender.hasPermission(\"advancedportals.createportal.commandlevel.op\")) || ((this.plugin.getSettings().hasCommandLevel(\"h\")) && (sender.isOp())))))) { player.sendMessage(((PluginMessages.customPrefixFail) + \" You need permission to make a op command portal!\")); return true; }else if ((portalCommand.startsWith(\"^\")) && (!((this.plugin.getSettings().hasCommandLevel(\"p\")) && ((sender.hasPermission(\"advancedportals.createportal.commandlevel.perms\")) || ((this.plugin.getSettings().hasCommandLevel(\"e\")) && (sender.isOp())))))) { player.sendMessage(((PluginMessages.customPrefixFail) + \" You need permission to make a all perms command portal!\")); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/3890/buggy-version/src.com.sekwah.advancedportals.AdvancedPortalsCommand.java", "BodyUseAPI": ["java.lang.String.startsWith(java.lang.String)", "this.plugin.getSettings().hasCommandLevel(java.lang.String)", "java.lang.String.startsWith(java.lang.String)", "com.sekwah.advancedportals.AdvancedPortalsPlugin.getSettings()", "com.sekwah.advancedportals.AdvancedPortalsPlugin.getSettings()", "this.plugin.getSettings().hasCommandLevel(java.lang.String)", "com.sekwah.advancedportals.AdvancedPortalsPlugin.getSettings()", "org.bukkit.command.CommandSender.isOp()", "org.bukkit.command.CommandSender.hasPermission(java.lang.String)", "com.sekwah.advancedportals.AdvancedPortalsPlugin.getSettings()", "org.bukkit.command.CommandSender.isOp()", "this.plugin.getSettings().hasCommandLevel(java.lang.String)", "this.plugin.getSettings().hasCommandLevel(java.lang.String)", "org.bukkit.command.CommandSender.hasPermission(java.lang.String)"], "Fixed commit": "1bf886e909e49da31252ba1f88a328ac92c766a8", "Url": "https://api.github.com/repos/RaGeXMe/Advanced-Portals-Glowstone", "Date": "2017-04-20T02:55:14Z"},
{"Line": "=>409", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JOptionPane.showInputDialog(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (urlPrefix == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/9224/buggy-version/src.main.java.com.thedeanda.ajaxproxy.ui.ResourceViewerPanel.java", "BodyUseAPI": [], "Fixed commit": "b0691a09e564583e5ebfdd296606b6209a2d5e57", "Url": "https://api.github.com/repos/mdeanda/ajaxproxy", "Date": "2014-09-10T06:07:17Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (opendap.wcs.v2_0.ServerCapabilities._responseFormats.containsKey(name)) return opendap.wcs.v2_0.ServerCapabilities._responseFormats.get(name);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/9070/buggy-version/src.opendap.wcs.v2_0.ServerCapabilities.java", "BodyUseAPI": ["java.util.concurrent.ConcurrentHashMap<java.lang.String, opendap.wcs.v2_0.WcsResponseFormat>.get(java.lang.String)"], "Fixed commit": "d1b561be24cb2e945e9e62465263c0b1dc0d7916", "Url": "https://api.github.com/repos/OPENDAP/olfs", "Date": "2017-09-12T21:32:45Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (barrierOption.getOptionType().equals(OptionType.CALL)) { throw new com.opengamma.OpenGammaRuntimeException(\"ONE_LOOK / Vanilla Barriers do not apply to a DOWN type of Barrier with OptionType.PUT. Confirm that the intended samplingFrequency is ONE_LOOK\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/5514/buggy-version/projects.OG-Financial.src.com.opengamma.financial.analytics.model.equity.indexoption.EquityIndexVanillaBarrierOptionFunction.java", "BodyUseAPI": [], "Fixed commit": "328d2b0a74760ef7a5073564253bfc772e838f70", "Url": "https://api.github.com/repos/OpenGamma/OG-Platform", "Date": "2012-09-18T12:43:00Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (barrierOption.getOptionType().equals(OptionType.PUT)) { throw new com.opengamma.OpenGammaRuntimeException(\"ONE_LOOK / Vanilla Barriers do not apply to an UP type of Barrier with OptionType.CALL. Confirm that the intended samplingFrequency is ONE_LOOK\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/5514/buggy-version/projects.OG-Financial.src.com.opengamma.financial.analytics.model.equity.indexoption.EquityIndexVanillaBarrierOptionFunction.java", "BodyUseAPI": [], "Fixed commit": "328d2b0a74760ef7a5073564253bfc772e838f70", "Url": "https://api.github.com/repos/OpenGamma/OG-Platform", "Date": "2012-09-18T12:43:00Z"},
{"Line": "=>819", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(indices.isEmpty())) { indices.clear(); indices.add(\"_all\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/998/buggy-version/src.main.java.com.floragunn.searchguard.configuration.PrivilegesEvaluator.java", "BodyUseAPI": ["java.util.Set<java.lang.String>.clear()", "java.util.Set<java.lang.String>.add(java.lang.String)"], "Fixed commit": "5b3ed821be93b61cdfbbd2b6aaedfc841870a3c2", "Url": "https://api.github.com/repos/floragunncom/search-guard", "Date": "2017-05-30T18:34:40Z"},
{"Line": "=>944", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.gmail.tracebachi.FloorIsLava.Arena.Player.getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((started) && (playing.containsKey(name))) { if (event.getCause().equals(EntityDamageEvent.DamageCause.POISON)) { player.setHealth(player.getMaxHealth()); } event.setCancelled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/7978/buggy-version/src.main.java.com.gmail.tracebachi.FloorIsLava.Arena.Arena.java", "BodyUseAPI": [], "Fixed commit": "8e7ca402ade47f4c46fd523c66852af900827f5b", "Url": "https://api.github.com/repos/Fridgey/FloorIsLava", "Date": "2016-10-24T06:30:34Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["sample.handleData.data.listOfUser()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (list != null) { for (sample.handleData.User u : list) { if (u.username().equals(username)) { return true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/3447/buggy-version/src.sample.handleData.data.java", "BodyUseAPI": [], "Fixed commit": "de473d6f4aff537fab60530b8359e1ac4d1b1d8c", "Url": "https://api.github.com/repos/njb5081/Design_Project", "Date": "2016-04-03T19:55:47Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(isValid())) { throw new seedu.address.commons.exceptions.IllegalValueException(\"Not a proper time form\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/6600/buggy-version/src.main.java.seedu.address.model.schedule.Time.java", "BodyUseAPI": [], "Fixed commit": "b12c5664025a7c7ad7c138ee78b16db06fd22e69", "Url": "https://api.github.com/repos/YuchenHe98/main", "Date": "2017-10-26T23:51:53Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((topRight[i]) < (rec.topRight[i])) { deltas[i] += (rec.topRight[i]) - (topRight[i]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/5162/buggy-version/src.rtree.Bounding2DRectangle.java", "BodyUseAPI": [], "Fixed commit": "3d344f3d7b035b0605c5b88a05bc37c7709e9342", "Url": "https://api.github.com/repos/ronsheme/extRemeTree", "Date": "2017-03-18T13:20:09Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bottomLeft[i]) > (rec.bottomLeft[i])) { deltas[i] += (bottomLeft[i]) - (rec.bottomLeft[i]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/5162/buggy-version/src.rtree.Bounding2DRectangle.java", "BodyUseAPI": [], "Fixed commit": "3d344f3d7b035b0605c5b88a05bc37c7709e9342", "Url": "https://api.github.com/repos/ronsheme/extRemeTree", "Date": "2017-03-18T13:20:09Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (quit) { break; }else { quit = player.exitSuccessful(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/1616/buggy-version/BoulderDash.src.game.Game.java", "BodyUseAPI": [], "Fixed commit": "d06b3d665931522e547ecf746beb202696648466", "Url": "https://api.github.com/repos/GamalLascano/BoulderDash", "Date": "2017-11-13T13:39:44Z"},
{"Line": "=>582", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(buy_sql.isEmpty())) { database.execSQL(\"DELETE FROM buys\"); database.execSQL(((\"INSERT INTO buys\" + (\"(name, cost, priority, status)\" + \"VALUES\")) + buy_sql)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/4913/buggy-version/src.ru.thewizardplusplus.wizardbudget.BackupManager.java", "BodyUseAPI": ["ru.thewizardplusplus.wizardbudget.SQLiteDatabase.execSQL(java.lang.String)"], "Fixed commit": "004850b942bba6d04196d37d17daa6f6c007a8c9", "Url": "https://api.github.com/repos/thewizardplusplus/wizard-budget", "Date": "2015-07-24T04:23:15Z"},
{"Line": "=>573", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(spending_sql.isEmpty())) { database.execSQL(\"DELETE FROM spendings\"); database.execSQL(((\"INSERT INTO spendings\" + (\"(timestamp, amount, comment)\" + \"VALUES\")) + spending_sql)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/4913/buggy-version/src.ru.thewizardplusplus.wizardbudget.BackupManager.java", "BodyUseAPI": ["ru.thewizardplusplus.wizardbudget.SQLiteDatabase.execSQL(java.lang.String)"], "Fixed commit": "004850b942bba6d04196d37d17daa6f6c007a8c9", "Url": "https://api.github.com/repos/thewizardplusplus/wizard-budget", "Date": "2015-07-24T04:23:15Z"},
{"Line": "=>11", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (recordingDirectory.contains(\"\\\\\")) { this.recordingDirectory = recordingDirectory.replace(\"\\\\\", \"\\\\\\\\\"); }else { this.recordingDirectory = recordingDirectory; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/6239/buggy-version/mocktail-metadata.src.main.java.org.mocktail.MocktailContext.java", "BodyUseAPI": [], "Fixed commit": "a3fbfb27ed0a87fbdeaac4951dcb5528c77fa97a", "Url": "https://api.github.com/repos/vashishthask/mocktail", "Date": "2012-04-21T00:52:55Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(mExecutor.isShutdown())) { mExecutor.shutdown(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/616/buggy-version/app.src.main.java.com.github.runningforlife.photosniffer.presenter.AllPicturesPresenterImpl.java", "BodyUseAPI": ["java.util.concurrent.ExecutorService.shutdown()"], "Fixed commit": "1b5a3cb9e3192f5b597d104e395c36d4ea28c0e5", "Url": "https://api.github.com/repos/runningforlife/PhotoFans", "Date": "2017-12-24T10:55:39Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mUnUsedImages.isValid()) { mUnUsedImages.removeAllChangeListeners(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/616/buggy-version/app.src.main.java.com.github.runningforlife.photosniffer.presenter.AllPicturesPresenterImpl.java", "BodyUseAPI": ["io.realm.RealmResults<com.github.runningforlife.photosniffer.data.model.ImageRealm>.removeAllChangeListeners()"], "Fixed commit": "1b5a3cb9e3192f5b597d104e395c36d4ea28c0e5", "Url": "https://api.github.com/repos/runningforlife/PhotoFans", "Date": "2017-12-24T10:55:39Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (stream == null) { java.lang.String message = java.lang.String.format((\"Could not add custom config. \" + \"Neither file %s nor resource matching %s found.\"), file.getAbsolutePath(), path); throw new java.lang.IllegalArgumentException(message); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/5137/buggy-version/plugin.src.main.java.com.h3xstream.findsecbugs.taintanalysis.TaintDataflowEngine.java", "BodyUseAPI": [], "Fixed commit": "f31c371a86464fce8d2338d707948f0cf5213131", "Url": "https://api.github.com/repos/MaxNad/find-sec-bugs", "Date": "2016-09-05T08:49:33Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((jp.getCurrentToken()) == (org.codehaus.jackson.JsonToken.START_ARRAY)) { jp.nextToken(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/4311/buggy-version/extensions.bundles.opendaylight.vtn.src.main.java.org.opennaas.extensions.opendaylight.vtn.protocol.client.serializers.json.deserialize.vBridgesWrapperJSONDeserializer.java", "BodyUseAPI": ["org.codehaus.jackson.JsonParser.nextToken()"], "Fixed commit": "6be0bb70ad98883d67bdf42ba3ca9589caed1bea", "Url": "https://api.github.com/repos/dana-i2cat/opennaas-routing-nfv", "Date": "2014-04-14T15:08:10Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["originalSoapEnvelope.getSOAPBodyFirstElementNS().getNamespaceURI()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(targetSoapAction.endsWith(\"/\"))) { targetSoapAction = targetSoapAction.concat(\"/\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/3096/buggy-version/source.Tooling.post-migration.eubt.eu.artist.postmigration.eubt.prototype.src.main.java.eu.artist.postmigration.eubt.mappers.SOAPUserRequestMapper.java", "BodyUseAPI": ["java.lang.String.concat(java.lang.String)"], "Fixed commit": "d28ec986e48c3f0af53d29eb67850c81df1cd470", "Url": "https://api.github.com/repos/artist-project/ARTIST", "Date": "2015-09-22T14:11:40Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((operationElement.getNamespace().getPrefix()) == null) || (operationElement.getNamespace().getPrefix().equals(\"\"))) { operationElementAttribute.setNamespace(operationElement.getNamespace()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/3096/buggy-version/source.Tooling.post-migration.eubt.eu.artist.postmigration.eubt.prototype.src.main.java.eu.artist.postmigration.eubt.helpers.SOAPHelper.java", "BodyUseAPI": ["org.apache.axiom.om.OMElement.setNamespace(operationElement.getNamespace())", "org.apache.axiom.om.OMElement.getNamespace()"], "Fixed commit": "d28ec986e48c3f0af53d29eb67850c81df1cd470", "Url": "https://api.github.com/repos/artist-project/ARTIST", "Date": "2015-09-22T14:11:40Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((properties) != null) props.putAll(this.properties);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/1652/buggy-version/cascading-core.src.main.java.cascading.flow.process.ProcessFlow.java", "BodyUseAPI": [], "Fixed commit": "4b0dbee235a9a885f51d03d95efade03ae134916", "Url": "https://api.github.com/repos/cwensel/cascading", "Date": "2015-07-16T22:38:37Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Long, com.pratilipi.data.type.Page>.get(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (pratilipiPage != null) pratilipiUrlList.add(((pratilipiPage.getUriAlias()) == null ? pratilipiPage.getUri() : pratilipiPage.getUriAlias()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/2347/buggy-version/src.main.java.com.pratilipi.data.util.EventDataUtil.java", "BodyUseAPI": ["com.pratilipi.data.type.Page.getUriAlias()", "com.pratilipi.data.type.Page.getUri()", "java.util.List<java.lang.String>.add(((pratilipiPage.getUriAlias()) == null ? pratilipiPage.getUri() : pratilipiPage.getUriAlias()))", "com.pratilipi.data.type.Page.getUriAlias()"], "Fixed commit": "b1e67e0a2206852b027f1f7c736fefbf877a2c07", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2016-10-17T14:23:43Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((identifier) != null) { entity = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/6931/buggy-version/web.src.main.java.com.svanberg.household.web.wicket.EntityModel.java", "BodyUseAPI": [], "Fixed commit": "80f14e3d7352ed3263bce64ee0f75d64364f2831", "Url": "https://api.github.com/repos/asvanberg/household", "Date": "2013-04-25T21:31:43Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ideal_day == (-1)) { java.lang.System.out.println((\"here!! id = \" + id)); UnassignedTasks.add(id); java.lang.System.out.println((\"UnassignedTasks = \" + (UnassignedTasks))); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/5410/buggy-version/src.TaskAssign.java", "BodyUseAPI": [], "Fixed commit": "e089883fb0ae808f62abf06cd6a79301c85b1d07", "Url": "https://api.github.com/repos/sharonWU0505/SMART", "Date": "2016-11-16T13:02:04Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((typeIsEqual(returnType, java.lang.Float.class)) || (typeIsEqual(returnType, float.class))) body = body.replace(\"$eval$\", ((\"return \" + (scriptHelperClass.getName())) + \".evalFloat\")); else if (typeIsEqual(returnType, java.lang.String.class)) body = body.replace(\"$eval$\", ((\"return (java.lang.String)\" + (scriptHelperClass.getName())) + \".eval\")); else body = createBodyForReference(interface1, scriptHelperClass, method, body, returnType);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/194/buggy-version/dragome-web.src.main.java.com.dragome.web.enhancers.jsdelegate.JsDelegateGenerator.java", "BodyUseAPI": ["com.dragome.web.enhancers.jsdelegate.JsDelegateGenerator.createBodyForReference(java.lang.Class<?>,java.lang.Class<?>,com.dragome.web.enhancers.jsdelegate.CtMethod,java.lang.String,com.dragome.web.enhancers.jsdelegate.CtClass)", "com.dragome.web.enhancers.jsdelegate.JsDelegateGenerator.typeIsEqual(com.dragome.web.enhancers.jsdelegate.CtClass,java.lang.Class)"], "Fixed commit": "d7fe2357502d99d5bc626b7f3111eaf1d12ee5fb", "Url": "https://api.github.com/repos/xpenatan/dragome-sdk", "Date": "2016-02-24T21:06:25Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (values == null) { return java.util.Collections.emptyList(); }else { return values; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/1523/buggy-version/ali-plugin-main.src.main.java.com.hp.alm.ali.idea.services.ProjectListService.java", "BodyUseAPI": [], "Fixed commit": "91a96bd486197d3ba32ca8b701049ec469b5e9ec", "Url": "https://api.github.com/repos/janotav/ali-idea-plugin", "Date": "2014-03-20T11:33:06Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cws.core.Job.getVM()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (busyVMs.remove(vm)) freeVMs.add(vm);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/5214/buggy-version/src.cws.core.WorkflowEngine.java", "BodyUseAPI": ["java.util.Set<cws.core.VM>.add(cws.core.VM)"], "Fixed commit": "70498b797af699168e6b717fff49525e767d89a4", "Url": "https://api.github.com/repos/malawski/cloudworkflowsimulator", "Date": "2011-12-07T19:50:08Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.w3c.dom.Node.getNodeName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (childNodeName.equals(\"cpp:elif\")) { if ((((this.ifdefOrIfndefOrIfCount) - 1) == (this.endifCount)) && ((this.ifdefSelected) <= (this.ifdefOrIfndefOrIfCount))) { removeNode(childNode); } }else { if (removeIfdefOrIfndef(document, childNode, ifdefRemoved)) { return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/1423/buggy-version/src.main.java.br.edu.ufal.ic.easy.cppmt.mutation.operation.RIDC.java", "BodyUseAPI": [], "Fixed commit": "9fb6edac3d8f4559b78a401159e1792f1b1ad207", "Url": "https://api.github.com/repos/lzmths/mutaf", "Date": "2017-08-11T19:14:05Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.javaee7.jaxrs.client.PersonSessionBean.findPersonByName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (p != null) list.remove(p);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/3410/buggy-version/jaxrs.jaxrs-client.src.main.java.org.javaee7.jaxrs.client.PersonSessionBean.java", "BodyUseAPI": ["java.util.List<org.javaee7.jaxrs.client.Person>.remove(org.javaee7.jaxrs.client.Person)"], "Fixed commit": "49975aec201303e07da6377e0740ae6e8fe1660e", "Url": "https://api.github.com/repos/psakar/javaee7-samples", "Date": "2013-11-08T08:57:42Z"},
{"Line": "=>1002", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.currentAxis.getAbstractDevice()) != null) { this.currentAxis.setFile(new java.io.File(textBuffer.toString())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/1362/buggy-version/applications.plugins.org.csstudio.eve.data.src.de.ptb.epics.eve.data.scandescription.processors.ScanDescriptionLoaderHandler.java", "BodyUseAPI": ["de.ptb.epics.eve.data.scandescription.Axis.setFile(java.io.File)"], "Fixed commit": "63a88683c089bdca1f97ec848ba0df4659ec5f08", "Url": "https://api.github.com/repos/eveCSS/eveCSS", "Date": "2014-09-09T13:54:13Z"},
{"Line": "=>1009", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.currentAxis.getAbstractDevice()) != null) { this.currentAxis.setPositionlist(textBuffer.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/1362/buggy-version/applications.plugins.org.csstudio.eve.data.src.de.ptb.epics.eve.data.scandescription.processors.ScanDescriptionLoaderHandler.java", "BodyUseAPI": ["de.ptb.epics.eve.data.scandescription.Axis.setPositionlist(java.lang.String)"], "Fixed commit": "63a88683c089bdca1f97ec848ba0df4659ec5f08", "Url": "https://api.github.com/repos/eveCSS/eveCSS", "Date": "2014-09-09T13:54:13Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (jsValue != null) { jsValue = \"\" + jsValue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/7047/buggy-version/gwt-jsonmaker.src.main.java.org.jsonmaker.gwt.client.base.Defaults.java", "BodyUseAPI": [], "Fixed commit": "ae97de67da5d62c26fd0443c6cb78f44fa54a4e9", "Url": "https://api.github.com/repos/gwt-jsonmaker/gwt-jsonmaker", "Date": "2017-03-09T19:52:49Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tm.interfaces.Datum.getNumBytes()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((this.bytes) == null) || ((this.bytes.length) != len)) this.bytes = new byte[len];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/346/buggy-version/trunk.tmGWT.src.tm.gwt.shared.state.MirrorDatum.java", "BodyUseAPI": [], "Fixed commit": "203eb146f91335c9b28271e79c002953a85c1ff0", "Url": "https://api.github.com/repos/theodore-norvell/the-teaching-machine-and-webwriter", "Date": "2017-11-28T20:25:06Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (d instanceof tm.interfaces.RegionInterface) return new tm.gwt.shared.state.MirrorDatum.MirrorRegion(((tm.interfaces.RegionInterface) (d)), ms); else if (d instanceof tm.interfaces.PointerInterface) return new tm.gwt.shared.state.MirrorDatum.MirrorPointerDatum(((tm.interfaces.PointerInterface) (d)), parent, ms); else if (d instanceof tm.interfaces.ScalarInterface) return new tm.gwt.shared.state.MirrorDatum.MirrorScalarDatum(((tm.interfaces.ScalarInterface) (d)), parent, ms); else return new tm.gwt.shared.state.MirrorDatum(d, parent, ms);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/346/buggy-version/trunk.tmGWT.src.tm.gwt.shared.state.MirrorDatum.java", "BodyUseAPI": [], "Fixed commit": "203eb146f91335c9b28271e79c002953a85c1ff0", "Url": "https://api.github.com/repos/theodore-norvell/the-teaching-machine-and-webwriter", "Date": "2017-11-28T20:25:06Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((this.additionalProperty.length()) < 1) { this.additionalProperty = \"brak\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/459/buggy-version/src.main.java.uek.dev.morfer.result.models.CSVMorferResult.java", "BodyUseAPI": [], "Fixed commit": "2c1b2085ebb4dba9334b96df1562cdb46057a465", "Url": "https://api.github.com/repos/lukw34/Morfer", "Date": "2017-02-06T21:09:43Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(this.templateFacade.isTemplateAvailable(template.getName().toLowerCase()))) { return this.templateFacade.addTemplate(template); }else { throw new se.kth.hopsworks.meta.exception.DatabaseException(((\"Template name \" + (template.getName())) + \" already available\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/1595/buggy-version/src.main.java.se.kth.hopsworks.meta.wscomm.Utils.java", "BodyUseAPI": ["se.kth.hopsworks.meta.entity.Template.getName()", "se.kth.hopsworks.meta.db.TemplateFacade.addTemplate(se.kth.hopsworks.meta.entity.Template)"], "Fixed commit": "041d6dc3774885736169ff807d5fb2aea448d294", "Url": "https://api.github.com/repos/hopshadoop/hopsworks", "Date": "2015-10-12T15:47:59Z"},
{"Line": "=>409", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((isProjectile()) && (hasShooter())) return new net.aufdemrand.denizen.objects.dEntity(getProjectile().getShooter()); else return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/1982/buggy-version/src.main.java.net.aufdemrand.denizen.objects.dEntity.java", "BodyUseAPI": [], "Fixed commit": "10ce764af173bb1961590df860d7aedb75aca479", "Url": "https://api.github.com/repos/aufdemrand/Denizen", "Date": "2013-09-15T21:47:20Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((github.daneren2005.dsub.util.BackgroundTask.handler) == null) { try { github.daneren2005.dsub.util.BackgroundTask.handler = new android.os.Handler(android.os.Looper.getMainLooper()); } catch (java.lang.Exception e) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/1157/buggy-version/src.github.daneren2005.dsub.util.BackgroundTask.java", "BodyUseAPI": [], "Fixed commit": "ce4684ad9618f063abf3eb4a42cb81361a17be1d", "Url": "https://api.github.com/repos/daneren2005/Subsonic", "Date": "2014-02-23T20:05:26Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["info.tregmine.commands.LotteryCommand.getPlayer(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (winner == null) { player.sendMessage(((((org.bukkit.ChatColor.RED) + randomPlayer) + \" won, \") + \"but is no longer online. Try again.\")); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/8870/buggy-version/src.info.tregmine.commands.LotteryCommand.java", "BodyUseAPI": [], "Fixed commit": "24480571188b037c9dbbabfbb32dacec592fb532", "Url": "https://api.github.com/repos/EmilHernvall/tregmine", "Date": "2013-09-03T15:04:02Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((java.lang.Integer.parseInt(numCap.getText().toString())) > (java.lang.Integer.parseInt(capTime.getText().toString()))) { android.widget.Toast.makeText(this, (\"Invalid(data): \" + (getString(R.string.numImgCaption))), Toast.LENGTH_SHORT).show(); numCap.setError(\"Invalid(data): Range greater then capturing time\"); return false; }else { numCap.setError(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/8077/buggy-version/app.src.main.java.com.aliazaz.aliSecretCameraPicture.activities.SettingActivity.java", "BodyUseAPI": ["android.widget.EditText.setError(java.lang.String)", "android.widget.EditText.setError(<nulltype>)"], "Fixed commit": "8d36a268d8d15d4d2d7710d38fcaf32d9f4f041c", "Url": "https://api.github.com/repos/AliAzaz/AndroidSecretImageTaker", "Date": "2017-06-15T09:09:57Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.harrikirik.rescheck.adapter.InfoAdapter.getItem(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(o instanceof com.harrikirik.rescheck.dto.BaseInfoObject)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/5874/buggy-version/ResCheck.src.main.java.com.harrikirik.rescheck.fragment.SpecFragment.java", "BodyUseAPI": [], "Fixed commit": "ed4868b6e4aa6f3939ff947a2594a6b079e926df", "Url": "https://api.github.com/repos/harri35/res-check", "Date": "2014-01-02T19:48:45Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.harrikirik.rescheck.adapter.InfoAdapter.getItem(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(o instanceof com.harrikirik.rescheck.dto.BaseInfoObject)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/5874/buggy-version/ResCheck.src.main.java.com.harrikirik.rescheck.fragment.SpecFragment.java", "BodyUseAPI": [], "Fixed commit": "ed4868b6e4aa6f3939ff947a2594a6b079e926df", "Url": "https://api.github.com/repos/harri35/res-check", "Date": "2014-01-02T19:48:45Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jaudiotagger.audio.AudioFileIO.read(java.io.File)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (f == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/1817/buggy-version/src.main.java.me.zimy.geluid.informatories.Mp3Informatory.java", "BodyUseAPI": [], "Fixed commit": "db9199e844f0d1cc2850744fbc40ceabbfbe790c", "Url": "https://api.github.com/repos/zimy/geluid", "Date": "2014-10-23T08:54:46Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jaudiotagger.audio.AudioFile.getTag()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (tag == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/1817/buggy-version/src.main.java.me.zimy.geluid.informatories.Mp3Informatory.java", "BodyUseAPI": [], "Fixed commit": "db9199e844f0d1cc2850744fbc40ceabbfbe790c", "Url": "https://api.github.com/repos/zimy/geluid", "Date": "2014-10-23T08:54:46Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.getResponseCode()) == 401) { android.widget.Toast.makeText(this, \"Invalid Username or password\", Toast.LENGTH_SHORT).show(); }else { android.widget.Toast.makeText(this, ((\"ERROR \" + (java.lang.String.valueOf(event.getResponseCode()))) + \":\\nSomething went wrong. Please contact support.\"), Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/3316/buggy-version/app.src.main.java.com.crowdshelf.app.ui.activities.LoginActivity.java", "BodyUseAPI": ["android.widget.Toast.makeText(this, ((\"ERROR \" + (java.lang.String.valueOf(event.getResponseCode()))) + \":\\nSomething went wrong. Please contact support.\"), Toast.LENGTH_SHORT).show()", "java.lang.String.valueOf(event.getResponseCode())", "com.crowdshelf.app.io.DbEventFailure.getResponseCode()", "android.widget.Toast.makeText(com.crowdshelf.app.ui.activities.LoginActivity,((\"ERROR \" + (java.lang.String.valueOf(event.getResponseCode()))) + \":\\nSomething went wrong. Please contact support.\"),Toast.LENGTH_SHORT)"], "Fixed commit": "56dc1f0f0deb24053579c4c3a1756021549122ad", "Url": "https://api.github.com/repos/CrowdShelf/android", "Date": "2015-11-17T13:45:48Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.concurrent.ConcurrentMap<java.lang.String, org.inaetics.dronessimulator.visualisation.BaseEntity>.get(killMessage.getIdentifier())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (baseEntity != null) { baseEntity.delete(); entities.remove(killMessage.getIdentifier()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/1463/buggy-version/implementation.visualisation.src.main.java.org.inaetics.dronessimulator.visualisation.messagehandlers.KillMessageHandler.java", "BodyUseAPI": ["org.inaetics.dronessimulator.visualisation.BaseEntity.delete()"], "Fixed commit": "1aaa0a90287b46aee818520b4b5af8828fe10672", "Url": "https://api.github.com/repos/INAETICS/Drones-Simulator", "Date": "2017-05-28T21:17:16Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (connection.isOpen()) { connection.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/8612/buggy-version/modules.core.src.main.java.org.apache.synapse.message.store.impl.rabbitmq.RabbitMQStore.java", "BodyUseAPI": ["com.rabbitmq.client.Connection.close()"], "Fixed commit": "d2857bef5ba343cdb2018d23f70db462ff4f9568", "Url": "https://api.github.com/repos/ChanakaCooray/wso2-synapse", "Date": "2015-04-11T05:09:19Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (type.isInterface()) { result.add(type); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/5935/buggy-version/sk.stuba.fiit.perconik.utilities.src.sk.stuba.fiit.perconik.utilities.reflect.Reflections.java", "BodyUseAPI": ["java.util.Set<java.lang.Class<?>>.add(java.lang.Class<?>)"], "Fixed commit": "d82134bf7c66ad154106d52d7cd4651db0253179", "Url": "https://api.github.com/repos/perconik/perconik", "Date": "2013-10-29T14:41:27Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.whereUri.equals(org.restheart.handlers.RequestContext.SLASH))) { ret = ret.replaceFirst((\"^\" + (this.whereUri)), \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/7828/buggy-version/src.main.java.org.restheart.handlers.RequestContext.java", "BodyUseAPI": [], "Fixed commit": "72960d5cd11a4d938324b6c7ac9dbbe45a312a3b", "Url": "https://api.github.com/repos/SoftInstigate/restheart", "Date": "2015-01-15T18:58:17Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isFemale) { if ((com.xiuxiuchat.api.XiuxiuUserInfoResult.getInstance().getCharmValue()) >= 3) { com.xiuxiuchat.user.XiuxiuSettingsPage.startActivity(getActivity()); }else { com.xiuxiuchat.utils.ToastUtil.showMessage(getActivity(), \"\u9b45\u529b\u7b49\u7ea7\u8fbe\u5230\uff13\u7ea7\u624d\u53ef\u4ee5\u8bbe\u7f6e.\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/8838/buggy-version/app.src.main.java.com.xiuxiuchat.main.UserFragment.java", "BodyUseAPI": [], "Fixed commit": "1d90a0285b75604365c0f3789c7aedbe731ea83d", "Url": "https://api.github.com/repos/seedzi/new_heixiu", "Date": "2016-10-02T07:09:28Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mPlusApiOptions) != null) builder.addApi(Plus.API, mPlusApiOptions); else builder.addApi(Plus.API);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/6793/buggy-version/AndroidPlugin.src.com.giderosmobile.android.plugins.googleplaygame.GameHelper.java", "BodyUseAPI": [], "Fixed commit": "753a64423bdc2df90e7520349a8ae9849668ed27", "Url": "https://api.github.com/repos/ar2rsawseen/GiderosGooglePlay", "Date": "2014-06-06T09:15:37Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((beginTime.equals(new es.us.isa.ppinot.model.LocalTime(0, 0))) && (endTime.equals(new es.us.isa.ppinot.model.LocalTime(23, 59)))) { return DateTimeConstants.MILLIS_PER_DAY; }else { return es.us.isa.ppinot.model.Seconds.secondsBetween(beginTime, endTime).toStandardDuration().getMillis(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/725/buggy-version/ppinot-model.src.main.java.es.us.isa.ppinot.model.Schedule.java", "BodyUseAPI": ["es.us.isa.ppinot.model.Seconds.secondsBetween(beginTime, endTime).toStandardDuration()", "es.us.isa.ppinot.model.Seconds.secondsBetween(beginTime, endTime).toStandardDuration().getMillis()", "es.us.isa.ppinot.model.Seconds.secondsBetween(es.us.isa.ppinot.model.LocalTime,es.us.isa.ppinot.model.LocalTime)"], "Fixed commit": "06e1e2ca433baf3f183994c14e41f81e6a7685d7", "Url": "https://api.github.com/repos/isa-group/ppinot", "Date": "2016-09-21T16:02:50Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.waterforpeople.mapping.app.web.rest.security.GoogleAccountsAuthenticationProvider.getAuthorityLevel(com.google.appengine.api.users.User)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (authority == (AppRole.NEW_USER.getLevel())) { roles.add(AppRole.NEW_USER); }else { for (org.waterforpeople.mapping.app.web.rest.security.AppRole r : org.waterforpeople.mapping.app.web.rest.security.AppRole.values()) { if (authority <= (r.getLevel())) { roles.add(r); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/2745/buggy-version/GAE.src.org.waterforpeople.mapping.app.web.rest.security.GoogleAccountsAuthenticationProvider.java", "BodyUseAPI": [], "Fixed commit": "5bd099cfbcbdbb6be8e57cd8c0fdf45a46fd5c8e", "Url": "https://api.github.com/repos/akvo/akvo-flow", "Date": "2012-12-28T18:07:35Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((input.get(headers[2]).get(0)) == null) || (\"\".equals(input.get(headers[2]).get(0)))) { input.set(headers[2], input.get(headers[1])); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/2111/buggy-version/src.cloudnexa.cf.maker.CFmaker.java", "BodyUseAPI": ["java.util.ArrayList<java.util.ArrayList<java.lang.String>>.set(int,java.util.ArrayList<java.lang.String>)", "java.util.ArrayList<java.util.ArrayList<java.lang.String>>.get(int)"], "Fixed commit": "c832e73f24e4778901b8d630b597b0293ba4e5fd", "Url": "https://api.github.com/repos/abyle4/cloudNexa-CFProj", "Date": "2017-05-04T21:37:02Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.concurrent.ConcurrentHashMap<java.lang.String, com.orange.network.game.protocol.model.DiceProtos.PBUserDice>.values()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((allUserDices.size()) < 2) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/2282/buggy-version/src.com.orange.game.dice.model.DiceGameSession.java", "BodyUseAPI": [], "Fixed commit": "7b1362fffd2d0a3902c4481925eafd432f9f688b", "Url": "https://api.github.com/repos/gckjdev/DiceTrafficServer", "Date": "2012-08-13T06:55:02Z"},
{"Line": "=>271", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getHeader(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (org.springframework.util.StringUtils.hasText(header)) { java.lang.String[] hosts = org.springframework.util.StringUtils.commaDelimitedListToStringArray(header); java.lang.String hostToUse = hosts[0]; if (hostToUse.contains(\":\")) { java.lang.String[] hostAndPort = org.springframework.util.StringUtils.split(hostToUse, \":\"); host = hostAndPort[0]; port = java.lang.Integer.parseInt(hostAndPort[1]); }else { host = hostToUse; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/5956/buggy-version/src.PublicSite.src.uk.ac.ox.zoo.seeg.abraid.mp.publicsite.web.user.account.AccountController.java", "BodyUseAPI": ["org.springframework.util.StringUtils.commaDelimitedListToStringArray(java.lang.String)"], "Fixed commit": "523dbff04d147f94f712cb4fa97a937e313856c0", "Url": "https://api.github.com/repos/SEEG-Oxford/ABRAID-MP", "Date": "2014-12-10T17:31:38Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(((scheme.equals(uk.ac.ox.zoo.seeg.abraid.mp.publicsite.web.user.account.AccountController.HTTP_PROTO)) && (port == (uk.ac.ox.zoo.seeg.abraid.mp.publicsite.web.user.account.AccountController.HTTP_PORT))) || ((scheme.equals(uk.ac.ox.zoo.seeg.abraid.mp.publicsite.web.user.account.AccountController.HTTPS_PROTO)) && (port == (uk.ac.ox.zoo.seeg.abraid.mp.publicsite.web.user.account.AccountController.HTTPS_PORT))))) { builder.port(port); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/5956/buggy-version/src.PublicSite.src.uk.ac.ox.zoo.seeg.abraid.mp.publicsite.web.user.account.AccountController.java", "BodyUseAPI": ["org.springframework.web.util.UriComponentsBuilder.port(int)"], "Fixed commit": "523dbff04d147f94f712cb4fa97a937e313856c0", "Url": "https://api.github.com/repos/SEEG-Oxford/ABRAID-MP", "Date": "2014-12-10T17:31:38Z"},
{"Line": "=>284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getHeader(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (forwardedScheme != null) { scheme = forwardedScheme; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/5956/buggy-version/src.PublicSite.src.uk.ac.ox.zoo.seeg.abraid.mp.publicsite.web.user.account.AccountController.java", "BodyUseAPI": [], "Fixed commit": "523dbff04d147f94f712cb4fa97a937e313856c0", "Url": "https://api.github.com/repos/SEEG-Oxford/ABRAID-MP", "Date": "2014-12-10T17:31:38Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((okResponse.body().contentLength()) > 0) { responseBody = okResponse.body().bytes(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/5859/buggy-version/core-android.src.main.java.org.hisp.dhis.client.sdk.android.api.network.ResponseMapper.java", "BodyUseAPI": ["okResponse.body().bytes()", "org.hisp.dhis.client.sdk.core.common.network.Response.body()"], "Fixed commit": "bda03344eadd2e7442a8728c5a5b1e23f1be9407", "Url": "https://api.github.com/repos/dhis2/dhis2-android-sdk", "Date": "2016-05-18T12:49:34Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(result.containsKey(\"site_name\"))) { result.put(\"site_name\", result.get(\"title\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/723/buggy-version/app.src.main.java.com.sendbird.android.sample.utils.WebUtils.java", "BodyUseAPI": ["java.util.Hashtable<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)", "java.util.Hashtable<java.lang.String, java.lang.String>.get(java.lang.String)"], "Fixed commit": "f382e44b97efebf4b48d88b5d7ceca8f5fad38cd", "Url": "https://api.github.com/repos/sf-tyler-jeong/SendBird-Android", "Date": "2017-11-09T00:45:35Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((result.get(\"url\")) != null) && (result.get(\"url\").startsWith(\"//\"))) { result.put(\"url\", (\"http:\" + (result.get(\"url\")))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/723/buggy-version/app.src.main.java.com.sendbird.android.sample.utils.WebUtils.java", "BodyUseAPI": ["java.util.Hashtable<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)", "java.util.Hashtable<java.lang.String, java.lang.String>.get(java.lang.String)"], "Fixed commit": "f382e44b97efebf4b48d88b5d7ceca8f5fad38cd", "Url": "https://api.github.com/repos/sf-tyler-jeong/SendBird-Android", "Date": "2017-11-09T00:45:35Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((result.get(\"image\")) != null) && (result.get(\"image\").startsWith(\"//\"))) { result.put(\"image\", (\"http:\" + (result.get(\"image\")))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/723/buggy-version/app.src.main.java.com.sendbird.android.sample.utils.WebUtils.java", "BodyUseAPI": ["java.util.Hashtable<java.lang.String, java.lang.String>.get(java.lang.String)", "java.util.Hashtable<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)"], "Fixed commit": "f382e44b97efebf4b48d88b5d7ceca8f5fad38cd", "Url": "https://api.github.com/repos/sf-tyler-jeong/SendBird-Android", "Date": "2017-11-09T00:45:35Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.acceptsURL(url))) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/3105/buggy-version/solr.core.src.java.org.apache.solr.handler.sql.CalciteSolrDriver.java", "BodyUseAPI": [], "Fixed commit": "28fb5855f4529589ab2a9a19f8ba53ca4d9ac120", "Url": "https://api.github.com/repos/apache/lucene-solr", "Date": "2016-10-31T15:14:09Z"},
{"Line": "=>1148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.pipeline) == null) { cz.cuni.mff.xrg.odcs.frontend.gui.views.Notification.show(\"Error opening pipeline detail.\", \"Pipeline doesn't exist.\", Type.ERROR_MESSAGE); closeView(); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/8968/buggy-version/frontend.src.main.java.cz.cuni.mff.xrg.odcs.frontend.gui.views.PipelineEdit.java", "BodyUseAPI": [], "Fixed commit": "f7d74a4121f2c992cbba5007462aa65617dbc3fa", "Url": "https://api.github.com/repos/UnifiedViews/Core", "Date": "2014-08-12T11:12:15Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rangeAllowed) get.addHeader(\"Range\", ((\"bytes=\" + from) + \"-\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/6612/buggy-version/src.com.std4453.freemclauncher.net.DownloaderAutoRetry.java", "BodyUseAPI": [], "Fixed commit": "1c95a651a1ce704b932b27dc6894f2a9a03a29b8", "Url": "https://api.github.com/repos/std4453/FreeMCLauncher", "Date": "2015-07-29T07:36:42Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"listing\".equals(action)) { java.lang.String world = params[1]; url = ((this.mContext.getResources().getString(R.string.services_endpoint)) + (java.lang.String.format(this.mContext.getResources().getString(R.string.services_context_components_belongsto_aworld), world))) + \".json\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/8345/buggy-version/src.com.webpuzzle.async.WebPuzzleAsync.java", "BodyUseAPI": [], "Fixed commit": "a39c83872ced8cea70d5093d312298f2c21a655b", "Url": "https://api.github.com/repos/WebPuzzle/WebPuzzleAndroid", "Date": "2014-01-22T00:58:10Z"},
{"Line": "=>616", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.time.LocalDateTime.ofInstant(java.time.Instant,java.time.ZoneId)", "java.time.LocalDateTime.now()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((lastVote.getDayOfYear()) == (now.getDayOfYear())) && ((lastVote.getYear()) == (now.getYear()))) { info = com.Ben12345rocks.VotingPlugin.Commands.Commands.config.getFormatCommandsVoteNextInfoVoteDelayDaily(); }else { info = com.Ben12345rocks.VotingPlugin.Commands.Commands.config.getFormatCommandsVoteNextInfoCanVote(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/5273/buggy-version/VotingPlugin.src.com.Ben12345rocks.VotingPlugin.Commands.Commands.java", "BodyUseAPI": [], "Fixed commit": "1f80578e7af58227d011c06bc150065b6e344816", "Url": "https://api.github.com/repos/Ben12345rocks/VotingPlugin", "Date": "2017-07-09T18:58:07Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (taintedPath.isEmpty()) { taints.add(taintedPath); if (stmt instanceof soot.jimple.DefinitionStmt) taints.add(new soot.jimple.infoflow.data.AccessPath(((soot.jimple.DefinitionStmt) (stmt)).getLeftOp())); if (stmt.containsInvokeExpr()) if ((stmt.getInvokeExpr()) instanceof soot.jimple.InstanceInvokeExpr) taints.add(new soot.jimple.infoflow.data.AccessPath(((soot.jimple.InstanceInvokeExpr) (stmt.getInvokeExpr())).getBase())); return taints; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/1458/buggy-version/src.soot.jimple.infoflow.taintWrappers.EasyTaintWrapper.java", "BodyUseAPI": ["java.util.Set<soot.jimple.infoflow.data.AccessPath>.add(soot.jimple.infoflow.data.AccessPath)"], "Fixed commit": "dfaaec2f8f4e31d4eec936d0f5b04e6daea25569", "Url": "https://api.github.com/repos/malaverdiere/soot-infoflow", "Date": "2013-10-15T12:14:13Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState == null) { isTilesFragment = true; android.support.v4.app.FragmentTransaction fragmentTransaction = getSupportFragmentManager().beginTransaction(); fragmentTransaction.replace(R.id.main_container, new com.mpier.juvenaliaapp.TilesFragment()); fragmentTransaction.commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/1571/buggy-version/app.src.main.java.com.mpier.juvenaliaapp.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "177894d67a6ff21c0d63180ba4e5724311352353", "Url": "https://api.github.com/repos/mack0r3/JuwenaliaApp", "Date": "2016-05-05T19:53:40Z"},
{"Line": "=>671", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((version.compareTo(\"paid\")) != 0) { if (((hasRatedPref) == 0) && ((useCountPref) > 6)) displayDialog(com.wckd_dev.mirror.core.MirrorActivity.RATE); else { (useCountPref)++; this.finish(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/852/buggy-version/src.com.wckd_dev.mirror.core.MirrorActivity.java", "BodyUseAPI": [], "Fixed commit": "a8d4f9df3bb46a76fa726b5ec632f752ba0f784a", "Url": "https://api.github.com/repos/bjcrawford/Mirror-Core", "Date": "2013-11-24T01:27:38Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (index == (encodedWords.size())) { return translator; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/2125/buggy-version/crypt-kicker.Main.java", "BodyUseAPI": [], "Fixed commit": "314131e8bcd8bf72509d606670078e15588bd843", "Url": "https://api.github.com/repos/evankroske/wcsc-pcotw-solutions", "Date": "2011-07-20T14:05:23Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((item.getItemId()) == (R.id.item_about)) { android.support.v7.app.AlertDialog.Builder builder = new android.support.v7.app.AlertDialog.Builder(getContext()); builder.setView(getActivity().getLayoutInflater().inflate(R.layout.layout_about, null)); builder.show(); return true; }else if ((item.getItemId()) == (R.id.item_settings)) { android.content.Intent intent = new android.content.Intent(getContext(), com.b4g.sid.books4geeks.ui.activity.SettingsActivity.class); startActivity(intent); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/1146/buggy-version/app.src.main.java.com.b4g.sid.books4geeks.ui.Fragment.DrawerFragment.java", "BodyUseAPI": ["android.view.MenuItem.getItemId()"], "Fixed commit": "fcd888092905f0d1e936153ffa997aeb66d90ab1", "Url": "https://api.github.com/repos/Sid-96/Books4Geeks", "Date": "2017-01-05T13:20:04Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.entity.Player.getItemInHand()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (itemStack.getItemMeta().hasEnchants()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/3238/buggy-version/src.main.java.me.shock.avatarpvp.EarthListener.java", "BodyUseAPI": [], "Fixed commit": "590cae0987b25594a551f6fe67a46be0be284625", "Url": "https://api.github.com/repos/drtshock/AvatarPvP", "Date": "2013-01-17T02:56:03Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.entity.Player.getItemInHand()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (itemStack.getItemMeta().hasEnchants()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/3238/buggy-version/src.main.java.me.shock.avatarpvp.AntiListener.java", "BodyUseAPI": [], "Fixed commit": "590cae0987b25594a551f6fe67a46be0be284625", "Url": "https://api.github.com/repos/drtshock/AvatarPvP", "Date": "2013-01-17T02:56:03Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.entity.Player.getItemInHand()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (inHand.getItemMeta().hasEnchants()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/3238/buggy-version/src.main.java.me.shock.avatarpvp.AirListener.java", "BodyUseAPI": [], "Fixed commit": "590cae0987b25594a551f6fe67a46be0be284625", "Url": "https://api.github.com/repos/drtshock/AvatarPvP", "Date": "2013-01-17T02:56:03Z"},
{"Line": "=>355", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args == null) || ((args.length) == 0)) { sendMessage(sender, plugin.colorizeText(\"Type /business help for help.\", ChatColor.YELLOW)); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/3200/buggy-version/src.main.java.com.lebelw.Tickets.commands.TemplateCmd.java", "BodyUseAPI": [], "Fixed commit": "a3cc015f85bc7069520ec5f668c09b8163e67027", "Url": "https://api.github.com/repos/greatman/Tickets", "Date": "2011-07-15T19:38:04Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((evt instanceof org.jtrfp.trcl.beh.DamageListener.ProjectileDamage) && (!(isAcceptsProjectileDamage()))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/1685/buggy-version/src.main.java.org.jtrfp.trcl.beh.DamageableBehavior.java", "BodyUseAPI": [], "Fixed commit": "f5d1b68527b868e0eefcffb9c79743013a7ad906", "Url": "https://api.github.com/repos/jtrfp/terminal-recall", "Date": "2015-12-22T06:12:14Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang.StringUtils.isNotBlank(modelConfig.getValidationDataSetRawPath())) { this.trainingData = new ml.shifu.guagua.util.BytableMemoryDiskList<ml.shifu.shifu.core.dtrain.lr.LogisticRegressionWorker.Data>(((long) (((java.lang.Runtime.getRuntime().maxMemory()) * memoryFraction) * 0.6)), (((tmpFolder + (java.io.File.separator)) + \"train-\") + (java.lang.System.currentTimeMillis())), ml.shifu.shifu.core.dtrain.lr.LogisticRegressionWorker.Data.class.getName()); this.validationData = new ml.shifu.guagua.util.BytableMemoryDiskList<ml.shifu.shifu.core.dtrain.lr.LogisticRegressionWorker.Data>(((long) (((java.lang.Runtime.getRuntime().maxMemory()) * memoryFraction) * 0.4)), (((tmpFolder + (java.io.File.separator)) + \"test-\") + (java.lang.System.currentTimeMillis())), ml.shifu.shifu.core.dtrain.lr.LogisticRegressionWorker.Data.class.getName()); }else { this.trainingData = new ml.shifu.guagua.util.BytableMemoryDiskList<ml.shifu.shifu.core.dtrain.lr.LogisticRegressionWorker.Data>(((long) (((java.lang.Runtime.getRuntime().maxMemory()) * memoryFraction) * (1 - crossValidationRate))), (((tmpFolder + (java.io.File.separator)) + \"train-\") + (java.lang.System.currentTimeMillis())), ml.shifu.shifu.core.dtrain.lr.LogisticRegressionWorker.Data.class.getName()); this.validationData = new ml.shifu.guagua.util.BytableMemoryDiskList<ml.shifu.shifu.core.dtrain.lr.LogisticRegressionWorker.Data>(((long) (((java.lang.Runtime.getRuntime().maxMemory()) * memoryFraction) * crossValidationRate)), (((tmpFolder + (java.io.File.separator)) + \"test-\") + (java.lang.System.currentTimeMillis())), ml.shifu.shifu.core.dtrain.lr.LogisticRegressionWorker.Data.class.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/1908/buggy-version/src.main.java.ml.shifu.shifu.core.dtrain.lr.LogisticRegressionWorker.java", "BodyUseAPI": [], "Fixed commit": "601233bbbba2d894dbd659dc68bf7df0bf87ccff", "Url": "https://api.github.com/repos/ShifuML/shifu", "Date": "2017-02-22T04:23:58Z"},
{"Line": "=>354", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang.StringUtils.isNotBlank(modelConfig.getValidationDataSetRawPath())) { this.trainingData = new ml.shifu.shifu.core.dtrain.dataset.MemoryDiskFloatMLDataSet(((long) (memoryStoreSize * 0.6)), ml.shifu.shifu.core.dtrain.DTrainUtils.getTrainingFile().toString(), this.inputNodeCount, this.outputNodeCount); this.validationData = new ml.shifu.shifu.core.dtrain.dataset.MemoryDiskFloatMLDataSet(((long) (memoryStoreSize * 0.4)), ml.shifu.shifu.core.dtrain.DTrainUtils.getTestingFile().toString(), this.inputNodeCount, this.outputNodeCount); }else { this.trainingData = new ml.shifu.shifu.core.dtrain.dataset.MemoryDiskFloatMLDataSet(((long) (memoryStoreSize * (1 - crossValidationRate))), ml.shifu.shifu.core.dtrain.DTrainUtils.getTrainingFile().toString(), this.inputNodeCount, this.outputNodeCount); this.validationData = new ml.shifu.shifu.core.dtrain.dataset.MemoryDiskFloatMLDataSet(((long) (memoryStoreSize * crossValidationRate)), ml.shifu.shifu.core.dtrain.DTrainUtils.getTestingFile().toString(), this.inputNodeCount, this.outputNodeCount); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/1908/buggy-version/src.main.java.ml.shifu.shifu.core.dtrain.nn.AbstractNNWorker.java", "BodyUseAPI": [], "Fixed commit": "601233bbbba2d894dbd659dc68bf7df0bf87ccff", "Url": "https://api.github.com/repos/ShifuML/shifu", "Date": "2017-02-22T04:23:58Z"},
{"Line": "=>404", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang.StringUtils.isNotBlank(modelConfig.getValidationDataSetRawPath())) { this.trainingData = new ml.shifu.guagua.util.MemoryLimitedList<ml.shifu.shifu.core.dtrain.dt.DTWorker.Data>(((long) (((java.lang.Runtime.getRuntime().maxMemory()) * memoryFraction) * 0.6)), new java.util.ArrayList<ml.shifu.shifu.core.dtrain.dt.DTWorker.Data>()); this.validationData = new ml.shifu.guagua.util.MemoryLimitedList<ml.shifu.shifu.core.dtrain.dt.DTWorker.Data>(((long) (((java.lang.Runtime.getRuntime().maxMemory()) * memoryFraction) * 0.4)), new java.util.ArrayList<ml.shifu.shifu.core.dtrain.dt.DTWorker.Data>()); }else { if ((java.lang.Double.compare(validationRate, 0.0)) != 0) { this.trainingData = new ml.shifu.guagua.util.MemoryLimitedList<ml.shifu.shifu.core.dtrain.dt.DTWorker.Data>(((long) (((java.lang.Runtime.getRuntime().maxMemory()) * memoryFraction) * (1 - validationRate))), new java.util.ArrayList<ml.shifu.shifu.core.dtrain.dt.DTWorker.Data>()); this.validationData = new ml.shifu.guagua.util.MemoryLimitedList<ml.shifu.shifu.core.dtrain.dt.DTWorker.Data>(((long) (((java.lang.Runtime.getRuntime().maxMemory()) * memoryFraction) * validationRate)), new java.util.ArrayList<ml.shifu.shifu.core.dtrain.dt.DTWorker.Data>()); }else { this.trainingData = new ml.shifu.guagua.util.MemoryLimitedList<ml.shifu.shifu.core.dtrain.dt.DTWorker.Data>(((long) ((java.lang.Runtime.getRuntime().maxMemory()) * memoryFraction)), new java.util.ArrayList<ml.shifu.shifu.core.dtrain.dt.DTWorker.Data>()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/1908/buggy-version/src.main.java.ml.shifu.shifu.core.dtrain.dt.DTWorker.java", "BodyUseAPI": [], "Fixed commit": "601233bbbba2d894dbd659dc68bf7df0bf87ccff", "Url": "https://api.github.com/repos/ShifuML/shifu", "Date": "2017-02-22T04:23:58Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(prisms.lang.Type.isAssignable(theBaseType, t.theBaseType))) { if ((!(t.isPrimitive())) || (!(prisms.lang.Type.isAssignable(theBaseType, prisms.lang.Type.getWrapperType(t.theBaseType))))) return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/5555/buggy-version/src.prisms.lang.Type.java", "BodyUseAPI": ["prisms.lang.Type.isPrimitive()", "prisms.lang.Type.isAssignable(java.lang.Class<?>,java.lang.Class<?>)", "prisms.lang.Type.getWrapperType(java.lang.Class<?>)"], "Fixed commit": "8ae3841f12aa0b6d0fc0c837b789308d424ad6f4", "Url": "https://api.github.com/repos/Updownquark/PRISMS", "Date": "2014-11-20T04:32:04Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((step) > (pathSteps)) return -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/2234/buggy-version/src.dr.inference.mcmc.MarginalLikelihoodEstimator.java", "BodyUseAPI": [], "Fixed commit": "3cba811917682129d5b1c72cef5466f89a3a7fe4", "Url": "https://api.github.com/repos/beast-dev/beast-mcmc", "Date": "2012-03-23T09:55:41Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((request.getAttribute(\"filter\")) != null) { request.getSession().setAttribute(\"lastVisitedFilter\", request.getAttribute(\"filter\")); }else { request.getSession().removeAttribute(\"lastVisitedFilter\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/2658/buggy-version/src.main.java.command.GetContactListPage.java", "BodyUseAPI": ["javax.servlet.http.HttpServletRequest.getAttribute(java.lang.String)", "request.getSession().removeAttribute(java.lang.String)", "request.getSession().setAttribute(java.lang.String,request.getAttribute(\"filter\"))", "javax.servlet.http.HttpServletRequest.getSession()", "javax.servlet.http.HttpServletRequest.getSession()"], "Fixed commit": "52865570b2b1a959db45d321f1cc75136876edc7", "Url": "https://api.github.com/repos/MaximMaltsev94/contacts", "Date": "2017-04-15T12:28:06Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((appNewForm.getApp()) != null) { appNewForm.setApp(appNewForm.getApp().trim()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/3419/buggy-version/disconf-web.src.main.java.com.baidu.disconf.web.web.app.validator.AppValidator.java", "BodyUseAPI": ["com.baidu.disconf.web.service.app.form.AppNewForm.getApp()", "com.baidu.disconf.web.service.app.form.AppNewForm.setApp(appNewForm.getApp().trim())", "appNewForm.getApp().trim()"], "Fixed commit": "0045f2a429ac003055a2f3082416226f7302e024", "Url": "https://api.github.com/repos/knightliao/disconf", "Date": "2016-06-24T08:16:32Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((appNewForm.getDesc()) != null) { appNewForm.setDesc(appNewForm.getDesc().trim()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/3419/buggy-version/disconf-web.src.main.java.com.baidu.disconf.web.web.app.validator.AppValidator.java", "BodyUseAPI": ["com.baidu.disconf.web.service.app.form.AppNewForm.getDesc()", "com.baidu.disconf.web.service.app.form.AppNewForm.setDesc(appNewForm.getDesc().trim())", "appNewForm.getDesc().trim()"], "Fixed commit": "0045f2a429ac003055a2f3082416226f7302e024", "Url": "https://api.github.com/repos/knightliao/disconf", "Date": "2016-06-24T08:16:32Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!mergeable) { allGeneSets.add(rookie); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/4513/buggy-version/src.worker.GeneSetMerger.java", "BodyUseAPI": [], "Fixed commit": "7d2299d907a0e0d90403b6d0a16d3aa86837e643", "Url": "https://api.github.com/repos/weiyi-bitw/caf", "Date": "2011-11-16T14:39:13Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((jobDescription) != null) { job.setJobDescription(jobDescription.toCharArray()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/5552/buggy-version/modules.registry.registry-core.src.main.java.org.apache.airavata.registry.core.experiment.catalog.resources.JobResource.java", "BodyUseAPI": [], "Fixed commit": "3d3999a05e4150e4c55f9a373526325c2e08dc30", "Url": "https://api.github.com/repos/apache/airavata", "Date": "2015-08-26T18:21:32Z"},
{"Line": "=>654", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((o.getJobDescription()) != null) { jobResource.setJobDescription(new java.lang.String(o.getJobDescription())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/5552/buggy-version/modules.registry.registry-core.src.main.java.org.apache.airavata.registry.core.experiment.catalog.resources.Utils.java", "BodyUseAPI": ["org.apache.airavata.registry.core.experiment.catalog.resources.Job.getJobDescription()", "org.apache.airavata.registry.core.experiment.catalog.resources.JobResource.setJobDescription(java.lang.String)"], "Fixed commit": "3d3999a05e4150e4c55f9a373526325c2e08dc30", "Url": "https://api.github.com/repos/apache/airavata", "Date": "2015-08-26T18:21:32Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(com.blakebr0.mysticalagradditions.config.ModConfig.confTConstructSupport)) || (!(com.blakebr0.mysticalagriculture.util.ModChecker.TINKERS_CONSTRUCT))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/308/buggy-version/1.12.src.main.java.com.blakebr0.mysticalagradditions.tinkers.CompatTConstruct.java", "BodyUseAPI": [], "Fixed commit": "b7d84fa20b720751dd0febc57242a205b3fd6579", "Url": "https://api.github.com/repos/BlakeBr0/MysticalAgradditions", "Date": "2017-11-27T04:53:19Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(com.blakebr0.mysticalagradditions.config.ModConfig.confTConstructSupport)) || (!(com.blakebr0.mysticalagriculture.util.ModChecker.TINKERS_CONSTRUCT))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/308/buggy-version/1.12.src.main.java.com.blakebr0.mysticalagradditions.tinkers.CompatTConstruct.java", "BodyUseAPI": [], "Fixed commit": "b7d84fa20b720751dd0febc57242a205b3fd6579", "Url": "https://api.github.com/repos/BlakeBr0/MysticalAgradditions", "Date": "2017-11-27T04:53:19Z"},
{"Line": "=>412", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((((mosaics) == seriesCount) && (seriesCount == ((planes.size()) / (getImageCount())))) && ((prestitched) != null)) && (prestitched)) { prestitched = false; core[0].sizeX = planes.get(((planes.size()) - 1)).x; core[0].sizeY = planes.get(((planes.size()) - 1)).y; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/4617/buggy-version/components.bio-formats.src.loci.formats.in.ZeissCZIReader.java", "BodyUseAPI": ["java.util.ArrayList<loci.formats.in.ZeissCZIReader.SubBlock>.get(int)", "java.util.ArrayList<loci.formats.in.ZeissCZIReader.SubBlock>.get(int)", "java.util.ArrayList<loci.formats.in.ZeissCZIReader.SubBlock>.size()", "java.util.ArrayList<loci.formats.in.ZeissCZIReader.SubBlock>.size()"], "Fixed commit": "6ac8bb91e68ef9285912c146032edef618b7bfd1", "Url": "https://api.github.com/repos/melissalinkert/bioformats", "Date": "2012-06-11T17:17:08Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (level == (-1)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/4438/buggy-version/src.main.java.tyra314.toolprogression.handlers.TooltipEventHandler.java", "BodyUseAPI": [], "Fixed commit": "69bd81651d008a8dce02458e8c8ee71fe4e38776", "Url": "https://api.github.com/repos/tyra314/ToolProgression", "Date": "2017-05-01T11:46:29Z"},
{"Line": "=>844", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((g) != null) el.reset(g.getGL());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/4626/buggy-version/src.main.java.casmi.graphics.object.GraphicsObject.java", "BodyUseAPI": [], "Fixed commit": "a14ca52662835c94f67200c03fe1eb9d5d33142e", "Url": "https://api.github.com/repos/casmi/casmi", "Date": "2012-10-16T11:38:36Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((configFile.getParentFile()) != null) { org.apache.commons.io.FileUtils.forceMkdir(configFile.getParentFile()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/5229/buggy-version/src.main.java.org.vanbest.xmltv.Config.java", "BodyUseAPI": ["org.apache.commons.io.FileUtils.forceMkdir(java.io.File)", "java.io.File.getParentFile()"], "Fixed commit": "4e276d76b988416a4371a58f8c833396405a7912", "Url": "https://api.github.com/repos/janpascal/tv_grab_nl_java", "Date": "2014-01-02T20:39:19Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((teacherPasswordField) != null) { teacherCoursePass = ((teacherPasswordField.getPassword()) != null) ? new java.lang.String(teacherPasswordField.getPassword()) : \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/5799/buggy-version/src.jlm.core.ui.ChooseCourseDialog.java", "BodyUseAPI": [], "Fixed commit": "fa1617d69ec51580f2eda890f584e9d3a0fa0a45", "Url": "https://api.github.com/repos/oster/JLM", "Date": "2012-09-10T19:45:00Z"},
{"Line": "=>13", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tts) != null) { tts.speak(textToSay, TextToSpeech.QUEUE_FLUSH, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/5961/buggy-version/android-app.src.main.java.org.osm4dys.app.JavascriptInterface.java", "BodyUseAPI": [], "Fixed commit": "d604be05684b8f1918b9e68ca40272c2dc9e3649", "Url": "https://api.github.com/repos/osm-for-the-dyslexic/app", "Date": "2016-02-25T11:25:21Z"},
{"Line": "=>422", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (omElement.getLocalName().equals(\"parameter\")) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/4932/buggy-version/esb.org.wso2.developerstudio.eclipse.gmf.esb.diagram.src.org.wso2.developerstudio.eclipse.gmf.esb.diagram.custom.deserializer.Deserializer.java", "BodyUseAPI": [], "Fixed commit": "424f2f21de2300b1ee3fd140875eafe22ad9af2b", "Url": "https://api.github.com/repos/nwnpallewela/developer-studio", "Date": "2015-10-07T11:47:19Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toLowerCase()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (game.equals(\"eu4\")) parser.Parsing.parseModifiers(parser.Token.tokenize(parser.IO.readFile((path + \"/common/event_modifiers/00_event_modifiers.txt\"))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/4437/buggy-version/src.parser.Parsing.java", "BodyUseAPI": [], "Fixed commit": "c990a5313a83dfe6a3549098389141f80c0fe826", "Url": "https://api.github.com/repos/Meneth/JParser", "Date": "2016-02-17T11:12:28Z"},
{"Line": "=>782", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.socialbiz.cog.UserProfile.getImage()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (oldImageName != null) { java.io.File oldUserImage = new java.io.File(userImageFolder, oldImageName); if (oldUserImage.exists()) { oldUserImage.delete(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/3547/buggy-version/src.org.socialbiz.cog.spring.UserController.java", "BodyUseAPI": [], "Fixed commit": "172a190f0d31150fc4b66c641754ce68d636a46b", "Url": "https://api.github.com/repos/agilepro/cognoscenti", "Date": "2017-10-18T17:50:49Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.value) == (obj.value)) { return 0; }else if ((this.value) == null) { return -1; }else if ((obj.value) == null) { return 1; }else { return this.value.compareToIgnoreCase(obj.value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/5353/buggy-version/software.DynamicExtentions.src.java.edu.common.dynamicextensions.domain.nui.PermissibleValue.java", "BodyUseAPI": ["java.lang.String.compareToIgnoreCase(java.lang.String)"], "Fixed commit": "d9701bc518679066b26459a98ebaffdd8def30a7", "Url": "https://api.github.com/repos/krishagni/dynamic_extensions", "Date": "2015-04-22T14:12:37Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((numCorrect) < 10) score.setText(\"YOU LOSE\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/5967/buggy-version/src.Brain.OccipitalLobe.OccipitalMain.java", "BodyUseAPI": [], "Fixed commit": "cae37d447959728d6610324d4075c2311d13de84", "Url": "https://api.github.com/repos/rmishra900/FinalProject", "Date": "2017-05-15T05:56:34Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (leeway < 10) { double averageBust = 0; for (int card = leeway; card < (availableCards.length); card++) { averageBust += (availableCards[card]) / ((totalCards) * 1.0); } probabilities[BUST] = ((averageBust / (availableCards.length)) - leeway) * 100; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/4257/buggy-version/src.CardCounter.java", "BodyUseAPI": [], "Fixed commit": "3797a35de9a477eaafa5b3aad479fe7bfda8c81a", "Url": "https://api.github.com/repos/ecnivo/BlackjackAI", "Date": "2015-12-03T17:23:54Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(user.isPassword(java.lang.String.copyValueOf(oldPasswordField.getPassword())))) { txtIncorrectPassword.setText(\"Incorrect Password\"); }else { controller.deactivate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/5633/buggy-version/src.project2.SettingsView.java", "BodyUseAPI": [], "Fixed commit": "e47d1147acc6e82d17479a2f3a1583f323ce822f", "Url": "https://api.github.com/repos/jaketerrito/social-network", "Date": "2017-11-25T01:12:42Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.tendersaucer.collector.util.TiledUtils.getFloatProperty(com.badlogic.gdx.maps.objects.TextureMapObject,java.lang.String)", "com.tendersaucer.collector.util.TiledUtils.getFloatProperty(com.badlogic.gdx.maps.objects.TextureMapObject,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((bodyWidth != 0) && (bodyHeight != 0)) { ((com.badlogic.gdx.maps.objects.RectangleMapObject) (bodySkeleton)).getRectangle().setSize(bodyWidth, bodyHeight); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/4637/buggy-version/core.src.com.tendersaucer.collector.world.room.TiledMapRoomLoadable.java", "BodyUseAPI": ["((com.badlogic.gdx.maps.objects.RectangleMapObject) (bodySkeleton)).getRectangle().setSize(float,float)"], "Fixed commit": "74964490f150f00a4c0125c6b3ad9b85790d711a", "Url": "https://api.github.com/repos/alexschimpf/Collector_V2", "Date": "2016-05-14T23:41:36Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["data.SqlManager.querySimple(java.lang.String,java.lang.Object[])"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (rawpassword.equals(map.get(\"password\").toString())) { return util.EnumPackage.ResultMessage.FAIL; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/5925/buggy-version/src.main.java.data.UserManagementServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "f3b0cf71b36589e41a1cf55181efb93da48f6dae", "Url": "https://api.github.com/repos/hadley0828/citi2017", "Date": "2017-09-14T09:10:44Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (length < 1) length = 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/1668/buggy-version/src.main.moonlightowl.java.world.entity.LaserBeam.java", "BodyUseAPI": [], "Fixed commit": "05899c1bd12bce3880719dd123a11453a141ecf6", "Url": "https://api.github.com/repos/MoonlightOwl/LittleTanks", "Date": "2015-06-19T20:09:15Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.HdrHistogram.HistogramLogAnalyzer.applicationlayer.MWPProperties.getMWPEntries()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(mwpEntries.contains(org.HdrHistogram.HistogramLogAnalyzer.applicationlayer.MWPProperties.getDefaultMWPEntry()))) { init(tag, org.HdrHistogram.HistogramLogAnalyzer.applicationlayer.MWPProperties.getDefaultMWPEntry()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/7477/buggy-version/src.main.java.org.HdrHistogram.HistogramLogAnalyzer.datalayer.HistogramModel.java", "BodyUseAPI": [], "Fixed commit": "9e1e775180dc14e16172747276145d40bc9aeffe", "Url": "https://api.github.com/repos/HdrHistogram/HistogramLogAnalyzer", "Date": "2016-11-04T16:43:51Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["kr.ac.kaist.nmsl.pushmanager.socialcontext.SocialContext.getCurrentContext()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(socialContextAttributes.containsKey(Constants.CONTEXT_ATTRIBUTE_TYPES.WITH_OTHERS))) { android.bluetooth.BluetoothAdapter btAdapter = kr.ac.kaist.nmsl.pushmanager.util.BLEUtil.getBluetoothAdapter(); if (!(btAdapter.isEnabled())) { btAdapter.enable(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/1992/buggy-version/app.src.main.java.kr.ac.kaist.nmsl.pushmanager.defer.DeferService.java", "BodyUseAPI": [], "Fixed commit": "b5c57e6a09cb2ba1b4c1a308351a09f967ef8812", "Url": "https://api.github.com/repos/cjpark87/PushManager", "Date": "2016-05-13T01:44:32Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((lhs.getArtist()) == null) || ((rhs.getArtist()) == null)) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/6646/buggy-version/app.src.main.java.edu.sintez.audioplayer.app.utils.PlayListComparator.java", "BodyUseAPI": [], "Fixed commit": "a4c56fcd866800028148a186d63f1b3f0394ae23", "Url": "https://api.github.com/repos/maxtat3/audioplayer-android", "Date": "2016-05-30T20:20:18Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((lhs.getTitle()) == null) || ((rhs.getTitle()) == null)) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/6646/buggy-version/app.src.main.java.edu.sintez.audioplayer.app.utils.PlayListComparator.java", "BodyUseAPI": [], "Fixed commit": "a4c56fcd866800028148a186d63f1b3f0394ae23", "Url": "https://api.github.com/repos/maxtat3/audioplayer-android", "Date": "2016-05-30T20:20:18Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((lhs.getAlbum()) == null) || ((rhs.getAlbum()) == null)) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/6646/buggy-version/app.src.main.java.edu.sintez.audioplayer.app.utils.PlayListComparator.java", "BodyUseAPI": [], "Fixed commit": "a4c56fcd866800028148a186d63f1b3f0394ae23", "Url": "https://api.github.com/repos/maxtat3/audioplayer-android", "Date": "2016-05-30T20:20:18Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bundleTagsString.trim().isEmpty()) { return bundleTags; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/5177/buggy-version/LARAI.src.org.lara.interpreter.joptions.config.interpreter.LaraIDataStore.java", "BodyUseAPI": [], "Fixed commit": "80e768d29eb513894e00cb37b3a6b9b128422175", "Url": "https://api.github.com/repos/specs-feup/lara-framework", "Date": "2017-10-23T12:03:06Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((shipList.size()) <= (shipIndex)) { shipIndex = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/7802/buggy-version/src.org.openRealmOfStars.player.combat.Combat.java", "BodyUseAPI": [], "Fixed commit": "6c7f738c9c454f2b2e33c80819b2610f6a257ead", "Url": "https://api.github.com/repos/tuomount/Open-Realms-of-Stars", "Date": "2016-08-23T14:10:31Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openRealmOfStars.player.combat.Combat.getMostPowerfulShip(org.openRealmOfStars.player.PlayerInfo)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (deadliest != null) { if ((ai.getShip().getTotalMilitaryPower()) > (deadliest.getShip().getTotalMilitaryPower())) { range = ai.getShip().getMinWeaponRange(); } int distance = ((int) (java.lang.Math.round(org.openRealmOfStars.starMap.StarMap.getDistance(ai.getX(), ai.getY(), deadliest.getX(), deadliest.getY())))); if ((range < (distance - (ai.getMovesLeft()))) && (closest != null)) { handleAIShoot(ai, closest); } }else if (closest != null) { handleAIShoot(ai, closest); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/7802/buggy-version/src.org.openRealmOfStars.game.States.BattleView.java", "BodyUseAPI": ["java.lang.Math.round(org.openRealmOfStars.starMap.StarMap.getDistance(ai.getX(), ai.getY(), deadliest.getX(), deadliest.getY()))", "org.openRealmOfStars.player.combat.CombatShip.getY()", "org.openRealmOfStars.starMap.StarMap.getDistance(ai.getX(),ai.getY(),deadliest.getX(),deadliest.getY())", "deadliest.getShip().getTotalMilitaryPower()", "org.openRealmOfStars.player.combat.CombatShip.getShip()", "org.openRealmOfStars.player.combat.CombatShip.getX()"], "Fixed commit": "6c7f738c9c454f2b2e33c80819b2610f6a257ead", "Url": "https://api.github.com/repos/tuomount/Open-Realms-of-Stars", "Date": "2016-08-23T14:10:31Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getRegattaById(regattaId)) == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/4520/buggy-version/app.de.htwg.seapal.regatta.database.impl.RegattaEbeanDatabase.java", "BodyUseAPI": [], "Fixed commit": "db344ec131119695b048a3e4a3d9d63736db6421", "Url": "https://api.github.com/repos/JoHae/de.htwg.seapal.regatta", "Date": "2013-05-06T15:16:11Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(event.getWorld().isRemote)) com.minemaarten.signals.rail.RailCacheManager.getInstance(event.getWorld()).onNeighborChanged(event);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/734/buggy-version/src.com.minemaarten.signals.event.EventHandler.java", "BodyUseAPI": ["net.minecraftforge.event.world.BlockEvent.NeighborNotifyEvent.getWorld()", "com.minemaarten.signals.rail.RailCacheManager.getInstance(event.getWorld())", "com.minemaarten.signals.rail.RailCacheManager.getInstance(event.getWorld()).onNeighborChanged(net.minecraftforge.event.world.BlockEvent.NeighborNotifyEvent)"], "Fixed commit": "b952e346ed56effdfbac4d37714da25aa5a0636b", "Url": "https://api.github.com/repos/MineMaarten/Signals", "Date": "2016-06-18T21:06:55Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mappedClass.isEnum()) || (mappedClass.isSynthetic())) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/4997/buggy-version/errai-marshalling.src.main.java.org.jboss.errai.marshalling.rebind.DefinitionsFactoryImpl.java", "BodyUseAPI": [], "Fixed commit": "47c827ee4cc836709e4661ccb68d0e8741cf3629", "Url": "https://api.github.com/repos/errai/errai", "Date": "2011-12-08T18:06:30Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.vidsapp.NetworkUtil.isConnected(this))) { android.support.design.widget.Snackbar.make(mMainCoordinatorLayout, \"No internet connection.Check your connection and try again\", Snackbar.LENGTH_LONG).setAction(\"Action\", null).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/104/buggy-version/app.src.main.java.com.vidsapp.VidsActivity.java", "BodyUseAPI": [], "Fixed commit": "ad0222f977c1398322c1718fc055f40823c7449f", "Url": "https://api.github.com/repos/atul-nanodegree/VidsApp", "Date": "2016-11-19T17:35:58Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((messages.size()) > 0) { messages.get(0).setState(MessageState.READ); messageDao.save(messages.get(0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/3777/buggy-version/src.main.java.ch.unibe.ese.team1.controller.service.MessageService.java", "BodyUseAPI": ["messages.get(0).setState(MessageState.READ)", "ch.unibe.ese.team1.model.dao.MessageDao.save(messages.get(0))", "java.util.List<ch.unibe.ese.team1.model.Message>.get(int)", "java.util.List<ch.unibe.ese.team1.model.Message>.get(int)"], "Fixed commit": "71defc3070dadd304075571365de885359fbb717", "Url": "https://api.github.com/repos/scg-unibe-ch/ese2016-team7", "Date": "2016-11-07T13:58:06Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jeremydeanlakey.json.Jtokenizer.peekToken()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (peek.isQuoted()) return new com.jeremydeanlakey.json.Jstring(next().getStringValue());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/7233/buggy-version/src.main.java.com.jeremydeanlakey.json.Jtparser.java", "BodyUseAPI": [], "Fixed commit": "f84812cf135425b5fe0b253c8a609d010e96a144", "Url": "https://api.github.com/repos/jeremydeanlakey/json", "Date": "2016-07-21T23:19:58Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ntcCLikee.getcUid()) != (ntcCLikee.getLkUid())) ntcCLikee.setIsRecived(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/2428/buggy-version/src.main.java.com.spittr.websocket.core.NtcServiceImpl.java", "BodyUseAPI": ["com.spittr.websocket.model.NtcCLikee.setIsRecived(boolean)"], "Fixed commit": "5b68f0e3637363f02d1c695f4eb2141952be073c", "Url": "https://api.github.com/repos/wususu/Mimi-Sever", "Date": "2017-10-10T07:05:36Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ntcMLikee.getLkUid()) != (ntcMLikee.getmUid())) ntcMLikee.setIsRecived(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/2428/buggy-version/src.main.java.com.spittr.websocket.core.NtcServiceImpl.java", "BodyUseAPI": ["com.spittr.websocket.model.NtcMLikee.setIsRecived(boolean)"], "Fixed commit": "5b68f0e3637363f02d1c695f4eb2141952be073c", "Url": "https://api.github.com/repos/wususu/Mimi-Sever", "Date": "2017-10-10T07:05:36Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.getEntities().get(0)) instanceof org.spongepowered.api.entity.living.monster.Monster) { if (r != null) { event.setCancelled((!(r.getFlag(\"mobs\")))); }else { com.universeguard.region.GlobalRegion gr = com.universeguard.utils.RegionUtils.loadGlobal(event.getEntities().get(0).getLocation().getExtent().getName()); if (gr != null) event.setCancelled((!(gr.getFlag(\"mobs\")))); } }else { if (!((event.getEntities().get(0)) instanceof org.spongepowered.api.entity.Item)) { if (r != null) { event.setCancelled((!(r.getFlag(\"mobs\")))); }else { com.universeguard.region.GlobalRegion gr = com.universeguard.utils.RegionUtils.loadGlobal(event.getEntities().get(0).getLocation().getExtent().getName()); if (gr != null) event.setCancelled((!(gr.getFlag(\"mobs\")))); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/6735/buggy-version/src.main.java.com.universeguard.events.flags.EventSpawnEntity.java", "BodyUseAPI": ["com.universeguard.utils.RegionUtils.loadGlobal(event.getEntities().get(0).getLocation().getExtent().getName())", "event.getEntities().get(0).getLocation().getExtent().getName()", "com.universeguard.utils.RegionUtils.loadGlobal(event.getEntities().get(0).getLocation().getExtent().getName())", "event.getEntities().get(int)", "event.getEntities().get(0).getLocation()", "event.getEntities().get(int)", "org.spongepowered.api.event.entity.SpawnEntityEvent.setCancelled((!(gr.getFlag(\"mobs\"))))", "org.spongepowered.api.event.entity.SpawnEntityEvent.getEntities()", "org.spongepowered.api.event.entity.SpawnEntityEvent.setCancelled((!(gr.getFlag(\"mobs\"))))", "event.getEntities().get(0).getLocation().getExtent()", "event.getEntities().get(0).getLocation().getExtent().getName()", "org.spongepowered.api.event.entity.SpawnEntityEvent.setCancelled((!(r.getFlag(\"mobs\"))))", "event.getEntities().get(int)", "org.spongepowered.api.event.entity.SpawnEntityEvent.setCancelled((!(r.getFlag(\"mobs\"))))", "event.getEntities().get(0).getLocation()", "org.spongepowered.api.event.entity.SpawnEntityEvent.getEntities()", "event.getEntities().get(0).getLocation().getExtent()", "org.spongepowered.api.event.entity.SpawnEntityEvent.getEntities()"], "Fixed commit": "9a4af46615802a9302e5feaf176db975d487b671", "Url": "https://api.github.com/repos/JimiIT92/UniverseGuard", "Date": "2017-06-21T20:21:56Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["input.getSegment().increment()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (closeable != null) { closeable.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/3305/buggy-version/server.src.main.java.io.druid.segment.realtime.plumber.RealtimePlumber.java", "BodyUseAPI": ["java.io.Closeable.close()"], "Fixed commit": "52f65b1273bb11cd8d98f48d3da2098da7b09701", "Url": "https://api.github.com/repos/apache/incubator-druid", "Date": "2015-01-17T23:23:01Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["main.java.com.konifar.stringssearch.models.StringElement.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (value == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/7712/buggy-version/src.main.java.com.konifar.stringssearch.search.SearchStringItemProvider.java", "BodyUseAPI": [], "Fixed commit": "1750c67b5a863bb76776de6c1de3f00bed0be023", "Url": "https://api.github.com/repos/konifar/android-strings-search-plugin", "Date": "2016-08-14T01:54:09Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(pathCreator.isRunning)) && (((pathCreator.getBestPath()) == null) || ((pathCreator.getBestPath().size()) == 0))) { pathCreator.syncWithRealWorld(world, enemyPredictor); findPath(observation); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/6323/buggy-version/src.MarioAI.FastAndFurious.java", "BodyUseAPI": ["MarioAI.path.PathCreator.syncWithRealWorld(MarioAI.World,MarioAI.enemySimuation.EnemyPredictor)"], "Fixed commit": "d98a26242be3bdace963c834274982b15d2c1ba5", "Url": "https://api.github.com/repos/TheAIBot/MarioAI", "Date": "2017-06-03T18:50:21Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.widget.RadioGroup.getCheckedRadioButtonId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (chosen_radioGroup > 0) { android.content.Intent goToFormActivity = new android.content.Intent(this, com.example.boris.madlibslast.fillForm.class); goToFormActivity.putExtra(\"chosen_radiobutton\", chosen_radioButton.getText()); startActivity(goToFormActivity); finish(); }else { android.widget.Toast toast = android.widget.Toast.makeText(this, \"Pls pick a text!\", Toast.LENGTH_SHORT); toast.show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/5526/buggy-version/boriswolvers-pset2.app.src.main.java.com.example.boris.madlibslast.selectTextFiles.java", "BodyUseAPI": [], "Fixed commit": "e937d8dea0e675afecc12b5ecc20c73dcd67a909", "Url": "https://api.github.com/repos/boriswolvers/Mad-Libs", "Date": "2016-11-11T15:36:57Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.parceler.Parcels.unwrap(getArguments().getParcelable(com.doublesp.coherence.fragments.ListCompositionFragment.LIST_COMPOSITION_VIEW_MODELS))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (goal != null) { mInteractor.loadIdeasFromGoal(goal); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/2032/buggy-version/app.src.main.java.com.doublesp.coherence.fragments.ListCompositionFragment.java", "BodyUseAPI": ["com.doublesp.coherence.interfaces.domain.IdeaInteractorInterface.loadIdeasFromGoal(com.doublesp.coherence.viewmodels.Goal)"], "Fixed commit": "5e4526b7b94749dca847b863ac919cf729dbcdf0", "Url": "https://api.github.com/repos/doublesp/Coherence", "Date": "2016-11-28T21:26:55Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.probe.usb.host.pc.controller.OutputWriter.getCurrentFileName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (actualName.startsWith(this.outputDir)) fname = actualName.substring(this.outputDir.length());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/8723/buggy-version/src.com.probe.usb.host.pc.controller.OutputController.java", "BodyUseAPI": ["java.lang.String.substring(int)", "java.lang.String.length()"], "Fixed commit": "2f989c7e06920dffa9c0c707b45b4b28f7989f7a", "Url": "https://api.github.com/repos/ilya-v/ProbeUsbHost", "Date": "2016-11-23T09:57:56Z"},
{"Line": "=>404", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (varName.equalsIgnoreCase(\"status\")) { deviceState.put(\"status\", value); }else { deviceState.put(\"status\", \"2\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/8698/buggy-version/sources.appsgate-project.communication-components.TraceMan.src.main.java.appsgate.lig.ehmi.trace.TraceMan.java", "BodyUseAPI": [], "Fixed commit": "f2a5d1660f5ae47b0c82e9e63922027b7a9aa947", "Url": "https://api.github.com/repos/appsgate2015/appsgate", "Date": "2014-08-20T14:12:08Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tmpToken != null) && ((tmpToken.startsWith(\";\")) || (tmpToken.startsWith(\"#\")))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/1964/buggy-version/src.main.java.com.infonova.tse.ansible.inventory.util.AnsibleInventoryReader.java", "BodyUseAPI": [], "Fixed commit": "bcfd5d589bcb087eca62b715dbf5f73d3a672f1b", "Url": "https://api.github.com/repos/infonova/ansible-inventory-java", "Date": "2017-06-13T08:12:13Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.getPath().isEmpty())) { return ((this.getPath()) + \"/\") + (this.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/3459/buggy-version/src.main.java.org.rmatil.sync.version.core.model.PathObject.java", "BodyUseAPI": [], "Fixed commit": "b6d1b253688f48b5d2c5d8413cb8dfa25ec7615c", "Url": "https://api.github.com/repos/p2p-sync/versions", "Date": "2015-11-29T17:32:18Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((phrase.toString().trim().equals(\"cell-specific differences in factor\")) || (phrase.toString().trim().equals(\"lytic effects of dexamethasone\"))) java.lang.System.out.println();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/5205/buggy-version/src.org.apache.lucene.analysis.jate.OpenNLPRegexChunker.java", "BodyUseAPI": [], "Fixed commit": "3f790e8d3bf708a2e6266dc4756baaccad0f6e00", "Url": "https://api.github.com/repos/ziqizhang/jate", "Date": "2015-10-14T16:04:24Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((phpModule.getSourceDirectory().getFileObject(\"cake\")) != null) { config = phpModule.getSourceDirectory().getFileObject(\"app/config/core.php\"); }else { config = phpModule.getSourceDirectory().getFileObject(\"app/Config/core.php\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/9198/buggy-version/src.org.cakephp.netbeans.CakePhpModuleExtender.java", "BodyUseAPI": ["org.netbeans.modules.php.api.phpmodule.PhpModule.getSourceDirectory()", "org.netbeans.modules.php.api.phpmodule.PhpModule.getSourceDirectory()", "phpModule.getSourceDirectory().getFileObject(java.lang.String)", "phpModule.getSourceDirectory().getFileObject(java.lang.String)"], "Fixed commit": "4338102e33ed1803b16feded92fd7970270867a8", "Url": "https://api.github.com/repos/junichi11/cakephp-netbeans", "Date": "2011-09-27T12:13:30Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isSoundLooping)) { Game.soundController.create(\"sounds/clickSelect.wav\", 0.5F); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/3765/buggy-version/src.com.madbros.tileminer.Slots.CraftingSlot.java", "BodyUseAPI": [], "Fixed commit": "02caaeb1ffcd0f2025af479c80c16f0dda44c50a", "Url": "https://api.github.com/repos/rpmadden08/adventure-craft", "Date": "2014-09-02T12:12:56Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (minDistance != 0) { algorithms.imageProcessing.Filters.applyShift(imageMax, minDistance, nRows, nCols); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/7648/buggy-version/src.main.java.algorithms.imageProcessing.Filters.java", "BodyUseAPI": ["algorithms.imageProcessing.Filters.applyShift(float[][],int,int,int)"], "Fixed commit": "f78873dd818684a22d963935f4b1228a9d566dc4", "Url": "https://api.github.com/repos/nking/shared", "Date": "2017-07-03T21:39:51Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((other instanceof BarCode) && (_zip.equals(((BarCode) (other._zip))))) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/8618/buggy-version/hwBarCode.BarCode.java", "BodyUseAPI": [], "Fixed commit": "69acb08b03bc8eb1a7aa543c7656dbe0d81d6039", "Url": "https://api.github.com/repos/Riantix/MKS21X", "Date": "2015-12-23T07:36:17Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_zip.equals(other._zip)) && ((checkSum()) == ((BarCode) (other.checkSum())))) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/8618/buggy-version/hwBarCode.BarCode.java", "BodyUseAPI": [], "Fixed commit": "69acb08b03bc8eb1a7aa543c7656dbe0d81d6039", "Url": "https://api.github.com/repos/Riantix/MKS21X", "Date": "2015-12-23T07:36:17Z"},
{"Line": "=>739", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.String>.containsKey(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!contains) { if (org.apache.camel.catalog.JSonSchemaHelper.isPropertyRequired(rows, key)) { java.lang.String value = org.apache.camel.catalog.JSonSchemaHelper.getPropertyDefaultValue(rows, key); if (value != null) { properties.put(key, value); key2 = value; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/4331/buggy-version/platforms.catalog.src.main.java.org.apache.camel.catalog.DefaultCamelCatalog.java", "BodyUseAPI": [], "Fixed commit": "1d6966cdf261587bc1013df1408bb9c1b2ea2523", "Url": "https://api.github.com/repos/jamesnetherton/camel", "Date": "2015-11-16T17:27:40Z"},
{"Line": "=>407", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.camel.Message.getHeader(HttpHeaders.Names.CONNECTION,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (connection == null) { connection = message.getExchange().getProperty(HttpHeaders.Names.CONNECTION, java.lang.String.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/5644/buggy-version/components.camel-netty-http.src.main.java.org.apache.camel.component.netty.http.DefaultNettyHttpBinding.java", "BodyUseAPI": [], "Fixed commit": "8130f450ffc27a5e241d50d1bc0001c5b7f5ec13", "Url": "https://api.github.com/repos/sabre1041/camel", "Date": "2015-03-09T10:07:53Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jboss.netty.handler.codec.http.HttpHeaders.isKeepAlive(org.jboss.netty.handler.codec.http.HttpRequest)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!keepAlive) { exchange.setProperty(HttpHeaders.Names.CONNECTION, HttpHeaders.Values.CLOSE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/5644/buggy-version/components.camel-netty-http.src.main.java.org.apache.camel.component.netty.http.handlers.HttpServerChannelHandler.java", "BodyUseAPI": [], "Fixed commit": "8130f450ffc27a5e241d50d1bc0001c5b7f5ec13", "Url": "https://api.github.com/repos/sabre1041/camel", "Date": "2015-03-09T10:07:53Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (indicators.isEmpty()) { selectedIndex = -1; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/4754/buggy-version/src.main.java.com.googlecode.mgwt.ui.client.widget.Carousel.java", "BodyUseAPI": [], "Fixed commit": "04d84c6e1435411ce6131e21d47f3acff40dc922", "Url": "https://api.github.com/repos/dankurka/mgwt", "Date": "2012-06-28T13:43:25Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((bid.getImageResource()) != null) && (!(bid.getImageResource().isEmpty()))) { com.squareup.picasso.Picasso.with(itemView.getContext()).load(bid.getImageResource()).into(photoImageView); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/8770/buggy-version/app.src.main.java.isshukan.com.bukatender.support.adapter.viewholder.BidViewHolder.java", "BodyUseAPI": ["com.squareup.picasso.Picasso.with(itemView.getContext()).load(bid.getImageResource()).into(android.widget.ImageView)", "com.squareup.picasso.Picasso.with(itemView.getContext()).load(bid.getImageResource())", "isshukan.com.bukatender.model.Bid.getImageResource()"], "Fixed commit": "308042390efddc70ccf18dd0d182388accaf26f9", "Url": "https://api.github.com/repos/umarfarisi/BukaTender", "Date": "2017-05-25T11:26:53Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((tender.getImageResource()) != null) && (!(tender.getImageResource().isEmpty()))) { com.squareup.picasso.Picasso.with(itemView.getContext()).load(tender.getImageResource()).into(photoImageView); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/8770/buggy-version/app.src.main.java.isshukan.com.bukatender.support.adapter.viewholder.TenderViewHolder.java", "BodyUseAPI": ["com.squareup.picasso.Picasso.with(itemView.getContext()).load(tender.getImageResource()).into(android.widget.ImageView)", "com.squareup.picasso.Picasso.with(itemView.getContext()).load(tender.getImageResource())", "isshukan.com.bukatender.model.Tender.getImageResource()"], "Fixed commit": "308042390efddc70ccf18dd0d182388accaf26f9", "Url": "https://api.github.com/repos/umarfarisi/BukaTender", "Date": "2017-05-25T11:26:53Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (safeDenominator <= 0) { safeDenominator = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/84/buggy-version/src.main.java.com.sosnitzka.taiga.traits.TraitHeroic.java", "BodyUseAPI": [], "Fixed commit": "035a627a909b495b5a6f517b707f803eab6ef2be", "Url": "https://api.github.com/repos/chimericdream/TAIGA", "Date": "2017-02-02T05:24:59Z"},
{"Line": "=>385", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((files.size()) == 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/3716/buggy-version/components.formats-common.src.loci.common.Location.java", "BodyUseAPI": [], "Fixed commit": "418616ecda0dcb2a1fa725465266035e4ab2b38e", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2014-04-27T19:28:36Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.getEntityType()) == (org.bukkit.entity.EntityType.GIANT)) { event.getEntity().setMaxHealth(health); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/68/buggy-version/src.main.java.me.Mammothskier.Giants.events.Listeners.java", "BodyUseAPI": ["org.bukkit.event.entity.CreatureSpawnEvent.getEntity()", "event.getEntity().setMaxHealth(double)"], "Fixed commit": "b54ea99bae7e6b26c220a2bcdb1bd2cedc6880e5", "Url": "https://api.github.com/repos/Mammothskier/Giants", "Date": "2014-02-21T07:16:58Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value.isSpawnable()) throw new de.st_ddt.crazyplugin.exceptions.CrazyCommandParameterException(0, \"CreatureType\", de.st_ddt.crazyutil.paramitrisable.CreatureParamitrisable.CREATURE_NAMES);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/6686/buggy-version/CrazySpawner.src.de.st_ddt.crazyutil.paramitrisable.CreatureParamitrisable.java", "BodyUseAPI": [], "Fixed commit": "69e0f9c3db2e87e7c03731187a34e508ebbd5bef", "Url": "https://api.github.com/repos/ST-DDT/Crazy", "Date": "2012-11-03T19:35:23Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (type.isSpawnable()) res.add(type.toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/6686/buggy-version/CrazySpawner.src.de.st_ddt.crazyutil.paramitrisable.CreatureParamitrisable.java", "BodyUseAPI": ["org.bukkit.entity.EntityType.toString()", "java.util.LinkedList<java.lang.String>.add(type.toString())"], "Fixed commit": "69e0f9c3db2e87e7c03731187a34e508ebbd5bef", "Url": "https://api.github.com/repos/ST-DDT/Crazy", "Date": "2012-11-03T19:35:23Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((value) != null) if (!(value.isAlive())) if (value.isSpawnable()) throw new de.st_ddt.crazyplugin.exceptions.CrazyCommandParameterException(0, \"CreatureType\", de.st_ddt.crazyutil.paramitrisable.CreatureParamitrisable.CREATURE_NAMES);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/6686/buggy-version/CrazySpawner.src.de.st_ddt.crazyutil.paramitrisable.CreatureParamitrisable.java", "BodyUseAPI": [], "Fixed commit": "69e0f9c3db2e87e7c03731187a34e508ebbd5bef", "Url": "https://api.github.com/repos/ST-DDT/Crazy", "Date": "2012-11-03T19:35:23Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (systemProperties.containsValue(\"RSERVER_CONF_MODE\")) { RSERVER_CONF_MODE = systemProperties.getEnum(de.invesdwin.context.r.runtime.rserve.RserverConfMode.class, \"RSERVER_CONF_MODE\"); }else { RSERVER_CONF_MODE = RserverConfMode.LOCAL_SPAWN; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/2717/buggy-version/invesdwin-context-r-parent.invesdwin-context-r-runtime-rserve.src.main.java.de.invesdwin.context.r.runtime.rserve.RserveProperties.java", "BodyUseAPI": [], "Fixed commit": "fbd500f54c9ffb3d1236c5b5428d0412b5501994", "Url": "https://api.github.com/repos/subes/invesdwin-context-r", "Date": "2017-05-09T20:54:56Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (net.pms.util.StringUtil.hasValue(tagInfo.year)) { if ((tagInfo.year.length()) > 4) { result.updateString(\"YEAR\", tagInfo.year.substring(0, 4)); }else { result.updateString(\"YEAR\", tagInfo.year); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/7200/buggy-version/src.main.java.net.pms.database.TableMusicBrainzReleases.java", "BodyUseAPI": ["java.sql.ResultSet.updateString(java.lang.String,tagInfo.year.substring(0, 4))", "java.sql.ResultSet.updateString(java.lang.String,tagInfo.year)", "tagInfo.year.length()", "tagInfo.year.substring(int,int)"], "Fixed commit": "0e8ad8d01a115bb0d21318fef5b26ccbc35e89d8", "Url": "https://api.github.com/repos/UniversalMediaServer/UniversalMediaServer", "Date": "2016-12-18T06:28:01Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.lang.String>>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (menuInfo == null) { return new java.lang.String[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/7874/buggy-version/it.baeyens.arduino.core.src.it.baeyens.arduino.tools.ArduinoBoards.java", "BodyUseAPI": [], "Fixed commit": "43e0c81115b2af9c85f752e529703180b3f0e6af", "Url": "https://api.github.com/repos/massimiliano76/arduino-eclipse-plugin", "Date": "2015-04-17T12:40:22Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (fieldName.startsWith(CommonFilterConstants.PROPERTY_TAG)) { final java.lang.Integer propertyTagId = getPropertyTagId(CommonFilterConstants.PROPERTY_TAG, fieldName); if ((propertyTagId != null) && (fieldValue != null)) { addExistsCondition(getPropertyTagSubquery(propertyTagId, fieldValue)); } }else { super.processFilterString(fieldName, fieldValue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/5245/buggy-version/src.main.java.org.jboss.pressgang.ccms.filter.base.BaseEntityWithPropertiesFilterQueryBuilder.java", "BodyUseAPI": ["org.jboss.pressgang.ccms.filter.base.BaseEntityWithPropertiesFilterQueryBuilder<T, U>.getPropertyTagId(CommonFilterConstants.PROPERTY_TAG,java.lang.String)", "org.jboss.pressgang.ccms.filter.base.BaseFilterQueryBuilder<T>.processFilterString(java.lang.String,java.lang.String)"], "Fixed commit": "f61d3295c62c830d2da0026ee0f19bed6a6b57ce", "Url": "https://api.github.com/repos/pressgang-ccms/PressGangCCMSQuery", "Date": "2013-06-11T05:03:07Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (show_error) this.showError(request, response, ((\"No Domains shared by \" + (userId)) + \" !\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/5075/buggy-version/portal.src.main.java.edu.isi.wings.portal.classes.Config.java", "BodyUseAPI": [], "Fixed commit": "f140b25672ddb9b13ac48b47396f80b2c745f2d1", "Url": "https://api.github.com/repos/IKCAP/wings", "Date": "2014-09-09T09:54:40Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (show_error) this.showError(request, response, \"No Permission !\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/5075/buggy-version/portal.src.main.java.edu.isi.wings.portal.classes.Config.java", "BodyUseAPI": [], "Fixed commit": "f140b25672ddb9b13ac48b47396f80b2c745f2d1", "Url": "https://api.github.com/repos/IKCAP/wings", "Date": "2014-09-09T09:54:40Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.dianping.cat.core.dal.HostinfoDao.findByIp(java.lang.String,HostinfoEntity.READSET_FULL)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (host != null) { m_hostinfos.put(ip, host); return host; }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/8516/buggy-version/cat-core.src.main.java.com.dianping.cat.service.HostinfoService.java", "BodyUseAPI": ["java.util.Map<java.lang.String, com.dianping.cat.core.dal.Hostinfo>.put(java.lang.String,com.dianping.cat.core.dal.Hostinfo)"], "Fixed commit": "612f90667330fc82616bf6ce8dfa491d1809d26c", "Url": "https://api.github.com/repos/leonindy/cat", "Date": "2014-08-21T03:16:52Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (query.isQuActive()) { com.silicolife.textmining.core.interfaces.process.IR.IQuery query_ = com.silicolife.textmining.core.datastructures.dataaccess.database.dataaccess.implementation.wrapper.queries.QueriesWrapperSpeedUp.convertToAnoteStructure(query); listQueries_.add(query_); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/2862/buggy-version/src.main.java.com.silicolife.textmining.core.datastructures.dataaccess.database.dataaccess.implementation.service.queries.QueriesServiceImpl.java", "BodyUseAPI": ["com.silicolife.textmining.core.datastructures.dataaccess.database.dataaccess.implementation.wrapper.queries.QueriesWrapperSpeedUp.convertToAnoteStructure(com.silicolife.textmining.core.datastructures.dataaccess.database.dataaccess.implementation.model.core.entities.Queries)"], "Fixed commit": "72ce9c980f6d1c6e1e34b9919999cd2758a8e4ec", "Url": "https://api.github.com/repos/biotextmining/core", "Date": "2017-08-31T12:01:40Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (query.isQuActive()) { com.silicolife.textmining.core.interfaces.process.IR.IQuery query_ = com.silicolife.textmining.core.datastructures.dataaccess.database.dataaccess.implementation.wrapper.queries.QueriesWrapper.convertToAnoteStructure(query); listQueries_.add(query_); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/2862/buggy-version/src.main.java.com.silicolife.textmining.core.datastructures.dataaccess.database.dataaccess.implementation.service.queries.QueriesServiceImpl.java", "BodyUseAPI": ["com.silicolife.textmining.core.datastructures.dataaccess.database.dataaccess.implementation.wrapper.queries.QueriesWrapper.convertToAnoteStructure(com.silicolife.textmining.core.datastructures.dataaccess.database.dataaccess.implementation.model.core.entities.Queries)"], "Fixed commit": "72ce9c980f6d1c6e1e34b9919999cd2758a8e4ec", "Url": "https://api.github.com/repos/biotextmining/core", "Date": "2017-08-31T12:01:40Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (query.isQuActive()) { com.silicolife.textmining.core.interfaces.process.IR.IQuery query_ = com.silicolife.textmining.core.datastructures.dataaccess.database.dataaccess.implementation.wrapper.queries.QueriesWrapper.convertToAnoteStructure(query); listQueries_.add(query_); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/2862/buggy-version/src.main.java.com.silicolife.textmining.core.datastructures.dataaccess.database.dataaccess.implementation.service.queries.QueriesServiceImpl.java", "BodyUseAPI": ["com.silicolife.textmining.core.datastructures.dataaccess.database.dataaccess.implementation.wrapper.queries.QueriesWrapper.convertToAnoteStructure(com.silicolife.textmining.core.datastructures.dataaccess.database.dataaccess.implementation.model.core.entities.Queries)"], "Fixed commit": "72ce9c980f6d1c6e1e34b9919999cd2758a8e4ec", "Url": "https://api.github.com/repos/biotextmining/core", "Date": "2017-08-31T12:01:40Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((c.getLevel()) != 1) { c.setLevel(((c.getLevel()) - 1)); level.setText(java.lang.Integer.toString(c.getLevel())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/3530/buggy-version/src.CharacterMgr.java", "BodyUseAPI": ["java.lang.Character.getLevel()", "java.lang.Character.setLevel(((c.getLevel()) - 1))", "java.lang.Integer.toString(c.getLevel())", "java.lang.Character.getLevel()", "dnd.Label.setText(java.lang.String)"], "Fixed commit": "f65d96a1769b5099d99c9567d41bf67ea7915216", "Url": "https://api.github.com/repos/ssroffe/DnDProject", "Date": "2017-07-10T02:00:37Z"},
{"Line": "=>340", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((isRanking) && ((topN) > 0)) evaluator.setTopN(topN);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/3735/buggy-version/core.src.main.java.net.librec.recommender.AbstractRecommender.java", "BodyUseAPI": [], "Fixed commit": "3fb4e3a60a88f3c5435120be3230f6f86cac1e07", "Url": "https://api.github.com/repos/yingquliang/librec", "Date": "2017-10-09T14:11:14Z"},
{"Line": "=>499", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(isRunning.get())) { hasNoThread = true; isRunning.set(true); pushHistory(null, (-1), (-1), null, null, null, (-1)); org.nschmidt.ldparteditor.logger.NLogger.debug(getClass(), \"Forked history thread...\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/323/buggy-version/src.org.nschmidt.ldparteditor.data.HistoryManager.java", "BodyUseAPI": ["java.util.concurrent.atomic.AtomicBoolean.set(boolean)"], "Fixed commit": "aedc279c6c0be18330f83ae19627fb968069552e", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2015-12-02T18:21:11Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(com.bsg.upm.api.util.IpV4Utils.checkSameSegmentByDefault(startIp, n.getStartIp()))) { if (!(((java.lang.Integer.parseInt(endIp.split(\"\\\\.\")[3])) <= (java.lang.Integer.parseInt(n.getStartIp().split(\"\\\\.\")[3]))) || ((java.lang.Integer.parseInt(startIp.split(\"\\\\.\")[3])) >= (java.lang.Integer.parseInt(n.getEndIp().split(\"\\\\.\")[3]))))) { chkRS.setStatus(HttpStatus.SC_CONFLICT); chkRS.setErrorMsg(\"\u8be5\u7ad9\u70b9\u4e0bIP\u5730\u5740\u5df2\u5b58\u5728\"); return chkRS; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/1828/buggy-version/src.main.java.com.bsg.upm.api.check.NetworkingCheck.java", "BodyUseAPI": ["n.getEndIp().split(java.lang.String)", "com.bsg.upm.api.entity.NetworkingEntity.getStartIp()", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.Integer.parseInt(n.getEndIp().split(\"\\\\.\")[3])", "java.lang.String.split(java.lang.String)", "java.lang.Integer.parseInt(n.getStartIp().split(\"\\\\.\")[3])", "n.getStartIp().split(java.lang.String)", "com.bsg.upm.api.entity.NetworkingEntity.getEndIp()"], "Fixed commit": "a1bf389bcc5505a8d69e2f55444322e79a81a476", "Url": "https://api.github.com/repos/upmio/upm_api", "Date": "2017-09-13T03:54:25Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(processingApps.Simulation.finishPrint)) { javax.swing.JOptionPane.showMessageDialog(null, \"Printing in process\"); }else { java.lang.System.exit(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/1884/buggy-version/src.appInterface.MainInterface.java", "BodyUseAPI": [], "Fixed commit": "3106ca7b5971d22d05b2bfacc0e4914370d35707", "Url": "https://api.github.com/repos/alejandromm90/RoboticArmGUI", "Date": "2014-05-30T08:57:08Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getIdByName(workbook.getSheet(\"Extras\"), paymentType).toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (paymentTypeId.equals(\"0\")) paymentTypeId = \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/4253/buggy-version/mifosng-provider.src.main.java.org.mifosplatform.infrastructure.dataimport.domain.handler.loan.LoanDataImportHandler.java", "BodyUseAPI": [], "Fixed commit": "d66da4a2eac24f5f5d6339685a86be6a50136b17", "Url": "https://api.github.com/repos/diunuge/mifosx", "Date": "2014-08-01T16:25:17Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getIdByName(workbook.getSheet(\"Extras\"), repaymentType).toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (repaymentTypeId.equals(\"0\")) repaymentTypeId = \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/4253/buggy-version/mifosng-provider.src.main.java.org.mifosplatform.infrastructure.dataimport.domain.handler.loan.LoanDataImportHandler.java", "BodyUseAPI": [], "Fixed commit": "d66da4a2eac24f5f5d6339685a86be6a50136b17", "Url": "https://api.github.com/repos/diunuge/mifosx", "Date": "2014-08-01T16:25:17Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getIdByName(workbook.getSheet(\"Extras\"), repaymentType).toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (repaymentTypeId.equals(\"0\")) repaymentTypeId = \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/4253/buggy-version/mifosng-provider.src.main.java.org.mifosplatform.infrastructure.dataimport.domain.handler.loan.LoanRepaymentDataImportHandler.java", "BodyUseAPI": [], "Fixed commit": "d66da4a2eac24f5f5d6339685a86be6a50136b17", "Url": "https://api.github.com/repos/diunuge/mifosx", "Date": "2014-08-01T16:25:17Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.inventory.IInventory.getStackInSlot(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (stack != null) { boolean result = com.creativemd.littletiles.common.gui.SubContainerWrench.drainIngridients(ingredients, stack, drain, remaining, useStructures); if ((stack.stackSize) <= 0) inventory.setInventorySlotContents(i, null); if (result) return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/7948/buggy-version/src.main.java.com.creativemd.littletiles.common.gui.SubContainerWrench.java", "BodyUseAPI": ["com.creativemd.littletiles.common.gui.SubContainerWrench.drainIngridients(java.util.ArrayList<com.creativemd.littletiles.common.items.ItemTileContainer.BlockEntry>,net.minecraft.item.ItemStack,boolean,java.util.ArrayList<com.creativemd.littletiles.common.items.ItemTileContainer.BlockEntry>,boolean)"], "Fixed commit": "5611fa7a7948119513cd07aa12bd7e6d4309452a", "Url": "https://api.github.com/repos/CreativeMD/LittleTiles", "Date": "2017-03-06T09:50:59Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.inventory.InventoryBasic.getStackInSlot(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((stack2.stackSize) <= 0) basic.setInventorySlotContents(1, null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/7948/buggy-version/src.main.java.com.creativemd.littletiles.common.gui.SubContainerWrench.java", "BodyUseAPI": [], "Fixed commit": "5611fa7a7948119513cd07aa12bd7e6d4309452a", "Url": "https://api.github.com/repos/CreativeMD/LittleTiles", "Date": "2017-03-06T09:50:59Z"},
{"Line": "=>414", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.camel.Message.getHeader(HttpHeaders.Names.CONNECTION,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (connection == null) { connection = message.getExchange().getProperty(HttpHeaders.Names.CONNECTION, java.lang.String.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/3467/buggy-version/components.camel-netty4-http.src.main.java.org.apache.camel.component.netty4.http.DefaultNettyHttpBinding.java", "BodyUseAPI": [], "Fixed commit": "48b961b6b8532aad4b1d72f73aa2a51894346b3e", "Url": "https://api.github.com/repos/apache/camel", "Date": "2015-03-09T10:08:13Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.netty.handler.codec.http.HttpHeaders.isKeepAlive(io.netty.handler.codec.http.HttpRequest)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!keepAlive) { exchange.setProperty(HttpHeaders.Names.CONNECTION, HttpHeaders.Values.CLOSE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/3467/buggy-version/components.camel-netty4-http.src.main.java.org.apache.camel.component.netty4.http.handlers.HttpServerChannelHandler.java", "BodyUseAPI": [], "Fixed commit": "48b961b6b8532aad4b1d72f73aa2a51894346b3e", "Url": "https://api.github.com/repos/apache/camel", "Date": "2015-03-09T10:08:13Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (className.equals(\"java.lang.Long\")) { return new janala.interpreters.LongObjectValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/8215/buggy-version/src.janala.interpreters.ObjectFactory.java", "BodyUseAPI": [], "Fixed commit": "aff70bb85eeb35dc380fca6a39b8259e71b46bd0", "Url": "https://api.github.com/repos/ksen007/janala2", "Date": "2012-08-25T17:58:27Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((list.size()) <= index) { for (int i = list.size(); i < index; ++i) { list.add(null); } list.add(element); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/5328/buggy-version/src.main.java.com.alibaba.fastjson.JSONArray.java", "BodyUseAPI": ["java.util.List<java.lang.Object>.add(<nulltype>)", "java.util.List<java.lang.Object>.add(java.lang.Object)", "java.util.List<java.lang.Object>.size()"], "Fixed commit": "2f1893cf232aaeacd28d8f7bc48288b305553657", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2015-08-23T17:27:58Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["no.imr.nmdapi.client.loader.dao.CruiseDAO.getLastUpdated(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((datasetType.getDataType().equals(DataTypeEnum.CRUISE)) && (!(lastUpdated.after(datasetType.getUpdated().toGregorianCalendar().getTime())))) { found = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/6693/buggy-version/src.main.java.no.imr.nmdapi.client.loader.service.ExportAllCruiseService.java", "BodyUseAPI": [], "Fixed commit": "1d2de750b2a11cdf54e58b1b39f3d6c7d933ccc5", "Url": "https://api.github.com/repos/Institute-of-Marine-Research-NMD/nmdapi-mission-generator", "Date": "2015-10-05T08:02:38Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (droneLine != null) droneLine += droneName + \", \"; else if (droneLine == null) droneLine = droneName + \", \";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/5972/buggy-version/src.com.javalab.UtilityMethods.java", "BodyUseAPI": [], "Fixed commit": "ec873dfcb9fca584d6e12e6c30be0f4115939980", "Url": "https://api.github.com/repos/divya21raj/SmartCity", "Date": "2017-10-18T10:52:13Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["overwatch.db.Personnel.getNumber(java.lang.String)", "overwatch.security.LoginManager.getCurrentUser()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (personSentBy.equals(personSentTo)) { overwatch.core.Gui.showError(\"Can't Order Yourself\", \"You can't send an order to yourself.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/6724/buggy-version/overwatch.src.overwatch.controllers.OrderLogic.java", "BodyUseAPI": [], "Fixed commit": "6daae5c503b096b438815388b54250e67967623f", "Url": "https://api.github.com/repos/LeeCIT/overwatch", "Date": "2013-04-26T09:49:16Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((((connectView.getNick()) == null) || (connectView.getNick().equals(\"\"))) || (connectView.getNick().equals(\"\\\\s\"))) || (!fieldsCorrect)) { logWithAlert(\"Please enter your name.\"); fieldsCorrect = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/2565/buggy-version/src.rolit.client.controllers.ApplicationController.java", "BodyUseAPI": [], "Fixed commit": "6b18d49b8772d7c45ddb6e9c49b3f0724d8164f7", "Url": "https://api.github.com/repos/mmjmeijerink/Rolit", "Date": "2011-03-30T14:09:38Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.banana.banana.ExpandableListDataPump.getTotal()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (total == 0) perc.put(name, 0.0); else perc.put(name, ((finalPrices.get(name)) / total));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/3897/buggy-version/app.src.main.java.com.banana.banana.TaxAddition.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.Double>.put(java.lang.String,double)"], "Fixed commit": "6b2f2053a6f425dd0454f9556f0a8a1f89e1566a", "Url": "https://api.github.com/repos/leifgrosswiler/Banana", "Date": "2017-05-13T15:15:33Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((token.length) > 1) { token[1] = token[1].toLowerCase(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/7696/buggy-version/src.pipeandfilter.filters.Sink.java", "BodyUseAPI": ["java.lang.String.toLowerCase()"], "Fixed commit": "193418e80be30a6a841c6b81af5efc217d77ae47", "Url": "https://api.github.com/repos/vsharonlynn/cs3219-assignment1", "Date": "2015-09-03T14:59:55Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((LeaderboardListSingleton.INSTANCE.getLeaderboardUserList()) == null) || (LeaderboardListSingleton.INSTANCE.getLeaderboardUserList().isEmpty())) { model.loadLeaderboardUsersList(); }else { refreshUiOnUIThread(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/8947/buggy-version/tweetCoAndroid.src.main.java.com.tweetco.activities.fragments.LeaderboardFragment.java", "BodyUseAPI": [], "Fixed commit": "9b26673e32582140a0535e509fc43c99fcfe20d3", "Url": "https://api.github.com/repos/kirankum/TweetCo", "Date": "2015-07-12T13:08:49Z"},
{"Line": "=>798", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.anba.es6draft.runtime.objects.GlobalObject.URIFunctions.readByte(java.lang.String,int)", "com.github.anba.es6draft.runtime.objects.GlobalObject.URIFunctions.readByte(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (c0 == 240 ? (c1 < 144) || (c1 > 191) : c0 == 244 ? (c1 < 128) || (c1 > 143) : (c1 < 128) || (c1 > 191)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/2664/buggy-version/src.main.java.com.github.anba.es6draft.runtime.objects.GlobalObject.java", "BodyUseAPI": [], "Fixed commit": "78b2ca3d12eb948408ac1ace29cafc796a26d9b6", "Url": "https://api.github.com/repos/anba/es6draft", "Date": "2013-03-22T20:12:40Z"},
{"Line": "=>787", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.anba.es6draft.runtime.objects.GlobalObject.URIFunctions.readByte(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((c2 < 128) || (c2 > 191)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/2664/buggy-version/src.main.java.com.github.anba.es6draft.runtime.objects.GlobalObject.java", "BodyUseAPI": [], "Fixed commit": "78b2ca3d12eb948408ac1ace29cafc796a26d9b6", "Url": "https://api.github.com/repos/anba/es6draft", "Date": "2013-03-22T20:12:40Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!isPrimitive) { return expression.is(Kind.NULL_LITERAL); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/2401/buggy-version/java-checks.src.main.java.org.sonar.java.checks.DefaultInitializedFieldCheck.java", "BodyUseAPI": [], "Fixed commit": "bfa2ec324c163c3b37c4a3fb1fe75352b0367645", "Url": "https://api.github.com/repos/ihr/sonar-java", "Date": "2015-12-04T11:04:29Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((cells[i][j]) != null) { cells[i][j].draw(g); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/1403/buggy-version/java.com.alexkaz.game2048.gamelogic.CellManager.java", "BodyUseAPI": ["cells[i][j].draw(android.graphics.Canvas)"], "Fixed commit": "89ebee68acf5ce0c787314ef050a3c22a6695ead", "Url": "https://api.github.com/repos/AlexKazmirchuk/Game2048", "Date": "2016-09-24T08:03:59Z"},
{"Line": "=>358", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mondrian.rolap.aggmatcher.MondrianProperties.instance().IgnoreLegacyCollapsedAggregated.get()) { msgRecorder.reportWarning(message); }else { msgRecorder.reportError(message); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/6069/buggy-version/src.main.mondrian.rolap.aggmatcher.ExplicitRecognizer.java", "BodyUseAPI": [], "Fixed commit": "3d0333fcd1bec7ee5ae0660ca6ad2f1f8c3c21f1", "Url": "https://api.github.com/repos/pentaho/mondrian", "Date": "2012-10-25T15:03:20Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"\".equals(ret)) { com.smartloli.kafka.eagle.service.OffsetService.lruCache.remove(key); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/4856/buggy-version/src.main.java.com.smartloli.kafka.eagle.service.OffsetService.java", "BodyUseAPI": [], "Fixed commit": "3afaa751c9be69bc49c8397d3ef0ab136123b97b", "Url": "https://api.github.com/repos/smartloli/kafka-eagle", "Date": "2016-08-23T12:07:10Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.smartloli.kafka.eagle.utils.KafkaClusterUtils.getLogSize(java.util.List<java.lang.String>,java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (logSize == 0) { offsetSQLite.setLag(0L); }else { offsetSQLite.setLag(((offsetZk.getOffset()) == (-1) ? 0 : logSize - (offsetZk.getOffset()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/4856/buggy-version/src.main.java.com.smartloli.kafka.eagle.quartz.OffsetsQuartz.java", "BodyUseAPI": ["com.smartloli.kafka.eagle.domain.OffsetsSQLiteDomain.setLag(((offsetZk.getOffset()) == (-1) ? 0 : logSize - (offsetZk.getOffset())))"], "Fixed commit": "3afaa751c9be69bc49c8397d3ef0ab136123b97b", "Url": "https://api.github.com/repos/smartloli/kafka-eagle", "Date": "2016-08-23T12:07:10Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((result.getResult()) != null) { for (int i = 0; i < (answerFormat.getImageChoiceList().size()); i++) { org.researchstack.backbone.answerformat.ImageChoiceAnswerFormat.ImageChoice imageChoice = answerFormat.getImageChoiceList().get(i); if (imageChoice.getValue().equals(result.getResult())) { imageViewList.get(i).callOnClick(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/8229/buggy-version/backbone.src.main.java.org.researchstack.backbone.ui.step.body.ImageChoiceBody.java", "BodyUseAPI": ["imageChoice.getValue().equals(result.getResult())", "org.researchstack.backbone.result.StepResult<java.io.Serializable>.getResult()"], "Fixed commit": "1224096bae8978daa98c0485d5a4364112f31292", "Url": "https://api.github.com/repos/ResearchStack/ResearchStack", "Date": "2017-03-15T03:02:12Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((enotification.getEventType()) == (org.eclipse.emf.common.notify.Notification.ADD)) && ((enotification.getNewValue()) instanceof eu.hyvar.feature.HyVersion)) { rearrangeChildren(); refreshVisuals(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/5904/buggy-version/plugins.de.darwinspl.feature.graphical.base.src.de.darwinspl.feature.graphical.base.editparts.DwFeatureEditPart.java", "BodyUseAPI": [], "Fixed commit": "81e38279e3b11fe0bcfaf74c246478dd9c45d059", "Url": "https://api.github.com/repos/DarwinSPL/DarwinSPL", "Date": "2017-09-06T07:02:36Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((((notification.getEventType()) != (org.eclipse.emf.common.notify.Notification.SET)) && ((notification.getPosition()) != (-1))) && ((notification.getEventType()) != (org.eclipse.emf.common.notify.Notification.REMOVE))) && ((notification.getEventType()) != (org.eclipse.emf.common.notify.Notification.REMOVING_ADAPTER))) refreshVisuals();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/5904/buggy-version/plugins.de.darwinspl.feature.graphical.base.src.de.darwinspl.feature.graphical.base.editparts.DwVersionEditPart.java", "BodyUseAPI": [], "Fixed commit": "81e38279e3b11fe0bcfaf74c246478dd9c45d059", "Url": "https://api.github.com/repos/DarwinSPL/DarwinSPL", "Date": "2017-09-06T07:02:36Z"},
{"Line": "=>519", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (trainOrTest.equals(\"test\")) { valuesList.addAll(valuesListW); valuesList.addAll(valuesListL); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/9245/buggy-version/src.ml.ARFF.java", "BodyUseAPI": [], "Fixed commit": "090ff65425272566d5b52e9e150a0ac4807788bb", "Url": "https://api.github.com/repos/MatthewPDingle/CSCSPMonitor", "Date": "2016-02-21T00:31:07Z"},
{"Line": "=>780", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (java.sql.Blob.class.isAssignableFrom(type)) { ps.setBlob(index, ((java.sql.Blob) (value))); }else if (type.isArray()) { ps.setArray(index, ((java.sql.Array) (value))); }else if (value instanceof java.sql.Timestamp) { ps.setTimestamp(index, ((java.sql.Timestamp) (value))); }else if (value instanceof java.sql.Date) { ps.setDate(index, ((java.sql.Date) (value))); }else if (value instanceof java.util.Date) { ps.setTimestamp(index, new java.sql.Timestamp(((java.util.Date) (value)).getTime())); }else if (value instanceof java.sql.Time) { ps.setTime(index, ((java.sql.Time) (value))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/908/buggy-version/cxytiandi-jdbc.src.main.java.com.cxytiandi.jdbc.CxytiandiJdbcTemplate.java", "BodyUseAPI": ["java.lang.Class<?>.isArray()"], "Fixed commit": "82c37c8c36bc20f2fcf1067a45744eba5dd190fb", "Url": "https://api.github.com/repos/yinjihuan/smjdbctemplate", "Date": "2017-08-16T05:28:30Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (partitionId == (-1)) { org.apache.s4.comm.tcp.TCPEmitter.logger.error(\"no nodes to send the message.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/6896/buggy-version/subprojects.s4-comm.src.main.java.org.apache.s4.comm.tcp.TCPEmitter.java", "BodyUseAPI": [], "Fixed commit": "4b1d6f54885f48a0ff45c8f67746b7f35f358a9e", "Url": "https://api.github.com/repos/xing5/DynamicS4", "Date": "2015-02-23T03:26:10Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((defaultState != null) && (mode == (PinMode.DIGITAL_OUTPUT))) { setState(pin, defaultState); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/2856/buggy-version/pi4j-core.src.main.java.com.pi4j.io.gpio.GpioProviderBase.java", "BodyUseAPI": ["com.pi4j.io.gpio.GpioProviderBase.setState(com.pi4j.io.gpio.Pin,com.pi4j.io.gpio.PinState)"], "Fixed commit": "c0ecc56863ecaff68383e6d5c99191294e91a224", "Url": "https://api.github.com/repos/Pi4J/pi4j", "Date": "2015-03-01T18:31:11Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.tx.uiwulala.base.fragment.list.PtrBaseListFragment.getLayoutManager()", "android.support.v7.widget.LinearLayoutManager.findFirstVisibleItemPosition()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((layoutManager.findViewByPosition(firstItemPosition)) == null) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/1775/buggy-version/wulalalib.src.main.java.com.tx.uiwulala.base.fragment.list.PtrBaseListFragment.java", "BodyUseAPI": [], "Fixed commit": "464468fea4d225ca8e5d4ad4bb3e9faa59158f38", "Url": "https://api.github.com/repos/BigCoder666/Encapsulation-of-rapid-development", "Date": "2016-08-14T17:28:18Z"},
{"Line": "=>309", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (gaia.cu9.ari.gaiaorbit.util.Constants.webgl) { EventManager.instance.post(Events.TOGGLE_TIME_CMD, true, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/8943/buggy-version/core.src.gaia.cu9.ari.gaiaorbit.GaiaSandbox.java", "BodyUseAPI": [], "Fixed commit": "aac551b662d2f00dadb431df766a13fc96b9446f", "Url": "https://api.github.com/repos/langurmonkey/gaiasky", "Date": "2015-09-11T07:39:30Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (month < 10) { month_str = \"0\" + (java.lang.String.valueOf(month)); }else { month_str = java.lang.String.valueOf(month); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/6575/buggy-version/src.watsons.wine.EventsTab.java", "BodyUseAPI": ["java.lang.String.valueOf(int)", "java.lang.String.valueOf(int)"], "Fixed commit": "33665501805b81220ec93995834f189d37a1e0ae", "Url": "https://api.github.com/repos/neokongwai/abc", "Date": "2013-02-03T20:32:11Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["watsons.wine.Cell.getDayOfMonth()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (day < 10) { day_str = \"0\" + (java.lang.String.valueOf(day)); }else { day_str = java.lang.String.valueOf(day); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/6575/buggy-version/src.watsons.wine.EventsTab.java", "BodyUseAPI": ["java.lang.String.valueOf(int)", "java.lang.String.valueOf(int)"], "Fixed commit": "33665501805b81220ec93995834f189d37a1e0ae", "Url": "https://api.github.com/repos/neokongwai/abc", "Date": "2013-02-03T20:32:11Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.servicecomb.config.archaius.sources.AbstractConfigLoader.loadData(java.net.URL)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (config == null) { config = new java.util.LinkedHashMap<>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/89/buggy-version/foundations.foundation-config.src.main.java.io.servicecomb.config.archaius.sources.AbstractConfigLoader.java", "BodyUseAPI": [], "Fixed commit": "f51583bcf1f503490e23e291a0e35adfbd5a12a9", "Url": "https://api.github.com/repos/liubao68/java-chassis", "Date": "2017-08-22T02:43:17Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((entityInstance == null) || ((entityInstance.getEntityDef()) == (getEntityDef()))) || ((entityInstance.getEntityDef().getRecursiveParent()) == (getEntityDef()))) { this.entityInstance = entityInstance; return entityInstance; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/7420/buggy-version/zeidon-joe.src.main.java.com.quinsoft.zeidon.standardoe.EntityCursorImpl.java", "BodyUseAPI": [], "Fixed commit": "42b05dfd505d689b3ea4e655f85d3eb53a0ca882", "Url": "https://api.github.com/repos/zeidon/zeidon-joe", "Date": "2015-04-10T00:15:05Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (shouldNotCompareOnIds(o1.getId(), o2.getId())) { if (shouldNotCompareOnConceptNames(o1.getConcept(), o2.getConcept())) { return o1.toString().compareTo(o2.toString()); } return o1.getConcept().getName().getName().compareTo(o2.getConcept().getName().getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/5144/buggy-version/api.src.main.java.org.openmrs.module.emrapi.encounter.EncounterTransactionMapper.java", "BodyUseAPI": ["org.openmrs.Order.getConcept()", "org.openmrs.module.emrapi.encounter.EncounterTransactionMapper.1.shouldNotCompareOnConceptNames(o1.getConcept(),o2.getConcept())", "o1.getConcept().getName().getName()", "org.openmrs.Order.getConcept()", "org.openmrs.Order.getConcept()", "o1.getConcept().getName()", "org.openmrs.Order.toString()", "o2.getConcept().getName().getName()", "org.openmrs.Order.getConcept()", "org.openmrs.Order.toString()", "o1.toString().compareTo(o2.toString())", "o2.getConcept().getName()", "o1.getConcept().getName().getName().compareTo(o2.getConcept().getName().getName())"], "Fixed commit": "1016d10705f6e4db6e9e5ede93285074aec0314b", "Url": "https://api.github.com/repos/openmrs/openmrs-module-emrapi", "Date": "2014-01-30T06:07:52Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(org.skorrloregaming.hardscene.server.HardScene.running)) { java.lang.System.out.println(\"The legacy HardScene server has already been stopped.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/4946/buggy-version/src.org.skorrloregaming.hardscene.server.event.CommandProcessEvent.java", "BodyUseAPI": [], "Fixed commit": "6e45eada87de6fb9f4c4567e269458e46c5c3662", "Url": "https://api.github.com/repos/Speentie8081/HardScene", "Date": "2016-07-07T16:44:33Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((controller) == null) { controller = new com.stratelia.webactiv.beans.admin.OrganizationController(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/3548/buggy-version/web-core.src.main.java.com.silverpeas.accesscontrol.ComponentAccessController.java", "BodyUseAPI": [], "Fixed commit": "16a0349a4ebdeab8c2adae01a1aec1189e9643bd", "Url": "https://api.github.com/repos/CecileBONIN/Silverpeas-Core", "Date": "2011-02-16T16:22:19Z"},
{"Line": "=>884", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(expressionsPostFix.empty())) expressionsPostFix.pop();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/2855/buggy-version/CalcV7.src.Model.java", "BodyUseAPI": ["java.util.Stack<java.lang.String>.pop()"], "Fixed commit": "8c2c13b061f43bb2bba7bda9773e926ccbdbb5ad", "Url": "https://api.github.com/repos/Bastani/PostfixCalc", "Date": "2016-03-30T11:57:02Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (useSoftmax) { action = softmax(s, epsilon); }else { action = epsilonGreedy(s, epsilon); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/1768/buggy-version/src.aaa.assignment2.algorithms.QLearning.java", "BodyUseAPI": [], "Fixed commit": "2db1f1edeb887f090f475b0221e1b6d9fab3c083", "Url": "https://api.github.com/repos/josago/aaa2013", "Date": "2013-10-04T07:14:55Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(Q.containsKey(sa))) { Q.put(sa, valueInitial); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/1768/buggy-version/src.aaa.assignment2.algorithms.ModelFreeAlgorithm.java", "BodyUseAPI": ["java.util.HashMap<aaa.assignment2.StateActionPair, java.lang.Float>.put(aaa.assignment2.StateActionPair,float)"], "Fixed commit": "2db1f1edeb887f090f475b0221e1b6d9fab3c083", "Url": "https://api.github.com/repos/josago/aaa2013", "Date": "2013-10-04T07:14:55Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(offerIds.contains(offer.getId()))) offerIds.add(offer.getId());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/7540/buggy-version/src.ca.mcgill.mcb.pcingola.bigDataScript.mesos.BdsMesosScheduler.java", "BodyUseAPI": ["java.util.Collection<org.apache.mesos.Protos.OfferID>.add(offer.getId())", "org.apache.mesos.Protos.Offer.getId()"], "Fixed commit": "d6a9dcbedd2d71e9b9e4e8fce02e69b87fcfe8fa", "Url": "https://api.github.com/repos/babass83/BigDataScript", "Date": "2016-02-05T21:03:03Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (readonly) { fieldTemplate.setDisplayerName(\"simpletext\"); }else { fieldTemplate.setDisplayerName(\"textarea\"); fieldTemplate.setMandatory(true); fieldTemplate.setReadOnly(readonly); fieldTemplate.addParameter(TextField.PARAM_MAXLENGTH, \"500\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/3540/buggy-version/process-manager.process-manager-ejb.src.main.java.com.silverpeas.processManager.record.QuestionTemplate.java", "BodyUseAPI": ["com.silverpeas.form.record.GenericFieldTemplate.setReadOnly(boolean)"], "Fixed commit": "037b8c7f25524e966ed162a829ac72b4993bcfdb", "Url": "https://api.github.com/repos/Silverpeas/Silverpeas-Components", "Date": "2013-11-04T14:57:42Z"},
{"Line": "=>10", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (html == null) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/8885/buggy-version/app.src.main.java.com.chrisventura.apps.noteline.Utils.StringUtils.java", "BodyUseAPI": [], "Fixed commit": "0e545fc439d245a08d97f0424cecd440eb10955a", "Url": "https://api.github.com/repos/venturachrisdev/Noteline", "Date": "2017-07-13T03:25:13Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((translator) == null) { org.jitsi.impl.neomedia.rtp.RTPManager m = this.manager; if (m instanceof org.jitsi.impl.neomedia.jmfext.media.rtp.RTPSessionMgr) { org.jitsi.impl.neomedia.jmfext.media.rtp.RTPSessionMgr sm = ((org.jitsi.impl.neomedia.jmfext.media.rtp.RTPSessionMgr) (m)); sm.setSSRCFactory(ssrcFactory); } }else { translator.setSSRCFactory(ssrcFactory); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/3660/buggy-version/src.org.jitsi.impl.neomedia.rtp.StreamRTPManager.java", "BodyUseAPI": [], "Fixed commit": "327a863e4a5023f5b2b21c376f6008985be770c3", "Url": "https://api.github.com/repos/jitsi/libjitsi", "Date": "2014-06-18T14:29:40Z"},
{"Line": "=>353", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (item.getTitle().equals(\"Brunch\")) { getMeals(selectedDiningHall, \"Lunch\"); setTitle((\"Brunch at \" + (selectedDiningHall))); }else { getMeals(selectedDiningHall, \"Breakfast\"); setTitle((\"Breakfast at \" + (selectedDiningHall))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/7077/buggy-version/app.src.main.java.com.knosseir.admin.bruinfeed.DiningHallActivity.java", "BodyUseAPI": [], "Fixed commit": "629d81785ef05f9facb2d30bc782d0992c47fcd0", "Url": "https://api.github.com/repos/knosseir/BruinFeed", "Date": "2017-10-13T19:20:28Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((configuration.get(\"hive.metastore.sasl.enabled\")) == null) hiro.storm.demo.HiveBoltGen.LOG.info(\"Property 'hive.metastore.sasl.enabled' not found in hive-site.xml.\"); else if (configuration.get(\"hive.metastore.sasl.enabled\").equalsIgnoreCase(\"true\")) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/762/buggy-version/src.main.java.hiro.storm.demo.HiveBoltGen.java", "BodyUseAPI": ["org.apache.hadoop.conf.Configuration.get(java.lang.String)", "configuration.get(\"hive.metastore.sasl.enabled\").equalsIgnoreCase(java.lang.String)"], "Fixed commit": "31b1b2857c9dfd080d3bb0fa7ccbb223f452530d", "Url": "https://api.github.com/repos/kuwabarasan/storm-topology_kafka-to-hive-sample", "Date": "2017-01-29T08:07:35Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.opencds.cqf.cql.file.fhir.MFHIRDataProvider.resolvePath(java.lang.Object,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (temp instanceof java.lang.String) { date = org.opencds.cqf.cql.runtime.DateTime.fromJavaDate(new java.util.Date(((java.lang.String) (temp)))); }else if (temp instanceof java.util.Date) { date = org.opencds.cqf.cql.runtime.DateTime.fromJavaDate(((java.util.Date) (temp))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/3668/buggy-version/cql-engine-fhir.src.main.java.org.opencds.cqf.cql.file.fhir.MFHIRDataProvider.java", "BodyUseAPI": [], "Fixed commit": "d742cede8dacebcb5e184366c69eb924ed2f6b41", "Url": "https://api.github.com/repos/DBCG/cql_engine", "Date": "2016-10-26T06:04:45Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((depth) > 0) return new compiler_ww424.IRMem(this.getAddress()); else return this.getAddress();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/9089/buggy-version/Compiler_ww424.src.compiler_ww424.ArrExpr.java", "BodyUseAPI": [], "Fixed commit": "c2d116282fa7b386c9ba5e5eb9c1f4e152d7a2be", "Url": "https://api.github.com/repos/jpw234/Compilers", "Date": "2016-03-20T23:43:24Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (readerHints == null) { readerHints = new java.util.HashSet(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/2934/buggy-version/src.main.java.edu.illinois.library.cantaloupe.processor.AbstractJava2dProcessor.java", "BodyUseAPI": [], "Fixed commit": "8d7359fab6fcc7cc8b9e070b7c6d8c3cc9a511d5", "Url": "https://api.github.com/repos/medusa-project/cantaloupe", "Date": "2016-12-16T19:59:49Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((waypoints.size()) == 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/1790/buggy-version/src.main.java.dk.frv.enav.ins.ais.AisIntendedRoute.java", "BodyUseAPI": [], "Fixed commit": "dd271238dd5786e47db3a1e7bae473d2310c0c3b", "Url": "https://api.github.com/repos/dma-graveyard/ee-INS", "Date": "2011-10-07T09:18:22Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (player.hasPermission(\"stables.teleport\")) { try { data.createNewFile(); } catch (java.lang.Exception ex) { org.tritania.stables.storage.Log.severe((\" \" + (ex.getMessage()))); } return false; }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/1340/buggy-version/src.main.java.org.tritania.stables.storage.Storage.java", "BodyUseAPI": [], "Fixed commit": "44c7d15ddd514314adf363870ab1ae8df576bf08", "Url": "https://api.github.com/repos/tritania/Stables", "Date": "2014-06-23T04:21:50Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((s1.length()) == 1) { return s1.equals(s2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/5261/buggy-version/src.com.leetcode.www.ScrambleString.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "6495b4a270d2171fc582f72512473d189108c892", "Url": "https://api.github.com/repos/yao23/Java_Playground", "Date": "2017-08-12T18:43:36Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((preferences.getInt(\"queuLenght\", (-1))) == (-1)) { }else if (!(org.FrancoisDescamps.CatPlayer.MainActivity.musicService.isMediaPlayerInitialized())) { org.FrancoisDescamps.CatPlayer.MainActivity.musicService.setQueuAndPlayMusic(getPropertiesFromSharedPreferences(), ((preferences.getInt(\"positionOfInitialMusic\", 0)) + (preferences.getInt(\"cpt\", 0)))); setIconPlayerPlaying(); org.FrancoisDescamps.CatPlayer.MainActivity.playPause.setImageResource(R.drawable.ic_pause); org.FrancoisDescamps.CatPlayer.MainActivity.seekBarDialog.setMax(org.FrancoisDescamps.CatPlayer.MainActivity.musicService.getDurationOfMusic()); org.FrancoisDescamps.CatPlayer.MainActivity.duration.setText(org.FrancoisDescamps.CatPlayer.MainActivity.getTimeFromInt(org.FrancoisDescamps.CatPlayer.MainActivity.musicService.getDurationOfMusic())); }else if (org.FrancoisDescamps.CatPlayer.MainActivity.musicService.isPlaying()) { org.FrancoisDescamps.CatPlayer.MainActivity.musicService.pauseMusic(); setIconPlayerpaused(); org.FrancoisDescamps.CatPlayer.MainActivity.playPause.setImageResource(R.drawable.ic_play); }else { org.FrancoisDescamps.CatPlayer.MainActivity.musicService.resumeMusic(); setIconPlayerPlaying(); org.FrancoisDescamps.CatPlayer.MainActivity.playPause.setImageResource(R.drawable.ic_pause); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/6207/buggy-version/app.src.main.java.org.FrancoisDescamps.CatPlayer.MainActivity.java", "BodyUseAPI": ["android.content.SharedPreferences.getInt(java.lang.String,int)", "android.content.SharedPreferences.getInt(java.lang.String,int)", "org.FrancoisDescamps.CatPlayer.MusicService.setQueuAndPlayMusic(java.lang.String[][],((preferences.getInt(\"positionOfInitialMusic\", 0)) + (preferences.getInt(\"cpt\", 0))))"], "Fixed commit": "e5c6b459f8b0adf9fe0187ec1a6c7887c6729b7f", "Url": "https://api.github.com/repos/FrancoisDescamps/CatPlayer", "Date": "2016-12-08T21:38:06Z"},
{"Line": "=>345", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (patternDesc.isEmpty()) patternDesc = pattern;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/7096/buggy-version/src.main.java.org.daveware.passwordmaker.RDFDatabaseReader.java", "BodyUseAPI": [], "Fixed commit": "9cf17db97d7b6cfaadd1ddef6924a509faa94f6a", "Url": "https://api.github.com/repos/passwordmaker/java-passwordmaker-lib", "Date": "2014-09-18T02:33:26Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (requestingExtra) return r.query((x - ((x2 - x) / 2)), (y + ((y - y2) / 2)), (x2 + ((x2 - x) / 2)), (y2 - ((y - y2) / 2)), zoomLevel); else return r.query(x, y, x2, y2, zoomLevel);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/633/buggy-version/src.mapofdenmark.MapOfDenmark.java", "BodyUseAPI": [], "Fixed commit": "4ef971da2bc609f27066aecb1e8b54e374447e54", "Url": "https://api.github.com/repos/mapmen/mapofdenmark", "Date": "2012-05-07T13:33:24Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((words.size()) == 0) throw new com.google.bitcoin.crypto.MnemonicException.MnemonicLengthException(\"Word list is empty.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/9033/buggy-version/core.src.main.java.com.google.bitcoin.crypto.MnemonicCode.java", "BodyUseAPI": [], "Fixed commit": "0ccb608c7ea2834eb084ca64aa9f78bc00997e67", "Url": "https://api.github.com/repos/oscarguindzberg/bitcoinj", "Date": "2014-09-29T14:14:03Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((entropy.length) == 0) throw new com.google.bitcoin.crypto.MnemonicException.MnemonicLengthException(\"Entropy is empty.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/9033/buggy-version/core.src.main.java.com.google.bitcoin.crypto.MnemonicCode.java", "BodyUseAPI": [], "Fixed commit": "0ccb608c7ea2834eb084ca64aa9f78bc00997e67", "Url": "https://api.github.com/repos/oscarguindzberg/bitcoinj", "Date": "2014-09-29T14:14:03Z"},
{"Line": "=>315", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (obj.has(\"production_endpoints\")) { production_endpoint = obj.getJSONObject(\"production_endpoints\").getString(\"url\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/5896/buggy-version/components.apimgt.org.wso2.carbon.apimgt.impl.src.main.java.org.wso2.carbon.apimgt.impl.APIGatewayManager.java", "BodyUseAPI": ["obj.getJSONObject(\"production_endpoints\").getString(java.lang.String)", "org.json.JSONObject.getJSONObject(java.lang.String)"], "Fixed commit": "477fcc27a4f933e6abd25446f590b4954b31931c", "Url": "https://api.github.com/repos/praminda/carbon-apimgt", "Date": "2016-11-11T05:13:23Z"},
{"Line": "=>318", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (obj.has(\"sandbox_endpoints\")) { sandbox_endpoint = obj.getJSONObject(\"sandbox_endpoints\").getString(\"url\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/5896/buggy-version/components.apimgt.org.wso2.carbon.apimgt.impl.src.main.java.org.wso2.carbon.apimgt.impl.APIGatewayManager.java", "BodyUseAPI": ["org.json.JSONObject.getJSONObject(java.lang.String)", "obj.getJSONObject(\"sandbox_endpoints\").getString(java.lang.String)"], "Fixed commit": "477fcc27a4f933e6abd25446f590b4954b31931c", "Url": "https://api.github.com/repos/praminda/carbon-apimgt", "Date": "2016-11-11T05:13:23Z"},
{"Line": "=>371", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eu.siacs.conversations.entities.Message.getConversation()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(this.mXmppConnectionService.renewSymmetricKey(conversation))) { android.util.Log.d(Config.LOGTAG, ((account.getJid().toBareJid()) + \": could not set symmetric key\")); cancel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/5069/buggy-version/src.main.java.eu.siacs.conversations.xmpp.jingle.JingleConnection.java", "BodyUseAPI": [], "Fixed commit": "9b70c7e68ccf3b1efdaff782f14b0549415f1339", "Url": "https://api.github.com/repos/siacs/Conversations", "Date": "2015-07-19T12:51:04Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.netbeans.spi.lexer.LexerInput.read()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((state) == (TSLexerState.IN_VALUE)) && (ch == '#')) { nextUntilUnescaped('\\n'); token = TSTokenId.TS_COMMENT; state = TSLexerState.DEFAULT; }else if (((state) != (TSLexerState.IN_VALUE)) && ((state) == (TSLexerState.IN_COMMENT))) { token = readMultilineComment(ch); }else if (isWhiteSpace(ch)) { nextWhileWhiteSpace(); token = TSTokenId.WHITESPACE; }else if (((state) != (TSLexerState.IN_VALUE)) && ((ch == '\"') || (ch == '\\''))) { nextUntilUnescaped(ch); token = TSTokenId.TS_STRING; }else if ((((ch == '=') && (((char) (input.read())) != '<')) && (((char) (input.read())) != '\\n')) && ((state) != (TSLexerState.IN_VALUE))) { state = TSLexerState.IN_VALUE; token = TSTokenId.TS_OPERATOR; input.backup(1); if (ch == '=') { input.backup(1); } }else if (((state) != (TSLexerState.IN_VALUE)) && (ch == '[')) { nextUntilUnescaped(']'); token = TSTokenId.TS_CONDITION; }else if (((state) != (TSLexerState.IN_VALUE)) && (ch == ')')) { char next = ((char) (input.read())); if (next == '\\n') { token = TSTokenId.TS_PARANTHESE; state = TSLexerState.DEFAULT; }else { token = TSTokenId.TS_VALUE; } input.backup(1); }else if (((state) != (TSLexerState.IN_VALUE)) && (ch == '(')) { token = TSTokenId.TS_PARANTHESE; state = TSLexerState.IN_PARANTHESE; }else if (((state) != (TSLexerState.IN_VALUE)) && (java.util.regex.Pattern.matches(\"[\\\\[\\\\]\\\\(\\\\),;\\\\:\\\\.\\\\<\\\\>\\\\=]\", new java.lang.Character(ch).toString()))) { token = TSTokenId.TS_OPERATOR; }else if (((state) != (TSLexerState.IN_VALUE)) && ((ch == '{') || (ch == '}'))) { token = TSTokenId.TS_CURLY; }else if ((((state) != (TSLexerState.IN_VALUE)) && (ch == '0')) && (((input.read()) == 'x') || ((input.read()) == 'X'))) { token = readHexNumber(); }else if (((state) != (TSLexerState.IN_VALUE)) && (isDigit(new java.lang.Character(ch).toString()))) { token = readNumber(); }else if (((state) != (TSLexerState.IN_VALUE)) && (ch == '/')) { char next = ((char) (input.read())); if (next == '*') { token = readMultilineComment(ch); }else if (next == '/') { nextUntilUnescaped('\\n'); token = TSTokenId.TS_COMMENT; }else if ((state) == (TSLexerState.IN_REGEXP)) { token = readRegexp(); }else { nextWhileOperatorChar(); token = TSTokenId.TS_OPERATOR; } }else if (((state) != (TSLexerState.IN_VALUE)) && (ch == '#')) { nextUntilUnescaped('\\n'); token = TSTokenId.TS_COMMENT; }else if (((state) != (TSLexerState.IN_VALUE)) && (isOperatorChar(new java.lang.Character(ch).toString()))) { nextWhileOperatorChar(); token = TSTokenId.TS_OPERATOR; }else { java.lang.String word = nextWhileWordChar(ch); token = TSTokenId.TS_PROPERTY; java.lang.String propertyType = \"\"; if (isWord(word, false)) { propertyType = net.dfranek.typoscript.lexer.TSLexerUtils.getWordFromXML(word); } if (!(propertyType.isEmpty())) { if (propertyType.equals(\"object\")) { token = TSTokenId.TS_OBJECT; }else if (propertyType.equals(\"keyword\")) { token = TSTokenId.TS_KEYWORD; }else if (propertyType.equals(\"reserved\")) { token = TSTokenId.TS_RESERVED; }else if (propertyType.equals(\"function\")) { token = TSTokenId.TS_FUNCTION; }else if (propertyType.equals(\"condition\")) { token = TSTokenId.TS_CONDITION; }else if (propertyType.equals(\"property\")) { token = TSTokenId.TS_PROPERTY; } }else { if (net.dfranek.typoscript.lexer.TSScanner.TSScannerKeyWords.keywords.contains(word)) { token = TSTokenId.TS_KEYWORD; }else if (net.dfranek.typoscript.lexer.TSScanner.TSScannerKeyWords.keywords2.contains(word)) { token = TSTokenId.TS_KEYWORD2; }else if (net.dfranek.typoscript.lexer.TSScanner.TSScannerKeyWords.keywords3.contains(word)) { token = TSTokenId.TS_KEYWORD3; }else if (net.dfranek.typoscript.lexer.TSScanner.TSScannerKeyWords.reservedWord.contains(word)) { token = TSTokenId.TS_RESERVED; }else if (isDigit(word)) { token = TSTokenId.TS_NUMBER; }else if ((word.startsWith(\"{$\")) && (word.endsWith(\"}\"))) { token = TSTokenId.TS_CONSTANT; }else if ((word.startsWith(\"tt_\")) || (word.startsWith(\"tx_\"))) { token = TSTokenId.TS_EXTENSION; }else if (java.util.regex.Pattern.matches(\"[\\\\[\\\\]\\\\(\\\\),;\\\\:\\\\.\\\\<\\\\>\\\\=\\\\+\\\\-]\", word)) { token = TSTokenId.TS_OPERATOR; }else if ((state) == (TSLexerState.IN_VALUE)) { token = TSTokenId.TS_VALUE; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/5659/buggy-version/src.net.dfranek.typoscript.lexer.TSScanner.java", "BodyUseAPI": ["net.dfranek.typoscript.lexer.TSScanner.nextUntilUnescaped(char)", "net.dfranek.typoscript.lexer.TSScanner.isDigit(java.lang.String)", "java.util.regex.Pattern.matches(java.lang.String,java.lang.String)", "net.dfranek.typoscript.lexer.TSScanner.isWhiteSpace(char)", "java.lang.Character.toString()", "java.lang.Character.toString()", "net.dfranek.typoscript.lexer.TSScanner.readMultilineComment(char)", "net.dfranek.typoscript.lexer.TSScanner.isOperatorChar(java.lang.String)", "java.lang.Character.toString()", "net.dfranek.typoscript.lexer.TSScanner.readMultilineComment(char)", "net.dfranek.typoscript.lexer.TSScanner.nextWhileWordChar(char)"], "Fixed commit": "effc4cde22284a76908362b5c234a4e286cdd6a4", "Url": "https://api.github.com/repos/dfranek/NetBeans-TypoScript", "Date": "2012-03-10T11:19:56Z"},
{"Line": "=>451", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cz.zcu.fav.sportevents.controller.UserController.getUser()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (user == null) { model.addObject(\"error\", \"404\"); model.setViewName(\"error/error_page\"); return model; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/4995/buggy-version/src.main.java.cz.zcu.fav.sportevents.controller.RaceController.java", "BodyUseAPI": [], "Fixed commit": "93c4d5255779052ae15333920d5090d42bfb92b6", "Url": "https://api.github.com/repos/hard456/organizingraces", "Date": "2017-03-15T01:55:40Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wikibrain.core.model.RawImage.getImageLocation()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (location == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/4452/buggy-version/wikibrain-webapi.src.main.java.org.wikibrain.webapi.CompariFactServer.java", "BodyUseAPI": [], "Fixed commit": "43c47691cf58dee3c54fab2cc19ff4a239f79c11", "Url": "https://api.github.com/repos/Yuropa/wikibrain", "Date": "2016-04-18T22:06:14Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.sourceforge.fenixedu.domain.candidacy.util.GenericApplicationUploadBean.readStreamContents()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((content != null) && ((content.length) > 0)) { if (recomentation.hasLetterOfRecomentation()) { recomentation.getLetterOfRecomentation().delete(); } return new net.sourceforge.fenixedu.domain.candidacy.GenericApplicationLetterOfRecomentation(recomentation, displayName, fileName, content); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/430/buggy-version/src.main.java.net.sourceforge.fenixedu.domain.candidacy.util.GenericApplicationUploadBean.java", "BodyUseAPI": [], "Fixed commit": "d26b78eece34abf97b5a71f3253597add0740d91", "Url": "https://api.github.com/repos/jcarvalho/fenix", "Date": "2013-08-21T12:38:43Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.sourceforge.fenixedu.domain.candidacy.util.GenericApplicationUploadBean.uploadTo(net.sourceforge.fenixedu.domain.candidacy.GenericApplicationRecomentation)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (file != null) { pt.ist.fenixWebFramework.renderers.utils.RenderUtils.invalidateViewState(); request.setAttribute(\"recommendationSaved\", java.lang.Boolean.TRUE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/430/buggy-version/src.main.java.net.sourceforge.fenixedu.presentationTier.Action.publico.candidacies.GenericCandidaciesDA.java", "BodyUseAPI": [], "Fixed commit": "d26b78eece34abf97b5a71f3253597add0740d91", "Url": "https://api.github.com/repos/jcarvalho/fenix", "Date": "2013-08-21T12:38:43Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getGoldPerTurn()) > 0) { this.addGold(getGoldPerTurn()); }else if ((getGoldPerTurn()) < 0) { this.removeGold(getGoldPerTurn()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/5966/buggy-version/core.src.com.fantasticfive.game.Player.java", "BodyUseAPI": [], "Fixed commit": "4316a391e633b7ba0cce163bbf4572b034867e39", "Url": "https://api.github.com/repos/JorinTielen/ProjectHex", "Date": "2017-10-24T07:03:11Z"},
{"Line": "=>441", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(newNonterminals.containsKey(nonterminal.getName()))) { newNonterminals.put(nonterminal.getName(), 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/4416/buggy-version/src.org.jgll.grammar.OperatorPrecedence.java", "BodyUseAPI": ["org.jgll.grammar.symbol.Nonterminal.getName()", "java.util.Map<java.lang.String, java.lang.Integer>.put(nonterminal.getName(),int)"], "Fixed commit": "2d86a0cdcb83b4906e2de70bee6e5f2f5d043e10", "Url": "https://api.github.com/repos/cwi-swat/iguana", "Date": "2014-03-14T17:17:21Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (t == 'c') { return ar.util.MemMapEncoder.TYPE.CHAR; }else if (t == 'x') { return ar.util.MemMapEncoder.TYPE.X; }else { throw new java.lang.RuntimeException(java.lang.String.format(\"Unknown type indicator '%s'\", t)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/8399/buggy-version/java.core.ar.util.MemMapEncoder.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,char)"], "Fixed commit": "87c47fe900793353e7e0bd18a52d98a798aad6bf", "Url": "https://api.github.com/repos/JosephCottam/AbstractRendering", "Date": "2013-10-31T19:47:24Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((occupiedSlots.get(i).getEnd().compareTo(occupiedSlots.get((i + 1)).getEnd())) <= 0) { occupiedSlots.get(i).setEnd(occupiedSlots.get((i + 1)).getEnd()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/111/buggy-version/src.udo.storage.TimeSlots.java", "BodyUseAPI": ["occupiedSlots.get(i).setEnd(occupiedSlots.get((i + 1)).getEnd())", "java.util.ArrayList<udo.storage.Task>.get(int)", "java.util.ArrayList<udo.storage.Task>.get(int)", "occupiedSlots.get((i + 1)).getEnd()"], "Fixed commit": "a145c789389eadd97808fdc08d0226ce1be9573f", "Url": "https://api.github.com/repos/cs2103jan2015-w13-3j/main", "Date": "2015-03-25T05:38:40Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((javax.swing.table.DefaultTableModel) (vistaOrdenesPago.getTablaDeudasAPagar().getModel())).getRowCount()) == 0) { validar.mostrarMensajeError(\"Debe seleccionar una deuda a pagar.\"); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/4485/buggy-version/ViajesYTurismo.src.controlador.ControladorRegistroOrdenPago.java", "BodyUseAPI": [], "Fixed commit": "628314ed62b268a5efb923cd56924d7a2c1c882a", "Url": "https://api.github.com/repos/TimeTravelersTeam/ViajesYTurismo", "Date": "2016-11-15T19:44:17Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.vistaOrdenesPago.getCmbListaProveedores().getSelectedItem()) == null) { validar.mostrarMensajeError(\"Debe seleccionar un proveedor.\"); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/4485/buggy-version/ViajesYTurismo.src.controlador.ControladorRegistroOrdenPago.java", "BodyUseAPI": [], "Fixed commit": "628314ed62b268a5efb923cd56924d7a2c1c882a", "Url": "https://api.github.com/repos/TimeTravelersTeam/ViajesYTurismo", "Date": "2016-11-15T19:44:17Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(mSurvey.getResponseByQuestion(mQuestion).getText())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (responseIndex < (mQuestion.options().size())) { nextQuestion = mQuestion.options().get(responseIndex).getNextQuestion(); }else { nextQuestion = mInstrument.questions().get((questionIndex + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/2120/buggy-version/src.org.adaptlab.chpir.android.survey.SurveyFragment.java", "BodyUseAPI": ["mQuestion.options().get(responseIndex).getNextQuestion()", "org.adaptlab.chpir.android.survey.Models.Question.options()", "mQuestion.options().get(int)"], "Fixed commit": "0bfec0206c07fc13644d550c639e26a7bf9c8cea", "Url": "https://api.github.com/repos/mnipper/AndroidSurvey", "Date": "2013-12-04T21:36:26Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (line == null) { if ((currentAnnotation) != null) { variantAnnotationToReturn = currentAnnotation; currentAnnotation = null; }else { return null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/6922/buggy-version/biodata-formats.src.main.java.org.opencb.biodata.formats.annotation.io.VepFormatReader.java", "BodyUseAPI": [], "Fixed commit": "21bf8ab02f73189305c34aa371d7613c90274272", "Url": "https://api.github.com/repos/j-coll/biodata", "Date": "2015-04-15T19:50:08Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tileMap[j][i]) == 3) { tileMap[j][i] = 8; return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/7090/buggy-version/src.main.Background.java", "BodyUseAPI": [], "Fixed commit": "1ce89388b994083d5668cb83450084b7fe09ab3c", "Url": "https://api.github.com/repos/vojinpu/racunarskagrafika", "Date": "2017-11-09T23:42:08Z"},
{"Line": "=>418", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cleaners.get(key).isItAlive) cleaners.get(key).tick();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/3757/buggy-version/Phobos.src.main.Arena.java", "BodyUseAPI": ["cleaners.get(key).tick()", "java.util.HashMap<java.lang.String, main.CleanerMaster>.get(java.lang.String)"], "Fixed commit": "20e679d685e93d3f6a91ac46f42968d31eb5072e", "Url": "https://api.github.com/repos/pety0711/Phoebe-CodeIt2Night", "Date": "2015-04-21T23:31:21Z"},
{"Line": "=>412", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (gamers.get(key).isItAlive) gamers.get(key).tick();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/3757/buggy-version/Phobos.src.main.Arena.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, main.Robi>.get(java.lang.String)", "gamers.get(key).tick()"], "Fixed commit": "20e679d685e93d3f6a91ac46f42968d31eb5072e", "Url": "https://api.github.com/repos/pety0711/Phoebe-CodeIt2Night", "Date": "2015-04-21T23:31:21Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (inTransaction()) mDb.beginTransaction();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/7166/buggy-version/app.src.main.java.me.arbogast.trainponctuality.DBAccess.DAOBase.java", "BodyUseAPI": [], "Fixed commit": "8120687b3684b33ae7a336a4ac8f2c9c7e899c88", "Url": "https://api.github.com/repos/Baleine82/TrainPonctuality", "Date": "2017-02-11T14:14:57Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (e instanceof com.intellij.psi.impl.FakePsiElement) { return ((com.intellij.psi.impl.FakePsiElement) (e)).getPresentableText(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/5706/buggy-version/plugins.maven.src.main.java.org.jetbrains.idea.maven.dom.MavenModelDocumentationProvider.java", "BodyUseAPI": [], "Fixed commit": "6102a4d9a8fe240ca0fb8cc96507b129455740e8", "Url": "https://api.github.com/repos/JetBrains/intellij-community", "Date": "2012-11-15T09:30:56Z"},
{"Line": "=>317", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.io.File, info.fetter.logstashforwarder.FileState>.get(java.io.File)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (state.isDeleted()) { if (!(file.exists())) { if (markedList == null) { markedList = new java.util.ArrayList<java.io.File>(); } markedList.add(file); } try { state.getRandomAccessFile().close(); } catch (java.lang.Exception e) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/8746/buggy-version/src.main.java.info.fetter.logstashforwarder.FileWatcher.java", "BodyUseAPI": ["state.getRandomAccessFile().close()", "info.fetter.logstashforwarder.FileState.getRandomAccessFile()"], "Fixed commit": "56b932ee2ec573f04b6c21bd9c9aaa71b5458b38", "Url": "https://api.github.com/repos/didfet/logstash-forwarder-java", "Date": "2015-06-04T12:45:41Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["value.getKey().getCircuitByIndex(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (null != circuit) { com.fancypants.rest.domain.PowerConsumptionMeasurement measurement = new com.fancypants.rest.domain.PowerConsumptionMeasurement(circuit.getName(), entry.getValue()); measurements.add(measurement); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/437/buggy-version/rest.src.main.java.com.fancypants.rest.mapping.PowerConsumptionRecordMapper.java", "BodyUseAPI": ["com.fancypants.data.entity.CircuitEntity.getName()"], "Fixed commit": "b0cd5a21d266224a48d96028338015bf406bb6bf", "Url": "https://api.github.com/repos/treidel/device-rest-service", "Date": "2015-05-16T06:32:52Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(articles.contains(currentSection))) { articles.add(currentSection); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/7756/buggy-version/app.src.main.java.com.github.mzule.androidweekly.api.parser.FresherArticlesParser.java", "BodyUseAPI": ["java.util.List<java.lang.Object>.add(java.lang.String)"], "Fixed commit": "1beaeceae41fd579401deda4d2f8ef6cf6660aa8", "Url": "https://api.github.com/repos/mzule/AndroidWeekly", "Date": "2016-10-11T14:27:14Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.getStartDateTime()) != null) { int index = calendrier.StorageManager.returnIndex(event.getStartDateTime().getTime().getYear()); calendrier.StorageManager.year.get(index).getMonth(event.getStartDateTime().getTime().getMonth()).getDate(event.getStartDateTime().getTime().getDate()).deleteTask(event); }else { calendrier.StorageManager.floatingTasks.remove(event); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/8851/buggy-version/src.calendrier.StorageManager.java", "BodyUseAPI": ["java.util.ArrayList<utils.Event>.remove(utils.Event)", "event.getStartDateTime().getTime().getDate()", "calendrier.StorageManager.year.get(index).getMonth(event.getStartDateTime().getTime().getMonth())", "calendrier.StorageManager.returnIndex(event.getStartDateTime().getTime().getYear())", "event.getStartDateTime().getTime().getYear()", "calendrier.StorageManager.year.get(index).getMonth(event.getStartDateTime().getTime().getMonth()).getDate(event.getStartDateTime().getTime().getDate()).deleteTask(utils.Event)", "event.getStartDateTime().getTime()", "utils.Event.getStartDateTime()", "utils.Event.getStartDateTime()", "event.getStartDateTime().getTime()", "calendrier.StorageManager.year.get(index).getMonth(event.getStartDateTime().getTime().getMonth()).getDate(event.getStartDateTime().getTime().getDate())", "utils.Event.getStartDateTime()", "event.getStartDateTime().getTime().getMonth()", "event.getStartDateTime().getTime()"], "Fixed commit": "da57b2c9e19699c70abf68acd51ffe4c9109ae56", "Url": "https://api.github.com/repos/cs2103aug2015-F11-4j/main", "Date": "2015-10-06T11:07:15Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((m * m) == (number)) divisors.add(m);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/7031/buggy-version/src.util.Divisors.java", "BodyUseAPI": ["java.util.List<java.lang.Long>.add(long)"], "Fixed commit": "71f53f14c7218ffd5395fab552df92e674e27c32", "Url": "https://api.github.com/repos/ataylor89/projecteuler", "Date": "2015-03-26T17:40:32Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["player.getStash().getItemSlot(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (position == (-1)) { player.getClient().sendPacket(Type.SAY, \"No free slots available on this Tab.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/3866/buggy-version/jreunion.src.main.java.org.reunionemu.jreunion.game.npc.Warehouse.java", "BodyUseAPI": [], "Fixed commit": "7e9bdf785ded0dbc86716e0fa8a93309ecf361fd", "Url": "https://api.github.com/repos/Phantomal/reunion", "Date": "2012-10-22T20:17:49Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isViewAttached()) { view.render(homeViewState); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/4510/buggy-version/app.src.main.java.com.globant.practice.presentation.presenter.HomePresenter.java", "BodyUseAPI": [], "Fixed commit": "9b591d022488f518e02f048317568f06a3cbd986", "Url": "https://api.github.com/repos/jvc931/Practice", "Date": "2017-04-25T19:59:26Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (targets != null) { targets.setUseSpecVersion(\"3.0\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/6953/buggy-version/Product.Production.Gateway.DocumentQuery_30.src.main.java.gov.hhs.fha.nhinc.docquery._30.entity.EntityDocQueryImpl.java", "BodyUseAPI": ["gov.hhs.fha.nhinc.common.nhinccommon.NhinTargetCommunitiesType.setUseSpecVersion(java.lang.String)"], "Fixed commit": "ff7d59ccfbe47ea635996e3df867bae1628bcef1", "Url": "https://api.github.com/repos/CONNECT-Solution/CONNECT", "Date": "2013-05-31T20:36:45Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (targets != null) { targets.setUseSpecVersion(\"2.0\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/6953/buggy-version/Product.Production.Gateway.DocumentQuery_20.src.main.java.gov.hhs.fha.nhinc.docquery._20.entity.EntityDocQueryImpl.java", "BodyUseAPI": ["gov.hhs.fha.nhinc.common.nhinccommon.NhinTargetCommunitiesType.setUseSpecVersion(java.lang.String)"], "Fixed commit": "ff7d59ccfbe47ea635996e3df867bae1628bcef1", "Url": "https://api.github.com/repos/CONNECT-Solution/CONNECT", "Date": "2013-05-31T20:36:45Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((usagePoint.getServiceCategory()) == null) { usagePoint.setServiceCategory(existingUsagePoint.getServiceCategory()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/7812/buggy-version/src.main.java.org.energyos.espi.datacustodian.repositories.jpa.UsagePointRepositoryImpl.java", "BodyUseAPI": ["org.energyos.espi.datacustodian.domain.UsagePoint.setServiceCategory(existingUsagePoint.getServiceCategory())"], "Fixed commit": "8fe12da37a4835deae86158183a3436eddfc90da", "Url": "https://api.github.com/repos/energyos/OpenESPI-DataCustodian-java", "Date": "2013-11-06T20:05:15Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (strObjType == \"errorMessage\") { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/2049/buggy-version/rdap-webapp.src.main.java.cn.cnnic.rdap.service.impl.PolicyControlServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "d2043ae2893fe0f8c6e95386f1bd9d37dada3f50", "Url": "https://api.github.com/repos/warmdawn/rdap", "Date": "2014-07-02T01:55:32Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (currentPlayer != null) { do { if (counter > 0) { playersInfo.append(\" - \"); } playersInfo.append(currentPlayer.getName()); counter++; currentPlayer = game.getPlayer(playerList.getNext()); } while (!(currentPlayer.getId().equals(game.getStartingPlayerId())) ); }else { playersInfo.append(\"[got no players]\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/4182/buggy-version/Mage.src.mage.game.match.MatchImpl.java", "BodyUseAPI": ["mage.players.Player.getName()", "java.lang.StringBuilder.append(currentPlayer.getName())"], "Fixed commit": "995655aa61d3d12e35354e04c4fe3f009c183968", "Url": "https://api.github.com/repos/jlin14/mage", "Date": "2014-10-08T23:30:14Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.taskContentSwitcher.getCurrentView().getId()) != (this.taskContent.getId())) { this.taskContentSwitcher.showNext(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/2555/buggy-version/src.de.azapps.mirakel.custom_views.TaskDetailContent.java", "BodyUseAPI": ["android.widget.ViewSwitcher.showNext()"], "Fixed commit": "bcb17978b42beee77f3bcea9443ac75208f7f740", "Url": "https://api.github.com/repos/azapps/mirakel-android", "Date": "2014-01-15T09:02:52Z"},
{"Line": "=>477", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (firstId != lastId) com.graphhopper.routing.util.AbstractFlagEncoder.logger.warn(((((((\"Unrealistic long duration ignored in way with way ID=\" + (way.getId())) + \" : Duration tag value=\") + (way.getTag(\"duration\"))) + \" (=\") + (java.lang.Math.round((duration / 60.0)))) + \" minutes)\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/7148/buggy-version/core.src.main.java.com.graphhopper.routing.util.AbstractFlagEncoder.java", "BodyUseAPI": [], "Fixed commit": "f23178e4c84d28c59a8387502bb556bb4f8a7c0f", "Url": "https://api.github.com/repos/graphhopper/graphhopper", "Date": "2016-12-15T08:55:07Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["transfer.TransferObjekatOdgovor.getRezultat()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (ln == null) { listaNarudzbina = new java.util.ArrayList(); }else { listaNarudzbina = ln; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/1537/buggy-version/app.src.main.java.restoran.klijent.ListaNarudzbinaActivity.java", "BodyUseAPI": [], "Fixed commit": "08ceaffe9d87baf0db48aeb7d7207e26d8e95b79", "Url": "https://api.github.com/repos/bataemperor/RestoranKlijent", "Date": "2015-07-02T09:12:47Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (net.openhft.chronicle.engine.tree.ChronicleQueueView.isQueueReplicationAvailable()) requestContext.cluster(clusterName());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/989/buggy-version/src.main.java.net.openhft.chronicle.engine.server.internal.EngineNetworkStatsListener.java", "BodyUseAPI": [], "Fixed commit": "c44d52e23c7df62d7419ca6a80c9b2e78e3794b5", "Url": "https://api.github.com/repos/OpenHFT/Chronicle-Engine", "Date": "2016-11-04T09:42:41Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (checkedId != otherId) { otherText.getText().clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/7075/buggy-version/src.org.adaptlab.chpir.android.survey.QuestionFragments.SelectOneWriteOtherQuestionFragment.java", "BodyUseAPI": [], "Fixed commit": "81c0bcc5153a015e5d6369845de2e8252bf296a5", "Url": "https://api.github.com/repos/mnipper/AndroidSurvey", "Date": "2014-02-06T18:47:30Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((queue) == null) { queue = new java.util.LinkedList<com.pachira.spider.core.Request>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/5773/buggy-version/src.com.pachira.spider.core.Spider.java", "BodyUseAPI": [], "Fixed commit": "23bf1aef987404519be64fe3c65641a987624bc6", "Url": "https://api.github.com/repos/luceneSDK/Tokenizer", "Date": "2014-11-28T02:16:16Z"},
{"Line": "=>1768", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["yml.getRoot().get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (obj instanceof java.lang.Long) seed = ((java.lang.Long) (obj)); else if (obj instanceof java.lang.Integer) seed = ((java.lang.Integer) (obj)).longValue();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/8149/buggy-version/src.com.bekvon.bukkit.residence.Residence.java", "BodyUseAPI": [], "Fixed commit": "b9b5e46e28a9cf499b347435c5b9667a6d323348", "Url": "https://api.github.com/repos/AkintudnesServer/Residence", "Date": "2011-09-24T22:24:29Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.pacmac.devinfo.SIMInfo.getSystemService(Context.TELEPHONY_SERVICE)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((telephonyManager.getSimOperator().length()) > 2) { mccSpn.setText((\"SPN-MCC: \" + (telephonyManager.getSimOperator().substring(0, 3)))); mncSpn.setText((\"SPN-MNC: \" + (telephonyManager.getSimOperator().substring(3)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/7429/buggy-version/app.src.main.java.com.pacmac.devinfo.SIMInfo.java", "BodyUseAPI": ["android.telephony.TelephonyManager.getSimOperator()", "android.widget.TextView.setText((\"SPN-MNC: \" + (telephonyManager.getSimOperator().substring(3))))", "android.widget.TextView.setText((\"SPN-MCC: \" + (telephonyManager.getSimOperator().substring(0, 3))))", "telephonyManager.getSimOperator().substring(int)", "android.telephony.TelephonyManager.getSimOperator()", "telephonyManager.getSimOperator().substring(int,int)"], "Fixed commit": "8fb3d4fb10027787d9de580ed4dffbbd5d4dc911", "Url": "https://api.github.com/repos/Pavel87/DeviceDiag", "Date": "2017-06-16T15:28:55Z"},
{"Line": "=>276", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((fis == null) || (!(fin.exists()))) || (!(fin.canRead()))) { android.util.Log.e(\"CPUInfo\", \"Cannot access CPUINFO.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/7429/buggy-version/app.src.main.java.com.pacmac.devinfo.CPUInfo.java", "BodyUseAPI": [], "Fixed commit": "8fb3d4fb10027787d9de580ed4dffbbd5d4dc911", "Url": "https://api.github.com/repos/Pavel87/DeviceDiag", "Date": "2017-06-16T15:28:55Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (list == null) { list = new java.util.ArrayList<T>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/8344/buggy-version/src.main.java.com.jingsky.util.common.CollectionUtil.java", "BodyUseAPI": [], "Fixed commit": "52147cf51284404625dd9cb54bd043dfa35b09b6", "Url": "https://api.github.com/repos/myzhijie/util", "Date": "2016-07-19T02:38:50Z"},
{"Line": "=>983", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.ResultSetMetaData.getScale(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (scale == 0) { column.setScale(precision); }else { column.setScale(scale); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/5598/buggy-version/components.data-services.org.wso2.carbon.dataservices.core.src.main.java.org.wso2.carbon.dataservices.core.odata.RDBMSDataHandler.java", "BodyUseAPI": ["org.wso2.carbon.dataservices.core.odata.DataColumn.setScale(int)"], "Fixed commit": "e763be6790051a31694b9ffde0423bce3fee3c84", "Url": "https://api.github.com/repos/madhawa-gunasekara/carbon-data", "Date": "2015-10-08T11:14:43Z"},
{"Line": "=>273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(hostDir.exists())) { if (isReadOnly) { throw new java.lang.IllegalStateException((\"Volume mount directory doesn't exist: \" + hostDir)); }else { hostDir.mkdirs(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/3341/buggy-version/src.us.kbase.narrativejobservice.sdkjobs.SDKLocalMethodRunner.java", "BodyUseAPI": ["java.io.File.mkdirs()"], "Fixed commit": "1d9bd84910ae660dafbe4d1e88deea3ae8842f2f", "Url": "https://api.github.com/repos/MrCreosote/njs_wrapper", "Date": "2016-06-23T22:41:36Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((data) != null) { result = (31 * result) + (data.hashCode()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/7826/buggy-version/pcap4j-core.src.main.java.org.pcap4j.packet.IpV4InternetTimestampOption.java", "BodyUseAPI": [], "Fixed commit": "3c5c30c7bf18edb4596052f88c57b1096abe1c5c", "Url": "https://api.github.com/repos/kaitoy/pcap4j", "Date": "2014-11-23T15:55:51Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(things.containsKey(thing))) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/2852/buggy-version/Project.core.src.com.dreamteam.villageTycoon.characters.Inventory.java", "BodyUseAPI": [], "Fixed commit": "1c115df47002af59cad5032753de1c582114a15f", "Url": "https://api.github.com/repos/Dreamteam2015-LBSLund/Village-Tycoon-RTS", "Date": "2015-09-30T07:59:12Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.StringBuilder.toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (baseResult.endsWith(\"</div><div><br/>\")) { result.append(\"<div\"); result.append(buildAlignStyle(align)); result.append('>'); result.append(baseResult, 0, ((baseResult.length()) - 10)); result.append(\"<br/>\"); }else if (baseResult.endsWith(\"</div><div>\")) { result.append(\"<div\"); result.append(buildAlignStyle(align)); result.append('>'); result.append(baseResult, 0, ((baseResult.length()) - 5)); }else if ((baseResult.contains(\"</div><div>\")) || (align != null)) { result.append(\"<div\"); result.append(buildAlignStyle(align)); result.append('>'); result.append(baseResult); result.append(\"</div>\"); }else { return baseResult; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/3269/buggy-version/richedit.src.main.java.com.commonsware.cwac.richtextutils.SpannedXhtmlGenerator.java", "BodyUseAPI": ["java.lang.String.contains(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String,int,int)", "java.lang.String.endsWith(java.lang.String)", "java.lang.String.length()", "java.lang.String.length()", "java.lang.StringBuilder.append(java.lang.String,int,int)", "java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "fbc3f297664dfe11d252368576bc89cb4e6b675e", "Url": "https://api.github.com/repos/jiaminglu/cwac-richedit", "Date": "2015-05-26T08:44:50Z"},
{"Line": "=>785", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(expressionsPostFix.empty())) expressionsPostFix.pop();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/8605/buggy-version/CalcV7.src.Model.java", "BodyUseAPI": ["java.util.Stack<java.lang.String>.pop()"], "Fixed commit": "4c6d4ae654104868048e59c6a810e5c77e83fe5a", "Url": "https://api.github.com/repos/Bastani/PostfixCalc", "Date": "2016-03-30T10:19:11Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((path.exists()) == false) path.mkdirs();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/6950/buggy-version/SensorAdventure.src.winlab.sensoradventure.ContinuousRecorder.java", "BodyUseAPI": [], "Fixed commit": "265307ad8a3449193c09d3941bc0ea27768da7c3", "Url": "https://api.github.com/repos/noobsauceage/sensoradventure", "Date": "2012-07-30T17:10:05Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((path.exists()) == false) path.mkdirs();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/6950/buggy-version/SensorAdventure.src.winlab.sensoradventure.ContinuousRecorder.java", "BodyUseAPI": [], "Fixed commit": "265307ad8a3449193c09d3941bc0ea27768da7c3", "Url": "https://api.github.com/repos/noobsauceage/sensoradventure", "Date": "2012-07-30T17:10:05Z"},
{"Line": "=>445", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (actual != null) { java.lang.String[] sdomain = actual.domain(); if (((sdomain != null) && (mdomain != sdomain)) && (!(java.util.Arrays.equals(mdomain, sdomain)))) output.replace(0, new hex.EnumWrappedVec(actual.group().addVec(), actual.get_espc(), sdomain, predicted._key)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/6664/buggy-version/h2o-core.src.main.java.hex.Model.java", "BodyUseAPI": ["hex.Vec.group()", "actual.group().addVec()", "hex.Vec.get_espc()", "hex.Frame.replace(int,hex.EnumWrappedVec)", "hex.Vec.domain()"], "Fixed commit": "25b6f429cd9a06e76fd2759e752d3095d9b41f37", "Url": "https://api.github.com/repos/h2oai/h2o-3", "Date": "2015-02-13T22:49:02Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["okhttp3.Request.method()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (method.equals(\"GET\")) { newRequest = originalRequest.newBuilder().url(((originalUrl + \"&token=\") + ((token) == null ? getToken() : token))).build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/3350/buggy-version/CZBaseDevTool.src.main.java.com.xinyi.czbasedevtool.base.manager.net_about.TokenAddInterceptor.java", "BodyUseAPI": [], "Fixed commit": "5acb7dff787c9459cec52b159440f3f6f967f2f8", "Url": "https://api.github.com/repos/XinYiWorld/CZBaseDevLibary", "Date": "2017-04-27T01:08:54Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (path.isEmpty()) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/7936/buggy-version/src.actions.ProjectHelper.java", "BodyUseAPI": [], "Fixed commit": "46608ed93ecb85bd0577acce1d263142bf6728af", "Url": "https://api.github.com/repos/Topher84/NetSuite-Tools-For-WebStorm", "Date": "2016-04-19T06:00:52Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (nsAccounts == null) { javax.swing.JOptionPane.showMessageDialog(null, \"Error getting NetSuite Accounts from Roles Rest Service\", \"ERROR\", javax.swing.JOptionPane.ERROR_MESSAGE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/7936/buggy-version/src.ui.AccountsUI.java", "BodyUseAPI": [], "Fixed commit": "46608ed93ecb85bd0577acce1d263142bf6728af", "Url": "https://api.github.com/repos/Topher84/NetSuite-Tools-For-WebStorm", "Date": "2016-04-19T06:00:52Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.DatabaseMetaData.getColumns(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((column.getFetchSize()) == 0) { column = meta.getColumns(catalog, schema, tableName.toLowerCase(), columnName.toLowerCase()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/868/buggy-version/connectors.connectors.sql.sql-common.src.main.java.io.syndesis.connector.sql.DatabaseMetaDataHelper.java", "BodyUseAPI": [], "Fixed commit": "8bd1a51b495d77c5bf1ec7e5fd3b839aa866bf34", "Url": "https://api.github.com/repos/paoloantinori/syndesis", "Date": "2017-11-30T19:25:58Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dataTypes.contains(dataType)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/5741/buggy-version/src.main.java.com.github.kongchen.swagger.docgen.mustache.OutputTemplate.java", "BodyUseAPI": [], "Fixed commit": "22451f0fb74652a73055341b482cdbb9c2b2dfc9", "Url": "https://api.github.com/repos/kongchen/swagger-maven-plugin", "Date": "2013-07-31T13:30:55Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (numhits == 0) lastStartOffset = 0; else lastStartOffset += numhits;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/7607/buggy-version/external.src.main.java.com.digitalpebble.storm.crawler.elasticsearch.persistence.ElasticSearchSpout.java", "BodyUseAPI": [], "Fixed commit": "3599554ac9add66c21c3d67ff7d6792e4003cd1d", "Url": "https://api.github.com/repos/DigitalPebble/storm-crawler", "Date": "2015-03-25T15:11:03Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(mGoogleApiClient.isConnected())) { mGoogleApiClient.connect(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/8933/buggy-version/app.src.main.java.com.softwarefactory.teamdelta.serendipity.MapsActivity.java", "BodyUseAPI": ["com.google.android.gms.common.api.GoogleApiClient.connect()"], "Fixed commit": "663e95e31550f381486c3e3c1aceef947e360ca1", "Url": "https://api.github.com/repos/dteamswf/Serendipity", "Date": "2016-03-31T11:59:07Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (panel.start) { panel.spacepress = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/7668/buggy-version/Retro.java", "BodyUseAPI": [], "Fixed commit": "60d6bb7dd9afa96db95a186d5d9ad396395a78ba", "Url": "https://api.github.com/repos/Dan12/retro", "Date": "2014-03-10T23:08:46Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.revature.dao.PostUserDao.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(u.getPassword().equals(passwordHashing(password, u)))) { if (!(password.equals(\"\"))) { u.setPassword(passwordHashing(password, u)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/5924/buggy-version/src.main.java.com.revature.service.UserService.java", "BodyUseAPI": ["com.revature.service.UserService.passwordHashing(java.lang.String,com.revature.entities.PostUser)", "java.lang.String.equals(java.lang.String)", "com.revature.entities.PostUser.setPassword(java.lang.String)"], "Fixed commit": "fda0ac8ed56ea8f73c47f136e4d90ed4f61d6e00", "Url": "https://api.github.com/repos/jlowell000/Project_2", "Date": "2017-12-13T14:22:30Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["utilties.models.Game.pathDistanceToLocation(java.awt.Point,opponent.getLocation())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (distanceCandidate == longestDistance) { if (getRandomBoolean()) { longestDistance = distanceCandidate; longestMoveIndex = i; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/3362/buggy-version/src.main.java.utilties.models.Game.java", "BodyUseAPI": [], "Fixed commit": "97425251672125b81d42a9afa1669a697f005392", "Url": "https://api.github.com/repos/j3kstrum/CodeCarnage", "Date": "2017-10-08T20:07:01Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (scanner.hasNext()) { userInput = scanner.next(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/546/buggy-version/src.main.java.code.Reports.java", "BodyUseAPI": ["java.util.Scanner.next()"], "Fixed commit": "57bd2d6eebcea611ac6f38d3878bc24dd310af9e", "Url": "https://api.github.com/repos/r-clarkson/Notepad", "Date": "2017-09-21T02:44:26Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.patrick_vane.unrealscript.editor.outline.OutlineSorter.isSortOn())) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/559/buggy-version/src.com.patrick_vane.unrealscript.editor.outline.OutlineSorter.java", "BodyUseAPI": [], "Fixed commit": "5daca38e3ab5eac3c8463d7d34ca5ba283f991a1", "Url": "https://api.github.com/repos/patrickvane/unrealscript_editor", "Date": "2013-03-29T09:49:39Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((progressDialog) != null) { progressDialog.dismiss(); progressDialog = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/6066/buggy-version/src.com.kuna.iidxme.MainviewActivity.java", "BodyUseAPI": [], "Fixed commit": "a845462a3729ff28f9e739d4b7d63792fee52560", "Url": "https://api.github.com/repos/kuna/iidxme_android", "Date": "2015-11-26T13:38:04Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.world.IBlockAccess.getBlockTileEntity(int,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (new enhancedportals.portal.Portal().isBlockFrame(enhancedcore.world.WorldHelper.getBlockId(blockAccess, position.getOffset(ForgeDirection.SOUTH)), modifier.customBorderBlocks())) { return net.minecraft.block.Block.blocksList[enhancedcore.world.WorldHelper.getBlockId(blockAccess, position.getOffset(ForgeDirection.SOUTH))].getIcon(side, enhancedcore.world.WorldHelper.getMetadata(position.getOffset(ForgeDirection.SOUTH), blockAccess)); }else if (new enhancedportals.portal.Portal().isBlockFrame(enhancedcore.world.WorldHelper.getBlockId(blockAccess, position.getOffset(ForgeDirection.EAST)), modifier.customBorderBlocks())) { return net.minecraft.block.Block.blocksList[enhancedcore.world.WorldHelper.getBlockId(blockAccess, position.getOffset(ForgeDirection.EAST))].getIcon(side, enhancedcore.world.WorldHelper.getMetadata(position.getOffset(ForgeDirection.EAST), blockAccess)); }else if (new enhancedportals.portal.Portal().isBlockFrame(enhancedcore.world.WorldHelper.getBlockId(blockAccess, position.getOffset(ForgeDirection.WEST)), modifier.customBorderBlocks())) { return net.minecraft.block.Block.blocksList[enhancedcore.world.WorldHelper.getBlockId(blockAccess, position.getOffset(ForgeDirection.WEST))].getIcon(side, enhancedcore.world.WorldHelper.getMetadata(position.getOffset(ForgeDirection.WEST), blockAccess)); }else if (new enhancedportals.portal.Portal().isBlockFrame(enhancedcore.world.WorldHelper.getBlockId(blockAccess, position.getOffset(ForgeDirection.UP)), modifier.customBorderBlocks())) { return net.minecraft.block.Block.blocksList[enhancedcore.world.WorldHelper.getBlockId(blockAccess, position.getOffset(ForgeDirection.UP))].getIcon(side, enhancedcore.world.WorldHelper.getMetadata(position.getOffset(ForgeDirection.UP), blockAccess)); }else if (new enhancedportals.portal.Portal().isBlockFrame(enhancedcore.world.WorldHelper.getBlockId(blockAccess, position.getOffset(ForgeDirection.DOWN)), modifier.customBorderBlocks())) { return net.minecraft.block.Block.blocksList[enhancedcore.world.WorldHelper.getBlockId(blockAccess, position.getOffset(ForgeDirection.DOWN))].getIcon(side, enhancedcore.world.WorldHelper.getMetadata(position.getOffset(ForgeDirection.DOWN), blockAccess)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/744/buggy-version/common.enhancedportals.block.BlockPortalModifier.java", "BodyUseAPI": ["enhancedcore.world.WorldHelper.getBlockId(net.minecraft.world.IBlockAccess,position.getOffset(ForgeDirection.DOWN))", "enhancedcore.world.WorldHelper.getBlockId(net.minecraft.world.IBlockAccess,position.getOffset(ForgeDirection.EAST))", "enhancedcore.world.WorldHelper.getMetadata(position.getOffset(ForgeDirection.EAST),net.minecraft.world.IBlockAccess)", "net.minecraft.block.Block.blocksList[enhancedcore.world.WorldHelper.getBlockId(blockAccess, position.getOffset(ForgeDirection.UP))].getIcon(int,enhancedcore.world.WorldHelper.getMetadata(position.getOffset(ForgeDirection.UP), blockAccess))", "enhancedportals.portal.Portal.isBlockFrame(enhancedcore.world.WorldHelper.getBlockId(blockAccess, position.getOffset(ForgeDirection.EAST)),modifier.customBorderBlocks())", "enhancedcore.world.BlockPosition.getOffset(ForgeDirection.WEST)", "enhancedcore.world.WorldHelper.getBlockId(net.minecraft.world.IBlockAccess,position.getOffset(ForgeDirection.WEST))", "net.minecraft.block.Block.blocksList[enhancedcore.world.WorldHelper.getBlockId(blockAccess, position.getOffset(ForgeDirection.WEST))].getIcon(int,enhancedcore.world.WorldHelper.getMetadata(position.getOffset(ForgeDirection.WEST), blockAccess))", "enhancedcore.world.BlockPosition.getOffset(ForgeDirection.DOWN)", "net.minecraft.block.Block.blocksList[enhancedcore.world.WorldHelper.getBlockId(blockAccess, position.getOffset(ForgeDirection.EAST))].getIcon(int,enhancedcore.world.WorldHelper.getMetadata(position.getOffset(ForgeDirection.EAST), blockAccess))", "enhancedcore.world.BlockPosition.getOffset(ForgeDirection.EAST)", "enhancedcore.world.WorldHelper.getBlockId(net.minecraft.world.IBlockAccess,position.getOffset(ForgeDirection.DOWN))", "enhancedportals.tileentity.TileEntityPortalModifier.customBorderBlocks()", "enhancedcore.world.BlockPosition.getOffset(ForgeDirection.UP)", "enhancedportals.tileentity.TileEntityPortalModifier.customBorderBlocks()", "net.minecraft.block.Block.blocksList[enhancedcore.world.WorldHelper.getBlockId(blockAccess, position.getOffset(ForgeDirection.SOUTH))].getIcon(int,enhancedcore.world.WorldHelper.getMetadata(position.getOffset(ForgeDirection.SOUTH), blockAccess))", "enhancedcore.world.BlockPosition.getOffset(ForgeDirection.SOUTH)", "enhancedcore.world.BlockPosition.getOffset(ForgeDirection.UP)", "enhancedcore.world.BlockPosition.getOffset(ForgeDirection.EAST)", "enhancedcore.world.WorldHelper.getMetadata(position.getOffset(ForgeDirection.WEST),net.minecraft.world.IBlockAccess)", "enhancedportals.tileentity.TileEntityPortalModifier.customBorderBlocks()", "enhancedportals.portal.Portal.isBlockFrame(enhancedcore.world.WorldHelper.getBlockId(blockAccess, position.getOffset(ForgeDirection.UP)),modifier.customBorderBlocks())", "enhancedcore.world.WorldHelper.getBlockId(net.minecraft.world.IBlockAccess,position.getOffset(ForgeDirection.EAST))", "enhancedcore.world.BlockPosition.getOffset(ForgeDirection.WEST)", "enhancedcore.world.BlockPosition.getOffset(ForgeDirection.UP)", "enhancedcore.world.BlockPosition.getOffset(ForgeDirection.EAST)", "net.minecraft.block.Block.blocksList[enhancedcore.world.WorldHelper.getBlockId(blockAccess, position.getOffset(ForgeDirection.DOWN))].getIcon(int,enhancedcore.world.WorldHelper.getMetadata(position.getOffset(ForgeDirection.DOWN), blockAccess))", "enhancedcore.world.BlockPosition.getOffset(ForgeDirection.WEST)", "enhancedcore.world.WorldHelper.getBlockId(net.minecraft.world.IBlockAccess,position.getOffset(ForgeDirection.UP))", "enhancedcore.world.WorldHelper.getMetadata(position.getOffset(ForgeDirection.UP),net.minecraft.world.IBlockAccess)", "enhancedportals.portal.Portal.isBlockFrame(enhancedcore.world.WorldHelper.getBlockId(blockAccess, position.getOffset(ForgeDirection.WEST)),modifier.customBorderBlocks())", "enhancedcore.world.WorldHelper.getMetadata(position.getOffset(ForgeDirection.DOWN),net.minecraft.world.IBlockAccess)", "enhancedportals.tileentity.TileEntityPortalModifier.customBorderBlocks()", "enhancedcore.world.WorldHelper.getMetadata(position.getOffset(ForgeDirection.SOUTH),net.minecraft.world.IBlockAccess)", "enhancedportals.portal.Portal.isBlockFrame(enhancedcore.world.WorldHelper.getBlockId(blockAccess, position.getOffset(ForgeDirection.DOWN)),modifier.customBorderBlocks())", "enhancedcore.world.BlockPosition.getOffset(ForgeDirection.SOUTH)", "enhancedcore.world.WorldHelper.getBlockId(net.minecraft.world.IBlockAccess,position.getOffset(ForgeDirection.SOUTH))", "enhancedcore.world.WorldHelper.getBlockId(net.minecraft.world.IBlockAccess,position.getOffset(ForgeDirection.UP))", "enhancedcore.world.BlockPosition.getOffset(ForgeDirection.DOWN)", "enhancedcore.world.WorldHelper.getBlockId(net.minecraft.world.IBlockAccess,position.getOffset(ForgeDirection.WEST))", "enhancedcore.world.BlockPosition.getOffset(ForgeDirection.DOWN)"], "Fixed commit": "baaadf1f5f6c91c865ad349ab113cc890ef11676", "Url": "https://api.github.com/repos/ShadedDimension/enhanced-portals", "Date": "2013-06-19T19:40:02Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.owncloud.android.ui.preview.PreviewTextFragment.getArguments()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (args.containsKey(FileDisplayActivity.EXTRA_SEARCH_QUERY)) { mSearchQuery = args.getString(FileDisplayActivity.EXTRA_SEARCH_QUERY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/3594/buggy-version/src.main.java.com.owncloud.android.ui.preview.PreviewTextFragment.java", "BodyUseAPI": ["android.os.Bundle.getString(FileDisplayActivity.EXTRA_SEARCH_QUERY)"], "Fixed commit": "799d56a1adb17e9e7843ee719032a13355d5c43f", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2017-01-24T01:01:49Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hours == 0) hours++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/7831/buggy-version/app.src.main.java.de.appphil.categories.utils.TimeUtils.java", "BodyUseAPI": [], "Fixed commit": "5796a5498dae13030613507e225d7a1b9108890e", "Url": "https://api.github.com/repos/PhilippDE/Categories", "Date": "2017-01-30T15:50:32Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["widget.window.MainWindow.getInstance().getEditor().getActiveSubEditor()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (s == null) { widget.window.MainWindow.getInstance().setStatus(\"Editor is empty\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/999/buggy-version/src.command.SaveCommand.java", "BodyUseAPI": [], "Fixed commit": "74861974651790be167c3b5dc1a6ca6b4c78c5b5", "Url": "https://api.github.com/repos/rafgugi/flowchart-editor", "Date": "2016-04-29T04:15:45Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.swt.widgets.TabFolder.getSelectionIndex()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (index == (-1)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/999/buggy-version/src.widget.tab.Editor.java", "BodyUseAPI": [], "Fixed commit": "74861974651790be167c3b5dc1a6ca6b4c78c5b5", "Url": "https://api.github.com/repos/rafgugi/flowchart-editor", "Date": "2016-04-29T04:15:45Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (jumping) { if ((gravity) > (-5)) { gravity -= 1; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/6467/buggy-version/src.entity.Entity.java", "BodyUseAPI": [], "Fixed commit": "79b5041191057a2e1e6cd624ee72e8efb8463f75", "Url": "https://api.github.com/repos/pie-tras/LD40", "Date": "2017-12-02T15:34:50Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.isStandingOnTile(transform.pos.x, transform.pos.y, world)) && (jumping)) { if ((gravity) > (-5)) { gravity -= 1; } }else if (!(this.isStandingOnTile(transform.pos.x, transform.pos.y, world))) { if ((gravity) < 1) { gravity += 0.05; jumping = false; }else if (jumping) { if ((gravity) > (-5)) { gravity -= 1; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/6467/buggy-version/src.entity.Entity.java", "BodyUseAPI": ["entity.Entity.isStandingOnTile(transform.pos.x,transform.pos.y,world.World)"], "Fixed commit": "79b5041191057a2e1e6cd624ee72e8efb8463f75", "Url": "https://api.github.com/repos/pie-tras/LD40", "Date": "2017-12-02T15:34:50Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((upgrades.get(upgrade)) == null) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/3312/buggy-version/src.main.java.mekanism.common.tile.component.TileComponentUpgrade.java", "BodyUseAPI": [], "Fixed commit": "99482d8fd017180a1cf8fc19e71da34c81780f8f", "Url": "https://api.github.com/repos/aidancbrady/Mekanism", "Date": "2014-07-22T02:24:27Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((player) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/1113/buggy-version/sambaplayersdk.src.main.java.com.sambatech.player.SambaPlayerController.java", "BodyUseAPI": [], "Fixed commit": "d39b1622038c2ee7f784730702292b67f794a69d", "Url": "https://api.github.com/repos/sambatech/player_sdk_android", "Date": "2016-11-10T18:09:05Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (stoken.hasMoreTokens()) { ddtime = java.lang.Integer.parseInt(stoken.nextToken()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/2088/buggy-version/src.com.MT.MTServer.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "java.util.StringTokenizer.nextToken()"], "Fixed commit": "93487b421d4fcf31f66562afcee7eb1195b2f4a3", "Url": "https://api.github.com/repos/csl/MTServer", "Date": "2011-10-20T09:52:19Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ddtime - sstime) < 0) { db.insertTable(name, gps, stime, \"23:59\"); db.insertTable(name, gps, \"00:00\", dtime); }else { db.insertTable(name, gps, stime, dtime); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/2088/buggy-version/src.com.MT.MTServer.java", "BodyUseAPI": [], "Fixed commit": "93487b421d4fcf31f66562afcee7eb1195b2f4a3", "Url": "https://api.github.com/repos/csl/MTServer", "Date": "2011-10-20T09:52:19Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ddtime - sstime) < 0) { db.deleteListTable(name); db.insertTable(name, gps, stime, \"23:59\"); db.insertTable(name, gps, \"00:00\", dtime); }else db.updateTable(id, name, gps, stime, dtime);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/2088/buggy-version/src.com.MT.MTServer.java", "BodyUseAPI": [], "Fixed commit": "93487b421d4fcf31f66562afcee7eb1195b2f4a3", "Url": "https://api.github.com/repos/csl/MTServer", "Date": "2011-10-20T09:52:19Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (stoken.hasMoreTokens()) { sstime = java.lang.Integer.parseInt(stoken.nextToken()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/2088/buggy-version/src.com.MT.MTServer.java", "BodyUseAPI": ["java.util.StringTokenizer.nextToken()", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "93487b421d4fcf31f66562afcee7eb1195b2f4a3", "Url": "https://api.github.com/repos/csl/MTServer", "Date": "2011-10-20T09:52:19Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (stoken.hasMoreTokens()) { sstime = java.lang.Integer.parseInt(stoken.nextToken()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/2088/buggy-version/src.com.MT.MTServer.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "java.util.StringTokenizer.nextToken()"], "Fixed commit": "93487b421d4fcf31f66562afcee7eb1195b2f4a3", "Url": "https://api.github.com/repos/csl/MTServer", "Date": "2011-10-20T09:52:19Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (stoken.hasMoreTokens()) { ddtime = java.lang.Integer.parseInt(stoken.nextToken()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/2088/buggy-version/src.com.MT.MTServer.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "java.util.StringTokenizer.nextToken()"], "Fixed commit": "93487b421d4fcf31f66562afcee7eb1195b2f4a3", "Url": "https://api.github.com/repos/csl/MTServer", "Date": "2011-10-20T09:52:19Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(lastCharOfOutputString.equals(\"[\"))) { outputString = outputString.substring(0, ((outputString.length()) - 5)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/8639/buggy-version/AddressBook.java", "BodyUseAPI": [], "Fixed commit": "7aa63d5f1ce519868e45f076358f750c27eb0c78", "Url": "https://api.github.com/repos/tmnt-raphael/AddressBook", "Date": "2015-11-16T19:15:41Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.widget.Spinner.getSelectedItemPosition()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (k == 3) k = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/629/buggy-version/app.src.main.java.it.uniba.di.ivu.sms16.gruppo3.fasterfood.search_screen.SearchFragment.java", "BodyUseAPI": [], "Fixed commit": "b9197446bdd38571bb0ad2f02423dea16e2cc95f", "Url": "https://api.github.com/repos/itkkk/FasterFood", "Date": "2016-07-23T08:30:52Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (this.isTouching(Hexagon.class)) this.removeTouching(Hexagon.class);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/1270/buggy-version/Circle.java", "BodyUseAPI": ["Circle.removeTouching(java.lang.Class)"], "Fixed commit": "a63c95bf67a5dfae0452c240fe2826a670fa0dac", "Url": "https://api.github.com/repos/saguywalker/RoadToHyperspace", "Date": "2017-03-13T16:53:37Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getString(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(maxTransferString.isEmpty())) { com.utyf.pmetro.settings.SET.maxTransfer = com.utyf.pmetro.util.ExtInteger.parseInt(maxTransferString); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/7130/buggy-version/app.src.main.java.com.utyf.pmetro.settings.SET.java", "BodyUseAPI": ["com.utyf.pmetro.util.ExtInteger.parseInt(java.lang.String)"], "Fixed commit": "2f91cd27d41aebf1fa8112f13f12723a4e5d28a7", "Url": "https://api.github.com/repos/asdzxcasd/pMetro", "Date": "2016-07-13T20:27:43Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (iObject instanceof com.orientechnologies.orient.core.sql.query.OLiveQuery<?>) className = iObject.getClass().getName().getBytes(\"UTF-8\"); else if (iObject instanceof com.orientechnologies.orient.core.sql.query.OSQLSynchQuery<?>) className = com.orientechnologies.orient.core.serialization.serializer.stream.OStreamSerializerAnyStreamable.QUERY_COMMAND_CLASS_ASBYTES; else if (iObject instanceof com.orientechnologies.orient.core.sql.OCommandSQL) className = com.orientechnologies.orient.core.serialization.serializer.stream.OStreamSerializerAnyStreamable.SQL_COMMAND_CLASS_ASBYTES; else if (iObject instanceof com.orientechnologies.orient.core.command.script.OCommandScript) className = com.orientechnologies.orient.core.serialization.serializer.stream.OStreamSerializerAnyStreamable.SCRIPT_COMMAND_CLASS_ASBYTES; else { if (iObject == null) className = null; else className = iObject.getClass().getName().getBytes(\"UTF-8\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/4650/buggy-version/core.src.main.java.com.orientechnologies.orient.core.serialization.serializer.stream.OStreamSerializerAnyStreamable.java", "BodyUseAPI": ["iObject.getClass().getName().getBytes(java.lang.String)", "iObject.getClass().getName()", "iObject.getClass().getName().getBytes(java.lang.String)", "iObject.getClass().getName()", "com.orientechnologies.orient.core.command.OCommandRequestText.getClass()", "com.orientechnologies.orient.core.command.OCommandRequestText.getClass()"], "Fixed commit": "99ea01f601ef09ff1056f233d7d981071eb1c787", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2016-08-08T16:27:48Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i > numthreads) { i = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/4379/buggy-version/src.hw2.BruteForceDES.java", "BodyUseAPI": [], "Fixed commit": "f68722c19ad275bc5c1d8cf0e558d14326ca6d8a", "Url": "https://api.github.com/repos/gauravkumar87/cs420jhu", "Date": "2013-03-05T02:44:30Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i > numthreads) { i = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/4379/buggy-version/src.hw2.CoinFlip.java", "BodyUseAPI": [], "Fixed commit": "f68722c19ad275bc5c1d8cf0e558d14326ca6d8a", "Url": "https://api.github.com/repos/gauravkumar87/cs420jhu", "Date": "2013-03-05T02:44:30Z"},
{"Line": "=>633", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["main.ui.RootLayoutController.showFileChooserDialog()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (selectedFile == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/960/buggy-version/src.main.ui.RootLayoutController.java", "BodyUseAPI": [], "Fixed commit": "1515e3ad3c01243dafec9299b20e65e3b400bcd1", "Url": "https://api.github.com/repos/cs2103jan2016-f13-1j/main", "Date": "2016-04-03T14:41:16Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (calendarEntry != null) { lcf.setCalEntryId(calendarEntry.getHrCalendarEntriesId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/8126/buggy-version/src.main.java.org.kuali.hr.lm.leavecalendar.web.LeaveCalendarAction.java", "BodyUseAPI": ["org.kuali.hr.time.calendar.CalendarEntries.getHrCalendarEntriesId()", "org.kuali.hr.lm.leavecalendar.web.LeaveCalendarForm.setCalEntryId(calendarEntry.getHrCalendarEntriesId())"], "Fixed commit": "2bc235961a5a4dc7de073fded1ced02254ee1a9c", "Url": "https://api.github.com/repos/kuali/kpme", "Date": "2012-08-01T18:48:18Z"},
{"Line": "=>368", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((lcd.getCalendarEntry()) != null) { leaveForm.setCalEntryId(lcd.getCalendarEntry().getHrCalendarEntriesId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/8126/buggy-version/src.main.java.org.kuali.hr.lm.leavecalendar.web.LeaveCalendarAction.java", "BodyUseAPI": ["org.kuali.hr.lm.leavecalendar.web.LeaveCalendarForm.setCalEntryId(lcd.getCalendarEntry().getHrCalendarEntriesId())", "lcd.getCalendarEntry().getHrCalendarEntriesId()", "org.kuali.hr.lm.leavecalendar.LeaveCalendarDocument.getCalendarEntry()"], "Fixed commit": "2bc235961a5a4dc7de073fded1ced02254ee1a9c", "Url": "https://api.github.com/repos/kuali/kpme", "Date": "2012-08-01T18:48:18Z"},
{"Line": "=>382", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.kuali.hr.time.service.base.TkServiceLocator.getCalendarService().getCurrentCalendarDatesForLeaveCalendar(java.lang.String,java.sql.Date)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (calendarEntry != null) { lcf.setCalEntryId(calendarEntry.getHrCalendarEntriesId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/8126/buggy-version/src.main.java.org.kuali.hr.lm.leavecalendar.web.LeaveCalendarAction.java", "BodyUseAPI": ["org.kuali.hr.lm.leavecalendar.web.LeaveCalendarForm.setCalEntryId(calendarEntry.getHrCalendarEntriesId())", "org.kuali.hr.time.calendar.CalendarEntries.getHrCalendarEntriesId()"], "Fixed commit": "2bc235961a5a4dc7de073fded1ced02254ee1a9c", "Url": "https://api.github.com/repos/kuali/kpme", "Date": "2012-08-01T18:48:18Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dna.profiler.ProfilerMeasurementData.get(((((keyName + \"_\") + (accessType.toString().toUpperCase())) + \"_\") + (storedDataClass.toUpperCase())))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (c == null) c = dna.profiler.ProfilerMeasurementData.get(((keyName + \"_\") + (accessType.toString().toUpperCase())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/5660/buggy-version/src.dna.profiler.ProfilerMeasurementData.java", "BodyUseAPI": [], "Fixed commit": "d541985fdd9952b55fd2e89fde8cf2bff92c0bec", "Url": "https://api.github.com/repos/NicoHaase/DNA", "Date": "2014-01-14T15:03:26Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (savedInstanceState != null) { username = savedInstanceState.getString(com.pindroid.fragment.BrowseBookmarksFragment.STATE_USERNAME); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/9227/buggy-version/src.com.pindroid.fragment.BrowseBookmarksFragment.java", "BodyUseAPI": ["android.os.Bundle.getString(java.lang.String)"], "Fixed commit": "7c7e6dffe54976f9b89e3eb1b449893ae94eac12", "Url": "https://api.github.com/repos/maxpower47/PinDroid", "Date": "2012-05-30T17:44:48Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((peoples.size()) > 0) { user_instance.getInformation(peoples.get(0).getId()); lastPosition = 1; }else { pbar.setVisibility(View.GONE); com.teamspeaghetti.www.gifster.interiorapplication.commonclasses.Utils.createSnackBar(getView(), \"There is no one new\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/4265/buggy-version/app.src.main.java.com.teamspeaghetti.www.gifster.interiorapplication.fragments.SearchPeopleFragment.java", "BodyUseAPI": ["java.util.List<com.teamspeaghetti.www.gifster.interiorapplication.model.People>.get(int)", "com.teamspeaghetti.www.gifster.interiorapplication.presenters.UserProcesses.getInformation(peoples.get(0).getId())", "peoples.get(0).getId()"], "Fixed commit": "3c6d10ffa9b7a826543a8007793e8ea483522b65", "Url": "https://api.github.com/repos/msalihguler/gifmessenger", "Date": "2016-06-03T10:12:04Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (request != null) { context.getSessionManager().removeSession(request.getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/4915/buggy-version/tajo-core.tajo-core-backend.src.main.java.org.apache.tajo.master.TajoMasterClientService.java", "BodyUseAPI": ["context.getSessionManager().removeSession(request.getId())", "TajoIdProtos.SessionIdProto.getId()"], "Fixed commit": "69ab1992ccb440837be2f2fc9e9f451923a5440b", "Url": "https://api.github.com/repos/hyunsik/incubator-tajo", "Date": "2014-03-13T16:53:48Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((i++) >= (org.powerbot.script.rt6.Component.RECURSION_DEPTH)) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/7376/buggy-version/src.org.powerbot.script.rt6.Component.java", "BodyUseAPI": [], "Fixed commit": "850a40a5fecdf58c36f2dc47f2bc835a9201ac00", "Url": "https://api.github.com/repos/powerbot/powerbot", "Date": "2016-11-23T18:30:23Z"},
{"Line": "=>426", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (requestCode == 0) { if (resultCode == (RESULT_OK)) { android.util.Log.i(com.laquysoft.codemotionhunt.ClueActivity.class.getName(), (\"SCAN_RESULT_FORMAT \" + (intent.getStringExtra(\"SCAN_RESULT_FORMAT\")))); android.util.Log.i(com.laquysoft.codemotionhunt.ClueActivity.class.getName(), (\"SCAN_RESULT \" + (intent.getStringExtra(\"SCAN_RESULT\")))); lastClueFound = scanResult.getContents(); }else if (resultCode == (RESULT_CANCELED)) { android.util.Log.i(com.laquysoft.codemotionhunt.ClueActivity.class.getName(), \"Press a button to start a scan.\"); android.util.Log.i(com.laquysoft.codemotionhunt.ClueActivity.class.getName(), \"Scan cancelled.\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/8694/buggy-version/IOHunt.src.main.java.com.laquysoft.codemotionhunt.ClueActivity.java", "BodyUseAPI": [], "Fixed commit": "8439edd3c72249c80ac0f7d2cc910c9927e95699", "Url": "https://api.github.com/repos/joaobiriba/gdgdevfesthunt", "Date": "2014-09-10T14:26:40Z"},
{"Line": "=>421", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.zxing.integration.android.IntentIntegrator.parseActivityResult(int,int,android.content.Intent)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (scanResult != null) { lastClueFound = scanResult.getContents(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/8694/buggy-version/IOHunt.src.main.java.com.laquysoft.codemotionhunt.ClueActivity.java", "BodyUseAPI": ["com.google.zxing.integration.android.IntentResult.getContents()"], "Fixed commit": "8439edd3c72249c80ac0f7d2cc910c9927e95699", "Url": "https://api.github.com/repos/joaobiriba/gdgdevfesthunt", "Date": "2014-09-10T14:26:40Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (file.endsWith(\".gz\")) fileSort.sortFile(file, outputdir);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/4952/buggy-version/sortclient.src.main.java.proj.sortclient.main.SortData.java", "BodyUseAPI": ["proj.sortclient.main.FileSort.sortFile(java.lang.String,java.lang.String)"], "Fixed commit": "76704cfaeae66c6629c711c16702e67b3ac39922", "Url": "https://api.github.com/repos/abhishekravi/mapreduce", "Date": "2016-04-10T01:51:43Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((teamProfile) != null) { teamProfile.setPvP(pvpState); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/4732/buggy-version/PvPManager.src.main.java.me.NoChance.PvPManager.PvPlayer.java", "BodyUseAPI": [], "Fixed commit": "3efbf3e63f67b7334f05dd72587827a47ba6d2ff", "Url": "https://api.github.com/repos/NoChanceSD/PvPManager", "Date": "2015-12-13T01:30:07Z"},
{"Line": "=>1482", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(cacheCtx.isLocal())) cacheCtx.topology().resetLostPartitions();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/4661/buggy-version/modules.core.src.main.java.org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPartitionsExchangeFuture.java", "BodyUseAPI": ["cacheCtx.topology().resetLostPartitions()", "org.apache.ignite.internal.processors.cache.GridCacheContext.topology()"], "Fixed commit": "5748034bf367ddf860fa6daf4ac92cd3457dc301", "Url": "https://api.github.com/repos/gridgain/apache-ignite", "Date": "2016-09-12T09:08:51Z"},
{"Line": "=>1472", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(cacheCtx.isLocal())) cacheCtx.topology().detectLostPartitions(discoEvt);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/4661/buggy-version/modules.core.src.main.java.org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPartitionsExchangeFuture.java", "BodyUseAPI": ["org.apache.ignite.internal.processors.cache.GridCacheContext.topology()", "cacheCtx.topology().detectLostPartitions(org.apache.ignite.events.DiscoveryEvent)"], "Fixed commit": "5748034bf367ddf860fa6daf4ac92cd3457dc301", "Url": "https://api.github.com/repos/gridgain/apache-ignite", "Date": "2016-09-12T09:08:51Z"},
{"Line": "=>406", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((null == contentType) || ((contentType.trim().length()) <= 0)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/6176/buggy-version/src.main.java.com.sdklite.rpc.http.HttpRpcRequest.java", "BodyUseAPI": [], "Fixed commit": "c8ae8f3007860fc4d0e4fd978e174dd1d262fb20", "Url": "https://api.github.com/repos/sdklite/rpc-http", "Date": "2016-12-29T07:22:46Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (_newEvent.getCategories().contains(\"hotel\")) { hotel = _newEvent.getName(); }else { for (src.Event e : timelineArrayList) { if (e.getCategories().contains(\"hotel\")) { hotel = e.getName(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/7181/buggy-version/src.gui.MainPanel.java", "BodyUseAPI": ["src.Event.getName()"], "Fixed commit": "00c437c7645c49ad53e3c676bc7096f0796d780f", "Url": "https://api.github.com/repos/betaros/stralsund_erkunden", "Date": "2016-11-23T15:50:16Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((req == null) || (\"\".equals(req))) { channel.close(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/1253/buggy-version/src.main.java.javaS.IO.nioS.aioS.ReadCompletionHandler.java", "BodyUseAPI": [], "Fixed commit": "40a3a3e41e1d7d8bdc5e0c923dfa5ae9a8f0961c", "Url": "https://api.github.com/repos/evsward/mainbase", "Date": "2017-12-14T06:24:28Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cn.droidlover.xdroidbase.imageloader.ILoader.Options.defOptions) == null) cn.droidlover.xdroidbase.imageloader.ILoader.Options.defOptions = new cn.droidlover.xdroidbase.imageloader.ILoader.Options(cn.droidlover.xdroidbase.imageloader.ILoader.Options.RES_NONE, cn.droidlover.xdroidbase.imageloader.ILoader.Options.RES_NONE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/1744/buggy-version/xdroidbase.src.main.java.cn.droidlover.xdroidbase.imageloader.ILoader.java", "BodyUseAPI": [], "Fixed commit": "78d489ecef8e087c63f9c192f9a19c68ddf319b0", "Url": "https://api.github.com/repos/fodroid/XDroid-Base", "Date": "2017-03-09T16:59:57Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getCookies()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (cookies != null) { for (javax.servlet.http.Cookie cookie : cookies) { builder.addCookie(cookie.getName(), cookie); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/2198/buggy-version/components.authentication-framework.org.wso2.carbon.identity.application.authentication.framework.src.main.java.org.wso2.carbon.identity.application.authentication.framework.inbound.InboundRequestFactory.java", "BodyUseAPI": [], "Fixed commit": "9bf5cf1d40297740146d73a9ecd2667c41a2c096", "Url": "https://api.github.com/repos/yasiruk/identity-framework", "Date": "2016-04-26T05:13:54Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(errorMessage))) { new android.app.AlertDialog.Builder(ctx).setTitle(R.string.proxy_error).setMessage(errorMessage).setPositiveButton(R.string.proxy_error_dismiss, null).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/7588/buggy-version/proxy-settings.src.main.java.com.lechucksoftware.proxy.proxysettings.utils.UIUtils.java", "BodyUseAPI": ["new android.app.AlertDialog.Builder(ctx).setTitle(R.string.proxy_error).setMessage(errorMessage).setPositiveButton(R.string.proxy_error_dismiss,<nulltype>)", "new android.app.AlertDialog.Builder(ctx).setTitle(R.string.proxy_error).setMessage(java.lang.String)", "new android.app.AlertDialog.Builder(ctx).setTitle(R.string.proxy_error).setMessage(errorMessage).setPositiveButton(R.string.proxy_error_dismiss, null).show()"], "Fixed commit": "ddd5df6030d32a5ef4e643c669adddcecf5cf2e6", "Url": "https://api.github.com/repos/shouldit/android-proxy", "Date": "2014-04-01T21:32:39Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.social.repository.ProfileRepository.getOne(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((profile.getAvatar()) != null) profileUpdated.setAvatar(avatarStorage.getUrl(profile.getAvatar()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/8327/buggy-version/src.main.java.com.social.business.AccountBusinessImpl.java", "BodyUseAPI": ["com.social.domain.Profile.getAvatar()", "com.social.domain.Profile.setAvatar(avatarStorage.getUrl(profile.getAvatar()))", "com.social.storage.AvatarStorage.getUrl(profile.getAvatar())"], "Fixed commit": "d1539f561d4fd9908fcfbe1dbc040c6dcd2525c9", "Url": "https://api.github.com/repos/leocardena/social", "Date": "2017-04-30T23:08:13Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((user) != null) { startActivity(new android.content.Intent(this, ateam.com.clean.MainScreen.class)); finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/554/buggy-version/app.src.main.java.ateam.com.clean.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "6f3e7b3413db45eaf407b5d5a8ffa6cf68cf95ec", "Url": "https://api.github.com/repos/anchitgupt/Clean", "Date": "2017-10-12T18:27:54Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["main.persistence.user.UserRepository.findByUsername((((reg.getUsername()) + \"#\") + (reg.getBnt())))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (dbUser == null) { main.domain.user.User user = new main.domain.user.User().setUsername((((reg.getUsername()) + \"#\") + (reg.getBnt()))).setPassword(shaService.getEncrypted(reg.getPassword())); userRepository.save(user); return user; }else { return dbUser; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/3274/buggy-version/src.main.java.main.facade.RESTController.RegistrationRestController.java", "BodyUseAPI": [], "Fixed commit": "75b25ad49a6315f7e76877e5ea1a725cc0702393", "Url": "https://api.github.com/repos/tincher/tincher2", "Date": "2017-06-28T21:54:56Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fromDirectMember) groupedNames.add(name);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/360/buggy-version/ExapusRAP.src.exapus.model.metrics.NumberReferencedDistinctAPIElements.java", "BodyUseAPI": [], "Fixed commit": "5ed7812686e796859433b19227f6045656993d14", "Url": "https://api.github.com/repos/cderoove/exapus", "Date": "2013-01-10T10:16:34Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!((dialog.getValue()) instanceof java.lang.String)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/4224/buggy-version/src.net.bubbaland.trivia.client.AddTabDialog.java", "BodyUseAPI": [], "Fixed commit": "0660b2bfb36e8f09e57e6e45f00ca16410e5977f", "Url": "https://api.github.com/repos/bubba0077/Trivia", "Date": "2013-10-27T17:54:57Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (resultCode == 0) { finish(); }else { com.bloc.bloquery.BloQueryApplication.getSharedDataSource().setCurrentUser(((com.parse.models.BloQueryUser) (com.parse.models.BloQueryUser.getCurrentUser()))); com.bloc.bloquery.ui.fragments.QuestionsFragment qf = new com.bloc.bloquery.ui.fragments.QuestionsFragment(); currentFragment = qf; getFragmentManager().beginTransaction().add(R.id.fl_activity_main, qf, \"Question\").commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/4731/buggy-version/app.src.main.java.com.bloc.bloquery.ui.activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "ca56d8b351ea5859c55087dbc9f9fa21029c4e50", "Url": "https://api.github.com/repos/MkWf/android-bloquery", "Date": "2015-10-05T22:39:37Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["quiz.QuizManager.getQuiz(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((quiz.getPreviousId()) != (-1)) { deleteQuiz(quiz.getPreviousId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/1274/buggy-version/src.quiz.QuizManager.java", "BodyUseAPI": ["quiz.QuizManager.deleteQuiz(quiz.getPreviousId())", "quiz.Quiz.getPreviousId()"], "Fixed commit": "26c4a0fe4e581db33ef79128c742f09114d6ed8b", "Url": "https://api.github.com/repos/chantat/CS108FinalProject", "Date": "2012-12-08T01:53:14Z"},
{"Line": "=>399", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((prevTok instanceof ca.dioo.android.dioo_calc.ExpressionTree.Node) && ((((ca.dioo.android.dioo_calc.ExpressionTree.Node) (prevTok)).getType()) == (ca.dioo.android.dioo_calc.ExpressionTree.NodeType.MULT))) { }else { throw new java.lang.Error((n + \" is not a unary operator\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/5295/buggy-version/src.ca.dioo.android.ExpressionTree.java", "BodyUseAPI": [], "Fixed commit": "bf90e8b21afc272e3fd084ace6eacea5cba814be", "Url": "https://api.github.com/repos/diotteo/android-calculator", "Date": "2016-06-04T09:12:23Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.nju.dessert.service.AddressServiceImpl.getDefaultAddress(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (aid == (address.getId())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/8864/buggy-version/src.main.java.edu.nju.dessert.service.AddressServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "efa129e37793a6b8d01d0b317c966c1eff8cfc75", "Url": "https://api.github.com/repos/JaneLdq/dessert-house", "Date": "2016-06-27T03:54:09Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((score.getId()) > 0) syncManager.addScore(score);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/7716/buggy-version/app.src.main.java.fr.istic.masteru.android.activities.MatchActivity.java", "BodyUseAPI": ["fr.istic.masteru.android.utils.ScoreSyncManager.addScore(fr.istic.masteru.android.automate.Score)"], "Fixed commit": "c7a668fcf946613ab34b05da0935ffc09b4134ba", "Url": "https://api.github.com/repos/ISTIC-TENNIS/android", "Date": "2014-11-12T14:24:21Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(char)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (idxEquals >= 0) { _key = newCookie.substring(0, idxEquals); _value = newCookie.substring((idxEquals + 1), newCookie.indexOf(';')); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/7063/buggy-version/src.com.jbidwatcher.util.http.Cookie.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.substring(int,int)"], "Fixed commit": "9bd3fffd5737f2137c449299678f3b504a36f6c9", "Url": "https://api.github.com/repos/hartmut-co-uk/jbidwatcher", "Date": "2016-04-23T15:12:50Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((frames) == null) { snorri.main.Debug.warning(\"animation with null frames\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/1355/buggy-version/src.snorri.animations.Animation.java", "BodyUseAPI": [], "Fixed commit": "b5618c234c2bf6f018476805fff92687fc907984", "Url": "https://api.github.com/repos/SnorriDev/thoth", "Date": "2017-08-04T03:37:50Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((defaultCMsg.isEndOfMsgAdded()) && (defaultCMsg.isEmpty())) { ctx.writeAndFlush(LastHttpContent.EMPTY_LAST_CONTENT); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/1294/buggy-version/http.netty.components.org.wso2.carbon.transport.http.netty.src.main.java.org.wso2.carbon.transport.http.netty.listener.ResponseCallback.java", "BodyUseAPI": [], "Fixed commit": "cae927aab5e23e416c87afed9bfef58f6f03ff51", "Url": "https://api.github.com/repos/Megala21/carbon-transports", "Date": "2017-01-25T08:01:00Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) < 26) { android.widget.Toast.makeText(getActivity(), \"Add to home screen not supported\", Toast.LENGTH_SHORT).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/3551/buggy-version/app.src.main.java.android.support.v17.leanback.supportleanbackshowcase.app.rows.DynamicRowsFragment.java", "BodyUseAPI": [], "Fixed commit": "8a3784d885f14507b7b4a26330cab38b800559cd", "Url": "https://api.github.com/repos/lijingjiang/leanback-showcase-1", "Date": "2017-07-21T18:48:24Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cost < 0) { throw new java.lang.IllegalArgumentException(\"Cost must be positive\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/1965/buggy-version/Cat.java", "BodyUseAPI": [], "Fixed commit": "c1141e73a889d45ed6f9acb489e2128e889e06c6", "Url": "https://api.github.com/repos/dmgilmour/SQA-EX4", "Date": "2017-06-15T17:52:08Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentMusic) != null) { currentMusic.stop(); currentVolume = maxVolume; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/5023/buggy-version/core.src.at.juggle.gdx.SoundManager.java", "BodyUseAPI": [], "Fixed commit": "3921845241429bc9939e8b87290d9d2baa122d6a", "Url": "https://api.github.com/repos/dermotte/GdxGameSkeleton", "Date": "2016-02-17T14:59:42Z"},
{"Line": "=>697", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((lastImage.position) + (lastImage.length)) >= (in.length())) { in.seek(((lastImage.position) + 16)); }else { in.seek(((lastImage.position) + (lastImage.length))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/2461/buggy-version/components.formats-gpl.src.loci.formats.in.NativeND2Reader.java", "BodyUseAPI": ["loci.formats.in.NativeND2Reader.seek(long)", "loci.formats.in.NativeND2Reader.seek(long)"], "Fixed commit": "f7483f3a03d0e562ea34d443489e2b33f2dcb294", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2017-08-29T00:01:18Z"},
{"Line": "=>1137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((imageOffsets.get(i)) - length) != (offsetDiff + 8)) { if (i == 0) { fixByteCounts = true; } imageOffsets.remove(i); imageLengths.remove(i); i--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/2461/buggy-version/components.formats-gpl.src.loci.formats.in.NativeND2Reader.java", "BodyUseAPI": ["java.util.ArrayList<int[]>.remove(int)", "java.util.ArrayList<java.lang.Long>.remove(int)"], "Fixed commit": "f7483f3a03d0e562ea34d443489e2b33f2dcb294", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2017-08-29T00:01:18Z"},
{"Line": "=>992", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.hsmonkey.weijifen.util.CollectionUtils.newArrayList(array.length())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (deviceBeanList != null) { for (com.hsmonkey.weijifen.biz.bean.DeviceBean deviceBean : deviceBeanList) { java.util.Date alarmTime = com.hsmonkey.weijifen.util.DateUtil.parseNoException(deviceBean.getAlarmBean().getAlarmTime()); if ((alarmTime != null) && (com.hsmonkey.weijifen.util.DateUtil.isDateAfter(alarmTime, lastAlarmTime))) { lastAlarmTime = alarmTime; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/8806/buggy-version/src.main.java.com.hsmonkey.weijifen.biz.ao.impl.UserAOImpl.java", "BodyUseAPI": [], "Fixed commit": "44219f631970351bc7ff94b36b0bde72f2cc5ee4", "Url": "https://api.github.com/repos/niepeng/wenshiplatform", "Date": "2017-04-26T14:42:38Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.net.ConnectivityManager.getActiveNetworkInfo()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (networkInfo != null) { setSummaryText(com.android.settings.changephone.DeviceInfo.KEY_NETWORK_EXTRA_INFO, networkInfo.getExtraInfo()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/7916/buggy-version/src.com.android.settings.changephone.DeviceInfo.java", "BodyUseAPI": ["com.android.settings.changephone.DeviceInfo.setSummaryText(java.lang.String,networkInfo.getExtraInfo())", "android.net.NetworkInfo.getExtraInfo()"], "Fixed commit": "7731fa7d3473ce62639d946528b42db3382d7809", "Url": "https://api.github.com/repos/ssun125/platform_settings", "Date": "2016-05-03T17:15:43Z"},
{"Line": "=>389", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["shishkoam.weather.database.DBHelper.readFirstData()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (object == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/5513/buggy-version/app.src.main.java.shishkoam.weather.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "f783e3002f40b25247f8fd474002918a5ee6bb89", "Url": "https://api.github.com/repos/shishkoam/weatherApi", "Date": "2017-02-09T11:38:36Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (screen_name != null) return screen_name;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/4805/buggy-version/User.java", "BodyUseAPI": [], "Fixed commit": "1ea3d24c2ecb77297d52e602600116736ed999e8", "Url": "https://api.github.com/repos/KevinLee00/BuzMo", "Date": "2016-11-25T23:50:53Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (null != header) { context.put(header.getName(), header.getValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/7038/buggy-version/src.main.java.org.realityforge.gwt.webpoller.client.AbstractHttpRequestFactory.java", "BodyUseAPI": ["com.google.gwt.http.client.Header.getName()", "com.google.gwt.http.client.Header.getValue()", "java.util.HashMap<java.lang.String, java.lang.String>.put(header.getName(),header.getValue())"], "Fixed commit": "5032d418ca6728da03507b79afbd417dc68fc207", "Url": "https://api.github.com/repos/realityforge/gwt-webpoller", "Date": "2014-07-05T22:44:09Z"},
{"Line": "=>884", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (gradesSplit[i].equals(\"12gte\")) { pnlAddFilters.add(createTagsLabel(org.ednovo.gooru.client.mvp.gsearch.SearchAbstractView.i18n.GL3084(), \"gradePanel\")); }else { pnlAddFilters.add(createTagsLabel((((org.ednovo.gooru.client.mvp.gsearch.SearchAbstractView.i18n.GL0325()) + \" \") + (gradesSplit[i])), \"gradePanel\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/4639/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.gsearch.SearchAbstractView.java", "BodyUseAPI": ["com.google.gwt.user.client.ui.FlowPanel.add(org.ednovo.gooru.client.uc.CloseLabelSetting)", "org.ednovo.gooru.client.mvp.gsearch.SearchAbstractView<T>.createTagsLabel((((org.ednovo.gooru.client.mvp.gsearch.SearchAbstractView.i18n.GL0325()) + \" \") + (gradesSplit[i])),java.lang.String)"], "Fixed commit": "5d250b81a1abff10b33713a61ea5766dc6f7b32a", "Url": "https://api.github.com/repos/mitraj/Gooru-Web", "Date": "2015-05-12T09:38:46Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(org.slf4j.impl.LibgdxLogger.PROPERTIES_FILE_HANDLE.isDirectory())) { if (org.slf4j.impl.LibgdxLogger.PROPERTIES_FILE_HANDLE.extension().equals(\"xml\")) { try { org.slf4j.impl.libgdx.XmlParser.parseExcludeInclude(org.slf4j.impl.LibgdxLogger.PROPERTIES_FILE_HANDLE); } catch (java.io.IOException e) { e.printStackTrace(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/7995/buggy-version/src.main.java.org.slf4j.impl.LibgdxLogger.java", "BodyUseAPI": ["org.slf4j.impl.LibgdxLogger.PROPERTIES_FILE_HANDLE.extension().equals(java.lang.String)", "org.slf4j.impl.libgdx.XmlParser.parseExcludeInclude(com.badlogic.gdx.files.FileHandle)", "com.badlogic.gdx.files.FileHandle.extension()"], "Fixed commit": "9b321738e18dd50730d354d786e92cd2919d7d6c", "Url": "https://api.github.com/repos/Longri/slf4j-libgdx", "Date": "2017-02-08T08:40:33Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((xmlFile == null) || (xmlFile.isDirectory())) return config;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/7995/buggy-version/src.main.java.org.slf4j.impl.libgdx.XmlParser.java", "BodyUseAPI": [], "Fixed commit": "9b321738e18dd50730d354d786e92cd2919d7d6c", "Url": "https://api.github.com/repos/Longri/slf4j-libgdx", "Date": "2017-02-08T08:40:33Z"},
{"Line": "=>701", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.stanford.nlp.pipeline.CoreMap.get(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (foundAuthor != null) { java.util.regex.Pattern p = java.util.regex.Pattern.compile(foundAuthor); java.util.regex.Matcher matcher = p.matcher(sectionStartTagToken.word()); if (matcher.find()) { int authorMentionStart = (matcher.start()) + sectionStartTagCharBegin; int authorMentionEnd = (matcher.end()) + sectionStartTagCharBegin; currSectionCoreMap.set(CoreAnnotations.SectionAuthorCharacterOffsetBeginAnnotation.class, authorMentionStart); currSectionCoreMap.set(CoreAnnotations.SectionAuthorCharacterOffsetEndAnnotation.class, authorMentionEnd); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/6415/buggy-version/src.edu.stanford.nlp.pipeline.CleanXmlAnnotator.java", "BodyUseAPI": ["java.util.regex.Pattern.compile(java.lang.String)"], "Fixed commit": "a42a13ed9d4813b92510ccd4b0ba012c341b2905", "Url": "https://api.github.com/repos/shantanusharma/corenlp", "Date": "2017-06-07T11:30:06Z"},
{"Line": "=>838", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (errorCode == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/922/buggy-version/server.operations.src.main.java.org.kaaproject.kaa.server.operations.service.akka.actors.core.EndpointActorMessageProcessor.java", "BodyUseAPI": [], "Fixed commit": "43c7e2bd2b94b2f41311b59416a371df7223d5b7", "Url": "https://api.github.com/repos/kaaproject/kaa", "Date": "2015-01-30T16:17:31Z"},
{"Line": "=>1527", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((money.getRawEconomyHook()) != null) { money.getRawEconomyHook().switchBalance(player.getName(), from, to); alert = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/3042/buggy-version/src.main.java.com.turt2live.antishare.listener.BaseListener.java", "BodyUseAPI": ["money.getRawEconomyHook().switchBalance(player.getName(),org.bukkit.GameMode,org.bukkit.GameMode)", "com.turt2live.antishare.manager.MoneyManager.getRawEconomyHook()"], "Fixed commit": "b3a4518b544df38915adf499d40cdfde5bdcbfc2", "Url": "https://api.github.com/repos/turt2live/AntiShare", "Date": "2013-02-15T02:22:49Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((d.getItemInHand().getType()) == (org.bukkit.Material.BOW)) || ((d.getItemInHand().getType()) == (org.bukkit.Material.FISHING_ROD))) { return (be.Balor.bukkit.AdminCmd.ACHelper.getInstance().getDeathMessage(\"ranged\")) + (d.getDisplayName()); }else if ((d.getItemInHand().getType()) == (org.bukkit.Material.POTION)) { return (be.Balor.bukkit.AdminCmd.ACHelper.getInstance().getDeathMessage(\"potion\")) + (d.getDisplayName()); }else { return (be.Balor.bukkit.AdminCmd.ACHelper.getInstance().getDeathMessage(\"melee\")) + (d.getDisplayName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/5509/buggy-version/src.main.java.be.Balor.Listeners.Features.ACDeathListener.java", "BodyUseAPI": ["d.getItemInHand().getType()", "org.bukkit.entity.Player.getItemInHand()", "org.bukkit.entity.Player.getDisplayName()", "org.bukkit.entity.Player.getDisplayName()", "org.bukkit.entity.Player.getDisplayName()"], "Fixed commit": "f9cf8aace00ac84b6ca0c69716f384ba95539d41", "Url": "https://api.github.com/repos/Belphemur/AdminCmd", "Date": "2014-03-15T19:22:16Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (main.Game.s.getarenacreated()) { if ((xoffset) > (((main.Game.s.arena.getWW()) * 30) - (width))) { xoffset = ((main.Game.s.arena.getWW()) * 30) - (width); xoffsetacc = 0; } if ((yoffset) > (((main.Game.s.arena.getWH()) * 30) - (height))) { yoffset = ((main.Game.s.arena.getWH()) * 30) - (height); yoffsetacc = 0; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/4153/buggy-version/src.main.Game.java", "BodyUseAPI": ["main.Game.s.arena.getWW()", "main.Game.s.arena.getWH()", "main.Game.s.arena.getWW()", "main.Game.s.arena.getWH()"], "Fixed commit": "edcab28599b45d9d276fac71838cc4e6ef764a24", "Url": "https://api.github.com/repos/kalasnokov/OOWDTgit", "Date": "2015-02-23T18:25:51Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (timeGap > 0) { timeStr = timeGap + \"\u79d2\u524d\"; }else { timeStr = \"\u521a\u521a\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/1183/buggy-version/src.com.toraysoft.utils.format.TimeUtil.java", "BodyUseAPI": [], "Fixed commit": "d00ceda103642736dff52a2209cb1b729e4f9d50", "Url": "https://api.github.com/repos/toray/torayUtils-lib", "Date": "2014-10-15T18:38:46Z"},
{"Line": "=>453", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getSource()) == (optionsPanel.exit)) { optionsPanel.setPanelInvisible(); if (!(optionsPanel.flagOptions)) { optionsPanel.panelRestart(); } }else if ((e.getSource()) == (optionsPanel.musicButton)) { }else if ((e.getSource()) == (optionsPanel.soundFXButton)) { }else { java.lang.System.exit(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/4809/buggy-version/Mastermind.src.we.software.gui.MainMenu.java", "BodyUseAPI": ["java.awt.event.ActionEvent.getSource()", "we.software.gui.MainMenu.Options.panelRestart()", "java.awt.event.ActionEvent.getSource()", "we.software.gui.MainMenu.Options.setPanelInvisible()"], "Fixed commit": "a96d858ab680d795f8e38d65ce096ceef9ae9a0c", "Url": "https://api.github.com/repos/V4570/mastermind-we", "Date": "2017-03-31T01:35:50Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.ContentValues.getAsString(ServerModel.PADPREFIX)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(final_prefix.endsWith(prefix))) { final_prefix = final_prefix + prefix; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/8559/buggy-version/app.src.main.java.com.mikifus.padland.Dialog.NewServerDialog.java", "BodyUseAPI": [], "Fixed commit": "8c71130d64d2e12315e71fe97840e6a5d04ce6cd", "Url": "https://api.github.com/repos/mikifus/padland", "Date": "2017-10-25T21:52:18Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(orderedElements.contains(min))) orderedElements.add(min);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/9056/buggy-version/src.massDistribution.MassDistribution.java", "BodyUseAPI": ["java.util.ArrayList<interfaces.IFocalElement>.add(interfaces.IFocalElement)"], "Fixed commit": "f57eaea0212b73f704e7abfea9a0d0c90f1801a4", "Url": "https://api.github.com/repos/yyuzhong/dempstershaferlib", "Date": "2016-03-14T22:13:10Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((com.password.manager.gui.helper.AlertDialogHelper.alertDialogHelper.dialog) != null) { if (com.password.manager.gui.helper.AlertDialogHelper.alertDialogHelper.dialog.isShowing()) { com.password.manager.gui.helper.AlertDialogHelper.alertDialogHelper.dialog.dismiss(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/6393/buggy-version/app.src.main.java.com.password.manager.gui.helper.AlertDialogHelper.java", "BodyUseAPI": ["android.app.AlertDialog.isShowing()", "android.app.AlertDialog.dismiss()"], "Fixed commit": "a6f56ac04565577314923f2e315685452f84ca5b", "Url": "https://api.github.com/repos/ClemensGerstung/PasswordManager", "Date": "2015-06-02T08:27:33Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (itinerary.main.Parser.extractFirstWord(arg).equals(itinerary.main.Parser.KEYWORDS[2])) { textAfterKeyword = arg.split(((itinerary.main.Parser.KEYWORDS[2]) + \" \"))[1]; }else { textAfterKeyword = arg.split(((\" \" + (itinerary.main.Parser.KEYWORDS[2])) + \" \"))[1]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/2478/buggy-version/ProjectItinerary.src.itinerary.main.Parser.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)", "java.lang.String.split(java.lang.String)"], "Fixed commit": "7d95e8f66efc3a7a786053d6d3a56bec5d4103e7", "Url": "https://api.github.com/repos/cs2103jan2015-w14-2j/main", "Date": "2015-03-15T16:19:32Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (itinerary.main.Parser.extractFirstWord(arg).equals(itinerary.main.Parser.KEYWORDS[3])) { textAfterKeyword = arg.split(((itinerary.main.Parser.KEYWORDS[3]) + \" \"))[1]; }else { textAfterKeyword = arg.split(((\" \" + (itinerary.main.Parser.KEYWORDS[3])) + \" \"))[1]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/2478/buggy-version/ProjectItinerary.src.itinerary.main.Parser.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)", "java.lang.String.split(java.lang.String)"], "Fixed commit": "7d95e8f66efc3a7a786053d6d3a56bec5d4103e7", "Url": "https://api.github.com/repos/cs2103jan2015-w14-2j/main", "Date": "2015-03-15T16:19:32Z"},
{"Line": "=>341", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (n == null) { out.writeByte(de.jpaw.bonaparte.core.NULL_FIELD); }else { writeVarInt(n); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/2118/buggy-version/bonaparte-core.src.main.java.de.jpaw.bonaparte.core.ExternalizableComposer.java", "BodyUseAPI": ["de.jpaw.bonaparte.core.ExternalizableComposer.writeVarInt(java.lang.Integer)"], "Fixed commit": "00db14d608f14d75d641a594bc04cfea587a1842", "Url": "https://api.github.com/repos/jpaw/bonaparte-java", "Date": "2012-10-23T19:08:51Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (values == null) { return java.util.Collections.emptyMap(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/248/buggy-version/thirdeye.thirdeye-dashboard.src.main.java.com.linkedin.thirdeye.dashboard.resources.ContributorDataProvider.java", "BodyUseAPI": [], "Fixed commit": "0ba5f9e766f8ac9298c2bc159562532238ac88d5", "Url": "https://api.github.com/repos/linkedin/pinot", "Date": "2015-11-03T23:06:49Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jtrfp.trcl.core.TR.twosComplimentSubtract(double[],double[],double[])"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((((delta[0]) == 0) && ((delta[1]) == 0)) && ((delta[2]) == 0)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/7084/buggy-version/src.main.java.org.jtrfp.trcl.beh.CollidesWithTunnelWalls.java", "BodyUseAPI": [], "Fixed commit": "37f1cfb225454a4a8bca69512a233d7e88b30d68", "Url": "https://api.github.com/repos/jtrfp/terminal-recall", "Date": "2015-02-08T09:22:12Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.avaje.ebeaninternal.api.LoadBeanBuffer.getBeanDescriptor()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (desc.isSoftDelete()) { desc.setSoftDeleteValue(ebi.getOwner()); }else { com.avaje.ebeaninternal.api.LoadBeanRequest.logger.info(((((\"Lazy loading unsuccessful for type:\" + (desc.getName())) + \" id:\") + id) + \" - expecting when bean has been deleted\")); ebi.setLazyLoadFailure(id); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/3569/buggy-version/src.main.java.com.avaje.ebeaninternal.api.LoadBeanRequest.java", "BodyUseAPI": ["com.avaje.ebeaninternal.server.deploy.BeanDescriptor<?>.setSoftDeleteValue(ebi.getOwner())", "com.avaje.ebeaninternal.server.deploy.BeanDescriptor<?>.getName()", "org.slf4j.Logger.info(((((\"Lazy loading unsuccessful for type:\" + (desc.getName())) + \" id:\") + id) + \" - expecting when bean has been deleted\"))"], "Fixed commit": "d218fff374304bbf0e5410840ffbc392e98fca57", "Url": "https://api.github.com/repos/FOCONIS/ebean", "Date": "2016-08-31T11:03:00Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.synapse.MessageContext.getConfigurationContext()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (cc == null) { handleException(\"Error while retrieving ConfigurationContext from messageContext\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/782/buggy-version/components.apimgt.org.wso2.carbon.apimgt.gateway.src.main.java.org.wso2.carbon.apimgt.gateway.handlers.throttling.APIThrottleHandler.java", "BodyUseAPI": [], "Fixed commit": "9ee6b325740d29d739eb90f308d582c700ef0199", "Url": "https://api.github.com/repos/harsha89/carbon-apimgt", "Date": "2016-01-25T06:35:23Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<java.lang.String>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (name.equals(\"Day 1\")) { java.lang.String mname = (name.replaceAll(\" \", \"\")) + \"_content\"; int n = context.getResources().getStringArray(context.getResources().getIdentifier(mname, \"array\", context.getPackageName())).length; holder.size.setText((n + \" words\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/3420/buggy-version/app.src.main.java.app.learnkannada.com.learnkannadakannadakali.ListViewAdapter.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "4ac5399ec0c449d5f70e1c71706dffc39c1e37e4", "Url": "https://api.github.com/repos/varunam/LearnKannada_KannadaKali", "Date": "2017-11-20T18:21:48Z"},
{"Line": "=>409", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mkhldvdv.logiweb.services.UserServices.getUser(long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(driver.getLogin().equals(request.getUserPrincipal().getName()))) { model.addAttribute(\"error\", \"You are not allowed to get the info about other users\"); return \"errorDriver\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/1487/buggy-version/src.main.java.com.mkhldvdv.logiweb.controllers.LogiwebController.java", "BodyUseAPI": [], "Fixed commit": "abc4861153cc2f00e75635aac0afaa4816cafb06", "Url": "https://api.github.com/repos/mkhldvdv/Logiweb-spring", "Date": "2016-01-05T12:03:58Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mkhldvdv.logiweb.dao.impl.UserDaoImpl.getById(long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((user.getTruck()) != null) { for (com.mkhldvdv.logiweb.entities.User driver : user.getTruck().getDrivers()) { coDriversList.add(driver.getId()); } coDriversList.remove(driverId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/1487/buggy-version/src.main.java.com.mkhldvdv.logiweb.services.impl.UserServicesImpl.java", "BodyUseAPI": ["user.getTruck().getDrivers()", "com.mkhldvdv.logiweb.entities.User.getTruck()"], "Fixed commit": "abc4861153cc2f00e75635aac0afaa4816cafb06", "Url": "https://api.github.com/repos/mkhldvdv/Logiweb-spring", "Date": "2016-01-05T12:03:58Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mkhldvdv.logiweb.dao.impl.UserDaoImpl.getById(long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((user.getTruck()) != null) { regNum = user.getTruck().getRegNum(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/1487/buggy-version/src.main.java.com.mkhldvdv.logiweb.services.impl.UserServicesImpl.java", "BodyUseAPI": ["user.getTruck().getRegNum()", "com.mkhldvdv.logiweb.entities.User.getTruck()"], "Fixed commit": "abc4861153cc2f00e75635aac0afaa4816cafb06", "Url": "https://api.github.com/repos/mkhldvdv/Logiweb-spring", "Date": "2016-01-05T12:03:58Z"},
{"Line": "=>1721", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (resourceTagsList.get(i).getLabel().contains(i18n.GL1664())) { tagLabel = resourceTagsList.get(i).getLabel().replace(i18n.GL1664(), \"\").replaceAll(\" \", \"\").replace(\":\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/6334/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.play.resource.body.ResourcePlayerMetadataView.java", "BodyUseAPI": ["resourceTagsList.get(i).getLabel().replace(i18n.GL1664(), \"\").replaceAll(\" \", \"\").replace(java.lang.String,java.lang.String)", "resourceTagsList.get(i).getLabel().replace(i18n.GL1664(), \"\").replaceAll(java.lang.String,java.lang.String)", "java.util.List<org.ednovo.gooru.shared.model.content.ResourceTagsDo>.get(int)", "resourceTagsList.get(i).getLabel()", "resourceTagsList.get(i).getLabel().replace(i18n.GL1664(),java.lang.String)", "org.ednovo.gooru.shared.i18n.MessageProperties.GL1664()"], "Fixed commit": "8e558be599deab3a0959cc65900937f81f5e0ce3", "Url": "https://api.github.com/repos/anilgooru/Gooru-Web", "Date": "2014-07-25T08:45:19Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dk.statsbiblioteket.medieplatform.autonomous.iterator.common.NodeEndParsingEvent.getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((eventName.lastIndexOf(\"/\")) == ((eventName.length()) - 1)) { eventName = eventName.substring(0, ((eventName.length()) - 2)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/5919/buggy-version/src.main.java.dk.statsbiblioteket.medieplatform.newspaper.manualQA.AltoWordAccuracyChecker.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "84334bccaa66497ae35c505a32e2695d5fc0df3b", "Url": "https://api.github.com/repos/statsbiblioteket/newspaper-manualQA-flagger", "Date": "2014-03-13T13:38:04Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(processingEnv.getTypeUtils().isAssignable(typeElement.asType(), processingEnv.getElementUtils().getTypeElement(net.hybridhacker.visualslice.plugins.SlicePlugin.class.getCanonicalName()).asType()))) { throw new net.hybridhacker.visualslice.plugins.IllegalPluginDefinitionException((((typeElement.asType().toString()) + \" does not implement \") + (net.hybridhacker.visualslice.plugins.SlicePlugin.class.getCanonicalName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/3371/buggy-version/Core.src.main.java.net.hybridhacker.visualslice.plugins.PluginAutoRegisterProcessor.java", "BodyUseAPI": ["javax.lang.model.element.TypeElement.asType()", "javax.lang.model.type.TypeMirror.toString()", "java.lang.Class.getCanonicalName()"], "Fixed commit": "487f96593dc852c6280a08411ce71499d1a812c7", "Url": "https://api.github.com/repos/Flaflo/VisualSlice", "Date": "2017-02-08T14:53:39Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (entity instanceof ru.tehkode.modifyworld.Item) { entityName = getItemPermission(((ru.tehkode.modifyworld.Item) (entity)).getItemStack()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/2411/buggy-version/src.main.java.ru.tehkode.modifyworld.ModifyworldListener.java", "BodyUseAPI": [], "Fixed commit": "7c3d4f781f868842d10309b8cfd477d409fe78be", "Url": "https://api.github.com/repos/PEXPlugins/Modifyworld", "Date": "2012-06-07T08:10:00Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (entity instanceof ru.tehkode.modifyworld.ComplexEntityPart) { return getEntityName(((ru.tehkode.modifyworld.ComplexEntityPart) (entity)).getParent()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/2411/buggy-version/src.main.java.ru.tehkode.modifyworld.ModifyworldListener.java", "BodyUseAPI": [], "Fixed commit": "7c3d4f781f868842d10309b8cfd477d409fe78be", "Url": "https://api.github.com/repos/PEXPlugins/Modifyworld", "Date": "2012-06-07T08:10:00Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (s.isNull(((jbse.val.Reference) (v)))) { return \"null\"; }else { return s.getObject(((jbse.val.Reference) (v))).getType(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/8994/buggy-version/src.jbse.apps.StateFormatterTrace.java", "BodyUseAPI": ["s.getObject(((jbse.val.Reference) (v))).getType()", "jbse.mem.State.getObject(jbse.val.Value)"], "Fixed commit": "ee9f17a40e12d65a27fb099a1869c3a18444815a", "Url": "https://api.github.com/repos/pietrobraione/jbse", "Date": "2016-07-04T08:44:11Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["snmp.basic.AgentNode.getChild(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (anode == null) node.createChild(\"edit\").setAction(act).build().setSerializable(false); else anode.setAction(act);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/471/buggy-version/src.main.java.snmp.basic.AgentNode.java", "BodyUseAPI": ["org.dsa.iot.dslink.node.Node.setAction(org.dsa.iot.dslink.node.actions.Action)"], "Fixed commit": "5dd20e3c0db01948ddbc69241464acdec842235a", "Url": "https://api.github.com/repos/IOT-DSA/dslink-java-snmp-basic", "Date": "2015-06-23T00:33:35Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (time < 60) return (\"\" + time) + (org.qii.weiciyuan.support.utils.GlobalContext.getInstance().getString(R.string.min));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/2950/buggy-version/src.org.qii.weiciyuan.support.utils.TimeTool.java", "BodyUseAPI": [], "Fixed commit": "05a4e511c281c2c261d8527a1c6a59df1649c6b5", "Url": "https://api.github.com/repos/qii/weiciyuan", "Date": "2012-08-29T09:02:22Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (calHour < 24) return (\"\" + calHour) + (org.qii.weiciyuan.support.utils.GlobalContext.getInstance().getString(R.string.hour));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/2950/buggy-version/src.org.qii.weiciyuan.support.utils.TimeTool.java", "BodyUseAPI": [], "Fixed commit": "05a4e511c281c2c261d8527a1c6a59df1649c6b5", "Url": "https://api.github.com/repos/qii/weiciyuan", "Date": "2012-08-29T09:02:22Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ruleml.oojdrew.util.Term.getSymbolString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((p5s.charAt(0)) == '+') { h = java.lang.Integer.parseInt(p5s.split(\":\")[0].substring(1)); }else { h = -(java.lang.Integer.parseInt(p5s.split(\":\")[0])); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/5573/buggy-version/src.main.java.org.ruleml.oojdrew.Builtins.TimeBuiltin.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "java.lang.String.substring(int)", "java.lang.String.split(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.String.split(java.lang.String)"], "Fixed commit": "1f3333bebf0a1614ee992b844487aa545bdd7157", "Url": "https://api.github.com/repos/greenTara/OOjDREW", "Date": "2012-11-14T22:06:43Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ruleml.oojdrew.util.Term.getSymbolString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((p5s.charAt(0)) == '+') { h = java.lang.Integer.parseInt(p5s.split(\":\")[0].substring(1)); }else { h = -(java.lang.Integer.parseInt(p5s.split(\":\")[0])); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/5573/buggy-version/src.main.java.org.ruleml.oojdrew.Builtins.DateBuiltin.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "java.lang.String.split(java.lang.String)", "java.lang.String.substring(int)", "java.lang.String.split(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "1f3333bebf0a1614ee992b844487aa545bdd7157", "Url": "https://api.github.com/repos/greenTara/OOjDREW", "Date": "2012-11-14T22:06:43Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ruleml.oojdrew.util.Term.getSymbolString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((timezone.charAt(0)) == '+') { h = java.lang.Integer.parseInt(timezone.split(\":\")[0].substring(1)); }else { h = -(java.lang.Integer.parseInt(timezone.split(\":\")[0])); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/5573/buggy-version/src.main.java.org.ruleml.oojdrew.Builtins.DateTimeBuiltin.java", "BodyUseAPI": ["java.lang.String.substring(int)", "java.lang.String.split(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.String.split(java.lang.String)"], "Fixed commit": "1f3333bebf0a1614ee992b844487aa545bdd7157", "Url": "https://api.github.com/repos/greenTara/OOjDREW", "Date": "2012-11-14T22:06:43Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((!(hasMoved)) && ((row) == 1)) && (finalRow == 3)) && ((col) == finalCol)) { if (((board[finalRow][finalCol]) == null) && ((board[(finalRow - 1)][finalCol]) == null)) { enPassant = true; return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/2760/buggy-version/Pieces.whitePawn.java", "BodyUseAPI": [], "Fixed commit": "9f2a13f00024d0847b0af4a2167f33191a0d54cd", "Url": "https://api.github.com/repos/Patosai/Chess", "Date": "2014-06-01T13:20:29Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) != null) { getActivity().runOnUiThread(new java.lang.Runnable() { @java.lang.Override public void run() { thumbnailImage.setImageURI(localUri); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/7592/buggy-version/WordPressEditor.src.main.java.org.wordpress.android.editor.ImageSettingsDialogFragment.java", "BodyUseAPI": [], "Fixed commit": "b3031d63ca3f7bd048bbeac8873251bcd11ccbe0", "Url": "https://api.github.com/repos/wordpress-mobile/WordPress-Editor-Android", "Date": "2015-11-05T16:42:36Z"},
{"Line": "=>2018", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sikuli.ide.CloseableTabbedPane.getTitleAt(_mainPane.getSelectedIndex())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (tabtitle.startsWith(\"*\")) tabtitle = tabtitle.substring(1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/1638/buggy-version/IDE.src.main.java.org.sikuli.ide.SikuliIDE.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "d772bbf75b162c51503324e62e9ddbdafa6ee60b", "Url": "https://api.github.com/repos/rssdev10/SikuliX-2014", "Date": "2014-04-27T16:24:11Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.ResultSet.getTimestamp(java.lang.String,java.util.Calendar)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((timestamp.getTime()) + delay) >= (java.lang.System.currentTimeMillis())) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/4524/buggy-version/updatetracker-lib.src.main.java.dk.statsbiblioteket.doms.updatetracker.improved.worklog.WorkLogPollDAO.java", "BodyUseAPI": [], "Fixed commit": "87f3c9e1ce4b0b27fc624bea703a1f2675196435", "Url": "https://api.github.com/repos/statsbiblioteket/doms-update-tracker", "Date": "2015-07-27T10:43:30Z"},
{"Line": "=>503", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((!(entry.getName().equals(\"history/revision-history.xml\"))) && (!(entry.getName().equals(\"history/_rels/revision-history.xml.rels\")))) && (!(entry.getName().equals(\"[Content_Types].xml\")))) { try { zos.putNextEntry(entry); info.mischka.vvord.Vvord.writeEntry(entry, is, zos); } catch (java.util.zip.ZipException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/4119/buggy-version/src.info.mischka.vvord.Vvord.java", "BodyUseAPI": ["info.mischka.vvord.Vvord.writeEntry(java.util.zip.ZipEntry,java.io.InputStream,java.util.zip.ZipOutputStream)", "java.util.zip.ZipOutputStream.putNextEntry(java.util.zip.ZipEntry)"], "Fixed commit": "7bf1df120cc3b4780be67093d2b97c104fbb9c7d", "Url": "https://api.github.com/repos/Jacob-Mischka/Vvord", "Date": "2014-02-12T19:48:50Z"},
{"Line": "=>482", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((!(entry.getName().equals(\"history/revision-history.xml\"))) && (!(entry.getName().equals(\"history/_rels/revision-history.xml.rels\")))) && (!(entry.getName().equals(\"[Content_Types].xml\")))) { try { zos.putNextEntry(entry); info.mischka.vvord.Vvord.writeEntry(entry, is, zos); } catch (java.util.zip.ZipException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/4119/buggy-version/src.info.mischka.vvord.Vvord.java", "BodyUseAPI": ["java.util.zip.ZipOutputStream.putNextEntry(java.util.zip.ZipEntry)", "info.mischka.vvord.Vvord.writeEntry(java.util.zip.ZipEntry,java.io.InputStream,java.util.zip.ZipOutputStream)"], "Fixed commit": "7bf1df120cc3b4780be67093d2b97c104fbb9c7d", "Url": "https://api.github.com/repos/Jacob-Mischka/Vvord", "Date": "2014-02-12T19:48:50Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(world instanceof net.minecraft.world.World)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/7663/buggy-version/src.main.java.forestry.arboriculture.blocks.BlockAbstractLeaves.java", "BodyUseAPI": [], "Fixed commit": "ee272de168b1d3d0c4bf445f4287c8119f98a400", "Url": "https://api.github.com/repos/ForestryMC/ForestryMC", "Date": "2017-10-12T09:55:06Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.os.Parcel.readLong()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (val != (-1)) { mUpdateDate = new java.util.Date(val); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/9103/buggy-version/src.com.JoshShoemaker.trailstatus.Trail.java", "BodyUseAPI": [], "Fixed commit": "82cdd8c4da4c1f59710f234ac53cf6e2adafc6a0", "Url": "https://api.github.com/repos/shoejosh/GHORBATrailStatus", "Date": "2013-04-14T17:30:03Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((soapMessage.getAttachments()) == null) { soapMessage.setAttachments(new java.util.ArrayList<org.apache.cxf.message.Attachment>()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/694/buggy-version/rt.ws.security.src.main.java.org.apache.cxf.ws.security.wss4j.AttachmentCallbackHandler.java", "BodyUseAPI": ["org.apache.cxf.binding.soap.SoapMessage.setAttachments(java.util.ArrayList<org.apache.cxf.message.Attachment>)"], "Fixed commit": "e6416bea1f95356e1bde5b903f9c136b509890d0", "Url": "https://api.github.com/repos/apache/cxf", "Date": "2016-01-05T16:32:46Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jp.gecko655.bot.hestia.HestiaReply.getMentionsTimeline(new twitter4j.Paging().count(20))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (replies.isEmpty()) { logger.log(java.util.logging.Level.INFO, \"Not yet replied. Stop.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/4297/buggy-version/src.main.java.jp.gecko655.bot.hestia.HestiaReply.java", "BodyUseAPI": [], "Fixed commit": "0e1aa5a7e7e42bd92b80dd7f1293c58cfc5b1102", "Url": "https://api.github.com/repos/gecko655/hestia", "Date": "2015-04-29T11:55:25Z"},
{"Line": "=>319", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((distances) == null) distances = calculateAllPairsShortestPath();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/3490/buggy-version/src.joshua.lattice.Lattice.java", "BodyUseAPI": [], "Fixed commit": "7565550748ef771ea34c1745556f73dc921206d5", "Url": "https://api.github.com/repos/joshua-decoder/joshua", "Date": "2014-09-26T14:39:28Z"},
{"Line": "=>744", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mc.isValiable())) { alertUser(\"bad mixConfig for sending\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/9004/buggy-version/Android.src.org.droidplanner.android.ruan.boxJostickFragment.java", "BodyUseAPI": [], "Fixed commit": "389d6906091c7b4c44e6351bd01e827dbe41b1bf", "Url": "https://api.github.com/repos/RuanJG/Tower", "Date": "2016-01-08T09:03:08Z"},
{"Line": "=>1242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isJostickDisconnected())) mUartConnect.sendMavPacket(pack);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/9004/buggy-version/Android.src.org.droidplanner.android.ruan.boxJostickFragment.java", "BodyUseAPI": [], "Fixed commit": "389d6906091c7b4c44e6351bd01e827dbe41b1bf", "Url": "https://api.github.com/repos/RuanJG/Tower", "Date": "2016-01-08T09:03:08Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.support.design.widget.BottomSheetBehavior.from(android.support.v4.widget.NestedScrollView)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((behavior.getState()) == (android.support.design.widget.BottomSheetBehavior.STATE_EXPANDED)) { catg.setVisibility(View.INVISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/3353/buggy-version/app.src.main.java.abhirojpanwar.mapia.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "847b5e13c35d847d0d4240970b64f7976ccd181b", "Url": "https://api.github.com/repos/abhiroj/Mapia", "Date": "2017-01-15T15:10:00Z"},
{"Line": "=>389", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((state) == (cn.nukkit.raknet.server.Session.STATE_CONNECTING_2)) { if (id == (CLIENT_CONNECT_DataPacket.ID)) { cn.nukkit.raknet.server.CLIENT_CONNECT_DataPacket dataPacket = new cn.nukkit.raknet.server.CLIENT_CONNECT_DataPacket(); dataPacket.buffer = packet.buffer; dataPacket.decode(); cn.nukkit.raknet.server.SERVER_HANDSHAKE_DataPacket pk = new cn.nukkit.raknet.server.SERVER_HANDSHAKE_DataPacket(); pk.address = this.address; pk.port = this.port; pk.sendPing = dataPacket.sendPing; pk.sendPong = (dataPacket.sendPing) + 1000L; pk.encode(); cn.nukkit.raknet.protocol.EncapsulatedPacket sendPacket = new cn.nukkit.raknet.protocol.EncapsulatedPacket(); sendPacket.reliability = 0; sendPacket.buffer = pk.buffer; this.addToQueue(sendPacket, RakNet.PRIORITY_IMMEDIATE); }else if (id == (CLIENT_HANDSHAKE_DataPacket.ID)) { cn.nukkit.raknet.server.CLIENT_HANDSHAKE_DataPacket dataPacket = new cn.nukkit.raknet.server.CLIENT_HANDSHAKE_DataPacket(); dataPacket.buffer = packet.buffer; dataPacket.decode(); if (((dataPacket.port) == (this.sessionManager.getPort())) || (!(this.sessionManager.portChecking))) { this.state = cn.nukkit.raknet.server.Session.STATE_CONNECTED; this.isTemporal = false; this.sessionManager.openSession(this); } } }else if (id == (CLIENT_DISCONNECT_DataPacket.ID)) { disconnect(\"client disconnect\"); }else if (id == (PING_DataPacket.ID)) { cn.nukkit.raknet.server.PING_DataPacket dataPacket = new cn.nukkit.raknet.server.PING_DataPacket(); dataPacket.buffer = packet.buffer; dataPacket.decode(); cn.nukkit.raknet.server.PONG_DataPacket pk = new cn.nukkit.raknet.server.PONG_DataPacket(); pk.pingID = dataPacket.pingID; pk.encode(); cn.nukkit.raknet.protocol.EncapsulatedPacket sendPacket = new cn.nukkit.raknet.protocol.EncapsulatedPacket(); sendPacket.reliability = 0; sendPacket.buffer = pk.buffer; this.addToQueue(sendPacket); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/3878/buggy-version/src.main.java.cn.nukkit.raknet.server.Session.java", "BodyUseAPI": [], "Fixed commit": "70670da9901f5179282bb94ccd16f4b738373e1a", "Url": "https://api.github.com/repos/2300206764/Nukkit", "Date": "2015-11-08T02:07:13Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tag.equals(Launcher.BEAN_NAME_DEFAULT_HANDLER)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/8548/buggy-version/src.name.livitski.tools.springlet.commands.HelpCommand.java", "BodyUseAPI": [], "Fixed commit": "e1d7edbec6ed1f21b273bde4cae9862a9e334c17", "Url": "https://api.github.com/repos/StanLivitski/Springlet", "Date": "2014-05-06T04:56:49Z"},
{"Line": "=>339", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (date == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/6525/buggy-version/lib-core.src.main.java.com.stratelia.webactiv.util.DateUtil.java", "BodyUseAPI": [], "Fixed commit": "fd53cdc7f392e11d3e018607e6c492cc9dc255e2", "Url": "https://api.github.com/repos/Silverpeas/Silverpeas-Core", "Date": "2012-06-19T10:30:50Z"},
{"Line": "=>347", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ccnode.codegenerator.genCode.PojoFieldInfo.getFieldName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((org.apache.commons.lang3.StringUtils.containsIgnoreCase(fieldName, \"updateTime\")) || (org.apache.commons.lang3.StringUtils.containsIgnoreCase(fieldName, \"updateTime\"))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/7218/buggy-version/src.main.java.com.ccnode.codegenerator.genCode.GenMapperService.java", "BodyUseAPI": [], "Fixed commit": "b236c41a19c2a633c5c511494cb1d4679d504605", "Url": "https://api.github.com/repos/zhengjunbase/codehelper.generator", "Date": "2017-04-10T12:13:43Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isWarning(errSignalProxy.entity)) errorLog.warn(errSignalProxy.entity); else errorLog.error(errSignalProxy.entity);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/7264/buggy-version/modules.holodeckb2b-core.src.main.java.org.holodeckb2b.ebms3.handlers.inflow.ProcessErrors.java", "BodyUseAPI": ["org.apache.commons.logging.Log.error(errSignalProxy.entity)", "org.apache.commons.logging.Log.warn(errSignalProxy.entity)"], "Fixed commit": "e19142193b1b384a8aa27a0e9024f356e59f0a9f", "Url": "https://api.github.com/repos/holodeck-b2b/Holodeck-B2B", "Date": "2016-11-11T08:25:13Z"},
{"Line": "=>575", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang.StringUtils.containsIgnoreCase(line, \"Provisioned tunnel:\")) { tunnelId = org.apache.commons.lang.StringUtils.substringAfter(line, \"Provisioned tunnel: \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/6624/buggy-version/src.main.java.com.saucelabs.ci.sauceconnect.AbstractSauceTunnelManager.java", "BodyUseAPI": ["org.apache.commons.lang.StringUtils.substringAfter(java.lang.String,java.lang.String)"], "Fixed commit": "3307ead23d0f1632931ea47d3a669f7cd620c515", "Url": "https://api.github.com/repos/saucelabs/ci-sauce", "Date": "2017-04-21T18:38:41Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (t instanceof java.io.IOException) { callbackError(\"connection_failed\", t); }else { t.printStackTrace(); callbackError(\"unknown_error\", t); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/5876/buggy-version/core.src.com.tsuru2d.engine.io.JsonResponseListener.java", "BodyUseAPI": ["com.tsuru2d.engine.io.JsonResponseListener.callbackError(java.lang.String,java.lang.Throwable)", "java.lang.Throwable.printStackTrace()", "com.tsuru2d.engine.io.JsonResponseListener.callbackError(java.lang.String,java.lang.Throwable)"], "Fixed commit": "03d442e0a332585bbaa145b9102c8c432d925e25", "Url": "https://api.github.com/repos/Tsuru2D/Tsuru2D-engine", "Date": "2015-11-01T17:59:21Z"},
{"Line": "=>471", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (selected) { return de.ovgu.featureide.fm.ui.editors.featuremodel.GUIBasics.createLineBorder(de.ovgu.featureide.fm.ui.properties.FMPropertyManager.getConcreteBorderColor(), 3); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/9082/buggy-version/plugins.de.ovgu.featureide.fm.ui.src.de.ovgu.featureide.fm.ui.properties.FMPropertyManager.java", "BodyUseAPI": [], "Fixed commit": "a6232a665510c48e82d1c89d28c6bd135a985aec", "Url": "https://api.github.com/repos/tthuem/FeatureIDE", "Date": "2014-09-10T11:57:51Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.status) != (Status.NOT_MODIFIED)) { sendBodyWithCorrectTransferAndEncoding(outputStream, pending); outputStream.flush(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/1916/buggy-version/core.src.main.java.org.nanohttpd.protocols.http.response.Response.java", "BodyUseAPI": [], "Fixed commit": "94ceba4c1ee34f3974ae64228f3a86dd2c7d2710", "Url": "https://api.github.com/repos/achelius/nanohttpd", "Date": "2017-09-22T09:00:05Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((SettingsFragment.selectedCardImage) == (-1)) { SettingsFragment.selectedCardImage = getActivity().getResources().getIdentifier(\"cardback1\", \"id\", getActivity().getPackageName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/8034/buggy-version/app.src.main.java.srk.syracuse.gameofcards.Fragments.PlayerListFragment.java", "BodyUseAPI": [], "Fixed commit": "d8aed9827f161e56b2ff96a0481e278aa16e5e2c", "Url": "https://api.github.com/repos/rohitramkumar308/GameOfCards", "Date": "2015-04-22T23:28:43Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((SettingsFragment.selectedTableImage) == (-1)) { SettingsFragment.selectedTableImage = getActivity().getResources().getIdentifier(\"table_back1\", \"id\", getActivity().getPackageName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/8034/buggy-version/app.src.main.java.srk.syracuse.gameofcards.Fragments.PlayerListFragment.java", "BodyUseAPI": [], "Fixed commit": "d8aed9827f161e56b2ff96a0481e278aa16e5e2c", "Url": "https://api.github.com/repos/rohitramkumar308/GameOfCards", "Date": "2015-04-22T23:28:43Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((statsHandler) != null) { statsHandler.finished(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/3335/buggy-version/Engine.src.main.java.hr.fer.zemris.ecf.lab.engine.task.OfflineExperimentHandler.java", "BodyUseAPI": [], "Fixed commit": "497464c9277f2a750049786b30c59d342b02310d", "Url": "https://api.github.com/repos/domagojstankovic/ECF_Lab", "Date": "2016-04-20T08:44:07Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mcbans.firestar.mcbans.request.jsonHandler.mainRequest(java.util.HashMap<java.lang.String, java.lang.String>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (response.get(\"result\").equals(\"w\")) { MCBans.broadcastPlayer(PlayerAdmin, ((org.bukkit.ChatColor.DARK_RED) + (MCBans.Language.getFormat(\"globalBanMessageWarning\", PlayerName, PlayerAdmin, Reason, PlayerIP)))); }else if (response.get(\"result\").equals(\"s\")) { MCBans.broadcastPlayer(PlayerAdmin, ((org.bukkit.ChatColor.DARK_RED) + (MCBans.Language.getFormat(\"globalBanMessageGroup\", PlayerName, PlayerAdmin, Reason, PlayerIP)))); }else if (response.get(\"result\").equals(\"a\")) { MCBans.broadcastPlayer(PlayerAdmin, ((org.bukkit.ChatColor.DARK_RED) + (MCBans.Language.getFormat(\"globalBanMessageAlready\", PlayerName, PlayerAdmin, Reason, PlayerIP)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/5970/buggy-version/src.com.mcbans.firestar.mcbans.pluginInterface.ban.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.util.HashMap<java.lang.String, java.lang.String>.get(java.lang.String)", "java.util.HashMap<java.lang.String, java.lang.String>.get(java.lang.String)"], "Fixed commit": "7a394c9d8fa9ba177a2a23a95a6bce4d47970008", "Url": "https://api.github.com/repos/Crashdoom/MCBans", "Date": "2011-09-12T20:45:15Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (polygon.hasExactlyTwoVertices()) { javax.vecmath.Point2d lineStart = polygon.getVertex(0); javax.vecmath.Point2d lineEnd = polygon.getVertex(1); double distance = us.ihmc.robotics.geometry.GeometryTools.distanceFromPointToLineSegment(pointX, pointY, lineStart, lineEnd); if (distance > epsilon) return false; return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/2135/buggy-version/IHMCRoboticsToolkit.src.us.ihmc.robotics.geometry.ConvexPolygon2dCalculator.java", "BodyUseAPI": ["us.ihmc.robotics.geometry.ConvexPolygon2d.getVertex(int)", "us.ihmc.robotics.geometry.ConvexPolygon2d.getVertex(int)"], "Fixed commit": "e71abbb5bde8260be1d2f05a6c17515d46e10da2", "Url": "https://api.github.com/repos/ihmcrobotics/ihmc-open-robotics-software", "Date": "2016-09-06T18:52:55Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!_repeat) { --counter; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/3724/buggy-version/VbBlaster.src.Consumer.java", "BodyUseAPI": [], "Fixed commit": "054e55bc53c725952e8b3bd08bb0e649e9a7721b", "Url": "https://api.github.com/repos/abhinavdangeti/cbTools", "Date": "2015-06-09T00:48:17Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (soot.boxing.transformation.BoxingTransformerUtility.isMethodIgnored(this)) { return methodToReturn; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/2447/buggy-version/src.soot.boxing.transformation.BoxingSootMethodRefImpl.java", "BodyUseAPI": [], "Fixed commit": "0f30c0d7fcfdaf6f9db41628522740bbc098fba5", "Url": "https://api.github.com/repos/anddann/soot", "Date": "2017-09-19T10:54:22Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.util.Objects.equals(DELIMITER, \"\\\\\")) { childs = real.split(\"\\\\\\\\\"); }else { childs = real.split(\"/\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/1782/buggy-version/src.htw.vs.virtuellesFileSystem.xmlPathCreate.java", "BodyUseAPI": [], "Fixed commit": "f1f802200cbc628cc5b72bf028d6a727b785e772", "Url": "https://api.github.com/repos/juunior/VS_VirtuellesFilesystem", "Date": "2017-09-21T20:34:06Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((myEllapsedTimeTextView.getText().toString()) != (getString(R.string.elapsed_time))) { myEllapsedTimeTextView.setText(hu.bivia.bivia.view.BiViaMainActivityView.formatElapsedMillis(ride.getRideTimeMs())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/8391/buggy-version/BMeterApp.BiVia.src.hu.bivia.bivia.view.BiViaMainActivityView.java", "BodyUseAPI": ["android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "5042e41f2480576a65ec618a89ee5a9ccdbb95d9", "Url": "https://api.github.com/repos/throbi/BiVia", "Date": "2013-11-27T18:38:05Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["MyDeque<int[]>.getTail()", "MyDeque<int[]>.getHead()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (h < t) { for (int i = h; i < t; i++) { out += \"[\"; for (int x = 0; x < (frontier.get(i).length); x++) { out += (frontier.get(i)[x]) + \",\"; } out += \"]\"; } }else { for (int i = h; i < (frontier.size()); i++) { out += \"[\"; for (int x = 0; x < (frontier.get(i).length); x++) { out += (frontier.get(i)[x]) + \",\"; } out += \"]\"; } for (int i = 0; i <= t; i++) { out += \"[\"; for (int x = 0; x < (frontier.get(i).length); x++) { out += (frontier.get(i)[x]) + \",\"; } out += \"]\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/2262/buggy-version/11BFS.Maze.java", "BodyUseAPI": [], "Fixed commit": "780375ae6d721d3a3445debcf3d806352fe9dc11", "Url": "https://api.github.com/repos/annabelleg/APCS2HW", "Date": "2015-04-15T17:05:26Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((next) != null) && (next.equals(prev))) { next = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/237/buggy-version/archaius2-core.src.main.java.com.netflix.archaius.config.AbstractConfig.java", "BodyUseAPI": [], "Fixed commit": "38ce115dcf8a73a37d3dc37d9e5e354a0209b650", "Url": "https://api.github.com/repos/howardyuan/archaius", "Date": "2015-10-12T20:36:16Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (recipientTeam == \"\") { recipientTeam = getNameForEmail(response.recipientEmail); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/4160/buggy-version/src.main.java.teammates.common.datatransfer.FeedbackSessionResultsBundle.java", "BodyUseAPI": [], "Fixed commit": "3862701bf837efabde0bf8df0d268da53e9ad536", "Url": "https://api.github.com/repos/TEAMMATES/repo", "Date": "2014-06-13T09:05:17Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (giverTeam == \"\") { giverTeam = getNameForEmail(response.giverEmail); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/4160/buggy-version/src.main.java.teammates.common.datatransfer.FeedbackSessionResultsBundle.java", "BodyUseAPI": [], "Fixed commit": "3862701bf837efabde0bf8df0d268da53e9ad536", "Url": "https://api.github.com/repos/TEAMMATES/repo", "Date": "2014-06-13T09:05:17Z"},
{"Line": "=>345", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (patternDesc.isEmpty()) patternDesc = pattern;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/5374/buggy-version/src.main.java.org.daveware.passwordmaker.RDFDatabaseReader.java", "BodyUseAPI": [], "Fixed commit": "6ab4e98fe2f3764e0e5439efd854317f18cb0900", "Url": "https://api.github.com/repos/passwordmaker/java-passwordmaker-lib", "Date": "2014-09-18T02:33:26Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (inputString.startsWith(\"& \", i)) { outputString.append('&'); i += 1; }else if (inputString.startsWith(\"&apos;\", i)) { outputString.append('\\''); i += 6; }else if (inputString.startsWith(\"&#039;\", i)) { outputString.append('\\''); i += 6; }else if (inputString.startsWith(\"&#39;\", i)) { outputString.append('\\''); i += 5; }else if (inputString.startsWith(\"&quot;\", i)) { outputString.append('\"'); i += 6; }else if (inputString.startsWith(\"&#034;\", i)) { outputString.append('\"'); i += 6; }else if (inputString.startsWith(\"&#34;\", i)) { outputString.append('\"'); i += 5; }else if (inputString.startsWith(\"&lt;\", i)) { outputString.append('<'); i += 4; }else if (inputString.startsWith(\"&#060;\", i)) { outputString.append('<'); i += 6; }else if (inputString.startsWith(\"&#60;\", i)) { outputString.append('<'); i += 5; }else if (inputString.startsWith(\"&gt;\", i)) { outputString.append('>'); i += 4; }else if (inputString.startsWith(\"&#062;\", i)) { outputString.append('>'); i += 6; }else if (inputString.startsWith(\"&#62;\", i)) { outputString.append('>'); i += 5; }else i++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/7107/buggy-version/SessionBuddy.src.utils.StringCleaner.java", "BodyUseAPI": ["java.lang.String.startsWith(java.lang.String,int)", "java.lang.String.startsWith(java.lang.String,int)", "java.lang.String.startsWith(java.lang.String,int)", "java.lang.String.startsWith(java.lang.String,int)", "java.lang.String.startsWith(java.lang.String,int)", "java.lang.String.startsWith(java.lang.String,int)", "java.lang.String.startsWith(java.lang.String,int)", "java.lang.String.startsWith(java.lang.String,int)", "java.lang.String.startsWith(java.lang.String,int)", "java.lang.String.startsWith(java.lang.String,int)", "java.lang.String.startsWith(java.lang.String,int)", "java.lang.String.startsWith(java.lang.String,int)"], "Fixed commit": "1760b1aa4947f7558382f6edd0eecd7e8efdd036", "Url": "https://api.github.com/repos/ColmanOB/SessionBuddy", "Date": "2017-09-03T22:21:20Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (restore == null) { throw new java.lang.RuntimeException((\"retrieveFromFile resulted in\" + \" null ContactManagerPlus.\")); }else { for (cw4.Contact itCon : restore.getAllContacts()) { int id = itCon.getId(); IdGenerator.CONTACT.registerExistingID(id); } for (cw4.FutureMeeting itFM : restore.getAllFutureMeetings()) { IdGenerator.MEETING.registerExistingID(itFM.getId()); } for (cw4.PastMeeting itPM : restore.getAllPastMeetings()) { IdGenerator.MEETING.registerExistingID(itPM.getId()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/6611/buggy-version/development.src.cw4.FileSaveRetrieveImpl.java", "BodyUseAPI": ["cw4.ContactManagerPlus.getAllPastMeetings()", "cw4.ContactManagerPlus.getAllContacts()", "cw4.ContactManagerPlus.getAllFutureMeetings()"], "Fixed commit": "9b919885156e43daf44d9d34cc6d121774468886", "Url": "https://api.github.com/repos/BBK-PiJ-2014-66/cw4", "Date": "2015-03-14T10:07:23Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(tempValue.isEmpty())) { net.ssehub.easy.instantiation.rt.core.model.rtVil.Bundle.getLogger(net.ssehub.easy.instantiation.rt.core.model.confModel.AdaptiveConfiguration.class).info((\"Some values could not be stored: \" + tempValue)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/1300/buggy-version/Plugins.Instantiation.de.uni-hildesheim.sse.easy.instantiatorCore.rt.src.net.ssehub.easy.instantiation.rt.core.model.confModel.AdaptiveConfiguration.java", "BodyUseAPI": ["net.ssehub.easy.instantiation.rt.core.model.rtVil.Bundle.getLogger(net.ssehub.easy.instantiation.rt.core.model.confModel.AdaptiveConfiguration.class).info(java.lang.String)"], "Fixed commit": "60e010292ce793d75c6a500c3e9404fefadec29f", "Url": "https://api.github.com/repos/SSEHUB/EASyProducer", "Date": "2016-11-17T12:35:04Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(canvas.isDisposed())) { canvas.redraw(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/3282/buggy-version/src.main.java.org.syncany.gui.history.ImageComposite.java", "BodyUseAPI": ["org.eclipse.swt.widgets.Canvas.redraw()"], "Fixed commit": "ffd7006486d327b42f0f3463ea3acc64b76053a5", "Url": "https://api.github.com/repos/syncany/syncany-plugin-gui", "Date": "2015-02-22T21:38:56Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(gc.isDisposed())) { gc.drawImage(frameImage, nextFrameData.x, nextFrameData.y); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/3282/buggy-version/src.main.java.org.syncany.gui.history.ImageComposite.java", "BodyUseAPI": ["org.eclipse.swt.graphics.GC.drawImage(org.eclipse.swt.graphics.Image,nextFrameData.x,nextFrameData.y)"], "Fixed commit": "ffd7006486d327b42f0f3463ea3acc64b76053a5", "Url": "https://api.github.com/repos/syncany/syncany-plugin-gui", "Date": "2015-02-22T21:38:56Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentMailType) == (MailType.QQ)) { p.put(\"mail.smtp.starttls.enable\", \"true\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/6281/buggy-version/mail.src.main.java.com.PATHng.mail.Mail.java", "BodyUseAPI": [], "Fixed commit": "995304a4a5994457d6e86ee7bf7417b35eacfb2d", "Url": "https://api.github.com/repos/zongPATHomi/AndroidMail", "Date": "2017-12-12T08:37:36Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getChildCount()) == 1) && ((getChildAt(0)) == (mEmptyMsg))) { removeAllViews(); init(); }else { for (int i = (getChildCount()) - 1; i >= (mAdapter.getCount()); i--) { removeViewAt(i); } update(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/8899/buggy-version/app.src.main.java.com.example.bear.diy_view.LabelWall.java", "BodyUseAPI": [], "Fixed commit": "591ef9339c024143715f13002e581d772c79bf63", "Url": "https://api.github.com/repos/kishimotoindb/DIY_View", "Date": "2017-07-29T08:25:47Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.tuples.isEmpty()) || (dictionary.tuples.isEmpty())) { return this; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/3807/buggy-version/src.Dict.java", "BodyUseAPI": [], "Fixed commit": "8b2dae446ae18f9e3b44348df7d0836bd29711d9", "Url": "https://api.github.com/repos/a3626a/CS206P2", "Date": "2015-06-06T13:17:07Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (p1 < (this.tuples.size())) { doc1 += this.tuples.get(p1).getDocID(); p1++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/3807/buggy-version/src.Dict.java", "BodyUseAPI": ["this.tuples.get(p1).getDocID()", "java.util.ArrayList<Tuple>.get(int)"], "Fixed commit": "8b2dae446ae18f9e3b44348df7d0836bd29711d9", "Url": "https://api.github.com/repos/a3626a/CS206P2", "Date": "2015-06-06T13:17:07Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (p2 < (this.tuples.size())) { doc2 += this.tuples.get(p2).getDocID(); p2++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/3807/buggy-version/src.Dict.java", "BodyUseAPI": ["java.util.ArrayList<Tuple>.get(int)", "this.tuples.get(p2).getDocID()"], "Fixed commit": "8b2dae446ae18f9e3b44348df7d0836bd29711d9", "Url": "https://api.github.com/repos/a3626a/CS206P2", "Date": "2015-06-06T13:17:07Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.treeSet.size()) < (this.regularGameEvents.size())) { java.lang.System.out.println(\"Event missing from TreeSet!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/4970/buggy-version/src.main.java.events.regularevents.RegularEventDispatcher.java", "BodyUseAPI": [], "Fixed commit": "2281237c3de7f6135afdbfd037cff6306817d171", "Url": "https://api.github.com/repos/Enifs/EventHandling", "Date": "2015-08-14T15:38:33Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((publishingFlow.getHost()) != null) { if (publishingFlow.getHost().contains(\":\")) { java.lang.String[] hostPort = publishingFlow.getHost().split(\":\"); host = hostPort[0]; if ((hostPort.length) > 1) { port = hostPort[1]; } }else { host = publishingFlow.getHost(); } }else { host = org.wso2.carbon.das.data.publisher.util.PublisherUtil.getHostAddress(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/1524/buggy-version/components.mediation-monitor.mediation-data-publisher.org.wso2.carbon.das.messageflow.data.publisher.src.main.java.org.wso2.carbon.das.messageflow.data.publisher.publish.StatisticsPublisher.java", "BodyUseAPI": ["org.apache.synapse.aspects.flow.statistics.publishing.PublishingFlow.getHost()", "org.apache.synapse.aspects.flow.statistics.publishing.PublishingFlow.getHost()", "publishingFlow.getHost().split(java.lang.String)", "publishingFlow.getHost().contains(java.lang.String)", "org.apache.synapse.aspects.flow.statistics.publishing.PublishingFlow.getHost()"], "Fixed commit": "3959c6f98b1d1d61fac3b7c4057dd4ab9ea7b9ea", "Url": "https://api.github.com/repos/Arshardh/carbon-mediation", "Date": "2016-08-05T09:13:32Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (port != null) { mapping.put(\"port\", port); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/1524/buggy-version/components.mediation-monitor.mediation-data-publisher.org.wso2.carbon.das.messageflow.data.publisher.src.main.java.org.wso2.carbon.das.messageflow.data.publisher.publish.StatisticsPublisher.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,java.lang.String)"], "Fixed commit": "3959c6f98b1d1d61fac3b7c4057dd4ab9ea7b9ea", "Url": "https://api.github.com/repos/Arshardh/carbon-mediation", "Date": "2016-08-05T09:13:32Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.metanalysis.samples.DecapsulationAnalyzer.getFieldIdForAccessor(SourceNode.SourceEntity.Function)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (decapsulations.containsKey(fieldId)) { decapsulations.get(fieldId).add(decapsulation); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/4729/buggy-version/src.main.java.org.metanalysis.samples.DecapsulationAnalyzer.java", "BodyUseAPI": ["decapsulations.get(fieldId).add(org.metanalysis.samples.Decapsulation)", "java.util.Map<java.lang.String, java.util.Set<org.metanalysis.samples.Decapsulation>>.get(java.lang.String)"], "Fixed commit": "3326ceacbc877653f3200c7e0a54e61c16dd0666", "Url": "https://api.github.com/repos/andreihh/metanalysis-samples", "Date": "2017-10-14T10:58:43Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.metanalysis.samples.DecapsulationAnalyzer.getFieldIdForAccessor(SourceNode.SourceEntity.Function)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (decapsulations.containsKey(fieldId)) { decapsulations.get(fieldId).remove(decapsulation); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/4729/buggy-version/src.main.java.org.metanalysis.samples.DecapsulationAnalyzer.java", "BodyUseAPI": ["decapsulations.get(fieldId).remove(org.metanalysis.samples.Decapsulation)", "java.util.Map<java.lang.String, java.util.Set<org.metanalysis.samples.Decapsulation>>.get(java.lang.String)"], "Fixed commit": "3326ceacbc877653f3200c7e0a54e61c16dd0666", "Url": "https://api.github.com/repos/andreihh/metanalysis-samples", "Date": "2017-10-14T10:58:43Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.joaolourenco.legame.utils.Registry.getMainClass()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(main.isRunning())) this.running = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/8367/buggy-version/src.net.joaolourenco.legame.utils.Timer.java", "BodyUseAPI": [], "Fixed commit": "36dbd82f1e0a329ab87d124093ee0b0ce9c31848", "Url": "https://api.github.com/repos/joaogl/LeGame-Remake", "Date": "2015-03-04T22:40:24Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (this.curEntry.getValue().missingExitPos()) { this.curEntry.getValue().initExit(this.nextEntry.getValue().pos()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/2609/buggy-version/net.dougqh.jak.demos.src.basicblocks.BasicBlocks.java", "BodyUseAPI": ["this.curEntry.getValue().initExit(this.nextEntry.getValue().pos())", "java.util.Map.Entry<java.lang.Integer, basicblocks.BasicBlock>.getValue()"], "Fixed commit": "779fa4bd3b813ae97f9c08582324fcf3a8fd6b73", "Url": "https://api.github.com/repos/dougqh/JAK", "Date": "2013-01-13T04:55:13Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.location.LocationManager.getLastKnownLocation(LocationManager.NETWORK_PROVIDER)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (location != null) { currentPoint = new com.emal.android.transport.activity.GeoPoint(((int) ((location.getLatitude()) * 1000000.0)), ((int) ((location.getLongitude()) * 1000000.0))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/7333/buggy-version/src.main.java.com.emal.android.transport.activity.MainActivity.java", "BodyUseAPI": ["android.location.Location.getLatitude()", "android.location.Location.getLongitude()"], "Fixed commit": "5cce2553a62f90fc7d3ccb65d2557fcb9fccea40", "Url": "https://api.github.com/repos/ofelbaum/spb-transport-app", "Date": "2012-05-30T06:33:41Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sikuli.slides.sikuli.SlideAction.findTargetRegion(java.io.File,org.sikuli.slides.screenshots.SlideTargetRegion)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (targetRegion == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/7387/buggy-version/src.main.java.org.sikuli.slides.sikuli.SlideAction.java", "BodyUseAPI": [], "Fixed commit": "99e6ba5506f306aabeaffa231e97f6d5b08a3148", "Url": "https://api.github.com/repos/kalharbi/sikuli-slides", "Date": "2013-07-28T19:45:26Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.saumya.mojo.proxy.Controller.getPlatform(java.io.File)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (platform != null) { filename = filename.replace(\".gem\", ((\"-\" + platform) + \".gem\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/255/buggy-version/gem-proxy.src.main.java.de.saumya.mojo.proxy.Controller.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "093e04769082f682845b66216f471ef4a5914963", "Url": "https://api.github.com/repos/torquebox/jruby-maven-plugins", "Date": "2012-06-25T07:50:29Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.repositoryminer.technicaldebt.TechnicalDebtIndicator.getTechnicalDebtIndicator(codesmell.getString(\"codesmell\"))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (indicator == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/4882/buggy-version/src.main.java.org.repositoryminer.technicaldebt.code.CodeDebt.java", "BodyUseAPI": [], "Fixed commit": "d5b4dbfde00d7894d18c2717e8341e633dd4b559", "Url": "https://api.github.com/repos/visminer/repositoryminer", "Date": "2017-01-18T22:00:35Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!success) { completion.invoke(false, null); }else if ((auth.getAccessToken()) == null) { completion.invoke(false, null); }else { initializePlayerIfNeeded(auth.getAccessToken(), new com.reactlibrary.RCTSpotifyCallback<java.lang.Boolean>() { @java.lang.Override public void invoke(java.lang.Boolean loggedIn, com.reactlibrary.RCTSpotifyError error) { completion.invoke(loggedIn, error); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/6092/buggy-version/android.src.main.java.com.reactlibrary.RCTSpotifyModule.java", "BodyUseAPI": [], "Fixed commit": "56a484616de780c3f680077bd4dd8830ca82488d", "Url": "https://api.github.com/repos/lufinkey/react-native-spotify", "Date": "2017-11-14T07:12:00Z"},
{"Line": "=>270", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.laytonsmith.aliasengine.GenericTreeNode<com.laytonsmith.aliasengine.Construct>.getData()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((m.ctype) == (com.laytonsmith.aliasengine.Constructs.Construct.ConstructType.VARIABLE)) { return com.laytonsmith.aliasengine.Static.resolveConstruct(m.val(), m.line_num); }else { return m; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/5369/buggy-version/src.main.java.com.laytonsmith.aliasengine.Script.java", "BodyUseAPI": ["com.laytonsmith.aliasengine.Static.resolveConstruct(m.val(),m.line_num)", "com.laytonsmith.aliasengine.Construct.val()"], "Fixed commit": "d02528ed1c3c87ca41c2d5a3191f2c69e87b9b27", "Url": "https://api.github.com/repos/EngineHub/CommandHelper", "Date": "2011-08-09T02:08:12Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((num2s == (NUMTHREADS)) && (threadID == 0)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/5839/buggy-version/Code.SZY_Lock.java", "BodyUseAPI": [], "Fixed commit": "f7cf2c8d41ab8c55233313a92603b388d55bf157", "Url": "https://api.github.com/repos/eschlomann/ConcurrentProject", "Date": "2015-04-22T05:47:30Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((this.getMajors()) != null) && (!(this.getMajors().isEmpty()))) this.setMajorName(this.getMajors().get(0).getName());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/4150/buggy-version/src.action.function.StudentArrangeIntoPracticeBase.java", "BodyUseAPI": [], "Fixed commit": "abd67502c43e1ab720fa37144c8ffcb301969d78", "Url": "https://api.github.com/repos/LionCherry/EPMS", "Date": "2017-11-26T04:07:02Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, pl.dpawlak.flocoge.model.ModelElement>.remove(connection.targetId)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (targetElement == null) { targetElement = elements.get(connection.targetId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/2444/buggy-version/flocoge.src.main.java.pl.dpawlak.flocoge.diagram.ModelLoader.java", "BodyUseAPI": [], "Fixed commit": "030cdcf2ebbc29a989d5fd00c5fc3ae2c35182cf", "Url": "https://api.github.com/repos/domel8dp/flocoge", "Date": "2015-03-25T21:50:37Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((c1 == null) ^ (c2 == null)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/1311/buggy-version/components.insight.SRC.org.openmicroscopy.shoola.util.ui.colourpicker.ColourPickerUtil.java", "BodyUseAPI": [], "Fixed commit": "3aa57fa06a62b970f195a921ab7b8322e58ed332", "Url": "https://api.github.com/repos/snoopycrimecop/openmicroscopy", "Date": "2017-06-30T14:29:22Z"},
{"Line": "=>395", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.openmicroscopy.shoola.util.CommonsLangUtils.isNotEmpty(model.getLUT())) fireChangeEvent(PaintPotUI.LUT_PROPERTY); else fireChangeEvent(PaintPotUI.COLOUR_CHANGED_PROPERTY);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/1311/buggy-version/components.insight.SRC.org.openmicroscopy.shoola.util.ui.colourpicker.RGBControl.java", "BodyUseAPI": [], "Fixed commit": "3aa57fa06a62b970f195a921ab7b8322e58ed332", "Url": "https://api.github.com/repos/snoopycrimecop/openmicroscopy", "Date": "2017-06-30T14:29:22Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.puppycrawl.tools.checkstyle.api.DetailAST.getParent()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((parent.getType()) == (com.puppycrawl.tools.checkstyle.api.TokenTypes.LITERAL_NEW)) { checkFinal = true; break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/2593/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.checks.modifier.RedundantModifierCheck.java", "BodyUseAPI": [], "Fixed commit": "c966129879cba9ba1e5afc1a371ff9df0c6d7613", "Url": "https://api.github.com/repos/Vladlis/checkstyle", "Date": "2015-11-02T00:11:14Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int,int)", "com.crowsofwar.gorecore.format.FormattedMessage.getConfig()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((cfg.getColor(tag)) != null) { format.pushFormat(new com.crowsofwar.gorecore.format.FormattedMessageProcessor.ChatFormat(tag).setColor(cfg.getColor(tag))); refreshFormatting = true; }else if (tag.startsWith(\"/\")) { if (tag.substring(1).equals(format.topFormat().name)) { format.popFormat(); refreshFormatting = true; }else { throw new com.crowsofwar.gorecore.format.ChatSender.ProcessingException((((\"Error processing message; closing tag does not match last opened tag: [\" + (tag.substring(1))) + \"]; text is: \") + text)); } }else if (tag.startsWith(\"translate=\")) { java.lang.String key = tag.substring(\"translate=\".length()); item = com.crowsofwar.gorecore.format.FormattedMessageProcessor.formatText(msg, net.minecraft.client.resources.I18n.format(key), formatValues); }else if (tag.startsWith(\"keybinding=\")) { java.lang.String key = tag.substring(\"keybinding=\".length()); item = GoreCore.proxy.getKeybindingDisplayName(key); }else { throw new com.crowsofwar.gorecore.format.ChatSender.ProcessingException((((\"String has invalid tag: [\" + item) + \"]; text is \") + text)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/2520/buggy-version/src.main.java.com.crowsofwar.gorecore.format.FormattedMessageProcessor.java", "BodyUseAPI": ["com.crowsofwar.gorecore.format.MessageConfiguration.getColor(java.lang.String)", "java.lang.String.startsWith(java.lang.String)", "java.lang.String.substring(int)", "java.lang.String.substring(int)", "java.lang.String.startsWith(java.lang.String)", "java.lang.String.substring(int)", "java.lang.String.equals(java.lang.String)", "com.crowsofwar.gorecore.format.FormattedMessageProcessor.ChatFormat.setColor(cfg.getColor(tag))", "com.crowsofwar.gorecore.format.FormattedMessageProcessor.FormattingState.pushFormat(com.crowsofwar.gorecore.format.FormattedMessageProcessor.ChatFormat)", "java.lang.String.startsWith(java.lang.String)", "java.lang.String.substring(int)"], "Fixed commit": "771d0544901b25046aa72da3ddf2466499eb168e", "Url": "https://api.github.com/repos/CrowsOfWar/AvatarMod", "Date": "2017-07-05T18:25:28Z"},
{"Line": "=>506", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(entityIDs.containsKey(profile))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/7911/buggy-version/src.main.java.in.twizmwaz.cardinal.tabList.TabList.java", "BodyUseAPI": [], "Fixed commit": "4300879b7fed6a4d487ba54b3fe09500e7e8b3f7", "Url": "https://api.github.com/repos/Pablete1234/CardinalPGM", "Date": "2016-02-24T12:46:21Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (itemAdjustment.isAppliedToSalePrice()) { saleAdjustmentValue = itemAdjustment.getValue(); retailAdjustmentValue = itemAdjustment.getRetailPriceValue(); }else { retailAdjustmentValue = itemAdjustment.getValue(); saleAdjustmentValue = itemAdjustment.getSalesPriceValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/6430/buggy-version/core.broadleaf-framework.src.main.java.org.broadleafcommerce.core.offer.service.discount.domain.PromotableOrderItemPriceDetailAdjustmentImpl.java", "BodyUseAPI": [], "Fixed commit": "12e204c85fc07831aca242744768c331fedf1456", "Url": "https://api.github.com/repos/BroadleafCommerce/BroadleafCommerce", "Date": "2013-09-06T20:50:42Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (in == 0) { out.writeByte(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/597/buggy-version/src.main.java.cofh.lib.network.ByteBufHelper.java", "BodyUseAPI": [], "Fixed commit": "7a4356f395aa8eb57dac997e735f3a7f45d1a87c", "Url": "https://api.github.com/repos/CoFH/CoFHLib", "Date": "2015-07-29T22:17:07Z"},
{"Line": "=>373", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["nappydevelopment.nappy_the_ingenious.gui.mainStage.MainStageController.showEnterNameDialog()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (spielerName == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/4686/buggy-version/src.main.java.nappydevelopment.nappy_the_ingenious.gui.mainStage.MainStageController.java", "BodyUseAPI": [], "Fixed commit": "58a5462b9442e37ba3caad58bd73f3f0bf6e16cf", "Url": "https://api.github.com/repos/nappydevelopment/Nappy-the-ingenious", "Date": "2016-04-11T13:16:43Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.cloudera.hadoop.hdfs.nfs.Bytes.toLong(request.getCookieVerifer().getData())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((requestVerifer != 0) && (verifer != requestVerifer)) { throw new com.cloudera.hadoop.hdfs.nfs.nfs4.NFS4Exception(NFS4ERR_NOT_SAME, (((\"verifer = \" + verifer) + \", requestVerifer = \") + requestVerifer)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/6880/buggy-version/src.main.java.com.cloudera.hadoop.hdfs.nfs.nfs4.handlers.READDIRHandler.java", "BodyUseAPI": [], "Fixed commit": "cb933d02b893424c459d65af479641530c59998e", "Url": "https://api.github.com/repos/brockn/hdfs-nfs-proxy", "Date": "2012-10-23T18:35:40Z"},
{"Line": "=>349", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_camera) == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/4663/buggy-version/android.src.main.java.com.lwansbrough.RCTCamera.RCTCameraViewFinder.java", "BodyUseAPI": [], "Fixed commit": "f18f6aa1e150a6d247e06c96f3ba3b5b0af1cfaa", "Url": "https://api.github.com/repos/bombino/react-native-camera", "Date": "2017-02-22T23:33:08Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (argumentCount >= 2) { overloadBuilder.append(argumentCount); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/3185/buggy-version/Compiler.src.main.java.com.allogica.allogen.backend.java.JavaBackend.java", "BodyUseAPI": ["java.lang.StringBuilder.append(int)"], "Fixed commit": "6f15965b03ba399c4adcb3807c0186238a5a6ab1", "Url": "https://api.github.com/repos/Allogica/Allogen", "Date": "2017-10-26T16:11:56Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.owncloud.android.ui.preview.PreviewTextFragment.getArguments()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (args.containsKey(FileDisplayActivity.EXTRA_SEARCH_QUERY)) { mSearchQuery = args.getString(FileDisplayActivity.EXTRA_SEARCH_QUERY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/236/buggy-version/src.main.java.com.owncloud.android.ui.preview.PreviewTextFragment.java", "BodyUseAPI": ["android.os.Bundle.getString(FileDisplayActivity.EXTRA_SEARCH_QUERY)"], "Fixed commit": "3db879f5ba9b5b27b015df42afc28ef7f36d18be", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2017-01-24T01:01:49Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((drawable.getConstantState()) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/7405/buggy-version/library.src.main.java.com.willy.ratingbar.PartialView.java", "BodyUseAPI": [], "Fixed commit": "2cb2d08752b07ad37e5214ac1e5e045251b28ba4", "Url": "https://api.github.com/repos/ome450901/SimpleRatingBar", "Date": "2017-08-21T03:09:56Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((drawable.getConstantState()) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/7405/buggy-version/library.src.main.java.com.willy.ratingbar.PartialView.java", "BodyUseAPI": [], "Fixed commit": "2cb2d08752b07ad37e5214ac1e5e045251b28ba4", "Url": "https://api.github.com/repos/ome450901/SimpleRatingBar", "Date": "2017-08-21T03:09:56Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((title.length()) > 30) { currTitle = title.substring(0, 30); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/7368/buggy-version/app.src.main.java.com.volkov.alexandr.youtubeaudio.music.Audio.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "5c489f93194534d3981b07d409cba173ee52c330", "Url": "https://api.github.com/repos/AlexVolkow/YoutubeAudio", "Date": "2017-07-01T18:37:01Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event.getSceneY()) > 500) { yShift = 500; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/3436/buggy-version/src.solarsystem.model.PathSelectionController.java", "BodyUseAPI": [], "Fixed commit": "85bc8a1fe1735ac7646e1b85044d7b478d55903e", "Url": "https://api.github.com/repos/ellejay/spaceproj", "Date": "2016-02-20T13:28:37Z"},
{"Line": "=>328", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (lastItem != 0) { disableButtons(routePlanets.get((lastItem - 1))); }else { disableButtons(\"start\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/3436/buggy-version/src.solarsystem.model.PathSelectionController.java", "BodyUseAPI": ["solarsystem.model.PathSelectionController.disableButtons(routePlanets.get((lastItem - 1)))", "solarsystem.model.PathSelectionController.get(int)"], "Fixed commit": "85bc8a1fe1735ac7646e1b85044d7b478d55903e", "Url": "https://api.github.com/repos/ellejay/spaceproj", "Date": "2016-02-20T13:28:37Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (id == 358) { if ((type >= 0) && (type <= 65536)) { return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/293/buggy-version/com.nijikokun.bukkit.General.Items.java", "BodyUseAPI": [], "Fixed commit": "6409bee9dbcaa21b135d85fd3c703802adfeeea1", "Url": "https://api.github.com/repos/cjc343/General", "Date": "2011-06-03T03:51:32Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ru.mishaignatov.touristquiz.BuildConfig.DEBUG) mInterstitialAd.setAdUnitId(getString(R.string.banner_ad_unit_id_test)); else mInterstitialAd.setAdUnitId(getString(R.string.banner_ad_unit_id));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/6089/buggy-version/app.src.main.java.ru.mishaignatov.touristquiz.ui.dialogs.AddMillisDialog.java", "BodyUseAPI": [], "Fixed commit": "f7effe03fb02e1db70cca535d58d7619850f7de9", "Url": "https://api.github.com/repos/imsnow/TouristQuiz", "Date": "2016-04-09T13:00:18Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getDialog()) != null) && (getDialog().isShowing())) mInterstitialAd.show();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/6089/buggy-version/app.src.main.java.ru.mishaignatov.touristquiz.ui.dialogs.AddMillisDialog.java", "BodyUseAPI": [], "Fixed commit": "f7effe03fb02e1db70cca535d58d7619850f7de9", "Url": "https://api.github.com/repos/imsnow/TouristQuiz", "Date": "2016-04-09T13:00:18Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(file.exists())) { boolean success = file.createNewFile(); if (!success) { return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/8417/buggy-version/MaximMaker.app.src.main.java.com.tcolligan.maximmaker.data.SaveMaximsAsyncTask.java", "BodyUseAPI": ["java.io.File.createNewFile()"], "Fixed commit": "6811ecd7245b07c933d948e8e94aa6107eb9874e", "Url": "https://api.github.com/repos/tcolligan/MaximMaker", "Date": "2016-07-02T17:14:27Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (args[0].equalsIgnoreCase(\"open\")) { new com.twippy587.ChatRooms.commands.Open().onCommand(((org.bukkit.entity.Player) (sender)), cmd, args, plugin); }else { sender.sendMessage(notValidSubcommandWarning); sender.sendMessage(usageMessage); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/7267/buggy-version/src.main.java.com.twippy587.ChatRooms.commands.BaseCommand.java", "BodyUseAPI": ["com.twippy587.ChatRooms.commands.Open.onCommand(org.bukkit.command.CommandSender,org.bukkit.command.Command,java.lang.String[],org.bukkit.plugin.Plugin)"], "Fixed commit": "4ebc51562baa3df5ccfc1cf6e5199e7602dd0688", "Url": "https://api.github.com/repos/evan3334/ChatRooms", "Date": "2015-06-11T06:49:27Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((LocationList) != null) && ((LocationList.size()) > 0)) { dartmouth.edu.dartreminder.data.Schedule schedule = ((dartmouth.edu.dartreminder.data.Schedule) (LocationList.get(java.lang.Integer.parseInt(marker.getTitle())))); historyTitle.setText((\"Title: \" + (schedule.getTitle()))); historyNote.setText((\"Note: \" + (schedule.getNotes()))); marker.showInfoWindow(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/134/buggy-version/app.src.main.java.dartmouth.edu.dartreminder.view.RecentLocationListFragment.java", "BodyUseAPI": ["java.util.ArrayList.get(int)"], "Fixed commit": "509e3f131b2947346564f35a75e82be80ba54e36", "Url": "https://api.github.com/repos/rwangfengme/Dart-reminder-core", "Date": "2016-03-07T10:37:27Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (x == 0) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/2694/buggy-version/src.maig.model.mcts.Action.java", "BodyUseAPI": [], "Fixed commit": "76525af2a5f09c4b525c7d3087c23a908a6db03a", "Url": "https://api.github.com/repos/jacobfi/bossen-maig", "Date": "2014-11-11T10:17:44Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (convertView.isSelected()) { convertView.setBackgroundColor(1717986918); }else { convertView.setBackgroundColor(16777215); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/924/buggy-version/app.src.main.java.com.freak.videosenfants.elements.preferences.DlnaAdapter.java", "BodyUseAPI": ["android.view.View.setBackgroundColor(int)", "android.view.View.setBackgroundColor(int)"], "Fixed commit": "a06edaa30f7d406592f7852dec3514c943461b12", "Url": "https://api.github.com/repos/Pilou44/VideosEnfants", "Date": "2016-04-04T09:33:49Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (obj instanceof io.cattle.platform.core.addon.metadata.ServiceInfo) { return java.util.Collections.singletonList(((io.cattle.platform.core.addon.metadata.ServiceInfo) (obj)).getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/8579/buggy-version/modules.caas.backend.src.main.java.io.cattle.platform.trigger.ServiceReconcileTrigger.java", "BodyUseAPI": [], "Fixed commit": "d8a004246dc9d1f5f198f3a104407ceb65bc8b57", "Url": "https://api.github.com/repos/rancher/cattle", "Date": "2017-10-03T17:48:13Z"},
{"Line": "=>385", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((files.size()) == 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/8728/buggy-version/components.formats-common.src.loci.common.Location.java", "BodyUseAPI": [], "Fixed commit": "14db23f5da36aa967884aae57a70ee83bfdd1778", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2014-04-28T19:28:37Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jsoup.nodes.Document.select(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (textParbaseElements != null) { for (org.jsoup.nodes.Element ele : textParbaseElements) { if (ele != null) { org.jsoup.select.Elements textProp = ele.getElementsByTag(\"h2\"); if (org.apache.commons.lang.StringUtils.isNotBlank(textProp.toString())) { count++; } } } if (count == 0) { org.jsoup.select.Elements cc00Elements = doc.select(\"div.cc00-pilot\"); if (cc00Elements != null) { for (org.jsoup.nodes.Element ele : cc00Elements) { if (ele != null) { org.jsoup.select.Elements textProp = ele.getElementsByTag(\"h2\"); org.jsoup.select.Elements paragraphElem = ele.getElementsByTag(\"p\"); if (org.apache.commons.lang.StringUtils.isNotBlank(textProp.toString())) { count++; } if (org.apache.commons.lang.StringUtils.isNotBlank(paragraphElem.toString())) { paragraphExists = true; } } } count = count - 1; sb.append(((((Constants.TEXT_NODE_NOT_FOUND.replace(\".\", \" \")) + \"for \") + count) + \" sub headings and hence element is not migrated.\")); if (paragraphExists) { sb.append(\"<li>Extra description found on locale page.Hence element is not migrated.</li>\"); } }else { count = count - 1; sb.append(((((Constants.TEXT_NODE_NOT_FOUND.replace(\".\", \" \")) + \"for \") + count) + \" sub headings and hence element is not migrated.\")); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/300/buggy-version/src.main.com.cisco.dse.global.migration.solutionlisting.SolutionListingVariation11.java", "BodyUseAPI": [], "Fixed commit": "864cdab4eae252610a070062e511e37bbf0496e5", "Url": "https://api.github.com/repos/shreyabhatnagar/OVWMigration", "Date": "2015-12-03T07:50:06Z"},
{"Line": "=>389", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portal.ldap.configuration.ConfigurationProvider<com.liferay.portal.ldap.configuration.LDAPServerConfiguration>.getConfigurations(long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(com.liferay.portal.kernel.util.ListUtil.isEmpty(ldapServerConfigurations))) { com.liferay.portal.ldap.configuration.LDAPServerConfiguration ldapServerConfiguration = ldapServerConfigurations.get(0); return ldapServerConfiguration.ldapServerId(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/240/buggy-version/modules.portal.portal-ldap.src.main.java.com.liferay.portal.ldap.internal.DefaultPortalLDAP.java", "BodyUseAPI": ["java.util.List<com.liferay.portal.ldap.configuration.LDAPServerConfiguration>.get(int)"], "Fixed commit": "7baa7ecf5e17dcabfcf3c02374c57bb339e85c21", "Url": "https://api.github.com/repos/briangreenwald/liferay-portal", "Date": "2016-01-19T22:57:02Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (entities == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/4657/buggy-version/src.main.java.com.sk89q.craftbook.mech.AIMechanic.java", "BodyUseAPI": [], "Fixed commit": "ad52d00600e17a6051216549e665a8dd64d6c070", "Url": "https://api.github.com/repos/sk89q/craftbook", "Date": "2014-01-02T08:20:11Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (entity != null) if ((ent.getType().getName().equalsIgnoreCase(entity)) || (ent.getType().name().equalsIgnoreCase(entity))) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/4657/buggy-version/src.main.java.com.sk89q.craftbook.mech.AIMechanic.java", "BodyUseAPI": ["ent.getType().name().equalsIgnoreCase(java.lang.String)", "ent.getType().getName().equalsIgnoreCase(java.lang.String)"], "Fixed commit": "ad52d00600e17a6051216549e665a8dd64d6c070", "Url": "https://api.github.com/repos/sk89q/craftbook", "Date": "2014-01-02T08:20:11Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.nuxeo.ecm.platform.filemanager.utils.FileManagerUtils.getExistingDocByFileName(org.nuxeo.ecm.core.api.CoreSession,java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (documentManager.isCheckedOut(docModel.getRef())) { docModel.checkIn(VersioningOption.MINOR, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/290/buggy-version/nuxeo-platform-filemanager-core.src.main.java.org.nuxeo.ecm.platform.filemanager.service.extension.DefaultFileImporter.java", "BodyUseAPI": ["org.nuxeo.ecm.core.api.DocumentModel.checkIn(VersioningOption.MINOR,<nulltype>)"], "Fixed commit": "d2613647fedf4b90176faf84bfc2bf2f95b8ef3a", "Url": "https://api.github.com/repos/ron1/nuxeo-services", "Date": "2012-10-17T13:20:07Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(availableBuffers.contains(bufferIndex))) { buffers[bufferIndex].free(); availableBuffers.add(bufferIndex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/8032/buggy-version/imcache-offheap.src.main.java.com.cetsoft.imcache.offheap.bytebuffer.OffHeapByteBufferStore.java", "BodyUseAPI": ["buffers[bufferIndex].free()", "java.util.concurrent.BlockingQueue<java.lang.Integer>.add(int)"], "Fixed commit": "99191447d3ccb94e317bb73b0d2f66210806e889", "Url": "https://api.github.com/repos/Cetsoft/imcache", "Date": "2015-08-29T22:11:18Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(use64Bit)) { for (int i = 0; i < (markers.length); i++) { markers[i] = (markers[i]) & 4294967295L; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/9072/buggy-version/components.formats-gpl.src.loci.formats.in.NDPIReader.java", "BodyUseAPI": [], "Fixed commit": "d9e369cfbe0a6a9f23180e03fda31e62a3a6bba3", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2015-05-14T19:37:01Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mPlayer.isPlaying()) { mPlayer.stop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/2354/buggy-version/app.src.main.java.com.example.week_5.MainActivity.java", "BodyUseAPI": ["android.media.MediaPlayer.stop()"], "Fixed commit": "85bbf585ffdd5cc33b7f47e6852f7c05e9543283", "Url": "https://api.github.com/repos/ikostan/Simple_Android_Project_3", "Date": "2017-06-12T06:45:21Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (videoView.isPlaying()) { videoView.stopPlayback(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/2354/buggy-version/app.src.main.java.com.example.week_5.MainActivity.java", "BodyUseAPI": ["android.widget.VideoView.stopPlayback()"], "Fixed commit": "85bbf585ffdd5cc33b7f47e6852f7c05e9543283", "Url": "https://api.github.com/repos/ikostan/Simple_Android_Project_3", "Date": "2017-06-12T06:45:21Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(pNode.isExpand())) pNode.toggle();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/7562/buggy-version/recyclertreeview-lib.src.main.java.tellh.com.recyclertreeview_lib.TreeViewAdapter.java", "BodyUseAPI": ["tellh.com.recyclertreeview_lib.TreeNode.toggle()"], "Fixed commit": "16632f9d06546ef6f8cb7660692ca4064797eb0f", "Url": "https://api.github.com/repos/TellH/RecyclerTreeView", "Date": "2017-01-19T06:14:13Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"\".equals(userPreference.getBirthday())) { com.ybg.ga.ymga.ga.tz.TzBean tzBean = new com.ybg.ga.ymga.ga.tz.TzBean(wei, 0, 0, 0, 0, 0, 0, 0, 0, 0); processTzData(tzBean); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/3639/buggy-version/app.src.main.java.com.ybg.ga.ymga.ga.tz.furuik.TZFurikBLEActivity.java", "BodyUseAPI": [], "Fixed commit": "170b451f23a645a08214f5115123bfea460bf537", "Url": "https://api.github.com/repos/yangbagang/ymga", "Date": "2017-01-01T09:36:01Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.util.Set<java.lang.String>>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (segmentsForInstance == null) { segmentsForInstance = new java.util.HashSet<java.lang.String>(); instanceToSegmentSetMap.put(replica, segmentsForInstance); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/6429/buggy-version/pinot-transport.src.main.java.com.linkedin.pinot.routing.builder.KafkaLowLevelConsumerRoutingTableBuilder.java", "BodyUseAPI": [], "Fixed commit": "baf1ced50b8f32dfe8891122ee463584c5f45316", "Url": "https://api.github.com/repos/linkedin/pinot", "Date": "2016-06-17T04:58:41Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.lang.String, java.lang.String>.getKey()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (instancePruner.isInactive(instance)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/6429/buggy-version/pinot-transport.src.main.java.com.linkedin.pinot.routing.builder.KafkaLowLevelConsumerRoutingTableBuilder.java", "BodyUseAPI": [], "Fixed commit": "baf1ced50b8f32dfe8891122ee463584c5f45316", "Url": "https://api.github.com/repos/linkedin/pinot", "Date": "2016-06-17T04:58:41Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<mil.nga.dice.report.Report>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((report.getThumbnail()) != null) { java.io.File image = new java.io.File(report.getPath(), report.getThumbnail()); if (image.exists()) { android.graphics.Bitmap bitmap = android.graphics.BitmapFactory.decodeFile(image.getAbsolutePath()); thumbnail.setImageBitmap(bitmap); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/1375/buggy-version/app.src.main.java.mil.nga.dice.listview.CustomList.java", "BodyUseAPI": ["mil.nga.dice.report.Report.getThumbnail()", "mil.nga.dice.report.Report.getPath()"], "Fixed commit": "8da59c8532199b2dbe8621074cddf9d8c762646f", "Url": "https://api.github.com/repos/restjohn/disconnected-content-explorer-android", "Date": "2014-11-04T20:16:02Z"},
{"Line": "=>321", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((description) == null) { this.description = new java.util.ArrayList<java.lang.String>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/798/buggy-version/src.main.java.com.norcode.bukkit.buildinabox.BuildingPlan.java", "BodyUseAPI": [], "Fixed commit": "9e430207e703d9436423d94b1e566886b0412ef8", "Url": "https://api.github.com/repos/andrepl/BuildInABox", "Date": "2013-05-21T17:01:16Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (req == 1) return 0; else if (req == 3) return 4; else return req;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/1647/buggy-version/lib.src.main.java.com.example.MyClass.java", "BodyUseAPI": [], "Fixed commit": "0e1a35467ce1ad0ae803104ead9347664821a102", "Url": "https://api.github.com/repos/danielCatlett/Minesweeper", "Date": "2016-12-09T04:46:45Z"},
{"Line": "=>336", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, counsil.CounsilTimer>.get(consumer.name)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((currentTimer.task) != null) currentTimer.task.cancel();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/8533/buggy-version/counsil.src.counsil.SessionManagerImpl.java", "BodyUseAPI": ["currentTimer.task.cancel()"], "Fixed commit": "a726c05970e89ab20fe46aa7b68c2bfa903402e1", "Url": "https://api.github.com/repos/Sitola/counsil", "Date": "2016-07-25T01:09:27Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mutation.trackedByCDC()) && (atCapacity())) { if ((!(segment.containsCDCMutations.get())) || (null == (alloc = segment.allocate(mutation, size)))) { cdcSizeCalculator.submitOverflowSizeRecalculation(); throw new org.apache.cassandra.exceptions.WriteTimeoutException(WriteType.CDC, ConsistencyLevel.LOCAL_ONE, 0, 1); } return alloc; }else { while (null == (alloc = segment.allocate(mutation, size))) { if ((mutation.trackedByCDC()) && (atCapacity())) { cdcSizeCalculator.submitOverflowSizeRecalculation(); throw new org.apache.cassandra.exceptions.WriteTimeoutException(WriteType.CDC, ConsistencyLevel.LOCAL_ONE, 0, 1); } advanceAllocatingFrom(segment); segment = allocatingFrom; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/2109/buggy-version/src.java.org.apache.cassandra.db.commitlog.CommitLogSegmentManagerCDC.java", "BodyUseAPI": ["org.apache.cassandra.db.commitlog.CommitLogSegment.allocate(org.apache.cassandra.db.commitlog.Mutation,int)", "org.apache.cassandra.db.commitlog.Mutation.trackedByCDC()", "org.apache.cassandra.db.commitlog.CommitLogSegment.allocate(org.apache.cassandra.db.commitlog.Mutation,int)"], "Fixed commit": "bf2c8d12398cf12ea6d40e37f228667ba4ce8a6d", "Url": "https://api.github.com/repos/josh-mckenzie/cassandra", "Date": "2016-05-17T17:39:21Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["projectPomFile.getLocation().toFile()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (pPomFile.exists()) { org.eclipse.m2e.core.embedder.MavenModelManager mavenModelManager = org.eclipse.m2e.core.MavenPlugin.getMavenModelManager(); org.apache.maven.model.Model projModel = mavenModelManager.readMavenModel(projectPomFile); java.util.List<java.lang.String> modules = projModel.getModules(); if (modules != null) { modules.clear(); } final org.apache.maven.model.Model routinesModel = org.talend.designer.maven.pom.PomUtil.getRoutinesTempalteModel(); modules.add(org.talend.designer.maven.pom.PomUtil.getPomFileName(routinesModel.getArtifactId())); org.talend.designer.maven.tools.CreateMavenRoutinePom.addDependencies(projModel); if (org.talend.core.GlobalServiceRegister.getDefault().isServiceRegistered(org.talend.core.ILibraryManagerService.class)) { org.talend.core.ILibraryManagerService libManagerService = ((org.talend.core.ILibraryManagerService) (org.talend.core.GlobalServiceRegister.getDefault().getService(org.talend.core.ILibraryManagerService.class))); java.util.List<java.lang.String> jarsNeedRetrieve = new java.util.ArrayList<java.lang.String>(); for (org.apache.maven.model.Dependency d : projModel.getDependencies()) { if (((d.getScope()) != null) && (d.getScope().equals(\"system\"))) { jarsNeedRetrieve.add(((d.getArtifactId()) + (org.talend.commons.utils.resource.FileExtensions.JAR_FILE_SUFFIX))); } } libManagerService.retrieve(jarsNeedRetrieve, codeProject.getLibFolder().getLocation().toPortableString(), false); } org.talend.designer.maven.pom.PomUtil.savePom(monitor, projModel, projectPomFile); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/7024/buggy-version/main.plugins.org.talend.designer.maven.src.main.java.org.talend.designer.maven.tools.MavenPomSynchronizer.java", "BodyUseAPI": [], "Fixed commit": "f7858dc687a5d0646dde007b44361d42bc41e8eb", "Url": "https://api.github.com/repos/Talend/tcommon-studio-se", "Date": "2015-05-06T09:08:52Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.lxp.redis.pubsub.RedisMsgPubSubListener.STOP.equalsIgnoreCase(message)) { org.lxp.redis.pubsub.RedisMsgPubSubListener.LOG.info(\"unsubscribe {}\", channel); unsubscribe(channel); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/6730/buggy-version/study-redis.src.main.java.org.lxp.redis.pubsub.RedisMsgPubSubListener.java", "BodyUseAPI": [], "Fixed commit": "4d92e0d760c051dfd9040a9a1cabf3d390978993", "Url": "https://api.github.com/repos/hivsuper/study", "Date": "2017-05-24T05:52:50Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.lxp.redis.pubsub.RedisMsgPubSubListener.STOP.equalsIgnoreCase(message)) { org.lxp.redis.pubsub.RedisMsgPubSubListener.LOG.info(\"unsubscribe {}\", channel); unsubscribe(channel); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/6730/buggy-version/study-redis.src.main.java.org.lxp.redis.pubsub.RedisMsgPubSubListener.java", "BodyUseAPI": [], "Fixed commit": "4d92e0d760c051dfd9040a9a1cabf3d390978993", "Url": "https://api.github.com/repos/hivsuper/study", "Date": "2017-05-24T05:52:50Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.block.BlockFromToEvent.getToBlock()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((!(flowedTo.getType().equals(Material.AIR))) && (!(flowedTo.getType().equals(Material.LAVA)))) && (!(flowedTo.getType().equals(Material.STATIONARY_LAVA)))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/4001/buggy-version/src.us.drome.cobrafeats.InfiniteLavaSources.java", "BodyUseAPI": [], "Fixed commit": "39b524dc5a0678c6053972125484f5263a935555", "Url": "https://api.github.com/repos/TheAcademician/CobraFeats", "Date": "2014-07-25T01:35:57Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["DAO.StudentDAO.getStudent(java.lang.String)", "DAO.StudentDAO.getStudent(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((friend.getStudentid()) == (currentStudent.getStudentid())) { model.addAttribute(\"msg\", \"Can't friend yourself...\"); }else if ((friend.getSchoolid()) != (currentStudent.getSchoolid())) { model.addAttribute(\"msg\", \"Can not add a student from different school\"); }else { model.addAttribute(\"msg\", DAO.FriendshipsDAO.addfriend(friend, currentStudent)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/4694/buggy-version/src.java.BSxSB.Controllers.StudentController.java", "BodyUseAPI": ["org.springframework.ui.Model.addAttribute(java.lang.String,DAO.FriendshipsDAO.addfriend(friend, currentStudent))", "DAO.FriendshipsDAO.addfriend(Mapping.POJO.Students,Mapping.POJO.Students)", "Mapping.POJO.Students.getSchoolid()", "Mapping.POJO.Students.getSchoolid()"], "Fixed commit": "42d2ffc7993b023da156d8a0dc1e19752378fc1d", "Url": "https://api.github.com/repos/lunzhang/BSxSB", "Date": "2015-03-29T16:15:57Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((value.length()) == 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/1695/buggy-version/app.src.main.java.com.mikehelland.omgbananasremote.Jam.java", "BodyUseAPI": [], "Fixed commit": "2beeb2d117604515e486e42e3e1e2cef4c6417f0", "Url": "https://api.github.com/repos/mikehelland/OMGRemote", "Date": "2017-11-17T22:44:42Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ch == '%') { i++; tokens.add(new net.imglib2.ops.parse.token.Mod((i - 1), \"%\")); }else if (ch == '(') { i++; tokens.add(new net.imglib2.ops.parse.token.OpenParen((i - 1), \"(\")); }else if (ch == ')') { i++; tokens.add(new net.imglib2.ops.parse.token.CloseParen((i - 1), \")\")); }else if (java.lang.Character.isWhitespace(ch)) i++; else { return lexicalError(spec, i, ch); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/5637/buggy-version/imglib2.ops.src.main.java.net.imglib2.ops.parse.Lexer.java", "BodyUseAPI": ["java.lang.Character.isWhitespace(java.lang.Character)", "net.imglib2.ops.parse.Lexer.lexicalError(java.lang.String,int,java.lang.Character)"], "Fixed commit": "0e8197eb8d754fc0ee3e4892f504cbc8de0a926c", "Url": "https://api.github.com/repos/imagej/imglib", "Date": "2012-07-10T21:23:09Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((baitTopics.size()) > 0) { android.util.Log.d(\"KOLOK: \", \"Setting Image\"); setTopicText(baitTopics.get(baitSwipeFrame.getFirstVisiblePosition())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/279/buggy-version/app.src.main.java.peak.org.kolok.IssueActivity.java", "BodyUseAPI": ["peak.org.kolok.IssueActivity.3.setTopicText(java.util.HashMap<java.lang.String, java.lang.Object>)", "java.util.ArrayList<java.util.HashMap<java.lang.String, java.lang.Object>>.get(baitSwipeFrame.getFirstVisiblePosition())"], "Fixed commit": "b6771537cccce27774c7932e4ac07c8b7704610e", "Url": "https://api.github.com/repos/Peak-Digital/Kolok-Android", "Date": "2017-10-15T15:45:08Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((java.lang.Double) (topic.get(\"reduced\"))).intValue()) == 100) { topic.put(\"reduced\", (((java.lang.Double) (topic.get(\"reduced\"))) - 1.0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/279/buggy-version/app.src.main.java.peak.org.kolok.IssueActivity.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.Object>.put(java.lang.String,double)", "java.util.HashMap<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Fixed commit": "b6771537cccce27774c7932e4ac07c8b7704610e", "Url": "https://api.github.com/repos/Peak-Digital/Kolok-Android", "Date": "2017-10-15T15:45:08Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.htwg.stratego.controller.impl.AbstractStrategoController.move(int,int,int,int,de.htwg.stratego.model.IPlayer)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isMoveSuccessful) { changeState(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/4662/buggy-version/src.de.htwg.stratego.controller.impl.MultiDeviceStrategoController.java", "BodyUseAPI": [], "Fixed commit": "a46acfca21233a4dc115a95aad0678632d1979b2", "Url": "https://api.github.com/repos/redscarwolf/StrategyGameStratego", "Date": "2016-11-23T16:18:19Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (waiting) { if (matchClients(clientId)) { GameBoard gb1 = ((GameBoard) (clientInput.getData())); java.lang.System.out.println(gb1); gb1.setTurn(true); javafx.util.Pair<ServerConnection, ServerConnection> activeGame = lobby.getActiveGame(matchId); activeGame.getKey().getUser().setUserToken(1); activeGame.getValue().getUser().setUserToken(2); outgoingData = new NetworkProtocol(NetworkProtocol.ProtocolType.MAKEMOVE, gb1, activeGame.getKey().getUser()); activeGame.getKey().sendPacket(outgoingData); GameBoard gb2 = ((GameBoard) (clientInput.getData())); gb2.setTurn(false); outgoingData = new NetworkProtocol(NetworkProtocol.ProtocolType.WAIT, gb2, activeGame.getValue().getUser()); activeGame.getValue().sendPacket(outgoingData); activeGame.getKey().setWaiting(false); activeGame.getValue().setWaiting(false); } }else { lobby.setClientThread(clientId, this); if (matchClients(clientId)) { GameBoard gb1 = ((GameBoard) (clientInput.getData())); java.lang.System.out.println(gb1); gb1.setTurn(true); javafx.util.Pair<ServerConnection, ServerConnection> activeGame = lobby.getActiveGame(matchId); activeGame.getKey().getUser().setUserToken(1); activeGame.getValue().getUser().setUserToken(2); outgoingData = new NetworkProtocol(NetworkProtocol.ProtocolType.MAKEMOVE, gb1, activeGame.getKey().getUser()); activeGame.getKey().sendPacket(outgoingData); GameBoard gb2 = ((GameBoard) (clientInput.getData())); gb2.setTurn(false); outgoingData = new NetworkProtocol(NetworkProtocol.ProtocolType.WAIT, gb2, activeGame.getValue().getUser()); activeGame.getValue().sendPacket(outgoingData); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/4774/buggy-version/src.ServerConnection.java", "BodyUseAPI": [], "Fixed commit": "a976601057d7e40005e7d882ed0f42916eadbd93", "Url": "https://api.github.com/repos/gfillipow95/Inf-122-Final-Project", "Date": "2017-03-20T07:01:15Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (invokeOnEngineChain) { for (org.jitsi.impl.neomedia.transform.TransformEngine engine : engineChain) engine.getRTCPTransformer(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/3790/buggy-version/src.org.jitsi.impl.neomedia.transform.TransformEngineChain.java", "BodyUseAPI": [], "Fixed commit": "b39982f5f8abc5a18bd7b76b56bca8994ab2de21", "Url": "https://api.github.com/repos/jitsi/libjitsi", "Date": "2013-11-30T21:40:27Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (invokeOnEngineChain) { for (org.jitsi.impl.neomedia.transform.TransformEngine engine : engineChain) engine.getRTPTransformer(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/3790/buggy-version/src.org.jitsi.impl.neomedia.transform.TransformEngineChain.java", "BodyUseAPI": [], "Fixed commit": "b39982f5f8abc5a18bd7b76b56bca8994ab2de21", "Url": "https://api.github.com/repos/jitsi/libjitsi", "Date": "2013-11-30T21:40:27Z"},
{"Line": "=>374", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((parameters.length) == 1) { b.append(\"Evaluating action property %1% failed.\"); }else if ((parameters.length) == 2) { b.append(\"Evaluating action property %1% failed.\\n%2%\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/1368/buggy-version/tlatools.src.tlc2.output.MP.java", "BodyUseAPI": [], "Fixed commit": "b42e07ac1d25bf533b5d0a9201bf2d3b74984aaa", "Url": "https://api.github.com/repos/tlaplus/tlaplus", "Date": "2017-04-26T20:00:39Z"},
{"Line": "=>751", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((val != null) && (!(val.trim().equals(\"\")))) { cv.put(\"check_num\", new java.lang.Integer(val)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/7074/buggy-version/src.net.gumbercules.loot.premium.ImportActivity.java", "BodyUseAPI": ["android.content.ContentValues.put(java.lang.String,java.lang.Integer)"], "Fixed commit": "837cd2094b538806bbbbdbc7f6bb7ae5bec5f3d7", "Url": "https://api.github.com/repos/chrismccurdy/loot", "Date": "2011-03-04T22:34:13Z"},
{"Line": "=>925", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSearchView) != null) { outState.putBoolean(com.owncloud.android.ui.activity.FileDisplayActivity.KEY_IS_SEARCH_OPEN, (!(mSearchView.isIconified()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/1196/buggy-version/src.com.owncloud.android.ui.activity.FileDisplayActivity.java", "BodyUseAPI": [], "Fixed commit": "29aca6640d2a4ceab409d40bb91ae7bdd734336b", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2017-01-23T10:00:13Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mOrientationHint) != (android.view.OrientationEventListener.ORIENTATION_UNKNOWN)) { android.hardware.Camera.CameraInfo info = new android.hardware.Camera.CameraInfo(); android.hardware.Camera.getCameraInfo(mCameraWrapper.getCameraId(), info); if ((info.facing) == (Camera.CameraInfo.CAMERA_FACING_FRONT)) { rotation = (((info.orientation) - (mOrientationHint)) + 360) % 360; }else { rotation = ((info.orientation) + (mOrientationHint)) % 360; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/8174/buggy-version/library.src.main.java.com.jmolsmobile.landscapevideocapture.recorder.VideoRecorder.java", "BodyUseAPI": [], "Fixed commit": "66f396d8f2c0afae889b13d2f599fee80388f8bf", "Url": "https://api.github.com/repos/shixingxing/LandscapeVideoCamera", "Date": "2015-09-18T09:13:09Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((net.minecraft.client.Minecraft.getMinecraft().theWorld) == null) { ModNetwork.net.sendToServer(new com.darkona.adventurebackpack.network.SyncPropertiesPacket.Message()); }else { AdventureBackpack.proxy.synchronizePlayer(message.ID, message.properties); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/4806/buggy-version/src.main.java.com.darkona.adventurebackpack.network.SyncPropertiesPacket.java", "BodyUseAPI": [], "Fixed commit": "f94749367ed56ab775f84dda6c7bf8119ddfc4dd", "Url": "https://api.github.com/repos/runescapejon/AdventureBackpack2", "Date": "2016-05-26T23:56:41Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.wpi.cs.wpisuitetng.modules.planningpoker.view.active.TabbedView.getComponentAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((toBeRemoved instanceof edu.wpi.cs.wpisuitetng.modules.planningpoker.view.active.DeckOverview) || (toBeRemoved instanceof edu.wpi.cs.wpisuitetng.modules.planningpoker.view.active.GameOverview)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/7464/buggy-version/PlanningPoker.src.edu.wpi.cs.wpisuitetng.modules.planningpoker.view.active.TabbedView.java", "BodyUseAPI": [], "Fixed commit": "99eb6a736a1ec064e0f6444a956fac8577576621", "Url": "https://api.github.com/repos/cs3733bdt/wpi-suite", "Date": "2014-04-23T01:20:12Z"},
{"Line": "=>356", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.wpi.cs.wpisuitetng.modules.planningpoker.view.active.TabbedView.getComponentAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((toBeRemoved instanceof edu.wpi.cs.wpisuitetng.modules.planningpoker.view.active.DeckOverview) || (toBeRemoved instanceof edu.wpi.cs.wpisuitetng.modules.planningpoker.view.active.GameOverview)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/7464/buggy-version/PlanningPoker.src.edu.wpi.cs.wpisuitetng.modules.planningpoker.view.active.TabbedView.java", "BodyUseAPI": [], "Fixed commit": "99eb6a736a1ec064e0f6444a956fac8577576621", "Url": "https://api.github.com/repos/cs3733bdt/wpi-suite", "Date": "2014-04-23T01:20:12Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mEditTextTvShow.getText().toString().isEmpty()) || (mEditTextSeason.getText().toString().isEmpty())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/8832/buggy-version/app.src.main.java.com.github.rodrigohenriques.dagger2sample.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "cdbb3a96df5edf91ca8983ff2ce672001c9ab466", "Url": "https://api.github.com/repos/rodrigohenriques/Dagger-2-Sample", "Date": "2015-11-17T02:59:35Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.lovejoy777.showcase.BuildConfig.DEBUG)) { prefScreen.removePreference(prefCategory); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/2935/buggy-version/app.src.main.java.com.lovejoy777.showcase.activities.SettingsActivity.java", "BodyUseAPI": [], "Fixed commit": "be3cc55fb7800ab87d05d9be52d5487f338e13d9", "Url": "https://api.github.com/repos/BitSyko/Showcase", "Date": "2015-10-02T19:33:48Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (allVertices.contains(v)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/6798/buggy-version/src.ca.ubc.ece.cpen221.mp3.graph.AdjacencyMatrixGraph.java", "BodyUseAPI": [], "Fixed commit": "be0ce27f58ff541203d77a0425c97333b01bffe8", "Url": "https://api.github.com/repos/bluenote-1577/PuzzleGameRandom", "Date": "2015-10-23T00:21:35Z"},
{"Line": "=>425", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type.equals(\"3d_object/Predator_Youngblood/Predator_Youngblood.obj\")) { yDet = 4.5; }else { yDet = 2.5; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/6749/buggy-version/MazeRunner.src.Enemy.java", "BodyUseAPI": [], "Fixed commit": "345023870fd6ebf7a7087f8e83562ee9deb012de", "Url": "https://api.github.com/repos/jwang92/EWI3620TU-GROUP10", "Date": "2013-12-13T12:20:23Z"},
{"Line": "=>389", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (selectedApi != null) { org.apache.synapse.rest.Resource[] selectedAPIResources = selectedApi.getResources(); if ((selectedAPIResources.length) > 0) { for (org.apache.synapse.rest.dispatch.RESTDispatcher dispatcher : org.apache.synapse.rest.RESTUtils.getDispatchers()) { org.apache.synapse.rest.Resource resource = dispatcher.findResource(synCtx, java.util.Arrays.asList(selectedAPIResources)); if ((resource != null) && (java.util.Arrays.asList(resource.getMethods()).contains(httpMethod))) { selectedResource = resource; break; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/3257/buggy-version/components.apimgt.org.wso2.carbon.apimgt.gateway.src.main.java.org.wso2.carbon.apimgt.gateway.handlers.security.APIKeyValidator.java", "BodyUseAPI": ["org.apache.synapse.rest.API.getResources()"], "Fixed commit": "484cab14a5d10a3c5b7ddf2831e7c5381c23d12a", "Url": "https://api.github.com/repos/harsha89/carbon-apimgt", "Date": "2016-01-25T06:34:32Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ret.getMinute()) == minute) { return ret; }else { return new net.narcissu5.loadmonitor.util.CountInMinute(minute); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/3708/buggy-version/sba-load-monitor-client.src.main.java.net.narcissu5.loadmonitor.util.CountHolder.java", "BodyUseAPI": [], "Fixed commit": "5413aade61a6a0e9ce8e3d51111dd8c7929ae7f7", "Url": "https://api.github.com/repos/Narcissu5/sba-load-monitor", "Date": "2017-11-30T11:13:41Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((nHttpClientConnection.getContext().removeAttribute(IOSession.ATTACHMENT_KEY)) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/4840/buggy-version/reverseproxy.src.main.java.proxy.TargetHandler.java", "BodyUseAPI": [], "Fixed commit": "ba44f8b6e6f5e3c3eb46b633ff4e3c1d6dc04d77", "Url": "https://api.github.com/repos/isururanawaka/HTTPCoreReverseProxy", "Date": "2015-09-29T16:41:29Z"},
{"Line": "=>861", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["AnimeIndex.completedToSeeMap.get(name).getImagePath(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (AnimeIndex.completedToSeeDeletedAnime.contains(imagePath)) { AnimeIndex.completedToSeeDeletedAnime.remove(imagePath); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/7229/buggy-version/src.util.window.AddAnimeDialog.java", "BodyUseAPI": ["AnimeIndex.completedToSeeDeletedAnime.remove(java.lang.String)"], "Fixed commit": "4ff462f50f91e976b444c6153c2b315fcb296ea4", "Url": "https://api.github.com/repos/MyAnimeManager/MyAnimeManager", "Date": "2015-07-28T15:05:42Z"},
{"Line": "=>824", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["AnimeIndex.filmMap.get(name).getImagePath(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (AnimeIndex.filmDeletedAnime.contains(imagePath)) { AnimeIndex.filmDeletedAnime.remove(imagePath); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/7229/buggy-version/src.util.window.AddAnimeDialog.java", "BodyUseAPI": ["AnimeIndex.filmDeletedAnime.remove(java.lang.String)"], "Fixed commit": "4ff462f50f91e976b444c6153c2b315fcb296ea4", "Url": "https://api.github.com/repos/MyAnimeManager/MyAnimeManager", "Date": "2015-07-28T15:05:42Z"},
{"Line": "=>749", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["AnimeIndex.airingMap.get(name).getImagePath(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (AnimeIndex.airingDeletedAnime.contains(imagePath)) { AnimeIndex.airingDeletedAnime.remove(imagePath); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/7229/buggy-version/src.util.window.AddAnimeDialog.java", "BodyUseAPI": ["AnimeIndex.airingDeletedAnime.remove(java.lang.String)"], "Fixed commit": "4ff462f50f91e976b444c6153c2b315fcb296ea4", "Url": "https://api.github.com/repos/MyAnimeManager/MyAnimeManager", "Date": "2015-07-28T15:05:42Z"},
{"Line": "=>786", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["AnimeIndex.ovaMap.get(name).getImagePath(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (AnimeIndex.ovaDeletedAnime.contains(imagePath)) { AnimeIndex.ovaDeletedAnime.remove(imagePath); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/7229/buggy-version/src.util.window.AddAnimeDialog.java", "BodyUseAPI": ["AnimeIndex.ovaDeletedAnime.remove(java.lang.String)"], "Fixed commit": "4ff462f50f91e976b444c6153c2b315fcb296ea4", "Url": "https://api.github.com/repos/MyAnimeManager/MyAnimeManager", "Date": "2015-07-28T15:05:42Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (psdRegion == (annis.visualizers.htmlvis.PseudoRegionMatcher.PseudoRegion.BEGIN)) { this.annotationName = \"annis_BEGIN\"; }else { this.annotationName = \"annis_END\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/3260/buggy-version/annis-visualizers.src.main.java.annis.visualizers.htmlvis.PseudoRegionMatcher.java", "BodyUseAPI": [], "Fixed commit": "d40ba6f38786e29f2b1512c9e5584df086233245", "Url": "https://api.github.com/repos/amir-zeldes/ANNIS", "Date": "2015-12-17T10:14:25Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (count > 0) { writer.write(buffer, 0, count); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/4325/buggy-version/src.main.java.cz.milik.nmcalc.utils.Utils.java", "BodyUseAPI": ["java.io.Writer.write(char[],int,int)"], "Fixed commit": "8614db018cdb000ebde65f371cdeb5f8db1c4839", "Url": "https://api.github.com/repos/nnen/nmcalc", "Date": "2015-10-14T11:19:45Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isRegistered) { mSharedPreferencesManager.writeLoginState(isRegistered); new com.example.webprog26.datatask.threads.UserIdReaderThread(mDbProvider, mEtLoginName.getText().toString(), this).start(); startActivity(new android.content.Intent(this, com.example.webprog26.datatask.activities.LoggedInActivity.class)); finish(); }else { new android.os.Handler(android.os.Looper.getMainLooper()).post(new java.lang.Runnable() { @java.lang.Override public void run() { android.widget.Toast.makeText(com.example.webprog26.datatask.activities.MainActivity.this, getResources().getString(R.string.unregistered_user_login), Toast.LENGTH_SHORT).show(); } }); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/7852/buggy-version/app.src.main.java.com.example.webprog26.datatask.activities.MainActivity.java", "BodyUseAPI": ["com.example.webprog26.datatask.managers.SharedPreferencesManager.writeLoginState(boolean)"], "Fixed commit": "2015b1f2f42bb076086bc5289f511a2c519bebcb", "Url": "https://api.github.com/repos/webprog26/taskSQLiteandSharedPreferences", "Date": "2016-11-24T09:29:59Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openide.filesystems.FileUtil.urlForArchiveOrDir(java.io.File)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (url != null) { result.add(org.netbeans.spi.java.classpath.support.ClassPathSupport.createResource(url)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/3077/buggy-version/src.org.netbeans.gradle.project.query.GradleClassPathProvider.java", "BodyUseAPI": ["java.util.List<org.netbeans.spi.java.classpath.PathResourceImplementation>.add(org.netbeans.spi.java.classpath.support.ClassPathSupport.createResource(url))", "org.netbeans.spi.java.classpath.support.ClassPathSupport.createResource(java.net.URL)"], "Fixed commit": "3810a668df6bae7c502d18cb2c5b8b6e8079d766", "Url": "https://api.github.com/repos/dantwinkler/netbeans-gradle-project", "Date": "2012-08-26T11:30:34Z"},
{"Line": "=>867", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ForgeEssentials.api.data.ClassContainer.getType()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((((((type.equals(byte.class)) || (type.equals(int.class))) || (type.equals(float.class))) || (type.equals(double.class))) || (type.equals(long.class))) || (type.equals(java.lang.String.class))) || (type.equals(boolean.class))) { value = dbValue; }else if (type.equals(double[].class)) { java.lang.String[] values = ((java.lang.String) (dbValue)).split(\",\"); double[] result = new double[values.length]; for (int i = 0; i < (values.length); ++i) { result[i] = java.lang.Double.valueOf(values[i]).doubleValue(); } value = result; }else if (type.equals(int[].class)) { java.lang.String[] values = ((java.lang.String) (dbValue)).split(\",\"); int[] result = new int[values.length]; for (int i = 0; i < (values.length); ++i) { result[i] = java.lang.Integer.valueOf(values[i]).intValue(); } value = result; }else if (type.equals(byte[].class)) { java.lang.String[] values = ((java.lang.String) (dbValue)).split(\",\"); byte[] result = new byte[values.length]; for (int i = 0; i < (values.length); ++i) { result[i] = java.lang.Byte.valueOf(values[i]).byteValue(); } value = result; }else if (type.equals(boolean[].class)) { java.lang.String[] values = ((java.lang.String) (dbValue)).split(\",\"); boolean[] result = new boolean[values.length]; for (int i = 0; i < (values.length); ++i) { result[i] = java.lang.Boolean.valueOf(values[i]).booleanValue(); } value = result; }else if (type.equals(java.lang.String[].class)) { java.lang.String[] values = ((java.lang.String) (dbValue)).split(\"!??!\"); for (int i = 0; i < (values.length); ++i) { values[i] = values[i].replaceAll(\"\\\"\\\"\", \"'\"); } value = values; }else { com.ForgeEssentials.api.data.ITypeInfo info = com.ForgeEssentials.api.data.DataStorageManager.getInfoForType(targetType); if (!(info.canSaveInline())) { com.ForgeEssentials.api.data.TypeMultiValInfo multiInfo = ((com.ForgeEssentials.api.data.TypeMultiValInfo) (info)); java.lang.String ID = dbValue.toString(); ID = com.ForgeEssentials.api.data.TypeMultiValInfo.getUIDFromUnique(ID); java.sql.Statement s = getDbConnection().createStatement(); java.sql.ResultSet result = s.executeQuery((((((((\"SELECT * FROM \" + (FEDATA_PREFIX)) + (targetType.getFileSafeName())) + \" WHERE \") + (MULTI_MARKER)) + \"='\") + ID) + \"'\")); com.ForgeEssentials.api.data.TypeData data = com.ForgeEssentials.api.data.DataStorageManager.getDataForType(targetType); com.ForgeEssentials.api.data.TypeEntryInfo entryInfo = multiInfo.getEntryInfo(); java.lang.String connector = multiInfo.getEntryName(); com.ForgeEssentials.api.data.TypeData temp; int i = 0; while (result.next()) { temp = com.ForgeEssentials.api.data.DataStorageManager.getDataForType(info.getType()); createTaggedClassFromResult(resultRowToMap(result), entryInfo, data); data.putField((connector + (i++)), temp); } value = data; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/5054/buggy-version/src.FE_SRC_COMMON.com.ForgeEssentials.data.SQLDataDriver.java", "BodyUseAPI": ["java.lang.Class.equals(java.lang.Class)", "java.lang.Class.equals(java.lang.Class)", "java.lang.Class.equals(java.lang.Class)", "java.lang.Class.equals(java.lang.Class)", "java.lang.Class.equals(java.lang.Class)"], "Fixed commit": "29973d0fca132f0608f3d401ad0e71c0339b1e80", "Url": "https://api.github.com/repos/ForgeEssentials/ForgeEssentialsMain", "Date": "2013-03-21T23:22:07Z"},
{"Line": "=>276", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (entry.getKey().equalsIgnoreCase(UNIQUE)) { data.setUniqueKey(entry.getValue().toString()); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/5054/buggy-version/src.FE_SRC_COMMON.com.ForgeEssentials.data.SQLDataDriver.java", "BodyUseAPI": ["java.util.Map.Entry<java.lang.String, java.lang.Object>.getValue()", "com.ForgeEssentials.api.data.TypeData.setUniqueKey(java.lang.String)", "java.lang.Object.toString()"], "Fixed commit": "29973d0fca132f0608f3d401ad0e71c0339b1e80", "Url": "https://api.github.com/repos/ForgeEssentials/ForgeEssentialsMain", "Date": "2013-03-21T23:22:07Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.schildbach.wallet.ExchangeRatesProvider.bestExchangeRate(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (rate != null) cursor.newRow().add(rate.currencyCode.hashCode()).add(rate.currencyCode).add(rate.rate.longValue()).add(rate.source);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/412/buggy-version/wallet.src.de.schildbach.wallet.ExchangeRatesProvider.java", "BodyUseAPI": ["cursor.newRow().add(rate.currencyCode.hashCode()).add(rate.currencyCode).add(long)", "java.math.BigInteger.longValue()", "cursor.newRow().add(rate.currencyCode.hashCode()).add(rate.currencyCode).add(rate.rate.longValue()).add(java.lang.String)", "cursor.newRow().add(int)", "cursor.newRow().add(rate.currencyCode.hashCode()).add(java.lang.String)", "java.lang.String.hashCode()"], "Fixed commit": "2a0f59ee4a62149b6b5f4472add27823bb0d2ed6", "Url": "https://api.github.com/repos/HashEngineering/quarkcoin-wallet", "Date": "2014-03-17T04:26:10Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (params.getStatuses().isEmpty()) return new java.util.ArrayList<org.ow2.proactive.scheduler.common.task.TaskState>();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/2736/buggy-version/scheduler.scheduler-server.src.main.java.org.ow2.proactive.scheduler.core.db.TaskDBUtils.java", "BodyUseAPI": [], "Fixed commit": "9c0a631d997b7c575973cc9b205eb9d523ed1b46", "Url": "https://api.github.com/repos/paraita/scheduling", "Date": "2015-11-13T13:54:54Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getHeader(Constants.HEADER_VALUE_TENANT)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((null == tenant) || (tenant.isEmpty())) { boolean throwIfNotPresent = java.lang.Boolean.valueOf(((java.lang.String) (request.getServletContext().getAttribute(Constants.PARAM_MULTI_TENANCY_THROW_IF_NOT_PRESENT)))); if (throwIfNotPresent) { response.setStatus(HttpStatus.BAD_REQUEST.value()); throw new java.lang.IllegalArgumentException(java.lang.String.format(\"No tenant information available in http header. Expected header %s attribute not present.\", Constants.HEADER_VALUE_TENANT)); } }else { org.slf4j.MDC.put(Constants.HEADER_VALUE_TENANT, tenant); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/8465/buggy-version/src.main.java.org.ameba.http.SLF4JMappedDiagnosticContextFilter.java", "BodyUseAPI": ["org.slf4j.MDC.put(Constants.HEADER_VALUE_TENANT,java.lang.String)"], "Fixed commit": "a9f416c227a8ee5f5a2f81f8224854537dff8ac2", "Url": "https://api.github.com/repos/abraxas-labs/ameba-lib", "Date": "2015-11-08T11:00:37Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["driver.getEntity().getConfig(NginxController.SSL_CONFIG)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (ssl != null) builder.put(\"ssl\", ssl);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/5808/buggy-version/software.webapp.src.main.java.brooklyn.entity.proxy.nginx.NginxConfigTemplate.java", "BodyUseAPI": ["builder.put(java.lang.String,brooklyn.entity.proxy.ProxySslConfig)"], "Fixed commit": "f0b6358eb4eea2255ffa4fe46a795b2adf79c287", "Url": "https://api.github.com/repos/brooklyncentral/brooklyn", "Date": "2013-12-12T17:40:39Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.isDestroyed) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/1854/buggy-version/Studiportal_Checker.src.de.hfu.studiportal.view.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "5b4a407f32fc856273fd23c36ac62ea182c2c51f", "Url": "https://api.github.com/repos/crysxd/Studiportal-Checker", "Date": "2014-08-18T19:42:38Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((context) != null) { com.group16.enigma.ChatListAdapter.inflater = ((android.view.LayoutInflater) (context.getSystemService(Context.LAYOUT_INFLATER_SERVICE))); this.conversationList = conversationList; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/4743/buggy-version/app.src.main.java.com.group16.enigma.ChatListAdapter.java", "BodyUseAPI": [], "Fixed commit": "dead1a3d525e7e7cbf156dce89a76353f89a741a", "Url": "https://api.github.com/repos/colevanh/Enigma", "Date": "2016-11-28T20:35:50Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["daoFactory.getUrlDAO().getUrlByLogin(user.getId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (url == null) { url = new ads_tracking.Entity.Url(); url.setUrl(uri); url.setUserId(user.getId()); url.setActive((active.equals(\"true\") ? true : false)); }else { url.setActive((active.equals(\"true\") ? true : false)); url.setUrl(uri); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/4310/buggy-version/src.main.java.ads_tracking.controller.RestApiController.java", "BodyUseAPI": ["ads_tracking.Entity.Url.setActive(boolean)", "ads_tracking.Entity.Url.setUrl(java.lang.String)"], "Fixed commit": "4bb3a4c916e6c573580ad082008e2f10916086a5", "Url": "https://api.github.com/repos/fizikovnet/ads-tracking", "Date": "2017-04-27T18:33:39Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (folder == null) { dlFolderLocalService.addFolder(userId, serviceContext.getScopeGroupId(), serviceContext.getScopeGroupId(), false, parentFolderId, java.lang.String.valueOf(dossierNo), StringPool.BLANK, false, serviceContext); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/1390/buggy-version/portlets.opencps-portlet.docroot.WEB-INF.src.org.opencps.dossiermgt.service.impl.DossierLocalServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "3c39d7a00a5988aa786eb19683a261177e88a40f", "Url": "https://api.github.com/repos/trungnt-ksnb/opencps", "Date": "2016-06-27T11:01:26Z"},
{"Line": "=>374", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((inventory.getEquippedWeapons()[this.weaponSelected]) != null) inventory.getEquippedWeapons()[this.weaponSelected].setBorder(javax.swing.BorderFactory.createEmptyBorder());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/2740/buggy-version/src.Client.Client.java", "BodyUseAPI": ["Client.ClientInventory.getEquippedWeapons()", "inventory.getEquippedWeapons()[this.weaponSelected].setBorder(javax.swing.border.Border)"], "Fixed commit": "432aa49078e4b068fa46098b00d313c86c566b45", "Url": "https://api.github.com/repos/Williamxu98/WorldQuestOnline", "Date": "2016-01-08T13:43:55Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sumOfFitness == 0) sumOfFitness = 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/1207/buggy-version/gr.auth.ee.lcs.data.updateAlgorithms.GenericUCSUpdateAlgorithm.java", "BodyUseAPI": [], "Fixed commit": "f9010f2eb078fc4e92b712109b60f603e196f055", "Url": "https://api.github.com/repos/mallamanis/LCSFramework", "Date": "2011-03-29T19:21:32Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (input == null) input = \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/6566/buggy-version/src.main.java.br.octahedron.cotopaxi.validation.RegexRule.java", "BodyUseAPI": [], "Fixed commit": "5590efd2dfc67c6c2c9460e8cffe33667c1801fe", "Url": "https://api.github.com/repos/OctahedronBR/cotopaxi-core", "Date": "2011-07-06T23:57:06Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (keyword == null) { keyword = new java.util.HashMap<>(); keyword.put(\"\u6e05\u534e\", 100.0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/5688/buggy-version/zu26.app.src.main.java.com.java.zu26.util.UserSetting.java", "BodyUseAPI": [], "Fixed commit": "f102a623cc7cc0e0c579f129f44efc0e6955393c", "Url": "https://api.github.com/repos/Karl8/CaiVaNews", "Date": "2017-09-14T12:12:56Z"},
{"Line": "=>568", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.jface.preference.IPreferenceStore.getInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (ret == 0) { ret = ch.elexis.omnivore.views.Preferences.OmnivoreMax_Filename_Length_Default; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/1579/buggy-version/ch.elexis.omnivore.src.ch.elexis.omnivore.views.Preferences.java", "BodyUseAPI": [], "Fixed commit": "61e591f99cdb10747a74b5be0cf45eed5b5a9d38", "Url": "https://api.github.com/repos/ngiger/elexis-3-base", "Date": "2014-06-06T12:39:00Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (onDrawReady) { setZoom(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/3900/buggy-version/src.com.example.touch.TouchImageView.java", "BodyUseAPI": [], "Fixed commit": "946db2158a1a06f08568d7f45ea0a83aa3ec1ec7", "Url": "https://api.github.com/repos/MikeOrtiz/TouchImageView", "Date": "2014-04-16T17:50:24Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (passed.equals(\"Anub%27arak\")) { passed = \"Anub'arak\"; }else if (passed.equals(\"Kael%27thas\")) { passed = \"Kael'thas\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/3031/buggy-version/app.src.main.java.com.ryan.heroestopbuilds.MainActivity.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "4f6e943c3bce56545776468ae748be0f77021a73", "Url": "https://api.github.com/repos/r-t-a/HeroesApp", "Date": "2016-01-15T02:19:00Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getIntent().getBooleanExtra(\"isSenior\", true)) { android.content.Intent i = new android.content.Intent(this, com.al.whippersnapper.activities.SeniorHomeActivity.class); startActivity(i); }else { android.content.Intent i = new android.content.Intent(this, com.al.whippersnapper.activities.FindTaskActivity.class); startActivity(i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/4318/buggy-version/WhipperSnapper.app.src.main.java.com.al.whippersnapper.activities.FillOutProfileActivity.java", "BodyUseAPI": [], "Fixed commit": "9a92edad0d1cc9daca0184b226051b92ba11e716", "Url": "https://api.github.com/repos/asweigart/WhipperSnapper", "Date": "2015-03-13T07:33:43Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.android.volley.VolleyLog.DEBUG) { com.android.volley.VolleyLog.d(\"request.method = %1$s\", request.getMethod()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/834/buggy-version/library.src.main.java.im.amomo.volley.OkHttpStack.java", "BodyUseAPI": [], "Fixed commit": "b0fdb4bd9e0bcc54c5a0c5175f57c38030ad749f", "Url": "https://api.github.com/repos/googolmo/OkVolley", "Date": "2014-06-09T02:45:15Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((npcFolder.exists()) && (npcFolder.isDirectory())) { pathToNPCs = \"./bin/NPC\"; }else { pathToNPCs = \"./NPC\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/8311/buggy-version/src.com.taut.game.models.NPCGenerator.java", "BodyUseAPI": [], "Fixed commit": "df1d795a9c420e3b2537ac0c2b8eb9856700b67c", "Url": "https://api.github.com/repos/porgull/taut-core", "Date": "2017-06-07T00:45:18Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<at.tugraz.ist.catroid.common.CostumeData>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((costumeData.getAbsolutePath()) != null) { costumeSize.setText(at.tugraz.ist.catroid.utils.UtilFile.getSizeAsString(new java.io.File(costumeData.getAbsolutePath()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/488/buggy-version/catroid.src.at.tugraz.ist.catroid.ui.adapter.CostumeAdapter.java", "BodyUseAPI": ["android.widget.TextView.setText(at.tugraz.ist.catroid.utils.UtilFile.getSizeAsString(new java.io.File(costumeData.getAbsolutePath())))", "at.tugraz.ist.catroid.utils.UtilFile.getSizeAsString(java.io.File)", "at.tugraz.ist.catroid.common.CostumeData.getAbsolutePath()"], "Fixed commit": "ebbc1803ebe2b63d617b2949cd7cd57b748e8318", "Url": "https://api.github.com/repos/Catrobat/Catroid", "Date": "2012-07-04T15:12:12Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cc.hitCounter) <= 3) { sc.player.setAnimation(((cc.hitCounter)++)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/5616/buggy-version/core.src.com.mygdx.game.system.CocoonSystem.java", "BodyUseAPI": [], "Fixed commit": "895507d52227627cb74177c3a361d2d3ac3cb113", "Url": "https://api.github.com/repos/Teatree/Krashe3", "Date": "2016-04-02T17:40:20Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.Cursor.getString(data.getColumnIndex(AlexandriaContract.AuthorEntry.AUTHOR))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (authors != null) { java.lang.String[] authorsArr = authors.split(\",\"); ((android.widget.TextView) (rootView.findViewById(R.id.authors))).setLines(authorsArr.length); ((android.widget.TextView) (rootView.findViewById(R.id.authors))).setText(authors.replace(\",\", \"\\n\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/3388/buggy-version/alexandria.app.src.main.java.it.jaschke.alexandria.AddBook.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)", "java.lang.String.split(java.lang.String)", "((android.widget.TextView) (rootView.findViewById(R.id.authors))).setText(java.lang.String)"], "Fixed commit": "ad2bd2b7cd61c9bbac99df7c9a38de4c4e4fafc7", "Url": "https://api.github.com/repos/dgaither1/SuperDuo", "Date": "2016-02-13T14:17:00Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.Cursor.getString(data.getColumnIndex(AlexandriaContract.AuthorEntry.AUTHOR))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (authors != null) { java.lang.String[] authorsArr = authors.split(\",\"); ((android.widget.TextView) (rootView.findViewById(R.id.authors))).setLines(authorsArr.length); ((android.widget.TextView) (rootView.findViewById(R.id.authors))).setText(authors.replace(\",\", \"\\n\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/3388/buggy-version/alexandria.app.src.main.java.it.jaschke.alexandria.BookDetail.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)", "((android.widget.TextView) (rootView.findViewById(R.id.authors))).setText(java.lang.String)", "java.lang.String.split(java.lang.String)"], "Fixed commit": "ad2bd2b7cd61c9bbac99df7c9a38de4c4e4fafc7", "Url": "https://api.github.com/repos/dgaither1/SuperDuo", "Date": "2016-02-13T14:17:00Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["options.getMarkerPattern().matcher(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((matcher.groupCount()) >= 1) { markers.add(matcher.group(1)); }else { markers.add(matcher.group()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/2674/buggy-version/ic-depress-scm-git.src.org.impressivecode.depress.scm.git.GitLogParser.java", "BodyUseAPI": ["java.util.Set<java.lang.String>.add(java.lang.String)", "java.util.Set<java.lang.String>.add(java.lang.String)", "java.util.regex.Matcher.group(int)", "java.util.regex.Matcher.group()"], "Fixed commit": "e0b97769694bb1e0d15c446e134d3e1e0dea0ee9", "Url": "https://api.github.com/repos/ImpressiveCode/ic-depress", "Date": "2013-04-30T19:21:48Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (newFrame.startGameButton.getText().equals(\"Resume Game\")) { newFrame.changeState(\"Pause Game\"); newFrame.hideControlPanel(); }else if (newFrame.startGameButton.getText().equals(\"Pause Game\")) { newFrame.changeState(\"Resume Game\"); newFrame.hideControlPanel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/9248/buggy-version/src.run_mouse_run.DrawEngine.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "run_mouse_run.DrawEngine.DrawEngineFrame.hideControlPanel()", "run_mouse_run.DrawEngine.DrawEngineFrame.changeState(java.lang.String)", "run_mouse_run.DrawEngine.DrawEngineFrame.hideControlPanel()", "run_mouse_run.DrawEngine.DrawEngineFrame.changeState(java.lang.String)", "javax.swing.JButton.getText()"], "Fixed commit": "80789d9d57ed70fbc815d55bf32f1b3f39313b66", "Url": "https://api.github.com/repos/UdevCommunity/URivals-RunMouseRun", "Date": "2017-07-13T05:25:01Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((table.getColumnCount()) == 0) { actionClear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/862/buggy-version/src.gui.org.deidentifier.arx.gui.view.impl.define.ViewHierarchy.java", "BodyUseAPI": [], "Fixed commit": "7e1131d8e0d65c1b3619736f794349da8cb2f701", "Url": "https://api.github.com/repos/arx-deidentifier/arx", "Date": "2014-04-15T15:51:49Z"},
{"Line": "=>352", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (worldObj.isRemote) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/3117/buggy-version/src.main.java.mcjty.rftools.blocks.spaceprojector.BuilderTileEntity.java", "BodyUseAPI": [], "Fixed commit": "cfd627a3528c118d554d6d42b60db2f07c12b676", "Url": "https://api.github.com/repos/McJtyMods/RFTools", "Date": "2015-10-23T08:55:13Z"},
{"Line": "=>396", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.System.currentTimeMillis()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((nextRequestedPollTime - now) < 10000L) { nextRequestedPollTime = nextActualPollTime; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/2462/buggy-version/app.src.main.java.info.nightscout.android.medtronic.service.MedtronicCnlIntentService.java", "BodyUseAPI": [], "Fixed commit": "3f67a00e19f5e05c35dc166808c21d4363692cf6", "Url": "https://api.github.com/repos/Pogman/640gAndroidUploader", "Date": "2017-07-18T17:45:32Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this) == obj) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/3727/buggy-version/src.main.java.com.iota.iri.model.Hash.java", "BodyUseAPI": [], "Fixed commit": "6b7d90545e0727b5d956ad0f8cf97226c0d9871c", "Url": "https://api.github.com/repos/pinpong/iri", "Date": "2016-12-12T15:24:56Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((obj == null) || (!(obj instanceof com.iota.iri.model.Hash))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/3727/buggy-version/src.main.java.com.iota.iri.model.Hash.java", "BodyUseAPI": [], "Fixed commit": "6b7d90545e0727b5d956ad0f8cf97226c0d9871c", "Url": "https://api.github.com/repos/pinpong/iri", "Date": "2016-12-12T15:24:56Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((obj == null) || (!(obj instanceof com.iota.iri.service.dto.AbstractResponse))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/3727/buggy-version/src.main.java.com.iota.iri.service.dto.AbstractResponse.java", "BodyUseAPI": [], "Fixed commit": "6b7d90545e0727b5d956ad0f8cf97226c0d9871c", "Url": "https://api.github.com/repos/pinpong/iri", "Date": "2016-12-12T15:24:56Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this) == obj) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/3727/buggy-version/src.main.java.com.iota.iri.service.dto.AbstractResponse.java", "BodyUseAPI": [], "Fixed commit": "6b7d90545e0727b5d956ad0f8cf97226c0d9871c", "Url": "https://api.github.com/repos/pinpong/iri", "Date": "2016-12-12T15:24:56Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(join.getJoins().isEmpty())) { alterEntityConvertJoins(cursor, join, fieldEntity); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/6577/buggy-version/app.src.main.java.db.juhaku.juhakudb.core.android.EntityConverter.java", "BodyUseAPI": ["db.juhaku.juhakudb.core.android.EntityConverter.alterEntityConvertJoins(android.database.Cursor,db.juhaku.juhakudb.filter.Root.Join,T)"], "Fixed commit": "910750d930303a37e7f159b094ae06d84bdd8621", "Url": "https://api.github.com/repos/juhaku/juhakudb", "Date": "2017-04-16T19:14:35Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (id != null) { for (T entity : entities) { if (id.equals(db.juhaku.juhakudb.util.ReflectionUtils.getIdFieldValue(entity))) { return entity; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/6577/buggy-version/app.src.main.java.db.juhaku.juhakudb.core.android.EntityConverter.java", "BodyUseAPI": ["java.lang.Object.equals(db.juhaku.juhakudb.util.ReflectionUtils.getIdFieldValue(entity))"], "Fixed commit": "910750d930303a37e7f159b094ae06d84bdd8621", "Url": "https://api.github.com/repos/juhaku/juhakudb", "Date": "2017-04-16T19:14:35Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["db.juhaku.juhakudb.util.ReflectionUtils.getIdFieldValue(T)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (id != null) { db.juhaku.juhakudb.util.ReflectionUtils.setFieldValue(targetField, entity, fieldEntity); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/6577/buggy-version/app.src.main.java.db.juhaku.juhakudb.core.android.EntityConverter.java", "BodyUseAPI": [], "Fixed commit": "910750d930303a37e7f159b094ae06d84bdd8621", "Url": "https://api.github.com/repos/juhaku/juhakudb", "Date": "2017-04-16T19:14:35Z"},
{"Line": "=>415", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((tempArr.length) == multiCount) { result.append(tempArr[i]); }else { if (i < (tempMulti.length())) { result.append(tempMulti.charAt(i)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/4627/buggy-version/src.main.java.com.github.stuxuhai.jpinyin.PinyinHelper.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "617476350d8355f81543b183fc830791071a2882", "Url": "https://api.github.com/repos/freeme/jpinyin", "Date": "2017-07-25T03:29:34Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.includeCells) != null) { for (java.lang.String cell : this.includeCells) { java.awt.Point p = jp.co.flect.excel2canvas.ExcelUtils.nameToPoint(cell); if ((p.x) > (this.maxCol)) { this.maxCol = p.x; } if ((p.y) > (this.maxRow)) { this.maxRow = p.y; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/6975/buggy-version/src.main.java.jp.co.flect.excel2canvas.ExcelToCanvasBuilder.java", "BodyUseAPI": [], "Fixed commit": "e266d3b7c290ba5fa7fa6e4ab1f19e4ce66eb648", "Url": "https://api.github.com/repos/shunjikonishi/excel2canvas", "Date": "2013-04-08T11:54:29Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (builder.toString().endsWith(\",\")) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/7061/buggy-version/src.main.java.view.weatherPage.WeatherPageController.java", "BodyUseAPI": [], "Fixed commit": "54e9b4a2cec8506b17bb9bc6fc9c32f2f9b050e7", "Url": "https://api.github.com/repos/ykarim/WeatherWatch", "Date": "2017-07-26T22:51:55Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState != null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/5954/buggy-version/app.src.main.java.com.example.android.bakingrecipe.activities.RecipeIngredientsActivity.java", "BodyUseAPI": [], "Fixed commit": "dcd3cd02acbf306f3d1cc87afa9ba575115d1fa6", "Url": "https://api.github.com/repos/PuniCharana/Baking-Recipe", "Date": "2017-08-20T22:02:31Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.droidplanner.fragments.OfflineMapFragment.getMap()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (mMap != null) { mMap.setMyLocationEnabled(true); com.google.android.gms.maps.UiSettings mUiSettings = mMap.getUiSettings(); mUiSettings.setMyLocationButtonEnabled(true); mUiSettings.setCompassEnabled(true); mUiSettings.setTiltGesturesEnabled(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/2675/buggy-version/DroidPlanner.src.com.droidplanner.fragments.OfflineMapFragment.java", "BodyUseAPI": ["com.google.android.gms.maps.GoogleMap.getUiSettings()", "com.google.android.gms.maps.GoogleMap.setMyLocationEnabled(boolean)"], "Fixed commit": "5c18723bf71fd8cdb07cdb577263c442fca63e61", "Url": "https://api.github.com/repos/arthurbenemann/droidplanner", "Date": "2013-05-03T16:05:10Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (resultCode == (RESULT_OK)) { voiceResults = data.getStringArrayListExtra(RecognizerIntent.EXTRA_RESULTS); android.util.Log.d(com.androidiansoft.glass.glasstips.TipCalculationActivity.TAG, (\"VoiceResults from speech intent AT0: \" + (voiceResults.get(0)))); if ((voiceResults) != null) { createView(voiceResults); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/814/buggy-version/src.com.androidiansoft.glass.glasstips.TipCalculationActivity.java", "BodyUseAPI": [], "Fixed commit": "8f59d23acd84a41d723a4f8133330c5e722c52c2", "Url": "https://api.github.com/repos/asmenter15/GlassTips", "Date": "2014-01-28T22:04:19Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.uniks.networkparser.xml.XMLTokener.getChar()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (nextChar == '!') { skipTo(\"-->\", true, true); skip(); }else { buffer.withLookAHead(c); if ((getCurrentChar()) == '<') { child = ((de.uniks.networkparser.xml.XMLEntity) (xmlEntity.getNewList(true))); parseToEntity(((de.uniks.networkparser.interfaces.Entity) (child))); xmlEntity.with(child); skip(); }else { xmlEntity.withValue(nextString(new de.uniks.networkparser.buffer.CharacterBuffer(), false, false, '<').toString()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/3411/buggy-version/src.main.java.de.uniks.networkparser.xml.XMLTokener.java", "BodyUseAPI": [], "Fixed commit": "ef81091dcf630fad4e6023ff663f5b960fd2d0d8", "Url": "https://api.github.com/repos/fujaba/NetworkParser", "Date": "2016-06-23T11:44:19Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(hasAlreadyBeenUpdated)) updateSongList();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/6805/buggy-version/src.com.jchingdev.jplayer.SongListActivity.java", "BodyUseAPI": [], "Fixed commit": "b152a898f13836884be97d9c5d46f59d2413c29f", "Url": "https://api.github.com/repos/JoshuaChing/jPlayer", "Date": "2014-04-19T06:37:46Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.sysml.runtime.controlprogram.caching.MatrixObject.getNumColumns()", "org.apache.sysml.runtime.controlprogram.caching.MatrixObject.getNumRows()", "org.apache.sysml.runtime.controlprogram.caching.MatrixObject.getNumColumns()", "org.apache.sysml.runtime.controlprogram.caching.MatrixObject.getNumRows()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((rlen1 != rlen2) || (clen1 != clen2)) { rlen = (rlen1 > rlen2) ? rlen1 : rlen2; clen = (clen1 > clen2) ? clen1 : clen2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/6214/buggy-version/src.main.java.org.apache.sysml.runtime.instructions.gpu.MatrixMatrixArithmeticGPUInstruction.java", "BodyUseAPI": [], "Fixed commit": "1a94f8d25a7392bbf9e69f0c106376c305944fd6", "Url": "https://api.github.com/repos/nakul02/systemml", "Date": "2016-10-24T06:45:19Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["engine.GameState.clone()", "java.util.ArrayList<int[]>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((gS.checkSpace(i, temp[j])) == (engine.EngineValues.EMPTY)) { gS.occupyLocalBoardState(i, temp[j]); children.add(new ai.Node(ai, gS, ((depth) + 1), (!(isMax)), this, i, temp[j])); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/7823/buggy-version/src.ai.Node.java", "BodyUseAPI": ["engine.GameState.occupyLocalBoardState(int,int)", "java.util.ArrayList<ai.Node>.add(ai.Node)"], "Fixed commit": "795aa1f65a857458a1d385d641f8198d08a28051", "Url": "https://api.github.com/repos/BrandonQDixon/SuperT", "Date": "2017-04-13T16:15:10Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<com.hkb48.keepdo.TasksActivity.TaskListItem>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((item.type) == (com.hkb48.keepdo.TasksActivity.TYPE_ITEM)) { com.hkb48.keepdo.Task task = ((com.hkb48.keepdo.Task) (item.data)); java.lang.Long taskId = task.getTaskID(); android.content.Intent intent = new android.content.Intent(this, com.hkb48.keepdo.TaskActivity.class); intent.putExtra(\"TASK-ID\", taskId); startActivityForResult(intent, com.hkb48.keepdo.TasksActivity.REQUEST_SHOW_CALENDAR); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/7531/buggy-version/src.com.hkb48.keepdo.TasksActivity.java", "BodyUseAPI": [], "Fixed commit": "eb4ed4274fa8e73f7a0ed1e98fd4b34f590f1b76", "Url": "https://api.github.com/repos/giza10/keep-doing", "Date": "2013-07-09T16:03:09Z"},
{"Line": "=>360", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((movie) == null) { movie = m; fromFavoriteList = fromFavorite; if ((movie) != null) { populateFields(movie); } configureFragment(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/3164/buggy-version/app.src.main.java.me.leofontes.movies.Fragments.MovieDetailActivityFragment.java", "BodyUseAPI": [], "Fixed commit": "535f3697e19e2292329b41789ffa0e84d75e42bd", "Url": "https://api.github.com/repos/leofontes/android-movies", "Date": "2016-12-06T15:38:48Z"},
{"Line": "=>431", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (tmp_view != null) views.put(local_addr, tmp_view);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/2451/buggy-version/src.org.jgroups.protocols.MERGE2.java", "BodyUseAPI": ["java.util.Map<org.jgroups.protocols.Address, org.jgroups.protocols.View>.put(org.jgroups.protocols.Address,org.jgroups.protocols.View)"], "Fixed commit": "51c6540568ca842e3b554b05a9367ccc661256c6", "Url": "https://api.github.com/repos/pferraro/JGroups", "Date": "2014-07-23T14:38:48Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((tree.getSelectionCount()) == 1) && (((selection = tree.getSelection()[0]).getData()) != null)) { if ((new org.nschmidt.ldparteditor.dialogs.keys.KeyDialog(getShell()).open()) == (org.eclipse.jface.dialogs.IDialogConstants.OK_ID)) { selection.setText(new java.lang.String[]{ selection.getText(0), org.nschmidt.ldparteditor.state.KeyStateManager.tmp_keyString }); tree.build(); tree.update(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/6231/buggy-version/src.org.nschmidt.ldparteditor.dialogs.keys.KeyTableDesign.java", "BodyUseAPI": ["org.nschmidt.ldparteditor.widgets.Tree.build()", "org.nschmidt.ldparteditor.widgets.Tree.update()"], "Fixed commit": "f9f90c692973ce4ff0bc727ad518c03a95f68bee", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2015-09-15T22:42:44Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.persistence.EntityManager.find(java.lang.Class,java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (property != null) { filesModel.setPropertyId(property.getId()); }else { property = new com.vinodseb.springmvca.entities.Property(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/1707/buggy-version/src.main.java.com.vinodseb.springmvca.web.SellController.java", "BodyUseAPI": ["com.vinodseb.springmvca.service.MultiFileBucket.setPropertyId(property.getId())", "com.vinodseb.springmvca.entities.Property.getId()"], "Fixed commit": "d8f8f398106fe66d5a8cdf5e1f2a954dbe2d7e09", "Url": "https://api.github.com/repos/vinodseb/realestate-web", "Date": "2015-12-18T01:06:51Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.persistence.EntityManager.find(java.lang.Class,property.getId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (tempProperty == null) { em.persist(property); }else { property = em.merge(property); em.refresh(property); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/1707/buggy-version/src.main.java.com.vinodseb.springmvca.web.SellController.java", "BodyUseAPI": [], "Fixed commit": "d8f8f398106fe66d5a8cdf5e1f2a954dbe2d7e09", "Url": "https://api.github.com/repos/vinodseb/realestate-web", "Date": "2015-12-18T01:06:51Z"},
{"Line": "=>332", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.lang.String, java.lang.Object>.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (param instanceof java.lang.Iterable) { jg.writeArrayFieldStart(entry.getKey()); for (java.lang.Object object : ((java.lang.Iterable) (param))) { org.nuxeo.ecm.automation.client.jaxrs.spi.JsonMarshalling.write(jg, object); } jg.writeEndArray(); }else { if (param != null) { org.nuxeo.ecm.automation.client.jaxrs.spi.JsonMarshaller<?> marshaller = org.nuxeo.ecm.automation.client.jaxrs.spi.JsonMarshalling.getMarshaller(param.getClass()); if (marshaller != null) { jg.writeFieldName(entry.getKey()); try { marshaller.write(jg, param); } catch (java.lang.UnsupportedOperationException e) { jg.writeObject(param); } }else { jg.writeFieldName(entry.getKey()); jg.writeObject(param); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/8898/buggy-version/nuxeo-features.nuxeo-automation.nuxeo-automation-client.src.main.java.org.nuxeo.ecm.automation.client.jaxrs.spi.JsonMarshalling.java", "BodyUseAPI": ["java.lang.Object.getClass()", "org.nuxeo.ecm.automation.client.jaxrs.spi.JsonMarshaller<?>.write(org.codehaus.jackson.JsonGenerator,java.lang.Object)", "org.nuxeo.ecm.automation.client.jaxrs.spi.JsonMarshalling.getMarshaller(java.lang.Class<? extends java.lang.Object>)", "org.codehaus.jackson.JsonGenerator.writeObject(java.lang.Object)", "org.codehaus.jackson.JsonGenerator.writeObject(java.lang.Object)"], "Fixed commit": "5382994e865171bc06e6e05650074365b3e161b5", "Url": "https://api.github.com/repos/nuxeo/nuxeo", "Date": "2015-07-23T14:05:05Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.codehaus.jackson.JsonNode.traverse()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((valueParser.getCodec()) == null) { valueParser.setCodec(new org.codehaus.jackson.map.ObjectMapper()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/8898/buggy-version/nuxeo-features.nuxeo-automation.nuxeo-automation-io.src.main.java.org.nuxeo.ecm.automation.io.services.codec.ObjectCodecService.java", "BodyUseAPI": ["org.codehaus.jackson.JsonParser.setCodec(org.codehaus.jackson.map.ObjectMapper)"], "Fixed commit": "5382994e865171bc06e6e05650074365b3e161b5", "Url": "https://api.github.com/repos/nuxeo/nuxeo", "Date": "2015-07-23T14:05:05Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (file != null) { file.setShouldBeFile(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/8652/buggy-version/src.omnikryptec.util.OSUtil.java", "BodyUseAPI": ["omnikryptec.util.AdvancedFile.setShouldBeFile(boolean)"], "Fixed commit": "c93944071b51107c7835c2e575a0dff405c91ebc", "Url": "https://api.github.com/repos/OmniKryptec/OmniKryptec-Engine", "Date": "2017-06-28T20:44:12Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Settings.System.getIntForUser(getContext().getContentResolver(),Settings.System.STATUSBAR_CLOCK_COLOR,int,UserHandle.USER_CURRENT)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (clockColor == (java.lang.Integer.MIN_VALUE)) { clockColor = defaultColor; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/7308/buggy-version/packages.SystemUI.src.com.android.systemui.statusbar.policy.Clock.java", "BodyUseAPI": [], "Fixed commit": "1ac3e367f9fe813d81a3b5977d8a43b25773444d", "Url": "https://api.github.com/repos/DesolationRebase/frameworks_base", "Date": "2016-01-29T18:51:36Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.jClipCorn.util.parser.ImDBParser_Eng.getAttrBySelector(java.lang.String,java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (url != null) { int urlStart = url.lastIndexOf(\"@@\"); int urlEnd = url.lastIndexOf(\".\"); if (((!(url.isEmpty())) && (urlStart > 0)) && (urlEnd > 0)) { find = url.replace(url.substring((urlStart + 2), urlEnd), \"\"); return de.jClipCorn.util.helper.HTTPUtilities.getImage(find); } urlStart = url.lastIndexOf(\"@\"); if (((!(url.isEmpty())) && (urlStart > 0)) && (urlEnd > 0)) { find = url.replace(url.substring((urlStart + 2), urlEnd), \"\"); return de.jClipCorn.util.helper.HTTPUtilities.getImage(find); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/6616/buggy-version/src.de.jClipCorn.util.parser.ImDBParser_Eng.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.replace(java.lang.String,java.lang.String)", "java.lang.String.isEmpty()", "java.lang.String.lastIndexOf(java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.String.isEmpty()", "java.lang.String.lastIndexOf(java.lang.String)", "java.lang.String.replace(java.lang.String,java.lang.String)", "java.lang.String.lastIndexOf(java.lang.String)"], "Fixed commit": "35ddce57f76f6bf01392a2b38668f412a51f9b67", "Url": "https://api.github.com/repos/Mikescher/jClipCorn", "Date": "2016-06-23T19:27:29Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<se.sdmapeg.serverworker.TaskId, se.sdmapeg.server.workers.models.Worker>.remove(se.sdmapeg.serverworker.TaskId)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (worker != null) { se.sdmapeg.server.workers.models.WorkerCoordinatorModel.LOG.info(\"Task {} completed by {}\", taskId, worker); listeners.resultReceived(taskId, worker.getAddress()); callback.handleResult(taskId, result); }else { se.sdmapeg.server.workers.models.WorkerCoordinatorModel.LOG.warn((\"Attempted to complete task {}, which was not assigned\" + \" to any worker\"), taskId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/449/buggy-version/project.server.src.main.java.se.sdmapeg.server.workers.models.WorkerCoordinatorModel.java", "BodyUseAPI": ["se.sdmapeg.server.workers.callbacks.WorkerCoordinatorListenerSupport.resultReceived(se.sdmapeg.serverworker.TaskId,worker.getAddress())", "se.sdmapeg.server.workers.models.Worker.getAddress()", "org.slf4j.Logger.info(java.lang.String,se.sdmapeg.serverworker.TaskId,se.sdmapeg.server.workers.models.Worker)"], "Fixed commit": "b0c272315b21f521f21538df5a6634a83cedbf50", "Url": "https://api.github.com/repos/golvmopp/sdmapeg", "Date": "2013-05-25T19:00:43Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang.StringUtils.contains(cidr, \"./\")) { return org.restfulwhois.rdap.common.util.IpUtil.IpVersion.INVALID; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/627/buggy-version/rdap-webapp.src.main.java.org.restfulwhois.rdap.common.util.IpUtil.java", "BodyUseAPI": [], "Fixed commit": "c78ba399c9e5794d944e9f3eecca6a049da4ed2b", "Url": "https://api.github.com/repos/cnnic/rdap", "Date": "2014-10-16T08:43:34Z"},
{"Line": "=>537", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(placeholders.isEmpty())) { setName(com.Ben12345rocks.AdvancedCore.Util.Misc.StringUtils.getInstance().replaceJavascript(player, com.Ben12345rocks.AdvancedCore.Util.Misc.StringUtils.getInstance().replacePlaceHolder(getName(), placeholders))); setLore(com.Ben12345rocks.AdvancedCore.Util.Misc.ArrayUtils.getInstance().replaceJavascript(player, com.Ben12345rocks.AdvancedCore.Util.Misc.ArrayUtils.getInstance().replacePlaceHolder(getLore(), placeholders))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/6445/buggy-version/AdvancedCore.src.com.Ben12345rocks.AdvancedCore.Util.Item.ItemBuilder.java", "BodyUseAPI": ["com.Ben12345rocks.AdvancedCore.Util.Misc.StringUtils.getInstance().replacePlaceHolder(java.lang.String,java.util.HashMap<java.lang.String, java.lang.String>)", "com.Ben12345rocks.AdvancedCore.Util.Misc.ArrayUtils.getInstance().replaceJavascript(org.bukkit.entity.Player,com.Ben12345rocks.AdvancedCore.Util.Misc.ArrayUtils.getInstance().replacePlaceHolder(getLore(), placeholders))", "com.Ben12345rocks.AdvancedCore.Util.Item.ItemBuilder.setName(com.Ben12345rocks.AdvancedCore.Util.Misc.StringUtils.getInstance().replaceJavascript(player, com.Ben12345rocks.AdvancedCore.Util.Misc.StringUtils.getInstance().replacePlaceHolder(getName(), placeholders)))", "com.Ben12345rocks.AdvancedCore.Util.Misc.ArrayUtils.getInstance().replacePlaceHolder(java.util.ArrayList<java.lang.String>,java.util.HashMap<java.lang.String, java.lang.String>)", "com.Ben12345rocks.AdvancedCore.Util.Item.ItemBuilder.setLore(com.Ben12345rocks.AdvancedCore.Util.Misc.ArrayUtils.getInstance().replaceJavascript(player, com.Ben12345rocks.AdvancedCore.Util.Misc.ArrayUtils.getInstance().replacePlaceHolder(getLore(), placeholders)))", "com.Ben12345rocks.AdvancedCore.Util.Misc.StringUtils.getInstance().replaceJavascript(org.bukkit.entity.Player,com.Ben12345rocks.AdvancedCore.Util.Misc.StringUtils.getInstance().replacePlaceHolder(getName(), placeholders))"], "Fixed commit": "f4e917028b64a86c44954e3d34b58ac0d3f6af90", "Url": "https://api.github.com/repos/Ben12345rocks/AdvancedCore", "Date": "2017-05-03T01:46:20Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["wadp.service.UserService.getAuthenticatedUser()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((user.getUserRole()) == \"teacher\") { return (((\"redirect:/course/\" + courseId) + \"/\") + userId) + \"#comments\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/7503/buggy-version/src.main.java.wadp.controller.CommentController.java", "BodyUseAPI": [], "Fixed commit": "e12256b554aafb4e0387c2ae563787eac4a853d8", "Url": "https://api.github.com/repos/TeamTavoitemittari/Tavoitemittari", "Date": "2015-07-19T20:55:44Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (charset.isEmpty()) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/6552/buggy-version/api.src.main.java.org.apache.cxf.helpers.HttpHeaderHelper.java", "BodyUseAPI": [], "Fixed commit": "86f0e56464332148c15e9f4b30ecb7e53e4b2ba7", "Url": "https://api.github.com/repos/apache/cxf", "Date": "2015-10-07T10:25:04Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getParcelableArrayListExtra(FriendsActivity.FRIENDS_LIST)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((invitedFriends != null) && ((invitedFriends.size()) > 0)) { android.widget.Toast.makeText(getContext(), invitedFriends.get(0).getFirstName(), Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/5504/buggy-version/app.src.main.java.com.insa.thibault.ihm.view.fragment.DetailsRestaurantFragment.java", "BodyUseAPI": ["android.widget.Toast.makeText(getContext(), invitedFriends.get(0).getFirstName(), Toast.LENGTH_LONG).show()", "invitedFriends.get(0).getFirstName()", "java.util.List<com.insa.thibault.ihm.business.User>.get(int)", "android.widget.Toast.makeText(getContext(),invitedFriends.get(0).getFirstName(),Toast.LENGTH_LONG)"], "Fixed commit": "bad14f3d7f820d94bf28e4cd51d318b05df92210", "Url": "https://api.github.com/repos/SIGSWAG/IHM", "Date": "2016-01-07T22:16:49Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.konstantinschubert.writeinterceptingwebview.WriteHandlingWebViewClient.shouldInterceptRequest(android.webkit.WebView,com.konstantinschubert.writeinterceptingwebview.WriteHandlingWebResourceRequest)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (webResourceResponse != null) { return injectIntercept(webResourceResponse, view.getContext()); }else { return super.shouldInterceptRequest(view, request); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/4380/buggy-version/writeintercept.src.main.java.com.konstantinschubert.writeinterceptingwebview.WriteHandlingWebViewClient.java", "BodyUseAPI": ["com.konstantinschubert.writeinterceptingwebview.WriteHandlingWebViewClient.injectIntercept(android.webkit.WebResourceResponse,view.getContext())"], "Fixed commit": "54044637fa197dee059f3761ba0000c1556b3c27", "Url": "https://api.github.com/repos/sagnitude/request_data_webviewclient", "Date": "2017-09-21T03:56:31Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.channels.FileChannel.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((offset + (com.insightfullogic.honest_profiler.ports.sources.FileLogSource.BUFFER_SIZE)) > fileEnd) { length = ((int) (fileEnd - offset)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/1393/buggy-version/src.main.java.com.insightfullogic.honest_profiler.ports.sources.FileLogSource.java", "BodyUseAPI": [], "Fixed commit": "430916c2036d2746b63ac4d971fa4e23fd7aa22b", "Url": "https://api.github.com/repos/PhRX/honest-profiler-fx-ui", "Date": "2017-01-12T09:12:40Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jsondemo.activity.WifiManager.getScanResults()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (results == null) { return \"Wifi \u672a\u6253\u5f00\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/4698/buggy-version/JsonDemo.src.com.jsondemo.activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "ef4ee7b9fc843cdce5bf6860c2ed946b502e0f86", "Url": "https://api.github.com/repos/Hooksway/indoor-localization", "Date": "2014-09-12T00:41:07Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["slash.navigation.download.Action.valueOf(dataSource.getAction())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (action.equals(slash.navigation.datasources.Copy)) target = new java.io.File(directory, downloadable.getUri().toLowerCase()); else if (action.equals(slash.navigation.datasources.Extract)) target = target.getParentFile();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/6139/buggy-version/datasource.src.main.java.slash.navigation.datasources.DataSourceManager.java", "BodyUseAPI": ["slash.navigation.download.Action.equals(slash.navigation.datasources.Extract)"], "Fixed commit": "58b8bc0ce8d02d3e1a804bfb2f7cfd02fc4b6078", "Url": "https://api.github.com/repos/cpesch/RouteConverter", "Date": "2015-11-20T09:29:55Z"},
{"Line": "=>329", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Long, in.dream_lab.goffish.api.IVertex<V, E, org.apache.hadoop.io.LongWritable, org.apache.hadoop.io.LongWritable>>.get(edge.getSinkVertexID().get())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (sink == null) { sink = remoteVertexMap.get(edge.getSinkVertexID().get()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/1766/buggy-version/src.main.java.in.dream_lab.goffish.PartitionsLongTextAdjacencyListReader.java", "BodyUseAPI": [], "Fixed commit": "974bd4a695af680e1a9aa3784ab9a9ba875849ef", "Url": "https://api.github.com/repos/dipkakwani/goffishv3", "Date": "2017-02-23T07:38:40Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(data.containsKey(Project.APP_ID))) { data.put(Project.APP_ID, java.util.UUID.randomUUID().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/9036/buggy-version/runtime-parent.runtime-config.src.main.java.com.speedment.runtime.config.util.DocumentTranscoder.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.put(Project.APP_ID,java.lang.String)"], "Fixed commit": "0906762d22a75ff17c7bb6079bdd8dc17c76ba1c", "Url": "https://api.github.com/repos/speedment/speedment", "Date": "2017-05-11T00:20:25Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((MainActivity.USER.getDrinkHistory().size()) > 0) { ((edu.rosehulman.androidproject.activities.MainActivity) (getActivity())).getFirebaseReference().child((((\"users\" + \"/\") + (MainActivity.USER.getEmail())) + \"/drinkHistory\")).setValue(drinkList); }else { ((edu.rosehulman.androidproject.activities.MainActivity) (getActivity())).getFirebaseReference().child((((\"users\" + \"/\") + (MainActivity.USER.getEmail())) + \"/drinkHistory\")).setValue(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/4271/buggy-version/app.src.main.java.edu.rosehulman.androidproject.fragments.HomeFragment.java", "BodyUseAPI": [], "Fixed commit": "e309a7371914bb38d2bc40d00fa0277092531dd8", "Url": "https://api.github.com/repos/apals/Caffeine-Competition", "Date": "2015-02-18T04:00:51Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.awt.Container.getIsInitialized()) { java.awt.Container.playSound(SoundID.PLACE_BOMB); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/5202/buggy-version/src.main.java.edu.chalmers.vaporwave.model.game.GameCharacter.java", "BodyUseAPI": [], "Fixed commit": "906d06fe4970b4c32344a42f854049b6d1f63528", "Url": "https://api.github.com/repos/ryggan/vaporwaves", "Date": "2016-05-27T12:21:09Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((textView == null) || (value == null)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/3730/buggy-version/app.src.main.java.com.thoughtworks.lhli.lovelive_rock.adapter.MediumCardListAdapter.java", "BodyUseAPI": [], "Fixed commit": "5c9da21e58a44cc42b46d31a3be480a088fc64c4", "Url": "https://api.github.com/repos/Kevin170113664/lovelive_rock", "Date": "2015-11-27T03:19:33Z"},
{"Line": "=>651", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(result.equals(\"\"))) { result = result.substring(0, ((result.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/812/buggy-version/RouteTracker.src.com.deitel.routetracker.Server.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "2e774662ccc4872dea5d4b1ad78c6e29fc52ea11", "Url": "https://api.github.com/repos/xpickles/TrackingApp", "Date": "2014-04-21T18:18:03Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.qii.weiciyuan.bean.WeiboMsgBean.isFavorited()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (fav) { menu.findItem(R.id.menu_fav).setIcon(R.drawable.fav_un); }else { menu.findItem(R.id.menu_fav).setIcon(R.drawable.fav_en); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/9061/buggy-version/src.org.qii.weiciyuan.ui.browser.BrowserWeiboMsgActivity.java", "BodyUseAPI": [], "Fixed commit": "058e8d92d30ad1548f629a2853f3a33e63c26c71", "Url": "https://api.github.com/repos/qii/weiciyuan", "Date": "2012-08-22T04:15:05Z"},
{"Line": "=>583", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((replicator.getError()) != null) { int statusCode = 400; java.lang.Object[] errorObjects = new java.lang.Object[]{ statusCode, replicator.getError().toString() }; activity.put(\"error\", errorObjects); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/610/buggy-version/src.main.java.com.couchbase.cblite.router.CBLRouter.java", "BodyUseAPI": ["replicator.getError().toString()", "com.couchbase.cblite.replicator.CBLReplicator.getError()"], "Fixed commit": "4c75966e12d4a8742d245ac116235ecd9257f862", "Url": "https://api.github.com/repos/couchbase/couchbase-lite-android-core", "Date": "2013-08-28T05:50:43Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.elasql.schedule.tpart.sink.SunkPlan.getWritingDestOfRecord(entry.getKey())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (dests != null) { for (long dest : dests) { org.elasql.cache.CachedRecord clonedRec = new org.elasql.cache.CachedRecord(entry.getValue()); cacheMgr.passToTheNextTx(entry.getKey(), clonedRec, txNum, dest); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/6398/buggy-version/src.main.java.org.elasql.cache.tpart.TPartTxLocalCache.java", "BodyUseAPI": [], "Fixed commit": "350b6b4f2477ad2db741df817647aee3cda7231c", "Url": "https://api.github.com/repos/elasql/elasql", "Date": "2017-04-18T08:13:25Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isExpression(expressionBuffer.toString())) { finalResult = com.andela.gkuti.kakulator.ExpressionEvaluator.evaluate(expressionBuffer.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/533/buggy-version/app.src.main.java.com.andela.gkuti.kakulator.MainActivity.java", "BodyUseAPI": ["com.andela.gkuti.kakulator.ExpressionEvaluator.evaluate(java.lang.String)", "java.lang.StringBuffer.toString()"], "Fixed commit": "7e99127402bb9f5a488b110c847e55ba6a8ee58d", "Url": "https://api.github.com/repos/gkuti/Kakulator", "Date": "2016-04-28T19:17:29Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((order) != null) newComment.setRelOrder(order);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/8867/buggy-version/aircnc.src.main.java.vo.order.comment.CommentVoBuilder.java", "BodyUseAPI": [], "Fixed commit": "974ecd3878349033fe0a01233b5fb708c14c15b0", "Url": "https://api.github.com/repos/ArabicStar/AirCnC", "Date": "2017-01-01T07:19:30Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((order) != null) newComment.setRelOrder(order);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/8867/buggy-version/aircnc.src.main.java.po.order.comment.CommentPoBuilder.java", "BodyUseAPI": [], "Fixed commit": "974ecd3878349033fe0a01233b5fb708c14c15b0", "Url": "https://api.github.com/repos/ArabicStar/AirCnC", "Date": "2017-01-01T07:19:30Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.talend.designer.core.generic.utils.ParameterUtilTool.convertParameterValue(org.talend.designer.core.model.utils.emf.talendfile.ElementParameterType)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (((\"CONNECTION\".equals(paramName)) && (value != null)) && (!(\"\".equals(value)))) { org.talend.designer.core.model.utils.emf.talendfile.ElementParameterType useConnection = org.talend.designer.core.generic.utils.ParameterUtilTool.findParameterType(node, \"USE_EXISTING_CONNECTION\"); if ((useConnection != null) && (java.lang.Boolean.valueOf(java.lang.String.valueOf(org.talend.designer.core.generic.utils.ParameterUtilTool.convertParameterValue(useConnection))))) { return paramType; }else { return null; } }else if (\"API\".equals(paramName)) { if (\"soap\".equals(value)) { paramType.setValue(\"Query\"); }else { paramType.setValue(\"Bulk\"); } }else if (\"LOGIN_TYPE\".equals(paramName)) { if (\"BASIC\".equals(value)) { paramType.setValue(\"Basic\"); }else if (\"OAUTH\".equals(value)) { paramType.setValue(\"OAuth\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/3053/buggy-version/main.plugins.org.talend.designer.core.generic.src.main.java.org.talend.designer.core.generic.model.migration.NewSalesforceMigrationTask.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.Object)", "java.lang.String.equals(java.lang.Object)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.Object)"], "Fixed commit": "06522e83e7ab5dd2a8945024160ccb0082f96ddb", "Url": "https://api.github.com/repos/Talend/tdi-studio-se", "Date": "2016-04-22T07:47:40Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (resolved != null) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/8838/buggy-version/runtime.managers.distriman.src.main.java.fr.imag.adele.apam.distriman.Distriman.java", "BodyUseAPI": [], "Fixed commit": "6c24d85d8596d91b5cb0f07392ac53a75c2a732f", "Url": "https://api.github.com/repos/AdeleResearchGroup/ApAM", "Date": "2013-01-09T12:01:04Z"},
{"Line": "=>382", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(set.contains(file.getPath()))) { set.add(file.getPath()); iterateDir(file); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/6793/buggy-version/src.se.Pagge.ExtractThis.Gui.ETGUI.java", "BodyUseAPI": ["java.io.File.getPath()", "java.util.HashSet<java.lang.String>.add(java.lang.String)", "se.Pagge.ExtractThis.Gui.ETGUI.DNDListener.iterateDir(java.io.File)"], "Fixed commit": "59465cf7ccbb16eeab3dd018fb12ea980572e1af", "Url": "https://api.github.com/repos/paguini/ExtractThis", "Date": "2012-05-01T22:13:48Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((streamServiceSelection.getValue()) == null) { final com.dopelives.dopestreamer.streams.services.StreamService defaultService = com.dopelives.dopestreamer.streams.services.StreamServiceManager.getStreamServiceByKey(Pref.LAST_STREAM_SERVICE.getDefaultString()); streamServiceSelection.getSelectionModel().select(defaultService); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/6964/buggy-version/Dopestreamer.src.com.dopelives.dopestreamer.gui.controllers.Streams.java", "BodyUseAPI": ["javafx.scene.control.ComboBox<com.dopelives.dopestreamer.streams.services.StreamService>.getSelectionModel()", "streamServiceSelection.getSelectionModel().select(com.dopelives.dopestreamer.streams.services.StreamService)"], "Fixed commit": "e7cb2ffdd482a1a18a62fb9401ba8524327d072f", "Url": "https://api.github.com/repos/tvkanters/Dopestreamer", "Date": "2014-09-29T19:55:48Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tfdUsername.getText().equals(\"\")) || (pfdPassword.getText().equals(\"\"))) { lblError.setText(\"Please fill in both fields.\"); lblError.setVisible(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/5956/buggy-version/Portal.src.portal.Controllers.LoginController.java", "BodyUseAPI": [], "Fixed commit": "7b3d453e56aae930c7c9c1f347778705a9e1f35f", "Url": "https://api.github.com/repos/Jeff-kain/PTS3-S31D", "Date": "2016-01-26T14:21:27Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((quizzes) == null) || (quizzes.isEmpty())) { return \"No quizzes to display.\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/5311/buggy-version/QuizServer.src.main.domain.impl.QuizListImpl.java", "BodyUseAPI": [], "Fixed commit": "5c285d8fc244d77b252fc3dc56b99c23b1d48de6", "Url": "https://api.github.com/repos/MontyWest/Quiz", "Date": "2014-04-17T15:33:30Z"},
{"Line": "=>538", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((leftOperand instanceof ir.regalloc.StackOffset) && (rightOperand instanceof ir.regalloc.StackOffset)) { emit((((\"movq \" + (valueString(rightOperand))) + \", %\") + (reservedRegisters[0])), \"Move operand to reserved register.\"); emit((((\"cmp %\" + (reservedRegisters[0])) + \", \") + (valueString(leftOperand))), (\"Compare reserved register and \" + (idString(rightOperand)))); }else emit((((\"cmp \" + (valueString(rightOperand))) + \", \") + (valueString(leftOperand))), (((\"Compare operand \" + (idString(leftOperand))) + \" and \") + (idString(rightOperand))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/142/buggy-version/src.main.java.ir.backend.X86CodeGenerator.java", "BodyUseAPI": ["ir.backend.X86CodeGenerator.idString(ir.regalloc.Value)", "ir.backend.X86CodeGenerator.valueString(ir.regalloc.Value)", "ir.backend.X86CodeGenerator.idString(ir.regalloc.Value)", "ir.backend.X86CodeGenerator.valueString(ir.regalloc.Value)", "ir.backend.X86CodeGenerator.emit((((\"movq \" + (valueString(rightOperand))) + \", %\") + (reservedRegisters[0])),java.lang.String)", "ir.backend.X86CodeGenerator.emit((((\"cmp %\" + (reservedRegisters[0])) + \", \") + (valueString(leftOperand))),(\"Compare reserved register and \" + (idString(rightOperand))))", "ir.backend.X86CodeGenerator.valueString(ir.regalloc.Value)", "ir.backend.X86CodeGenerator.emit((((\"cmp \" + (valueString(rightOperand))) + \", \") + (valueString(leftOperand))),(((\"Compare operand \" + (idString(leftOperand))) + \" and \") + (idString(rightOperand))))", "ir.backend.X86CodeGenerator.valueString(ir.regalloc.Value)", "ir.backend.X86CodeGenerator.idString(ir.regalloc.Value)"], "Fixed commit": "e183cac350fc1ba2dcec1a9c0b8003d31fd4b0ca", "Url": "https://api.github.com/repos/twhitenight/MiniJava-compiler", "Date": "2015-04-29T16:12:45Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(method.isAccessible())) method.setAccessible(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/8120/buggy-version/src.org.nutz.lang.Mirror.java", "BodyUseAPI": ["java.lang.reflect.Method.setAccessible(boolean)"], "Fixed commit": "12d8aac0b188508995a45562abd6d2cc9a8870e4", "Url": "https://api.github.com/repos/ywjno/nutz", "Date": "2013-01-25T05:22:53Z"},
{"Line": "=>429", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (validate()) { submitEvent(); getFragmentManager().popBackStack(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/7419/buggy-version/app.src.main.java.org.hisp.dhis.android.sdk.fragments.dataentry.DataEntryFragment.java", "BodyUseAPI": [], "Fixed commit": "7ff1b4ad5f196bf7e603c0ca80aad2ed50333a0f", "Url": "https://api.github.com/repos/dhis2/dhis2-android-sdk", "Date": "2015-07-20T14:39:12Z"},
{"Line": "=>386", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((value) == 0) return java.lang.Math.pow(arg, exponentfunc.Calc(arg)); else return arg;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/8345/buggy-version/lorian.graph.function.Factor.java", "BodyUseAPI": [], "Fixed commit": "507eb3996b43e7f032b38a198f11c7adb3fa2ac1", "Url": "https://api.github.com/repos/lorian1333/graph", "Date": "2013-04-19T12:47:29Z"},
{"Line": "=>303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(net.minecraftforge.fml.common.Loader.isModLoaded(\"BuildCraft|Factory\"))) { BuildcraftFuelRegistry.fuel.addFuel(buildcraft.BuildCraftEnergy.oil.fluid, fuelOilEnergyOutput, ((int) (5000 * fuelOilMultiplier))); BuildcraftFuelRegistry.fuel.addFuel(buildcraft.BuildCraftEnergy.fuel.fluid, fuelFuelEnergyOutput, ((int) (25000 * fuelFuelMultiplier))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/914/buggy-version/common.buildcraft.BuildCraftEnergy.java", "BodyUseAPI": [], "Fixed commit": "00e2deec8904ea954f6e87d4ce069bc3997a5cd1", "Url": "https://api.github.com/repos/BuildCraft/BuildCraft", "Date": "2016-02-27T14:32:35Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(b instanceof net.minecraft.block.BlockAir)) { me.desht.pneumaticcraft.common.item.Itemss.registerItem(registry, new net.minecraft.item.ItemBlock(b).setRegistryName(b.getRegistryName())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/6513/buggy-version/src.main.java.me.desht.pneumaticcraft.common.item.Itemss.java", "BodyUseAPI": ["net.minecraft.item.ItemBlock.setRegistryName(b.getRegistryName())", "me.desht.pneumaticcraft.common.item.Itemss.registerItem(net.minecraftforge.registries.IForgeRegistry<net.minecraft.item.Item>,new net.minecraft.item.ItemBlock(b).setRegistryName(b.getRegistryName()))", "net.minecraft.block.Block.getRegistryName()"], "Fixed commit": "764a8e80ab0bf5fdb9abe9d14dffe99fd78a919f", "Url": "https://api.github.com/repos/TeamPneumatic/pnc-repressurized", "Date": "2017-11-18T09:40:20Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((it.antreem.birretta.service.util.BirrettaServiceProperties.MONGODB_DBNAME) == null) throw new java.lang.ExceptionInInitializerError(\"MONGODB_DBNAME == null\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/3183/buggy-version/src.main.java.it.antreem.birretta.service.util.BirrettaServiceProperties.java", "BodyUseAPI": [], "Fixed commit": "c248096df38c5dcdb9b3ff166561d451f4d2e59e", "Url": "https://api.github.com/repos/keen80/BirrettaService", "Date": "2012-07-18T15:27:37Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (editText)) { editText.setText(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/2057/buggy-version/app.src.main.java.com.alex.develop.ui.StockKeyboard.java", "BodyUseAPI": [], "Fixed commit": "72fdc1411508b312db72d1f341606f7697c06126", "Url": "https://api.github.com/repos/zxfhacker/StocksAnalyzer", "Date": "2015-08-18T10:36:50Z"},
{"Line": "=>899", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((repositories) != null) { for (org.guvnor.structure.repositories.Repository repository : repositories) { if (repository.getAlias().equals(event.getRepositoryAlias())) { addBranch(repository, event.getBranchName(), event.getBranchPath()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/6014/buggy-version/kie-wb-common-screens.kie-wb-common-project-explorer.kie-wb-common-project-explorer-client.src.main.java.org.kie.workbench.common.screens.explorer.client.widgets.BaseViewPresenter.java", "BodyUseAPI": [], "Fixed commit": "1107507d0cff8406d9048fd86aa0eafe2f091b1f", "Url": "https://api.github.com/repos/droolsjbpm/kie-wb-common", "Date": "2014-09-25T07:37:35Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (p.isInsideVehicle()) p.getVehicle().remove();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/1567/buggy-version/src.vg.civcraft.mc.bettershards.BetterShardsPlugin.java", "BodyUseAPI": ["p.getVehicle().remove()", "org.bukkit.entity.Player.getVehicle()"], "Fixed commit": "3aecfbbe5048f1a97ac37c93755340f95569bd96", "Url": "https://api.github.com/repos/Civcraft/BetterShards", "Date": "2015-09-06T06:22:13Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (reader != null) reader.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/5195/buggy-version/ProfilingCore.src.hr.fer.kba_authentication.profiling.core.utils.VCardUtils.java", "BodyUseAPI": ["ezvcard.io.text.VCardReader.close()"], "Fixed commit": "9fc646a33beeb05c5d440f178f32b4e060dfa42e", "Url": "https://api.github.com/repos/kiki-7/ProfilingCore", "Date": "2016-03-06T12:51:37Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(updatingFromEditor)) { editor.setElementSelection(structureElement); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/1440/buggy-version/plugin_ide.ui.src-lang.melnorme.lang.ide.ui.editor.structure.LangOutlinePage.java", "BodyUseAPI": [], "Fixed commit": "f806d36bdc7066623b21121dd2316c2352d06a1a", "Url": "https://api.github.com/repos/RustDT/RustDT", "Date": "2015-05-28T12:10:35Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((raf) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/690/buggy-version/src.freenet.support.io.PooledRandomAccessFileWrapper.java", "BodyUseAPI": [], "Fixed commit": "8bd69d29ba84bbf007ceff37e2b24239bb447a4a", "Url": "https://api.github.com/repos/toad/fred-staging", "Date": "2014-06-26T10:47:02Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((closed) || ((lockLevel) == 0))) throw new java.lang.IllegalStateException();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/690/buggy-version/src.freenet.support.io.PooledRandomAccessFileWrapper.java", "BodyUseAPI": [], "Fixed commit": "8bd69d29ba84bbf007ceff37e2b24239bb447a4a", "Url": "https://api.github.com/repos/toad/fred-staging", "Date": "2014-06-26T10:47:02Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((controller.location) == null) java.lang.System.out.println(\" A\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/3600/buggy-version/src.com.game.src.Game.java", "BodyUseAPI": [], "Fixed commit": "c58a7760170fcd9b8a29fc6d8f74a7c2cb83b8cd", "Url": "https://api.github.com/repos/joaogl/3DGameTextur", "Date": "2013-03-25T18:35:55Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((domain == null) && ((_parms._family) == (hex.glm.GLMModel.GLMParameters.Family.binomial))) domain = new java.lang.String[]{ \"0\", \"1\" };", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/6116/buggy-version/h2o-algos.src.main.java.hex.glm.GLMModel.java", "BodyUseAPI": [], "Fixed commit": "a8659171c3d6a69a1723322beefcff52345ad512", "Url": "https://api.github.com/repos/h2oai/h2o-3", "Date": "2015-05-12T19:59:45Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["util.XMLUtils.findNode(org.w3c.dom.Element,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (node == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/6364/buggy-version/led_control.LEDControllerPanel.java", "BodyUseAPI": [], "Fixed commit": "7fb74e7750f475b5c9ddc17c79473290dec87a1f", "Url": "https://api.github.com/repos/SteveHodge/assistantdm", "Date": "2017-12-28T12:53:58Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) <= 22) getWindow().clearFlags(WindowManager.LayoutParams.FLAG_DIM_BEHIND);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/3267/buggy-version/mobile.src.main.java.org.thecosmicfrog.luasataglance.activity.MapsActivity.java", "BodyUseAPI": [], "Fixed commit": "5a83f03386ae6992009b5c2425b12a06e6d577f1", "Url": "https://api.github.com/repos/thecosmicfrog/LuasataGlance", "Date": "2016-02-21T23:17:49Z"},
{"Line": "=>474", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.keycloak.models.UserSessionModel.getNote(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (logoutBindingUri == null) { org.keycloak.protocol.saml.SamlProtocol.logger.error(\"Can't finish SAML logout as there is no logout binding set\"); return org.keycloak.services.ErrorPage.error(session, Messages.FAILED_LOGOUT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/3342/buggy-version/saml.saml-protocol.src.main.java.org.keycloak.protocol.saml.SamlProtocol.java", "BodyUseAPI": [], "Fixed commit": "35c33f132e056d14df0f01995a0ae9378b457066", "Url": "https://api.github.com/repos/stianst/keycloak", "Date": "2015-04-30T01:16:59Z"},
{"Line": "=>461", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["query.getHints().get(Hints.GEOMETRY_DISTANCE)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (result == null) { result = ((java.lang.Double) (query.getHints().get(Hints.GEOMETRY_SIMPLIFICATION))); log.warning(\"Hint for geometry simplification in query, fallback to base feature\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/2917/buggy-version/modules.plugin.feature-pregeneralized.src.main.java.org.geotools.data.gen.PreGeneralizedFeatureSource.java", "BodyUseAPI": [], "Fixed commit": "35653a3fa02654f4ff86094a02b9b5f05410141b", "Url": "https://api.github.com/repos/xandros6/geotools", "Date": "2014-12-18T09:02:39Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (mLocation)) { hostname = mLocation.getHost(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/3783/buggy-version/clients.unshaded.src.main.java.tachyon.client.file.FileOutStream.java", "BodyUseAPI": [], "Fixed commit": "ed6f7cc3cfdf2d1f5e005c18a8e0028ccdda9f09", "Url": "https://api.github.com/repos/danielfree/alluxio", "Date": "2015-09-19T20:38:41Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (savedInstanceState != null) { this.currentChapterIndex = savedInstanceState.getInt(\"learnContentIndex\"); this.currentLearnContent = this.learnContentList.get(this.currentChapterIndex); }else { android.content.Intent intent = this.getIntent(); this.currentChapterIndex = intent.getIntExtra(\"learnContentIndex\", (-1)); this.currentLearnContent = ((net.duokr.goquicklearn.config.LearnContent) (intent.getSerializableExtra(\"learnContent\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/4688/buggy-version/GoQuickLearn.src.net.duokr.goquicklearn.activity.ContentViewActivity.java", "BodyUseAPI": ["android.os.Bundle.getInt(java.lang.String)"], "Fixed commit": "a3e8a4b38f799d413bc2779fe91e90c909faa576", "Url": "https://api.github.com/repos/jemygraw/GoQuickLearn", "Date": "2014-01-14T11:51:05Z"},
{"Line": "=>665", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(clock.isStopped())) { long mod = viewerTime % stepSize; if (mod != 0) { viewerTime = (viewerTime + stepSize) - mod; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/551/buggy-version/src.main.java.org.datavyu.views.DataControllerV.java", "BodyUseAPI": [], "Fixed commit": "0d28cc73debd9d6d993d39564221e67af2351327", "Url": "https://api.github.com/repos/databrary/datavyu", "Date": "2015-08-06T20:27:26Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fr.aumgn.bukkitutils.command.args.CommandArgs.getEntityType(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((((((((((((((((((((((entity.equals(entity.ARROW)) || (entity.equals(entity.BOAT))) || (entity.equals(entity.COMPLEX_PART))) || (entity.equals(entity.DROPPED_ITEM))) || (entity.equals(entity.EGG))) || (entity.equals(entity.ENDER_CRYSTAL))) || (entity.equals(entity.ENDER_PEARL))) || (entity.equals(entity.ENDER_SIGNAL))) || (entity.equals(entity.EXPERIENCE_ORB))) || (entity.equals(entity.FALLING_BLOCK))) || (entity.equals(entity.FIREBALL))) || (entity.equals(entity.FISHING_HOOK))) || (entity.equals(entity.LIGHTNING))) || (entity.equals(entity.MINECART))) || (entity.equals(entity.PAINTING))) || (entity.equals(entity.PLAYER))) || (entity.equals(entity.PRIMED_TNT))) || (entity.equals(entity.SMALL_FIREBALL))) || (entity.equals(entity.SNOWBALL))) || (entity.equals(entity.SPLASH_POTION))) || (entity.equals(entity.THROWN_EXP_BOTTLE))) || (entity.equals(entity.UNKNOWN))) || (entity.equals(entity.WEATHER))) { throw new fr.aumgn.bukkitutils.command.exception.CommandError(\"Vous ne pouvez pas spawner ce type d'entit\u00e9\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/1723/buggy-version/src.main.java.fr.noogotte.useful_commands.command.WorldCommands.java", "BodyUseAPI": [], "Fixed commit": "95b7d58c84fe54f44b26262c9992f93fc3a5d6fb", "Url": "https://api.github.com/repos/noogotte/UsefulCommands", "Date": "2012-06-02T15:14:43Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.Long.parseLong(uniqueId.substring(0, 8))) > (java.lang.Long.parseLong(\"20000000\"))) uniqueId = \"10000000\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/3621/buggy-version/opensrp-indonesia.src.main.java.util.uniqueIDGenerator.UniqueIdRepository.java", "BodyUseAPI": [], "Fixed commit": "4ff9f295e15ed41f423a6f6dce2e5fcb629ababa", "Url": "https://api.github.com/repos/sidthrive/opensrp-client", "Date": "2016-12-19T10:17:23Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((c.getPts().size()) > 0) { c_coh += c_coh / (c.getPts().size()); }else { c_coh += 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/8146/buggy-version/src.main.java.clustering.ClusterSet.java", "BodyUseAPI": ["c.getPts().size()", "clustering.Cluster.getPts()"], "Fixed commit": "81c5830efb8ae4b9af9c5e57c2bc4caee2d04900", "Url": "https://api.github.com/repos/rdgoodman/mavenclustering", "Date": "2015-11-26T04:11:18Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (request.getParameter(\"htmlFormName\").equals(\"newGame\")) { session.setAttribute(\"counter\", 0); session.setAttribute(\"currentQuestion\", null); at.ac.tuwien.big.we15.lab2.api.User user = ((at.ac.tuwien.big.we15.lab2.api.User) (session.getAttribute(\"user\"))); at.ac.tuwien.big.we15.lab2.api.User opponent = ((at.ac.tuwien.big.we15.lab2.api.User) (session.getAttribute(\"opponent\"))); user.setScore(0); opponent.setScore(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/3686/buggy-version/lab2.src.main.java.at.ac.tuwien.big.we15.lab2.servlet.GameServlet.java", "BodyUseAPI": [], "Fixed commit": "565c6be966d6b380111f52f2d4340a46ee207b7e", "Url": "https://api.github.com/repos/max-moser/web6-2", "Date": "2015-04-26T10:27:11Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.apache.falcon.service.Services.get().isRegistered(ExtensionService.SERVICE_NAME))) { org.apache.falcon.service.SharedLibraryHostingService.LOG.info(\"ExtensionService not registered, return\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/678/buggy-version/oozie.src.main.java.org.apache.falcon.service.SharedLibraryHostingService.java", "BodyUseAPI": [], "Fixed commit": "942b1b23fc7d975fe9b41e1a293284a04f94f2fb", "Url": "https://api.github.com/repos/sowmyaramesh/falcon", "Date": "2016-04-13T22:43:08Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pl.edu.agh.mabics.agents.implementation.AlgorithmConfigurationBean.getPossibleValues()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((possibleValues != null) && (!(possibleValues.isEmpty()))) { for (pl.edu.agh.mabics.agents.implementation.PossibleValue possibleValue : possibleValues) { java.lang.reflect.Method method = org.springframework.beans.BeanUtils.findDeclaredMethod(controllerClass, (\"set\" + (capitalizeFirstLetter(possibleValue.getName()))), new java.lang.Class[]{ java.lang.Double.class }); try { method.invoke(controller, possibleValue.getValue()); } catch (java.lang.IllegalAccessException e) { e.printStackTrace(); } catch (java.lang.reflect.InvocationTargetException e) { e.printStackTrace(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/4958/buggy-version/src.pl.edu.agh.mabics.agents.AbstractAgent.java", "BodyUseAPI": [], "Fixed commit": "d33c3ee85c2e7dca3aecc0e1597c3df0bbc0905c", "Url": "https://api.github.com/repos/matys/magisterka", "Date": "2013-06-26T18:31:59Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pl.edu.agh.mabics.agents.implementation.AlgorithmParameter.getStep()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (step != 0) { for (java.lang.Double value = fromValue; value <= toValue; value += step) { possibleValues.add(new pl.edu.agh.mabics.agents.implementation.PossibleValue(param.getName(), value)); } }else { possibleValues.add(new pl.edu.agh.mabics.agents.implementation.PossibleValue(param.getName(), fromValue)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/4958/buggy-version/src.pl.edu.agh.mabics.experiment.controllers.ParametersSearchRunner.java", "BodyUseAPI": [], "Fixed commit": "d33c3ee85c2e7dca3aecc0e1597c3df0bbc0905c", "Url": "https://api.github.com/repos/matys/magisterka", "Date": "2013-06-26T18:31:59Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bouncycastle.crypto.generators.OpenBSDBCrypt.checkPassword(java.lang.String,char[])"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!bsdCryptPass) { final boolean enableJBCrypt = java.lang.Boolean.parseBoolean(configuration.readAppProperty(AppProperty.CONFIG_JBCRYPT_PWLIB_ENABLE)); if (enableJBCrypt) { return password.pwm.util.secure.BCrypt.JBCrypt.checkpw(password, hashedPassword); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/957/buggy-version/src.main.java.password.pwm.util.secure.BCrypt.java", "BodyUseAPI": [], "Fixed commit": "777e722d62b7a7a567e4980b0cad592c82004f87", "Url": "https://api.github.com/repos/pwm-project/pwm", "Date": "2017-03-14T08:26:35Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((t.getMovementFinish()) != null) java.lang.System.out.println((((\"Troop\" + (t.getId())) + \" Movement: \") + (t.getMovementFinish().getDate().getTime())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/6070/buggy-version/src.backend.GameStateUpdater.java", "BodyUseAPI": ["entities.Troop.getId()", "t.getMovementFinish().getDate().getTime()", "t.getMovementFinish().getDate()", "entities.Troop.getMovementFinish()", "java.io.PrintStream.println((((\"Troop\" + (t.getId())) + \" Movement: \") + (t.getMovementFinish().getDate().getTime())))"], "Fixed commit": "d6e23c331ff0260c9b03f60f686f927d35ba12d0", "Url": "https://api.github.com/repos/tobiasg28/Uni-Zeugs-TSD", "Date": "2011-06-11T13:48:43Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((t.getLevelUpgradeFinish()) != null) java.lang.System.out.println((((\"Troop\" + (t.getId())) + \" Upgrade: \") + (t.getLevelUpgradeFinish().getDate().getTime())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/6070/buggy-version/src.backend.GameStateUpdater.java", "BodyUseAPI": ["t.getLevelUpgradeFinish().getDate()", "entities.Troop.getId()", "t.getLevelUpgradeFinish().getDate().getTime()", "entities.Troop.getLevelUpgradeFinish()", "java.io.PrintStream.println((((\"Troop\" + (t.getId())) + \" Upgrade: \") + (t.getLevelUpgradeFinish().getDate().getTime())))"], "Fixed commit": "d6e23c331ff0260c9b03f60f686f927d35ba12d0", "Url": "https://api.github.com/repos/tobiasg28/Uni-Zeugs-TSD", "Date": "2011-06-11T13:48:43Z"},
{"Line": "=>284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (position == 3) { mResultFg.showResultData(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/1785/buggy-version/app.src.main.java.yxs.usst.edu.cn.project.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "c95232b67caedd9ad9fe2bcf2863ff5b4c24ba18", "Url": "https://api.github.com/repos/richard-yao/RD4800", "Date": "2016-05-04T13:19:21Z"},
{"Line": "=>858", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((scriptIndex >= 0) && (scriptIndex < (abc.script_info.size()))) { abc.script_info.get(scriptIndex).setModified(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/2178/buggy-version/src.com.jpexs.decompiler.flash.gui.abc.ABCPanel.java", "BodyUseAPI": ["abc.script_info.get(int)", "abc.script_info.get(scriptIndex).setModified(boolean)"], "Fixed commit": "9646afbd8148f8a67fd553ab84e1fdb9b023b556", "Url": "https://api.github.com/repos/jindrapetrik/jpexs-decompiler", "Date": "2015-07-07T20:04:28Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.android.agera.Function<java.lang.Object, java.lang.Integer>.apply(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (itemVariable > (-1)) { viewDataBinding.setVariable(itemVariable, item); view.setTag(R.id.agera__rvdatabinding__item_id, itemVariable); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/4327/buggy-version/extensions.rvdatabinding.src.main.java.com.google.android.agera.rvdatabinding.DataBindingRepositoryPresenterCompiler.java", "BodyUseAPI": ["android.view.View.setTag(R.id.agera__rvdatabinding__item_id,java.lang.Integer)", "android.databinding.ViewDataBinding.setVariable(java.lang.Integer,java.lang.Object)"], "Fixed commit": "36eada3cafe7d16e0689dc0529cdbea2b8c0bcab", "Url": "https://api.github.com/repos/ernstsson/agera", "Date": "2017-03-21T10:18:06Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tried.length()) > 0) { sender.sendMessage(((((org.bukkit.ChatColor.RED) + \"World \\\"\") + tried) + \"\\\" was not found. Check Spelling.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/288/buggy-version/src.main.java.net.digiex.simplefeatures.commands.CMDworld.java", "BodyUseAPI": ["org.bukkit.command.CommandSender.sendMessage(((((org.bukkit.ChatColor.RED) + \"World \\\"\") + tried) + \"\\\" was not found. Check Spelling.\"))"], "Fixed commit": "3e0d669626cb31a2518f19147eebaa7686c48c3b", "Url": "https://api.github.com/repos/jessenic/SFPlugin", "Date": "2011-09-24T15:45:11Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (wname.equalsIgnoreCase(args[0])) { world = w; }else if ((wname.toLowerCase().indexOf(args[0].toLowerCase())) != (-1)) { world = w; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/288/buggy-version/src.main.java.net.digiex.simplefeatures.commands.CMDworld.java", "BodyUseAPI": ["java.lang.String.toLowerCase()", "java.lang.String.toLowerCase()", "java.lang.String.indexOf(java.lang.String)"], "Fixed commit": "3e0d669626cb31a2518f19147eebaa7686c48c3b", "Url": "https://api.github.com/repos/jessenic/SFPlugin", "Date": "2011-09-24T15:45:11Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (ans < 0) javax.swing.JOptionPane.showMessageDialog(null, \"cannot raise negaitve number\", \"Error\", javax.swing.JOptionPane.WARNING_MESSAGE); else Game.user.raise(ans);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/3892/buggy-version/poker.MouseInput.java", "BodyUseAPI": ["Game.user.raise(int)"], "Fixed commit": "fb04ab699b88b3b89d313a6c2580817aac28267e", "Url": "https://api.github.com/repos/linc1097/Poker", "Date": "2017-10-29T17:03:13Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((tylenol != null) && (aspirin != null)) { this.makeConflict(db, tylenol.getId(), aspirin.getId()); this.makeConflict(db, aspirin.getId(), tylenol.getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/4799/buggy-version/src.com.team4.database.DatabaseHandler.java", "BodyUseAPI": ["com.team4.database.Medication.getId()", "com.team4.database.Medication.getId()", "com.team4.database.DatabaseHandler.makeConflict(android.database.sqlite.SQLiteDatabase,aspirin.getId(),tylenol.getId())", "com.team4.database.Medication.getId()", "com.team4.database.Medication.getId()", "com.team4.database.DatabaseHandler.makeConflict(android.database.sqlite.SQLiteDatabase,tylenol.getId(),aspirin.getId())"], "Fixed commit": "703bc77199c9b8a961adbe48cf58261cb409e058", "Url": "https://api.github.com/repos/jjennings955/HealthManagement", "Date": "2014-05-01T06:48:21Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((locationManager) != null) && ((locationProvider) != null)) locationManager.requestLocationUpdates(locationProvider, 400, 1, this);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/93/buggy-version/android.app.src.main.java.com.rota.rngmaps.RNGMapsViewManager.java", "BodyUseAPI": [], "Fixed commit": "457f35d2fea4da7f43c165134d11d191febde30e", "Url": "https://api.github.com/repos/VansonLeung/react-native-gmaps", "Date": "2015-12-08T06:39:22Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (endRow >= (lines.size())) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/6836/buggy-version/src.main.java.net.serenitybdd.cucumber.FeatureFileContents.java", "BodyUseAPI": [], "Fixed commit": "d031853a41779171107a6678619dc3425668fdb6", "Url": "https://api.github.com/repos/serenity-bdd/serenity-cucumber", "Date": "2017-03-24T17:43:41Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (containsTorrentWithID(id)) return torrents.get(id);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/6614/buggy-version/tsap.src.org.tribler.tsap.videoInfoScreen.TorrentManager.java", "BodyUseAPI": ["java.util.ArrayList<org.tribler.tsap.videoInfoScreen.Torrent>.get(int)"], "Fixed commit": "305715163bf36a6656fb0d576f95c08628a18920", "Url": "https://api.github.com/repos/wtud/TSAP", "Date": "2014-05-22T07:15:05Z"},
{"Line": "=>296", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mFlashServiceIsBound) && (isChangingConfigurations())) { com.gmail.btheo95.musicflashlight.service.FlashlightIntentService.unbind(getApplicationContext(), mServiceConnection); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/5799/buggy-version/app.src.main.java.com.gmail.btheo95.musicflashlight.activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "97107e550d8e12901b91db522359b66678cf28e8", "Url": "https://api.github.com/repos/Theo95RO/MusicFlashlight", "Date": "2017-04-11T20:47:37Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((maxRange < 2) || (maxRange > (java.lang.Long.MAX_VALUE))) { java.lang.System.out.println(((\"Invalid number entered. Valid range \" + \"is between 2 and \") + (java.lang.Long.MAX_VALUE))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/606/buggy-version/java.PrimeGenerator.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "144ef5fd91dd9e22c6c3c452b91d3fce0f53fc4c", "Url": "https://api.github.com/repos/cheah/PrimeGenerator", "Date": "2012-09-05T19:15:39Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((playerLocation) + relativeLocation) < (Board.BOARDSIZE)) { if (!(squares[((playerLocation) + relativeLocation)].isOccupied)) { squares[((playerLocation) + relativeLocation)] = new Square(squares[((playerLocation) + relativeLocation)].x, 250, 5, 10, (relativeLocation + (playerLocation)), elementalType); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/1396/buggy-version/src.Board.java", "BodyUseAPI": [], "Fixed commit": "27197314c1938c302f043ade01c90e1a28c6ad14", "Url": "https://api.github.com/repos/matt-how/cardgame", "Date": "2017-02-26T17:50:01Z"},
{"Line": "=>1968", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sortBy.equals(\"createdDate\")) || (sortBy.equals(\"lastUpdatedDate\"))) { return 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/4849/buggy-version/components.governance.org.wso2.carbon.governance.api.src.main.java.org.wso2.carbon.governance.api.util.GovernanceUtils.java", "BodyUseAPI": [], "Fixed commit": "bf6a735bf825bb871635fc0b02ad3193c9c563f5", "Url": "https://api.github.com/repos/prasa7/carbon-governance", "Date": "2016-06-14T13:28:23Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (value == null) { return new javax.swing.JLabel(); }else { return new javax.swing.JLabel(value.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/4065/buggy-version/src.main.java.net.imagej.legacy.ui.search.SearchResultTableModel.java", "BodyUseAPI": ["java.lang.Object.toString()"], "Fixed commit": "ceb60658464f3799643eb85bc3d72645726cffde", "Url": "https://api.github.com/repos/haesleinhuepf/imagej-legacy", "Date": "2017-08-27T20:32:23Z"},
{"Line": "=>395", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((array == null) || ((array.length) < (numOfDataPoints))) { array = new float[numOfDataPoints]; java.lang.System.arraycopy(rtValues, 0, array, 0, numOfDataPoints); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/4600/buggy-version/msdk-io.msdk-io-mzml.src.main.java.io.github.msdk.io.mzml.data.MzMLChromatogram.java", "BodyUseAPI": [], "Fixed commit": "5d27a89a9f99fe79d2664cccf9492196c451b11a", "Url": "https://api.github.com/repos/du-lab/msdk", "Date": "2017-08-14T16:34:19Z"},
{"Line": "=>423", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((array == null) || ((array.length) < (numOfDataPoints))) { array = new float[numOfDataPoints]; java.lang.System.arraycopy(intensityValues, 0, array, 0, numOfDataPoints); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/4600/buggy-version/msdk-io.msdk-io-mzml.src.main.java.io.github.msdk.io.mzml.data.MzMLChromatogram.java", "BodyUseAPI": [], "Fixed commit": "5d27a89a9f99fe79d2664cccf9492196c451b11a", "Url": "https://api.github.com/repos/du-lab/msdk", "Date": "2017-08-14T16:34:19Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((array == null) || ((array.length) < (numOfDataPoints))) { array = new float[numOfDataPoints]; java.lang.System.arraycopy(intensityValues, 0, array, 0, numOfDataPoints); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/4600/buggy-version/msdk-io.msdk-io-mzml.src.main.java.io.github.msdk.io.mzml.data.MzMLMsScan.java", "BodyUseAPI": [], "Fixed commit": "5d27a89a9f99fe79d2664cccf9492196c451b11a", "Url": "https://api.github.com/repos/du-lab/msdk", "Date": "2017-08-14T16:34:19Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((array == null) || ((array.length) < (getNumberOfDataPoints()))) { array = new double[getNumberOfDataPoints()]; java.lang.System.arraycopy(mzValues, 0, array, 0, numOfDataPoints); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/4600/buggy-version/msdk-io.msdk-io-mzml.src.main.java.io.github.msdk.io.mzml.data.MzMLMsScan.java", "BodyUseAPI": [], "Fixed commit": "5d27a89a9f99fe79d2664cccf9492196c451b11a", "Url": "https://api.github.com/repos/du-lab/msdk", "Date": "2017-08-14T16:34:19Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((testSourceBuilder.getInMemReader()) == null) { testSourceBuilder.setInMemReader(org.aksw.rdfunit.io.reader.RDFReaderFactory.createDereferenceReader(tmp_customDereferenceURI)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/7101/buggy-version/rdfunit-core.src.main.java.org.aksw.rdfunit.RDFUnitConfiguration.java", "BodyUseAPI": ["org.aksw.rdfunit.TestSourceBuilder.setInMemReader(org.aksw.rdfunit.io.reader.RDFReaderFactory.createDereferenceReader(tmp_customDereferenceURI))"], "Fixed commit": "65329639ff7dcc83a707c5c723373371957b0386", "Url": "https://api.github.com/repos/AKSW/RDFUnit", "Date": "2015-10-20T11:51:08Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.nbt.NBTTagCompound.getCompoundTag(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((tag1.getInteger(\"MorphNBTProtocolNumber\")) < (NBT_PROTOCOL)) { identifier = \"\"; invalid = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/7510/buggy-version/morph.common.morph.MorphState.java", "BodyUseAPI": [], "Fixed commit": "04aabee27c39f2970fca32d9309e5c339b6b5ce6", "Url": "https://api.github.com/repos/iChun/Morph", "Date": "2014-02-11T09:29:10Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (item_id == (Item.BLOCK)) { blockHealth[(i + (j * (width)))] = 5.0F; graph.set_cost(i, j, com.fdorothy.dinopox.Map.BLOCK_COST); }else { blockHealth[(i + (j * (width)))] = 0.0F; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/6030/buggy-version/core.src.com.fdorothy.dinopox.Map.java", "BodyUseAPI": [], "Fixed commit": "6c5cea1a2d708d9a08d46d6536dd5fde28fa2be8", "Url": "https://api.github.com/repos/fdorothy/dinopocalypse", "Date": "2016-12-12T01:09:44Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.hadoop.conf.Configuration.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (classname != null) try { @java.lang.SuppressWarnings(\"unchecked\") java.lang.Class<org.apache.mahout.graph.model.Parser> parserclass = ((java.lang.Class<org.apache.mahout.graph.model.Parser>) (java.lang.Class.forName(classname))); parser = ((org.apache.mahout.graph.model.Parser) (parserclass.newInstance())); } catch (java.lang.ClassNotFoundException e) { e.printStackTrace(); } catch (java.lang.InstantiationException e) { e.printStackTrace(); } catch (java.lang.IllegalAccessException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/4567/buggy-version/ktrusses-core.src.main.java.org.apache.mahout.graph.common.SimplifyGraph.java", "BodyUseAPI": ["java.lang.Class.forName(java.lang.String)"], "Fixed commit": "7a942c70fdc717c821ce43a4d6dd7eb2b41154ed", "Url": "https://api.github.com/repos/TillmannFiehn/ktrusses", "Date": "2011-06-13T14:07:59Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (langPart == null) { throw new org.apache.uima.analysis_engine.AnalysisEngineProcessException(de.tudarmstadt.ukp.dkpro.core.snowball.SnowballStemmer.MESSAGE_DIGEST, \"unsupported_language_error\", new java.lang.Object[]{ lang }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/5967/buggy-version/de.tudarmstadt.ukp.dkpro.core.snowball.src.main.java.de.tudarmstadt.ukp.dkpro.core.snowball.SnowballStemmer.java", "BodyUseAPI": [], "Fixed commit": "d2c7fd932e549d5e259e1cf9e56464829e342d18", "Url": "https://api.github.com/repos/dkpro/dkpro-core", "Date": "2011-01-06T14:30:20Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Calendar.clone()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (mRowCache.containsKey(rowDay)) { v = mRowCache.get(rowDay); }else { v = buildRow(rowDay); mRowCache.put(rowDay, v); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/340/buggy-version/app.src.main.java.de.smasi.tickmate.TickAdapter.java", "BodyUseAPI": ["java.util.Map<java.util.Calendar, android.view.View>.get(java.util.Calendar)", "de.smasi.tickmate.TickAdapter.buildRow(java.util.Calendar)", "java.util.Map<java.util.Calendar, android.view.View>.put(java.util.Calendar,android.view.View)"], "Fixed commit": "f7125edc08e6da76872a2226421e7e5a0f3099c5", "Url": "https://api.github.com/repos/lordi/tickmate", "Date": "2015-08-23T11:30:27Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ligne.equals(\"#\")) { ligne = \" \"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/7574/buggy-version/src.brainfuck.core.reader.ReaderText.java", "BodyUseAPI": [], "Fixed commit": "5d92ce995b55189ef13ca94dd81417bb74ce6029", "Url": "https://api.github.com/repos/Azu-Chan/brainfuck_interpreter", "Date": "2016-12-14T15:32:11Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(host.contains(\"http://\"))) { portletDriver.get((((\"http://\" + (host)) + \"/\") + (welcomeScreen))); }else { portletDriver.get((((host) + \"/\") + (welcomeScreen))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/6075/buggy-version/src.edu.jhu.cvrg.seleniummain.BaseFunctions.java", "BodyUseAPI": [], "Fixed commit": "55af637652bfe890835f9573f00fa9451a7b1d7b", "Url": "https://api.github.com/repos/CardioVascular-Research-Group/Common_CVRG_Tests", "Date": "2014-05-16T23:35:24Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(host.contains(\"http://\"))) { portletDriver.get((((\"http://\" + (host)) + \"/\") + (portletPage))); }else { portletDriver.get((((host) + \"/\") + (portletPage))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/6075/buggy-version/src.edu.jhu.cvrg.seleniummain.BaseFunctions.java", "BodyUseAPI": [], "Fixed commit": "55af637652bfe890835f9573f00fa9451a7b1d7b", "Url": "https://api.github.com/repos/CardioVascular-Research-Group/Common_CVRG_Tests", "Date": "2014-05-16T23:35:24Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (dagConfig == null) { dumpPolicy = org.shirdrn.smart.dag.utils.ReflectionUtils.newInstance(org.shirdrn.smart.dag.DAGMonitorImpl.DefaultDumpPolicy.class); }else { java.lang.String dumpClass = this.dagConfig.getString(\"smart.dag.monitor.dump.policy\"); if (dumpClass == null) { dumpPolicy = org.shirdrn.smart.dag.utils.ReflectionUtils.newInstance(org.shirdrn.smart.dag.DAGMonitorImpl.DefaultDumpPolicy.class); }else { dumpPolicy = org.shirdrn.smart.dag.utils.ReflectionUtils.newInstance(dumpClass, org.shirdrn.smart.dag.DumpPolicy.class); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/5948/buggy-version/smart-dag-core.src.main.java.org.shirdrn.smart.dag.DAGMonitorImpl.java", "BodyUseAPI": [], "Fixed commit": "dccb9ffd3576079bdfa292c3ef15ed28c6b84b04", "Url": "https://api.github.com/repos/shirdrn/smart-dag", "Date": "2015-06-08T03:27:51Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(object.isFetched(ThetaObject.DataType.MAIN))) || (!(object.isFetched(ThetaObject.DataType.THUMBNAIL)))) { if ((mListener) != null) { mListener.onCompleted(org.deviceconnect.android.deviceplugin.theta.data.ThetaObjectStorage.DBMode.Add, (-1)); } return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/6551/buggy-version/dConnectDevicePlugin.dConnectDeviceTheta.app.src.main.java.org.deviceconnect.android.deviceplugin.theta.data.ThetaObjectStorage.java", "BodyUseAPI": [], "Fixed commit": "b63a2e6bba1c0f718935c4eee4ce3c134c2a0211", "Url": "https://api.github.com/repos/TakayukiHoshi1984/DeviceConnect-Android", "Date": "2015-12-14T02:50:52Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (state.equals(babysnoozer.handlers.AnlernStateMachine.State.Null)) setNextState();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/3344/buggy-version/src.main.java.babysnoozer.handlers.AnlernStateMachine.java", "BodyUseAPI": [], "Fixed commit": "29343d17f45634bdfc023071365a69c0b58372e1", "Url": "https://api.github.com/repos/AlexBischof/BabySnoozer", "Date": "2015-10-07T21:54:17Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((attributeValues.length) != ((FileTransform.TSVParser.tsvAttributes.length) + 1)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/9096/buggy-version/src.FileTransform.TSVParser.java", "BodyUseAPI": [], "Fixed commit": "dfb51016265ad3538b6b5788b6c469d4732d25db", "Url": "https://api.github.com/repos/geniusljr/CSCI572", "Date": "2014-10-05T21:55:17Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((args.length) == 0) { WebCamCaptureController.cameraId = 0; }else { WebCamCaptureController.cameraId = java.lang.Integer.parseInt(args[0]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/1860/buggy-version/src.visMan.Main.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "3768d82453439debe596b6d15a3e7366d9060b81", "Url": "https://api.github.com/repos/iamKunal/Visitor-Management-Sys", "Date": "2017-03-27T22:26:06Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isInBounds((x + w), (y + h))) { modified |= (context.map.getLayer(context.layer).getTile((x + w), (y + h), 0)) != null; context.map.getLayer(context.layer).setTile((x + w), (y + h), 0, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/1427/buggy-version/src.main.java.amber.gui.editor.map.tool._2d.Eraser2D.java", "BodyUseAPI": ["context.map.getLayer(context.layer).setTile(int,int,int,<nulltype>)", "context.map.getLayer(context.layer).getTile(int,int,int)"], "Fixed commit": "18961e5dafc7e8bb3ac3d0cec5171eb659f88e78", "Url": "https://api.github.com/repos/AmberProject/Amber-IDE", "Date": "2013-09-04T01:54:19Z"},
{"Line": "=>720", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (needsRestructure) { restructureTree(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/708/buggy-version/src.main.java.macrobase.analysis.summary.itemset.StreamingFPGrowth.java", "BodyUseAPI": [], "Fixed commit": "5fd997a3e4946bf8c2d81b4e21b51b1dc2ed4045", "Url": "https://api.github.com/repos/stanford-futuredata/macrobase", "Date": "2016-02-23T05:01:54Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.lang.StringUtils.trimToEmpty(dso1.getName())", "org.apache.commons.lang.StringUtils.trimToEmpty(dso2.getName())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (name1.equals(name2)) { return org.apache.commons.lang.ObjectUtils.compare(dso1.getID(), dso2.getID()); }else { return name1.compareToIgnoreCase(name2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/6764/buggy-version/dspace-api.src.main.java.org.dspace.content.comparator.NameAscendingComparator.java", "BodyUseAPI": ["java.lang.String.compareToIgnoreCase(java.lang.String)"], "Fixed commit": "72f8f9461b738003ab33548288f6189d89fca666", "Url": "https://api.github.com/repos/mwoodiupui/DSpace", "Date": "2017-05-22T08:52:15Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ru.ifmo.md.lesson8.DataClasses.WeatherManager.getCurCity()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (curCity != null) { curCityWoeid = curCity.getWoeid(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/5243/buggy-version/app.src.main.java.ru.ifmo.md.lesson8.UpdateService.java", "BodyUseAPI": ["ru.ifmo.md.lesson8.DataClasses.City.getWoeid()"], "Fixed commit": "196f220ddf47dd2475090ee3cf04b9e66a394700", "Url": "https://api.github.com/repos/gerra/lesson8", "Date": "2014-12-12T22:35:49Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((target) instanceof com.company.Nodes.ArrayDeclaration) { if (!(cmpTypes(target.varType, nodes.get(0).nodes))) { throw new java.lang.Exception(\"bad types in var assignment\"); } return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/3486/buggy-version/src.com.company.Nodes.VarAssigment.java", "BodyUseAPI": [], "Fixed commit": "42c60085ddbc00b85c57563d2f0859d01c22327d", "Url": "https://api.github.com/repos/dovius/TM", "Date": "2017-12-18T07:43:06Z"},
{"Line": "=>523", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(edu.stanford.muse.util.Util.nullOrEmpty(name))) { if (name.toLowerCase().equals(((\"'\" + (email.toLowerCase())) + \"'\"))) name = \"\"; if (name.toLowerCase().startsWith(\"undisclosed-recipients\")) name = \"\"; for (java.lang.String taboo : edu.stanford.muse.util.EmailUtils.tabooEmailNames) { if (taboo.equalsIgnoreCase(name)) { name = \"\"; edu.stanford.muse.email.AddressBook.log.info((\"Dropping bad name: \" + taboo)); break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/1313/buggy-version/src.java.edu.stanford.muse.email.AddressBook.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.toLowerCase()"], "Fixed commit": "3d0f4f90b4053f4e44e86e19759eb37c2084a669", "Url": "https://api.github.com/repos/ePADD/muse", "Date": "2016-01-14T04:55:02Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fr.loganbraga.hogwash.Language.Analyzer.Symbol.getToken()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (originalDef == null) { originalDefFile = \"<builtin>\"; originalDefLine = 0; originalDefChar = 0; }else { fr.loganbraga.hogwash.Language.Analyzer.NamedInputStream nis = ((fr.loganbraga.hogwash.Language.Analyzer.NamedInputStream) (originalDef.getInputStream())); originalDefFile = nis.getName(); originalDefLine = originalDef.getLine(); originalDefChar = (originalDef.getCharPositionInLine()) + 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/7490/buggy-version/src.main.java.fr.loganbraga.hogwash.Language.Analyzer.DefinePhase.java", "BodyUseAPI": ["org.antlr.v4.runtime.Token.getCharPositionInLine()", "org.antlr.v4.runtime.Token.getInputStream()", "org.antlr.v4.runtime.Token.getLine()"], "Fixed commit": "3c46ff49d6c1a728d5ca9847cd932e3ff5b91073", "Url": "https://api.github.com/repos/loganbraga/hogwash", "Date": "2016-03-06T12:35:52Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.graphics.Bitmap.getConfig()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (config == null) { config = Bitmap.Config.ARGB_8888; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/3777/buggy-version/vangogh.src.main.java.cc.colorcat.vangogh.OvalTransformation.java", "BodyUseAPI": [], "Fixed commit": "1e2e09be3e34280a03e5063a9af6a7b194ca5815", "Url": "https://api.github.com/repos/fireworld/VanGogh", "Date": "2017-10-18T04:37:36Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.graphics.Bitmap.getConfig()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (config == null) { config = Bitmap.Config.ARGB_8888; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/3777/buggy-version/vangogh.src.main.java.cc.colorcat.vangogh.CircleTransformation.java", "BodyUseAPI": [], "Fixed commit": "1e2e09be3e34280a03e5063a9af6a7b194ca5815", "Url": "https://api.github.com/repos/fireworld/VanGogh", "Date": "2017-10-18T04:37:36Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!hdfs) { bufferedReader2 = new java.io.BufferedReader(new java.io.FileReader(inputFile)); }else { bufferedReader2 = new java.io.BufferedReader(new java.io.InputStreamReader(fileSystem.open(p))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/5287/buggy-version/src.java.org.apache.nutch.scoring.UsageRankNormalization.java", "BodyUseAPI": [], "Fixed commit": "a4b803420ef3ccfbcd37ec05cf7a2ee73d79e266", "Url": "https://api.github.com/repos/AGMLab/nutch", "Date": "2014-02-28T09:49:08Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (weekNo1 > weekNo2) { return 1; }else if (weekNo2 > weekNo1) { return -1; }else { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/731/buggy-version/tmc-plugin.src.fi.helsinki.cs.tmc.ui.ExerciseWeekTable.java", "BodyUseAPI": [], "Fixed commit": "f5b64593622365662a4ff6863f57e3dd855db1c3", "Url": "https://api.github.com/repos/testmycode/tmc-netbeans", "Date": "2017-06-29T11:58:36Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (name == null) { java.lang.String nameWithExt = file.getName(); name = nameWithExt.substring(0, ((nameWithExt.length()) - 4)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/8480/buggy-version/src.com.tdm.vcfcvs.impl.VcfReader.java", "BodyUseAPI": [], "Fixed commit": "1f6a79eeeabb8a73608b1d868c2165d045a46ed8", "Url": "https://api.github.com/repos/trsdln/vcf-to-csv-converter", "Date": "2016-05-14T11:11:28Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((turnCount) > 5) { com.vdom.players.VDomPlayerPhil clonedSelf = null; for (com.vdom.core.Player clonedPlayer : clonedGameForSearch.players) { if ((clonedPlayer.getPlayerName()) == \"Phil\") { clonedSelf = ((com.vdom.players.VDomPlayerPhil) (clonedPlayer)); } } com.vdom.players.Evaluator clonedEvaluator = clonedSelf.gameEvaluator; com.vdom.core.MoveContext clonedContext = new com.vdom.core.MoveContext(clonedGameForSearch, clonedSelf, true); double clonedEvaluation = clonedEvaluator.evaluate(clonedContext); java.lang.System.out.println((\">>>>>> PHIL'S CLONED GAME EVAL = \" + clonedEvaluation)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/6725/buggy-version/vdom.src.com.vdom.players.VDomPlayerPhil.java", "BodyUseAPI": [], "Fixed commit": "fd092df69e04addd09e421fe2cba3a111d215a8f", "Url": "https://api.github.com/repos/Joe-Flynn/androminion", "Date": "2017-11-25T01:42:55Z"},
{"Line": "=>390", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((!(io.craigmiller160.email.EmailTool.IMPORT_TO_PROP.equals(event.getActionCommand()))) && (!(io.craigmiller160.email.EmailTool.IMPORT_CC_PROP.equals(event.getActionCommand())))) && (!(io.craigmiller160.email.EmailTool.IMPORT_BCC_PROP.equals(event.getActionCommand())))) && (!(io.craigmiller160.email.gui.EmailWindow.ATTACHMENT_CMD.equals(event.getActionCommand())))) { fileChooser.setFileFilter(new javax.swing.filechooser.FileNameExtensionFilter(\"Email Configurations\", \"emailconfig\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/2509/buggy-version/src.io.craigmiller160.email.gui.EmailWindow.java", "BodyUseAPI": [], "Fixed commit": "1452bbf703db400d3ea0db33728a3358c116cd26", "Url": "https://api.github.com/repos/craigmiller160/EmailTool", "Date": "2017-03-13T01:07:03Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (table.isDisposed()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/638/buggy-version/src.gui.org.deidentifier.arx.gui.view.impl.define.ViewHierarchy.java", "BodyUseAPI": [], "Fixed commit": "d3eac967d14fc4473d5bb0b60f8135f5abbed048", "Url": "https://api.github.com/repos/arx-deidentifier/arx", "Date": "2014-04-02T14:18:55Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ui.EasyMIMUI.server) != null) { ui.EasyMIMUI.server.terminateServer(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/2184/buggy-version/src.ui.EasyMIMUI.java", "BodyUseAPI": [], "Fixed commit": "4244f2c995034797e06aeacd8302b088333c14f5", "Url": "https://api.github.com/repos/sciencewiz1/EasyMIM", "Date": "2014-05-03T04:29:44Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pluginDir == null) { throw new org.apache.tools.ant.BuildException(\"Failed to download plugin from url.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/8289/buggy-version/CordovaAppBuilder.src.com.codename1.cordova.GenerateCordovaLibraryProject.java", "BodyUseAPI": [], "Fixed commit": "90adcad8ce9c56c96d6990a1f50f11b3c260bcb6", "Url": "https://api.github.com/repos/codenameone/CN1Cordova", "Date": "2015-11-21T00:12:01Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<android.support.v4.app.Fragment>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (fragment instanceof valjevac.kresimir.pokemonApp.fragments.CommentsFragment) { removeFragmentFromStack(fragment.getTag()); break; }else { removeFragmentFromStack(fragment.getTag()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/626/buggy-version/PokemonApp.app.src.main.java.valjevac.kresimir.pokemonApp.activities.MainActivity.java", "BodyUseAPI": ["android.support.v4.app.Fragment.getTag()", "android.support.v4.app.Fragment.getTag()", "valjevac.kresimir.pokemonApp.activities.MainActivity.removeFragmentFromStack(fragment.getTag())", "valjevac.kresimir.pokemonApp.activities.MainActivity.removeFragmentFromStack(fragment.getTag())"], "Fixed commit": "59a73fb2973385f57d3c58c850ced01036d405e5", "Url": "https://api.github.com/repos/kvaljeva/InfinumAcademy", "Date": "2016-08-18T22:40:14Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(sub.getFlowElements().isEmpty())) if (!flag) { this.Suggestion += ((eu.learnpad.verification.plugin.bpmn.guideline.Messages.getString(\"ExplicitStartEndEvents.SuggestionSubprocessKO\", l)) + (sub.getName())) + \" \"; this.status = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/1420/buggy-version/lp-model-verification.verification-component-understandability-plugin.src.main.java.eu.learnpad.verification.plugin.bpmn.guideline.impl.notationusage.ExplicitStartEndEvents.java", "BodyUseAPI": ["org.eclipse.bpmn2.SubProcess.getName()"], "Fixed commit": "52d10c3bf88c0b4404588cc33b30a1b6f29b9709", "Url": "https://api.github.com/repos/imatesiu/learnpad", "Date": "2016-02-03T20:18:41Z"},
{"Line": "=>1109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dpi <= 320) { dpi = 320; }else if (dpi <= 480) { dpi = 480; }else { dpi = 640; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/7765/buggy-version/amethystengine.src.main.java.com.aptoide.amethyst.utils.AptoideUtils.java", "BodyUseAPI": [], "Fixed commit": "969fa3dd95b2c0f7fcae82524cc75c88442eeae8", "Url": "https://api.github.com/repos/Aptoide/aptoide-client", "Date": "2016-01-13T18:57:56Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) == (Build.VERSION_CODES.JELLY_BEAN_MR1)) selectDialogLayout = android.R.layout.select_dialog_singlechoice;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/5858/buggy-version/PersianCalendar.src.main.java.com.byagowi.persiancalendar.view.preferences.ShapedListDialog.java", "BodyUseAPI": [], "Fixed commit": "2fc2cac3dd406cf6a36d500727cc6e9e148d9807", "Url": "https://api.github.com/repos/ebraminio/DroidPersianCalendar", "Date": "2016-03-16T10:07:57Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (direction == (com.fivehundredpx.greedolayout.GreedoLayoutManager.Direction.UP)) { while ((startTopOffset >= ((-dy) / 2)) && ((mFirstVisibleRow) != 0)) { (mFirstVisibleRow)--; newFirstVisiblePosition = firstChildPositionForRow(mFirstVisibleRow); startTopOffset -= sizeForChildAtPosition(newFirstVisiblePosition).getHeight(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/6138/buggy-version/greedo-layout.src.main.java.com.fivehundredpx.greedolayout.GreedoLayoutManager.java", "BodyUseAPI": [], "Fixed commit": "818b05619d3077bc249f5a7e265b4b4a74a86a34", "Url": "https://api.github.com/repos/500px/greedo-layout-for-android", "Date": "2017-11-03T17:38:46Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((java.lang.Boolean) (excute(framework.common.Object_Text, framework.common.Operation_Exists, \"\u76f8\u673a\")))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/3433/buggy-version/uiautomator51.src.framework.common.VideoPlayerCommon.java", "BodyUseAPI": [], "Fixed commit": "d6e6983f5dace616d797b13e0a3646c6a73b686a", "Url": "https://api.github.com/repos/awaiwyy/UIcase", "Date": "2016-05-19T02:05:20Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (syllabifier == null) { syllabifier = new marytts.modules.phonemiser.Syllabifier(this.allophoneSet, this.removeTrailingOneFromPhones); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/8245/buggy-version/marytts-runtime.src.main.java.marytts.modules.JPhonemiser.java", "BodyUseAPI": [], "Fixed commit": "f6217a2bba4c09bc2bbdf30d9fddf6d31e1963ce", "Url": "https://api.github.com/repos/giuliopaci/marytts", "Date": "2012-10-26T15:52:30Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isViewAttached()) { view.render(homeViewState); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/1655/buggy-version/app.src.main.java.com.globant.practice.presentation.presenter.HomePresenter.java", "BodyUseAPI": [], "Fixed commit": "f454a87c99f08cfc86a576651dc2416def114efc", "Url": "https://api.github.com/repos/jvc931/Practice", "Date": "2017-04-18T21:40:07Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (abs instanceof ac.soton.eventb.statemachines.Fork) { for (ac.soton.eventb.statemachines.Transition it : ((ac.soton.eventb.statemachines.Fork) (abs)).getOutgoing()) ret.addAll(generateEnterActions(it)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/1506/buggy-version/ac.soton.eventb.statemachinesJ.generator.src.ac.soton.eventb.statemachinesJ.generator.rules.Transition2EnterActionRule.java", "BodyUseAPI": [], "Fixed commit": "535f339496e6856f929cd800c136d1d49d84c872", "Url": "https://api.github.com/repos/mgt1g13/Statemachine-Java-Generator", "Date": "2014-06-24T16:28:22Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.support.v4.app.FragmentManager.findFragmentByTag(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (unknownFragment != null) { com.peacecorps.pcsa.MainActivity.swapFragmentIn(this, unknownFragment, com.peacecorps.pcsa.MainActivity.FRAGMENT_TAG, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/2504/buggy-version/app.src.main.java.com.peacecorps.pcsa.MainActivity.java", "BodyUseAPI": ["com.peacecorps.pcsa.MainActivity.swapFragmentIn(com.peacecorps.pcsa.MainActivity,android.support.v4.app.Fragment,java.lang.String,boolean)"], "Fixed commit": "fe2fac5ae4a16c1836ff34ce64d363beded45cf3", "Url": "https://api.github.com/repos/codingblazer/PCSA-Android", "Date": "2016-12-03T15:59:42Z"},
{"Line": "=>1584", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((firstSlot) > curBaseEdition) { if (freenet.client.async.USKFetcher.logMINOR) freenet.support.Logger.minor(this, (((\"Ignoring regression in match() from \" + curBaseEdition) + \" to \") + (firstSlot))); return key == null ? -1 : innerMatch(key, ehDocnames, 0, ehDocnames.size(), firstSlot); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/1918/buggy-version/src.freenet.client.async.USKFetcher.java", "BodyUseAPI": ["freenet.support.Logger.minor(freenet.client.async.USKFetcher.USKWatchingKeys.KeyList,java.lang.String)"], "Fixed commit": "010b1c92daaed43ce6a52376915f7a3ef0f47c7a", "Url": "https://api.github.com/repos/freenet/fred", "Date": "2011-02-16T18:34:40Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (fileread == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/2587/buggy-version/Mage.Client.src.main.java.mage.client.util.MusicPlayer.java", "BodyUseAPI": [], "Fixed commit": "7ce050641df4a613ff9c6f486b5e122bc6ac33e1", "Url": "https://api.github.com/repos/petrich0r/mage", "Date": "2013-06-14T17:04:48Z"},
{"Line": "=>11", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (event.isCancelled()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/8562/buggy-version/src.main.java.com.caved_in.commons.listeners.FoodChangeListener.java", "BodyUseAPI": [], "Fixed commit": "b5579c92f4523cebed42c104bac78dcca170569c", "Url": "https://api.github.com/repos/TheGamersCave/Commons", "Date": "2014-05-04T00:21:55Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (event.isCancelled()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/8562/buggy-version/src.main.java.com.caved_in.commons.listeners.CompassListener.java", "BodyUseAPI": [], "Fixed commit": "b5579c92f4523cebed42c104bac78dcca170569c", "Url": "https://api.github.com/repos/TheGamersCave/Commons", "Date": "2014-05-04T00:21:55Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(com.dynious.soundscool.handler.SoundHandler.sounds.contains(sound))) com.dynious.soundscool.handler.SoundHandler.sounds.add(sound);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/598/buggy-version/java.com.dynious.soundscool.handler.SoundHandler.java", "BodyUseAPI": ["java.util.ArrayList<com.dynious.soundscool.sound.Sound>.add(com.dynious.soundscool.sound.Sound)"], "Fixed commit": "0739118bdd0a198d410d544e5acd62f2c081b768", "Url": "https://api.github.com/repos/zoonie/SoundsCool", "Date": "2016-02-07T17:57:10Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.lang.String, java.util.Map.Entry<java.lang.Float, java.lang.String>>.getKey()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (s1 == null) s1 = \"null\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/178/buggy-version/src.haven.OverviewTool.java", "BodyUseAPI": [], "Fixed commit": "9d8ce7b7787448fc5640b4a3e65115a6861f0b0a", "Url": "https://api.github.com/repos/DonnEssime/Custom-Salem", "Date": "2015-11-09T07:39:10Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.lang.String, java.util.Map.Entry<java.lang.Float, java.lang.String>>.getKey()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (s2 == null) s2 = \"null\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/178/buggy-version/src.haven.OverviewTool.java", "BodyUseAPI": [], "Fixed commit": "9d8ce7b7787448fc5640b4a3e65115a6861f0b0a", "Url": "https://api.github.com/repos/DonnEssime/Custom-Salem", "Date": "2015-11-09T07:39:10Z"},
{"Line": "=>1689", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((copies) > 1) { printPS.setCopies(copies); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/6854/buggy-version/qz-print.src.qz.PrintApplet.java", "BodyUseAPI": [], "Fixed commit": "9fd960c687463d647bc50bc60b357f257078c887", "Url": "https://api.github.com/repos/qzindustries/qz-print", "Date": "2014-06-05T17:13:11Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.lastIndexOf(char)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((start != (-1)) && (stop != (-1))) return message.substring(start, stop); else return \"null\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/7239/buggy-version/app.src.main.java.it.unisannio.security.DoApp.parser.MessagesFilter.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "4597446e9fdd94ee3f099ccf5e0ea4f837bda704", "Url": "https://api.github.com/repos/lmartire/DoApp", "Date": "2017-01-27T17:38:01Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((csv.getSize()) == 0) { biz.keyinsights.sda.model.Table withColumns = tableService.getTable(id); table.setColumns(withColumns.getColumns()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/3301/buggy-version/ws.src.main.java.biz.keyinsights.sda.controller.TableController.java", "BodyUseAPI": [], "Fixed commit": "97b013c8bd36b5a3bccfb0e7d5062494472f9e43", "Url": "https://api.github.com/repos/jzheaux/sda", "Date": "2015-07-01T05:48:59Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (exception != null) exception.setStackTrace(steArr);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/5875/buggy-version/haetae-common.src.main.java.com.on36.haetae.common.utils.ThrowableUtils.java", "BodyUseAPI": ["java.lang.Throwable.setStackTrace(java.lang.StackTraceElement[])"], "Fixed commit": "544aee2a82ec4feda1193c457b3274fd1c048bc1", "Url": "https://api.github.com/repos/on36/haetae", "Date": "2016-10-28T00:55:28Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((enteredGameKey.length()) > 0) boardController.tryEnteredGameKey(java.lang.Integer.parseInt(enteredGameKey));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/1793/buggy-version/app.src.main.java.com.ntnu.swipeitagain.Views.JoinGame.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "com.ntnu.swipeitagain.Views.JoinGame.tryEnteredGameKey(int)"], "Fixed commit": "40165139ce73d5b31fb4f8c9f4616585715a42a9", "Url": "https://api.github.com/repos/henloef/SwipeItAgain", "Date": "2017-04-03T15:19:04Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(changed)) redoActionMayChange = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/2391/buggy-version/chibipaint.CPControllerApplication.java", "BodyUseAPI": [], "Fixed commit": "21201ee72f2ba8cfb2970141155a825fc1ef4f6b", "Url": "https://api.github.com/repos/Predelnik/ChibiPaintMod", "Date": "2012-10-31T10:53:39Z"},
{"Line": "=>476", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Long.intValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (start < 0) start = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/5075/buggy-version/src.gate.tools.SimpleManualAnnotator.java", "BodyUseAPI": [], "Fixed commit": "01bdad280c0576762f99923c26cde4ce47e3c0a5", "Url": "https://api.github.com/repos/GenevieveGorrell/gate-SimpleManualAnnotator", "Date": "2015-10-21T16:24:34Z"},
{"Line": "=>479", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Long.intValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (end > (currentAnnotationTask.context.length())) end = currentAnnotationTask.context.length();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/5075/buggy-version/src.gate.tools.SimpleManualAnnotator.java", "BodyUseAPI": ["currentAnnotationTask.context.length()"], "Fixed commit": "01bdad280c0576762f99923c26cde4ce47e3c0a5", "Url": "https://api.github.com/repos/GenevieveGorrell/gate-SimpleManualAnnotator", "Date": "2015-10-21T16:24:34Z"},
{"Line": "=>697", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pipeline.ArgumentParser.getStringOp(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((pluginPath != null) && ((pluginPath.length()) > 0)) { pipeline.getPluginLoader().addPluginPath(pluginPath); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/3700/buggy-version/src.main.java.pipeline.Pipeline.java", "BodyUseAPI": ["plugin.PluginLoader.addPluginPath(java.lang.String)"], "Fixed commit": "fe6e0b70b9972e61b78525ee2a5f4392f61873f6", "Url": "https://api.github.com/repos/ARUP-NGS/Pipeline", "Date": "2015-05-05T17:31:10Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((expressions) == null) && (input.equals(\"pi\"))) return java.lang.Math.PI; else if (((expressions) == null) && (input.equals(\"e\"))) return java.lang.Math.E; else if ((expressions) == null) return java.lang.Double.parseDouble(input); else if ((expressions.size()) == 1) return expressions.get(0).getValue(); else return Calculate(operations);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/2594/buggy-version/src.functionStructure.Expression.java", "BodyUseAPI": ["java.lang.Double.parseDouble(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "a5bd2d3a5b481ac033a74b9f78ebef7331856280", "Url": "https://api.github.com/repos/Lucroth/op-calculator", "Date": "2016-11-08T22:58:03Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((org.springframework.security.core.context.SecurityContextHolder.getContext()) == null) || ((org.springframework.security.core.context.SecurityContextHolder.getContext().getAuthentication()) == null)) || ((org.springframework.security.core.context.SecurityContextHolder.getContext().getAuthentication().getName()) == null)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/6714/buggy-version/qcadoo-security.src.main.java.com.qcadoo.security.internal.SecurityServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "a84e5f36a6355daf49e736d59be8dc7aceadff75", "Url": "https://api.github.com/repos/qcadoo/qcadoo", "Date": "2011-04-08T10:50:57Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (editing) { selection.render(getCurrentCamera()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/4021/buggy-version/src.uk.co.newagedev.hieranarchy.editor.EditorState.java", "BodyUseAPI": [], "Fixed commit": "df089b0e82487f9280a4a425e4177d3e07ebf8e8", "Url": "https://api.github.com/repos/JoshuaBradbury/Hieranarchy", "Date": "2015-03-25T11:31:05Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.System.getProperty(\"fizteh.db.dir\")) == null) { java.lang.System.exit((-1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/3051/buggy-version/src.ru.fizteh.fivt.students.kocurba.multifilehashmap.Main.java", "BodyUseAPI": [], "Fixed commit": "22026de02cf448c628a25bb91893cba6ef754fe1", "Url": "https://api.github.com/repos/TafTafa/fizteh-java-2013", "Date": "2013-11-09T18:58:44Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (next instanceof org.structr.rest.constraint.RelationshipConstraint) { ((org.structr.rest.constraint.RelationshipConstraint) (next)).wrapConstraint(this); return next; }else if (next instanceof org.structr.rest.constraint.RelationshipIdConstraint) { ((org.structr.rest.constraint.RelationshipIdConstraint) (next)).getRelationshipConstraint().wrapConstraint(this); return next; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/4390/buggy-version/structr.structr-core.src.main.java.org.structr.rest.constraint.TypedIdConstraint.java", "BodyUseAPI": [], "Fixed commit": "9cfe21fa5513cd9b7263ea4d4458e7fea9e46e5a", "Url": "https://api.github.com/repos/structr/structr", "Date": "2011-11-12T13:45:19Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (next instanceof org.structr.rest.constraint.RelationshipNodeConstraint) { ((org.structr.rest.constraint.RelationshipNodeConstraint) (next)).wrapConstraint(this); return next; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/4390/buggy-version/structr.structr-core.src.main.java.org.structr.rest.constraint.RelationshipIdConstraint.java", "BodyUseAPI": [], "Fixed commit": "9cfe21fa5513cd9b7263ea4d4458e7fea9e46e5a", "Url": "https://api.github.com/repos/structr/structr", "Date": "2011-11-12T13:45:19Z"},
{"Line": "=>640", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.android.settings.bluetooth.BluetoothSettings.class.getName().equals(fragmentName)) { intent.setClass(context, SubSettings.BluetoothSubSettings.class); }else { intent.setClass(context, com.android.settings.SubSettings.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/8176/buggy-version/src.com.android.settings.Utils.java", "BodyUseAPI": [], "Fixed commit": "21c04cf772ed6665eaa8bfe4a33840444af80062", "Url": "https://api.github.com/repos/AOSParadox/android_packages_apps_Settings", "Date": "2014-12-05T20:24:11Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (bashPathEndPos == (-1)) { config.getExceptionHandler().handleException(this, response, HttpServletResponse.SC_METHOD_NOT_ALLOWED, \"Invalid base URL\", new java.lang.IndexOutOfBoundsException()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/8215/buggy-version/src.main.java.com.roamsys.swagger.SwaggerAPIServlet.java", "BodyUseAPI": [], "Fixed commit": "0c105b1d242ad6cde47c6c89d029b8af5c3b6cf8", "Url": "https://api.github.com/repos/ROAMSYS/swaggerapi", "Date": "2016-04-26T19:15:12Z"},
{"Line": "=>301", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (pos > 0) { sb.append(val.substring(segStart, pos)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/4294/buggy-version/bw-util-misc.src.main.java.org.bedework.util.misc.Util.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "java.lang.String.substring(int,int)"], "Fixed commit": "578c83b8ab644e4c4098acc246c4ef79047bc494", "Url": "https://api.github.com/repos/Bedework/bw-util", "Date": "2015-05-18T13:06:00Z"},
{"Line": "=>398", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.DatabaseMetaData.getDatabaseProductName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (\"MySQL\".equals(dbProductName)) { ps = connection.prepareStatement((\"USE \" + (schema))); }else { ps = connection.prepareStatement(\"SET SCHEMA ?\"); ps.setString(1, schema); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/9049/buggy-version/com.ibm.jbatch.container.src.main.java.com.ibm.jbatch.container.services.impl.JDBCPersistenceManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "7f3e9cefdcb2954511d2061156a1589266c8710a", "Url": "https://api.github.com/repos/WASdev/standards.jsr352.jbatch", "Date": "2017-06-08T07:55:49Z"},
{"Line": "=>335", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rs.getBoolean(\"has_public_key_announcement\")) { builder.appendix(new nxt.Appendix.PublicKeyAnnouncement(buffer, version)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/5669/buggy-version/src.nxt.TransactionDb.java", "BodyUseAPI": [], "Fixed commit": "6c49cf73cd51319825534b75ca8f0777453b472e", "Url": "https://api.github.com/repos/myalcin81/elastic-core", "Date": "2017-04-04T20:02:34Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(org.unicef.rapidreg.utils.TextUtils.isEmpty(name))) { conditionGroup.and(com.raizlabs.android.dbflow.sql.language.Condition.column(com.raizlabs.android.dbflow.sql.language.NameAlias.builder(RecordModel.COLUMN_NAME).build()).like(getWrappedCondition(name))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/2633/buggy-version/app.src.main.java.org.unicef.rapidreg.service.CaseService.java", "BodyUseAPI": ["com.raizlabs.android.dbflow.sql.language.ConditionGroup.and(com.raizlabs.android.dbflow.sql.language.Condition.column(com.raizlabs.android.dbflow.sql.language.NameAlias.builder(RecordModel.COLUMN_NAME).build()).like(getWrappedCondition(name)))", "org.unicef.rapidreg.service.CaseService.getWrappedCondition(java.lang.String)", "com.raizlabs.android.dbflow.sql.language.Condition.column(com.raizlabs.android.dbflow.sql.language.NameAlias.builder(RecordModel.COLUMN_NAME).build()).like(getWrappedCondition(name))"], "Fixed commit": "1a0fdd40aa9fd8339fdfd3d61618429bdca3128d", "Url": "https://api.github.com/repos/UnicefNY/RapidReg", "Date": "2017-02-09T11:37:13Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(org.unicef.rapidreg.utils.TextUtils.isEmpty(caregiver))) { conditionGroup.and(com.raizlabs.android.dbflow.sql.language.Condition.column(com.raizlabs.android.dbflow.sql.language.NameAlias.builder(RecordModel.COLUMN_CAREGIVER).build()).like(getWrappedCondition(caregiver))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/2633/buggy-version/app.src.main.java.org.unicef.rapidreg.service.CaseService.java", "BodyUseAPI": ["org.unicef.rapidreg.service.CaseService.getWrappedCondition(java.lang.String)", "com.raizlabs.android.dbflow.sql.language.Condition.column(com.raizlabs.android.dbflow.sql.language.NameAlias.builder(RecordModel.COLUMN_CAREGIVER).build()).like(getWrappedCondition(caregiver))", "com.raizlabs.android.dbflow.sql.language.ConditionGroup.and(com.raizlabs.android.dbflow.sql.language.Condition.column(com.raizlabs.android.dbflow.sql.language.NameAlias.builder(RecordModel.COLUMN_CAREGIVER).build()).like(getWrappedCondition(caregiver)))"], "Fixed commit": "1a0fdd40aa9fd8339fdfd3d61618429bdca3128d", "Url": "https://api.github.com/repos/UnicefNY/RapidReg", "Date": "2017-02-09T11:37:13Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["client.target(appUri).path(resource).request().get()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((response.getStatus()) == 200) { data = java.lang.Integer.parseInt(response.readEntity(java.lang.String.class)); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/4024/buggy-version/examples.kv-server.src.main.java.com.yahoo.gondola.demo.DemoClient.java", "BodyUseAPI": ["java.lang.Integer.parseInt(response.readEntity(java.lang.String.class))", "javax.ws.rs.core.Response.readEntity(java.lang.Class)"], "Fixed commit": "93da61708382b8024588d5961bd4c02c910240be", "Url": "https://api.github.com/repos/yahoo/gondola", "Date": "2015-12-14T21:19:54Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.sqlite.SQLiteDatabase.query(Attachments.TABLE.name,<nulltype>,((achan.nl.uitstelgedrag.persistence.definitions.tables.Attachments.NOTE) + \" = ?\"),java.lang.String[],<nulltype>,<nulltype>,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (attachmentsCursor.moveToNext()) note.attachment = achan.nl.uitstelgedrag.persistence.definitions.tables.Attachments.fromCursor(attachmentsCursor);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/570/buggy-version/app.src.main.java.achan.nl.uitstelgedrag.persistence.gateways.NoteGateway.java", "BodyUseAPI": ["achan.nl.uitstelgedrag.persistence.definitions.tables.Attachments.fromCursor(android.database.Cursor)"], "Fixed commit": "424969dfadb3443c9f08c5ee71900ba80b4ed874", "Url": "https://api.github.com/repos/ikbenpinda/uitstelgedrag_android", "Date": "2016-10-30T23:59:16Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.sqlite.SQLiteDatabase.query(Attachments.TABLE.name,<nulltype>,((achan.nl.uitstelgedrag.persistence.definitions.tables.Attachments.NOTE) + \" = ?\"),java.lang.String[],<nulltype>,<nulltype>,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (attachmentsCursor.moveToNext()) note.attachment = achan.nl.uitstelgedrag.persistence.definitions.tables.Attachments.fromCursor(attachmentsCursor);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/570/buggy-version/app.src.main.java.achan.nl.uitstelgedrag.persistence.gateways.NoteGateway.java", "BodyUseAPI": ["achan.nl.uitstelgedrag.persistence.definitions.tables.Attachments.fromCursor(android.database.Cursor)"], "Fixed commit": "424969dfadb3443c9f08c5ee71900ba80b4ed874", "Url": "https://api.github.com/repos/ikbenpinda/uitstelgedrag_android", "Date": "2016-10-30T23:59:16Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com_currentEvent.status) == (EventModel.Status.Accepted)) { movieVoteAdapter = new com.parse.starter.MovieVoteAdapter(getApplicationContext(), com_movieList); lvMovieList.setAdapter(movieVoteAdapter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/6162/buggy-version/Polarity_new.ParseStarterProject.src.main.java.com.parse.starter.VoteActivity.java", "BodyUseAPI": [], "Fixed commit": "5a7fd6b98695b2e7a0368a99797f2fedddb91faf", "Url": "https://api.github.com/repos/ucsdCSE110wi16/CSE110M240T16", "Date": "2016-02-21T23:41:06Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (condition.containsKey(com.hawklithm.cerberus.protocol.FrontEndingCommunicationProtocol.LENGTH)) { return ((java.lang.Integer) (condition.get(com.hawklithm.cerberus.protocol.FrontEndingCommunicationProtocol.LENGTH))); }else { return 15; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/5257/buggy-version/src.main.java.com.hawklithm.cerberus.protocol.FrontEndingCommunicationProtocol.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Fixed commit": "779f6b49d2915dea9a6e7d869c91ceab93aa1481", "Url": "https://api.github.com/repos/hawklithm/Cerberus", "Date": "2014-04-08T10:36:10Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (condition.containsKey(com.hawklithm.cerberus.protocol.FrontEndingCommunicationProtocol.OFFSET)) { return ((java.lang.Integer) (condition.get(com.hawklithm.cerberus.protocol.FrontEndingCommunicationProtocol.OFFSET))); }else { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/5257/buggy-version/src.main.java.com.hawklithm.cerberus.protocol.FrontEndingCommunicationProtocol.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Fixed commit": "779f6b49d2915dea9a6e7d869c91ceab93aa1481", "Url": "https://api.github.com/repos/hawklithm/Cerberus", "Date": "2014-04-08T10:36:10Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (tailDomain.startsWith(\".\")) { tailDomain = tailDomain.substring(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/2583/buggy-version/java.src.com.google.gdata.client.http.GoogleGDataRequest.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "5ee0f02e239ea79c068d1544680133921c67a43b", "Url": "https://api.github.com/repos/simonrrr/gdata-java-client", "Date": "2015-08-09T19:49:33Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (lastCouponBook != null) { idCurrentCouponBook = getNextIdCouponBook(lastCouponBook.getIdCouponBook()); }else { idCurrentCouponBook = \"CP000001\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/2940/buggy-version/src.main.java.com.admazing.dataAccess.CouponBookRepositoryImpl.java", "BodyUseAPI": ["com.admazing.CouponBookModel.getIdCouponBook()", "com.admazing.dataAccess.CouponBookRepositoryImpl.getNextIdCouponBook(lastCouponBook.getIdCouponBook())"], "Fixed commit": "4f465799504ab23fc2816f6bb545dc7217de99f5", "Url": "https://api.github.com/repos/dianalu01/WebWS", "Date": "2016-08-29T20:23:43Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((obj == null) || (!(obj instanceof com.epam.hnyp.task2.subtask2.StringKeyWraper))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/1345/buggy-version/task2.src.com.epam.hnyp.task2.subtask2.StringKeyWraper.java", "BodyUseAPI": [], "Fixed commit": "88cca871a820fe92258b38ce06376073c9769234", "Url": "https://api.github.com/repos/gnipalex/epam_task1", "Date": "2014-10-02T17:21:04Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.wasteofplastic.askyblock.ASkyBlockAPI.getInstance().getIslandAt(b.getLocation())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (island != null) { if ((island.getOwner()) == null) { externalPluginsAllowed = island.getMembers().contains(p.getUniqueId()); }else { externalPluginsAllowed = (island.getMembers().contains(p.getUniqueId())) || (island.getOwner().equals(p.getUniqueId())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/9238/buggy-version/src.main.java.de.epiceric.shopchest.listeners.ChestProtectListener.java", "BodyUseAPI": ["island.getMembers().contains(p.getUniqueId())", "com.wasteofplastic.askyblock.Island.getOwner()", "com.wasteofplastic.askyblock.Island.getOwner()", "island.getOwner().equals(p.getUniqueId())", "com.wasteofplastic.askyblock.Island.getMembers()", "com.wasteofplastic.askyblock.Island.getMembers()", "island.getMembers().contains(p.getUniqueId())"], "Fixed commit": "0e1fc781f5560a061662d4377e4eb8f57738e284", "Url": "https://api.github.com/repos/EpicEricEE/ShopChest", "Date": "2017-06-15T11:33:06Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(rectToCrop.isEmpty())) { centerFace = cropToRectangle(frame, rectToCrop.get(0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/4152/buggy-version/common.src.main.java.modules.OPENCVFaceDetectors.java", "BodyUseAPI": ["modules.OPENCVFaceDetectors.cropToRectangle(modules.Mat,rectToCrop.get(0))", "java.util.ArrayList<modules.Rect>.get(int)"], "Fixed commit": "6e90e42c9f3400932f944956b652a13be2955073", "Url": "https://api.github.com/repos/undecidables/COSBAS-Client", "Date": "2015-10-14T10:12:41Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (centerFace != null) { frames.add(centerFace); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/4152/buggy-version/common.src.main.java.modules.OPENCVFaceDetectors.java", "BodyUseAPI": ["java.util.List<modules.Mat>.add(modules.Mat)"], "Fixed commit": "6e90e42c9f3400932f944956b652a13be2955073", "Url": "https://api.github.com/repos/undecidables/COSBAS-Client", "Date": "2015-10-14T10:12:41Z"},
{"Line": "=>355", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Optional<java.lang.Object>.isPresent()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (rowContainsData) { outputRow = rowOutputConverter.getRow(buildBaseOutputRow(), rawReaderRow, data); addExtraFields(outputRow, data); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/8799/buggy-version/plugins.kettle-json-plugin.src.org.pentaho.di.trans.steps.jsoninput.JsonInput.java", "BodyUseAPI": [], "Fixed commit": "34f61bbd69d796f3b9c5fc3d6c69c429d151057b", "Url": "https://api.github.com/repos/pentaho/pentaho-kettle", "Date": "2016-10-14T17:41:14Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (useBSwearMessageColors) { io.github.bswearteam.bswear.TitlesAPI.sendTitle(player, ((org.bukkit.ChatColor.DARK_RED) + title), ((org.bukkit.ChatColor.GOLD) + subtitle)); }else { io.github.bswearteam.bswear.TitlesAPI.sendTitle(player, title, subtitle); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/6580/buggy-version/src.main.java.io.github.bswearteam.bswear.TitlesAPI.java", "BodyUseAPI": [], "Fixed commit": "3ae5743e22fe31b092ce46c62d00d28d37398ef3", "Url": "https://api.github.com/repos/BSwearTeam/BSwear", "Date": "2016-11-12T00:48:32Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isData == 1) { return serializationService.bytesToObject(bytes, 39); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/3566/buggy-version/hazelcast.src.main.java.com.hazelcast.spi.impl.operationservice.impl.responses.Response.java", "BodyUseAPI": [], "Fixed commit": "9c95b53952c912b2a4976966820a2722be8238b4", "Url": "https://api.github.com/repos/pveentjer/hazelcast", "Date": "2016-03-05T17:45:13Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!optimizeForLocalOnly) return serverMap;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/6220/buggy-version/server.src.main.java.com.orientechnologies.orient.server.distributed.ODistributedConfiguration.java", "BodyUseAPI": [], "Fixed commit": "0abbb21f931ddc130b617fd6e17384fd7fb8ceee", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2016-09-29T17:17:59Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<com.whenufree.model.Connection>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((connection.getFriendGroupStatus().getStatusId()) == 1) { userList.add(connection.getUser()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/2728/buggy-version/whenufree.src.main.java.com.whenufree.services.FriendGroupService.java", "BodyUseAPI": ["java.util.List<com.whenufree.model.User>.add(connection.getUser())", "com.whenufree.model.Connection.getUser()"], "Fixed commit": "e153b4909625ff8de5ec963703480acad1c25653", "Url": "https://api.github.com/repos/Revature-102317/when-u-free", "Date": "2017-12-07T14:52:16Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.getPVMAX()) - (this.getPv())) != 0) { java.lang.System.out.println(((((this.getName()) + \" se soigne de \") + (java.lang.Integer.toString(((this.getPVMAX()) - (this.getPv()))))) + \" !\")); this.setPv(this.getPVMAX()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/8195/buggy-version/src.Classes.Soigneur.java", "BodyUseAPI": [], "Fixed commit": "be5ee1dea7d4f5af02b27e91c7e67d1de93e79ce", "Url": "https://api.github.com/repos/Drake62610/BattleRoyale", "Date": "2017-12-02T20:51:14Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((ami.getPVMAX()) - (ami.getPv())) != 0) { java.lang.System.out.println(((((((this.getName()) + \" a soign\u00e9 \") + (ami.getName())) + \" de \") + (java.lang.Integer.toString(((ami.getPVMAX()) - (ami.getPv()))))) + \" !\")); ami.setPv(ami.getPVMAX()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/8195/buggy-version/src.Classes.Soigneur.java", "BodyUseAPI": ["Classes.Personnage.getPVMAX()", "Classes.Personnage.getPv()", "Classes.Personnage.setPv(ami.getPVMAX())", "java.io.PrintStream.println(((((((this.getName()) + \" a soign\u00e9 \") + (ami.getName())) + \" de \") + (java.lang.Integer.toString(((ami.getPVMAX()) - (ami.getPv()))))) + \" !\"))", "java.lang.Integer.toString(((ami.getPVMAX()) - (ami.getPv())))", "Classes.Personnage.getPVMAX()", "Classes.Personnage.getName()"], "Fixed commit": "be5ee1dea7d4f5af02b27e91c7e67d1de93e79ce", "Url": "https://api.github.com/repos/Drake62610/BattleRoyale", "Date": "2017-12-02T20:51:14Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((participants.get(0).getTeam()) == null) { gagnant = participants.get(0); }else { gagnant = participants.get(0).getTeam(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/8195/buggy-version/src.BattleRoyale.BattleRoyale.java", "BodyUseAPI": ["java.util.ArrayList<Classes.Personnage>.get(int)", "participants.get(0).getTeam()", "java.util.ArrayList<Classes.Personnage>.get(int)"], "Fixed commit": "be5ee1dea7d4f5af02b27e91c7e67d1de93e79ce", "Url": "https://api.github.com/repos/Drake62610/BattleRoyale", "Date": "2017-12-02T20:51:14Z"},
{"Line": "=>514", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<java.lang.Integer>.indexOf(requirementsBundle.getId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (bunndleIdIdx != (-1)) { bundleIds.remove(bunndleIdIdx); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/33/buggy-version/src.main.java.edu.ncsu.mas.platys.crowdre.controller.Phase2AppController.java", "BodyUseAPI": ["java.util.List<java.lang.Integer>.remove(int)"], "Fixed commit": "e82ee267185e0faeb3a0d6852befcb41ef26b23a", "Url": "https://api.github.com/repos/pradeepmcl/crowd-requirements", "Date": "2016-03-10T15:20:21Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((getBackground()) instanceof android.graphics.drawable.ColorDrawable)) { android.graphics.drawable.BitmapDrawable mBitmapDrawable = ((android.graphics.drawable.BitmapDrawable) (getBackground())); mBitmap = mBitmapDrawable.getBitmap(); pickColorFromBitmap(mBitmap); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/2545/buggy-version/crescento.src.main.java.developer.shivam.crescento.CrescentoImageView.java", "BodyUseAPI": [], "Fixed commit": "4ee57be89acdfa0b54eb1f7996dde60ffd44f9a6", "Url": "https://api.github.com/repos/developer-shivam/Crescento", "Date": "2017-11-24T07:24:06Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(java.util.Objects.equals(this.id, other.id))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/8716/buggy-version/creatures-hunting-persistence.src.main.java.cz.muni.fi.pa165.persistence.entity.Area.java", "BodyUseAPI": [], "Fixed commit": "831fec6fc14591caabf40becb1316b9affc77318", "Url": "https://api.github.com/repos/kizivat/creatures-hunting", "Date": "2015-10-29T21:55:05Z"},
{"Line": "=>1271", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (faultName == null) { faultName = \"UnknownFault\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/5394/buggy-version/extensions.soap.src.jolie.net.SoapProtocol.java", "BodyUseAPI": [], "Fixed commit": "49e839323c1ae89f72f143b9eb1014c314fe2b2a", "Url": "https://api.github.com/repos/klag/jolie", "Date": "2017-08-02T15:38:49Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((meta) == null) { meta = initializeMeta(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/6575/buggy-version/java.main.org.hedera.io.etl.RevisionETLReader.java", "BodyUseAPI": [], "Fixed commit": "554fa49fa880d157cc28edf155cb518ed35334ab", "Url": "https://api.github.com/repos/antoine-tran/Hedera", "Date": "2014-06-09T14:11:44Z"},
{"Line": "=>352", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<model.Card, view.CardPosition>.get(model.Card)", "java.util.Map<model.Card, view.CardPosition>.get(model.Card)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((position1.faceUp()) != (position2.faceUp())) return position1.faceUp() ? 1 : -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/4839/buggy-version/view.GamePanel.java", "BodyUseAPI": ["view.CardPosition.faceUp()"], "Fixed commit": "3487fef7fa28b92592051e390797414c632c7508", "Url": "https://api.github.com/repos/kevinychen/tractor", "Date": "2013-12-31T21:09:53Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(snapshotSpec.shouldRecordRepeatsAsScenarios())) { stubMappings = from(stubMappings).filter(noDupes(admin)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/5852/buggy-version/src.main.java.com.github.masonm.wiremock.SnapshotTask.java", "BodyUseAPI": [], "Fixed commit": "d8bb88f0a5a6c81ddb168af1eb935af26700d1e5", "Url": "https://api.github.com/repos/MasonM/wiremock-snapshot", "Date": "2017-06-17T22:53:41Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isExternalStorageWritable())) { android.util.Log.e(\"GPXRouteLogger\", \"External storage not writable\"); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/7962/buggy-version/app.src.main.java.de.happycarl.geotown.app.gpx.GPXRouteLogger.java", "BodyUseAPI": [], "Fixed commit": "c051519302bb3c8a8195b9f5f84aa191656a5b01", "Url": "https://api.github.com/repos/HappyCarl/geotown.android", "Date": "2014-09-28T10:43:10Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.oscarehr.common.dao.ValidationsDao.find(oscar.util.ConversionUtils.fromIntString(type.getValidation()))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (vs != null) { result.add(vs); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/4620/buggy-version/src.main.java.oscar.oscarEncounter.oscarMeasurements.pageUtil.EctValidation.java", "BodyUseAPI": ["java.util.List<org.oscarehr.common.model.Validations>.add(org.oscarehr.common.model.Validations)"], "Fixed commit": "7d2712e17e19e727f1099ead1da575a15f3427d6", "Url": "https://api.github.com/repos/scoophealth/oscar", "Date": "2015-12-09T19:46:00Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tilex > (x_Tiles)) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/9124/buggy-version/src.prototype.Player.java", "BodyUseAPI": [], "Fixed commit": "c8f9a75ea2e6c007b8f217c48866bb68b247a8c7", "Url": "https://api.github.com/repos/propra13-orga/gruppe93", "Date": "2013-06-07T08:22:53Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tiley < 0) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/9124/buggy-version/src.prototype.Player.java", "BodyUseAPI": [], "Fixed commit": "c8f9a75ea2e6c007b8f217c48866bb68b247a8c7", "Url": "https://api.github.com/repos/propra13-orga/gruppe93", "Date": "2013-06-07T08:22:53Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tiley > (y_Tiles)) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/9124/buggy-version/src.prototype.Player.java", "BodyUseAPI": [], "Fixed commit": "c8f9a75ea2e6c007b8f217c48866bb68b247a8c7", "Url": "https://api.github.com/repos/propra13-orga/gruppe93", "Date": "2013-06-07T08:22:53Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tilex < 0) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/9124/buggy-version/src.prototype.Player.java", "BodyUseAPI": [], "Fixed commit": "c8f9a75ea2e6c007b8f217c48866bb68b247a8c7", "Url": "https://api.github.com/repos/propra13-orga/gruppe93", "Date": "2013-06-07T08:22:53Z"},
{"Line": "=>708", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bonitasoft.engine.data.instance.model.SDataInstance.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(list.isEmpty())) { dataValue = list.get(index); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/4173/buggy-version/bpm.bonita-core.bonita-process-engine.src.main.java.org.bonitasoft.engine.bpm.model.impl.BPMInstancesCreator.java", "BodyUseAPI": ["java.util.List<java.io.Serializable>.get(int)"], "Fixed commit": "e04b8ab93bd346ace255d4e54d1127b0963b802b", "Url": "https://api.github.com/repos/bonitasoft/bonita-engine", "Date": "2014-11-26T18:14:21Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (act.db.di.S.blank(bindName)) { bindName = act.inject.param.ParamValueLoaderService.bindName(spec); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/2358/buggy-version/src.main.java.act.db.di.FindBy.java", "BodyUseAPI": [], "Fixed commit": "0d3336143fcfbf783275b5a2d86e55bd63840f88", "Url": "https://api.github.com/repos/actframework/actframework", "Date": "2016-10-30T06:35:51Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(rawOutput.isEmpty())) && (rawOutput.contains(\"\\n\"))) { java.lang.String[] split = rawOutput.split(\"\\n\"); if ((split.length) != 0) { jobId = split[0]; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/1186/buggy-version/modules.gfac.gfac-impl.src.main.java.org.apache.airavata.gfac.impl.job.PBSOutputParser.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "b1fd3a06be15a0143237b42c428f89ba0a268dd1", "Url": "https://api.github.com/repos/apache/airavata", "Date": "2015-09-15T18:07:25Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.karateca.jstoolbox.generatemethod.HierarchyFinder.getDocument(com.intellij.openapi.vfs.VirtualFile)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (document == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/2260/buggy-version/src.com.karateca.jstoolbox.generatemethod.HierarchyFinder.java", "BodyUseAPI": [], "Fixed commit": "e5e1ef6492a8f5f0b722c379f3b32124f2f5d765", "Url": "https://api.github.com/repos/andresdominguez/jsToolbox", "Date": "2013-11-26T20:41:10Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cpw.mods.fml.common.FMLCommonHandler.instance().getSide()) != (cpw.mods.fml.relauncher.Side.CLIENT)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/4598/buggy-version/src.main.java.micdoodle8.mods.galacticraft.core.network.GalacticraftChannelHandler.java", "BodyUseAPI": [], "Fixed commit": "7db7d8478eacf9eb1370e64a00aa977daaae6a76", "Url": "https://api.github.com/repos/micdoodle8/Galacticraft", "Date": "2015-02-16T13:06:37Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) < (Build.VERSION_CODES.LOLLIPOP)) { android.webkit.CookieSyncManager.createInstance(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/6493/buggy-version/app.src.main.java.com.hippo.ehviewer.EhApplication.java", "BodyUseAPI": [], "Fixed commit": "efed224018bba4d2a67481a6c9035c8c0d5c9f05", "Url": "https://api.github.com/repos/seven332/EhViewer", "Date": "2015-07-05T12:52:19Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (javax.xml.crypto.dsig.SignatureMethod.DSA_SHA1.equalsIgnoreCase(signatureMethod)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/6665/buggy-version/oscm-saml2-api.javasrc.org.oscm.saml2.api.SamlKeySelector.java", "BodyUseAPI": [], "Fixed commit": "1e16c30339c7b9decd2ca659b032426eb61a86d9", "Url": "https://api.github.com/repos/servicecatalog/development", "Date": "2017-08-01T07:52:17Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(primaryTorpedoStore.isEmpty())) && (!(secondaryTorpedoStore.isEmpty()))) firingSuccess = (primaryTorpedoStore.fire(1)) && (secondaryTorpedoStore.fire(1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/763/buggy-version/src.main.java.hu.bme.mit.spaceship.GT4500.java", "BodyUseAPI": ["hu.bme.mit.spaceship.TorpedoStore.fire(int)", "hu.bme.mit.spaceship.TorpedoStore.fire(int)"], "Fixed commit": "b8c69b4f881ae71426ac1b13dbba72e2614d3856", "Url": "https://api.github.com/repos/lycantroph/ivt-lab", "Date": "2017-03-31T11:19:14Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((type.loadIntoGun) > 0) { hasAmmo = (stack.getItemDamage()) < ((stack.getMaxDamage()) - 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/3409/buggy-version/src.minecraft.co.uk.flansmods.common.ItemGun.java", "BodyUseAPI": [], "Fixed commit": "056b36978cf02f75cf387255f7379742b75e97db", "Url": "https://api.github.com/repos/FlansMods/FlansMod", "Date": "2013-07-01T10:06:16Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (inputFieldType.equals(co.cask.hydrator.plugin.common.co.cask.cdap.api.data.schema.Schema.Type)) { recordBuilder.set(fieldName, java.nio.ByteBuffer.wrap(((byte[]) (structuredRecord.get(fieldName))))); }else { recordBuilder.set(fieldName, convertField(structuredRecord.get(fieldName), schemaField.getSchema())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/7499/buggy-version/core-plugins.src.main.java.co.cask.hydrator.plugin.common.StructuredToAvroTransformer.java", "BodyUseAPI": [], "Fixed commit": "520262674bdce32a6c60764326a598067aac304a", "Url": "https://api.github.com/repos/shashankmoghe/hydrator-plugins", "Date": "2016-12-27T06:30:56Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (ostream != null) { ostream.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/5443/buggy-version/src.main.java.gdv.xport.Main.java", "BodyUseAPI": ["java.io.OutputStream.close()"], "Fixed commit": "6e0ef89dbeb8350114d23224807e5b71e4734895", "Url": "https://api.github.com/repos/oboehm/gdv.xport", "Date": "2012-03-24T22:22:23Z"},
{"Line": "=>932", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.optString(java.lang.String,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (title == null) title = item.optString(\"tit\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/6502/buggy-version/app.src.main.java.net.alien9.iching.Question.java", "BodyUseAPI": [], "Fixed commit": "6469e430689867926836a957b9ac28e1b06c7019", "Url": "https://api.github.com/repos/alien9/iching", "Date": "2017-04-20T20:56:40Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((locationRepo.count()) == 2) { com.theironyard.charlotte.FoodTruckFinder.models.database.FoodTruckLocation l = new com.theironyard.charlotte.FoodTruckFinder.models.database.FoodTruckLocation(); l.setLatitude(35.21392); l.setLongitude((-80.85811)); l.setFoodTruck(foodTruckRepo.findOne(3)); locationRepo.save(l); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/3706/buggy-version/src.main.java.com.theironyard.charlotte.FoodTruckFinder.controllers.FoodTruckFinderController.java", "BodyUseAPI": ["com.theironyard.charlotte.FoodTruckFinder.repositories.FoodTruckLocationRepository.save(com.theironyard.charlotte.FoodTruckFinder.models.database.FoodTruckLocation)"], "Fixed commit": "b4128b5bb506db9eecd4ea0923784e571729abad", "Url": "https://api.github.com/repos/cjzeledon/FoodTruckFinder", "Date": "2017-10-24T13:56:26Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((locationRepo.count()) == 3) { com.theironyard.charlotte.FoodTruckFinder.models.database.FoodTruckLocation l = new com.theironyard.charlotte.FoodTruckFinder.models.database.FoodTruckLocation(); l.setLatitude(35.21392); l.setLongitude((-80.85811)); l.setFoodTruck(foodTruckRepo.findOne(4)); locationRepo.save(l); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/3706/buggy-version/src.main.java.com.theironyard.charlotte.FoodTruckFinder.controllers.FoodTruckFinderController.java", "BodyUseAPI": ["com.theironyard.charlotte.FoodTruckFinder.repositories.FoodTruckLocationRepository.save(com.theironyard.charlotte.FoodTruckFinder.models.database.FoodTruckLocation)"], "Fixed commit": "b4128b5bb506db9eecd4ea0923784e571729abad", "Url": "https://api.github.com/repos/cjzeledon/FoodTruckFinder", "Date": "2017-10-24T13:56:26Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((locationRepo.count()) == 1) { com.theironyard.charlotte.FoodTruckFinder.models.database.FoodTruckLocation l = new com.theironyard.charlotte.FoodTruckFinder.models.database.FoodTruckLocation(); l.setLatitude(35.227855682373); l.setLongitude((-80.8443069458008)); l.setFoodTruck(foodTruckRepo.findOne(2)); locationRepo.save(l); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/3706/buggy-version/src.main.java.com.theironyard.charlotte.FoodTruckFinder.controllers.FoodTruckFinderController.java", "BodyUseAPI": ["com.theironyard.charlotte.FoodTruckFinder.repositories.FoodTruckLocationRepository.save(com.theironyard.charlotte.FoodTruckFinder.models.database.FoodTruckLocation)"], "Fixed commit": "b4128b5bb506db9eecd4ea0923784e571729abad", "Url": "https://api.github.com/repos/cjzeledon/FoodTruckFinder", "Date": "2017-10-24T13:56:26Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((locationRepo.count()) == 4) { com.theironyard.charlotte.FoodTruckFinder.models.database.FoodTruckLocation l = new com.theironyard.charlotte.FoodTruckFinder.models.database.FoodTruckLocation(); l.setLatitude(35.22287); l.setLongitude((-80.83796)); l.setFoodTruck(foodTruckRepo.findOne(5)); locationRepo.save(l); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/3706/buggy-version/src.main.java.com.theironyard.charlotte.FoodTruckFinder.controllers.FoodTruckFinderController.java", "BodyUseAPI": ["com.theironyard.charlotte.FoodTruckFinder.repositories.FoodTruckLocationRepository.save(com.theironyard.charlotte.FoodTruckFinder.models.database.FoodTruckLocation)"], "Fixed commit": "b4128b5bb506db9eecd4ea0923784e571729abad", "Url": "https://api.github.com/repos/cjzeledon/FoodTruckFinder", "Date": "2017-10-24T13:56:26Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.voltdb.planner.StatementPartitioning.isUsefulPartitioningExpression(constExpr))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/3307/buggy-version/src.frontend.org.voltdb.planner.StatementPartitioning.java", "BodyUseAPI": [], "Fixed commit": "0668df2ba7636b90396c73e48f64decb8b66dd11", "Url": "https://api.github.com/repos/bsmr-voltdb/voltdb", "Date": "2014-10-02T22:33:32Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.concurrent.BlockingQueue<java.util.List<org.apache.lucene.document.Document>>.take()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (llDocs instanceof de.dfki.km.leech.lucene.ToLuceneContentHandler.InterruptThreadList) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/8191/buggy-version/src.main.java.de.dfki.km.leech.lucene.ToLuceneContentHandler.java", "BodyUseAPI": [], "Fixed commit": "4fbb4de901870582170d94a59167f0d3fcef1ece", "Url": "https://api.github.com/repos/leechcrawler/leech", "Date": "2013-04-24T15:08:27Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.processes) == null) { this.processes = processes; }else { this.processes.clear(); this.processes.addAll(processes); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/5896/buggy-version/Kitodo-DataManagement.src.main.java.org.kitodo.data.database.beans.Batch.java", "BodyUseAPI": [], "Fixed commit": "e1ba59bc79a8fcb8e98624d80a9b29f12fa27fda", "Url": "https://api.github.com/repos/tim-boerner/kitodo-production", "Date": "2017-05-11T09:27:14Z"},
{"Line": "=>347", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.batches) == null) { this.batches = batches; }else { this.batches.clear(); this.batches.addAll(batches); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/5896/buggy-version/Kitodo-DataManagement.src.main.java.org.kitodo.data.database.beans.Process.java", "BodyUseAPI": [], "Fixed commit": "e1ba59bc79a8fcb8e98624d80a9b29f12fa27fda", "Url": "https://api.github.com/repos/tim-boerner/kitodo-production", "Date": "2017-05-11T09:27:14Z"},
{"Line": "=>273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.app.Activity.findViewById(R.id.questionListView)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (qList != null) { qList.invalidate(); qList.setAdapter(new com.ualberta.team17.view.ListFragment.QuestionListAdapter(this.getActivity(), R.id.questionListView, mIR.getCurrentResults())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/8955/buggy-version/moqa.src.com.ualberta.team17.view.ListFragment.java", "BodyUseAPI": ["android.widget.ListView.invalidate()", "android.widget.ListView.setAdapter(com.ualberta.team17.view.ListFragment.QuestionListAdapter)"], "Fixed commit": "82b30486ba8ddb223544fd8be838f4d36d5b3c00", "Url": "https://api.github.com/repos/j-rewerts/Team17Project", "Date": "2014-11-19T23:41:22Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<java.nio.file.Path>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(path.getFileSystem().getSeparator().equals(\"/\"))) { relativePath = relativePath.replace(path.getFileSystem().getSeparator(), \"/\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/455/buggy-version/src.main.java.com.minecolonies.coremod.colony.Structures.java", "BodyUseAPI": ["java.nio.file.FileSystem.getSeparator()", "java.lang.String.replace(java.lang.String,java.lang.String)", "java.nio.file.Path.getFileSystem()"], "Fixed commit": "2e5b15e4d220c35d217764c61b45caaef03efcde", "Url": "https://api.github.com/repos/ldtteam/minecolonies", "Date": "2017-04-11T22:28:55Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((query.getAlteration().isEmpty()) && (query.getConsequence().equals(\"splice_region_variant\"))) { query.setAlteration(\"splice mutation\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/6565/buggy-version/core.src.main.java.org.mskcc.cbio.oncokb.util.IndicatorUtils.java", "BodyUseAPI": ["org.mskcc.cbio.oncokb.util.Query.setAlteration(java.lang.String)"], "Fixed commit": "5ccd9857756f5eda64becdbf6e8654ab77044f40", "Url": "https://api.github.com/repos/JiaoJiao123/oncokb", "Date": "2017-02-25T21:28:06Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((query.getAlteration()) == null) { query.setAlteration(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/6565/buggy-version/core.src.main.java.org.mskcc.cbio.oncokb.util.IndicatorUtils.java", "BodyUseAPI": ["org.mskcc.cbio.oncokb.util.Query.setAlteration(java.lang.String)"], "Fixed commit": "5ccd9857756f5eda64becdbf6e8654ab77044f40", "Url": "https://api.github.com/repos/JiaoJiao123/oncokb", "Date": "2017-02-25T21:28:06Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.example.mindrate.activity.OverviewActivity.needIntent) { initFromIntent(); com.example.mindrate.activity.OverviewActivity.needIntent = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/7392/buggy-version/Android_App.MindRate.app.src.main.java.com.example.mindrate.activity.OverviewActivity.java", "BodyUseAPI": [], "Fixed commit": "8a60e154221640158bdc584e700dbd57490e033c", "Url": "https://api.github.com/repos/apm1467/mind-rate", "Date": "2017-03-21T08:44:51Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((world.getCanaryWorld()) != null) { net.canarymod.hook.world.BlockPhysicsHook hook = new net.canarymod.hook.world.BlockPhysicsHook(world.getCanaryWorld().getBlockAt(i0, i1, i2), true); net.canarymod.Canary.hooks().callHook(hook); if (hook.isCanceled()) { return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/4480/buggy-version/src.main.java.net.minecraft.server.BlockSand.java", "BodyUseAPI": ["net.minecraft.server.World.getCanaryWorld()", "world.getCanaryWorld().getBlockAt(int,int,int)"], "Fixed commit": "e42200c23e8fb1b6c30da69d877d5ff72d3fd0bd", "Url": "https://api.github.com/repos/FallenMoonNetwork/CanaryRecode", "Date": "2013-05-01T20:29:48Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ss.getRootGrSpec()) != null) s.append(ss.getRootGrSpec().getAsProlog()); else s.append(\"no_group\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/1563/buggy-version/src.main.java.moise.os.OS.java", "BodyUseAPI": ["java.lang.StringBuilder.append(ss.getRootGrSpec().getAsProlog())", "moise.os.ss.SS.getRootGrSpec()", "ss.getRootGrSpec().getAsProlog()"], "Fixed commit": "79b1cecd07c906642eda7eff43ac9bdb641a473d", "Url": "https://api.github.com/repos/moise-lang/moise", "Date": "2017-10-02T21:41:10Z"},
{"Line": "=>410", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sir.getInstanceId()) != null) instanceIds.add(sir.getInstanceId());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/1392/buggy-version/src.main.java.hudson.plugins.ec2.EC2Cloud.java", "BodyUseAPI": ["java.util.Set<java.lang.String>.add(sir.getInstanceId())", "com.amazonaws.services.ec2.model.SpotInstanceRequest.getInstanceId()"], "Fixed commit": "6e6a729ab3b3c1c8c79e49918f8702b546398e12", "Url": "https://api.github.com/repos/lsmith62/ec2-plugin", "Date": "2016-08-18T19:18:01Z"},
{"Line": "=>467", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hudson.plugins.ec2.EC2SpotSlave.getSpotRequest()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((sir.getInstanceId()) != null) instanceIds.add(sir.getInstanceId());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/1392/buggy-version/src.main.java.hudson.plugins.ec2.EC2Cloud.java", "BodyUseAPI": ["java.util.Set<java.lang.String>.add(sir.getInstanceId())", "com.amazonaws.services.ec2.model.SpotInstanceRequest.getInstanceId()"], "Fixed commit": "6e6a729ab3b3c1c8c79e49918f8702b546398e12", "Url": "https://api.github.com/repos/lsmith62/ec2-plugin", "Date": "2016-08-18T19:18:01Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getJSONArray(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(users.getJSONObject(0).getString(\"username\").equals(csulb491.ptrivia.User.getUsername()))) { players[0].setTextColor(Color.WHITE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/7292/buggy-version/PTrivia.app.src.main.java.csulb491.ptrivia.WaitingRoom.java", "BodyUseAPI": [], "Fixed commit": "e6345ecb0d87aafb32fcaf89c20b31cd51a163d7", "Url": "https://api.github.com/repos/DofH/Trivia-Android", "Date": "2017-05-08T23:08:53Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args0.length()) > 0) { args0 += \" \"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/4837/buggy-version/de.marw.cdt.cmake.core.src.main.java.de.marw.cdt.cmake.core.internal.CmakeBuildRunner.java", "BodyUseAPI": [], "Fixed commit": "4ca7556776adc704dca9761f06004bb8fab13207", "Url": "https://api.github.com/repos/15knots/cmake4eclipse", "Date": "2017-11-16T20:08:45Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (shouldFilter) { xmlWriter = new org.gedcomx.util.CleanXMLStreamWriter(xmlWriter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/1093/buggy-version/gedcomx-model.src.main.java.org.gedcomx.util.RecordSetWriter.java", "BodyUseAPI": [], "Fixed commit": "0841637c6ba59e859f27d41cba96cc520d5a6e3a", "Url": "https://api.github.com/repos/FamilySearch/gedcomx-java", "Date": "2015-09-18T01:23:08Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (format.equals(\"fasta\")) fq.writeFasta(out); else fq.print(out);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/6922/buggy-version/src.main.java.japsa.seq.nanopore.NanoporeReaderStream.java", "BodyUseAPI": [], "Fixed commit": "8a1de3b6a822387a118a34caf56d41ad0464cbf2", "Url": "https://api.github.com/repos/mdcao/japsa", "Date": "2016-01-27T11:34:08Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (format.equals(\"fasta\")) fq.writeFasta(sos); else fq.print(sos);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/6922/buggy-version/src.main.java.japsa.seq.nanopore.NanoporeReaderStream.java", "BodyUseAPI": [], "Fixed commit": "8a1de3b6a822387a118a34caf56d41ad0464cbf2", "Url": "https://api.github.com/repos/mdcao/japsa", "Date": "2016-01-27T11:34:08Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((tx.getInputs()) != null) && ((tx.getInputs().size()) != 0)) { utxoPool.removeUTXO(utxo); logger.warning(java.lang.String.format(\"Not Validated :: %s\", TxHandler.ScoogeUtility.toString(tx))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/4836/buggy-version/ScroogeCoin.src.TxHandler.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,java.lang.String)", "TxHandler.Logger.warning(java.lang.String)", "TxHandler.ScoogeUtility.toString(Transaction)"], "Fixed commit": "7a77356edd5028f6f43e08441e233e53d0fee30d", "Url": "https://api.github.com/repos/msinansahin/coursera", "Date": "2017-06-29T07:18:33Z"},
{"Line": "=>684", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (adapter instanceof fr.ganfra.materialspinner.MaterialSpinner.HintAdapter) { super.setAdapter(adapter); }else { hintAdapter = new fr.ganfra.materialspinner.MaterialSpinner.HintAdapter(adapter, getContext()); super.setAdapter(hintAdapter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/5788/buggy-version/library.src.main.java.fr.ganfra.materialspinner.MaterialSpinner.java", "BodyUseAPI": ["android.support.v7.widget.AppCompatSpinner.setAdapter(android.widget.SpinnerAdapter)"], "Fixed commit": "954453e3341152422ffc19d6763877bc18cb07f6", "Url": "https://api.github.com/repos/matheus-ruschel-ilegra/MaterialSpinner", "Date": "2016-12-22T12:00:10Z"},
{"Line": "=>271", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (role.equals(\"admin\")) { intent = new android.content.Intent(ctxt, com.ibm.bluebridge.EventAdminHomeTabActivity.class); }else { intent = new android.content.Intent(ctxt, com.ibm.bluebridge.EventParentViewActivity.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/6878/buggy-version/app.src.main.java.com.ibm.bluebridge.EventLoginActivity.java", "BodyUseAPI": [], "Fixed commit": "3be09c17dd025c99128fff58e7326a8d527ead8a", "Url": "https://api.github.com/repos/ram1988/bluebridge", "Date": "2015-11-12T03:42:53Z"},
{"Line": "=>325", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<java.lang.Integer>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (done.contains(child)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/1627/buggy-version/src.DataSummary.TotalData.java", "BodyUseAPI": [], "Fixed commit": "2e5035e617d8ae7ae6a7315e58b2796f9841e5e9", "Url": "https://api.github.com/repos/AhmedGad/InfluenceLeaders", "Date": "2014-07-01T19:12:17Z"},
{"Line": "=>561", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.deviceconnect.android.deviceplugin.theta.fragment.ThetaShootingFragment.RecordingVideoTask.getActivity()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (activity == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/4976/buggy-version/dConnectDevicePlugin.dConnectDeviceTheta.app.src.main.java.org.deviceconnect.android.deviceplugin.theta.fragment.ThetaShootingFragment.java", "BodyUseAPI": [], "Fixed commit": "ef4524fe79cdc0904d434285dd2c18badf065de7", "Url": "https://api.github.com/repos/TakayukiHoshi1984/DeviceConnect-Android", "Date": "2015-12-11T07:47:12Z"},
{"Line": "=>740", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((subNameList.isEmpty()) && (currentCategory.equals(\"topCategory\"))) { javafx.scene.layout.FlowPane fPane = new javafx.scene.layout.FlowPane(); fPane.setHgap(6); fPane.setPrefWidth(640); fPane.setPrefHeight(104); javafx.scene.text.Text text1 = new javafx.scene.text.Text(\" Dina favoriter\"); text1.setFont(javafx.scene.text.Font.font(\"System\", 42)); text1.setFontSmoothingType(FontSmoothingType.LCD); javafx.scene.text.TextFlow textFlow = new javafx.scene.text.TextFlow(text1); fPane.getChildren().add(textFlow); fPane.setAlignment(Pos.BASELINE_CENTER); subScrollPane.setContent(fPane); }else if ((subNameList.isEmpty()) && (currentCategory.equals(\"search\"))) { javafx.scene.layout.FlowPane flow = new javafx.scene.layout.FlowPane(); flow.setHgap(6); flow.setPrefWidth(640); flow.setPrefHeight(104); javafx.scene.text.Text text1 = new javafx.scene.text.Text(\" Din s\u00f6kning\"); text1.setFont(javafx.scene.text.Font.font(\"System\", 42)); text1.setFontSmoothingType(FontSmoothingType.LCD); javafx.scene.text.TextFlow textFlow = new javafx.scene.text.TextFlow(text1); flow.getChildren().add(textFlow); flow.setAlignment(Pos.BASELINE_CENTER); subScrollPane.setContent(flow); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/472/buggy-version/src.imat.views.IMat_FXMLController.java", "BodyUseAPI": ["java.util.List<java.lang.String>.isEmpty()", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "2b37bfedddf67fc99fa7c16dcc7a26960244e5cc", "Url": "https://api.github.com/repos/gussvens/Projekt_DAT216", "Date": "2016-03-10T07:48:57Z"},
{"Line": "=>736", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(subNameList.isEmpty())) { placeSubItems(subNameList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/472/buggy-version/src.imat.views.IMat_FXMLController.java", "BodyUseAPI": ["imat.views.IMat_FXMLController.placeSubItems(java.util.List<java.lang.String>)"], "Fixed commit": "2b37bfedddf67fc99fa7c16dcc7a26960244e5cc", "Url": "https://api.github.com/repos/gussvens/Projekt_DAT216", "Date": "2016-03-10T07:48:57Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.lang.String, java.lang.Object>.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (value instanceof java.util.Date) { valueWritable = value.toString(); }else { valueWritable = value; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/6213/buggy-version/src.main.java.org.wololo.jdbc.resources.RowsResource.java", "BodyUseAPI": ["java.lang.Object.toString()"], "Fixed commit": "7daea97e1e7c26bdbbeb6fe28c811608019ac42b", "Url": "https://api.github.com/repos/dimitriyremerov/jdbc-http-server", "Date": "2016-09-14T11:40:54Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(com.google.common.base.Strings.isNullOrEmpty(queryString))) { queryString = queryString.replaceAll(\"[^A-Za-z0-9\u00e4\u00f6\u00fc\u00c4\u00d6\u00dc\u00df\u00e9\u00e8\u00e1\u00e0\u00fa\u00f9\u00f3\u00f2=']\", \" \"); if ((com.google.common.base.Strings.isNullOrEmpty(lang)) || (!(\"fr\".equals(lang)))) { queryString += \" lang=en\"; }else { queryString += \" lang=\" + lang; } if (!(com.google.common.base.Strings.isNullOrEmpty(cost))) { if ((java.lang.Integer.valueOf(cost)) >= 7) { queryString += \" cost>=\" + cost; }else { queryString += \" cost=\" + cost; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/8048/buggy-version/src.main.java.com.geminicode.hssc.utils.SearchUtil.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "557c554a1dabb858248cf802039eb00eb82106d1", "Url": "https://api.github.com/repos/Angelima/Hearthstone-search", "Date": "2015-06-18T14:49:38Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type.isAssignableFrom(org.deephacks.logbuffers.Log.class)) { objects.add(((T) (log))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/3163/buggy-version/core.src.main.java.org.deephacks.logbuffers.LogBuffer.java", "BodyUseAPI": [], "Fixed commit": "908185cce88f3d503fb80f704e09691dedeed184", "Url": "https://api.github.com/repos/deephacks/logbuffers", "Date": "2013-12-30T02:01:29Z"},
{"Line": "=>563", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (user == null) { hmc.setPublicRead(handles); }else { hmc.addReadAcl(handles, user.getUser()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/4749/buggy-version/src.us.kbase.workspace.kbase.ArgUtils.java", "BodyUseAPI": ["us.kbase.handlemngr.HandleMngrClient.addReadAcl(java.util.List<java.lang.String>,user.getUser())", "us.kbase.workspace.database.WorkspaceUser.getUser()"], "Fixed commit": "cdcacbc9178b8333b6efbd51ec8fd3436b472edf", "Url": "https://api.github.com/repos/MrCreosote/workspace_deluxe", "Date": "2016-07-08T23:44:08Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (chk.isChecked()) { chk.setTextColor(-16711936); }else { chk.setTextColor(-65536); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/713/buggy-version/AdaptableAndroid.app.src.main.java.com.adaptableandroid.DisplayChecklistActivity.java", "BodyUseAPI": ["android.widget.CheckBox.setTextColor(int)", "android.widget.CheckBox.setTextColor(int)"], "Fixed commit": "d93221c277de0f56a083a6cbc1c3da31e7ea1f1b", "Url": "https://api.github.com/repos/csongnguyen/AdaptableApp", "Date": "2015-04-11T20:22:47Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["item.getTemplate().getItemSet()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (set == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/1656/buggy-version/shivas-server.src.main.java.org.shivas.server.services.game.handlers.ItemHandler.java", "BodyUseAPI": [], "Fixed commit": "412619659138e161634a02ab33fafa4c8f80b19e", "Url": "https://api.github.com/repos/Emudofus/Shivas", "Date": "2012-09-16T08:31:13Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((pos < 0) || (maxLength < 0)) || ((pos + maxLength) > (buffer.length))) { throw new java.lang.ArrayIndexOutOfBoundsException(java.lang.String.format(\"Illegal read options, buffer length:%s, start position:%s, read length:%s\", buffer.length, pos, maxLength)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/4822/buggy-version/src.main.java.io.async.core.Channel.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,int,int,int)"], "Fixed commit": "623b2091923e61c7c0fa1189658e74f2e8691550", "Url": "https://api.github.com/repos/termanli/socket-connection-manager", "Date": "2017-12-26T06:18:12Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((pos < 0) || (maxLength < 0)) || ((pos + maxLength) > (buffer.length))) { throw new java.lang.ArrayIndexOutOfBoundsException(java.lang.String.format(\"Illegal read options, buffer length:%s, start position:%s, read length:%s\", buffer.length, pos, maxLength)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/4822/buggy-version/src.main.java.io.async.core.Channel.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,int,int,int)"], "Fixed commit": "623b2091923e61c7c0fa1189658e74f2e8691550", "Url": "https://api.github.com/repos/termanli/socket-connection-manager", "Date": "2017-12-26T06:18:12Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((com.OS.Conversion.allProcess.size()) != 0) { newAllProcess.add(com.OS.Conversion.allProcess.remove(0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/3336/buggy-version/src.com.OS.Conversion.java", "BodyUseAPI": ["java.util.LinkedList<java.lang.Process>.remove(int)", "java.util.LinkedList<java.lang.Process>.add(java.lang.Process)"], "Fixed commit": "e05b6340669dabd7cd4eeb626b38acfc03519a1b", "Url": "https://api.github.com/repos/yuanguangxin/OS_Experiment", "Date": "2016-05-10T15:26:34Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (flag) { reset(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/7079/buggy-version/app.src.main.java.com.bmustapha.currencycalculator.calculator.CalculatorBrain.java", "BodyUseAPI": [], "Fixed commit": "7ffa86f1868ebe2361c37fa272c043d33d539f59", "Url": "https://api.github.com/repos/mustapha-babatunde-andela/currencyConverter", "Date": "2015-10-15T12:11:51Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentLocation) != null) { android.content.Intent i = new android.content.Intent(this, xyz.tobiassen.priller.DisplayLocationInformation.class); i.putExtra(xyz.tobiassen.priller.MapsActivity.LOCATION_OBJECT, currentLocation); startActivity(i); }else android.widget.Toast.makeText(this, \"Unable to display location data without your location\\nPlease fetch location first\", Toast.LENGTH_SHORT).show();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/4906/buggy-version/Priller.app.src.main.java.xyz.tobiassen.priller.MapsActivity.java", "BodyUseAPI": [], "Fixed commit": "44275b2a5bc5f3f8aeaee46dd62553b9837937eb", "Url": "https://api.github.com/repos/tobiass1/schoolworkPub", "Date": "2015-09-14T12:14:54Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (address == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/3435/buggy-version/src.main.java.gov.nysenate.sage.adapter.GeoServer.java", "BodyUseAPI": [], "Fixed commit": "6e0dc9ab7ae90abfb1f92654e5eab779a3d02b4f", "Url": "https://api.github.com/repos/nysenate/GeoApi", "Date": "2013-01-02T20:53:39Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.phg.looksay.dao.MessageDao.conn) == null) { java.lang.String dbUrl = java.lang.System.getenv(\"JDBC_DATABASE_URL\"); com.phg.looksay.dao.MessageDao.conn = java.sql.DriverManager.getConnection(dbUrl); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/1649/buggy-version/src.main.java.com.phg.looksay.dao.MessageDao.java", "BodyUseAPI": [], "Fixed commit": "99dee579b0d19bfb5d9130a21e9b27c310501bf2", "Url": "https://api.github.com/repos/fractalbass/looksay", "Date": "2017-02-20T23:39:03Z"},
{"Line": "=>9", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((response) == null) { response = block.get(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/8059/buggy-version/jspec-core.src.main.java.ar.com.nonosoft.jspec.block.SupplierProxyCache.java", "BodyUseAPI": [], "Fixed commit": "08a3169c18ba4c1cac5184f9e620d82130d6fb5f", "Url": "https://api.github.com/repos/adrianmarino/jspec", "Date": "2016-05-29T22:47:05Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((types.length) == 1) attribute = null; else attribute = types[cnt];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/1560/buggy-version/src.main.java.org.anon.utilities.gconcurrent.execute.PDescriptor.java", "BodyUseAPI": [], "Fixed commit": "60181e79a8e0ed4e79452621d3c031494922a11f", "Url": "https://api.github.com/repos/smartplatf/a-utilities", "Date": "2013-09-23T10:40:31Z"},
{"Line": "=>352", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (value.isLink()) OLongSerializer.INSTANCE.serializeNative(value.getLink(), serializedValue, 0); else valueSerializer.serializeNative(value.getValue(), serializedValue, 0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/4857/buggy-version/core.src.main.java.com.orientechnologies.orient.core.index.sbtree.local.OSBTreeBucket.java", "BodyUseAPI": ["OLongSerializer.INSTANCE.serializeNative(value.getLink(),byte[],int)", "com.orientechnologies.orient.core.index.sbtree.local.OSBTreeValue<V>.getLink()", "com.orientechnologies.common.serialization.types.OBinarySerializer<V>.serializeNative(value.getValue(),byte[],int)", "com.orientechnologies.orient.core.index.sbtree.local.OSBTreeValue<V>.getValue()"], "Fixed commit": "ff9a9e5b95b3e993fb36861e5a674515168e2848", "Url": "https://api.github.com/repos/henryzhao81/orientdb", "Date": "2014-06-11T17:00:07Z"},
{"Line": "=>342", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (value.isLink()) newSize = com.orientechnologies.common.serialization.types.OLongSerializer.LONG_SIZE; else newSize = valueSerializer.getObjectSize(value.getValue());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/4857/buggy-version/core.src.main.java.com.orientechnologies.orient.core.index.sbtree.local.OSBTreeBucket.java", "BodyUseAPI": ["com.orientechnologies.common.serialization.types.OBinarySerializer<V>.getObjectSize(value.getValue())", "com.orientechnologies.orient.core.index.sbtree.local.OSBTreeValue<V>.getValue()"], "Fixed commit": "ff9a9e5b95b3e993fb36861e5a674515168e2848", "Url": "https://api.github.com/repos/henryzhao81/orientdb", "Date": "2014-06-11T17:00:07Z"},
{"Line": "=>1042", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((getAncestorSession().isFixEnabled(Fixes.DOC_UNID_NULLS)) && (\"Invalid universal id\".equals(e.text))) { }else { org.openntf.domino.utils.DominoUtils.handleException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/3601/buggy-version/org.openntf.domino.src.org.openntf.domino.impl.Database.java", "BodyUseAPI": ["org.openntf.domino.utils.DominoUtils.handleException(lotus.domino.NotesException)"], "Fixed commit": "49c977392dcc28b0b06d87067f7538d191a17119", "Url": "https://api.github.com/repos/rPraml/org.openntf.domino", "Date": "2014-03-14T23:00:03Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mLinearLayout) == null) { mLinearLayout = ((android.widget.LinearLayout) (inflater.inflate(R.layout.result_list_linear_layout, container, false))); loadResults(); return mLinearLayout; }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/6950/buggy-version/src.main.java.com.xtraordinair.tb.SearchResultFragmentTwo.java", "BodyUseAPI": [], "Fixed commit": "a89f3eeaf9ce69dc247b8079f5dcf8a4909b1dd3", "Url": "https://api.github.com/repos/XtraordinairDEV/TB", "Date": "2016-12-12T13:12:35Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((skellie.getSkeletonType()) == (org.bukkit.entity.Skeleton.SkeletonType.WITHER)) if ((equip.hands) == null) skellie.getEquipment().setItemInHand(new org.bukkit.inventory.ItemStack(org.bukkit.Material.STONE_SWORD)); else if ((equip.hands) == null) skellie.getEquipment().setItemInHand(new org.bukkit.inventory.ItemStack(org.bukkit.Material.BOW));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/1014/buggy-version/src.com.gmail.zariust.otherdrops.data.entities.LivingEntityData.java", "BodyUseAPI": ["skellie.getEquipment().setItemInHand(org.bukkit.inventory.ItemStack)", "org.bukkit.entity.Skeleton.getEquipment()", "skellie.getEquipment().setItemInHand(org.bukkit.inventory.ItemStack)", "org.bukkit.entity.Skeleton.getEquipment()"], "Fixed commit": "b9cbe043e91374bc8256f09586f2e6167e1cb25f", "Url": "https://api.github.com/repos/Zarius/Bukkit-OtherBlocks", "Date": "2013-02-21T22:01:20Z"},
{"Line": "=>327", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(b.getText().equals(\"sort\\nall premade\"))) { b.setText(\"sort\\nall premade\"); view.announceForAccessibility(\"sort all premade\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/1801/buggy-version/app.src.main.java.com.example.dupriest.comp580_bam.edit.java", "BodyUseAPI": ["android.widget.Button.setText(java.lang.String)"], "Fixed commit": "c371310e23c26dda77bbd0fb7a1121a4348a00da", "Url": "https://api.github.com/repos/dupriest/Comp580-BAM", "Date": "2017-04-18T18:29:08Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.jClipCorn.gui.guiComponents.SFixTable.2.getRowSorter()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (sorter == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/6267/buggy-version/src.main.de.jClipCorn.gui.guiComponents.SFixTable.java", "BodyUseAPI": [], "Fixed commit": "3975a0338ee021cc888e6c37d00b528571eaff42", "Url": "https://api.github.com/repos/Mikescher/jClipCorn", "Date": "2016-08-02T17:49:26Z"},
{"Line": "=>629", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Object.getRecord()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (r == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/3465/buggy-version/blueprints-orient-graph.src.main.java.com.tinkerpop.blueprints.impls.orient.OrientVertex.java", "BodyUseAPI": [], "Fixed commit": "9b08523b5716cafbc3915867b255aeb618deea62", "Url": "https://api.github.com/repos/Amicus/blueprints", "Date": "2013-06-04T15:23:54Z"},
{"Line": "=>969", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((a == null) || (b == null)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/316/buggy-version/Core.src.main.java.dk.statsbiblioteket.summa.common.Record.java", "BodyUseAPI": [], "Fixed commit": "a6c37a452394a04cdfae4f03b603993d3fcbb13b", "Url": "https://api.github.com/repos/statsbiblioteket/summa", "Date": "2017-12-19T14:28:31Z"},
{"Line": "=>966", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((a == null) && (b == null)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/316/buggy-version/Core.src.main.java.dk.statsbiblioteket.summa.common.Record.java", "BodyUseAPI": [], "Fixed commit": "a6c37a452394a04cdfae4f03b603993d3fcbb13b", "Url": "https://api.github.com/repos/statsbiblioteket/summa", "Date": "2017-12-19T14:28:31Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((gq.siro.software.spigotwrapper.Server.timeRestart) != null) { gq.siro.software.spigotwrapper.Server.timeRestart.cancel(); gq.siro.software.spigotwrapper.Server.timeRestart = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/7175/buggy-version/src.main.java.gq.siro.software.spigotwrapper.Server.java", "BodyUseAPI": [], "Fixed commit": "1c1f51c38a7e635726317724d101b8416d7252ea", "Url": "https://api.github.com/repos/SiroQ/SpigotWrapper", "Date": "2017-12-10T10:56:23Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((userDetails.getRoleId()) == 2) { rest1 = org.hibernate.criterion.Restrictions.and(org.hibernate.criterion.Restrictions.eq(\"privateDoc\", true)); }else { rest1 = org.hibernate.criterion.Restrictions.and(org.hibernate.criterion.Restrictions.eq(\"systemUserId\", userDetails.getId()), org.hibernate.criterion.Restrictions.eq(\"privateDoc\", true)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/352/buggy-version/raw.master.registryKit.registryKit.registryKit-1.0.src.main.java.com.registryKit.document.documentDAO.java", "BodyUseAPI": ["org.hibernate.criterion.Restrictions.and(org.hibernate.criterion.Restrictions.eq(\"systemUserId\", userDetails.getId()),org.hibernate.criterion.Restrictions.eq(\"privateDoc\", true))", "com.registryKit.user.User.getId()", "org.hibernate.criterion.Restrictions.eq(java.lang.String,userDetails.getId())"], "Fixed commit": "2364057406012d920c52bf1756f29a0bf3cb070c", "Url": "https://api.github.com/repos/bowlinktech/rr-mvn-repo", "Date": "2015-10-05T17:35:42Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (spec.toLowerCase().startsWith(\"file:\")) { spec = spec.substring(\"file:\".length()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/9083/buggy-version/sdks.java.core.src.main.java.org.apache.beam.sdk.io.LocalFileSystem.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "5273be6078da8097bf612cfdd21d51934a399743", "Url": "https://api.github.com/repos/flaviocf/beam", "Date": "2017-06-30T17:14:34Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang3.SystemUtils.IS_OS_WINDOWS) { spec = spec.replaceAll(\"^/+\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/9083/buggy-version/sdks.java.core.src.main.java.org.apache.beam.sdk.io.LocalFileSystem.java", "BodyUseAPI": [], "Fixed commit": "5273be6078da8097bf612cfdd21d51934a399743", "Url": "https://api.github.com/repos/flaviocf/beam", "Date": "2017-06-30T17:14:34Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.os.Bundle.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (tpw != null) { int tp = java.lang.Integer.valueOf(tpw); tipoprova.setSelection((tp + 1)); tipoprova.setEnabled(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/4443/buggy-version/app.src.main.java.it.isti.sse.provehwmf.AllegatoActivity.java", "BodyUseAPI": ["java.lang.Integer.valueOf(java.lang.String)"], "Fixed commit": "bc71af343a577ea76c7503f89ee69575d14ef622", "Url": "https://api.github.com/repos/imatesiu/ProveHWMF", "Date": "2016-11-20T23:40:37Z"},
{"Line": "=>515", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.fasterxml.jackson.databind.ObjectMapper.readValue(mapper.writeValueAsString(options),java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((optionsMap.get(\"parent\")) == null) { optionsMap.put(\"resolver\", configuredGlobalResolver); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/5308/buggy-version/fabric.fabric-core.src.main.java.io.fabric8.service.FabricServiceImpl.java", "BodyUseAPI": ["java.util.Map.put(java.lang.String,java.lang.String)"], "Fixed commit": "f250dbddf51fb839549dab2636b6c420586aae20", "Url": "https://api.github.com/repos/jboss-fuse/fabric8", "Date": "2015-07-16T09:16:01Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((list.size()) > 10) { for (int i = 0; i < 10; i++) { dataset.addValue(list.get(i).getBusquedasGlobales(), xd.urlAtitulo(list.get(i).getUrlYoutube()), top); } }else { for (int i = 0; i < (list.size()); i++) { dataset.addValue(list.get(i).getBusquedasGlobales(), xd.urlAtitulo(list.get(i).getUrlYoutube()), top); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/4771/buggy-version/src.Controlador.RankingControlador.java", "BodyUseAPI": ["java.util.ArrayList<Modelo.LetraModel>.get(int)", "org.jfree.data.category.DefaultCategoryDataset.addValue(list.get(i).getBusquedasGlobales(),xd.urlAtitulo(list.get(i).getUrlYoutube()),java.lang.String)", "list.get(i).getBusquedasGlobales()", "java.util.ArrayList<Modelo.LetraModel>.get(int)", "Controlador.PerfilControlador.urlAtitulo(list.get(i).getUrlYoutube())", "java.util.ArrayList<Modelo.LetraModel>.get(int)", "list.get(i).getUrlYoutube()", "list.get(i).getUrlYoutube()", "java.util.ArrayList<Modelo.LetraModel>.size()", "Controlador.PerfilControlador.urlAtitulo(list.get(i).getUrlYoutube())", "java.util.ArrayList<Modelo.LetraModel>.get(int)", "org.jfree.data.category.DefaultCategoryDataset.addValue(list.get(i).getBusquedasGlobales(),xd.urlAtitulo(list.get(i).getUrlYoutube()),java.lang.String)", "list.get(i).getBusquedasGlobales()"], "Fixed commit": "2e6998b0df52407ce4e495815a8d89ace8bc0226", "Url": "https://api.github.com/repos/semoal/MusLearn", "Date": "2017-05-28T20:30:11Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((values.size()) != ((this.size()) - 1)) { throw new java.lang.IllegalArgumentException((((\"Values is not the correct dimension. Values: \" + (values.size())) + \", InputLayer: \") + (size()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/8874/buggy-version/shared.src.main.java.com.neuralnetwork.shared.layers.InputLayer.java", "BodyUseAPI": ["java.util.Vector<java.lang.Double>.size()"], "Fixed commit": "c42a21d37c6d7158abb6734364a07e0cc296a1bd", "Url": "https://api.github.com/repos/javachaos/java-neural-network", "Date": "2015-02-19T05:13:22Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (resourceIds[((java.lang.Integer.parseInt(getValue())) - 1)].toString().contains(\"#\")) { color_id = resourceIds[((java.lang.Integer.parseInt(getValue())) - 1)].toString(); }else { color_id = \"#\" + (resourceIds[((java.lang.Integer.parseInt(getValue())) - 1)].toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/7205/buggy-version/library.src.main.java.com.dvd.android.library.colorlistpreference.ColorListPreference.java", "BodyUseAPI": ["java.lang.CharSequence.toString()", "java.lang.CharSequence.toString()"], "Fixed commit": "2ecadeab6381b9d48b5df164f5122cbf0153f9ad", "Url": "https://api.github.com/repos/DVDAndroid/ColorListPreference", "Date": "2015-01-25T15:53:01Z"},
{"Line": "=>893", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((nodeIds == null) || (nodeIds.isEmpty())) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/5803/buggy-version/app.models.Node.java", "BodyUseAPI": [], "Fixed commit": "90830ade3e70a3b5f52e90b3d3c3f5295e49299d", "Url": "https://api.github.com/repos/jschnasse/regal-api", "Date": "2014-10-14T09:54:37Z"},
{"Line": "=>908", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.seq) == null) || (this.seq.isEmpty())) return new java.lang.String[]{ };", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/5803/buggy-version/app.models.Node.java", "BodyUseAPI": [], "Fixed commit": "90830ade3e70a3b5f52e90b3d3c3f5295e49299d", "Url": "https://api.github.com/repos/jschnasse/regal-api", "Date": "2014-10-14T09:54:37Z"},
{"Line": "=>874", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(simulatedAltDown)) toggleAlt(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/6704/buggy-version/src.de.x28hd.tool.GraphPanel.java", "BodyUseAPI": [], "Fixed commit": "d46db5fe8651ab94d2c632ded5cd33a0d9c5fafb", "Url": "https://api.github.com/repos/x28de/mytool", "Date": "2017-12-15T13:02:46Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.length()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (size <= 2) return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/2140/buggy-version/src.fr.utc.assos.uvweb.data.UVwebContent.java", "BodyUseAPI": [], "Fixed commit": "92f15d8fe05dea643743fb175cf59ce29447dfa5", "Url": "https://api.github.com/repos/uvweb/UVwebForAndroid", "Date": "2014-08-21T10:19:02Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.support.v4.content.ContextCompat.checkSelfPermission(this, Manifest.permission.WRITE_EXTERNAL_STORAGE)) != (android.content.pm.PackageManager.PERMISSION_GRANTED)) { if (android.support.v4.app.ActivityCompat.shouldShowRequestPermissionRationale(this, Manifest.permission.WRITE_EXTERNAL_STORAGE)) { }else { android.support.v4.app.ActivityCompat.requestPermissions(this, new java.lang.String[]{ Manifest.permission.WRITE_EXTERNAL_STORAGE }, de.th_nuernberg.harwedu.labcert.main.MainActivity.PERMISSION_REQUEST_RW); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/5325/buggy-version/app.src.main.java.de.th_nuernberg.harwedu.labcert.main.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "50400af3490c28418b6afef2aa660d08dca73ca3", "Url": "https://api.github.com/repos/harwedu/LabCert", "Date": "2016-09-18T20:27:02Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sonar.server.qualityprofile.QProfileRule.activeRuleId()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (activeRuleId == null) { throw new java.lang.IllegalArgumentException(\"Active rule id can't be null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/2189/buggy-version/sonar-server.src.main.java.org.sonar.server.qualityprofile.QProfiles.java", "BodyUseAPI": [], "Fixed commit": "937fb8fd998ea71d8697d927efaabe1de5ae34de", "Url": "https://api.github.com/repos/SonarSource/sonar", "Date": "2013-12-24T07:44:19Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((table.getCapacity()) == 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/5689/buggy-version/src.main.java.engineers.workshop.client.GuiTable.java", "BodyUseAPI": [], "Fixed commit": "ae462713e0ecc9f7e4b065d4aee62646d2fbec26", "Url": "https://api.github.com/repos/EngineersMods/EngineersWorkshop", "Date": "2017-03-10T23:44:05Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["o1.getStart().compareTo(o2.getStart())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (diff != 0) { return diff; }else { diff = o1.getEnd().compareTo(o2.getEnd()); if (diff != 0) { return diff; }else { return o1.getEventId().compareTo(o2.getEventId()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/8695/buggy-version/src.main.java.com.spaceapplications.vaadin.addon.eventtimeline.event.BasicEventProvider.java", "BodyUseAPI": [], "Fixed commit": "063a2df7795ecfbfa4b8a87ffe14bdf6117f1e84", "Url": "https://api.github.com/repos/netomi/event-timeline", "Date": "2011-12-08T09:53:05Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gson.Gson.fromJson(pref.getString(\"registerData\", \"\"),java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (reg != null) { hashMap = reg.getHashMap(); for (java.util.Map.Entry<java.lang.Integer, java.lang.String> entry : hashMap.entrySet()) { jp.chiba.k.tomoruapp.RegisterDeviceActivity.register_deviceId_list.add(entry.getKey()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/4638/buggy-version/app.src.main.java.jp.chiba.k.tomoruapp.RegisterDeviceActivity.java", "BodyUseAPI": ["jp.chiba.k.tomoruapp.RegisterData.getHashMap()"], "Fixed commit": "5a50337231f8cf6d8a4fb52f513d0212acedf2d6", "Url": "https://api.github.com/repos/cheebacca/Sorou", "Date": "2016-10-18T14:42:55Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((registerData) != null) { for (java.util.Map.Entry<java.lang.Integer, java.lang.String> entry : registerData.getHashMap().entrySet()) { jp.chiba.k.tomoruapp.MainActivity.device_hash.put(entry.getKey(), entry.getValue()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/4638/buggy-version/app.src.main.java.jp.chiba.k.tomoruapp.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "5a50337231f8cf6d8a4fb52f513d0212acedf2d6", "Url": "https://api.github.com/repos/cheebacca/Sorou", "Date": "2016-10-18T14:42:55Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (errorResponse != null) { responseString = errorResponse.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/7893/buggy-version/Library.src.main.java.com.pusher.android.notifications.tokens.TokenUploadHandler.java", "BodyUseAPI": ["org.json.JSONObject.toString()"], "Fixed commit": "4dd908f5954f1b2affc295031c83a46dc865d6bb", "Url": "https://api.github.com/repos/pusher/pusher-websocket-android", "Date": "2016-09-22T09:26:27Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (propertiesFile != null) { if (propertiesFile.getName().endsWith(\".json\")) { try { jsonProperties = new java.lang.String(java.nio.file.Files.readAllBytes(java.nio.file.Paths.get(propertiesFile.getAbsolutePath()))); } catch (java.io.IOException e) { throw new com.dc.runbook.RunBookException((\"Cannot read json properties file : \" + (propertiesFile.getAbsolutePath())), e); } }else { properties = readProperties(propertiesFile); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/8664/buggy-version/dc-java-api.src.main.java.com.dc.api.runbook.RunBookApiImpl.java", "BodyUseAPI": ["java.io.File.getAbsolutePath()", "java.lang.String.endsWith(java.lang.String)", "java.nio.file.Files.readAllBytes(java.nio.file.Path)", "java.io.File.getName()", "java.nio.file.Paths.get(java.lang.String)", "java.io.File.getAbsolutePath()", "com.dc.api.runbook.RunBookApiImpl.readProperties(java.io.File)"], "Fixed commit": "63804b28cee6f6467ddb2b5c8737833514c9e9db", "Url": "https://api.github.com/repos/divinecloud/DivineCloud", "Date": "2015-11-03T06:49:53Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.app.PendingIntent.getBroadcast(getActivity().getApplicationContext(),int,android.content.Intent,int)", "getActivity().getApplicationContext().getSystemService(Context.ALARM_SERVICE)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((pi != null) && (am != null)) am.cancel(pi);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/6405/buggy-version/src.com.bschwagler.positivity.adapter.SettingsFragment.java", "BodyUseAPI": ["android.app.AlarmManager.cancel(android.app.PendingIntent)"], "Fixed commit": "fbe05e762b22872d50741d601ccab065746406ba", "Url": "https://api.github.com/repos/bschwagg/positivity", "Date": "2014-12-10T00:56:55Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((pi) != null) && ((am) != null)) am.cancel(pi);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/6405/buggy-version/src.com.bschwagler.positivity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "fbe05e762b22872d50741d601ccab065746406ba", "Url": "https://api.github.com/repos/bschwagg/positivity", "Date": "2014-12-10T00:56:55Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((br) != null) unregisterReceiver(br);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/6405/buggy-version/src.com.bschwagler.positivity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "fbe05e762b22872d50741d601ccab065746406ba", "Url": "https://api.github.com/repos/bschwagg/positivity", "Date": "2014-12-10T00:56:55Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jask.Executer.getVariableFromHeap(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (ret == null) { return str; }else { if ((ret.getType()) == (VariableType.String)) { return (\"\\\"\" + (ret.toString())) + \"\\\"\"; } return ret.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/587/buggy-version/src.jask.Interpreter.java", "BodyUseAPI": ["jask.Variable.toString()", "jask.Variable.getType()", "jask.Variable.toString()"], "Fixed commit": "13ef7ee55325ee99a34be836b061bfc0f76d9aa5", "Url": "https://api.github.com/repos/jpaffrath/jask", "Date": "2016-10-20T13:36:31Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.namrufus.harvest_time.crop_growth.seasonal_growth.util.CropYieldUtil.randomRound(double)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (count <= 0) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/7342/buggy-version/src.com.github.namrufus.harvest_time.crop_growth.seasonal_growth.util.CropYieldUtil.java", "BodyUseAPI": [], "Fixed commit": "bdfb758d924b76a620d8b096a84a119c796160bf", "Url": "https://api.github.com/repos/Namrufus/HarvestTime", "Date": "2013-12-01T23:54:23Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.obiba.core.service.impl.hibernate.AssociationCriteria.create(org.obiba.magma.datasource.hibernate.domain.ValueSetBinaryValue.class, sessionFactory.getCurrentSession()).add(\"variable.id\", Operation.eq, variableId).add(\"valueSet.id\", Operation.eq, valueSetId).add(\"occurrence\", Operation.eq, occurrence).getCriteria().uniqueResult()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (binaryValue == null) { throw new org.obiba.magma.MagmaRuntimeException(((((((\"Cannot find binary value for variable[\" + (variableId)) + \"], valueSet[\") + (valueSetId)) + \"] and occurrence[\") + (occurrence)) + \"]\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/4342/buggy-version/hibernate.hibernate-datasource.src.main.java.org.obiba.magma.datasource.hibernate.converter.HibernateValueLoaderFactory.java", "BodyUseAPI": [], "Fixed commit": "cf52a81f69db475253f9f14ffb4f74059ae7da60", "Url": "https://api.github.com/repos/kazoompa/magma", "Date": "2013-03-15T19:39:11Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(sp.path.containsKey(pair.left))) && ((sp.last) != (pair.left))) { java.util.Map<java.lang.Integer, java.lang.Integer> newPath = new java.util.HashMap<java.lang.Integer, java.lang.Integer>(sp.path); newPath.put(pair.left, pair.right); App.ShortestPath newShortestPath = new App.ShortestPath(sp.head, pair.right, ((sp.value) + 1), newPath); newLSP.add(newShortestPath); App.addPathIndexEntries(newShortestPath); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/8126/buggy-version/App.java", "BodyUseAPI": ["java.util.Map<java.lang.Integer, java.lang.Integer>.put(java.lang.Integer,java.lang.Integer)"], "Fixed commit": "befb8b87bcde6d53ca20f73ba3f9639275ca8f5b", "Url": "https://api.github.com/repos/sesteves/g", "Date": "2016-03-14T19:40:56Z"},
{"Line": "=>1940", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List.size()", "java.lang.Double.intValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (pos >= size) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/7240/buggy-version/structr-core.src.main.java.org.structr.core.parser.Functions.java", "BodyUseAPI": [], "Fixed commit": "0cb97f01af4783addb23566e101a492c6f543a1e", "Url": "https://api.github.com/repos/structr/structr", "Date": "2014-09-10T08:02:31Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.reactome.web.pwp.client.common.Selection.getDiagram()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (diagram != null) { this.currentState.setPathway(diagram); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/4852/buggy-version/src.main.java.org.reactome.web.pwp.client.manager.state.StateManager.java", "BodyUseAPI": ["org.reactome.web.pwp.client.manager.state.State.setPathway(org.reactome.web.pwp.model.classes.Pathway)"], "Fixed commit": "0bd44a60016efc7100f8fe190487bff8c05904a2", "Url": "https://api.github.com/repos/reactome-pwp/browser", "Date": "2015-07-17T16:53:25Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (zoneObject != null) { filterSummary += \"%nGeographic Zone: \" + (zoneObject.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/102/buggy-version/modules.report.src.main.java.org.openlmis.report.util.SelectedFilterHelper.java", "BodyUseAPI": ["org.openlmis.core.domain.GeographicZone.getName()"], "Fixed commit": "5c1144d6dc6e9723981b46d740cf8d1922e3ee11", "Url": "https://api.github.com/repos/OpenLMIS/open-lmis", "Date": "2015-11-05T09:20:42Z"},
{"Line": "=>417", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.checkerframework.checker.lock.LockVisitor.getAnnotatedType(com.sun.source.tree.ExpressionTree)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((atmOfReceiver.getKind()) != (javax.lang.model.type.TypeKind.VOID)) { javax.lang.model.element.AnnotationMirror gb = atmOfReceiver.getEffectiveAnnotationInHierarchy(atypeFactory.GUARDEDBYUNKNOWN); checkLock(tree.getExpression(), gb); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/4094/buggy-version/checker.src.org.checkerframework.checker.lock.LockVisitor.java", "BodyUseAPI": ["org.checkerframework.framework.type.AnnotatedTypeMirror.getEffectiveAnnotationInHierarchy(atypeFactory.GUARDEDBYUNKNOWN)"], "Fixed commit": "bf52e4320afcad32def2a01a1905da6fcf4b4a04", "Url": "https://api.github.com/repos/smillst/checker-framework", "Date": "2017-10-03T22:20:50Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result.hasErrors()) { session.setAttribute(\"book\", book); mav.setViewName(\"admin_pages/edit.jsp\"); return mav; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/1986/buggy-version/src.main.java.com.tsystems.javaschool.view.controllers.BookController.java", "BodyUseAPI": [], "Fixed commit": "6444f268dd397fcc3619a1d316ee8cac1e57f9be", "Url": "https://api.github.com/repos/advortsov/java_school_2", "Date": "2016-04-05T10:43:18Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((wrappedSocketFactory.get()) == null) { wrappedSocketFactory.set(((javax.net.ssl.SSLSocketFactory) (javax.net.ssl.SSLSocketFactory.getDefault()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/168/buggy-version/codenvy-ssl-socket-factory.src.main.java.com.codenvy.ide.ext.datasource.server.ssl.CodenvySSLSocketFactory.java", "BodyUseAPI": ["java.lang.ThreadLocal<javax.net.ssl.SSLSocketFactory>.set(javax.net.SocketFactory)"], "Fixed commit": "b3b3d14c5dc2d106eb24db9db672f9aa3c31e689", "Url": "https://api.github.com/repos/codenvy/plugin-datasource", "Date": "2014-07-17T15:28:19Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (player.hasNextFrame()) { player.loadNextFrame(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/8217/buggy-version/src.VideoPlayer.java", "BodyUseAPI": ["ImagePlayer.loadNextFrame()"], "Fixed commit": "284c90f5ce75368e6729b655926784bf0e536f28", "Url": "https://api.github.com/repos/databrary/datavyu", "Date": "2017-02-20T20:39:25Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((parentGui) != null) parentGui.refreshText();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/4903/buggy-version/src.main.java.latmod.ftbu.mod.client.gui.guide.GuiGuide.java", "BodyUseAPI": [], "Fixed commit": "3aa637ca60656e2c8bce039dc9ada5d778101b13", "Url": "https://api.github.com/repos/LatvianModder/FTBUtilities", "Date": "2015-12-23T21:13:16Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["host.select(\"div.Data\").text()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (count.contains(\"/\")) { count = count.substring(((count.indexOf(\"/\")) + 1), count.indexOf(\" \", count.indexOf(\"/\"))); c = java.lang.Integer.valueOf(count); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/3113/buggy-version/app.src.main.java.com.ov3rk1ll.kinocast.api.KinoxParser.java", "BodyUseAPI": ["java.lang.String.indexOf(java.lang.String)", "java.lang.String.indexOf(java.lang.String,int)", "java.lang.String.substring(int,int)", "java.lang.String.indexOf(java.lang.String)"], "Fixed commit": "f460f96355074e0e47b3be91088ae8f8d93715e2", "Url": "https://api.github.com/repos/ov3rk1ll/KinoCast", "Date": "2015-07-25T16:23:09Z"},
{"Line": "=>345", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["us.fitzpatricksr.cownet.commands.CowWarp.getWarpLocation(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (loc != null) { if ((spawnJiggle) > 0) { int dx = ((rand.nextInt((((spawnJiggle) * 2) + 1))) - (spawnJiggle)) - 1; int dz = ((rand.nextInt((((spawnJiggle) * 2) + 1))) - (spawnJiggle)) - 1; loc.add(dx, 0, dz); loc = loc.getWorld().getHighestBlockAt(loc).getLocation(); loc.add(0, 1, 0); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/517/buggy-version/src.us.fitzpatricksr.cownet.commands.TntWars.java", "BodyUseAPI": ["loc.getWorld().getHighestBlockAt(loc).getLocation()", "loc.getWorld().getHighestBlockAt(org.bukkit.Location)", "org.bukkit.Location.add(int,int,int)", "org.bukkit.Location.getWorld()"], "Fixed commit": "7650a8fe2d14d3700b6ca8ae657dc97350abf8b5", "Url": "https://api.github.com/repos/fitzpatricksrus/CowNet", "Date": "2012-07-30T04:28:00Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (file.delete()) { return result; }else { com.dumptruckman.minecraft.pluginbase.logging.Logging.finest(\"Could not delete file: %s\", file); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/5950/buggy-version/utilities.src.main.java.com.dumptruckman.minecraft.pluginbase.util.FileUtils.java", "BodyUseAPI": ["com.dumptruckman.minecraft.pluginbase.logging.Logging.finest(java.lang.String,java.io.File)"], "Fixed commit": "11aad7d581a3d58f5fb459b756f0944391b7cc08", "Url": "https://api.github.com/repos/dumptruckman/PluginBase", "Date": "2013-01-16T20:32:32Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (file.isDirectory()) { final java.io.File[] files = file.listFiles(); if (files == null) { com.dumptruckman.minecraft.pluginbase.logging.Logging.finest(\"Error while retrieving file list for: %s\", file); return false; } for (final java.io.File f : files) { result = result && (com.dumptruckman.minecraft.pluginbase.util.FileUtils.deleteFolder(f)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/5950/buggy-version/utilities.src.main.java.com.dumptruckman.minecraft.pluginbase.util.FileUtils.java", "BodyUseAPI": ["java.io.File.listFiles()", "com.dumptruckman.minecraft.pluginbase.logging.Logging.finest(java.lang.String,java.io.File)"], "Fixed commit": "11aad7d581a3d58f5fb459b756f0944391b7cc08", "Url": "https://api.github.com/repos/dumptruckman/PluginBase", "Date": "2013-01-16T20:32:32Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (files == null) { com.dumptruckman.minecraft.pluginbase.logging.Logging.finest(\"Error while retrieving file list for: %s\", file); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/5950/buggy-version/utilities.src.main.java.com.dumptruckman.minecraft.pluginbase.util.FileUtils.java", "BodyUseAPI": [], "Fixed commit": "11aad7d581a3d58f5fb459b756f0944391b7cc08", "Url": "https://api.github.com/repos/dumptruckman/PluginBase", "Date": "2013-01-16T20:32:32Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dir != null) && (!(dir.exists()))) { ballantines.avionics.blackbox.service.PreferencesPersistenceServiceImpl.L.warn(\"[PERSISTENCE] Stored routes directory does not exist. Will be ignored: %s\", path); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/5255/buggy-version/src.main.java.ballantines.avionics.blackbox.service.PreferencesPersistenceServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "c3beeab603170ae2a35d116c5d8b91c021f9f62d", "Url": "https://api.github.com/repos/barryballantines/BarrysBlackBox", "Date": "2017-01-05T21:28:47Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dir != null) && (!(dir.exists()))) { ballantines.avionics.blackbox.service.PreferencesPersistenceServiceImpl.L.warn(\"[PERSISTENCE] Stored preferences backup directory does not exist. Will be ignored: %s\", path); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/5255/buggy-version/src.main.java.ballantines.avionics.blackbox.service.PreferencesPersistenceServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "c3beeab603170ae2a35d116c5d8b91c021f9f62d", "Url": "https://api.github.com/repos/barryballantines/BarrysBlackBox", "Date": "2017-01-05T21:28:47Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.valueOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (listIndex > ((elementList.size()) - 1)) { throw new java.lang.RuntimeException(\"path is not valid!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/284/buggy-version/src.com.zf.zson.ZsonResultImpl.java", "BodyUseAPI": [], "Fixed commit": "1538a85018a1aadf2a19323ae9e628fc06897f42", "Url": "https://api.github.com/repos/zhangfei19841004/zson", "Date": "2016-06-29T03:31:05Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(elementMap.containsKey(k))) { throw new java.lang.RuntimeException(\"path is not valid!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/284/buggy-version/src.com.zf.zson.ZsonResultImpl.java", "BodyUseAPI": [], "Fixed commit": "1538a85018a1aadf2a19323ae9e628fc06897f42", "Url": "https://api.github.com/repos/zhangfei19841004/zson", "Date": "2016-06-29T03:31:05Z"},
{"Line": "=>1798", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.orientechnologies.common.collection.closabledictionary.OClosableLinkedContainer<java.lang.Long, com.orientechnologies.orient.core.storage.fs.OFileClassic>.acquire(long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (entry == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/2670/buggy-version/core.src.main.java.com.orientechnologies.orient.core.storage.cache.local.OWOWCache.java", "BodyUseAPI": [], "Fixed commit": "5c5e4f484ee856d84d56bf50f907c1908426bd50", "Url": "https://api.github.com/repos/sonatype/orientdb", "Date": "2017-02-13T15:17:59Z"},
{"Line": "=>476", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isOpen())) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/2670/buggy-version/core.src.main.java.com.orientechnologies.orient.core.storage.fs.OFileClassic.java", "BodyUseAPI": [], "Fixed commit": "5c5e4f484ee856d84d56bf50f907c1908426bd50", "Url": "https://api.github.com/repos/sonatype/orientdb", "Date": "2017-02-13T15:17:59Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.Statement.executeQuery(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(columnNames.contains(rs.getString(1)))) { columnNames.add(rs.getString(1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/6967/buggy-version/src.com.refilter.database.DatabaseManager.java", "BodyUseAPI": ["java.sql.ResultSet.getString(int)", "java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "6221d52f3b0ded4e5be3c35e4c39803e77df34c0", "Url": "https://api.github.com/repos/REDetector/REFilter", "Date": "2015-01-03T14:38:32Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.web.util.UriComponentsBuilder.fromUriString(externalReference.getUrl()).build().getPathSegments()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((pathSegments.size()) > 0) { org.dom4j.Element databaseId = database.addElement(org.dom4j.QName.get(\"ID\", xmlns)); databaseId.setText(pathSegments.get(((pathSegments.size()) - 1))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/3427/buggy-version/models.core.src.main.java.uk.ac.ebi.biosamples.service.SampleToXmlConverter.java", "BodyUseAPI": ["java.util.List<java.lang.String>.get(int)", "java.util.List<java.lang.String>.size()", "org.dom4j.Element.setText(java.lang.String)"], "Fixed commit": "4c014fbbc47727338d85ad5915504a359242b4f3", "Url": "https://api.github.com/repos/EBIBioSamples/biosamples-v4", "Date": "2017-09-14T09:30:58Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dcontext) != null) super.show();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/4833/buggy-version/captcha.src.main.java.com.netease.nis.captcha.CaptchaDialog.java", "BodyUseAPI": [], "Fixed commit": "7fbddb7eaa5fbf02564bf69edca3340b12baf3b3", "Url": "https://api.github.com/repos/yidun/captcha-android-demo", "Date": "2017-09-19T10:52:43Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eu.openanalytics.services.AppService.getAppRoles(app.getName())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((appRoles != null) && ((appRoles.length) > 0)) http.authorizeRequests().antMatchers((\"/app/\" + (app.getName()))).hasAnyRole(appRoles);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/7127/buggy-version/src.main.java.eu.openanalytics.WebSecurityConfig.java", "BodyUseAPI": ["http.authorizeRequests().antMatchers((\"/app/\" + (app.getName()))).hasAnyRole(java.lang.String[])"], "Fixed commit": "d7b404eb7c9c6584bcb6f86f9bfb0a6e2ad1a164", "Url": "https://api.github.com/repos/openanalytics/shinyproxy", "Date": "2016-06-23T10:09:06Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((nodes.length) == 0) return new com.analog.lyric.dimple.matlabproxy.PFactorVector();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/360/buggy-version/solvers.java.src.main.java.com.analog.lyric.dimple.matlabproxy.PHelpers.java", "BodyUseAPI": [], "Fixed commit": "d7b09854fda0e449cdd74d23f15449cfaa2b7e2d", "Url": "https://api.github.com/repos/AnalogDevicesLyricLabs/dimple", "Date": "2012-11-09T18:41:28Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((variables.length) == 0) return new com.analog.lyric.dimple.matlabproxy.PVariableVector();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/360/buggy-version/solvers.java.src.main.java.com.analog.lyric.dimple.matlabproxy.PHelpers.java", "BodyUseAPI": [], "Fixed commit": "d7b09854fda0e449cdd74d23f15449cfaa2b7e2d", "Url": "https://api.github.com/repos/AnalogDevicesLyricLabs/dimple", "Date": "2012-11-09T18:41:28Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((buttonMode) && (org.roda.wui.client.common.utils.StringUtils.isBlank(editPassword.getValue()))) { small = false; }else { small = (editPassword.getValue().length()) < 6; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/342/buggy-version/roda-ui.roda-wui.src.main.java.org.roda.wui.client.management.PasswordPanel.java", "BodyUseAPI": ["editPassword.getValue().length()", "com.google.gwt.user.client.ui.PasswordTextBox.getValue()"], "Fixed commit": "597b70e39c62560cf6407e64b14967645f006174", "Url": "https://api.github.com/repos/keeps/roda", "Date": "2017-05-16T10:29:45Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((p.getCommunity()) != null) { if (!(communityDefaulterMap.containsKey(p.getCommunity()))) { communityDefaulterMap.put(p.getCommunity(), new java.util.TreeMap<java.lang.String, java.util.List<java.lang.String>>()); } java.util.TreeMap<java.lang.String, java.util.List<java.lang.String>> communityDefaulters = communityDefaulterMap.get(p.getCommunity()); communityDefaulters.put(patient, defaultedFor); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/6849/buggy-version/motech-mobile-omi.src.main.java.org.motechproject.mobile.omi.manager.SMSMessageFormatter.java", "BodyUseAPI": ["org.motechproject.mobile.omi.manager.Patient.getCommunity()", "org.motechproject.mobile.omi.manager.Patient.getCommunity()", "java.util.TreeMap<java.lang.String, java.util.TreeMap<java.lang.String, java.util.List<java.lang.String>>>.put(p.getCommunity(),java.util.TreeMap<java.lang.String, java.util.List<java.lang.String>>)", "org.motechproject.mobile.omi.manager.Patient.getCommunity()", "java.util.TreeMap<java.lang.String, java.util.TreeMap<java.lang.String, java.util.List<java.lang.String>>>.containsKey(p.getCommunity())", "java.util.TreeMap<java.lang.String, java.util.TreeMap<java.lang.String, java.util.List<java.lang.String>>>.get(p.getCommunity())"], "Fixed commit": "fa3d87da19853ccee810a117084a8e2cda7586e8", "Url": "https://api.github.com/repos/motech/MOTECH-Mobile", "Date": "2011-05-31T09:59:10Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (nextBatch == null) { my.triviagame.xmcd.XmcdImporter.logger.warning(\"Background thread did not respond in time\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/7718/buggy-version/dbproject.src.my.triviagame.xmcd.XmcdImporter.java", "BodyUseAPI": [], "Fixed commit": "305a435eed6c1bf99285d1775cbd04e50b16dc22", "Url": "https://api.github.com/repos/grzn/dbc", "Date": "2012-05-29T06:04:13Z"},
{"Line": "=>482", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((login == null) || ((login.length()) < 1)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/4925/buggy-version/src.main.java.org.gost19.pacahon.ba_organization_driver.BaOrganizationDriver.java", "BodyUseAPI": [], "Fixed commit": "489b33d503172e3e3e72019cebca7553a01f2059", "Url": "https://api.github.com/repos/itiu/pacahon-to-ba_organization-driver", "Date": "2011-06-10T12:01:44Z"},
{"Line": "=>442", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((login == null) || ((login.length()) < 1)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/4925/buggy-version/src.main.java.org.gost19.pacahon.ba_organization_driver.BaOrganizationDriver.java", "BodyUseAPI": [], "Fixed commit": "489b33d503172e3e3e72019cebca7553a01f2059", "Url": "https://api.github.com/repos/itiu/pacahon-to-ba_organization-driver", "Date": "2011-06-10T12:01:44Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.brein.time.timeintervals.collections.CassandraIntervalCollectionPersistor.LOGGER.isTraceEnabled()) { com.brein.time.timeintervals.collections.CassandraIntervalCollectionPersistor.LOGGER.trace((\"Creating key-space: \" + (this.keySpace)), e); }else if (com.brein.time.timeintervals.collections.CassandraIntervalCollectionPersistor.LOGGER.isInfoEnabled()) { com.brein.time.timeintervals.collections.CassandraIntervalCollectionPersistor.LOGGER.info((\"Creating key-space: \" + (this.keySpace))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/7716/buggy-version/src.com.brein.time.timeintervals.collections.CassandraIntervalCollectionPersistor.java", "BodyUseAPI": ["org.apache.log4j.Logger.isInfoEnabled()", "org.apache.log4j.Logger.trace(java.lang.String,com.datastax.driver.core.exceptions.InvalidQueryException)", "org.apache.log4j.Logger.info(java.lang.String)"], "Fixed commit": "420cd349986d1ed8e2f133b23d9c20f27867de00", "Url": "https://api.github.com/repos/Breinify/brein-time-utilities", "Date": "2017-04-03T20:16:51Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.brein.time.timeintervals.collections.IntervalCollectionEvent.getCollection()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (java.io.Serializable.class.isInstance(coll)) { out.writeObject(coll); }else { throw new com.brein.time.exceptions.IllegalConfiguration(\"The collection to be written is not serializable.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/7716/buggy-version/src.com.brein.time.timeintervals.collections.CassandraIntervalCollectionPersistor.java", "BodyUseAPI": ["java.io.ObjectOutputStream.writeObject(com.brein.time.timeintervals.collections.IntervalCollection)"], "Fixed commit": "420cd349986d1ed8e2f133b23d9c20f27867de00", "Url": "https://api.github.com/repos/Breinify/brein-time-utilities", "Date": "2017-04-03T20:16:51Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.hadoop.hbase.regionserver.compactions.DateTieredCompactionPolicy.partitionFilesToBuckets(java.lang.Iterable<org.apache.hadoop.hbase.regionserver.StoreFile>,comConf.getBaseWindowMillis(),comConf.getWindowsPerTier(),long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((buckets.size()) >= (storeConfigInfo.getBlockingFileCount())) { org.apache.hadoop.hbase.regionserver.compactions.DateTieredCompactionPolicy.LOG.warn((((((\"Number of compaction buckets:\" + (buckets.size())) + \", exceeds blocking file count setting: \") + (storeConfigInfo.getBlockingFileCount())) + \", either increase hbase.hstore.blockingStoreFiles or \") + \"reduce the number of tiered compaction windows\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/174/buggy-version/hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.compactions.DateTieredCompactionPolicy.java", "BodyUseAPI": ["org.apache.commons.logging.Log.warn((((((\"Number of compaction buckets:\" + (buckets.size())) + \", exceeds blocking file count setting: \") + (storeConfigInfo.getBlockingFileCount())) + \", either increase hbase.hstore.blockingStoreFiles or \") + \"reduce the number of tiered compaction windows\"))", "org.apache.hadoop.hbase.regionserver.compactions.DateTieredCompactionPolicy.getBlockingFileCount()", "java.util.List<java.util.ArrayList<org.apache.hadoop.hbase.regionserver.StoreFile>>.size()"], "Fixed commit": "bab8d1527b2d1a0d99095cee7e4191a9a7f57aea", "Url": "https://api.github.com/repos/Eshcar/hbase", "Date": "2016-03-02T02:17:43Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["nl.hsleiden.components.catalog.TwitterFeed.getConfiguration(org.hippoecm.hst.core.component.HstRequest)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((parametersInfo.getLimit()) != 0) { model.put(\"tweets\", getTweets(completeQuery, parametersInfo, request)); }else { request.setAttribute(WidgetConstants.WEB_MASTER_MESSAGE, \"webmaster.0.tweets.message\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/1816/buggy-version/site.src.main.java.nl.hsleiden.components.catalog.TwitterFeed.java", "BodyUseAPI": ["nl.hsleiden.components.catalog.TwitterFeed.getTweets(java.lang.String,nl.hsleiden.componentsinfo.TwitterFeedInfo,org.hippoecm.hst.core.component.HstRequest)", "java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,java.util.List<nl.hsleiden.beans.TweetStatus>)"], "Fixed commit": "9276c9e0b56fb1fcfa961111dd979c8ab3d6a8e0", "Url": "https://api.github.com/repos/HogeschoolLeiden/website", "Date": "2014-09-25T08:49:23Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasNoConsumers()) { return Ack.HALT; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/1689/buggy-version/src.main.java.com.orctom.rmq.Queue.java", "BodyUseAPI": [], "Fixed commit": "2cfb07017451e275377571be0b546606bacfde3d", "Url": "https://api.github.com/repos/orctom/rmq", "Date": "2017-01-05T11:58:22Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (localName.startsWith(\"h\")) { builder.append('\\n'); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/8421/buggy-version/src.main.java.fr.vinze.textanalysis.parser.impl.XHTMLParser.java", "BodyUseAPI": [], "Fixed commit": "d23fb1e0714e1205bd92b614c0b9281b925db1b9", "Url": "https://api.github.com/repos/vinzelec/textanalysis", "Date": "2014-10-19T16:52:01Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((clearfaun.com.pokebuspro.AddMarkers.marker) != null) { android.util.Log.i(\"AddMarkers\", (\" AddMarkers.marker() length\" + (clearfaun.com.pokebuspro.AddMarkers.marker.length))); for (com.google.android.gms.maps.model.Marker marker : clearfaun.com.pokebuspro.AddMarkers.marker) { if (marker.isInfoWindowShown()) { clearfaun.com.pokebuspro.AddMarkers.lastOpenSnippet = marker.getTitle(); android.util.Log.i(\"AddMarkers\", (\" lastOpenSnippet \" + (clearfaun.com.pokebuspro.AddMarkers.lastOpenSnippet))); break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/8512/buggy-version/app.src.main.java.clearfaun.com.pokebuspro.AddMarkers.java", "BodyUseAPI": [], "Fixed commit": "6ff5b14ffffaa0dfc884b0735466a71653e98d3d", "Url": "https://api.github.com/repos/SpencerDepas/PokeBusPro", "Date": "2015-04-06T00:16:06Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(lgraph.containsNode(edge.to.node))) { lgraph.addNode(edge.to.node, edge.to.getLayer()); populateLGraph(lgraph, edge.to); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/5461/buggy-version/src.main.java.de.jfschaefer.layeredgraphlayout.pgraph.PGraph.java", "BodyUseAPI": ["de.jfschaefer.layeredgraphlayout.pgraph.PGraph<V, E>.populateLGraph(de.jfschaefer.layeredgraphlayout.lgraph.LGraph<V, E>,edge.to)", "edge.to.getLayer()", "de.jfschaefer.layeredgraphlayout.lgraph.LGraph<V, E>.addNode(edge.to.node,edge.to.getLayer())"], "Fixed commit": "ebb6db4e0dfe60aac2737476265b5e572f5b3c77", "Url": "https://api.github.com/repos/jfschaefer/layeredgraphlayout", "Date": "2015-08-10T08:47:37Z"},
{"Line": "=>319", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.net.URI, java.lang.Object>.get(jdbcTableFieldValue.getJDBCTableFieldIdentifier())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (fieldNameObject != null) { fieldName = fieldNameObject.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/8878/buggy-version/bundles.wps.wps-client.src.main.java.org.orbisgis.wpsclient.impl.dataui.JDBCTableFieldValueUI.java", "BodyUseAPI": ["java.lang.Object.toString()"], "Fixed commit": "644e9c957f024fbffe8bc758af6cb9fcad626685", "Url": "https://api.github.com/repos/ebocher/orbisgis", "Date": "2017-01-12T10:45:09Z"},
{"Line": "=>400", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JList<org.orbisgis.sif.common.ContainerItem<java.lang.Object>>.getModel()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((model.getSize()) == 0) { model.addElement(defaultElement); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/8878/buggy-version/bundles.wps.wps-client.src.main.java.org.orbisgis.wpsclient.impl.dataui.JDBCTableFieldValueUI.java", "BodyUseAPI": ["javax.swing.DefaultListModel<org.orbisgis.sif.common.ContainerItem<java.lang.Object>>.addElement(org.orbisgis.sif.common.ContainerItem<java.lang.Object>)"], "Fixed commit": "644e9c957f024fbffe8bc758af6cb9fcad626685", "Url": "https://api.github.com/repos/ebocher/orbisgis", "Date": "2017-01-12T10:45:09Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getPageControl().getViewer().getInput()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (root == null) { return com.google.common.collect.FluentIterable.from(com.google.common.collect.ImmutableList.<org.eclipse.buildship.ui.view.execution.OperationItem>of()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/4535/buggy-version/org.eclipse.buildship.ui.src.main.java.org.eclipse.buildship.ui.view.execution.ExecutionPage.java", "BodyUseAPI": [], "Fixed commit": "35a9f765d940bef8767e4da6d4b1dcc0010a65fc", "Url": "https://api.github.com/repos/eclipse/buildship", "Date": "2016-03-22T00:44:10Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.IdentityHashMap<de.fau.cs.inf2.cas.common.bast.nodes.INode, de.fau.cs.inf2.cas.common.bast.nodes.INode>.get(pair.getOldElement())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (firstParent == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/2671/buggy-version/src.main.java.de.fau.cs.inf2.mtdiff.optimizations.LeafMoveMatcherThetaE.java", "BodyUseAPI": [], "Fixed commit": "f27dcf0d1a9a6a32b432874e5217e2fcc5427286", "Url": "https://api.github.com/repos/FAU-Inf2/ARES", "Date": "2017-09-26T05:48:26Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jetbrains.java.decompiler.modules.decompiler.exps.Exprent.getExprType()", "org.jetbrains.java.decompiler.modules.decompiler.exps.Exprent.getExprType()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((right.type) == (EXPRENT_CONST)) && ((leftType != rightType) && (rightType != (org.jetbrains.java.decompiler.struct.gen.VarType.VARTYPE_NULL)))) { ((org.jetbrains.java.decompiler.modules.decompiler.exps.ConstExprent) (right)).setConstType(leftType); rightType = right.getExprType(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/797/buggy-version/src.org.jetbrains.java.decompiler.modules.decompiler.exps.AssignmentExprent.java", "BodyUseAPI": ["org.jetbrains.java.decompiler.modules.decompiler.exps.Exprent.getExprType()", "org.jetbrains.java.decompiler.modules.decompiler.exps.Exprent.setConstType(org.jetbrains.java.decompiler.struct.gen.VarType)"], "Fixed commit": "59fab3616aa0a7a91b870c273b72e798b9938313", "Url": "https://api.github.com/repos/Jonatino/fernflower", "Date": "2016-01-28T06:20:27Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.canMoveTo(java.util.Map.coord(newPoint))) == true) { this.previous = new Point(this.current.v, this.current.h); this.current = newPoint; this.reprint(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/2037/buggy-version/Player.java", "BodyUseAPI": [], "Fixed commit": "66cc04d0077214aa4893a470f97cfba5b01dd8b4", "Url": "https://api.github.com/repos/aaronryank/j-rogue112", "Date": "2016-07-03T17:52:15Z"},
{"Line": "=>429", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((request.getRequestType()) != (async.chainreplication.client.server.communication.models.RequestType.QUERY)) { ACK(request); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/7920/buggy-version/Async-Server.src.main.java.async.chainreplication.server.ServerMessageHandler.java", "BodyUseAPI": ["async.chainreplication.server.ServerMessageHandler.ACK(async.chainreplication.client.server.communication.models.Request)"], "Fixed commit": "4ba02ed54c0740460cd8e7f62ca349d42c3f4331", "Url": "https://api.github.com/repos/santhoshkumarml/Async-Project", "Date": "2014-11-10T06:16:07Z"},
{"Line": "=>449", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((!(org.apache.commons.lang.StringUtils.isEmpty(link.relation))) && (!(org.apache.commons.lang.StringUtils.isEmpty(link.title)))) && (!(org.apache.commons.lang.StringUtils.isEmpty(link.href)))) { rt.add(org.odata4j.core.OLinks.relatedEntity(link.relation, link.title, link.href)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/1001/buggy-version/interaction-odata4j-ext.src.main.java.org.odata4j.format.xml.AtomFeedFormatParserExt.java", "BodyUseAPI": ["java.util.List<org.odata4j.core.OLink>.add(org.odata4j.core.OLinks.relatedEntity(link.relation, link.title, link.href))", "org.odata4j.core.OLinks.relatedEntity(link.relation,link.title,link.href)"], "Fixed commit": "16f293962328bf1f3a0f21fe19b4def13ac85486", "Url": "https://api.github.com/repos/iris-scrum-1/IRIS", "Date": "2016-07-03T20:16:16Z"},
{"Line": "=>595", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(bug instanceof jakemcdowell.blobsapplication.bugs.FireBug)) { bug.damageBug(game); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/8168/buggy-version/BlobsApplicationR.app.src.main.java.jakemcdowell.blobsapplication.GameActivity.java", "BodyUseAPI": ["jakemcdowell.blobsapplication.bugs.Bug.damageBug(jakemcdowell.blobsapplication.Game)"], "Fixed commit": "f258055bfb67c875aa3648b50b71f02db3f7f35e", "Url": "https://api.github.com/repos/KevinPaulsen/Blob-Game", "Date": "2017-08-11T20:58:27Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(mThread_saveInDatabase.isInterrupted())) mThread_saveInDatabase.interrupt();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/7502/buggy-version/app.src.main.java.com.recyclerviewsampleandroid.activities.MainActivity.java", "BodyUseAPI": ["java.lang.Thread.interrupt()"], "Fixed commit": "db135e3e31cec6b6fb98dfcf491381fbd4a2ee28", "Url": "https://api.github.com/repos/dhananjaym2/RecylerView-Sample-Android", "Date": "2016-01-18T14:51:03Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.lang.ASTNode.getElementType()", "com.intellij.lang.ASTNode.getElementType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((com.ansorgit.plugins.bash.lang.parser.BashParserDefinition.heredocTokens.contains(left)) || (com.ansorgit.plugins.bash.lang.parser.BashParserDefinition.heredocTokens.contains(right))) { return SpaceRequirements.MUST_NOT; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/3869/buggy-version/src.com.ansorgit.plugins.bash.lang.parser.BashParserDefinition.java", "BodyUseAPI": [], "Fixed commit": "c0788e727d0c70bef6ebef4335bda62b4accd4c6", "Url": "https://api.github.com/repos/jansorg/BashSupport", "Date": "2015-06-06T19:31:56Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (streamMappings == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/9158/buggy-version/components.execution-manager.org.wso2.carbon.event.execution.manager.admin.src.main.java.org.wso2.carbon.event.execution.manager.admin.internal.util.ConfigurationMapper.java", "BodyUseAPI": [], "Fixed commit": "8304bc40ceb1d8c1d30e976a2119961029984039", "Url": "https://api.github.com/repos/dilini-muthumala/carbon-analytics-common", "Date": "2016-05-25T07:56:01Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (error instanceof com.codeborne.selenide.ex.UIAssertionError) { return ((error.getCause()) != error) && (isInvalidSelectorError(error.getCause())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/2641/buggy-version/src.main.java.com.codeborne.selenide.impl.Cleanup.java", "BodyUseAPI": ["java.lang.Throwable.getCause()", "java.lang.Throwable.getCause()", "com.codeborne.selenide.impl.Cleanup.isInvalidSelectorError(java.lang.Throwable)"], "Fixed commit": "cc8ff5eac72817efeee44243226b0cf43c2fe0d0", "Url": "https://api.github.com/repos/codeborne/selenide", "Date": "2015-05-14T21:32:13Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.salesmanager.core.business.notification.EmailNotification.getEmailTemplates()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (emailTemplates != null) { for (com.salesmanager.core.business.notification.EmailTemplate desc : emailTemplates) { if (((desc.getLanguage()) != null) && (desc.getLanguage().getCode().equals(language.getCode()))) { emailTemplate = desc; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/149/buggy-version/sm-shop.src.main.java.com.salesmanager.web.admin.controller.notification.NotificationController.java", "BodyUseAPI": [], "Fixed commit": "cd118078fd98f184ad6c9613a0eaa018c65c1dec", "Url": "https://api.github.com/repos/asaad1982/laVetrina", "Date": "2016-04-09T11:25:17Z"},
{"Line": "=>398", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (val == null) { val = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/9142/buggy-version/src.main.java.com.adobe.ags.curly.controller.ActionRunner.java", "BodyUseAPI": [], "Fixed commit": "a8d8e1c868fa717422b6754d70f44d6e4035ac15", "Url": "https://api.github.com/repos/Adobe-Consulting-Services/curly", "Date": "2017-06-29T15:40:41Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(token.isEmpty())) { list.add(token); token = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/9142/buggy-version/src.main.java.com.adobe.ags.curly.controller.ActionRunner.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "a8d8e1c868fa717422b6754d70f44d6e4035ac15", "Url": "https://api.github.com/repos/Adobe-Consulting-Services/curly", "Date": "2017-06-29T15:40:41Z"},
{"Line": "=>365", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (val == null) { val = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/9142/buggy-version/src.main.java.com.adobe.ags.curly.controller.ActionRunner.java", "BodyUseAPI": [], "Fixed commit": "a8d8e1c868fa717422b6754d70f44d6e4035ac15", "Url": "https://api.github.com/repos/Adobe-Consulting-Services/curly", "Date": "2017-06-29T15:40:41Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasNext()) { return get(((index)++)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/682/buggy-version/C03.src.langheiter.GenerischesArrayExtended.java", "BodyUseAPI": [], "Fixed commit": "716d35578b169ff12535583c009ae7ab7cc5f24f", "Url": "https://api.github.com/repos/TheKingDave/SEW_17_18", "Date": "2017-11-07T08:51:13Z"},
{"Line": "=>351", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["chartArray[chartIndex].getChartRow(i).getRule()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((curRule.size()) > 1) { rValue = this.rMatrix.getTransitiveUnitRelation(curRule.getLHS(), curRule.getLeftmost()); rValue = (rValue != 0) ? rValue : 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/1465/buggy-version/StolckePen.src.ontopt.pen.EarleyParser.java", "BodyUseAPI": ["ontopt.pen.Rule.getLeftmost()", "ontopt.pen.TransitiveMatrix.getTransitiveUnitRelation(curRule.getLHS(),curRule.getLeftmost())", "ontopt.pen.Rule.getLHS()"], "Fixed commit": "ca9df2f7e5575679ef661d35d2cfd18d533b7825", "Url": "https://api.github.com/repos/dario-chiappetta/StolckePen", "Date": "2012-06-20T16:45:40Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((queryOptions.get(\"normalize\")) != null) && (queryOptions.get(\"normalize\").equals(\"true\"))) { variantAnnotationCalculator = new org.opencb.cellbase.core.variant.annotation.VariantAnnotationCalculator(this.species, this.assembly, dbAdaptorFactory2, true); }else { variantAnnotationCalculator = new org.opencb.cellbase.core.variant.annotation.VariantAnnotationCalculator(this.species, this.assembly, dbAdaptorFactory2, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/6568/buggy-version/cellbase-server.src.main.java.org.opencb.cellbase.server.ws.genomic.VariantWSServer.java", "BodyUseAPI": [], "Fixed commit": "c642bf34ac9d8cfdf3a922d924e191a8f568382d", "Url": "https://api.github.com/repos/opencb/cellbase", "Date": "2016-03-29T17:45:25Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((queryOptions.get(\"normalize\")) != null) && (queryOptions.get(\"normalize\").equals(\"true\"))) { variantAnnotationCalculator = new org.opencb.cellbase.core.variant.annotation.VariantAnnotationCalculator(this.species, this.assembly, dbAdaptorFactory2, true); }else { variantAnnotationCalculator = new org.opencb.cellbase.core.variant.annotation.VariantAnnotationCalculator(this.species, this.assembly, dbAdaptorFactory2, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/6568/buggy-version/cellbase-server.src.main.java.org.opencb.cellbase.server.ws.genomic.VariantWSServer.java", "BodyUseAPI": [], "Fixed commit": "c642bf34ac9d8cfdf3a922d924e191a8f568382d", "Url": "https://api.github.com/repos/opencb/cellbase", "Date": "2016-03-29T17:45:25Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(lst.get(i).getAttributeValue().isEmpty())) { queryBuilder.append(\" WHERE web_resources.resource_deleted = \"); queryBuilder.append(lst.get(i).getAttributeValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/7795/buggy-version/src.libSource.Database.QueryManager.java", "BodyUseAPI": ["libSource.Database.AttributeList.get(int)", "java.lang.StringBuilder.append(lst.get(i).getAttributeValue())", "lst.get(i).getAttributeValue()"], "Fixed commit": "0c5e5c808fe45c3bceb5e15afa8ee044fc3efd32", "Url": "https://api.github.com/repos/dayannn/LibraryProject", "Date": "2017-12-28T00:54:16Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(first instanceof java.lang.Number)) || (!(last instanceof java.lang.Number))) { throw new java.lang.IllegalArgumentException((((\"The range operator is only applicable to numbers. Got \" + first) + \" and \") + last)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/2827/buggy-version/core.codegen.codegen-runtime.src.main.java.org.overture.codegen.runtime.SetUtil.java", "BodyUseAPI": [], "Fixed commit": "649dc703c4200ead22be473ae77049f493734de6", "Url": "https://api.github.com/repos/overturetool/overture", "Date": "2015-12-10T21:34:58Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result == null) { throw new java.lang.RuntimeException(\"Couldn't instantiate any document properties from file!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/3276/buggy-version/src.main.java.org.redpill.alfresco.module.metadatawriter.services.poix.impl.POIXFacadeImpl.java", "BodyUseAPI": [], "Fixed commit": "30c6263f4547307e292f9dafbac0b37bc5a32e80", "Url": "https://api.github.com/repos/Redpill-Linpro/alfresco-metadata-writer", "Date": "2015-09-01T08:41:43Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_document) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/3276/buggy-version/src.main.java.org.redpill.alfresco.module.metadatawriter.services.poix.impl.POIXFacadeImpl.java", "BodyUseAPI": [], "Fixed commit": "30c6263f4547307e292f9dafbac0b37bc5a32e80", "Url": "https://api.github.com/repos/Redpill-Linpro/alfresco-metadata-writer", "Date": "2015-09-01T08:41:43Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_document) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/3276/buggy-version/src.main.java.org.redpill.alfresco.module.metadatawriter.services.poix.impl.POIXFacadeImpl.java", "BodyUseAPI": [], "Fixed commit": "30c6263f4547307e292f9dafbac0b37bc5a32e80", "Url": "https://api.github.com/repos/Redpill-Linpro/alfresco-metadata-writer", "Date": "2015-09-01T08:41:43Z"},
{"Line": "=>7602", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<K, V>.get(K)", "java.util.Map.Entry<K, V>.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((v1 instanceof java.util.Collection) && (v2 instanceof java.util.Collection)) { if (!(org.gridgain.grid.util.lang.GridFunc.eqNotOrdered(((java.util.Collection) (v1)), ((java.util.Collection) (v2))))) return false; }else { if ((v1 instanceof java.util.Map) && (v2 instanceof java.util.Map)) { if (!(org.gridgain.grid.util.lang.GridFunc.eqNotOrdered(((java.util.Map) (v1)), ((java.util.Map) (v2))))) return false; }else { if (!(org.gridgain.grid.util.lang.GridFunc.eq(v1, v2))) return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/649/buggy-version/modules.core.src.main.java.org.gridgain.grid.util.lang.GridFunc.java", "BodyUseAPI": ["org.gridgain.grid.util.lang.GridFunc.eq(V,V)"], "Fixed commit": "c4c65fbe6101e4556097bad1d7f9ede7be602cbb", "Url": "https://api.github.com/repos/gridgain/gridgain", "Date": "2014-10-03T09:15:02Z"},
{"Line": "=>7599", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<K, V>.getValue()", "java.util.Map<K, V>.get(K)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((v1 == null) || (v2 == null)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/649/buggy-version/modules.core.src.main.java.org.gridgain.grid.util.lang.GridFunc.java", "BodyUseAPI": [], "Fixed commit": "c4c65fbe6101e4556097bad1d7f9ede7be602cbb", "Url": "https://api.github.com/repos/gridgain/gridgain", "Date": "2014-10-03T09:15:02Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(token.hasMoreTokens())) { return \"error\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/2696/buggy-version/app.src.main.java.com.google.android.gms.samples.vision.barcodereader.urlManagement.ImageUrlUnpacker.java", "BodyUseAPI": [], "Fixed commit": "e88dc48f82b8db75afd1cc63b2e057760cfaddd9", "Url": "https://api.github.com/repos/GiulioPettenuzzo/barcode-reader", "Date": "2017-06-16T09:53:15Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pref.getLoginStatus()) { startActivity(new android.content.Intent(this, com.nith.appteam.hillffair17.Activities.HomescreenNew.class)); }else { startActivity(new android.content.Intent(this, com.nith.appteam.hillffair17.Activities.LoginActivity.class)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/8485/buggy-version/app.src.main.java.com.nith.appteam.hillffair17.Activities.SplashActivity.java", "BodyUseAPI": [], "Fixed commit": "a51c241d4134acb7336a18e7d2f3e6935c465305", "Url": "https://api.github.com/repos/appteam-nith/Hillffair17", "Date": "2017-10-26T23:23:39Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((location.getBlock().getType()) == (org.bukkit.Material.ENDER_CHEST)) { mat = org.bukkit.Material.REDSTONE_TORCH_ON; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/166/buggy-version/src.main.java.cz.GravelCZLP.ChestHider.AbstractChestHider.java", "BodyUseAPI": [], "Fixed commit": "9fb7043b698c92a58062b74577465219dd6f0d45", "Url": "https://api.github.com/repos/BreakpointCrew/TracerBlocker", "Date": "2017-02-15T19:09:09Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.grogshop.services.api.ProfileService.getAvatar(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((tmp != null) && ((tmp.length) > 0)) { org.grogshop.services.endpoints.impl.PublicShopUserProfileServiceImpl.log.info(\"avatar found\"); avatar = tmp; return javax.ws.rs.core.Response.ok().entity(new javax.ws.rs.core.StreamingOutput() { @java.lang.Override public void write(java.io.OutputStream output) throws java.io.IOException, javax.ws.rs.WebApplicationException { output.write(avatar); output.flush(); } }).build(); }else { try { return javax.ws.rs.core.Response.temporaryRedirect(new java.net.URI(\"../static/img/public-images/pets.jpg\")).build(); } catch (java.net.URISyntaxException ex) { java.util.logging.Logger.getLogger(org.grogshop.services.endpoints.impl.PublicShopUserProfileServiceImpl.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/8349/buggy-version/grogshop-services.src.main.java.org.grogshop.services.endpoints.impl.PublicShopUserProfileServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "65f149d6ff0378ffa131e813c3ffafd2815348bc", "Url": "https://api.github.com/repos/grogdj/grogshop", "Date": "2015-01-12T11:47:20Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((value) instanceof java.nio.ByteBuffer) { return ((A) (((java.nio.ByteBuffer) (value)).duplicate())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/3405/buggy-version/core.src.main.java.me.prettyprint.hector.api.beans.AbstractComposite.java", "BodyUseAPI": [], "Fixed commit": "ffab77eec4353e7faf5e954d0ac3486b45bd199d", "Url": "https://api.github.com/repos/rantav/hector", "Date": "2011-04-05T04:10:29Z"},
{"Line": "=>295", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ichi2.anki.Reviewer.getEditorCard()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (revCard == null) { finish(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/3965/buggy-version/src.com.ichi2.anki.CardEditor.java", "BodyUseAPI": [], "Fixed commit": "35b823f9b971a5f6b7b929fd2559e4b202640b1d", "Url": "https://api.github.com/repos/nobnago/Anki-Android", "Date": "2011-10-12T08:37:43Z"},
{"Line": "=>303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ichi2.anki.CardBrowser.getEditorCard()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (browCard == null) { finish(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/3965/buggy-version/src.com.ichi2.anki.CardEditor.java", "BodyUseAPI": [], "Fixed commit": "35b823f9b971a5f6b7b929fd2559e4b202640b1d", "Url": "https://api.github.com/repos/nobnago/Anki-Android", "Date": "2011-10-12T08:37:43Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((channel) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/1603/buggy-version/JazminServer.src.jazmin.server.rpc.RPCSession.java", "BodyUseAPI": [], "Fixed commit": "40084ff038d547a5d58c22047988287095cea045", "Url": "https://api.github.com/repos/guooscar/JazminServer", "Date": "2015-04-14T11:41:26Z"},
{"Line": "=>377", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((key_value.length) != 2) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/1191/buggy-version/src.main.java.com.tencent.qqlive.streaming.bolt.ComputeBolt.java", "BodyUseAPI": [], "Fixed commit": "891070912755d4b6ddc077a08902c78f5fd7832e", "Url": "https://api.github.com/repos/vinowan/streaming", "Date": "2013-07-08T03:24:38Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["vpnInstOp.get().getVpnToDpnList()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (dpnListInVpn != null) { for (org.opendaylight.yang.gen.v1.urn.opendaylight.netvirt.l3vpn.rev130911.vpn.instance.op.data.vpn.instance.op.data.entry.VpnToDpnList dpn : dpnListInVpn) { java.math.BigInteger dpnId = dpn.getDpnId(); long vpnId = org.opendaylight.netvirt.natservice.internal.NatUtil.readVpnId(dataBroker, vpnInstOp.get().getVrfId()); if (create) { installDefNATRouteInDPN(dpnId, vpnId); }else { removeDefNATRouteInDPN(dpnId, vpnId); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/8919/buggy-version/vpnservice.natservice.natservice-impl.src.main.java.org.opendaylight.netvirt.natservice.internal.ExternalNetworkListener.java", "BodyUseAPI": [], "Fixed commit": "634635d1d45e53f6dee5bc654ffbdd164d75873a", "Url": "https://api.github.com/repos/opendaylight/netvirt", "Date": "2016-09-12T21:39:04Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.lang.ASTNode.getElementType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (elementType == (consulo.csharp.lang.psi.CSharpTokens.LINE_COMMENT)) { return myCodeStyleSettings.KEEP_FIRST_COLUMN_COMMENT ? com.intellij.formatting.Indent.getAbsoluteNoneIndent() : com.intellij.formatting.Indent.getNormalIndent(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/6628/buggy-version/csharp-impl.src.consulo.csharp.lang.formatter.processors.CSharpIndentProcessor.java", "BodyUseAPI": [], "Fixed commit": "c58d85f71c95af57f7e1cb6bc919ec71429f90dd", "Url": "https://api.github.com/repos/consulo/consulo-csharp", "Date": "2016-11-27T17:35:10Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.mesos.scheduler.plan.DefaultStageManager.getPhaseId(org.apache.mesos.scheduler.plan.Block)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (phaseId != null) { return getPhaseStrategy(phaseId, block.getId()).hasDecisionPoint(block); }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/9122/buggy-version/src.main.java.org.apache.mesos.scheduler.plan.DefaultStageManager.java", "BodyUseAPI": ["org.apache.mesos.scheduler.plan.DefaultStageManager.getPhaseStrategy(java.util.UUID,block.getId())", "org.apache.mesos.scheduler.plan.PhaseStrategy.hasDecisionPoint(org.apache.mesos.scheduler.plan.Block)"], "Fixed commit": "1b295b64dc8db289dc0a30976534e40494024b7c", "Url": "https://api.github.com/repos/mesosphere/dcos-commons", "Date": "2016-06-16T23:02:26Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.parostroj.timetable.model.events.Event.getObject()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((currentTrain.getNextJoinedTrain()) != null) { currentTrain.setNextJoinedTrain(null); if ((currentTrain.getTimeAfter()) != 0) { currentTrain.setTimeAfter(0); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/330/buggy-version/grafikon-model.src.main.java.net.parostroj.timetable.model.validators.PreviousNextTrainValidator.java", "BodyUseAPI": ["net.parostroj.timetable.model.Train.setTimeAfter(int)", "net.parostroj.timetable.model.Train.getTimeAfter()", "net.parostroj.timetable.model.Train.setNextJoinedTrain(<nulltype>)"], "Fixed commit": "aa4ba093c3bcb9a0048a43a67b6bf55d3f045e58", "Url": "https://api.github.com/repos/jub77/grafikon", "Date": "2017-09-21T12:49:23Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(pl.infiniteshield.main.Prefs.getIsDelayingToSend(this))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/3420/buggy-version/app.src.main.java.pl.infiniteshield.main.IntentReceiver.java", "BodyUseAPI": [], "Fixed commit": "575b9a7c0a8ddc5223911d9d06c29a6feff540d8", "Url": "https://api.github.com/repos/karp157/CoCLauncher", "Date": "2015-01-09T12:16:49Z"},
{"Line": "=>441", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (parameter.getClass().isAssignableFrom(sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl.class)) { genericClasses.add(((java.lang.Class<?>) (((sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl) (parameter)).getGenericComponentType()))); }else { genericClasses.add(((java.lang.Class<?>) (parameter))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/4428/buggy-version/src.kundera-core.src.main.java.com.impetus.kundera.property.PropertyAccessorHelper.java", "BodyUseAPI": [], "Fixed commit": "c023973ec4d348e40da0a018276de5381c938e7a", "Url": "https://api.github.com/repos/impetus-opensource/Kundera", "Date": "2013-10-17T07:12:43Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.PreparedStatement.executeQuery()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(rs.isBeforeFirst())) { bestchildsimple.setInt(1, node.getId()); java.sql.ResultSet rs2 = bestchildsimple.executeQuery(); if (!(rs.isBeforeFirst())) return null; return new go.tree.db.DBGoTreeNode(rs2.getInt(1), this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/2264/buggy-version/src.main.java.go.tree.db.DBGoTree.java", "BodyUseAPI": ["java.sql.ResultSet.isBeforeFirst()"], "Fixed commit": "2a054ba0e162411344558cb6e8b43548a092ac3d", "Url": "https://api.github.com/repos/eukaryote31/go-project", "Date": "2017-02-14T01:25:30Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["weka.classifiers.functions.SMO.classifyInstance(ins.firstInstance())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (prediction == 1.0) { fireNotification(arg0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/7076/buggy-version/Seraphimdroid.src.org.owasp.seraphimdroid.receiver.ApplicationInstallReceiver.java", "BodyUseAPI": [], "Fixed commit": "08436bafa6318080fb6acfe812da7acc248192ee", "Url": "https://api.github.com/repos/nikolamilosevic86/owasp-seraphimdroid", "Date": "2015-09-14T18:07:31Z"},
{"Line": "=>444", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((u.getHitPoints()) == (u.getType().hp)) u.setHitPoints(new_type.hp);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/580/buggy-version/src.rts.GameState.java", "BodyUseAPI": ["rts.units.Unit.setHitPoints(new_type.hp)"], "Fixed commit": "9d7ead9d59b358db57bf4dcca13413947541ac64", "Url": "https://api.github.com/repos/santiontanon/microrts", "Date": "2017-02-17T16:30:31Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (status == 3) { java.lang.System.out.print(\"This room is empty, keep going: \"); }else { java.lang.System.out.print(\"Can not go there! Try again: \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/4863/buggy-version/src.edu.cpp.cs.cs141.finalProject.UI.java", "BodyUseAPI": [], "Fixed commit": "7ec6f479e1943522c6ca65b46094893d330511cd", "Url": "https://api.github.com/repos/hammerhead399/GRE4KA", "Date": "2015-11-12T02:16:59Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jeff.tianti.cms.service.ColumnInfoService.queryColumnInfoList(com.jeff.tianti.cms.dto.ColumnInfoQueryDTO)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((leafColumnInfoList != null) && ((leafColumnInfoList.size()) > 0)) { for (com.jeff.tianti.cms.entity.ColumnInfo c : leafColumnInfoList) { c.setDeleteFlag(ColumnInfo.DELETE_FLAG_DELETED); this.columnInfoService.update(c); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/6796/buggy-version/tianti-modules.tianti-module-admin.src.main.java.com.jeff.tianti.controller.CmsController.java", "BodyUseAPI": [], "Fixed commit": "9952601bf7eedc4259791798c6cb104bd6d5b54c", "Url": "https://api.github.com/repos/xujeff/tianti", "Date": "2017-12-02T09:42:11Z"},
{"Line": "=>365", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Vector<eu.pryds.ve.TranslatableString>.clone()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((strToWrite.get(i).getUntranslatedString().equals(\"\")) && (strToWrite.get(i).getUntranslatedStringPlural().equals(\"\"))) eu.pryds.ve.TranslatableStringCollection.writeMultilinesTo(outputLines, \"msgid \", \"\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/388/buggy-version/src.eu.pryds.ve.TranslatableStringCollection.java", "BodyUseAPI": [], "Fixed commit": "1db2cef4f77f0384531666a07fe109abc1c84c62", "Url": "https://api.github.com/repos/pryds/ve", "Date": "2014-01-15T13:08:54Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((request.isActive()) && (request.getPos().equals(super.getPos()))) { request.deliveryFulfilled(); return false; }else { request.deliveryAborted(); request = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/2760/buggy-version/jsettlers.logic.src.jsettlers.logic.movable.strategies.BearerMovableStrategy.java", "BodyUseAPI": ["jsettlers.logic.map.grid.partition.manager.materials.interfaces.IMaterialRequest.deliveryAborted()", "jsettlers.logic.map.grid.partition.manager.materials.interfaces.IMaterialRequest.deliveryFulfilled()"], "Fixed commit": "a3a07bfcf873183d93d5f6ad7825dda0f95dfa79", "Url": "https://api.github.com/repos/andreas-eberle/settlers-remake", "Date": "2016-03-15T10:55:08Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.context.afterLimit) { this.context.limitPrecedesAggr = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/2544/buggy-version/query.src.main.java.org.apache.kylin.query.relnode.OLAPAggregateRel.java", "BodyUseAPI": [], "Fixed commit": "4232e0dac801eacf60b08b3f22e383787be54d51", "Url": "https://api.github.com/repos/apache/kylin", "Date": "2016-12-16T08:53:33Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["engine.gameData.TileData.getTileNameIds()", "engine.save.SaveData.unserializeStringArray(devTiles.getData())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(java.util.Arrays.equals(tilesFrom, tilesTo))) { if (engine.gameData.VersionMigration.convertArray(tiles, tilesFrom, tilesTo)) { java.lang.System.out.println((\"Migrated level tile data from devTiles on \" + (level.maps.Level.getIslandString(island.x, island.y, dimension)))); }else { java.lang.System.err.println((\"Failed to migrate level tile data from devTiles on \" + (level.maps.Level.getIslandString(island.x, island.y, dimension)))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/9187/buggy-version/src.engine.save.LevelSave.java", "BodyUseAPI": ["engine.gameData.VersionMigration.convertArray(int[],java.lang.String[],java.lang.String[])"], "Fixed commit": "850b7119fdbf14bc42f63c8e5eac27b46b6110d3", "Url": "https://api.github.com/repos/DrFair/Game", "Date": "2017-12-04T15:20:44Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["engine.gameData.ObjectData.getObjectNameIds()", "engine.save.SaveData.unserializeStringArray(devObjects.getData())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(java.util.Arrays.equals(objectsFrom, objectsTo))) { if (engine.gameData.VersionMigration.convertArray(objects, objectsFrom, objectsTo)) { java.lang.System.out.println((\"Migrated level object data from devObjects on \" + (level.maps.Level.getIslandString(island.x, island.y, dimension)))); }else { java.lang.System.err.println((\"Failed to migrate level object data from devObjects on \" + (level.maps.Level.getIslandString(island.x, island.y, dimension)))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/9187/buggy-version/src.engine.save.LevelSave.java", "BodyUseAPI": ["engine.gameData.VersionMigration.convertArray(int[],java.lang.String[],java.lang.String[])"], "Fixed commit": "850b7119fdbf14bc42f63c8e5eac27b46b6110d3", "Url": "https://api.github.com/repos/DrFair/Game", "Date": "2017-12-04T15:20:44Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tweet.getContent()) == null) { throw new com.twitter.service.TweetCreateException(com.twitter.util.MessageUtil.TWEET_NOT_FOUND_ERROR); }else if (!(isTweetLengthInBounds(tweet.getContent().length()))) { throw new com.twitter.service.TweetCreateException(com.twitter.util.MessageUtil.TWEET_LENGTH_ERROR); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/7037/buggy-version/src.main.java.com.twitter.service.TweetServiceImpl.java", "BodyUseAPI": ["tweet.getContent().length()", "com.twitter.model.Tweet.getContent()", "com.twitter.service.TweetServiceImpl.isTweetLengthInBounds(tweet.getContent().length())"], "Fixed commit": "c67c505486f87052a8143bb97002cc9de4bc2f4c", "Url": "https://api.github.com/repos/m4riusz/TwitterClone", "Date": "2016-04-26T19:19:29Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wso2.carbon.ndatasource.rdbms.RDBMSDataSourceReader.loadConfig(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((rdbmsConfiguration.getUsername()) != null) { connection = java.sql.DriverManager.getConnection(rdbmsConfiguration.getUrl(), rdbmsConfiguration.getUsername(), rdbmsConfiguration.getPassword()); }else { connection = java.sql.DriverManager.getConnection(rdbmsConfiguration.getUrl()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/8914/buggy-version/core.org.wso2.carbon.ndatasource.rdbms.src.main.java.org.wso2.carbon.ndatasource.rdbms.RDBMSDataSourceReader.java", "BodyUseAPI": ["org.wso2.carbon.ndatasource.rdbms.RDBMSConfiguration.getUsername()", "org.wso2.carbon.ndatasource.rdbms.RDBMSConfiguration.getPassword()", "java.sql.DriverManager.getConnection(rdbmsConfiguration.getUrl())", "org.wso2.carbon.ndatasource.rdbms.RDBMSConfiguration.getUrl()", "org.wso2.carbon.ndatasource.rdbms.RDBMSConfiguration.getUrl()", "java.sql.DriverManager.getConnection(rdbmsConfiguration.getUrl(),rdbmsConfiguration.getUsername(),rdbmsConfiguration.getPassword())"], "Fixed commit": "569c3c11e38fd5ff8bc6c976a7e2e256da9ad686", "Url": "https://api.github.com/repos/wso2/carbon-kernel", "Date": "2015-09-29T19:06:34Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (connection != null) { try { connection.close(); } catch (java.sql.SQLException e) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/8914/buggy-version/core.org.wso2.carbon.ndatasource.rdbms.src.main.java.org.wso2.carbon.ndatasource.rdbms.RDBMSDataSourceReader.java", "BodyUseAPI": ["java.sql.Connection.close()"], "Fixed commit": "569c3c11e38fd5ff8bc6c976a7e2e256da9ad686", "Url": "https://api.github.com/repos/wso2/carbon-kernel", "Date": "2015-09-29T19:06:34Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getSession()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((boolean) (session.getAttribute(\"ProjectLeader\"))) != null) { isPL = ((boolean) (session.getAttribute(\"ProjectLeader\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/1358/buggy-version/src.base.servletBase.java", "BodyUseAPI": ["javax.servlet.http.HttpSession.getAttribute(java.lang.String)"], "Fixed commit": "145f390045f1d488c7af817bd4cbc3a61e000d63", "Url": "https://api.github.com/repos/ETSF20-Group2/E-KYSS", "Date": "2017-03-18T10:35:38Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getSession()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((java.lang.String) (session.getAttribute(\"user\"))) != null) { username = ((java.lang.String) (session.getAttribute(\"user\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/1358/buggy-version/src.base.servletBase.java", "BodyUseAPI": ["javax.servlet.http.HttpSession.getAttribute(java.lang.String)"], "Fixed commit": "145f390045f1d488c7af817bd4cbc3a61e000d63", "Url": "https://api.github.com/repos/ETSF20-Group2/E-KYSS", "Date": "2017-03-18T10:35:38Z"},
{"Line": "=>2025", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isContainsInTypeAnnotation(localDeclaration.type.resolvedType, a)) { a.traverse(this, scope); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/4297/buggy-version/src.main.java.spoon.support.compiler.jdt.JDTTreeBuilder.java", "BodyUseAPI": ["org.eclipse.jdt.internal.compiler.ast.Annotation.traverse(spoon.support.compiler.jdt.JDTTreeBuilder,org.eclipse.jdt.internal.compiler.lookup.BlockScope)"], "Fixed commit": "81b5ae717b34aece320203718c51b60a3ebc216f", "Url": "https://api.github.com/repos/INRIA/spoon", "Date": "2015-02-17T14:42:39Z"},
{"Line": "=>2149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isContainsInTypeAnnotation(methodDeclaration.returnType.resolvedType, a)) { a.traverse(this, methodDeclaration.scope); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/4297/buggy-version/src.main.java.spoon.support.compiler.jdt.JDTTreeBuilder.java", "BodyUseAPI": ["org.eclipse.jdt.internal.compiler.ast.Annotation.traverse(spoon.support.compiler.jdt.JDTTreeBuilder,methodDeclaration.scope)"], "Fixed commit": "81b5ae717b34aece320203718c51b60a3ebc216f", "Url": "https://api.github.com/repos/INRIA/spoon", "Date": "2015-02-17T14:42:39Z"},
{"Line": "=>1549", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isContainsInTypeAnnotation(argument.type.resolvedType, a)) { a.traverse(this, scope); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/4297/buggy-version/src.main.java.spoon.support.compiler.jdt.JDTTreeBuilder.java", "BodyUseAPI": ["org.eclipse.jdt.internal.compiler.ast.Annotation.traverse(spoon.support.compiler.jdt.JDTTreeBuilder,org.eclipse.jdt.internal.compiler.lookup.BlockScope)"], "Fixed commit": "81b5ae717b34aece320203718c51b60a3ebc216f", "Url": "https://api.github.com/repos/INRIA/spoon", "Date": "2015-02-17T14:42:39Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["modkiwi.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (username == null) req.setAttribute(\"usernames\", java.util.Collections.emptyList()); else req.setAttribute(\"usernames\", java.util.Collections.singletonList(username));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/7306/buggy-version/src.main.java.modkiwi.ThreadServlet.java", "BodyUseAPI": ["modkiwi.HttpServletRequest.setAttribute(java.lang.String,java.util.List<java.lang.String>)", "java.util.Collections.singletonList(java.lang.String)"], "Fixed commit": "151478fdd7d87c7a95bca0949ba2df05116c8d75", "Url": "https://api.github.com/repos/ardnaxelarak/mod-kiwi", "Date": "2015-10-05T18:15:05Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jenkins.model.Jenkins.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (jenkins != null) { return jenkins.getDescriptor(getClass()); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/5607/buggy-version/src.main.java.com.microsoft.jenkins.vmss.ImageReference.java", "BodyUseAPI": ["jenkins.model.Jenkins.getDescriptor(java.lang.Class<? extends com.microsoft.jenkins.vmss.ImageReference>)"], "Fixed commit": "6212fa54921af1f349fca25c7644a53504a215b3", "Url": "https://api.github.com/repos/ArchangelSDY/azure-vmss-plugin", "Date": "2017-11-06T03:19:26Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fields.isEmpty()) throw new org.araqne.logdb.QueryParseException(\"missing-stats-function\", (-1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/8318/buggy-version/araqne-logdb.src.main.java.org.araqne.logdb.query.parser.StatsParser.java", "BodyUseAPI": [], "Fixed commit": "f300b0b8d9bee20e22e81d224b12947b4f313177", "Url": "https://api.github.com/repos/araqne/logdb", "Date": "2014-05-25T12:21:03Z"},
{"Line": "=>452", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((scrollState) == (SCROLL_STATE_IDLE)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/5225/buggy-version/panellistlibrary.src.main.java.sysu.zyb.panellistlibrary.PanelListAdapter.java", "BodyUseAPI": [], "Fixed commit": "878f57cc8c98a29a138d9b7cdc2a2520a0436060", "Url": "https://api.github.com/repos/z3896823/PanelList", "Date": "2017-09-08T13:06:21Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.wolvencraft.prison.updater.Updater.data.get(plugin.getName())) == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/1901/buggy-version/src.com.wolvencraft.prison.updater.Updater.java", "BodyUseAPI": [], "Fixed commit": "3908bec154ec108866fb33b1d96e8631e0322dbb", "Url": "https://api.github.com/repos/bitWolfy/PrisonSuite", "Date": "2012-11-26T15:31:03Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.modelexecution.xmof.Syntax.Activities.IntermediateActivities.ActivityNode.getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (name == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/4907/buggy-version/org.modelexecution.xmof.animation.src.org.modelexecution.xmof.animation.decorator.handler.ActivityElementDecorator.java", "BodyUseAPI": [], "Fixed commit": "471a204f46362f18fa4be51fc9c7bd7b33699c5a", "Url": "https://api.github.com/repos/tortmayr/ame_lab", "Date": "2016-05-04T20:25:03Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (action == (me.iwf.photopicker.widget.MultiPickResultView.ACTION_ONLY_SHOW)) { recyclerView.setLayoutManager(new android.support.v7.widget.StaggeredGridLayoutManager(3, android.support.v7.widget.OrientationHelper.VERTICAL)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/4206/buggy-version/PhotoPicker.src.main.java.me.iwf.photopicker.widget.MultiPickResultView.java", "BodyUseAPI": [], "Fixed commit": "41c4e9f8b7274e2ee6f82b34d5dfc84c59744214", "Url": "https://api.github.com/repos/glassLake/PhotoPicker", "Date": "2016-09-06T09:11:38Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((pagerFragment.getPaths().size()) > 0) { pagerFragment.getPaths().remove(position); pagerFragment.getViewPager().getAdapter().notifyDataSetChanged(); if ((pagerFragment.getPaths().size()) == 0) { titlebar.setTitle((((getString(R.string.__picker_preview)) + \" \") + (getString(R.string.__picker_image_index, 0, pagerFragment.getPaths().size())))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/4206/buggy-version/PhotoPicker.src.main.java.me.iwf.photopicker.PhotoPagerActivity.java", "BodyUseAPI": ["pagerFragment.getPaths().size()", "pagerFragment.getPaths().remove(int)", "me.iwf.photopicker.fragment.ImagePagerFragment.getPaths()", "me.iwf.photopicker.fragment.ImagePagerFragment.getPaths()", "me.iwf.photopicker.fragment.ImagePagerFragment.getPaths()", "pagerFragment.getViewPager().getAdapter()", "me.iwf.photopicker.fragment.ImagePagerFragment.getViewPager()", "me.iwf.photopicker.widget.Titlebar.setTitle((((getString(R.string.__picker_preview)) + \" \") + (getString(R.string.__picker_image_index, 0, pagerFragment.getPaths().size()))))", "me.iwf.photopicker.PhotoPagerActivity.1.getString(R.string.__picker_image_index,int,pagerFragment.getPaths().size())", "pagerFragment.getViewPager().getAdapter().notifyDataSetChanged()", "pagerFragment.getPaths().size()"], "Fixed commit": "41c4e9f8b7274e2ee6f82b34d5dfc84c59744214", "Url": "https://api.github.com/repos/glassLake/PhotoPicker", "Date": "2016-09-06T09:11:38Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((value) != null) { captor.match(capture); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/1479/buggy-version/rut.src.main.java.io.norberg.rut.RadixTrie.java", "BodyUseAPI": [], "Fixed commit": "fef93f08951b86bf157a4c7f59ce2e2075a39798", "Url": "https://api.github.com/repos/danielnorberg/rut", "Date": "2015-04-20T09:13:49Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(_includeHidden)) && (value.isHidden())) { return \"Hidden files not allowed\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/2154/buggy-version/src.main.java.uk.co.nickthecoder.jguifier.parameter.FileParameter.java", "BodyUseAPI": [], "Fixed commit": "fac067fdb925f582f78954ee143129345402fea4", "Url": "https://api.github.com/repos/nickthecoder/jguifier", "Date": "2017-03-20T14:42:21Z"},
{"Line": "=>1698", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (chunkSize == 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/3310/buggy-version/src.main.java.com.jajja.jorm.Transaction.java", "BodyUseAPI": [], "Fixed commit": "1c240f29c7b3669ba60ed59f73830c1378bcc48d", "Url": "https://api.github.com/repos/jajja/jorm", "Date": "2017-10-25T07:04:56Z"},
{"Line": "=>2127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (chunkSize == 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/3310/buggy-version/src.main.java.com.jajja.jorm.Transaction.java", "BodyUseAPI": [], "Fixed commit": "1c240f29c7b3669ba60ed59f73830c1378bcc48d", "Url": "https://api.github.com/repos/jajja/jorm", "Date": "2017-10-25T07:04:56Z"},
{"Line": "=>1938", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (chunkSize == 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/3310/buggy-version/src.main.java.com.jajja.jorm.Transaction.java", "BodyUseAPI": [], "Fixed commit": "1c240f29c7b3669ba60ed59f73830c1378bcc48d", "Url": "https://api.github.com/repos/jajja/jorm", "Date": "2017-10-25T07:04:56Z"},
{"Line": "=>328", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.redhat.ceylon.eclipse.code.editor.Navigation.getNodePath(com.redhat.ceylon.compiler.typechecker.tree.Node,epc.getProject(),epc.getTypeChecker())", "com.redhat.ceylon.eclipse.code.editor.CeylonEditor.getParseController()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (epc.getProject().getLocation().isPrefixOf(path)) { path = path.makeRelativeTo(epc.getProject().getLocation()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/5937/buggy-version/plugins.com.redhat.ceylon.eclipse.ui.src.com.redhat.ceylon.eclipse.code.editor.PeekDefinitionPopup.java", "BodyUseAPI": ["epc.getProject().getLocation()", "org.eclipse.core.runtime.IPath.makeRelativeTo(epc.getProject().getLocation())", "com.redhat.ceylon.eclipse.code.parse.CeylonParseController.getProject()"], "Fixed commit": "a9a81ff755d4e5b533e520a4a43f6b835e417801", "Url": "https://api.github.com/repos/ceylon/ceylon-ide-eclipse", "Date": "2014-03-13T18:46:45Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (mode.equals(MainView.ADD)) setView(new passwordgenerator.view.AddView(this.passwords, this)); else if (mode.equals(MainView.ADD_OWN)) setView(new passwordgenerator.view.AddOwnView(this.passwords, this));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/3724/buggy-version/password-manager.src.passwordgenerator.controller.AddPController.java", "BodyUseAPI": [], "Fixed commit": "af923e0387a7394881fe6016a9f303a13bd87832", "Url": "https://api.github.com/repos/BMamba2942/password-manager", "Date": "2015-04-06T00:26:02Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.geek.geeksearch.queryer.QueryProcessor.doQuery(java.lang.String,org.geek.geeksearch.queryer.Response.VarInteger)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((resultList == null) || (resultList.isEmpty())) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/9075/buggy-version/GeekSearch.src.org.geek.geeksearch.queryer.Response.java", "BodyUseAPI": [], "Fixed commit": "5116e5cd343dd1aaca4f2531fff9298d1cd93970", "Url": "https://api.github.com/repos/lyjalxx/Geeking", "Date": "2014-12-01T15:57:49Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (java.util.Objects.equals(thread.getSlug(), thread.getForum())) { thread.setSlug(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/1529/buggy-version/src.main.java.db_project.controllers.ForumController.java", "BodyUseAPI": ["db_project.models.ThreadModel.setSlug(<nulltype>)"], "Fixed commit": "dbada3bd4975b1afa8eee35368bfaa45a3e097cc", "Url": "https://api.github.com/repos/lieroz/Park_DB_API_Project", "Date": "2017-03-02T01:39:16Z"},
{"Line": "=>338", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(inBackground)) { java.lang.Thread.currentThread().interrupt(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/7753/buggy-version/modules.LongTaskAPI.src.main.java.org.gephi.utils.longtask.api.LongTaskExecutor.java", "BodyUseAPI": [], "Fixed commit": "c5ec6fee8c702405d9cec8e3042ba080209f7cec", "Url": "https://api.github.com/repos/gephi/gephi", "Date": "2016-02-14T11:56:00Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang.StringUtils.isNotBlank(tenant)) { tenantId = uri(tenant); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/6538/buggy-version/vipr-portal.portal.app.controllers.compute.VCenters.java", "BodyUseAPI": ["controllers.compute.VCenters.uri(java.lang.String)"], "Fixed commit": "8983a33a63e72c6a2028868ef2755b5ccc9c5b5b", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2015-09-09T21:08:25Z"},
{"Line": "=>538", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((updateParam.getTenant()) == null) { updateParam.setTenant(dataCenter.getTenant()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/6538/buggy-version/apisvc.src.main.java.com.emc.storageos.api.service.impl.resource.VcenterDataCenterService.java", "BodyUseAPI": ["com.emc.storageos.model.host.vcenter.VcenterDataCenterUpdate.setTenant(dataCenter.getTenant())"], "Fixed commit": "8983a33a63e72c6a2028868ef2755b5ccc9c5b5b", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2015-09-09T21:08:25Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (calendar == null) return jsonObject;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/6325/buggy-version/portlets.calendar-portlet.docroot.WEB-INF.src.com.liferay.calendar.util.CalendarUtil.java", "BodyUseAPI": [], "Fixed commit": "c5780d22bfc19b59f471ec99e80bafd2dcdfe9d7", "Url": "https://api.github.com/repos/dpino/liferay-plugins", "Date": "2012-08-27T18:40:50Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (source.hasTop()) { key = source.getTopKey(); }else { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/6091/buggy-version/extensions.datastores.accumulo.src.main.java.mil.nga.giat.geowave.datastore.accumulo.query.QueryFilterIterator.java", "BodyUseAPI": ["org.apache.accumulo.core.iterators.SortedKeyValueIterator<org.apache.accumulo.core.data.Key, org.apache.accumulo.core.data.Value>.getTopKey()"], "Fixed commit": "8b1dae5ac662480ce05fe6a2a9e82b0456f7026f", "Url": "https://api.github.com/repos/locationtech/geowave", "Date": "2016-07-09T02:35:30Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((privateSsChannel) != null) { privateSsChannel.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/867/buggy-version/src.main.java.aphelion.server.AphelionServerThread.java", "BodyUseAPI": [], "Fixed commit": "9f3b36830a58c8264bfacf66221a0346750ec347", "Url": "https://api.github.com/repos/Periapsis/aphelion", "Date": "2013-09-28T17:25:14Z"},
{"Line": "=>433", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == (reconnectFuture)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/8513/buggy-version/src.main.java.bacnet.BacnetConn.java", "BodyUseAPI": [], "Fixed commit": "bbfe5e234f40375324e7de61f9f7b1b2780fbd2e", "Url": "https://api.github.com/repos/IOT-DSA/dslink-java-bacnet", "Date": "2017-02-22T23:23:20Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sonar.php.checks.UnusedLocalVariableCheck.getVariableNode(com.sonar.sslr.api.AstNode)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (variable == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/3104/buggy-version/php-checks.src.main.java.org.sonar.php.checks.UnusedLocalVariableCheck.java", "BodyUseAPI": [], "Fixed commit": "7c5020b0f2ad35e3a2ecd0790d3db5fa6401db42", "Url": "https://api.github.com/repos/sanyatuning/sonar-php", "Date": "2015-02-10T21:58:48Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == 0) { com.raildeliveryservices.burnrubber.utils.Utils.addNewMessageCount(this, com.raildeliveryservices.burnrubber.utils.Utils.getDriverNo(this), true, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/439/buggy-version/BurnRubber.src.com.raildeliveryservices.burnrubber.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "e5da14b7cf566ae66df0f9176529832de56732a2", "Url": "https://api.github.com/repos/kevdez/BurnRubber", "Date": "2015-04-29T20:28:37Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.delete()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (deleted) { log((\"Deleted directory \" + (outputDir))); }else { throw new aQute.bnd.ant.BuildException(((\"Output directory '\" + (outputDir)) + \"' could not be deleted\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/5877/buggy-version/biz.aQute.bnd.src.aQute.bnd.ant.RunconfigToDistributionTask.java", "BodyUseAPI": [], "Fixed commit": "b10b275d2b04d968dc1127cc99cfff1f9f1bdaec", "Url": "https://api.github.com/repos/bndtools/bnd", "Date": "2013-03-27T19:48:17Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.mkdir()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (created) { log((\"Created directory \" + (outputDir))); }else { throw new aQute.bnd.ant.BuildException(((\"Output directory '\" + (outputDir)) + \"' could not be created\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/5877/buggy-version/biz.aQute.bnd.src.aQute.bnd.ant.RunconfigToDistributionTask.java", "BodyUseAPI": [], "Fixed commit": "b10b275d2b04d968dc1127cc99cfff1f9f1bdaec", "Url": "https://api.github.com/repos/bndtools/bnd", "Date": "2013-03-27T19:48:17Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.buschmais.jqassistant.core.scanner.api.Scanner.scan(com.buschmais.jqassistant.plugin.common.api.scanner.FileSystemResource,java.lang.String,com.buschmais.jqassistant.core.scanner.api.Scope)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (fileDescriptor != null) { fileDescriptor.setFileName(path); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/6308/buggy-version/plugin.common.src.main.java.com.buschmais.jqassistant.plugin.common.impl.scanner.FileScannerPlugin.java", "BodyUseAPI": ["com.buschmais.jqassistant.core.store.api.type.FileDescriptor.setFileName(java.lang.String)"], "Fixed commit": "31c2d2d194bfbec110f78b19f0fb4acd2aa9cb5f", "Url": "https://api.github.com/repos/aparnachaudhary/jqassistant", "Date": "2014-08-05T20:11:30Z"},
{"Line": "=>386", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!isNaN) good++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/3282/buggy-version/h2o-core.src.main.java.hex.Model.java", "BodyUseAPI": [], "Fixed commit": "c4f76e744911856eb03956ba6d3b90bc1017d335", "Url": "https://api.github.com/repos/h2oai/h2o-3", "Date": "2015-03-16T20:11:21Z"},
{"Line": "=>391", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!isNaN) good++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/3282/buggy-version/h2o-core.src.main.java.hex.Model.java", "BodyUseAPI": [], "Fixed commit": "c4f76e744911856eb03956ba6d3b90bc1017d335", "Url": "https://api.github.com/repos/h2oai/h2o-3", "Date": "2015-03-16T20:11:21Z"},
{"Line": "=>422", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.mycat.buffer.BufferPool.capacity()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (bufferCapacity == 0L) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/7711/buggy-version/src.main.java.io.mycat.MycatServer.java", "BodyUseAPI": [], "Fixed commit": "d9b14631d8d5fc98eb891a600c6f21949e3f8597", "Url": "https://api.github.com/repos/cloud-dev/Mycat-Server", "Date": "2016-06-24T07:14:58Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((journal) != null) tags_tmp = journal.getTags();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/3046/buggy-version/app.src.main.java.com.example.jingyuan.footprints.JournalEditorActivity.java", "BodyUseAPI": [], "Fixed commit": "76aac271e453d1134c7c53c0b130e131ed09b50d", "Url": "https://api.github.com/repos/marlonli/Android-Footprints", "Date": "2017-12-16T22:43:44Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((session) != null) { session.lastBookmark(bookmark); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/3525/buggy-version/core.src.main.java.org.neo4j.ogm.session.transaction.DefaultTransactionManager.java", "BodyUseAPI": [], "Fixed commit": "53c89c4ea614fbf0c7a52dc4a1fcbe390c1e2ef3", "Url": "https://api.github.com/repos/neo4j/neo4j-ogm", "Date": "2016-12-06T02:05:09Z"},
{"Line": "=>441", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getJSONArray(ru.velkonost.lume.Constants.IDS)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(ids.contains(idsJSON.getString(i)))) ids.add(idsJSON.getString(i));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/7180/buggy-version/app.src.main.java.ru.velkonost.lume.activity.DialogsActivity.java", "BodyUseAPI": ["org.json.JSONArray.getString(int)", "java.util.ArrayList<java.lang.String>.add(idsJSON.getString(i))"], "Fixed commit": "319075d04e467a3e4918af009dd6fb66f1fa592a", "Url": "https://api.github.com/repos/Velkonost/Lume", "Date": "2016-12-16T12:22:46Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["afrisone.liftingbuddy.SetGoalsActivity.findViewById(R.id.user_entered_calories)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(checkMissingFieldError(customCalories))) { totalDailyCalories = 0; customCaloriesIsFilledIn = false; }else { totalDailyCalories = java.lang.Integer.parseInt(customCalories.getText().toString()); customCaloriesIsFilledIn = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/7396/buggy-version/app.src.main.java.afrisone.liftingbuddy.SetGoalsActivity.java", "BodyUseAPI": ["java.lang.Integer.parseInt(customCalories.getText().toString())", "customCalories.getText().toString()", "android.widget.EditText.getText()"], "Fixed commit": "3bed710587da52143a32efdcc11f33fa08cf602e", "Url": "https://api.github.com/repos/afrisone/LiftingBuddy", "Date": "2015-08-05T03:59:21Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) != null) { com.hbbsolution.maid.utils.ShowAlertDialog.showAlert(getResources().getString(R.string.connection_error), getActivity()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/7394/buggy-version/app.src.main.java.com.hbbsolution.maid.workmanager.listworkmanager.view.JobPostedFragment.java", "BodyUseAPI": [], "Fixed commit": "5e45697152ed2c66d782bf1e994a24f639a6e898", "Url": "https://api.github.com/repos/thanhduy26091995/Maid", "Date": "2017-07-26T02:29:38Z"},
{"Line": "=>1005", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/3451/buggy-version/org.postgresql.ds.common.BaseDataSource.java", "BodyUseAPI": [], "Fixed commit": "52a8d9147aa8ffc41dea18a0dcf70fda9dad2c9d", "Url": "https://api.github.com/repos/pgjdbc/pgjdbc", "Date": "2015-02-18T15:59:41Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<java.lang.String>.iterator()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (it.hasNext()) tuple.add(it.next());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/7469/buggy-version/sphinx4-core.src.main.java.edu.cmu.sphinx.alignment.LongTextAligner.java", "BodyUseAPI": ["java.util.Iterator<java.lang.String>.next()", "java.util.LinkedList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "1cafc803d54fe722c52c9836f56de46780486bb0", "Url": "https://api.github.com/repos/vicariousgreg/sphinx", "Date": "2015-09-17T21:25:34Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (storage.exists()) storages.put(name, storage);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/9037/buggy-version/core.src.main.java.com.orientechnologies.orient.core.db.OrientDBEmbedded.java", "BodyUseAPI": ["java.util.Map<java.lang.String, com.orientechnologies.orient.core.storage.impl.local.OAbstractPaginatedStorage>.put(java.lang.String,com.orientechnologies.orient.core.storage.impl.local.OAbstractPaginatedStorage)"], "Fixed commit": "c66b57b3af98beb9a815fa33333956333e2804f9", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2017-03-14T15:44:57Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (userData == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/3288/buggy-version/src.main.java.org.concord.energy3d.util.SelectUtil.java", "BodyUseAPI": [], "Fixed commit": "5e9fdca5849b47e25c45bbaff570db8016e409a4", "Url": "https://api.github.com/repos/concord-consortium/energy3d", "Date": "2017-02-17T13:02:18Z"},
{"Line": "=>1087", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((points.size()) >= 3) { for (int i = 0; i < (points.size()); i += 3) { if (org.concord.energy3d.util.Util.isPointInsideTriangle(p, points.get(i), points.get((i + 1)), points.get((i + 2)))) { isInside = true; break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/3288/buggy-version/src.main.java.org.concord.energy3d.simulation.SolarRadiation.java", "BodyUseAPI": ["java.util.List<com.ardor3d.math.type.ReadOnlyVector2>.size()", "java.util.List<com.ardor3d.math.type.ReadOnlyVector2>.get(int)", "java.util.List<com.ardor3d.math.type.ReadOnlyVector2>.get(int)", "java.util.List<com.ardor3d.math.type.ReadOnlyVector2>.get(int)", "org.concord.energy3d.util.Util.isPointInsideTriangle(com.ardor3d.math.type.ReadOnlyVector2,points.get(i),points.get((i + 1)),points.get((i + 2)))"], "Fixed commit": "5e9fdca5849b47e25c45bbaff570db8016e409a4", "Url": "https://api.github.com/repos/concord-consortium/energy3d", "Date": "2017-02-17T13:02:18Z"},
{"Line": "=>312", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((spinnerCardView.getSpinnerStops().getSelectedItem().toString()) != null) { java.lang.String stopName = spinnerCardView.getSpinnerStops().getSelectedItem().toString(); org.thecosmicfrog.luasataglance.util.Preferences.saveSelectedStopName(getContext(), NO_LINE, stopName); loadStopForecast(stopName); shouldAutoReload = true; }else { android.util.Log.w(LOG_TAG, \"Spinner selected item is null.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/958/buggy-version/mobile.src.main.java.org.thecosmicfrog.luasataglance.activity.LineFragment.java", "BodyUseAPI": ["spinnerCardView.getSpinnerStops().getSelectedItem()", "org.thecosmicfrog.luasataglance.view.SpinnerCardView.getSpinnerStops()", "spinnerCardView.getSpinnerStops().getSelectedItem().toString()"], "Fixed commit": "f049e9c4d9d8b5cb6e506a5b41382223b20479ad", "Url": "https://api.github.com/repos/thecosmicfrog/LuasataGlance", "Date": "2016-05-26T21:04:16Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(onDamagedResult.cardDead)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/1377/buggy-version/workspace.CardFantasyCore.src.cfvbaibai.cardfantasy.engine.skill.DeathMark.java", "BodyUseAPI": [], "Fixed commit": "022ed78669028d82077bc585e4356c0c33b4933f", "Url": "https://api.github.com/repos/cfvbaibai/CardFantasy", "Date": "2015-01-08T15:05:28Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(account.getUrl().isEmpty())) { return account.getUrl(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/9271/buggy-version/src.main.java.org.daveware.passwordmaker.PasswordMaker.java", "BodyUseAPI": ["org.daveware.passwordmaker.Account.getUrl()"], "Fixed commit": "07b6c58c54e1c08391ef2b0e7c15cf2fcec1cf91", "Url": "https://api.github.com/repos/passwordmaker/java-passwordmaker-lib", "Date": "2014-09-21T13:21:30Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (value != null) { elements.put(key, value.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/6431/buggy-version/src.main.java.com.github.seratch.signedrequest4j.SignedRequestVerifier.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)", "java.lang.Object.toString()"], "Fixed commit": "cd4518b660afd3967303918bb19643a32c2e39e3", "Url": "https://api.github.com/repos/seratch/signedrequest4j", "Date": "2011-11-14T13:46:42Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((requestParameters.get(key)) != null) { additionalParameters.put(key, requestParameters.get(key)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/6431/buggy-version/src.main.java.com.github.seratch.signedrequest4j.SignedRequestBaseImpl.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,java.lang.Object)", "java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Fixed commit": "cd4518b660afd3967303918bb19643a32c2e39e3", "Url": "https://api.github.com/repos/seratch/signedrequest4j", "Date": "2011-11-14T13:46:42Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (parameter != null) { params.add(new com.github.seratch.signedrequest4j.SignedRequestBaseImpl.Parameter(key, com.github.seratch.signedrequest4j.OAuthEncoding.encode(parameter))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/6431/buggy-version/src.main.java.com.github.seratch.signedrequest4j.SignedRequestBaseImpl.java", "BodyUseAPI": ["java.util.List<com.github.seratch.signedrequest4j.SignedRequestBaseImpl.Parameter>.add(com.github.seratch.signedrequest4j.SignedRequestBaseImpl.Parameter)", "com.github.seratch.signedrequest4j.OAuthEncoding.encode(java.lang.Object)"], "Fixed commit": "cd4518b660afd3967303918bb19643a32c2e39e3", "Url": "https://api.github.com/repos/seratch/signedrequest4j", "Date": "2011-11-14T13:46:42Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.player.PlayerInteractEvent.getPlayer()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((player.getItemInHand().getItemMeta().getLore()) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/9150/buggy-version/src.com.gmail.justbru00.epic.smp.Listeners.Listener.java", "BodyUseAPI": [], "Fixed commit": "8977e2a2fe24364b9126a6bfe42935ed7b30a66d", "Url": "https://api.github.com/repos/JustBru00/EpicSMP", "Date": "2015-08-28T11:24:12Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(allowPVE)) { filterAction(e2, ((net.acomputerdog.spawnprotect.protect.Player) (e2.getDamager()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/3983/buggy-version/src.net.acomputerdog.spawnprotect.protect.Protector.java", "BodyUseAPI": [], "Fixed commit": "bb9ec434cbfd7e19175ac3c5b9741ca2d22ef9a2", "Url": "https://api.github.com/repos/AcomputerdogMC/SpawnProtect", "Date": "2016-06-16T15:00:31Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(allowDamage)) { filterAction(e2, e2.getEntity()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/3983/buggy-version/src.net.acomputerdog.spawnprotect.protect.Protector.java", "BodyUseAPI": [], "Fixed commit": "bb9ec434cbfd7e19175ac3c5b9741ca2d22ef9a2", "Url": "https://api.github.com/repos/AcomputerdogMC/SpawnProtect", "Date": "2016-06-16T15:00:31Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((!(workspace.exists())) && (!(workspace.mkdirs()))) { org.jenkinsci.plugins.gitserver.FileBackedHttpGitRepository.LOGGER.log(java.util.logging.Level.WARNING, \"Cannot create a workspace in {0}\", workspace); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/3748/buggy-version/src.main.java.org.jenkinsci.plugins.gitserver.FileBackedHttpGitRepository.java", "BodyUseAPI": [], "Fixed commit": "42393f76d7f5678f9ca49f8a76252be2cfa244c2", "Url": "https://api.github.com/repos/oleg-nenashev/git-server-plugin", "Date": "2015-07-30T23:20:42Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.beans.BeanUtils.getPropertyDescriptor(org.blueo.codegen.setget.SetGetDeclaredFieldBased,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (setPd == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/1201/buggy-version/blueo-commons.src.main.java.org.blueo.codegen.setget.SetGetDeclaredFieldBased.java", "BodyUseAPI": [], "Fixed commit": "e5863959958a8559d693cad69455c8fe665e0bc7", "Url": "https://api.github.com/repos/XinYang-Pan/BlueOrange", "Date": "2016-02-26T03:36:28Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.beans.BeanUtils.getPropertyDescriptor(org.blueo.codegen.set.SetDeclaredFieldBased,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (pd != null) { formatterWrapper.formatln(1, \"%s.%s(%s);\", paramName, pd.getWriteMethod().getName(), com.google.common.base.Defaults.defaultValue(pd.getPropertyType())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/1201/buggy-version/blueo-commons.src.main.java.org.blueo.codegen.set.SetDeclaredFieldBased.java", "BodyUseAPI": ["java.lang.reflect.Method.getName()", "java.beans.PropertyDescriptor.getPropertyType()", "com.google.common.base.Defaults.defaultValue(java.lang.Class<?>)", "org.blueo.commons.FormatterWrapper.formatln(int,java.lang.String,org.blueo.codegen.set.SetDeclaredFieldBased,java.lang.String,com.google.common.base.Defaults.defaultValue(pd.getPropertyType()))", "java.beans.PropertyDescriptor.getWriteMethod()"], "Fixed commit": "e5863959958a8559d693cad69455c8fe665e0bc7", "Url": "https://api.github.com/repos/XinYang-Pan/BlueOrange", "Date": "2016-02-26T03:36:28Z"},
{"Line": "=>12574", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getDataSelection()) != null) { getDataSelection().putProperty(DataSelection.PROP_USESTIMEDRIVER, value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/9073/buggy-version/src.ucar.unidata.idv.control.DisplayControlImpl.java", "BodyUseAPI": [], "Fixed commit": "dfa45cbd2b6a323d52087ac46bd5d46efa1f28ee", "Url": "https://api.github.com/repos/Unidata/IDV", "Date": "2017-01-16T05:11:19Z"},
{"Line": "=>417", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (iMatModel.getCurrentProducts().isEmpty()) { mainFrame.setCartButtonsEnabled(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/3085/buggy-version/iMatProject.src.imatproject.IMatController.java", "BodyUseAPI": [], "Fixed commit": "b353b3a434924bf0a4daaa99311048a00f069122", "Url": "https://api.github.com/repos/Matpan/GUIProjekt", "Date": "2015-03-05T15:04:42Z"},
{"Line": "=>324", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (demandesTempsDepasse.contains(noeudSelectionne.getId())) { java.lang.Object[] cells = new java.lang.Object[]{ points.get(noeudSelectionne.getId()) }; graph.setCellStyle((\"shape=triangle;strokeWidth=2;fillColor=red;strokeColor=\" + (COULEUR_BORDURE[idCouleur])), cells); }else { java.lang.Object[] cells = new java.lang.Object[]{ points.get(noeudSelectionne.getId()) }; graph.setCellStyle((((\"fillColor=\" + (COULEUR_REMPLISSAGE[idCouleur])) + \";strokeColor=\") + (COULEUR_BORDURE[idCouleur])), cells); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/4893/buggy-version/src.vue.VuePlan.java", "BodyUseAPI": ["java.util.HashMap<java.lang.Integer, java.lang.Object>.get(noeudSelectionne.getId())", "java.util.HashMap<java.lang.Integer, java.lang.Object>.get(noeudSelectionne.getId())", "modele.Noeud.getId()", "modele.Noeud.getId()"], "Fixed commit": "4237ad04e4471dc6b21fdd11f0b48b20ecc86e81", "Url": "https://api.github.com/repos/Hexanome4202/test_devoo", "Date": "2014-12-04T12:23:31Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (e != null) { org.javers.organization.structure.domain.Person person = personService.findPerson(e.getId()); mainView.selectPersonOnForm(person); }else { mainView.clearForm(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/4686/buggy-version/src.main.java.org.javers.organization.structure.ui.Controller.java", "BodyUseAPI": ["org.javers.organization.structure.domain.PersonService.findPerson(e.getId())", "org.javers.organization.structure.domain.Employee.getId()"], "Fixed commit": "8a34fd2afd7c1e7af4dbac3269473cdebf97dc3f", "Url": "https://api.github.com/repos/pszymczyk/organization-structure", "Date": "2015-04-18T17:15:47Z"},
{"Line": "=>1234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((stage.isCurrent()) && ((stage.getRollTs()) <= rollTs)) { com.dp.blackhole.supervisor.Supervisor.LOG.warn((((\"Can't recovery stage manually cause the stage's rollTs: \" + rollTs) + \" shouldn't >= current stage's rollTs: \") + (stage.getRollTs()))); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/6187/buggy-version/blackhole-supervisor.src.main.java.com.dp.blackhole.supervisor.Supervisor.java", "BodyUseAPI": ["com.dp.blackhole.supervisor.model.Stage.getRollTs()", "org.apache.commons.logging.Log.warn((((\"Can't recovery stage manually cause the stage's rollTs: \" + rollTs) + \" shouldn't >= current stage's rollTs: \") + (stage.getRollTs())))"], "Fixed commit": "ea0b2ef51c2fef4c43d41dbdb010e28950360ab5", "Url": "https://api.github.com/repos/DazhuangSu/blackhole", "Date": "2017-01-20T08:31:32Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["MisfitsPackage.DesignParser.stripFunction(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (MisfitsPackage.DesignParser.unwantedTypes(newSuper)) { java.lang.System.out.println((((newName + \" -> \") + newSuper) + \" [arrowhead=\\\"onormal\\\"];\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/236/buggy-version/src.MisfitsPackage.ClassDeclarationVisitor.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "4d093cd42b42f4d6c59b35e9213151fb35fbfc71", "Url": "https://api.github.com/repos/siscodr/CSSE374Misfits", "Date": "2016-01-08T03:50:48Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["MisfitsPackage.DesignParser.stripFunction(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (MisfitsPackage.DesignParser.unwantedTypes(newInterface)) { java.lang.System.out.println((((newName + \" -> \") + newInterface) + \" [arrowhead=\\\"onormal\\\", style=\\\"dashed\\\"];\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/236/buggy-version/src.MisfitsPackage.ClassDeclarationVisitor.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "4d093cd42b42f4d6c59b35e9213151fb35fbfc71", "Url": "https://api.github.com/repos/siscodr/CSSE374Misfits", "Date": "2016-01-08T03:50:48Z"},
{"Line": "=>344", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((secondaryCycleObservable) != null) secondaryCycleObservable.subscribe(getCycleSecondarySubscriber());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/7405/buggy-version/Kiosker.src.main.java.dk.itu.kiosker.controllers.WebController.java", "BodyUseAPI": [], "Fixed commit": "21a37e95164e3c07fb534f5393666e33976d296f", "Url": "https://api.github.com/repos/mofus/Kiosker", "Date": "2014-03-15T18:16:05Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((queueModel.get(i)) <= (-1)) { display[i].setText(\" \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/7368/buggy-version/src.view.QueueView.java", "BodyUseAPI": ["javax.swing.JButton.setText(java.lang.String)"], "Fixed commit": "50fdefa27fe0d1a859f83dd066b0be846c15c640", "Url": "https://api.github.com/repos/lewibt01/SumFun", "Date": "2017-04-26T17:16:32Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (path != null) { this.path = path.replaceFirst(\"pool\", \"zerorating\"); }else { this.path = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/7660/buggy-version/model.src.main.java.cm.aptoide.pt.model.v7.listapp.File.java", "BodyUseAPI": ["java.lang.String.replaceFirst(java.lang.String,java.lang.String)"], "Fixed commit": "03316ba6c3231771148323009b69ff5bb9c70757", "Url": "https://api.github.com/repos/Aptoide/aptoide-client-v8", "Date": "2017-06-21T17:05:45Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (pathAlt != null) { this.pathAlt = pathAlt.replaceFirst(\"pool\", \"zerorating\"); }else { this.pathAlt = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/7660/buggy-version/model.src.main.java.cm.aptoide.pt.model.v7.listapp.File.java", "BodyUseAPI": ["java.lang.String.replaceFirst(java.lang.String,java.lang.String)"], "Fixed commit": "03316ba6c3231771148323009b69ff5bb9c70757", "Url": "https://api.github.com/repos/Aptoide/aptoide-client-v8", "Date": "2017-06-21T17:05:45Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (path != null) { this.path = path.replaceFirst(\"pool\", \"zerorating\"); }else { this.path = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/7660/buggy-version/model.src.main.java.cm.aptoide.pt.model.v7.Obb.java", "BodyUseAPI": ["java.lang.String.replaceFirst(java.lang.String,java.lang.String)"], "Fixed commit": "03316ba6c3231771148323009b69ff5bb9c70757", "Url": "https://api.github.com/repos/Aptoide/aptoide-client-v8", "Date": "2017-06-21T17:05:45Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((vehicle.getFrontJoints().size()) == 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/4102/buggy-version/core.src.edu.chl._2DRacingGame.steering.TireSteeringSystem.java", "BodyUseAPI": [], "Fixed commit": "0263fbf0d69be353457256a8cee16a2d4eadd589", "Url": "https://api.github.com/repos/larsniklasson/2DRacingGame", "Date": "2015-05-20T18:43:47Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(Tangle.errors.isEmpty())) { for (java.lang.String s : Tangle.errors) java.lang.System.err.println(s); ok = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/3471/buggy-version/Tangle.java", "BodyUseAPI": [], "Fixed commit": "458872648ec858b7774a7149da8ce1589a4beff9", "Url": "https://api.github.com/repos/Masterxilo/RenderingAlgorithms", "Date": "2015-03-31T23:11:45Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.seqNum) >= 0) { if ((seqNum) != (message.getSeqNum())) return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/3721/buggy-version/src.main.java.config.Rule.java", "BodyUseAPI": [], "Fixed commit": "26362548481692859430904c2373938e56dd9841", "Url": "https://api.github.com/repos/ishikab/distributed-system", "Date": "2017-02-05T05:18:11Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<com.hazelcast.impl.Connection, com.hazelcast.impl.ClientEndpoint>.get(packet.conn)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (clientEndpoint == null) { clientEndpoint = new com.hazelcast.impl.ClientEndpoint(node, packet.conn); mapClientEndpoints.put(packet.conn, clientEndpoint); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/5729/buggy-version/hazelcast.src.main.java.com.hazelcast.impl.ClientHandlerService.java", "BodyUseAPI": [], "Fixed commit": "03c017422526de48b64c4946b2bebe30d5541127", "Url": "https://api.github.com/repos/pveentjer/hazelcast", "Date": "2013-07-11T09:01:48Z"},
{"Line": "=>308", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.player.PlayerJoinEvent.getPlayer()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((player.getHealth()) > 0) newPVP.sethealth(newPVP.getMaxHealth());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/5333/buggy-version/src.PvpBalance.DBZListener.java", "BodyUseAPI": [], "Fixed commit": "aa6e8f2d54fbe2043fedcd65f22d31e743367ce9", "Url": "https://api.github.com/repos/crehop/pvpBalance", "Date": "2013-08-15T21:05:50Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.alexbernat.homework1.Homework1Activity.getIntent()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((intent.hasExtra(com.alexbernat.homework1.Homework1Activity.KEY_USERNAME)) || (intent.hasExtra(com.alexbernat.homework1.Homework1Activity.KEY_PASSWORD))) { java.lang.String username = getIntent().getStringExtra(com.alexbernat.homework1.Homework1Activity.KEY_USERNAME); java.lang.String password = getIntent().getStringExtra(com.alexbernat.homework1.Homework1Activity.KEY_PASSWORD); tvUp.setText(username); tvDown.setText(password); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/825/buggy-version/app.src.main.java.com.alexbernat.homework1.Homework1Activity.java", "BodyUseAPI": ["getIntent().getStringExtra(java.lang.String)", "getIntent().getStringExtra(java.lang.String)"], "Fixed commit": "0b76d502ccc8bcccd0214a2993957f2d804662f6", "Url": "https://api.github.com/repos/bernatik/Homework", "Date": "2017-07-27T10:33:37Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (recordSimulation) { recordedSimulation = new java.util.ArrayList<java.util.List<chalmers.dax021308.ecosystem.model.population.IPopulation>>(numIterations); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/8728/buggy-version/src.chalmers.dax021308.ecosystem.model.environment.EcoWorld.java", "BodyUseAPI": [], "Fixed commit": "6248770895661e7be213e0e73e77084586611216", "Url": "https://api.github.com/repos/Ramqvist/Simulated-ecosystem", "Date": "2013-03-05T15:57:22Z"},
{"Line": "=>690", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.System.getenv(JsonKey.EKSTEP_BASE_URL)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.sunbird.common.models.util.ProjectUtil.isStringNullOREmpty(ekStepBaseUrl)) { ekStepBaseUrl = org.sunbird.common.models.util.PropertiesCache.getInstance().getProperty(JsonKey.EKSTEP_BASE_URL); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/5409/buggy-version/common-util.src.main.java.org.sunbird.common.models.util.ProjectUtil.java", "BodyUseAPI": [], "Fixed commit": "ad56e525e82136c5b27edc62895c0bf9154dcf36", "Url": "https://api.github.com/repos/project-sunbird/sunbird-utils", "Date": "2017-11-29T07:13:03Z"},
{"Line": "=>815", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.ctxBroker.retrieve(listModels.get(0)).get()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((modelAttr.getBinaryValue()) != null) { org.societies.personalisation.CAUI.api.model.UserIntentModelData newUIModelData = ((org.societies.personalisation.CAUI.api.model.UserIntentModelData) (org.societies.api.context.model.util.SerialisationHelper.deserialise(modelAttr.getBinaryValue(), this.getClass().getClassLoader()))); setCAUIActiveModel(newUIModelData); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/3714/buggy-version/personalisation.CAUIPrediction.src.main.java.org.societies.personalisation.CAUIPrediction.impl.CAUIPrediction.java", "BodyUseAPI": ["org.societies.api.context.model.util.SerialisationHelper.deserialise(modelAttr.getBinaryValue(),java.lang.ClassLoader)", "org.societies.api.context.model.CtxAttribute.getBinaryValue()"], "Fixed commit": "f68fc8eff82293f270563760e8fe839f1d5d13da", "Url": "https://api.github.com/repos/societies/SOCIETIES-Platform", "Date": "2013-06-20T08:06:10Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["myapp.fibo.seqstore.FiboSequenceStore.getMaxCachedSn()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (cachedSn <= 1) { sequenceStore.writeFiboValue(1, java.math.BigInteger.ZERO); sequenceStore.writeFiboValue(2, java.math.BigInteger.ONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/3251/buggy-version/fiboexecutor.src.main.java.myapp.fibo.executor.FiboSequenceGeneratorRedis.java", "BodyUseAPI": [], "Fixed commit": "973384b689f664ff5a17d1695822b7c9e08aa21c", "Url": "https://api.github.com/repos/simonxw/fibo", "Date": "2016-05-07T03:14:01Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((conversationContents.size()) == 0) { nextMessageId = codeu.chat.util.Uuid.NULL; }else { nextMessageId = conversationContents.get(((conversationContents.size()) - 1)).next; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/4926/buggy-version/src.codeu.chat.client.ClientMessage.java", "BodyUseAPI": ["java.util.List<codeu.chat.common.Message>.size()", "java.util.List<codeu.chat.common.Message>.get(((conversationContents.size()) - 1))"], "Fixed commit": "b03381bd8bf2c40b27216bd1d5d1ce3ff5b2cac9", "Url": "https://api.github.com/repos/khosravipasha/codeu_project_2017", "Date": "2017-05-25T09:34:19Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (largest == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/3749/buggy-version/src.main.java.com.njd5475.github.slim.controller.SlimDirectory.java", "BodyUseAPI": [], "Fixed commit": "c746b866c8c981ec4acf8959cd2b21ef2f4498e0", "Url": "https://api.github.com/repos/njd5475/slim-ide", "Date": "2016-05-09T22:20:17Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["opendap.threddsHandler.Catalog.getCatalogDocument()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (catDoc == null) { opendap.ncml.NcmlManager.log.error(\"ingestNcml() - FAILED to locate catalog document {}\", catalog.getFileName()); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/109/buggy-version/src.opendap.ncml.NcmlManager.java", "BodyUseAPI": [], "Fixed commit": "fd339d84fac6dd4662765de08520e8d06f1e7f61", "Url": "https://api.github.com/repos/OPENDAP/olfs", "Date": "2015-09-11T21:50:31Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (document != null) { value = document.get(((com.impetus.kundera.metadata.model.attributes.AbstractAttribute) (column)).getJPAColumnName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/291/buggy-version/kundera-mongo.src.main.java.com.impetus.client.mongodb.DocumentObjectMapper.java", "BodyUseAPI": ["com.mongodb.DBObject.get(((com.impetus.kundera.metadata.model.attributes.AbstractAttribute) (column)).getJPAColumnName())"], "Fixed commit": "2eb7f7b05a9a24d4e815c7c3cdaa7be3bb593f5d", "Url": "https://api.github.com/repos/impetus-opensource/Kundera", "Date": "2013-08-21T12:30:25Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mIsPlaying)) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/5998/buggy-version/app.src.main.java.com.google.cloud.android.reminderapp.VoicePlayer.java", "BodyUseAPI": [], "Fixed commit": "63e1e2d54911dd98b168d1d4e465ece9446f3d33", "Url": "https://api.github.com/repos/Jaena/ReminderAPP", "Date": "2017-07-30T13:53:59Z"},
{"Line": "=>626", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (departureRows > 1) { org.acra.ACRA.getErrorReporter().putCustomData(\"Message\", (((((((\"Calculated less then one depature row, set to one. height:\" + (height)) + \" width: \") + (width)) + \" lines \") + lines) + \" depRows: \") + departureRows)); org.acra.ACRA.getErrorReporter().handleException(null); departureRows = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/8916/buggy-version/android.src.org.cirrus.mobi.smarttransport.SmartWatchControlExtension.java", "BodyUseAPI": ["org.acra.ACRA.getErrorReporter().putCustomData(java.lang.String,java.lang.String)"], "Fixed commit": "acbcb5cf16cc731cfbbf050ae88214ac33b59be5", "Url": "https://api.github.com/repos/dhelleberg/smartwatch_transport", "Date": "2013-12-22T13:06:53Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(TicTacToe.isXturn())) { AI(); repaint(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/3021/buggy-version/src.TicTacToe.java", "BodyUseAPI": [], "Fixed commit": "8c271d79145e14f1aeb5d8c3aac408aaf4fe1a9d", "Url": "https://api.github.com/repos/Lukanite/NonaTicTac", "Date": "2015-11-18T01:00:46Z"},
{"Line": "=>321", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<org.elasticsearch.painless.node.ALink>.get(((links.size()) - 1))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (last instanceof org.elasticsearch.painless.node.ADefLink) { org.elasticsearch.painless.WriterUtility.writeDup(adapter, ((org.elasticsearch.painless.node.ADefLink) (last)).storeValueType.sort.size, link.size); }else { org.elasticsearch.painless.WriterUtility.writeDup(adapter, link.after.sort.size, link.size); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/7950/buggy-version/modules.lang-painless.src.main.java.org.elasticsearch.painless.node.EChain.java", "BodyUseAPI": [], "Fixed commit": "95a1b5b2a368b30369e522c972f5e2b53462af9c", "Url": "https://api.github.com/repos/gfyoung/elasticsearch", "Date": "2016-05-16T21:18:05Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.player.PlayerInteractEntityEvent.getRightClicked()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((entity.getCustomName()) != null) { if (((org.bukkit.entity.LivingEntity) (entity)).getCustomName().equals(ref.getConfig().getString(\"options.villagername\"))) { e.setCancelled(true); p.openInventory(ref.barInv); p.sendMessage((((ref.getConfig().getString(\"options.prefix\").replaceAll(\"(&([a-f0-9]))\", \"\\u00a7$2\")) + \" \") + (ref.getConfig().getString(\"options.openmessage\").replaceAll(\"(&([a-f0-9]))\", \"\\u00a7$2\")))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/798/buggy-version/src.me.dapkin.drink.DrinkListeners.java", "BodyUseAPI": [], "Fixed commit": "fdc08257513140e1f14b4476f623fc6598c1718c", "Url": "https://api.github.com/repos/Dapkin/VillagerBar", "Date": "2015-06-01T12:33:13Z"},
{"Line": "=>271", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.text.SimpleDateFormat.format(java.util.Date)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (myTime.startsWith(\"0\")) myTime = myTime.substring(1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/2445/buggy-version/app.src.main.java.cse403.blast.Model.Event.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "133182394f6a986000b5ea80008ac57be37d4e0d", "Url": "https://api.github.com/repos/sheend/blast", "Date": "2016-03-04T23:05:10Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.text.SimpleDateFormat.format(java.util.Date)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (myDate.startsWith(\"0\")) myDate = myDate.substring(1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/2445/buggy-version/app.src.main.java.cse403.blast.Model.Event.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "133182394f6a986000b5ea80008ac57be37d4e0d", "Url": "https://api.github.com/repos/sheend/blast", "Date": "2016-03-04T23:05:10Z"},
{"Line": "=>608", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hourOfDay >= 12) { timeOfDay = \" PM\"; }else { timeOfDay = \" AM\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/2445/buggy-version/app.src.main.java.cse403.blast.CreateEventActivity.java", "BodyUseAPI": [], "Fixed commit": "133182394f6a986000b5ea80008ac57be37d4e0d", "Url": "https://api.github.com/repos/sheend/blast", "Date": "2016-03-04T23:05:10Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["context.getResources().getDimensionPixelSize(R.dimen.tool_bar_top_padding)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (dimenResult == 0) { return 0; }else { return result == 0 ? dimenResult : result; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/8022/buggy-version/library.src.main.java.com.mikepenz.materialdrawer.util.UIUtils.java", "BodyUseAPI": [], "Fixed commit": "851e7859d94fd6f6721950e7254df681d6b07598", "Url": "https://api.github.com/repos/mikepenz/MaterialDrawer", "Date": "2015-04-14T19:36:41Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<com.cbr.archcomponents.model.UserModel>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((model.getBirthdate()) != null) { holder.birthdayTextView.setText(model.getBirthdate().toLocaleString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/1289/buggy-version/app.src.main.java.com.cbr.archcomponents.ui.display.UserAdapter.java", "BodyUseAPI": ["android.widget.TextView.setText(model.getBirthdate().toLocaleString())", "model.getBirthdate().toLocaleString()", "com.cbr.archcomponents.model.UserModel.getBirthdate()"], "Fixed commit": "7870396ba4bf0d0b9f766dd4ae861ee15a1fbf2d", "Url": "https://api.github.com/repos/dimitrisCBR/ArchComponents", "Date": "2017-11-16T13:48:40Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(path.startsWith(\"/\"))) { path = \"/\" + path; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/6099/buggy-version/src.main.java.org.primeframework.mvc.container.ServletContainerResolver.java", "BodyUseAPI": [], "Fixed commit": "c4a2c118ea8e8599f17b8884219b741637156ef7", "Url": "https://api.github.com/repos/prime-framework/prime-mvc", "Date": "2014-09-30T22:08:32Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (org.apache.commons.lang.StringUtils.isBlank(tempDir)) { tempDir = \"/tmp\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/3710/buggy-version/grisu-core.src.main.java.grisu.backend.model.FileSystemCache.java", "BodyUseAPI": [], "Fixed commit": "548c6796544ea0bd12beb65425baaebca7cc1368", "Url": "https://api.github.com/repos/sharayumungel/grisu", "Date": "2013-01-10T04:11:50Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.daniel.mts.ListOfLinesAndStopsIO.readLineInfoList()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((lineInfo[i].agency) == \"UCSD\") continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/7307/buggy-version/app.src.main.java.com.example.daniel.mts.ListOfLinesAndStopsIO.java", "BodyUseAPI": [], "Fixed commit": "843a941fa7b75b18669f7337283fabcda117a277", "Url": "https://api.github.com/repos/DanielCPLau/TritonTransit", "Date": "2016-11-28T18:02:47Z"},
{"Line": "=>947", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fi.muikku.plugins.workspace.dao.WorkspaceFolderDAO.listByParentAndFolderType(fi.muikku.plugins.workspace.model.WorkspaceRootFolder,WorkspaceFolderType.FRONT_PAGE)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (frontPageFolders.isEmpty()) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/3893/buggy-version/muikku-core-plugins.src.main.java.fi.muikku.plugins.workspace.WorkspaceMaterialController.java", "BodyUseAPI": [], "Fixed commit": "98359dd4e09291a1436fd4dcf7895db013b0a059", "Url": "https://api.github.com/repos/otavanopisto/muikku", "Date": "2015-10-07T09:18:53Z"},
{"Line": "=>959", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fi.muikku.plugins.workspace.dao.WorkspaceFolderDAO.listByParentAndFolderType(fi.muikku.plugins.workspace.model.WorkspaceRootFolder,WorkspaceFolderType.HELP_PAGE)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (helpPageFolders.isEmpty()) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/3893/buggy-version/muikku-core-plugins.src.main.java.fi.muikku.plugins.workspace.WorkspaceMaterialController.java", "BodyUseAPI": [], "Fixed commit": "98359dd4e09291a1436fd4dcf7895db013b0a059", "Url": "https://api.github.com/repos/otavanopisto/muikku", "Date": "2015-10-07T09:18:53Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.craigknott.setLocker.LockManager.getLockByName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((l.isLocked()) && (!(l.getWarden().equals(((org.bukkit.entity.Player) (sender)).getName())))) { sendError(sender, \"You are not the owner of this region\"); }else { sendError(sender, \"You are not the owner of this region\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/1674/buggy-version/src.com.craigknott.setLocker.CommandManager.java", "BodyUseAPI": [], "Fixed commit": "f28c17c869696ae70d59970ffb7a1d0b0292c5a0", "Url": "https://api.github.com/repos/nargarawr/SetLocker", "Date": "2013-07-04T16:23:15Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((entry.second) != null) entry.second.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/2419/buggy-version/dependencyLibs.Core.src.org.droidplanner.core.MAVLink.connection.MavLinkConnection.java", "BodyUseAPI": ["entry.second.close()"], "Fixed commit": "3457eb81372cff40ac895f58fc0534136d593d5d", "Url": "https://api.github.com/repos/dronekit/dronekit-android", "Date": "2015-03-05T03:07:22Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.citizensnpcs.EventListen.toCoord(event.getSpawnLocation())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (toRespawn.containsEntry(coord, event.getNPC())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/8108/buggy-version/src.main.java.net.citizensnpcs.EventListen.java", "BodyUseAPI": [], "Fixed commit": "f970e2b5acb7d4c542e49d94c0884438de683d0d", "Url": "https://api.github.com/repos/CitizensDev/Citizens2", "Date": "2013-08-13T04:20:57Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.timerLabel) != null) { this.timerLabel.setFontScale(((Gdx.graphics.getWidth()) / width), ((Gdx.graphics.getHeight()) / height)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/5022/buggy-version/riverrush-screen.src.main.nl.tudelft.ti2806.riverrush.screen.FinishedGameScreen.java", "BodyUseAPI": [], "Fixed commit": "0f50fe4153f34293165e7967aa3c7a8c98bb806f", "Url": "https://api.github.com/repos/StreetLampStudios/RiverRush", "Date": "2015-06-18T07:41:00Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.teamWonLabel) != null) { this.teamWonLabel.setFontScale(((Gdx.graphics.getWidth()) / width), ((Gdx.graphics.getHeight()) / height)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/5022/buggy-version/riverrush-screen.src.main.nl.tudelft.ti2806.riverrush.screen.FinishedGameScreen.java", "BodyUseAPI": [], "Fixed commit": "0f50fe4153f34293165e7967aa3c7a8c98bb806f", "Url": "https://api.github.com/repos/StreetLampStudios/RiverRush", "Date": "2015-06-18T07:41:00Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (widthMeasureSpec == 0) { size = heightMeasureSpec; }else if (heightMeasureSpec == 0) { size = widthMeasureSpec; }else if (widthMeasureSpec == heightMeasureSpec) { size = widthMeasureSpec; }else if (widthMeasureSpec < heightMeasureSpec) { size = widthMeasureSpec; }else { size = heightMeasureSpec; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/6567/buggy-version/app.src.main.java.com.foocompany.imagegallery.views.SquaredImageView.java", "BodyUseAPI": [], "Fixed commit": "61136f0254a1a83ba54529e02d56ca271c266319", "Url": "https://api.github.com/repos/bogdan-regulich/android-image-gallery", "Date": "2014-08-05T10:36:43Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((anime.description) != null) { resultAnime.description = anime.description; resultAnime.description.replace(\"<br>\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/3599/buggy-version/app.src.main.java.moe.notify.animenotifier.network.converters.RESTAnimeModelConverter.java", "BodyUseAPI": [], "Fixed commit": "0ea668ce9c28dab213d98119ca6ab1073bdc91f6", "Url": "https://api.github.com/repos/soulcramer/anime-notifier", "Date": "2016-08-22T23:48:41Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((document) != null) { org.jsoup.nodes.Element element = document.getElementById(id); if (!(isNullElement(element))) { return element; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/8941/buggy-version/ui-actions.whiteboard.src.main.java.com.cactusglobal.whiteboard.action.DocumentSearchActions.java", "BodyUseAPI": [], "Fixed commit": "705ab9d0a3f4aa8e64201649cfb69cc061f3254b", "Url": "https://api.github.com/repos/ivan-pronin/downwork", "Date": "2017-02-16T09:51:59Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Enumeration<com.untamedears.JukeAlert.model.Snitch>.nextElement()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((snitch.getGroup()) != null) { java.util.Set<com.untamedears.JukeAlert.model.Snitch> groupSet = snitchesByGroup.get(snitch.getGroup().getName()); if (groupSet == null) { groupSet = new java.util.HashSet<com.untamedears.JukeAlert.model.Snitch>(); snitchesByGroup.put(snitch.getGroup().getName(), groupSet); } groupSet.add(snitch); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/3836/buggy-version/src.main.java.com.untamedears.JukeAlert.manager.SnitchManager.java", "BodyUseAPI": ["com.untamedears.JukeAlert.model.Snitch.getGroup()", "java.util.Map<java.lang.String, java.util.Set<com.untamedears.JukeAlert.model.Snitch>>.put(snitch.getGroup().getName(),java.util.Set<com.untamedears.JukeAlert.model.Snitch>)", "java.util.Set<com.untamedears.JukeAlert.model.Snitch>.add(com.untamedears.JukeAlert.model.Snitch)", "com.untamedears.JukeAlert.model.Snitch.getGroup()", "snitch.getGroup().getName()", "java.util.Map<java.lang.String, java.util.Set<com.untamedears.JukeAlert.model.Snitch>>.get(snitch.getGroup().getName())", "snitch.getGroup().getName()"], "Fixed commit": "1794d3bcdd43c5143b55cda7a28cf4cbc2697c3f", "Url": "https://api.github.com/repos/DevotedMC/JukeAlert", "Date": "2016-11-07T13:19:12Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event.getType().equals(HorarioRequest.CAlENDAR_FESTIVOS)) || ((activity) == null)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/7020/buggy-version/app.src.main.java.com.onelio.connectu.Activities.Apps.Horario.HorarioDialog.java", "BodyUseAPI": [], "Fixed commit": "fd1bd0a664a0e480a32db74a2bcfa8ce5dec476d", "Url": "https://api.github.com/repos/Onelio/ConnectU", "Date": "2017-12-09T13:39:13Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["game.EscapeState.getExit()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (n.equals(exitNode)) { state.moveTo(exitNode); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/2945/buggy-version/src.main.java.student.Explorer.java", "BodyUseAPI": ["game.EscapeState.moveTo(game.Node)"], "Fixed commit": "064af84600de5c7d057b6d51cdf5081003a313c1", "Url": "https://api.github.com/repos/hspenc03/cw-temple", "Date": "2017-05-05T22:33:34Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (args != null) argList = ((java.lang.Object[]) (args.run()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/6554/buggy-version/DevVersion.LOGOFunctionNode.java", "BodyUseAPI": ["LOGOExprListNode.run()"], "Fixed commit": "5891c09ee2b5e6dbf894fbd82042e1630ab647f1", "Url": "https://api.github.com/repos/jl3931/PLT", "Date": "2013-05-08T12:39:20Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((color) != null) sb.append(((\" color=\\\"\" + (color)) + \"\\\"\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/8954/buggy-version/src.main.java.fr.cea.ig.grools.reporter.DotNode.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "2dd077724b905128bc206b918ea6880e5de386bf", "Url": "https://api.github.com/repos/Grools/grools-reporter", "Date": "2016-11-23T18:00:25Z"},
{"Line": "=>318", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((fvs.get(i).getAttribute(classAttribute)) == null) throw new java.lang.IllegalArgumentException(\"WekaConverter.getLabeledInstances: classAttribute not found for given FeatureVector.\"); else if ((fvs.get(i).getAttribute(classAttribute)) instanceof java.lang.String) labels.add(((java.lang.String) (fvs.get(i).getAttribute(classAttribute)))); else labels.add(fvs.get(i).getAttribute(classAttribute).toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/4048/buggy-version/src.main.java.com.github.TKnudsen.ComplexDataObject.model.tools.WekaConversion.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(fvs.get(i).getAttribute(classAttribute).toString())", "fvs.get(i).getAttribute(classAttribute).toString()", "FV.getAttribute(java.lang.String)", "java.util.List<FV>.get(int)", "java.util.List<java.lang.String>.add(((java.lang.String) (fvs.get(i).getAttribute(classAttribute))))", "FV.getAttribute(java.lang.String)", "FV.getAttribute(java.lang.String)", "java.util.List<FV>.get(int)", "java.util.List<FV>.get(int)"], "Fixed commit": "6d5986a255282f49a3f41776ad2c81a512eb65d1", "Url": "https://api.github.com/repos/TKnudsen/ComplexDataObject", "Date": "2017-03-17T20:25:39Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fvs == null) || ((fvs.size()) == 0)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/4048/buggy-version/src.main.java.com.github.TKnudsen.ComplexDataObject.model.tools.WekaConversion.java", "BodyUseAPI": [], "Fixed commit": "6d5986a255282f49a3f41776ad2c81a512eb65d1", "Url": "https://api.github.com/repos/TKnudsen/ComplexDataObject", "Date": "2017-03-17T20:25:39Z"},
{"Line": "=>407", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (instances == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/4048/buggy-version/src.main.java.com.github.TKnudsen.ComplexDataObject.model.tools.WekaConversion.java", "BodyUseAPI": [], "Fixed commit": "6d5986a255282f49a3f41776ad2c81a512eb65d1", "Url": "https://api.github.com/repos/TKnudsen/ComplexDataObject", "Date": "2017-03-17T20:25:39Z"},
{"Line": "=>397", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.sqlite.SQLiteDatabase.query(java.lang.String,java.lang.String[],<nulltype>,<nulltype>,<nulltype>,<nulltype>,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((cursor.getString(0)) != null) { if ((cursor.getString(0).compareTo(\"yes\")) == 0) { prevDate = cursor.getInt(2); prevDateMonth = cursor.getInt(3); if ((java.lang.Math.abs((currDate - prevDate))) <= 1) dosesInaRow++; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/70/buggy-version/malaria-app-android.src.main.java.com.peacecorps.malaria.db.DatabaseSQLiteHelper.java", "BodyUseAPI": ["android.database.Cursor.getInt(int)", "cursor.getString(0).compareTo(java.lang.String)", "android.database.Cursor.getString(int)", "android.database.Cursor.getInt(int)"], "Fixed commit": "0a983ef9a3c429679f93c6ccd0b0328bad4b8393", "Url": "https://api.github.com/repos/sridharjajoo/malaria-app-android", "Date": "2017-01-08T08:52:54Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pendingReads.size()) == 0) command = requestQueue.poll(HardcodedParameters.REGULAR_ACTIONS_DELAY, java.util.concurrent.TimeUnit.MILLISECONDS); else command = requestQueue.poll(HardcodedParameters.MINIMUM_POLL_WAIT, java.util.concurrent.TimeUnit.MILLISECONDS);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/4279/buggy-version/WalletDemoServer.src.ee.moog.walletdemo.WalletInMemDb.java", "BodyUseAPI": [], "Fixed commit": "458a90d52cba57808b4d95f9b7729d5ae61e57c9", "Url": "https://api.github.com/repos/amoog/WalletDemo", "Date": "2015-11-08T17:04:53Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sVar.startsWith(\"_\")) && ((sVar.length()) > 1)) t = new jason.asSyntax.UnnamedVar(java.lang.Integer.valueOf(sVar.substring(1))); else t = jason.asSyntax.ASSyntax.parseTerm(sVar);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/4349/buggy-version/src.main.java.jason.stdlib.puts.java", "BodyUseAPI": ["jason.asSyntax.ASSyntax.parseTerm(java.lang.String)", "java.lang.String.substring(int)", "java.lang.Integer.valueOf(java.lang.String)"], "Fixed commit": "425c5893857cec9c36bb5900fe66b27273097044", "Url": "https://api.github.com/repos/jason-lang/jason", "Date": "2017-08-14T21:01:09Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(tags.isEmpty())) { for (java.lang.String s : tags.split(\",\")) tagsTrimmed.add(s.trim()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/661/buggy-version/src.main.java.com.sysc4806.PostController.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "bb44f7685b2240bc8ef893337b865008f954be77", "Url": "https://api.github.com/repos/rscarson/SYSC4806-AMA", "Date": "2017-03-29T13:51:36Z"},
{"Line": "=>330", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((total_unknowns) > 0) { expected_wisdom = (total_wisdom) / (total_unknowns); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/2056/buggy-version/Player.java", "BodyUseAPI": [], "Fixed commit": "f40d77a10f2a5e2abeca2050f7fc0c70a39bd0c7", "Url": "https://api.github.com/repos/parthibanloganathan/coms4444-wtr", "Date": "2015-12-08T21:58:53Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (result != null) { android.widget.TextView textView = ((android.widget.TextView) (textViewReference.get())); textView.setText(result); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/8699/buggy-version/LARD.src.ca.ualberta.lard.CommentListBaseAdapter.java", "BodyUseAPI": ["android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "207ef43ad56e6742e0b8e3811073a788dcceba92", "Url": "https://api.github.com/repos/CMPUT301W14T06/LARD", "Date": "2014-03-20T19:35:18Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (root.has(\"selectedProfile\")) { java.lang.String selProfile = root.getString(\"selectedProfile\"); if (this.profiles.containsKey(selProfile)) { console.printInfo(((\"Profile \" + selProfile) + \" marked as selected.\")); if (!(this.setSelectedProfile(selProfile))) { this.createDefaultProfile(); } }else { console.printError(((\"Invalid profile selected! Using first loaded (\" + first) + \")\")); if (this.setSelectedProfile(first)) { this.createDefaultProfile(); } } }else { console.printInfo(((\"No profile is selected! Using first loaded (\" + first) + \")\")); if (this.setSelectedProfile(first)) { this.createDefaultProfile(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/4315/buggy-version/src.kml.Profiles.java", "BodyUseAPI": ["org.json.JSONObject.getString(java.lang.String)"], "Fixed commit": "bfdc73c736f7defeed05b2e457ddb5621bc4a394", "Url": "https://api.github.com/repos/DarkLBP/Krothium-Launcher", "Date": "2016-11-10T16:18:08Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mapFragment) != null) { findViewById(R.id.textspeed).setVisibility(View.VISIBLE); getSupportFragmentManager().beginTransaction().remove(mapFragment).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/9065/buggy-version/app.src.main.java.wisc.drivesense.activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "9d58adfae9d46bc3d489be3bf01fdd8be1e3c872", "Url": "https://api.github.com/repos/kanglei1130/DriveSense", "Date": "2016-11-11T21:59:37Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fields == null) || ((fields.length) == 0)) { fields = org.eweb4j.orm.config.ORMConfigBeanUtil.getFields(clazz); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/5065/buggy-version/src.main.java.org.eweb4j.orm.sql.UpdateSqlCreator.java", "BodyUseAPI": [], "Fixed commit": "a6cdd1546c740a9b2350a3238dba5a2831f7a273", "Url": "https://api.github.com/repos/laiweiwei/eweb4j-framework", "Date": "2013-02-03T13:23:34Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (obj == null) { org.motechproject.openmrs.tasks.OpenMRSTaskDataProvider.LOGGER.warn(\"Lookup with name {} didn't find the object of type {}.\", lookupName, objectType); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/8463/buggy-version/openmrs.src.main.java.org.motechproject.openmrs.tasks.OpenMRSTaskDataProvider.java", "BodyUseAPI": [], "Fixed commit": "916eeb3fde5cdfc5f854dcd395f1994dff742a23", "Url": "https://api.github.com/repos/motech/modules", "Date": "2016-12-21T12:04:00Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(nameFilterField.isFocused())) { nameFilterField.setText(te.getText(0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/6911/buggy-version/src.pneumaticCraft.client.gui.GuiUniversalSensor.java", "BodyUseAPI": ["net.minecraft.client.gui.GuiTextField.setText(te.getText(0))"], "Fixed commit": "30a1cbea896f185dd431c2e65a068ebddd127a25", "Url": "https://api.github.com/repos/AnodeCathode/PneumaticCraft", "Date": "2015-12-16T21:37:21Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (index != (-1)) { ca.ualberta.cs.models.CommentModelList.getInstance().getSelectionOffsetFromEnd(1).getChildrenComments().set(index, theModel); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/4568/buggy-version/src.ca.ualberta.cs.controllers.CommentModelController.java", "BodyUseAPI": ["ca.ualberta.cs.models.CommentModelList.getInstance().getSelectionOffsetFromEnd(1).getChildrenComments().set(java.lang.Integer,ca.ualberta.cs.models.CommentModel)"], "Fixed commit": "90598603c3c2f3d991dec522b252775f39ba93cd", "Url": "https://api.github.com/repos/CMPUT301W14T12/GeoChan", "Date": "2014-04-08T02:32:32Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (index != (-1)) { ca.ualberta.cs.models.TopicModelList.getInstance().getLastSelection().getChildrenComments().set(index, theModel); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/4568/buggy-version/src.ca.ualberta.cs.controllers.CommentModelController.java", "BodyUseAPI": ["ca.ualberta.cs.models.TopicModelList.getInstance().getLastSelection().getChildrenComments().set(java.lang.Integer,ca.ualberta.cs.models.CommentModel)"], "Fixed commit": "90598603c3c2f3d991dec522b252775f39ba93cd", "Url": "https://api.github.com/repos/CMPUT301W14T12/GeoChan", "Date": "2014-04-08T02:32:32Z"},
{"Line": "=>954", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (field.getType().isEnum()) { modelProperty.choices = new play.modules.morphia.Model.Choices() { @java.lang.SuppressWarnings(\"unchecked\") public java.util.List<java.lang.Object> list() { return ((java.util.List<java.lang.Object>) (java.util.Arrays.asList(field.getType().getEnumConstants()))); } }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/6835/buggy-version/src.play.modules.morphia.MorphiaPlugin.java", "BodyUseAPI": ["java.util.Arrays.asList(?[])", "java.lang.Class<?>.getEnumConstants()", "java.lang.reflect.Field.getType()"], "Fixed commit": "55e4a74c1d00bf5d6a28d7b74393f14aae134188", "Url": "https://api.github.com/repos/dbusch/play-morphia", "Date": "2011-11-16T17:59:53Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fileDiff.getState()) != (org.smartdata.model.FileDiffState.PENDING)) { fileDiffChainMap.get(path).removeHead(); fileLock.remove(path); return org.smartdata.model.action.ScheduleResult.FAIL; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/709/buggy-version/smart-hadoop-support.smart-hadoop.src.main.java.org.smartdata.hdfs.scheduler.CopyScheduler.java", "BodyUseAPI": [], "Fixed commit": "ad9c13ecb1dd7171388ec991d62ccd77763bd792", "Url": "https://api.github.com/repos/qiyuangong/SSM", "Date": "2017-09-23T08:12:11Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (val > 31) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/8148/buggy-version/src.com.bytezone.diskbrowser.cpm.CPMDisk.java", "BodyUseAPI": [], "Fixed commit": "91b63158f16708a0dcb2cd00603144e85b739bd8", "Url": "https://api.github.com/repos/dmolony/DiskBrowser", "Date": "2016-02-27T22:16:36Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.zulip.android.networking.HTTPRequest.execute()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (responseData.isSuccessful()) { registeredOrGotEventsThisRun = true; app.setEventQueueId(response.getString(\"queue_id\")); app.setLastEventId(response.getInt(\"last_event_id\")); processRegister(response); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/1418/buggy-version/app.src.main.java.com.zulip.android.networking.AsyncGetEvents.java", "BodyUseAPI": [], "Fixed commit": "9ed6992717bfd2babc7159bd261c106a7a9c6441", "Url": "https://api.github.com/repos/koziodigitalinc/zulip-android", "Date": "2016-08-23T20:42:11Z"},
{"Line": "=>296", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((component.getResource().getFlexoIODelegate()) instanceof org.openflexo.foundation.resource.FlexoIOStreamDelegate) { ((org.openflexo.foundation.resource.FlexoIOStreamDelegate<?>) (component.getResource().getFlexoIODelegate())).setSaveToSourceResource(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/6484/buggy-version/openflexo-technology-adapters-ui.ginaconnector-ui.src.main.java.org.openflexo.technologyadapter.gina.view.FMLControlledFIBVirtualModelInstanceModuleView.java", "BodyUseAPI": ["component.getResource().getFlexoIODelegate()", "org.openflexo.technologyadapter.gina.model.GINAFIBComponent.getResource()", "((org.openflexo.foundation.resource.FlexoIOStreamDelegate<?>) (component.getResource().getFlexoIODelegate())).setSaveToSourceResource(boolean)"], "Fixed commit": "91a473ae0487d9f47eab1954a5a39216f593ba1c", "Url": "https://api.github.com/repos/openflexo-team/openflexo-technology-adapters", "Date": "2017-02-13T21:50:16Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((hashCode) == null) { hashCode = id.hashCode(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/6480/buggy-version/src.main.java.model.organization.id.StringId.java", "BodyUseAPI": [], "Fixed commit": "b1600ea29190c70342149e7f986637c2ad5f9807", "Url": "https://api.github.com/repos/RuntimeModels/chazm", "Date": "2015-03-21T18:05:43Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(address.equals(moe.yukisora.shitake.MainActivity.getBluetoothAddress()))) addPendingViewFromLayoutResource(mAnswerLayout, address, moe.yukisora.shitake.api.AnswerAPIClient.getInstance().getAnswers().get(address));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/6463/buggy-version/app.src.main.java.moe.yukisora.shitake.ui.game.AnswerFragment.java", "BodyUseAPI": ["moe.yukisora.shitake.ui.game.AnswerFragment.addPendingViewFromLayoutResource(android.widget.LinearLayout,java.lang.String,moe.yukisora.shitake.api.AnswerAPIClient.getInstance().getAnswers().get(address))", "moe.yukisora.shitake.api.AnswerAPIClient.getInstance().getAnswers().get(java.lang.String)"], "Fixed commit": "86bf1353e92194b1fd0cef19bd2cf1dc3c86554e", "Url": "https://api.github.com/repos/YukiSora/shitake", "Date": "2016-11-11T18:24:45Z"},
{"Line": "=>427", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type instanceof whilelang.Type.Named) { java.lang.System.out.println(\"Named type\"); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/7346/buggy-version/WhileLang.src.whilelang.Interpreter.java", "BodyUseAPI": [], "Fixed commit": "b82f6110770c037eed47cdcea93d6b9f86e06b2e", "Url": "https://api.github.com/repos/QuasimodoNZ/SWEN430-A1_Parsing-and-Intercepting", "Date": "2015-03-23T08:50:44Z"},
{"Line": "=>413", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type instanceof whilelang.Type.Union) { for (whilelang.Type t : ((whilelang.Type.Union) (type)).getBounds()) if (isInstanceOf(subject, t)) return true; return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/7346/buggy-version/WhileLang.src.whilelang.Interpreter.java", "BodyUseAPI": [], "Fixed commit": "b82f6110770c037eed47cdcea93d6b9f86e06b2e", "Url": "https://api.github.com/repos/QuasimodoNZ/SWEN430-A1_Parsing-and-Intercepting", "Date": "2015-03-23T08:50:44Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.reprezen.kaizen.oasparser.val.NumericUtils.NumericType.types) == null) com.reprezen.kaizen.oasparser.val.NumericUtils.NumericType.types = com.google.common.collect.Maps.newHashMap();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/5189/buggy-version/kaizen-openapi-parser.src.main.java.com.reprezen.kaizen.oasparser.val.NumericUtils.java", "BodyUseAPI": [], "Fixed commit": "2c6e2eedb9aefa5c2827b8af575807f5eeec3540", "Url": "https://api.github.com/repos/slinkydeveloper/KaiZen-OpenApi-Parser", "Date": "2017-05-29T23:46:24Z"},
{"Line": "=>721", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/1921/buggy-version/object.src.main.java.com.orientechnologies.orient.object.enhancement.OObjectProxyMethodHandler.java", "BodyUseAPI": [], "Fixed commit": "293a0b3d2c7e934f1931bc39c3fd2f3a1371b0e3", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2015-05-08T16:54:30Z"},
{"Line": "=>478", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (loggedIn) { loadNewerPostsButton(event); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/6970/buggy-version/src.thenetworkclient.FXMLDocumentController.java", "BodyUseAPI": [], "Fixed commit": "8ccbe2076c37644ce1c193794450e2ea73715fc2", "Url": "https://api.github.com/repos/steilerDev/TheNetworkClient", "Date": "2014-04-25T11:03:38Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (node == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/1095/buggy-version/src.week5.KdTree.java", "BodyUseAPI": [], "Fixed commit": "faad42a287ff8529044710d430928314c4552217", "Url": "https://api.github.com/repos/johnttan/algorithms_in_java", "Date": "2015-02-24T21:46:16Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(bot.getName().equals(myBot.getName()))) { if (!(b.getFiredGun().getName().equals(\"shadow\"))) { b.getFiredGun().incBulletHitCount(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/7210/buggy-version/eem.bullets.wave.java", "BodyUseAPI": [], "Fixed commit": "c5b33c39640396f8b5da5bdaa0bd670394e4279e", "Url": "https://api.github.com/repos/evgmik/robocode_bots", "Date": "2014-04-26T23:46:49Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (executor.hasPermission(sub.permission)) { if ((sub.description) == null) available.put(sub.getName(), \"\"); else available.put(sub.getName(), java.lang.String.format(\" - %s\", sub.description)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/2681/buggy-version/src.no.runsafe.framework.api.command.Command.java", "BodyUseAPI": ["no.runsafe.framework.api.command.Command.getName()", "java.util.HashMap<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)", "no.runsafe.framework.api.command.Command.getName()", "java.util.HashMap<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)", "java.lang.String.format(java.lang.String,java.lang.String)"], "Fixed commit": "490c5179fed586c4631372e81bfb22a78163ea76", "Url": "https://api.github.com/repos/Runsafe/Framework", "Date": "2013-06-17T18:14:38Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dropdown.getSelectedItem()) == null) { android.widget.Toast.makeText(this, \"\u0414\u043e\u0431\u0430\u0432\u044c\u0442\u0435 \u0438 \u0432\u044b\u0431\u0438\u0440\u0435\u0442\u0435 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u044e\", Toast.LENGTH_SHORT).show(); }else { com.example.zhuki.outlaytracking.Outlay outlay = new com.example.zhuki.outlaytracking.Outlay(selected_item, java.lang.Integer.parseInt(editText.getText().toString())); outlay.setDate(date); dbHandler.addOutlay(outlay); android.widget.Toast toast = android.widget.Toast.makeText(this, ((\"- \" + (editText.getText().toString())) + \" \u0440\u0443\u0431.\"), Toast.LENGTH_SHORT); toast.show(); editText.setText(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/7700/buggy-version/app.src.main.java.com.example.zhuki.outlaytracking.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "802842a43bb1a41cda1674034b387eac6c35c036", "Url": "https://api.github.com/repos/ostzhk/Outlay-Tracking", "Date": "2016-07-30T20:55:00Z"},
{"Line": "=>1651", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (f instanceof org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtTxPrepareFuture.MiniFuture) return (((((\"[node=\" + (((org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtTxPrepareFuture.MiniFuture) (f)).node().id())) + \", loc=\") + (((org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtTxPrepareFuture.MiniFuture) (f)).node().isLocal())) + \", done=\") + (f.isDone())) + \"]\"; else return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/406/buggy-version/modules.core.src.main.java.org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtTxPrepareFuture.java", "BodyUseAPI": ["org.apache.ignite.internal.IgniteInternalFuture<?>.isDone()"], "Fixed commit": "275721195d433c384702b9322c8eddfc79c96104", "Url": "https://api.github.com/repos/voipp/ignite", "Date": "2017-12-20T12:47:54Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (flag) { parsedClass.addMethod(pMethod); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/5113/buggy-version/src.parser.MiniJavaTypeCheckerListener.java", "BodyUseAPI": [], "Fixed commit": "f2aa316fead7df58fb83a87c2a9f07f36c09e870", "Url": "https://api.github.com/repos/mpersing/MiniJava-Compiler", "Date": "2016-04-20T20:44:51Z"},
{"Line": "=>300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (e != null) { com.emc.storageos.db.server.impl.MigrationHandlerImpl.log.error(e.getMessage(), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/9210/buggy-version/dbsvc.src.main.java.com.emc.storageos.db.server.impl.MigrationHandlerImpl.java", "BodyUseAPI": ["java.lang.Exception.getMessage()", "org.slf4j.Logger.error(java.lang.String,java.lang.Exception)"], "Fixed commit": "e1cee598b1ada6fa6398ad6c9e8be752f1f4caa9", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2015-08-12T06:31:24Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (logdir != \"\") streamResult = new javax.xml.transform.stream.StreamResult(new java.io.File(savelog)); else streamResult = new javax.xml.transform.stream.StreamResult(java.lang.System.err);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/8116/buggy-version/src.main.java.Main.java", "BodyUseAPI": [], "Fixed commit": "bb05c2fe5acdfe2dd5ae9e2b03e5a22fc6628e9f", "Url": "https://api.github.com/repos/NatLibFi/marc2bibframe-wrapper", "Date": "2016-10-05T06:40:46Z"},
{"Line": "=>631", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mInSearch) { mMode = mModeBeforeSearch; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/7618/buggy-version/ShoppingList.src.main.java.org.openintents.shopping.ui.widget.ShoppingItemsView.java", "BodyUseAPI": [], "Fixed commit": "7678611cf14b052d3d5c60f8258ee2ad59be43c4", "Url": "https://api.github.com/repos/openintents/shoppinglist", "Date": "2014-06-14T21:50:38Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((product.getCategoryName()) != null) { attributes.setProperty(\"product.categoryname\", product.getCategoryName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/7569/buggy-version/src-pos.com.openbravo.pos.ticket.TicketLineInfo.java", "BodyUseAPI": [], "Fixed commit": "0df2a156e9b8ea6fcc60e96fb629ae066e935ab8", "Url": "https://api.github.com/repos/upsources/pos", "Date": "2011-08-08T17:19:35Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((potentialNewRoot.getActions().size()) == (potentialNewRoot.amountOfChildren())) { potentialNewRoot.setFullyExpanded(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/4996/buggy-version/src.main.java.nl.dke.boardgame.mcts.MonteCarloTree.java", "BodyUseAPI": ["nl.dke.boardgame.mcts.MonteCarloRootNode<S, A>.setFullyExpanded(boolean)"], "Fixed commit": "270f2559fa09ad3e6791551aac83111a94162048", "Url": "https://api.github.com/repos/nikvaessen/dke-boardgame", "Date": "2017-01-23T12:46:32Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (maryear == currentYear) { if (((marmon == maxMon) && (marmon == 1)) && (currentMon == 12)) { if (marday <= maxDay) { s = \"Upcoming marriage anniversaries is: \" + (fam.getWeddingDate()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/1060/buggy-version/CS555Project.src.Project.Sprint4_Zhu.java", "BodyUseAPI": [], "Fixed commit": "1c01a77509cb2a76a8936006669727f621d9763b", "Url": "https://api.github.com/repos/CS555/CS555", "Date": "2015-11-06T01:14:40Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fs.isDirectory(path)) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/7780/buggy-version/hadoop-dataset-extractor-standalone.src.main.java.wherehows.SchemaFetch.java", "BodyUseAPI": [], "Fixed commit": "6c22a46eb63ea8d56be1eeaf971e466e5a8d3e57", "Url": "https://api.github.com/repos/thomas-young-2013/Wherehows-eXtension", "Date": "2017-07-18T09:02:55Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((polling.IVehicle) (iv)) != null) java.lang.System.out.printf(\"\\nCompleted production of model: %s\\n\", iv.getModel()); else java.lang.System.out.println(\"\\nInvalid choice!!\\n\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/4619/buggy-version/src.polling.PollClient.java", "BodyUseAPI": [], "Fixed commit": "ed98809e6603252e00fb958e2fe67d2327d06b20", "Url": "https://api.github.com/repos/dave-kav/java_polling", "Date": "2015-11-10T09:52:36Z"},
{"Line": "=>446", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["blackstorelongclass.personal_info_collector.DataHandler.listHandler.getBeBridged(java.lang.String,java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (inBridgeList == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/1745/buggy-version/app.src.main.java.blackstorelongclass.personal_info_collector.DataHandler.listHandler.java", "BodyUseAPI": [], "Fixed commit": "c7a4a7af0bb225e32fb63fe8898ef2fb57ec16af", "Url": "https://api.github.com/repos/BlackShopLongClass/Personal_Info_Collector", "Date": "2017-12-08T08:06:03Z"},
{"Line": "=>271", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.view.KeyEvent.KEYCODE_MENU) == keyCode) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/5217/buggy-version/ebook.src.com.sunteam.ebook.view.MainView.java", "BodyUseAPI": [], "Fixed commit": "83ee5592d6c7bee2e9219435f505545170d03b09", "Url": "https://api.github.com/repos/weizhiping/ebook", "Date": "2016-11-06T09:18:14Z"},
{"Line": "=>352", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.w3c.dom.Element.invoke()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (result == (EXCEPTION)) { java.lang.Object obj = e.getEnvironment().getVariable(Constant.VARIABLE_EXCEPTION); if ((obj != null) && (obj instanceof java.lang.Throwable)) { java.lang.System.err.println(); ((java.lang.Throwable) (obj)).printStackTrace(); }else { java.lang.System.err.println(); java.lang.System.err.println(\"Unknown EXCEPTION is thrown.\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/3057/buggy-version/src.kenh.xscript.ScriptUtils.java", "BodyUseAPI": [], "Fixed commit": "97aff096e0f79552858bad62dfcfdec02eaa8fa7", "Url": "https://api.github.com/repos/KennethHuang/xScript", "Date": "2015-07-02T00:54:09Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pl.edu.agh.petrinet.model.PetriStateVertex.getTransitionsTimes()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (((transitionsTimes) == null) && (psvTransitionsTimes == null)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/7593/buggy-version/src.main.java.pl.edu.agh.petrinet.model.PetriStateVertex.java", "BodyUseAPI": [], "Fixed commit": "88f6db2a593b2b24c59fecacb380b51c8ee7c148", "Url": "https://api.github.com/repos/TomaszKorecki/PetriNet", "Date": "2015-06-01T20:18:45Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cancel) { event.setCancelled(true); }else { me.newyith.generator.FortressGeneratorRunesManager.onRuneMightHaveBeenBrokenBy(brokenBlock); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/8640/buggy-version/src.me.newyith.generator.FortressGeneratorRunesManager.java", "BodyUseAPI": [], "Fixed commit": "509f0f16b783d27cbb3072dc8d307a5c883decb1", "Url": "https://api.github.com/repos/rockysims/fortressplugin", "Date": "2015-09-08T08:09:16Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Set<me.newyith.util.Point>.contains(me.newyith.util.Point)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isProtected && (!inCreative)) { cancel = true; }else { if ((brokenPoint.is(Material.PISTON_EXTENSION)) || (brokenPoint.is(Material.PISTON_MOVING_PIECE))) { me.newyith.generator.MaterialData matData = brokenBlock.getState().getData(); if (matData instanceof me.newyith.generator.PistonExtensionMaterial) { me.newyith.generator.PistonExtensionMaterial pem = ((me.newyith.generator.PistonExtensionMaterial) (matData)); org.bukkit.block.BlockFace face = pem.getFacing().getOppositeFace(); me.newyith.util.Point pistonPoint = new me.newyith.util.Point(brokenBlock.getRelative(face, 1).getLocation()); if (me.newyith.generator.FortressGeneratorRunesManager.protectedPoints.contains(pistonPoint)) { cancel = true; } }else { me.newyith.util.Debug.error(\"matData not instanceof PistonExtensionMaterial\"); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/8640/buggy-version/src.me.newyith.generator.FortressGeneratorRunesManager.java", "BodyUseAPI": [], "Fixed commit": "509f0f16b783d27cbb3072dc8d307a5c883decb1", "Url": "https://api.github.com/repos/rockysims/fortressplugin", "Date": "2015-09-08T08:09:16Z"},
{"Line": "=>319", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((helper) != null) helper.stopListeningToNetworkState();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/4005/buggy-version/WebServices.app.src.main.java.com.catherine.webservices.fragments.P02_HttpURLConnection.java", "BodyUseAPI": [], "Fixed commit": "4529bce013a01786f7a88ef25e247a5433eca0e3", "Url": "https://api.github.com/repos/Catherine22/WebServices", "Date": "2017-11-24T08:29:12Z"},
{"Line": "=>336", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((helper) != null) helper.stopListeningToNetworkState();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/4005/buggy-version/WebServices.app.src.main.java.com.catherine.webservices.fragments.P01_Apache.java", "BodyUseAPI": [], "Fixed commit": "4529bce013a01786f7a88ef25e247a5433eca0e3", "Url": "https://api.github.com/repos/Catherine22/WebServices", "Date": "2017-11-24T08:29:12Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (iKey.equals(\"sql\")) { if (!(iKey.equals(iValue.getFactory().getLanguageName()))) return false; }else { if (iValue.getFactory().getLanguageName().equals(\"sql\")) return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/4292/buggy-version/core.src.main.java.com.orientechnologies.orient.core.command.script.ODatabaseScriptManager.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "baab6e665c9a064141eab80dbb99249d02519600", "Url": "https://api.github.com/repos/cstamas/orientdb", "Date": "2014-12-02T01:13:15Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (event.equals(\"edit\")) { wrappedRequest.addParameterValue(\"mode\", event); }else { wrappedRequest.addParameterValue(\"mode\", \"view\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/1144/buggy-version/src.main.java.eionet.meta.DatasetsServlet.java", "BodyUseAPI": ["eionet.util.DDServletRequestWrapper.addParameterValue(java.lang.String,java.lang.String)"], "Fixed commit": "38d878f54c808e8b0ab844674eca6adf0ff74872", "Url": "https://api.github.com/repos/eea/eionet.datadict", "Date": "2017-05-16T10:34:57Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.pipa.item.TrafficItem.TrafficRecord.diffRecord(com.example.pipa.item.TrafficItem.TrafficRecord)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((diffRecord.tx) == 0) && ((diffRecord.rx) == 0)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/3403/buggy-version/src.com.example.pipa.item.TrafficItem.java", "BodyUseAPI": [], "Fixed commit": "1dc4e147e29e713cb5385d0bf41382cca29896c5", "Url": "https://api.github.com/repos/jim20515/CLAP_Project_V2", "Date": "2015-08-23T10:27:28Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (byteCount > 0) { payloadLength = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/4110/buggy-version/org.eclipse.paho.client.mqttv3.src.main.java.org.eclipse.paho.client.mqttv3.internal.websocket.WebSocketFrame.java", "BodyUseAPI": [], "Fixed commit": "e9518f92660954e2eea11737236808386af98d19", "Url": "https://api.github.com/repos/eclipse/paho.mqtt.java", "Date": "2015-11-25T10:05:09Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(entry.getForeignMarkup().isEmpty())) { imgUri = new main.java.types.NeverNullString(entry.getForeignMarkup().get(0).getAttribute(\"url\").getValue(), \"https://media.glassdoor.com/sqll/3096/bloomberg-l-p-squarelogo-1485356219895.png\"); }else { imgUri = new main.java.types.NeverNullString(\"https://media.glassdoor.com/sqll/3096/bloomberg-l-p-squarelogo-1485356219895.png\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/4407/buggy-version/src.main.java.types.BloombergNews.java", "BodyUseAPI": ["entry.getForeignMarkup().get(0).getAttribute(\"url\").getValue()", "entry.getForeignMarkup().get(0).getAttribute(java.lang.String)", "com.rometools.rome.feed.synd.SyndEntry.getForeignMarkup()", "entry.getForeignMarkup().get(int)"], "Fixed commit": "705657c1b0de0d7ff5a59c27f3884c563f69d0a5", "Url": "https://api.github.com/repos/arnoldout/News-Aggregator_Java-API", "Date": "2017-06-18T22:48:57Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((eElement.getElementsByTagName(\"media:content\").item(1)) != null) { imgUri = new main.java.types.NeverNullString(eElement.getElementsByTagName(\"media:content\").item(1).getAttributes().getNamedItem(\"url\").getNodeValue(), \"http://icons.iconarchive.com/icons/martz90/circle/512/guardian-icon.png\"); }else { imgUri = new main.java.types.NeverNullString(\"http://icons.iconarchive.com/icons/martz90/circle/512/guardian-icon.png\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/4407/buggy-version/src.main.java.types.TheGuardianDoc.java", "BodyUseAPI": ["org.w3c.dom.Node.getAttributes()", "org.w3c.dom.NamedNodeMap.getNamedItem(java.lang.String)", "org.w3c.dom.NodeList.item(int)", "org.w3c.dom.Node.getNodeValue()", "org.w3c.dom.Element.getElementsByTagName(java.lang.String)"], "Fixed commit": "705657c1b0de0d7ff5a59c27f3884c563f69d0a5", "Url": "https://api.github.com/repos/arnoldout/News-Aggregator_Java-API", "Date": "2017-06-18T22:48:57Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(event.getBlock().getWorld().getName().equals(\"world\"))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/7304/buggy-version/LivelyWorld.src.main.java.com.kylantraynor.livelyworld.water.WaterListener.java", "BodyUseAPI": [], "Fixed commit": "35a0aff17df6a0ee35cb147811cba48e06b941c7", "Url": "https://api.github.com/repos/KylanTraynor/LivelyWorld", "Date": "2017-08-15T20:43:35Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.dd885.tools.StringUtils.isNotNone(url)) { try { cmb.netpayment.Security pay = new cmb.netpayment.Security(keypath); byte[] baSig = url.getBytes(\"GB2312\"); bRet = pay.checkInfoFromBank(baSig); java.lang.System.out.println((\"checkInfoFromBank: \" + bRet)); } catch (java.lang.Exception e) { java.lang.System.out.println((\"new netpayment object failed: \" + (e.getMessage()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/8346/buggy-version/src.main.java.com.dd885.tools.MerchantOpt.java", "BodyUseAPI": ["java.lang.String.getBytes(java.lang.String)"], "Fixed commit": "6d0d17e0c661467264510a6402bb8f0a9c384c71", "Url": "https://api.github.com/repos/wowtous/zjycmb", "Date": "2015-03-11T05:45:46Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["textDescription.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (android.text.TextUtils.isEmpty(description)) { textDescription.setError(\"You gotta enter a phrase to continue yah fool\"); }else { java.lang.String captionMessage = \"provideCaption:\" + description; ((com.helluva.telephone_pictionary_android.ApplicationState) (getApplicationContext())).sendMessage(captionMessage); android.content.Intent i = new android.content.Intent(this, com.helluva.telephone_pictionary_android.WaitActivity.class); this.startActivity(i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/7982/buggy-version/app.src.main.java.com.helluva.telephone_pictionary_android.TextWithSketchActivity.java", "BodyUseAPI": [], "Fixed commit": "1a29ddd997a1d2b82c220159d8edc4f1f17eb18d", "Url": "https://api.github.com/repos/helluva/Telephone-Pictionary-android", "Date": "2017-02-26T13:26:49Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((chartPanel) != null) { chartPanel.setName(title); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/8310/buggy-version/interpreter.plot_addon.src.main.java.org.randoom.setlx.utilities.DrawFrame.java", "BodyUseAPI": [], "Fixed commit": "e8ffce0c97820c8944be439fbd2d3d6a90fe179b", "Url": "https://api.github.com/repos/topfdrummer/setlX", "Date": "2015-05-27T10:18:14Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.acadiasoft.simm.util.WeightedSensitivityUtils.sumAbsoluteValues(java.util.List<com.acadiasoft.simm.model.sensitivity.WeightedSensitivity>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (sumOfAbsRiskExposures.stripTrailingZeros().equals(java.math.BigDecimal.ZERO)) { return java.math.BigDecimal.ZERO; }else { java.math.BigDecimal quotient = com.acadiasoft.util.BigDecimalUtils.divideWithPrecision(sumOfRiskExposures, sumOfAbsRiskExposures); return quotient.min(java.math.BigDecimal.ZERO); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/3408/buggy-version/simm-engine.src.main.java.com.acadiasoft.simm.engine.margin.curvature.CurvatureMarginLambdaUtils.java", "BodyUseAPI": ["java.math.BigDecimal.min(java.math.BigDecimal)", "com.acadiasoft.util.BigDecimalUtils.divideWithPrecision(java.math.BigDecimal,java.math.BigDecimal)"], "Fixed commit": "64863e2374178974a454bceff01f9ea317319b93", "Url": "https://api.github.com/repos/AcadiaSoft/simm-lib", "Date": "2017-12-11T17:58:54Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (view.isSheetShown()) { view.hideSheet(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/6196/buggy-version/app.src.main.java.org.fs.dx.presenters.AddFormulaPresenter.java", "BodyUseAPI": ["1.hideSheet()"], "Fixed commit": "ca396dd8ca3eb8d29efdc66a386abb47eb449904", "Url": "https://api.github.com/repos/droideveloper/FDXAndroid", "Date": "2016-07-13T01:09:02Z"},
{"Line": "=>577", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lval instanceof wyc.stages.Expr.AbstractDotAccess) { wyc.stages.Expr.AbstractDotAccess ad = ((wyc.stages.Expr.AbstractDotAccess) (lval)); wyc.stages.Expr.LVal src = propagate(((wyc.stages.Expr.LVal) (ad.src)), environment, imports); wyc.stages.Expr.RecordAccess ra = new wyc.stages.Expr.RecordAccess(src, ad.name, ad.attributes()); wyil.lang.Type.Record rawSrcType = wyil.lang.Type.effectiveRecordType(src.rawType()); if (rawSrcType == null) { syntaxError(errorMessage(wyc.stages.INVALID_LVAL_EXPRESSION), filename, src); } ra.rawSrcType = rawSrcType; ra.nominalFieldType = rawSrcType.fields().get(ad.name); return ra; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/666/buggy-version/src.wyc.stages.TypePropagation.java", "BodyUseAPI": [], "Fixed commit": "f85ef3ab3cefe93e737e81e7cebed9f1bb4751c0", "Url": "https://api.github.com/repos/Whiley/WhileyCompiler", "Date": "2011-12-21T21:10:37Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (nerLanguage == (edu.stanford.nlp.ie.NERClassifierCombiner.Language.CHINESE)) { this.nsc = new edu.stanford.nlp.ie.regexp.ChineseNumberSequenceClassifier(new java.util.Properties(), useSUTime, nscProps); }else { this.nsc = new edu.stanford.nlp.ie.regexp.NumberSequenceClassifier(new java.util.Properties(), useSUTime, nscProps); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/8470/buggy-version/src.edu.stanford.nlp.ie.NERClassifierCombiner.java", "BodyUseAPI": [], "Fixed commit": "2dabc0df136645944375aa7a15eaca6000e82c5f", "Url": "https://api.github.com/repos/stanfordnlp/CoreNLP", "Date": "2016-12-14T03:51:15Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((t1.getEnd()) == null) && ((t2.getEnd()) == null)) { return 0; }else if ((t1.getEnd()) == null) { return 1; }else { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/1153/buggy-version/src.main.java.seedu.task.model.task.TaskComparator.java", "BodyUseAPI": ["seedu.task.model.task.Task.getEnd()"], "Fixed commit": "40fb21076a47332772aa4c185f1d55189e064598", "Url": "https://api.github.com/repos/CS2103AUG2016-T13-C1/main", "Date": "2016-10-26T18:21:36Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((t1.getStart()) == null) && ((t2.getStart()) == null)) { return 0; }else if ((t1.getStart()) == null) { return 1; }else { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/1153/buggy-version/src.main.java.seedu.task.model.task.TaskComparator.java", "BodyUseAPI": ["seedu.task.model.task.Task.getStart()"], "Fixed commit": "40fb21076a47332772aa4c185f1d55189e064598", "Url": "https://api.github.com/repos/CS2103AUG2016-T13-C1/main", "Date": "2016-10-26T18:21:36Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dimIdx == ((n) - 1)) return dimIdx;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/1446/buggy-version/src.main.java.net.imglib2.img.array.ArrayImg.java", "BodyUseAPI": [], "Fixed commit": "c5af96d0dc8ea9c4ff8b3bcc2b524418e498529e", "Url": "https://api.github.com/repos/imglib/imglib2", "Date": "2014-10-24T09:51:00Z"},
{"Line": "=>1499", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCardTimer) != null) { mCardTimer.stop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/2126/buggy-version/src.com.ichi2.anki.Reviewer.java", "BodyUseAPI": [], "Fixed commit": "270a0b3f2023c39c728325a2d4cb2ab9262d9493", "Url": "https://api.github.com/repos/vershinin/Anki-Android", "Date": "2012-11-17T17:14:14Z"},
{"Line": "=>864", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (addToPolygon) { currentPolyEdgeCoords = mCurrentPolygon.getEdgeCoords(); if (((((((((pos == 0) && addToPolygon) && ((mZoom) == (mCurrentPolygon.getZoom()))) && ((mOffsetX) == (mCurrentPolygon.getOffsetX()))) && ((mOffsetY) == (mCurrentPolygon.getOffsetY()))) && ((currentPolyEdgeCoords[0]) == x1)) && ((currentPolyEdgeCoords[1]) == y1)) && ((currentPolyEdgeCoords[2]) == x2)) && ((currentPolyEdgeCoords[3]) == y2)) { coords = mCurrentPolygon.getSquareCoords(); notCached = false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/4542/buggy-version/src.uk.me.graphe.client.DrawingImpl.java", "BodyUseAPI": [], "Fixed commit": "7836ac68bdfa8458e4de9d8a4532e3d04ae495b8", "Url": "https://api.github.com/repos/mickyjones/spe", "Date": "2011-05-09T00:49:08Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (file == null) { java.lang.System.err.println(\"The file can not be saved. No file will be created.\"); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/3771/buggy-version/src.uic.project.commuter.fileOperator.FileSavingBehavior.java", "BodyUseAPI": [], "Fixed commit": "d6e00ae53fb24f8a7071658f921402d6ed2bb438", "Url": "https://api.github.com/repos/ijedi1234/UIC15-CS342-Commuter-Project", "Date": "2015-04-21T03:02:07Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(assignRoomType())) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/5802/buggy-version/src.com.shatteredpixel.shatteredpixeldungeon.levels.RegularLevel.java", "BodyUseAPI": [], "Fixed commit": "e4ea5685ba51aa675f6cb197b390741419e55e53", "Url": "https://api.github.com/repos/00-Evan/shattered-pixel-dungeon", "Date": "2015-01-15T04:16:13Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.yhtye.gongjiaochaxun.ResultActivity.SearchLineStationRunable.getNowLineInfo()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (lineInfo == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/6051/buggy-version/src.com.yhtye.gongjiaochaxun.ResultActivity.java", "BodyUseAPI": [], "Fixed commit": "3eed53e306806fea3518204acca21d966e812cef", "Url": "https://api.github.com/repos/xqr/shgongjiao", "Date": "2016-01-13T02:35:43Z"},
{"Line": "=>365", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((progressDialog) != null) && (progressDialog.isShowing())) { progressDialog.dismiss(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/6051/buggy-version/src.com.yhtye.gongjiaochaxun.ResultActivity.java", "BodyUseAPI": ["android.app.ProgressDialog.dismiss()"], "Fixed commit": "3eed53e306806fea3518204acca21d966e812cef", "Url": "https://api.github.com/repos/xqr/shgongjiao", "Date": "2016-01-13T02:35:43Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.yhtye.gongjiaochaxun.ResultActivity.SearchLineRunable.getNowLineInfo()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (lineInfo == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/6051/buggy-version/src.com.yhtye.gongjiaochaxun.ResultActivity.java", "BodyUseAPI": [], "Fixed commit": "3eed53e306806fea3518204acca21d966e812cef", "Url": "https://api.github.com/repos/xqr/shgongjiao", "Date": "2016-01-13T02:35:43Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(req.getParameter(\"age\"))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((req.getParameter(\"name\")) == \"\") || (a < 0)) { throw new java.sql.SQLException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/1116/buggy-version/src.cse135.servlet.SignupServlet.java", "BodyUseAPI": [], "Fixed commit": "5dbbc14d3112006c01a5f2ba7c6aba536b0808b7", "Url": "https://api.github.com/repos/CaptnAsia/cse135", "Date": "2014-04-30T21:01:39Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((medianFinder.sampleCount()) == 0) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/1047/buggy-version/src.main.java.de.greencity.bladenightapp.procession.Procession.java", "BodyUseAPI": [], "Fixed commit": "3e74f18cff04b534017c7043bc4812b30ee43fbf", "Url": "https://api.github.com/repos/bladenight/bladenightapp-common", "Date": "2013-03-10T13:17:10Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (plugin.getGameManager().getSettings().useDiscord()) { bot.sendMessage(botMsg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/6260/buggy-version/src.main.java.net.flutterflies.fwapaderp.listeners.PlayerDeathListener.java", "BodyUseAPI": [], "Fixed commit": "18b4d61eae36793b96c508e3e332e608e792964b", "Url": "https://api.github.com/repos/PhotonBursted/FwapaDerp", "Date": "2016-04-15T00:11:03Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (plugin.getGameManager().getSettings().useDiscord()) { bot.handleDeath(deadPlayer.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/6260/buggy-version/src.main.java.net.flutterflies.fwapaderp.listeners.PlayerDeathListener.java", "BodyUseAPI": [], "Fixed commit": "18b4d61eae36793b96c508e3e332e608e792964b", "Url": "https://api.github.com/repos/PhotonBursted/FwapaDerp", "Date": "2016-04-15T00:11:03Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (groupPosition == 14) { android.media.MediaPlayer mp14 = android.media.MediaPlayer.create(convertView.getContext(), R.raw.alligator3); mp14.start(); }else if (groupPosition == 15) { android.widget.Toast.makeText(convertView.getContext(), \"Er is geen geluid beschikbaar voor dit dier\", Toast.LENGTH_LONG).show(); }else if (groupPosition == 16) { android.widget.Toast.makeText(convertView.getContext(), \"Er is geen geluid beschikbaar voor dit dier\", Toast.LENGTH_LONG).show(); }else if (groupPosition == 17) { android.widget.Toast.makeText(convertView.getContext(), \"Er is geen geluid beschikbaar voor dit dier\", Toast.LENGTH_LONG).show(); }else if (groupPosition == 18) { android.media.MediaPlayer mp18 = android.media.MediaPlayer.create(convertView.getContext(), R.raw.baboon); mp18.start(); }else if (groupPosition == 19) { android.media.MediaPlayer mp19 = android.media.MediaPlayer.create(convertView.getContext(), R.raw.hippo3); mp19.start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/7941/buggy-version/app.src.main.java.com.example.daniel.eindprojectsemester4.ExpandableListAdapter.java", "BodyUseAPI": [], "Fixed commit": "09e2e37cd6aeb784412bc74582894398591ad874", "Url": "https://api.github.com/repos/ChiefMax/EindprojectSemester4v2", "Date": "2017-06-21T08:23:09Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((msg instanceof io.netty.handler.codec.http.FullHttpMessage) && (!(((io.netty.handler.codec.http.FullHttpMessage) (msg)).data().readable()))) { java.lang.String acceptEncoding = acceptEncodingQueue.poll(); if (acceptEncoding == null) { throw new java.lang.IllegalStateException(\"cannot send more responses than requests\"); } return msg; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/5947/buggy-version/codec-http.src.main.java.io.netty.handler.codec.http.HttpContentEncoder.java", "BodyUseAPI": [], "Fixed commit": "97ea338bceeb58139203b3394d3260bf8749bdd6", "Url": "https://api.github.com/repos/lw346/netty", "Date": "2013-01-30T19:58:07Z"},
{"Line": "=>416", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(this.hasVar(varName))) { this.newVar(varName, v); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/5879/buggy-version/fonte.Interpreter.java", "BodyUseAPI": ["Interpreter.newVar(java.lang.String,Variable)"], "Fixed commit": "f67572de3944d711e96d9bbba9e3d8ea20e259c8", "Url": "https://api.github.com/repos/vladimirbelinski/Lotus", "Date": "2015-04-26T23:24:35Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (condition.getReturnType().equals(java.lang.String.class.getName())) { if (enableCycles) { cycleButton.setSelection(true); stackLayout.topControl = editor.getParent(); }else { fixedDateButton.setSelection(true); stackLayout.topControl = calendarEditor; } }else if (condition.getReturnType().equals(java.lang.Long.class.getName())) { durationButton.setSelection(true); stackLayout.topControl = durationEditor; }else if (condition.getReturnType().equals(java.util.Date.class.getName())) { fixedDateButton.setSelection(true); stackLayout.topControl = calendarEditor; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/8952/buggy-version/bundles.plugins.org.bonitasoft.studio.properties.src.org.bonitasoft.studio.properties.sections.timer.wizard.TimerConditionWizardPage.java", "BodyUseAPI": ["org.bonitasoft.studio.model.expression.Expression.getReturnType()", "condition.getReturnType().equals(java.lang.String)", "org.bonitasoft.studio.model.expression.Expression.getReturnType()", "condition.getReturnType().equals(java.lang.String)"], "Fixed commit": "83faf3607add62829723c7299f5c13014338d766", "Url": "https://api.github.com/repos/bonitasoft/bonita-studio", "Date": "2014-01-08T08:53:37Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((gitHubParameter.getSha()) != null) && (!(gitHubParameter.getSha().isEmpty()))) { content.setSha(gitHubParameter.getSha()); org.jboss.errai.enterprise.client.jaxrs.api.RestClient.setJacksonMarshallingActive(true); org.jboss.errai.enterprise.client.jaxrs.api.RestClient.create(org.geowe.client.shared.rest.github.service.GitHubFileService.class, org.geowe.client.local.layermanager.tool.export.exporter.GitHubUpdateFileExporter.URL_BASE, getRemoteCallback(), getErrorCallback(), Response.SC_OK).updateFile(userName, repository, path, fileName, authorizationHeaderValue, content); }else { messageDialogBuilder.createError(UIMessages.INSTANCE.warning(), \"Para poder actualizar esta capa debes cargarla previamente desde GitHub\").show(); autoMessageBox.hide(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/5137/buggy-version/src.main.java.org.geowe.client.local.layermanager.tool.export.exporter.GitHubUpdateFileExporter.java", "BodyUseAPI": ["org.geowe.client.shared.rest.github.GitHubUpdateFileRequest.setSha(gitHubParameter.getSha())", "org.geowe.client.local.github.request.GitHubParameter.getSha()"], "Fixed commit": "e9a13e5baebb65487cd4ff833decb776c9669fc5", "Url": "https://api.github.com/repos/jmmluna/geowe-core", "Date": "2016-12-15T08:55:16Z"},
{"Line": "=>429", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.sf.memoranda.DefectEntry.getPhaseInjected()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (phase.equals(\"Postmortem\")) { phaseInt = 6; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/7650/buggy-version/src.net.sf.memoranda.ui.ProjectSummaryPanel.java", "BodyUseAPI": [], "Fixed commit": "7de67084315ec4240356b5260c4a2a6f35dbf349", "Url": "https://api.github.com/repos/ser316asu/Moabit_SER316", "Date": "2017-04-27T07:24:51Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (cachedType == null) { com.alibaba.fastjson.TypeReference.classTypeCache.putIfAbsent(oriType, oriType); cachedType = com.alibaba.fastjson.TypeReference.classTypeCache.get(oriType); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/2536/buggy-version/src.main.java.com.alibaba.fastjson.TypeReference.java", "BodyUseAPI": [], "Fixed commit": "89576f231c362cbfd229c299561254f91f42d7ce", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2017-06-23T15:10:02Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.coffees) >= 0) { this.coffees += java.lang.Math.max(((this.coffees) + coffee), 0); }else { this.coffees += coffee; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/765/buggy-version/src.main.java.Player.java", "BodyUseAPI": ["java.lang.Math.max(int,int)"], "Fixed commit": "68528de87b6514d877d07062f5054c12c51b747b", "Url": "https://api.github.com/repos/ZardozSpeaks/AppocalypseNow_java", "Date": "2016-03-10T23:17:51Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.beers) >= 0) { this.beers += java.lang.Math.max(((this.beers) + beer), 0); }else { this.beers += beer; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/765/buggy-version/src.main.java.Player.java", "BodyUseAPI": ["java.lang.Math.max(int,int)"], "Fixed commit": "68528de87b6514d877d07062f5054c12c51b747b", "Url": "https://api.github.com/repos/ZardozSpeaks/AppocalypseNow_java", "Date": "2016-03-10T23:17:51Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.doughnuts) >= 0) { this.doughnuts = java.lang.Math.max(((this.doughnuts) + doughnut), 0); }else { this.doughnuts += doughnut; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/765/buggy-version/src.main.java.Player.java", "BodyUseAPI": ["java.lang.Math.max(int,int)"], "Fixed commit": "68528de87b6514d877d07062f5054c12c51b747b", "Url": "https://api.github.com/repos/ZardozSpeaks/AppocalypseNow_java", "Date": "2016-03-10T23:17:51Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.kind_bud) >= 0) { this.kind_bud += java.lang.Math.max(((this.kind_bud) + nugs), 0); }else { this.kind_bud += nugs; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/765/buggy-version/src.main.java.Player.java", "BodyUseAPI": ["java.lang.Math.max(int,int)"], "Fixed commit": "68528de87b6514d877d07062f5054c12c51b747b", "Url": "https://api.github.com/repos/ZardozSpeaks/AppocalypseNow_java", "Date": "2016-03-10T23:17:51Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cellVal.equals(\"|||\")) { cellVal = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/7475/buggy-version/GAE.src.org.waterforpeople.mapping.dataexport.RawDataSpreadsheetImporter.java", "BodyUseAPI": [], "Fixed commit": "c14233c1cad860d9e2e972a65f98b9667d97f52b", "Url": "https://api.github.com/repos/akvo/akvo-flow", "Date": "2013-05-10T15:03:32Z"},
{"Line": "=>2203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cls != curCls) idxName = ((cls.getSimpleName()) + \"_\") + idxName;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/5112/buggy-version/modules.core.src.main.java.org.apache.ignite.configuration.CacheConfiguration.java", "BodyUseAPI": ["java.lang.Class<?>.getSimpleName()"], "Fixed commit": "1cd3cac534403172145481310b597b6175306222", "Url": "https://api.github.com/repos/gridgain/apache-ignite", "Date": "2017-04-19T16:44:30Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((properties) == null) properties = new java.util.Properties(defaultProperties);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/4112/buggy-version/src.main.java.socio.Config.java", "BodyUseAPI": [], "Fixed commit": "e496f85fd00115855ef244c307cf7ac9ae2b091c", "Url": "https://api.github.com/repos/heussd/socio", "Date": "2011-10-27T19:51:25Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (serv_ip.equals(\"\")) { serv_ip = \"120.79.58.235\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/3906/buggy-version/src.fileManage.Login.java", "BodyUseAPI": [], "Fixed commit": "50112a8d773e478a129be2c176b00e1b0e49cb0b", "Url": "https://api.github.com/repos/InverseBlade/IDEA-JavaExp", "Date": "2017-12-21T11:47:01Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (serv_ip == null) java.lang.System.exit(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/3906/buggy-version/src.fileManage.Login.java", "BodyUseAPI": [], "Fixed commit": "50112a8d773e478a129be2c176b00e1b0e49cb0b", "Url": "https://api.github.com/repos/InverseBlade/IDEA-JavaExp", "Date": "2017-12-21T11:47:01Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (e.canBuild()) { org.bukkit.Bukkit.getScheduler().runTaskLater(this, new java.lang.Runnable() { @java.lang.Override public void run() { if (e.isCancelled()) { return; } placeCrate(e.getBlockPlaced().getLocation()); getConfig().set(\"crates.n\", ((getConfig().getInt(\"crates.n\")) + 1)); } }, 2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/577/buggy-version/src.me.MiniDigger.Crates.Crates.java", "BodyUseAPI": ["e.getBlockPlaced().getLocation()", "org.bukkit.event.block.BlockPlaceEvent.getBlockPlaced()", "org.bukkit.Bukkit.getScheduler().runTaskLater(me.MiniDigger.Crates.Crates,java.lang.Runnable,int)", "me.MiniDigger.Crates.Crates.3.placeCrate(e.getBlockPlaced().getLocation())", "org.bukkit.event.block.BlockPlaceEvent.isCancelled()"], "Fixed commit": "3932340e6a2ec0f981da98d277945e7135f6157c", "Url": "https://api.github.com/repos/MiniDigger/MoreCrates", "Date": "2014-05-04T16:12:05Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (e.isCancelled()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/577/buggy-version/src.me.MiniDigger.Crates.Crates.java", "BodyUseAPI": [], "Fixed commit": "3932340e6a2ec0f981da98d277945e7135f6157c", "Url": "https://api.github.com/repos/MiniDigger/MoreCrates", "Date": "2014-05-04T16:12:05Z"},
{"Line": "=>271", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (e.canBuild()) { org.bukkit.Bukkit.getScheduler().runTaskLater(this, new java.lang.Runnable() { @java.lang.Override public void run() { if (e.isCancelled()) { return; } placeEnderCrate(e.getBlockPlaced().getLocation()); getConfig().set(\"endercrates.n\", ((getConfig().getInt(\"endercrates.n\")) + 1)); } }, 2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/577/buggy-version/src.me.MiniDigger.Crates.Crates.java", "BodyUseAPI": ["org.bukkit.Bukkit.getScheduler().runTaskLater(me.MiniDigger.Crates.Crates,java.lang.Runnable,int)", "e.getBlockPlaced().getLocation()", "me.MiniDigger.Crates.Crates.4.placeEnderCrate(e.getBlockPlaced().getLocation())", "org.bukkit.event.block.BlockPlaceEvent.getBlockPlaced()", "org.bukkit.event.block.BlockPlaceEvent.isCancelled()"], "Fixed commit": "3932340e6a2ec0f981da98d277945e7135f6157c", "Url": "https://api.github.com/repos/MiniDigger/MoreCrates", "Date": "2014-05-04T16:12:05Z"},
{"Line": "=>276", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (e.isCancelled()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/577/buggy-version/src.me.MiniDigger.Crates.Crates.java", "BodyUseAPI": [], "Fixed commit": "3932340e6a2ec0f981da98d277945e7135f6157c", "Url": "https://api.github.com/repos/MiniDigger/MoreCrates", "Date": "2014-05-04T16:12:05Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (researchProductionRate == 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/4544/buggy-version/src.main.game.entities.structures.University.java", "BodyUseAPI": [], "Fixed commit": "8b34fc03cb2c4c367076aced17a09bd0830211ee", "Url": "https://api.github.com/repos/COP4331-OOP-Project/Pandamonium", "Date": "2017-03-14T20:59:56Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((properties.get(\"rendering\")) != null) { isRendering = ((boolean) (properties.get(\"rendering\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/8382/buggy-version/robolectric-annotations.src.main.java.org.robolectric.annotation.Config.java", "BodyUseAPI": ["java.util.Properties.get(java.lang.String)"], "Fixed commit": "6aea15a251a1d89ea0838ef7617acc3bd060b053", "Url": "https://api.github.com/repos/zhongyu05/robolectric", "Date": "2015-08-05T00:43:01Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (player != null) { org.bukkit.entity.Player p = getPlayer(); return (p != null) && (player.canSee(p)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/4476/buggy-version/src.com.massivecraft.factions.zcore.persist.PlayerEntity.java", "BodyUseAPI": ["org.bukkit.entity.Player.canSee(org.bukkit.entity.Player)"], "Fixed commit": "6d96cfab0a3952dafecca7bf272b89b2fd847b96", "Url": "https://api.github.com/repos/MineSworn/SwornNations", "Date": "2014-01-06T07:11:44Z"},
{"Line": "=>2684", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.archicontribs.database.DBPlugin.areEqual(databaseEntry.getDriver(), \"neo4j\")) { result = select(\"MATCH (t:images {path:?}) RETURN t.path\", path); }else { result = select(((\"SELECT path FROM \" + (schema)) + \"images WHERE path = ? \"), path); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/3334/buggy-version/v2.sources.src.org.archicontribs.database.DBDatabaseConnection.java", "BodyUseAPI": [], "Fixed commit": "d6119fd6b44887627852bbde6cb8d5097e4846a6", "Url": "https://api.github.com/repos/archi-contribs/database-plugin", "Date": "2017-07-01T12:47:55Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.awt.Point.getX()", "java.awt.Point.getY()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((0 < newY) && (newY < (getMapHeight()))) && (!(mapCollision(oldX, newY)))) { if (!(((!(mapCollision(newX, oldY))) && (!(mapCollision(oldX, newY)))) && (mapCollision(newX, newY)))); { returnY = newY; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/1595/buggy-version/TisButAScratch.src.main.java.model.Room.java", "BodyUseAPI": ["model.Room.mapCollision(int,int)", "model.Room.mapCollision(int,int)"], "Fixed commit": "1b4962841b9781117f41347bd91c5fe7fb3cdf38", "Url": "https://api.github.com/repos/Tejpbit/TDA367", "Date": "2014-03-30T21:45:20Z"},
{"Line": "=>383", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["row.execute().getResult()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((columns.size()) <= 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/8199/buggy-version/src.main.java.com.amebame.triton.service.cassandra.TritonCassandraClient.java", "BodyUseAPI": [], "Fixed commit": "60841fb9ca1936c439064335de2fe34b12651d7e", "Url": "https://api.github.com/repos/ameba-proteus/triton-server", "Date": "2013-02-13T05:21:21Z"},
{"Line": "=>317", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.alibaba.druid.sql.visitor.SQLSelectOrderByItem.getExpr()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((expr instanceof com.alibaba.druid.sql.dialect.mysql.ast.expr.MySqlExpr) || (expr instanceof com.alibaba.druid.sql.dialect.oracle.ast.expr.OracleExpr)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/6352/buggy-version/src.main.java.com.alibaba.druid.sql.visitor.SchemaStatVisitor.java", "BodyUseAPI": [], "Fixed commit": "c2fb03996518276c4e74c0459bc483f8f4c20027", "Url": "https://api.github.com/repos/wenshao/druid", "Date": "2016-12-04T08:18:08Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (addStatements[i][1].contains(uk.ac.york.mhe504.dblm.annotations.ADD_ALL_CHAR)) { do { java.util.List<java.lang.String> lst = new java.util.ArrayList<java.lang.String>(); lst.add(addStatements[i][0]); lst.add(addStatements[i][1]); statementGroup.add(lst); i++; } while (((i < (addStatements.length)) && (!(addStatements[i][1].contains(uk.ac.york.mhe504.dblm.annotations.ADD_ALL_CHAR)))) && (addStatements[i][1].contains(\"ADD:\")) ); i--; }else { java.util.List<java.lang.String> lst = new java.util.ArrayList<java.lang.String>(); lst.add(addStatements[i][0]); lst.add(addStatements[i][1]); statementGroup.add(lst); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/4629/buggy-version/src.uk.ac.york.mhe504.dblm.annotations.AddAnnotationProcessor.java", "BodyUseAPI": ["java.lang.String.contains(uk.ac.york.mhe504.dblm.annotations.ADD_ALL_CHAR)", "java.util.List<java.lang.String>.add(java.lang.String)", "java.util.List<java.lang.String>.add(java.lang.String)", "java.util.List<java.lang.String>.add(java.lang.String)", "java.util.List<java.lang.String>.add(java.lang.String)", "java.lang.String.contains(java.lang.String)"], "Fixed commit": "11344e4a55ef120b41f1a53a8d7455e4f8a7d553", "Url": "https://api.github.com/repos/mhe504/DBLModeller", "Date": "2015-11-12T17:23:42Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((children[i]) != null) { (children[i].refcount)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/610/buggy-version/src.main.java.com.ankurdave.part.ArtNode48.java", "BodyUseAPI": [], "Fixed commit": "c0f5213fae7374bcf3c17202f32cc5c1267de9fe", "Url": "https://api.github.com/repos/ankurdave/part", "Date": "2015-04-03T20:16:18Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((children[i]) != null) { (children[i].refcount)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/610/buggy-version/src.main.java.com.ankurdave.part.ArtNode48.java", "BodyUseAPI": [], "Fixed commit": "c0f5213fae7374bcf3c17202f32cc5c1267de9fe", "Url": "https://api.github.com/repos/ankurdave/part", "Date": "2015-04-03T20:16:18Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((children[i]) != null) { freed += children[i].decrement_refcount(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/610/buggy-version/src.main.java.com.ankurdave.part.ArtNode48.java", "BodyUseAPI": ["children[i].decrement_refcount()"], "Fixed commit": "c0f5213fae7374bcf3c17202f32cc5c1267de9fe", "Url": "https://api.github.com/repos/ankurdave/part", "Date": "2015-04-03T20:16:18Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (path.isEmpty()) { path += \":\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/3497/buggy-version/src.com.valkryst.VController.ControllerHelper.java", "BodyUseAPI": [], "Fixed commit": "a495681810198716a14fba0afd6164523b1d8964", "Url": "https://api.github.com/repos/Valkryst/VController", "Date": "2017-10-03T15:51:33Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getDescriptor().getSector()) == 1) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/5497/buggy-version/clas-fc.src.org.jlab.ecmon.utils.CalibrationData.java", "BodyUseAPI": [], "Fixed commit": "8fb6dbdbceadbd23fca0fb1116f995e7be58dbc5", "Url": "https://api.github.com/repos/forcar/fc", "Date": "2015-12-31T02:57:32Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((request.getCookies()) != null) { for (javax.servlet.http.Cookie cookie : request.getCookies()) { out.printf(FORMAT, cookie.getName(), cookie.getValue()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/91/buggy-version/src.main.java.jetbrick.web.servlet.RequestDumpUtils.java", "BodyUseAPI": ["javax.servlet.http.HttpServletRequest.getCookies()"], "Fixed commit": "bd86205606ec8f813d6084b8f68c57498b32245d", "Url": "https://api.github.com/repos/subchen/jetbrick-commons", "Date": "2017-09-15T03:20:11Z"},
{"Line": "=>456", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (display) { display(chapter_1, getVerseBasedOnScroll(), false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/8466/buggy-version/Alkitab.src.yuku.alkitab.base.IsiActivity.java", "BodyUseAPI": [], "Fixed commit": "824930b46c77135c2c00e6196b9335d9eee03b86", "Url": "https://api.github.com/repos/yukuku/androidbible", "Date": "2013-03-13T10:23:45Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.e4.core.commands.EHandlerService.canExecute(org.eclipse.core.commands.ParameterizedCommand,org.eclipse.e4.core.contexts.IEclipseContext)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!commandEnabled) { for (int i = 0; i < 100; i++) { org.eclipse.swt.widgets.Display.getCurrent().readAndDispatch(); commandEnabled = handlerService.canExecute(cmd, staticContext); if (commandEnabled) { break; } } commandEnabled = handlerService.canExecute(cmd, staticContext); if (!commandEnabled) { throw new java.lang.RuntimeException(java.lang.String.format(\"Command: %s not enabled.\", cmd.getId())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/5859/buggy-version/plugins.org.eclipse.e4.ui.macros.src.org.eclipse.e4.ui.macros.internal.keybindings.MacroInstructionForParameterizedCommand.java", "BodyUseAPI": [], "Fixed commit": "2e6409dc734bd4076a79eefbdb15b710ada4175b", "Url": "https://api.github.com/repos/fabioz/EclipseMacros", "Date": "2017-03-06T16:31:04Z"},
{"Line": "=>478", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.techjar.ledcm.LEDCubeManager.displayMode) == null) com.techjar.ledcm.LEDCubeManager.displayMode = new org.lwjgl.opengl.DisplayMode(1024, 768);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/355/buggy-version/src.com.techjar.ledcm.LEDCubeManager.java", "BodyUseAPI": [], "Fixed commit": "875111c3fbcfe1429c9e5025b813b9bdda92900c", "Url": "https://api.github.com/repos/Techjar/LEDCubeManager", "Date": "2015-05-20T00:23:26Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((options.getInterval()) != 0) { de.appplant.cordova.plugin.localnotification.LocalNotification.persist(options.getId(), setInitDate(args)); }else if (new java.util.Date(options.getDate()).before(now)) { de.appplant.cordova.plugin.localnotification.LocalNotification.unpersist(options.getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/22/buggy-version/src.android.DeleteIntentReceiver.java", "BodyUseAPI": ["de.appplant.cordova.plugin.localnotification.Options.getId()", "de.appplant.cordova.plugin.localnotification.Options.getId()", "java.util.Date.before(java.util.Date)", "de.appplant.cordova.plugin.localnotification.Options.getDate()", "de.appplant.cordova.plugin.localnotification.LocalNotification.unpersist(options.getId())", "de.appplant.cordova.plugin.localnotification.LocalNotification.persist(options.getId(),org.json.JSONObject)"], "Fixed commit": "0fd4ac32d493c11961e66485f193ded7134e3826", "Url": "https://api.github.com/repos/evothings/cordova-plugin-local-notifications", "Date": "2014-12-28T17:18:06Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.fenixedu.academic.domain.Person.readByDocumentIdNumber(form.getDocumentIdNumber())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((found.size()) != 1) || ((found.iterator().next()) != (org.fenixedu.bennu.core.security.Authenticate.getUser().getPerson()))) { result.add(org.fenixedu.ulisboa.specifications.util.ULisboaSpecificationsUtil.bundle(\"error.candidacy.workflow.PersonalInformationForm.identificationDocumentNumber.exists\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/6969/buggy-version/src.main.java.org.fenixedu.ulisboa.specifications.ui.firstTimeCandidacy.forms.personalinfo.PersonalInformationFormController.java", "BodyUseAPI": [], "Fixed commit": "5c6950514a1acfb68bf4a23c3f960d8497067509", "Url": "https://api.github.com/repos/qub-it/fenixedu-ulisboa-specifications", "Date": "2016-09-11T21:19:20Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (alive) { last_share_timestamp = give_me_coins.dashboard.JSONHelper.getVal(para_workerInfos, \"last_share_timestamp\", ((long) (0))); }else { last_share_timestamp = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/7216/buggy-version/src.give_me_coins.dashboard.GiveMeCoinsWorkerInfo.java", "BodyUseAPI": [], "Fixed commit": "d69f9cb0d25fcb33d4e30272f2528323463ceaff", "Url": "https://api.github.com/repos/Letme/give-me-coinsMonitoringApp", "Date": "2013-11-24T16:58:26Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cz.nudz.www.trainingapp.data.DataExporter.verifyStoragePermissions(this)) { dataExporter.export(getSessionManager().getUserDetails().get(SessionManager.KEY_USERNAME)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/2939/buggy-version/app.src.main.java.cz.nudz.www.trainingapp.main.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "4e52f9ba6be7031a59312126984ed5991ecd6929", "Url": "https://api.github.com/repos/ayraz/TrainingApp", "Date": "2017-10-29T17:55:49Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (null != handler) { fireEvent(user, handler); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/7276/buggy-version/src.main.java.org.osgl.aaa.spring.web.A3SessionManager.java", "BodyUseAPI": ["org.osgl.aaa.spring.web.A3SessionManager.fireEvent(org.osgl.aaa.Principal,java.lang.Object)"], "Fixed commit": "3a8cb0bf35e2aa1790e314237027ff1e37cda20b", "Url": "https://api.github.com/repos/greenlaw110/spring-aaa", "Date": "2014-02-26T23:47:18Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((teachersInSpinner) == null) { teachersInSpinner = fillSpinner(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/6043/buggy-version/app.src.main.java.schmitt_florian.schoolplanner.gui.SubjectDetailsActivity.java", "BodyUseAPI": [], "Fixed commit": "da09e45a9fdcffd01e0ba062dcdf9bdbcded7836", "Url": "https://api.github.com/repos/Schmitt-Florian/SchoolPlanner", "Date": "2017-10-13T13:16:50Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (applicants.isEmpty()) return new java.lang.String();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/2359/buggy-version/src.main.java.com.silicolife.textmining.processes.ir.epopatent.opshandler.OPSSearchHandler.java", "BodyUseAPI": [], "Fixed commit": "0e99363ff3a94075657abee9822350698c71695c", "Url": "https://api.github.com/repos/biotextmining/processes", "Date": "2017-09-20T17:11:05Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((cAttribute.getDifferentialPath()) == null) { com.nedap.archie.rminfo.RMAttributeInfo attributeInfo = lookup.getAttributeInfo(owningObject.getRmTypeName(), cAttribute.getRmAttributeName()); if (attributeInfo == null) { result.add(new com.nedap.archie.archetypevalidator.ValidationMessage(com.nedap.archie.archetypevalidator.ErrorType.VCARM, cAttribute.getPath(), ((((cAttribute.getRmAttributeName()) + \" is not a known attribute of \") + (owningObject.getRmTypeName())) + \" or it is has not been implemented in Archie\"))); }else { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/5356/buggy-version/tools.src.main.java.com.nedap.archie.archetypevalidator.validations.ModelConformanceValidation.java", "BodyUseAPI": ["com.nedap.archie.aom.CAttribute.getRmAttributeName()", "com.nedap.archie.aom.CAttribute.getPath()", "com.nedap.archie.rminfo.ModelInfoLookup.getAttributeInfo(owningObject.getRmTypeName(),cAttribute.getRmAttributeName())", "com.nedap.archie.aom.CAttribute.getRmAttributeName()", "java.util.List<com.nedap.archie.archetypevalidator.ValidationMessage>.add(com.nedap.archie.archetypevalidator.ValidationMessage)"], "Fixed commit": "021c38e297e332aa0c9f1bb99bd42e54d746e36f", "Url": "https://api.github.com/repos/nedap/archie", "Date": "2017-10-28T10:41:03Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (modifierToRemove != null) AdminShop.adminShopModifiers.remove(modifierToRemove);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/3092/buggy-version/src.main.java.io.github.hsyyid.adminshop.cmdexecutors.SetItemShopExecutor.java", "BodyUseAPI": ["AdminShop.adminShopModifiers.remove(io.github.hsyyid.adminshop.utils.AdminShopModifierObject)"], "Fixed commit": "d40a926dad78fbcc0ad01dd72be306d39ba6b65e", "Url": "https://api.github.com/repos/hsyyid/AdminShop", "Date": "2016-01-14T02:46:24Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((myCurrentTipUi) != null) && (myCurrentTipUi.wasFadedIn())) { if (hideCurrent(me, null, null)) { maybeShowFor(c, me); } }else { if (!(myCurrentTipIsCentered)) { myX = me.getX(); myY = me.getY(); if (((c instanceof javax.swing.JComponent) && ((((javax.swing.JComponent) (c)).getToolTipText(me)) == null)) && (((myQueuedTooltip) == null) || (!(myQueuedTooltip.isHint())))) { hideCurrent(me, null, null); }else { maybeShowFor(c, me); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/3153/buggy-version/platform.platform-impl.src.com.intellij.ide.IdeTooltipManager.java", "BodyUseAPI": [], "Fixed commit": "f7b2f8e71ad849f3409713be135111e032718d28", "Url": "https://api.github.com/repos/JetBrains/intellij-community", "Date": "2012-04-10T13:16:53Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (jsonPacket == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/1440/buggy-version/libkoya.src.main.java.fr.itldev.koya.services.impl.AlfrescoRestService.java", "BodyUseAPI": [], "Fixed commit": "90638df486e4e3254a775299216535741dd2b58a", "Url": "https://api.github.com/repos/Itldev/Koya", "Date": "2014-11-20T16:34:11Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.ByteArrayOutputStream.toByteArray()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((cache.length) == 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/3988/buggy-version/src.com.javaprophet.javawebserver.plugins.javaloader.ChunkedOutputStream.java", "BodyUseAPI": [], "Fixed commit": "09b4a6e72af0e1af52b117dcc0e22c89d30b0e00", "Url": "https://api.github.com/repos/Protryon/AvunaHTTPD-Java", "Date": "2015-02-15T01:53:12Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(railo.commons.lang.StringUtil.isAscci(str))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/2607/buggy-version/railo-java.railo-core.src.railo.runtime.net.http.ReqRspUtil.java", "BodyUseAPI": [], "Fixed commit": "2fca81d5f7a3c4b0ba3dfbad202cf7a13afc9397", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2011-10-27T13:35:07Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (railo.commons.lang.StringUtil.isEmpty(str, true)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/2607/buggy-version/railo-java.railo-core.src.railo.runtime.net.http.ReqRspUtil.java", "BodyUseAPI": [], "Fixed commit": "2fca81d5f7a3c4b0ba3dfbad202cf7a13afc9397", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2011-10-27T13:35:07Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.resolver) == null) { initializeResourceResolver(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/2038/buggy-version/core.src.main.java.io.neba.core.sling.AdministrativeResourceResolver.java", "BodyUseAPI": [], "Fixed commit": "ceea14e587ca54c2e1bd021a6fb181132ca7934e", "Url": "https://api.github.com/repos/unic/neba", "Date": "2016-01-12T09:20:39Z"},
{"Line": "=>295", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class<?>.getPackage()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (packageDeclaration != null) { javax.xml.bind.annotation.adapters.XmlJavaTypeAdapters adapters = packageDeclaration.getAnnotation(javax.xml.bind.annotation.adapters.XmlJavaTypeAdapters.class); if (adapters != null) { for (javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter candidate : adapters.value()) { if ((candidate != null) && (candidate.type().equals(m.getGenericReturnType()))) { adapter = candidate; break; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/4158/buggy-version/rt.databinding.jaxb.src.main.java.org.apache.cxf.jaxb.Utils.java", "BodyUseAPI": ["java.lang.Package.getAnnotation(java.lang.Class)"], "Fixed commit": "41151051f82f4b8ac2a2f3c51a081a7cdafaa562", "Url": "https://api.github.com/repos/apache/cxf", "Date": "2017-09-25T12:09:34Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.android.gms.maps.GoogleMap.getMyLocation()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (current_location == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/3148/buggy-version/app.src.main.java.me.anonim1133.zacja.modes.CTF.MapsActivity.java", "BodyUseAPI": [], "Fixed commit": "e5df86592a03a95b18341f748fb4195b12179c3d", "Url": "https://api.github.com/repos/anonim1133/Zacja", "Date": "2015-05-17T20:25:37Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"\\\\\".equals(currChar)) currChar = \"\\\\\\\\\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/1185/buggy-version/src.main.java.edu.berkeley.cs.nlp.ocular.lm.CorpusCounter.java", "BodyUseAPI": [], "Fixed commit": "d4eebb0035cce6eff629d15c6639e286644e642b", "Url": "https://api.github.com/repos/tberg12/ocular", "Date": "2017-01-27T03:49:38Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (savedInstanceState != null) { calculator_result.setText(savedInstanceState.getString(\"last_screen_result\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/6263/buggy-version/app.src.main.java.com.arifsubroto.baseelevencalc.MainActivity.java", "BodyUseAPI": ["android.os.Bundle.getString(java.lang.String)", "android.widget.TextView.setText(savedInstanceState.getString(\"last_screen_result\"))"], "Fixed commit": "23c59ba68de1e66671517c1395468daa0a2b77bf", "Url": "https://api.github.com/repos/arifsubroto/BaseElevenCalc", "Date": "2017-04-19T05:42:30Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["calculator_result.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((issetOperator(lastScreen)) && (!(isOperator(lastScreen.substring(((lastScreen.length()) - 1), lastScreen.length()))))) { java.lang.String op = validExpression(calculator_result.getText().toString()); java.lang.String hasil = doCalc(calculator_result.getText().toString(), op); calculator_result.setText(hasil); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/6263/buggy-version/app.src.main.java.com.arifsubroto.baseelevencalc.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "23c59ba68de1e66671517c1395468daa0a2b77bf", "Url": "https://api.github.com/repos/arifsubroto/BaseElevenCalc", "Date": "2017-04-19T05:42:30Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((message.getIn_reply_to()) < 0) replyTo = \" NULL\"; else replyTo = \" \" + (message.getIn_reply_to());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/7955/buggy-version/src.main.java.Data.MySQLMessage.java", "BodyUseAPI": ["Application.Message.getIn_reply_to()"], "Fixed commit": "9513038881526809ab65460820cf340f465529da", "Url": "https://api.github.com/repos/westonkd/GitCoupled", "Date": "2015-03-30T21:13:05Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["app.com.tvrecyclerview.TvRecyclerView.getLayoutManager()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (layoutManager != null) { if (layoutManager instanceof android.support.v7.widget.LinearLayoutManager) { firstVisiblePos = ((android.support.v7.widget.LinearLayoutManager) (layoutManager)).findFirstVisibleItemPosition(); }else if (layoutManager instanceof app.com.tvrecyclerview.ModuleLayoutManager) { firstVisiblePos = ((app.com.tvrecyclerview.ModuleLayoutManager) (layoutManager)).findFirstVisibleItemPosition(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/2114/buggy-version/tvrecyclerview.src.main.java.app.com.tvrecyclerview.TvRecyclerView.java", "BodyUseAPI": [], "Fixed commit": "79c426913616a904b9b308040f3eeeea50434355", "Url": "https://api.github.com/repos/henryblue/TvRecyclerView", "Date": "2017-09-07T02:36:55Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (loaded) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/7171/buggy-version/jestful-client-nio.src.main.java.org.qfox.jestful.client.nio.connection.JestfulNioHttpClientResponse.java", "BodyUseAPI": [], "Fixed commit": "fef9e2b49529ae20dafaf33ef64ed5bdda3681a6", "Url": "https://api.github.com/repos/core-lib/jestful", "Date": "2017-11-24T15:05:01Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tag == null) { tag = \" \"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/778/buggy-version/src.main.java.com.forum.repository.PostQuestion.java", "BodyUseAPI": [], "Fixed commit": "ea023452a44b03d8220097d503308475f488ecf4", "Url": "https://api.github.com/repos/step2012-chennai/forum", "Date": "2013-04-13T12:46:31Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.os.Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.LOLLIPOP)) { mRatingBar.setVisibility(View.VISIBLE); }else { mRatingBar.setVisibility(View.INVISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/1582/buggy-version/app.src.main.java.com.estore.walmart.views.fragments.ProductContentFragment.java", "BodyUseAPI": [], "Fixed commit": "19fa55da8bfee8004eadffb9c063cb1c7d0d2304", "Url": "https://api.github.com/repos/Suyambu-Vignesh/WalmartPoc", "Date": "2017-06-26T17:56:18Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.System.getProperty(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (\"false\".equals(createProjectProperty)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/2488/buggy-version/org.mwc.debrief.core.src.org.mwc.debrief.core.DebriefPlugin.java", "BodyUseAPI": [], "Fixed commit": "885866b2f9c53c919e6b4f769fa6ad5c7312d959", "Url": "https://api.github.com/repos/kumarbabu/debrief", "Date": "2014-10-27T15:21:16Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["co.smartreceipts.android.persistence.database.tables.AbstractSqlTable<ModelType, PrimaryKeyType>.updateBlocking(ModelType,ModelType,co.smartreceipts.android.persistence.database.operations.DatabaseOperationMetadata)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (updatedItem instanceof co.smartreceipts.android.sync.model.Syncable) { final co.smartreceipts.android.sync.model.Syncable syncable = ((co.smartreceipts.android.sync.model.Syncable) (newModelType)); if (syncable.getSyncState().isMarkedForDeletion(SyncProvider.GoogleDrive)) { isMarkedForDeletion = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/1908/buggy-version/smartReceiptsLibrary.src.main.java.co.smartreceipts.android.persistence.database.tables.TripForeignKeyAbstractSqlTable.java", "BodyUseAPI": [], "Fixed commit": "6b1118512d4d90bb4baba56f33e4b1cb3e747f6e", "Url": "https://api.github.com/repos/wbaumann/SmartReceiptsLibrary", "Date": "2016-09-23T18:37:23Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fieldWorker.getPassword().isEmpty()) || (fieldWorker.getConfirmPassword().isEmpty())) { throw new org.openhds.controller.exception.ConstraintViolations(\"Password or Confirmation is empty.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/5613/buggy-version/controller.src.main.java.org.openhds.controller.service.refactor.impl.FieldWorkerServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "41c335d46cf526ba0380813c315a3bd86c439f8b", "Url": "https://api.github.com/repos/SwissTPH/openhds-server", "Date": "2014-11-22T10:51:18Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (bassebombecraft.world.WorldUtils.isWorldAtClientSide(worldIn)) { return super.onItemRightClick(worldIn, playerIn, handIn); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/1331/buggy-version/bassebombecraft-1.8.src.main.java.bassebombecraft.item.book.GenericRightClickedBook.java", "BodyUseAPI": ["net.minecraft.item.Item.onItemRightClick(net.minecraft.world.World,net.minecraft.entity.player.EntityPlayer,net.minecraft.util.EnumHand)"], "Fixed commit": "34f582b8965567bfdd3bbae32ccd4cbbb2156dd4", "Url": "https://api.github.com/repos/athrane/bassebombecraft", "Date": "2017-02-23T20:04:10Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(java.util.Arrays.equals(org.talend.esb.servicelocator.client.internal.zk.ZKBackend.EMPTY_CONTENT, content))) && ((content.length) != 0)) setNodeData(path, content);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/6076/buggy-version/locator.src.main.java.org.talend.esb.servicelocator.client.internal.zk.ZKBackend.java", "BodyUseAPI": ["org.talend.esb.servicelocator.client.internal.zk.ZKBackend.setNodeData(org.talend.esb.servicelocator.client.internal.NodePath,byte[])"], "Fixed commit": "662bbb69edd9f1f97b499ec2331721bfe4b5ab71", "Url": "https://api.github.com/repos/Talend/tesb-rt-se", "Date": "2013-12-06T14:06:24Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.verapdf.cos.COSObject.at(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((element.getType()) == (org.verapdf.cos.COSObjType.COS_ARRAY)) { if (!(checkCOSArrayInOrder(element).booleanValue())) { return java.lang.Boolean.FALSE; } }else if ((element.getType()) == (org.verapdf.cos.COSObjType.COS_STRING)) { if (!(checkCOSStringInOrder(element).booleanValue())) { return java.lang.Boolean.FALSE; } }else if ((element.getType()) == (org.verapdf.cos.COSObjType.COS_DICT)) { if (!(checkCOSDictionaryInOrder(element).booleanValue())) { return java.lang.Boolean.FALSE; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/7879/buggy-version/validation-model.src.main.java.org.verapdf.gf.model.impl.pd.GFPDOCConfig.java", "BodyUseAPI": ["java.lang.Boolean.booleanValue()", "org.verapdf.gf.model.impl.pd.GFPDOCConfig.checkCOSStringInOrder(org.verapdf.cos.COSObject)", "org.verapdf.gf.model.impl.pd.GFPDOCConfig.checkCOSDictionaryInOrder(org.verapdf.cos.COSObject)", "org.verapdf.gf.model.impl.pd.GFPDOCConfig.checkCOSArrayInOrder(org.verapdf.cos.COSObject)", "org.verapdf.cos.COSObject.getType()", "java.lang.Boolean.booleanValue()", "java.lang.Boolean.booleanValue()", "org.verapdf.cos.COSObject.getType()"], "Fixed commit": "06d0f1a34acceeff89373722d0d4dcc330f7662e", "Url": "https://api.github.com/repos/veraPDF/veraPDF-validation", "Date": "2016-12-14T10:43:28Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.sqlite.SQLiteDatabase.rawQuery(java.lang.String,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((cursor.getCount()) > 0) { cursor.moveToLast(); lastindex = cursor.getInt(0); mydatabase.execSQL(((((((((\"INSERT INTO Verifiche(Id,Materia,Descrizione,Data) VALUES(\" + (lastindex + 1)) + \",'\") + materia) + \"','\") + descrizione) + \"','\") + data) + \"');\")); }else { lastindex = 0; mydatabase.execSQL(((((((((\"INSERT INTO Verifiche(Id,Materia,Descrizione,Data) VALUES(\" + lastindex) + \",'\") + materia) + \"','\") + descrizione) + \"','\") + data) + \"');\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/55/buggy-version/app.src.main.java.nicolaiacovelli.squola.Aggiungi_verifica.java", "BodyUseAPI": ["android.database.Cursor.moveToLast()", "android.database.Cursor.getInt(int)"], "Fixed commit": "0ce2fec42ded04a7a162d4f81183229f77b8b71e", "Url": "https://api.github.com/repos/nico-iaco/Squola", "Date": "2017-04-11T17:28:39Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.sqlite.SQLiteDatabase.rawQuery(java.lang.String,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((cursor.getCount()) > 0) { cursor.moveToLast(); lastindex = cursor.getInt(0); mydatabase.execSQL(((((((((\"INSERT INTO Compiti(Id,Materia,Descrizione,Data) VALUES(\" + (lastindex + 1)) + \",'\") + materia) + \"','\") + descrizione) + \"','\") + data) + \"');\")); }else { lastindex = 0; mydatabase.execSQL(((((((((\"INSERT INTO Compiti(Id,Materia,Descrizione,Data) VALUES(\" + lastindex) + \"'\") + materia) + \"','\") + descrizione) + \"','\") + data) + \"');\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/55/buggy-version/app.src.main.java.nicolaiacovelli.squola.Aggiungi_compito.java", "BodyUseAPI": ["android.database.Cursor.getInt(int)", "android.database.Cursor.moveToLast()"], "Fixed commit": "0ce2fec42ded04a7a162d4f81183229f77b8b71e", "Url": "https://api.github.com/repos/nico-iaco/Squola", "Date": "2017-04-11T17:28:39Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((temporaryList.size()) != 0) { dateArray.add(temporaryList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/4432/buggy-version/Tasker.src.application.gui.CalendarViewPage.java", "BodyUseAPI": ["java.util.ArrayList<java.util.ArrayList<application.storage.Task>>.add(java.util.ArrayList<application.storage.Task>)"], "Fixed commit": "b167417028ff473bfc5807c6a02b0792700df305", "Url": "https://api.github.com/repos/cs2103jan2016-t16-4j/main", "Date": "2016-04-06T16:07:20Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.StringBuilder.length()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (length > 0) stringBuilder.deleteCharAt((length - 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/8636/buggy-version/src.com.lucidworks.analysis.AutoPhrasingQParserPlugin.java", "BodyUseAPI": ["java.lang.StringBuilder.deleteCharAt(int)"], "Fixed commit": "67fab63acf501690009c4b2bfe74eab5059a78db", "Url": "https://api.github.com/repos/jstrassburg/auto-phrase-tokenfilter", "Date": "2014-09-10T19:10:25Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((streamResponse.documentStream) != null) { streamResponse.documentStream.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/6450/buggy-version/crud.src.main.java.com.redhat.lightblue.rest.crud.cmd.FindCommand.java", "BodyUseAPI": ["streamResponse.documentStream.close()"], "Fixed commit": "92d2e09a3d62ba327232a80d846738ea4e58e041", "Url": "https://api.github.com/repos/lightblue-platform/lightblue-rest", "Date": "2017-10-05T16:31:08Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.entity.EntityExplodeEvent.getEntity()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (e instanceof org.bukkit.entity.TNTPrimed) name = \"TNT\"; else if (e instanceof org.bukkit.entity.Creeper) name = \"Creeper\"; else if (e instanceof org.bukkit.entity.Fireball) name = \"Ghast\"; else if (e instanceof org.bukkit.entity.EnderDragon) name = \"EnderDragon\"; else if ((e instanceof org.bukkit.entity.Wither) || (e instanceof org.bukkit.entity.WitherSkull)) name = \"Wither\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/3915/buggy-version/src.uk.co.oliwali.HawkEye.listeners.MonitorEntityListener.java", "BodyUseAPI": [], "Fixed commit": "3fb4cb8720245a37785cf026bfa55f36c5de6344", "Url": "https://api.github.com/repos/Muson/HawkReloaded", "Date": "2012-12-10T03:26:19Z"},
{"Line": "=>356", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (owner.isCorporation()) { marketOrders.removeAll(owner.getMarketOrders()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/8490/buggy-version/src.main.java.net.nikr.eve.jeveasset.data.profile.ProfileData.java", "BodyUseAPI": ["java.util.Set<net.nikr.eve.jeveasset.data.api.my.MyMarketOrder>.removeAll(owner.getMarketOrders())", "net.nikr.eve.jeveasset.data.api.accounts.OwnerType.getMarketOrders()"], "Fixed commit": "308468d25353e53fddf816d65ad0d89218390bd7", "Url": "https://api.github.com/repos/GoldenGnu/jeveassets", "Date": "2017-10-20T19:53:53Z"},
{"Line": "=>250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((deliverable.getOutput()) != null) { deliverableManager.saveDeliverableOutput(deliverable.getId(), deliverable.getOutput().getId(), this.getCurrentUser(), this.getJustification()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/7680/buggy-version/impactPathways.src.main.java.org.cgiar.ccafs.ap.action.planning.ProjectDeliverableAction.java", "BodyUseAPI": ["org.cgiar.ccafs.ap.data.manager.DeliverableManager.saveDeliverableOutput(deliverable.getId(),deliverable.getOutput().getId(),this.getCurrentUser(),this.getJustification())", "org.cgiar.ccafs.ap.data.model.Deliverable.getId()", "deliverable.getOutput().getId()", "org.cgiar.ccafs.ap.data.model.Deliverable.getOutput()"], "Fixed commit": "07a5b14bf6d5eb040f4fb1a70fa239d0b5947cad", "Url": "https://api.github.com/repos/CCAFS/ccafs-ap", "Date": "2015-11-17T19:20:18Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (hours[0].contains(\"h\")) { hour = hours[0]; }else { second = hours[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/1736/buggy-version/src.youtubeTimecodeParser.youtubeTimecodeParser.java", "BodyUseAPI": [], "Fixed commit": "218ad2c3cfa6c1dae89be0253a11621f4b19a8da", "Url": "https://api.github.com/repos/elgoupil/YoutubeTimecodeParser", "Date": "2017-09-30T13:24:59Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ID.getText().toString()", "firstName.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((first_name.equals(\"\")) || (id == \"\")) { com.ph.Utils.AlertDialogManager alert = new com.ph.Utils.AlertDialogManager(); alert.showAlertDialog(this, \"Error\", \"User name or ID is missing\"); }else sessionManager.createLoginSession(first_name, java.lang.Integer.parseInt(id));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/2772/buggy-version/app.src.main.java.com.ph.Activities.LoginActivity.java", "BodyUseAPI": ["com.ph.net.SessionManager.createLoginSession(java.lang.String,int)", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "327ac2ea3c6ff96a04dd69432f8b1b676abf8bd5", "Url": "https://api.github.com/repos/AnandSharma13/GOAL-Android-application", "Date": "2016-02-29T23:19:56Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (null != curUser) { for (com.sound.model.Tag tag : tags) { tag.setInterested(curUser.containTag(tag)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/1763/buggy-version/src.main.java.com.sound.service.endpoint.TagServiceEndpoint.java", "BodyUseAPI": ["com.sound.model.Tag.setInterested(curUser.containTag(tag))", "com.sound.model.User.containTag(com.sound.model.Tag)"], "Fixed commit": "4b33f00baf3248e645236a8cbedf2b53bf14ffad", "Url": "https://api.github.com/repos/wooice/soundService", "Date": "2014-02-26T16:01:43Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.kimeeo.kAndroid.rssDataProvider.RSSDataManager.getNextURL()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (url != null) { if (url != null) { try { org.mcsoxford.rss.RSSReader reader = new org.mcsoxford.rss.RSSReader(); org.mcsoxford.rss.RSSFeed feed = reader.load(url); com.kimeeo.kAndroid.rssDataProvider.RSSDataManager.BaseDataModel dataModel = new com.kimeeo.kAndroid.rssDataProvider.RSSDataManager.BaseDataModel(); dataModel.setFeed(feed); processDataManager(dataModel); } catch (org.mcsoxford.rss.RSSReaderException e) { setCanLoadNext(false); dataLoadError(null); } catch (java.lang.Exception e) { setCanLoadNext(false); dataLoadError(null); } }else { setCanLoadNext(false); dataLoadError(null); } }else { setCanLoadNext(false); dataLoadError(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/3068/buggy-version/library.src.main.java.com.kimeeo.kAndroid.rssDataProvider.RSSDataManager.java", "BodyUseAPI": ["org.mcsoxford.rss.RSSReader.load(java.lang.String)"], "Fixed commit": "68958912cd26db0bfd19ae4c9b47a8a554203813", "Url": "https://api.github.com/repos/kimeeo/RSSDataProvider", "Date": "2016-05-03T11:18:27Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (inCall) { hasHungUp = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/1219/buggy-version/android.com.rejh.callscreenoff.app.src.main.java.callscreenoff.rejh.com.callscreenoff.CsoService.java", "BodyUseAPI": [], "Fixed commit": "5025369dfad327a4bb0c6ec8cc4c17a0a7ac07d1", "Url": "https://api.github.com/repos/rejhgadellaa/CallScreenOff", "Date": "2015-10-24T03:06:56Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (savedInstanceState != null) ((android.webkit.WebView) (findViewById(R.id.webView1))).restoreState(savedInstanceState);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/410/buggy-version/android.src.com.imagine.flicks.MainActivity.java", "BodyUseAPI": ["((android.webkit.WebView) (findViewById(R.id.webView1))).restoreState(android.os.Bundle)"], "Fixed commit": "323d514267f5410262b3896af456cae729f26d3d", "Url": "https://api.github.com/repos/theultimatewarrior/flicks", "Date": "2013-11-11T00:02:48Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((out.isEnabled(SerializerFeature.WriteNullStringAsEmpty)) && (object instanceof java.lang.String[])) { out.writeString(\"\"); }else { out.append(\"null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/2072/buggy-version/src.main.java.com.alibaba.fastjson.serializer.ArraySerializer.java", "BodyUseAPI": ["com.alibaba.fastjson.serializer.SerializeWriter.writeString(java.lang.String)", "com.alibaba.fastjson.serializer.SerializeWriter.append(java.lang.String)"], "Fixed commit": "51e4c93fdffc4ca47648e9d544cd5bdaadf4b128", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2017-05-15T17:40:29Z"},
{"Line": "=>299", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((me.piebridge.bible.Provider.database) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/5948/buggy-version/src.me.piebridge.bible.Provider.java", "BodyUseAPI": [], "Fixed commit": "2dd9f261adec2b57a8c10b58f0a7732ed7c5dccc", "Url": "https://api.github.com/repos/liudongmiao/bible", "Date": "2012-08-22T07:50:24Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(model.exists(repo))) { return new model.Repo[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/5936/buggy-version/play-server.app.model.CachedRecommender.java", "BodyUseAPI": [], "Fixed commit": "f6cb99c9a4e8b9c62ec9165a1d15c6e8e211895f", "Url": "https://api.github.com/repos/arshsab/K.A.R.E", "Date": "2014-08-12T03:34:38Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry.getValue()", "java.util.Map.Entry.getKey()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (l.getWorld().equals(p.getWorld())) { p.setExhaustion(((float) (((p.getExhaustion()) + ((l.distance(p.getLocation())) * (this.EXHAUSTION_PER_METER))) + (this.EXHAUSTION_PER_SECOND)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/8189/buggy-version/ukofePonyPack.src.com.github.chaomaster.ukofePonyPack.PegasusPonyPowers.java", "BodyUseAPI": ["org.bukkit.Location.distance(p.getLocation())", "org.bukkit.entity.Player.getExhaustion()", "org.bukkit.entity.Player.getLocation()", "org.bukkit.entity.Player.setExhaustion(((float) (((p.getExhaustion()) + ((l.distance(p.getLocation())) * (this.EXHAUSTION_PER_METER))) + (this.EXHAUSTION_PER_SECOND))))"], "Fixed commit": "fbbb4343abff7f936348d460459d87a361f422dc", "Url": "https://api.github.com/repos/chao-master/ukofePonyPack", "Date": "2013-04-04T13:03:45Z"},
{"Line": "=>622", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(it.feio.android.omninotes.utils.IntentChecker.isAvailable(getActivity(), locationIntent, null))) { uriString = ((\"http://maps.google.com/maps?q=\" + (noteTmp.getLatitude())) + ',') + (noteTmp.getLongitude()); locationIntent = new android.content.Intent(android.content.Intent.ACTION_VIEW, android.net.Uri.parse(uriString)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/7477/buggy-version/src.it.feio.android.omninotes.DetailFragment.java", "BodyUseAPI": [], "Fixed commit": "a2e5408479eef377e8a0afa7bf56f89cca35bf05", "Url": "https://api.github.com/repos/federicoiosue/Omni-Notes", "Date": "2014-06-18T00:39:21Z"},
{"Line": "=>352", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.massivecraft.factions.Board.getFactionAt(com.massivecraft.factions.FLocation)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(otherFaction.isNormal())) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/1992/buggy-version/src.com.massivecraft.factions.listeners.FactionsPlayerListener.java", "BodyUseAPI": [], "Fixed commit": "443e083f23fd7965fa13cc7602b3a507b902cbb7", "Url": "https://api.github.com/repos/dotblank/Factions", "Date": "2011-09-15T14:12:24Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.smartfoxserver.v2.core.ISFSEvent.getParameter(SFSEventParam.USER)", "nstuff.juggerfall.extension.handlers.UserRoomLeaveHandler.getParentExtension()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((extension.masterInfo) == user) { extension.choiceMaster(user); user.setVariable(new com.smartfoxserver.v2.entities.variables.SFSUserVariable(\"Master\", false)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/5233/buggy-version/src.nstuff.juggerfall.extension.handlers.UserRoomLeaveHandler.java", "BodyUseAPI": ["nstuff.juggerfall.extension.MainExtension.choiceMaster(com.smartfoxserver.v2.entities.User)", "com.smartfoxserver.v2.entities.User.setVariable(com.smartfoxserver.v2.entities.variables.SFSUserVariable)"], "Fixed commit": "400bd1d8930bd467b4bb2dc0bd1f2f5f1ee0390e", "Url": "https://api.github.com/repos/JazzyJohn/fox-server-side", "Date": "2014-09-15T10:50:35Z"},
{"Line": "=>612", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(org.walkmod.javalang.compiler.symbols.AnonymousClassUtil.isAnonymousClass(n))) || (org.walkmod.javalang.compiler.symbols.AnonymousClassUtil.needsSymbolData(n))) { org.walkmod.javalang.compiler.symbols.SymbolType st = ((org.walkmod.javalang.compiler.symbols.SymbolType) (n.getType().getSymbolData())); resolveConstructor(n, n.getArgs(), st, arg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/6027/buggy-version/src.main.java.org.walkmod.javalang.compiler.types.TypeVisitorAdapter.java", "BodyUseAPI": ["org.walkmod.javalang.compiler.types.TypeVisitorAdapter<A>.resolveConstructor(org.walkmod.javalang.ast.expr.ObjectCreationExpr,n.getArgs(),org.walkmod.javalang.compiler.symbols.SymbolType,A)", "n.getType().getSymbolData()", "org.walkmod.javalang.ast.expr.ObjectCreationExpr.getType()", "org.walkmod.javalang.ast.expr.ObjectCreationExpr.getArgs()"], "Fixed commit": "2f1389484764d78c86e37e46a589b442adf93b1b", "Url": "https://api.github.com/repos/cal101/javalang-compiler", "Date": "2017-06-01T07:09:23Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (other == null) this.value = null; else this.value = other.value;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/672/buggy-version/src.utopia.flow.util.Option.java", "BodyUseAPI": [], "Fixed commit": "2feb0b7241084dd8a3b0fd2060982a66ef3ac429", "Url": "https://api.github.com/repos/Mikkomario/UtopiaFlow", "Date": "2017-11-10T11:58:36Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (net.dzikoysk.funnyguilds.data.Settings.getConfig().playerlistEnable) { for (org.bukkit.entity.Player player : org.bukkit.Bukkit.getOnlinePlayers()) { if (!(net.dzikoysk.funnyguilds.util.element.tablist.AbstractTablist.hasTablist(player))) { net.dzikoysk.funnyguilds.util.element.tablist.AbstractTablist.createTablist(net.dzikoysk.funnyguilds.data.Settings.getConfig().playerList, net.dzikoysk.funnyguilds.data.Settings.getConfig().playerListHeader, net.dzikoysk.funnyguilds.data.Settings.getConfig().playerListFooter, net.dzikoysk.funnyguilds.data.Settings.getConfig().playerListPing, player); } final net.dzikoysk.funnyguilds.util.element.tablist.AbstractTablist tablist = net.dzikoysk.funnyguilds.util.element.tablist.AbstractTablist.getTablist(player); tablist.send(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/8001/buggy-version/src.main.java.net.dzikoysk.funnyguilds.util.runnable.AsynchronouslyRepeater.java", "BodyUseAPI": [], "Fixed commit": "7fd04375e266f527e1f4b6c4c88e076251a4b637", "Url": "https://api.github.com/repos/FunnyGuilds/FunnyGuilds", "Date": "2017-10-14T22:16:19Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.ServletRequest.getHeader(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (ip == null) ip = paramServletRequest.getRemoteAddr();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/4980/buggy-version/net-cfrost-web-core.src.main.java.net.cfrost.web.security.filter.AccessFilter.java", "BodyUseAPI": [], "Fixed commit": "ed060e7d0a6a80a07e038f58f3dffd3f48693946", "Url": "https://api.github.com/repos/cFrost-net/web", "Date": "2016-03-08T07:52:54Z"},
{"Line": "=>641", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(char)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (indexOfDot > 0) { java.lang.String basePropertyName = name.substring(0, indexOfDot); if (propertyMap.containsKey(basePropertyName)) { org.codehaus.groovy.grails.commons.GrailsDomainClassProperty prop = propertyMap.get(basePropertyName); org.codehaus.groovy.grails.commons.GrailsDomainClass referencedDomainClass = prop.getReferencedDomainClass(); if (referencedDomainClass != null) { java.lang.String restOfPropertyName = name.substring((indexOfDot + 1)); return referencedDomainClass.getPropertyByName(restOfPropertyName); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/2750/buggy-version/src.java.org.codehaus.groovy.grails.commons.DefaultGrailsDomainClass.java", "BodyUseAPI": ["java.lang.String.substring(int)", "java.lang.String.substring(int,int)"], "Fixed commit": "6d14a9709e2b6eb967947be7c9c1e98abad194c7", "Url": "https://api.github.com/repos/grails/grails-core", "Date": "2011-02-16T09:28:38Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((levelData[r][i][j]) == 6) staticList.get(r).add(new hhu.propra2013.gruppe55.GoalObject((j * 32), (i * 32))); else if ((levelData[r][i][j]) == 7) staticList.get(r).add(new hhu.propra2013.gruppe55.PotionObject((j * 32), (i * 32)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/3106/buggy-version/src.hhu.propra2013.gruppe55.Level.java", "BodyUseAPI": [], "Fixed commit": "b160a2658307c36b896603d2182bd73d0b886ffe", "Url": "https://api.github.com/repos/propra13-orga/gruppe55", "Date": "2013-05-16T10:33:17Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.a.eye.skywalking.api.util.StringUtil.isEmpty(context.get(com.a.eye.skywalking.plugin.jedis.v2.JedisMethodInterceptor.KEY_OF_REDIS_HOST, java.lang.String.class))) { Tags.PEERS.set(span, java.lang.String.valueOf(context.get(com.a.eye.skywalking.plugin.jedis.v2.JedisMethodInterceptor.KEY_OF_REDIS_HOSTS))); }else { Tags.PEER_HOST.set(span, context.get(com.a.eye.skywalking.plugin.jedis.v2.JedisMethodInterceptor.KEY_OF_REDIS_HOST, java.lang.String.class)); Tags.PEER_PORT.set(span, ((java.lang.Integer) (context.get(com.a.eye.skywalking.plugin.jedis.v2.JedisMethodInterceptor.KEY_OF_REDIS_PORT)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/3955/buggy-version/skywalking-sniffer.skywalking-sdk-plugin.jedis-2.x-plugin.src.main.java.com.a.eye.skywalking.plugin.jedis.v2.JedisMethodInterceptor.java", "BodyUseAPI": ["Tags.PEERS.set(com.a.eye.skywalking.trace.Span,java.lang.String)", "java.lang.String.valueOf(context.get(com.a.eye.skywalking.plugin.jedis.v2.JedisMethodInterceptor.KEY_OF_REDIS_HOSTS))", "Tags.PEER_HOST.set(com.a.eye.skywalking.trace.Span,context.get(com.a.eye.skywalking.plugin.jedis.v2.JedisMethodInterceptor.KEY_OF_REDIS_HOST, java.lang.String.class))", "com.a.eye.skywalking.api.plugin.interceptor.EnhancedClassInstanceContext.get(java.lang.String)", "Tags.PEER_PORT.set(com.a.eye.skywalking.trace.Span,((java.lang.Integer) (context.get(com.a.eye.skywalking.plugin.jedis.v2.JedisMethodInterceptor.KEY_OF_REDIS_PORT))))", "com.a.eye.skywalking.api.plugin.interceptor.EnhancedClassInstanceContext.get(java.lang.String)", "com.a.eye.skywalking.api.plugin.interceptor.EnhancedClassInstanceContext.get(java.lang.String,java.lang.Class)"], "Fixed commit": "1f876948d217ef6aa89521564ab1e81dfa042a45", "Url": "https://api.github.com/repos/apache/incubator-skywalking", "Date": "2017-03-01T15:03:01Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (value != null) { this.type = value.getClass(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/7456/buggy-version/exchange.core.src.main.java.org.hbird.exchange.core.CommandArgument.java", "BodyUseAPI": ["java.lang.Object.getClass()"], "Fixed commit": "a241e3b8570c7e77f115406b83ce23f382373483", "Url": "https://api.github.com/repos/Villemos/hbird-business", "Date": "2013-04-10T08:35:36Z"},
{"Line": "=>351", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mFragmented)) { mToolbar.setNavigationIcon(new com.mikepenz.iconics.IconicsDrawable(getContext()).icon(GoogleMaterial.Icon.gmd_arrow_back).color(Color.WHITE).sizeDp(16)); mToolbar.setNavigationOnClickListener(new android.view.View.OnClickListener() { @java.lang.Override public void onClick(android.view.View v) { ((com.ichi2.anki.AnkiActivity) (getActivity())).finishWithAnimation(ActivityTransitionAnimation.RIGHT); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/4753/buggy-version/AnkiDroid.src.main.java.com.ichi2.anki.StudyOptionsFragment.java", "BodyUseAPI": [], "Fixed commit": "57bddae05162089d598facb6796238bf2f04c6d2", "Url": "https://api.github.com/repos/ankidroid/Anki-Android", "Date": "2015-10-04T15:00:55Z"},
{"Line": "=>691", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.snia.cdmiserver.util.JsonUtils.getValue(bytes, \"Authorization\", false)) != null) { return javax.ws.rs.core.Response.status(Response.Status.FORBIDDEN).build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/7686/buggy-version/CDMI-Feb24.src.main.java.org.snia.cdmiserver.resource.PathResource.java", "BodyUseAPI": [], "Fixed commit": "e748de59d793d613433d42b13fa9b9dc581f803c", "Url": "https://api.github.com/repos/PRCN-CDMI/CDMI", "Date": "2016-08-24T02:21:57Z"},
{"Line": "=>793", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.snia.cdmiserver.util.JsonUtils.getValue(bytes, \"Authorization\", false)) != null) { return javax.ws.rs.core.Response.status(Response.Status.FORBIDDEN).build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/7686/buggy-version/CDMI-Feb24.src.main.java.org.snia.cdmiserver.resource.PathResource.java", "BodyUseAPI": [], "Fixed commit": "e748de59d793d613433d42b13fa9b9dc581f803c", "Url": "https://api.github.com/repos/PRCN-CDMI/CDMI", "Date": "2016-08-24T02:21:57Z"},
{"Line": "=>485", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!duplicateContentCheck) { com.dotmarketing.factories.MultiTreeFactory.saveMultiTree(mTree); htmlPage.setModDate(new java.util.Date()); htmlPage.setModUser(user.getUserId()); com.dotmarketing.db.HibernateUtil.saveOrUpdate(htmlPage); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/4307/buggy-version/src.com.dotmarketing.portlets.director.action.DirectorAction.java", "BodyUseAPI": [], "Fixed commit": "f396c7daceb68e0dc72812011c016fc1041090f3", "Url": "https://api.github.com/repos/dotCMS/dotCMS", "Date": "2014-02-06T17:57:32Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.awt.event.MouseEvent.getButton()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (mbutton == 1) { (left)++; if ((left) == 1) { timer.schedule(new slidingpuzzle.SlidingPuzzle.UpdateUITask(), 0, 1000); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/5287/buggy-version/SlidingPuzzle.src.slidingpuzzle.SlidingPuzzle.java", "BodyUseAPI": [], "Fixed commit": "410eba942b3575c50ff59a8fbbcf281313868ad1", "Url": "https://api.github.com/repos/zxmbies/SlidingPuzzle", "Date": "2014-03-31T22:46:37Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<java.lang.Long>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (i == lower) { color = db.getColor(songid); songname = db.getSongName(songid); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/8792/buggy-version/src.net.codechunk.speedofsound.DrawMapActivity.java", "BodyUseAPI": [], "Fixed commit": "26e31c79dafc4e101d0ab11c79c5b54a09935f11", "Url": "https://api.github.com/repos/jpeddicord/speedofsound", "Date": "2012-05-30T23:50:02Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((actionIds.size()) > (java.lang.Long.SIZE)) || (((actionIds.size()) == (java.lang.Long.SIZE)) && (!(actionIds.contains(ActionKeys.VIEW))))) { throw new com.liferay.portal.kernel.exception.SystemException((\"There are too many actions for resource \" + name)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/5694/buggy-version/portal-impl.src.com.liferay.portal.service.impl.ResourceActionLocalServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "13da979dabc0143aff21fd65bb4ccb9d2e7e491a", "Url": "https://api.github.com/repos/Preston-Crary/liferay-portal", "Date": "2016-06-21T00:13:21Z"},
{"Line": "=>1502", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (j > (pos[1])) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/1265/buggy-version/src.cz1.ngs.tools.Consensus.java", "BodyUseAPI": [], "Fixed commit": "4da69c3c69ae51fbfba31b4326133929a2d0071f", "Url": "https://api.github.com/repos/c-zhou/polyGembler", "Date": "2017-11-06T13:39:48Z"},
{"Line": "=>1496", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<java.util.List<cz1.ngs.tools.Consensus.Segment>>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((sub_seq.get(i).type) == (cz1.ngs.tools.Consensus.MAP_ENUM.GAP)) { ++i; continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/1265/buggy-version/src.cz1.ngs.tools.Consensus.java", "BodyUseAPI": [], "Fixed commit": "4da69c3c69ae51fbfba31b4326133929a2d0071f", "Url": "https://api.github.com/repos/c-zhou/polyGembler", "Date": "2017-11-06T13:39:48Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((dataSnapshot.getValue()) != null) { java.util.List<com.pvanshah.sjsuquizapplication.student.model.ResponseObject> responseObjects = collectResponseObjects(((java.util.Map<java.lang.String, java.lang.Object>) (dataSnapshot.getValue())), ((com.pvanshah.sjsuquizapplication.student.model.Quiz) (quizList.get(position))).getId()); if ((responseObjects != null) && ((responseObjects.size()) > 0)) { int score = 0; for (int i = 0; i < (responseObjects.size()); i++) { int scored = java.lang.Integer.parseInt(responseObjects.get(i).getTotal()); if (scored > score) { score = scored; } } com.afollestad.materialdialogs.MaterialDialog dialog = new com.afollestad.materialdialogs.MaterialDialog.Builder(this).title(R.string.score).content((((((getResources().getString(R.string.submitted)) + \" \") + score) + \"\\n\") + (getResources().getString(R.string.take_again)))).positiveText(R.string.yes).negativeText(R.string.no).contentColor(Color.GRAY).backgroundColorRes(android.R.color.white).positiveColorRes(R.color.colorAccent).negativeColorRes(R.color.colorAccent).autoDismiss(false).onPositive(new com.afollestad.materialdialogs.MaterialDialog.SingleButtonCallback() { @java.lang.Override public void onClick(@android.support.annotation.NonNull com.afollestad.materialdialogs.MaterialDialog dialog, @android.support.annotation.NonNull com.afollestad.materialdialogs.DialogAction which) { startQuiz(((com.pvanshah.sjsuquizapplication.student.model.Quiz) (quizList.get(position))).getId(), ((com.pvanshah.sjsuquizapplication.student.model.Quiz) (quizList.get(position))).getTitle()); dialog.dismiss(); } }).onNegative(new com.afollestad.materialdialogs.MaterialDialog.SingleButtonCallback() { @java.lang.Override public void onClick(@android.support.annotation.NonNull com.afollestad.materialdialogs.MaterialDialog dialog, @android.support.annotation.NonNull com.afollestad.materialdialogs.DialogAction which) { dialog.dismiss(); } }).show(); }else { startQuiz(((com.pvanshah.sjsuquizapplication.student.model.Quiz) (quizList.get(position))).getId(), ((com.pvanshah.sjsuquizapplication.student.model.Quiz) (quizList.get(position))).getTitle()); } }else { startQuiz(((com.pvanshah.sjsuquizapplication.student.model.Quiz) (quizList.get(position))).getId(), ((com.pvanshah.sjsuquizapplication.student.model.Quiz) (quizList.get(position))).getTitle()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/2606/buggy-version/app.src.main.java.com.pvanshah.sjsuquizapplication.student.activities.AvailableQuizesActivity.java", "BodyUseAPI": ["com.google.firebase.database.DataSnapshot.getValue()", "1.collectResponseObjects(((java.util.Map<java.lang.String, java.lang.Object>) (dataSnapshot.getValue())),((com.pvanshah.sjsuquizapplication.student.model.Quiz) (quizList.get(position))).getId())"], "Fixed commit": "093a1f138f4d04ddeb4a84448e18acf9c6bab99f", "Url": "https://api.github.com/repos/pavanshah/SJSUQuizApplication", "Date": "2017-08-04T20:57:48Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (id.equals(responseObject.getQuizID())) { responseObjectList.add(responseObject); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/2606/buggy-version/app.src.main.java.com.pvanshah.sjsuquizapplication.student.activities.AvailableQuizesActivity.java", "BodyUseAPI": ["java.util.List<com.pvanshah.sjsuquizapplication.student.model.ResponseObject>.add(com.pvanshah.sjsuquizapplication.student.model.ResponseObject)"], "Fixed commit": "093a1f138f4d04ddeb4a84448e18acf9c6bab99f", "Url": "https://api.github.com/repos/pavanshah/SJSUQuizApplication", "Date": "2017-08-04T20:57:48Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((Login.userRol) == 1) { PantallaPrincipal.moduloVentaAdmin.setEnabled(false); }else { PantallaPrincipalVendedor.moduloVentaVendedor.setEnabled(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/3546/buggy-version/src.sigi.CierreCaja.java", "BodyUseAPI": [], "Fixed commit": "2b6497a391e820adb49bb0bc454430da3d486f91", "Url": "https://api.github.com/repos/fernan256/sigi", "Date": "2016-08-05T01:08:47Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gsingh.learnkirtan.ui.shabadeditor.tableeditor.TableShabadEditor.getSelectedRow()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (row != (-1)) { editor.addRowAbove(row); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/5223/buggy-version/src.gsingh.learnkirtan.ui.ControlPanel.java", "BodyUseAPI": ["gsingh.learnkirtan.ui.shabadeditor.tableeditor.TableShabadEditor.addRowAbove(int)"], "Fixed commit": "619b8921d715ac79830db8bad9e30326cc420527", "Url": "https://api.github.com/repos/gsingh93/Learn-Kirtan", "Date": "2013-03-23T03:30:20Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gsingh.learnkirtan.ui.shabadeditor.tableeditor.TableShabadEditor.getSelectedRow()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (row != (-1)) { editor.deleteRow(row); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/5223/buggy-version/src.gsingh.learnkirtan.ui.ControlPanel.java", "BodyUseAPI": ["gsingh.learnkirtan.ui.shabadeditor.tableeditor.TableShabadEditor.deleteRow(int)"], "Fixed commit": "619b8921d715ac79830db8bad9e30326cc420527", "Url": "https://api.github.com/repos/gsingh93/Learn-Kirtan", "Date": "2013-03-23T03:30:20Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tools.LevelAnalyzer.getSpawners(boolean)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(harmfulObjects.contains(spawners[j].sprites.get(k)))) { collectible.add(spawners[j].sprites.get(k)); interactions.add(((((spawners[j].sprites.get(k)) + \" \") + (avatar[i].name)) + \" > killSprite scoreChange=1\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/5746/buggy-version/src.tracks.ruleGeneration.constructiveRuleGenerator.RuleGenerator.java", "BodyUseAPI": ["spawners[j].sprites.get(int)", "java.util.ArrayList<java.lang.String>.add(spawners[j].sprites.get(k))", "spawners[j].sprites.get(int)", "java.util.ArrayList<java.lang.String>.add(((((spawners[j].sprites.get(k)) + \" \") + (avatar[i].name)) + \" > killSprite scoreChange=1\"))"], "Fixed commit": "54395376deafb7d62379b90544d8eaab75a64e5d", "Url": "https://api.github.com/repos/mcgreentn/gvgai-myFork", "Date": "2017-04-05T01:06:31Z"},
{"Line": "=>2404", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((accuracySlider.getValue()) == (accuracySlider.getMaximum())) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/2701/buggy-version/src.main.java.eu.isas.peptideshaker.gui.tabpanels.OverviewPanel.java", "BodyUseAPI": [], "Fixed commit": "95419fe8796aaa05b2dbbc76906f1bafb147d16b", "Url": "https://api.github.com/repos/compomics/peptide-shaker", "Date": "2016-12-07T18:54:32Z"},
{"Line": "=>2419", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((intensitySlider.getValue()) == (intensitySlider.getMaximum())) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/2701/buggy-version/src.main.java.eu.isas.peptideshaker.gui.tabpanels.OverviewPanel.java", "BodyUseAPI": [], "Fixed commit": "95419fe8796aaa05b2dbbc76906f1bafb147d16b", "Url": "https://api.github.com/repos/compomics/peptide-shaker", "Date": "2016-12-07T18:54:32Z"},
{"Line": "=>607", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((formParams != null) && ((formParams.size()) > 0)) { valueArr = formParams.remove(name); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/1420/buggy-version/resty-route.src.main.java.cn.dreampie.route.core.Route.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.util.List<java.lang.String>>.remove(java.lang.String)"], "Fixed commit": "783f676b4d577d53c3cc8794791f23d30ea129d9", "Url": "https://api.github.com/repos/Dreampie/Resty", "Date": "2015-06-01T10:45:36Z"},
{"Line": "=>1493", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (workflowedBaseModel instanceof com.liferay.portal.model.WorkflowedModel) { com.liferay.portal.model.WorkflowedModel workflowedModel = ((com.liferay.portal.model.WorkflowedModel) (workflowedBaseModel)); document.addKeyword(Field.STATUS, workflowedModel.getStatus()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/6519/buggy-version/portal-service.src.com.liferay.portal.kernel.search.BaseIndexer.java", "BodyUseAPI": [], "Fixed commit": "87838b1cffe3f74853bd39392865117b33ae48b2", "Url": "https://api.github.com/repos/ealonso/liferay-portal", "Date": "2013-09-09T09:26:49Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((map.get(tok.getEditions().get(0).getId())) != null) connection = new java.net.URL(map.get(tok.getEditions().get(0).getId())).openConnection(); else connection = new java.net.URL(map.get(map.keySet().iterator().next())).openConnection();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/5437/buggy-version/src.org.magic.services.CockatriceTokenProvider.java", "BodyUseAPI": ["tok.getEditions().get(int)", "org.magic.api.beans.MagicCard.getEditions()", "java.util.Iterator<java.lang.String>.next()", "java.util.Set<java.lang.String>.iterator()", "java.util.Map<java.lang.String, java.lang.String>.get(tok.getEditions().get(0).getId())", "java.net.URL.openConnection()", "java.net.URL.openConnection()", "java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.keySet()", "tok.getEditions().get(0).getId()"], "Fixed commit": "2e02afb022ce97e48178ec4fe127888112bde8ff", "Url": "https://api.github.com/repos/nicho92/MtgDesktopCompanion", "Date": "2016-11-28T18:57:46Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (imageUrl.contains(\"wordpress.com\")) { return imageUrl + query; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/3294/buggy-version/libs.utils.WordPressUtils.src.main.java.org.wordpress.android.util.PhotonUtils.java", "BodyUseAPI": [], "Fixed commit": "3b5051423778ad8361ed04c7f0251599277ca34f", "Url": "https://api.github.com/repos/wordpress-mobile/WordPress-Android", "Date": "2015-11-12T08:58:57Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(dataSnapshot.hasChildren())) { errorMessage.setVisibility(View.VISIBLE); }else { errorMessage.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/1808/buggy-version/app.src.main.java.com.saarthicareer.saarthicareer.fragment.HomeFragment.java", "BodyUseAPI": [], "Fixed commit": "5498829d44e82e50c9909e2598f5f19c7ce9ef8a", "Url": "https://api.github.com/repos/vikasvshastry/SaarthiCareer-App", "Date": "2017-04-19T15:06:57Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.firebase.client.DataSnapshot.getValue(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (course.isEmpty()) { errorMessage.setVisibility(View.VISIBLE); }else { errorMessage.setVisibility(View.GONE); adapterFunc(trainee.getCollege(), course); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/1808/buggy-version/app.src.main.java.com.saarthicareer.saarthicareer.fragment.HomeFragment.java", "BodyUseAPI": ["1.adapterFunc(trainee.getCollege(),java.lang.String)"], "Fixed commit": "5498829d44e82e50c9909e2598f5f19c7ce9ef8a", "Url": "https://api.github.com/repos/vikasvshastry/SaarthiCareer-App", "Date": "2017-04-19T15:06:57Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ctx.named_list_control()) != null) { name = helper.getString(ctx.named_list_control().STRING()); }else if ((ctx.named_upload_control()) != null) { name = helper.getString(ctx.named_upload_control().STRING()); }else if ((ctx.named_container_control()) != null) { name = helper.getString(ctx.named_container_control().STRING()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/4403/buggy-version/src.main.java.nl.thedocumentwizard.spell.parser.MySpellListener.java", "BodyUseAPI": ["SpellParser.QuestionContext.named_upload_control()", "SpellParser.QuestionContext.named_upload_control()", "nl.thedocumentwizard.spell.parser.ParsingHelper.getString(ctx.named_upload_control().STRING())", "ctx.named_container_control().STRING()", "nl.thedocumentwizard.spell.parser.ParsingHelper.getString(ctx.named_container_control().STRING())", "SpellParser.QuestionContext.named_container_control()", "ctx.named_list_control().STRING()", "SpellParser.QuestionContext.named_list_control()", "SpellParser.QuestionContext.named_container_control()", "nl.thedocumentwizard.spell.parser.ParsingHelper.getString(ctx.named_list_control().STRING())", "ctx.named_upload_control().STRING()"], "Fixed commit": "fe382c7d42f15c9fb430f9ce493b0ed92ae5c563", "Url": "https://api.github.com/repos/joserc87/spell", "Date": "2017-02-15T12:26:50Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((android.os.Build.VERSION.SDK_INT) >= (android.os.Build.VERSION_CODES.LOLLIPOP)) { interpolator = android.view.animation.AnimationUtils.loadInterpolator(activity, android.R.interpolator.linear_out_slow_in); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/8742/buggy-version/app.src.main.java.com.benjaminearley.mysubs.storyRecyclerViewAdapter.java", "BodyUseAPI": [], "Fixed commit": "41178f16072f750383f2394479ecb7c2286e7a49", "Url": "https://api.github.com/repos/BenjaminEarley/Capstone-Project", "Date": "2016-04-26T03:31:16Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((eventListAdapter.getItemCount()) == 0) { blankTextview.setVisibility(View.VISIBLE); }else { blankTextview.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/5401/buggy-version/app.src.main.java.spit.matrix2017.Fragments.FavoritesFragment.java", "BodyUseAPI": [], "Fixed commit": "76d1d2fe22b4b69704f8cefa8aef550126ce7d09", "Url": "https://api.github.com/repos/TejasBhitle/Matrix2017", "Date": "2016-12-06T04:34:00Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((held) != null) { held.setAmount(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/2733/buggy-version/src.main.java.net.aufdemrand.denizen.events.entity.EntityDamagedScriptEvent.java", "BodyUseAPI": [], "Fixed commit": "fbbc543294fba7afc438ef1858b5745ad71eb103", "Url": "https://api.github.com/repos/DenizenScript/Denizen-For-Bukkit", "Date": "2015-06-29T02:38:13Z"},
{"Line": "=>306", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dialog) != null) { dialog.show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/5719/buggy-version/src.android.InAppBrowser.java", "BodyUseAPI": [], "Fixed commit": "a77415e95e2525fdb7a4f7b7f8b59ee1f82c41c6", "Url": "https://api.github.com/repos/tombolaltd/cordova-plugin-inappbrowser", "Date": "2016-08-31T16:12:33Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isTxActive()) return entity; else return pm.detachCopy(entity);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/8562/buggy-version/src.main.java.com.pratilipi.data.DataAccessorGaeImpl.java", "BodyUseAPI": [], "Fixed commit": "37d3996ae0c28cced52e4d4b7e182b501163b8b6", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2015-07-25T16:25:48Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (strategyBeanName != null) { try { strategy = beanFactory.getBean(strategyBeanName, com.github.lothar.security.acl.AclStrategy.class); } catch (org.springframework.beans.factory.NoSuchBeanDefinitionException e) { logger.warn(\"Unable to find {} bean with name '{}' > fall back on default strategy\", com.github.lothar.security.acl.AclStrategy.class.getName(), strategyBeanName); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/5048/buggy-version/core.src.main.java.com.github.lothar.security.acl.AclStrategyProviderImpl.java", "BodyUseAPI": ["org.springframework.beans.factory.BeanFactory.getBean(java.lang.String,java.lang.Class)", "org.slf4j.Logger.warn(java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "867c2d3d4132c37209dd965d5a9278048e7566dd", "Url": "https://api.github.com/repos/lordlothar99/strategy-spring-security-acl", "Date": "2016-04-05T20:15:55Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((action != null) && (action instanceof photon.tube.action.ImmediatelyRunnable)) { try { ((photon.tube.action.ImmediatelyRunnable) (action)).runImmediately(); action = tryRunningSubsequentImmediately(action); } catch (java.lang.Exception e) { onAbort(action); throw new photon.tube.action.ActionRuntimeException(e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/1666/buggy-version/api.src.main.java.photon.tube.action.ActionManager.java", "BodyUseAPI": ["photon.tube.action.ActionManager.tryRunningSubsequentImmediately(photon.tube.action.Actionable)"], "Fixed commit": "96d7f2ac99d56aa9ce20c2916fef269724ef8481", "Url": "https://api.github.com/repos/kkaatii/photon", "Date": "2017-02-23T16:45:14Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((args[1]) == \"\") || (args[1].isEmpty())) { admin = \"CONSOLE\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/3531/buggy-version/src.me.odium.simplehelptickets.commands.replyticket.java", "BodyUseAPI": [], "Fixed commit": "7b56187f511f91cca8c8c3b4c053f9392a31dfcc", "Url": "https://api.github.com/repos/Fronix/SimpleHelpTickets", "Date": "2012-12-30T18:10:31Z"},
{"Line": "=>584", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["user.getData().getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (((name == null) || (name.equals(\"\"))) || (name.equals(\"Error getting name\"))) { debug((\"Invalid player name: \" + uuid)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/9091/buggy-version/AdvancedCore.src.com.Ben12345rocks.AdvancedCore.AdvancedCoreHook.java", "BodyUseAPI": [], "Fixed commit": "38570017065f812fcc12046d4bfe8756720e9676", "Url": "https://api.github.com/repos/Ben12345rocks/AdvancedCore", "Date": "2017-10-19T14:01:06Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((mediaManifest.getTextGroups()) != null) && ((mediaManifest.getTextGroups().getTextGroup()) != null)) && ((mediaManifest.getTextGroups().getTextGroup().size()) > 0)) { for (com.wb.nextgenlibrary.parser.manifest.schema.v1_4.TextGroupType textGroupType : mediaManifest.getTextGroups().getTextGroup()) { if (((textGroupType.getTextObjectID()) != null) && ((textGroupType.getTextObjectID().size()) > 0)) { textObjectIdToTextGroupId.put(textGroupType.getTextObjectID().get(0), textGroupType.getTextGroupID()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/6578/buggy-version/src.com.wb.nextgenlibrary.data.MovieMetaData.java", "BodyUseAPI": ["mediaManifest.getTextGroups().getTextGroup()", "com.wb.nextgenlibrary.parser.manifest.schema.v1_4.MediaManifestType.getTextGroups()"], "Fixed commit": "a83c1a9b3cbcf9a07bd4110e972bff053242c972", "Url": "https://api.github.com/repos/warnerbros/cpe-manifest-android-experience", "Date": "2016-12-02T19:08:32Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Scanner.nextInt()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (ctr < (cases - 1)) java.lang.System.out.println();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/4070/buggy-version/programmingchallenges.chapter4.Bridge.java", "BodyUseAPI": [], "Fixed commit": "410ce770d905d1583606cda513e42cd9e934e5ca", "Url": "https://api.github.com/repos/bSkwared/competitive", "Date": "2016-07-03T14:54:49Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((GA.getNrOfLevels()) > 0) { int[] worldConnection = GA.solve(); engine.Portal.connectPortals(worldConnection); java.lang.System.out.println((\"Worlds connected in order: \" + (java.util.Arrays.toString(worldConnection)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/6672/buggy-version/MazeRunner.src.engine.MazeRunner.java", "BodyUseAPI": ["engine.GeneticAlgorithm.solve()"], "Fixed commit": "a6c8ed23cf10ef88246f5f2237a16cb0af8dc06b", "Url": "https://api.github.com/repos/Rivirland/EWI3620TU-GROUP01", "Date": "2014-01-21T19:18:49Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.type) == (PuDataType.PUOBJECT)) { this.data = com.nhb.common.data.PuObject.fromObject(data); }else if ((this.type) == (PuDataType.PUARRAY)) { this.data = com.nhb.common.data.PuArrayList.fromObject(data); }else if ((this.type) == (PuDataType.RAW)) { this.data = ((byte[]) (data)); }else if ((this.type) == (PuDataType.NULL)) { this.data = null; }else { this.data = com.nhb.common.utils.PrimitiveTypeUtils.getValueFrom(this.type.getDataClass(), data); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/3357/buggy-version/NHBCommonCore.src.main.java.com.nhb.common.data.PuValue.java", "BodyUseAPI": [], "Fixed commit": "29044cc49091cd259e4c955a1d8c05531216c214", "Url": "https://api.github.com/repos/bachden/nhb-common", "Date": "2017-05-19T04:56:25Z"},
{"Line": "=>418", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isProjectRecordingExpired()) { showToastFinalDateExpiredMessage(); }else { createAddSessionActivity(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/3888/buggy-version/app.src.main.java.dess15proj5.fau.cs.osr_amos.mobiletimerecording.ui.SelectedProjectFragment.java", "BodyUseAPI": [], "Fixed commit": "29e9af39a5dbaaa93f6ad7d7c7f8b92659a5edd8", "Url": "https://api.github.com/repos/corchwll/amos-ss15-proj5_android", "Date": "2015-07-07T13:48:59Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ru.runa.gpd.lang.model.ProcessDefinition.getConstraint()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (definitionRectangle != null) { if ((definitionRectangle.x) != 0) { addAttribute(root, ru.runa.gpd.lang.par.GpdXmlContentProvider.X, java.lang.String.valueOf(definitionRectangle.x)); } if ((definitionRectangle.y) != 0) { addAttribute(root, ru.runa.gpd.lang.par.GpdXmlContentProvider.Y, java.lang.String.valueOf(definitionRectangle.y)); } addAttribute(root, ru.runa.gpd.lang.par.GpdXmlContentProvider.WIDTH, java.lang.String.valueOf(definitionRectangle.width)); addAttribute(root, ru.runa.gpd.lang.par.GpdXmlContentProvider.HEIGHT, java.lang.String.valueOf(definitionRectangle.height)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/1035/buggy-version/plugins.ru.runa.gpd.src.ru.runa.gpd.lang.par.GpdXmlContentProvider.java", "BodyUseAPI": ["java.lang.String.valueOf(definitionRectangle.y)", "ru.runa.gpd.lang.par.GpdXmlContentProvider.addAttribute(org.dom4j.Element,java.lang.String,java.lang.String)", "ru.runa.gpd.lang.par.GpdXmlContentProvider.addAttribute(org.dom4j.Element,java.lang.String,java.lang.String)", "ru.runa.gpd.lang.par.GpdXmlContentProvider.addAttribute(org.dom4j.Element,java.lang.String,java.lang.String)", "java.lang.String.valueOf(definitionRectangle.x)", "ru.runa.gpd.lang.par.GpdXmlContentProvider.addAttribute(org.dom4j.Element,java.lang.String,java.lang.String)", "java.lang.String.valueOf(definitionRectangle.height)", "java.lang.String.valueOf(definitionRectangle.width)"], "Fixed commit": "e11ebc2b362b0bd07203e5433b857fee1eedebb3", "Url": "https://api.github.com/repos/processtech/runawfe-devstudio", "Date": "2017-12-20T20:39:26Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((score.getCombo()) < (newscore.getCombo())) && updateScore) { score.setCombo(newscore.getCombo()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/8448/buggy-version/src.bms.player.beatoraja.PlayDataAccessor.java", "BodyUseAPI": ["bms.player.beatoraja.IRScoreData.getCombo()", "bms.player.beatoraja.IRScoreData.setCombo(newscore.getCombo())"], "Fixed commit": "26a3c363c8fa7535361dc8870767b5530a12e586", "Url": "https://api.github.com/repos/exch-bms2/beatoraja", "Date": "2016-05-24T16:59:44Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.thoughtworks.mindit.mindit.model.Tree.getNode(uiNode.getParentId())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (parent == (tree.getRoot())) { rootId = parent.getId(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/5712/buggy-version/app.src.main.java.com.thoughtworks.mindit.mindit.presenter.Presenter.java", "BodyUseAPI": ["com.thoughtworks.mindit.mindit.model.Node.getId()"], "Fixed commit": "287433095e68e228fdfc4fc0b3b89d4dc9ccee8f", "Url": "https://api.github.com/repos/Allminds/mind-it-android", "Date": "2016-02-01T09:19:50Z"},
{"Line": "=>326", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((leftNumber.signum()) != 0) { result = leftNumber.divide(rightNumber, StringCalculator.InputParser.PRECISION, java.math.RoundingMode.HALF_UP); result = StringCalculator.InputParser.reducePrecision(result); }else { result = java.math.BigDecimal.ZERO; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/8216/buggy-version/src.StringCalculator.InputParser.java", "BodyUseAPI": ["java.math.BigDecimal.divide(java.math.BigDecimal,int,java.math.RoundingMode)"], "Fixed commit": "ef7f10b53acc3322525f8e58f198ec52560de6bb", "Url": "https://api.github.com/repos/BrandonQDixon/StringCalculator", "Date": "2016-10-29T17:39:11Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (diff <= 0) { diff = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/470/buggy-version/signature-pad.src.main.java.com.github.gcacace.signaturepad.utils.TimedPoint.java", "BodyUseAPI": [], "Fixed commit": "b3def40e3446b6c80c003b6244937ef5f55db887", "Url": "https://api.github.com/repos/dankellymn/android-signaturepad", "Date": "2017-11-10T16:09:58Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getText().equals(\"0.0\")) { super.processKeyEvent(ev); }else { ev.consume(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/8329/buggy-version/src.edu.asu.laits.gui.nodeeditor.DecimalTextField.java", "BodyUseAPI": [], "Fixed commit": "2967406d6b492c32362abaa25b0292d69ba1a551", "Url": "https://api.github.com/repos/rptiwari/LaitsV3", "Date": "2013-10-14T18:19:21Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (fileName != null) { withFile(new java.io.File(fileName)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/1441/buggy-version/src.main.java.de.uniks.networkparser.ext.io.FileBuffer.java", "BodyUseAPI": ["de.uniks.networkparser.ext.io.FileBuffer.withFile(java.io.File)"], "Fixed commit": "0a63bcf3a33ada00c3ff637472ba5234695a6a48", "Url": "https://api.github.com/repos/fujaba/NetworkParser", "Date": "2017-11-22T11:55:25Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.space) == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/1441/buggy-version/src.main.java.de.uniks.networkparser.ext.petaf.proxy.NodeProxyFileSystem.java", "BodyUseAPI": [], "Fixed commit": "0a63bcf3a33ada00c3ff637472ba5234695a6a48", "Url": "https://api.github.com/repos/fujaba/NetworkParser", "Date": "2017-11-22T11:55:25Z"},
{"Line": "=>796", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (zoneType != null) { sql += (\" AND dc.networktype = '\" + zoneType) + \"'\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/5790/buggy-version/server.src.com.cloud.storage.dao.VMTemplateDaoImpl.java", "BodyUseAPI": [], "Fixed commit": "3d10f700f97d0daee7e6d69e4436c7955bc7e13a", "Url": "https://api.github.com/repos/devdeep/cloudstack", "Date": "2013-05-01T23:13:20Z"},
{"Line": "=>569", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (zoneType != null) { dataCenterJoin = \" INNER JOIN template_host_ref thr on (t.id = thr.template_id) INNER JOIN host h on (thr.host_id = h.id)\"; dataCenterJoin += \" INNER JOIN data_center dc on (h.data_center_id = dc.id)\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/5790/buggy-version/server.src.com.cloud.storage.dao.VMTemplateDaoImpl.java", "BodyUseAPI": [], "Fixed commit": "3d10f700f97d0daee7e6d69e4436c7955bc7e13a", "Url": "https://api.github.com/repos/devdeep/cloudstack", "Date": "2013-05-01T23:13:20Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.JELLY_BEAN_MR2)) { setTransportControlFlags(((net.alliknow.podcatcher.services.PodcatcherRCClient.SUPPORTED_TRANSPORTS) | (FLAG_KEY_MEDIA_POSITION_UPDATE))); setOnGetPlaybackPositionListener(new net.alliknow.podcatcher.services.OnGetPlaybackPositionListener() { @java.lang.Override public long onGetPlaybackPosition() { if (!(service.isPrepared())) return -1; else return service.getCurrentPosition(); } }); setPlaybackPositionUpdateListener(new net.alliknow.podcatcher.services.OnPlaybackPositionUpdateListener() { @java.lang.Override public void onPlaybackPositionUpdate(long newPosition) { service.seekTo(((int) (newPosition))); setPlaybackState((service.isPlaying() ? PLAYSTATE_PLAYING : PLAYSTATE_PAUSED), service.getCurrentPosition(), 1.0F); } }); }else setTransportControlFlags(net.alliknow.podcatcher.services.PodcatcherRCClient.SUPPORTED_TRANSPORTS);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/3999/buggy-version/src.net.alliknow.podcatcher.services.PodcatcherRCClient.java", "BodyUseAPI": [], "Fixed commit": "b37611bd4481f318a127125f6654a3242cc13eda", "Url": "https://api.github.com/repos/salema/PodCatcher-Deluxe-Android", "Date": "2013-12-13T15:53:59Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.MatchResult.group(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (match != null) newGraph.add(new com.hp.hpl.jena.graph.Triple(group, org.swows.function.AnalyzeString.STRING_PROPERTY, com.hp.hpl.jena.graph.Node.createLiteral(match))); else newGraph.add(new com.hp.hpl.jena.graph.Triple(group, RDF.type.asNode(), org.swows.function.AnalyzeString.GROUP_NON_MATCH_CLASS));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/2907/buggy-version/swows.src.main.java.org.swows.function.AnalyzeString.java", "BodyUseAPI": ["com.hp.hpl.jena.graph.Node.createLiteral(java.lang.String)", "com.hp.hpl.jena.graph.Graph.add(com.hp.hpl.jena.graph.Triple)"], "Fixed commit": "3bca75d63d9f2e9b676b73559b206a87260eecbc", "Url": "https://api.github.com/repos/miguel76/SWOWS", "Date": "2012-07-26T17:24:49Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (imageData == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/40/buggy-version/app.src.main.java.org.techteam.decider.util.image_selector.ImageSelector.java", "BodyUseAPI": [], "Fixed commit": "e8ce60b244786b655f7eb1dcb4b4fc8a88456cfe", "Url": "https://api.github.com/repos/tech-team/decider-android", "Date": "2015-07-16T19:31:21Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["backcab.RandomTP.com.wimbli.WorldBorder.Config.Border(world.getName())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (bd != null) { maxX = bd.getRadiusX(); maxZ = bd.getRadiusZ(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/8142/buggy-version/src.backcab.RandomTP.Task.java", "BodyUseAPI": ["com.wimbli.WorldBorder.BorderData.getRadiusZ()", "com.wimbli.WorldBorder.BorderData.getRadiusX()"], "Fixed commit": "5c3f43058cae96da6aa501170ae7f6974c38a60f", "Url": "https://api.github.com/repos/xf57212/RandomTP", "Date": "2015-05-05T00:39:55Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((node.getIpAddr()) != null) && (!(node.getIpAddr().isEmpty()))) { subMenu.add(action); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/6794/buggy-version/src.jp.co.tabocom.tsplugin.macroconnect.MacroConnectPlugin.java", "BodyUseAPI": [], "Fixed commit": "32f0dd5a3dadde21d545d82f7075969a4793fb9d", "Url": "https://api.github.com/repos/turbou/TS_MacroConnect", "Date": "2016-03-11T04:18:50Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (screenString.equals(\"\")) { pressKey(\"-\"); }else { operation(\"-\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/6252/buggy-version/app.src.main.java.com.alexlowe.calculator.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "ddf269cd27a158875cc1305c4b1dc95226ee974c", "Url": "https://api.github.com/repos/loweab/Calculator", "Date": "2016-01-04T23:08:01Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(screenString.equals(\"\"))) { negativeNumber = screenString.substring(0, 1).equals(\"-\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/6252/buggy-version/app.src.main.java.com.alexlowe.calculator.MainActivity.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.substring(int,int)"], "Fixed commit": "ddf269cd27a158875cc1305c4b1dc95226ee974c", "Url": "https://api.github.com/repos/loweab/Calculator", "Date": "2016-01-04T23:08:01Z"},
{"Line": "=>1333", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((lexer.token()) == (com.alibaba.druid.sql.parser.Token.IDENTIFIED)) { lexer.nextToken(); accept(Token.BY); dbLink.setPassword(lexer.stringVal()); if ((lexer.token()) == (com.alibaba.druid.sql.parser.Token.IDENTIFIER)) { lexer.nextToken(); }else { accept(Token.LITERAL_ALIAS); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/2927/buggy-version/src.main.java.com.alibaba.druid.sql.dialect.oracle.parser.OracleStatementParser.java", "BodyUseAPI": ["com.alibaba.druid.sql.dialect.oracle.ast.stmt.OracleCreateDatabaseDbLinkStatement.setPassword(lexer.stringVal())", "com.alibaba.druid.sql.dialect.oracle.parser.OracleStatementParser.stringVal()", "com.alibaba.druid.sql.dialect.oracle.parser.OracleStatementParser.nextToken()", "com.alibaba.druid.sql.dialect.oracle.parser.OracleStatementParser.token()", "com.alibaba.druid.sql.dialect.oracle.parser.OracleStatementParser.nextToken()"], "Fixed commit": "64e0794dd3592e797328696ece26f2753dce0a45", "Url": "https://api.github.com/repos/mosoft521/druid", "Date": "2016-07-09T10:54:45Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Granite.instance.classesDir.exists()) { java.io.File oldClassesDir = new java.io.File(Granite.instance.classesDir.getParentFile(), ((Granite.instance.classesDir.getName()) + \"_old\")); org.apache.commons.io.FileUtils.moveDirectory(Granite.instance.classesDir, oldClassesDir); org.apache.commons.io.FileUtils.deleteDirectory(oldClassesDir); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/2766/buggy-version/src.main.java.org.granitepowered.granite.GraniteStartupThread.java", "BodyUseAPI": [], "Fixed commit": "5153d02b8e9e13ab23312724fa0fb199003301a4", "Url": "https://api.github.com/repos/SpongePowered/SpongeVanilla", "Date": "2015-01-07T16:15:39Z"},
{"Line": "=>422", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getInt(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (lastUpdate > 2000) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/6061/buggy-version/mensa-ubi.src.de.atomfrede.android.mensa.ubi.meal.WeeklyMealFragment.java", "BodyUseAPI": [], "Fixed commit": "b70b90b596637f47260d5549697ad7017dec3757", "Url": "https://api.github.com/repos/atomfrede/mensa-ubi", "Date": "2015-02-26T06:14:25Z"},
{"Line": "=>862", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (maps != null) { uncorrelatedExchanges.remove(maps.getMessageID().getValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/1244/buggy-version/rt.ws.addr.src.main.java.org.apache.cxf.ws.addressing.soap.MAPCodec.java", "BodyUseAPI": ["org.apache.cxf.ws.addressing.AddressingProperties.getMessageID()", "java.util.Map<java.lang.String, org.apache.cxf.message.Exchange>.remove(maps.getMessageID().getValue())", "maps.getMessageID().getValue()"], "Fixed commit": "9ac1b2a19e4a0d020f58351b006a834847eb92f7", "Url": "https://api.github.com/repos/apache/cxf", "Date": "2015-09-16T16:58:14Z"},
{"Line": "=>845", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isRequestor(message)) { if (maps == null) { org.apache.cxf.message.Message m = message.getExchange().getOutMessage(); maps = org.apache.cxf.ws.addressing.ContextUtils.retrieveMAPs(m, false, true, false); if (maps != null) { org.apache.cxf.message.Exchange ex = uncorrelatedExchanges.get(maps.getMessageID().getValue()); if (ex == (message.getExchange())) { uncorrelatedExchanges.remove(maps.getMessageID().getValue()); org.apache.cxf.ws.addressing.soap.MAPCodec.LOG.log(java.util.logging.Level.WARNING, \"RESPONSE_NOT_USING_WSADDRESSING\"); } } }else if ((((maps.getRelatesTo()) == null) && ((maps.getAction()) != null)) && (Names.WSA_DEFAULT_FAULT_ACTION.equals(maps.getAction().getValue()))) { org.apache.cxf.message.Message m = message.getExchange().getOutMessage(); maps = org.apache.cxf.ws.addressing.ContextUtils.retrieveMAPs(m, false, true, false); if (maps != null) { uncorrelatedExchanges.remove(maps.getMessageID().getValue()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/1244/buggy-version/rt.ws.addr.src.main.java.org.apache.cxf.ws.addressing.soap.MAPCodec.java", "BodyUseAPI": ["org.apache.cxf.binding.soap.SoapMessage.getExchange()", "org.apache.cxf.binding.soap.SoapMessage.getExchange()", "org.apache.cxf.binding.soap.SoapMessage.getExchange()", "message.getExchange().getOutMessage()", "message.getExchange().getOutMessage()"], "Fixed commit": "9ac1b2a19e4a0d020f58351b006a834847eb92f7", "Url": "https://api.github.com/repos/apache/cxf", "Date": "2015-09-16T16:58:14Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tableRows.get(i).select(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((tableData.size()) < 2) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/1951/buggy-version/src.com.jgrue.rfgeneration.scrapers.GameInfoScraper.java", "BodyUseAPI": [], "Fixed commit": "ccf8840d70c2b7bd64dd79c1c5f56c83984cec12", "Url": "https://api.github.com/repos/theGrue/RFGeneration", "Date": "2012-04-26T04:05:27Z"},
{"Line": "=>548", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((resource) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/8307/buggy-version/model.model-impl.src.main.java.com.evolveum.midpoint.model.impl.lens.LensProjectionContext.java", "BodyUseAPI": [], "Fixed commit": "849f2f8e6d6d6e72b127f93d40c52eac50259540", "Url": "https://api.github.com/repos/Evolveum/midpoint", "Date": "2016-06-09T08:26:53Z"},
{"Line": "=>439", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.location.LocationManager.getLastKnownLocation(LocationManager.NETWORK_PROVIDER)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (location == null) { location = lms.getLastKnownLocation(LocationManager.GPS_PROVIDER); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/5465/buggy-version/app.src.main.java.com.james.zoo.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "0c3717809c88ad5b436ef5666d54fd045832f21d", "Url": "https://api.github.com/repos/empirejames/Android-Taipeizoo", "Date": "2017-09-22T03:28:13Z"},
{"Line": "=>356", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.phenotips.data.similarity.internal.MutualInformationPatientSimilarityView.popBestFeatureMatch(java.util.Collection<org.phenotips.ontology.OntologyTerm>,java.util.Collection<org.phenotips.ontology.OntologyTerm>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (matched == null) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/5350/buggy-version/similarity-data-impl.src.main.java.org.phenotips.data.similarity.internal.MutualInformationPatientSimilarityView.java", "BodyUseAPI": [], "Fixed commit": "c594c6f886d13be6b3a77d95a627e161c05854d5", "Url": "https://api.github.com/repos/phenotips/patient-network", "Date": "2014-03-01T04:38:25Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fromSign || toSign) { if (nid1.equals(nid2)) { return fromSign && toSign; }else { return (!fromSign) || (!toSign); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/7610/buggy-version/src.wyil.util.type.SubtypeOperator.java", "BodyUseAPI": [], "Fixed commit": "2f501309c4329454f6b57fc8a1a1a5bba74ce96b", "Url": "https://api.github.com/repos/Whiley/WhileyCompiler", "Date": "2011-09-14T01:30:26Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (component.isPersistent()) lucee.runtime.orm.ORMUtil.getSession(pageContext);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/7092/buggy-version/source.java.core.src.lucee.runtime.type.UDFRemoveProperty.java", "BodyUseAPI": [], "Fixed commit": "78da73eb38ed1e5ff022b9c6df499e66e0ac5bb1", "Url": "https://api.github.com/repos/lucee/Lucee4", "Date": "2015-06-29T14:11:24Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (component.isPersistent()) lucee.runtime.orm.ORMUtil.getSession(pageContext);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/7092/buggy-version/source.java.core.src.lucee.runtime.type.UDFSetterProperty.java", "BodyUseAPI": [], "Fixed commit": "78da73eb38ed1e5ff022b9c6df499e66e0ac5bb1", "Url": "https://api.github.com/repos/lucee/Lucee4", "Date": "2015-06-29T14:11:24Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (component.isPersistent()) lucee.runtime.orm.ORMUtil.getSession(pageContext);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/7092/buggy-version/source.java.core.src.lucee.runtime.type.UDFSetterProperty.java", "BodyUseAPI": [], "Fixed commit": "78da73eb38ed1e5ff022b9c6df499e66e0ac5bb1", "Url": "https://api.github.com/repos/lucee/Lucee4", "Date": "2015-06-29T14:11:24Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["datastream.getDatastreamUnitsList().get(0).getShortUnitID()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((singleUnitID == null) || ((singleUnitID.length()) < 3)) { singleUnitID = datastream.getDatastreamUnitsList().get(0).getUnitID(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/507/buggy-version/src.servlets.actions.post.health.bytitle.PostDatapointsThroughHealthTitle.java", "BodyUseAPI": [], "Fixed commit": "8d8e4a1fa95125bf25a2483d86bcf8af2c8ddb39", "Url": "https://api.github.com/repos/leoncool/healthbook", "Date": "2014-05-19T19:25:44Z"},
{"Line": "=>397", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((request.getParameter(AllConstants.api_entryPoints.request_api_dataformat)) != null) { util.DateUtil dateUtil = new util.DateUtil(); diDao = new health.database.DAO.nosql.HBaseDatapointDAO(); boolean useSingleUnitExport = false; if (((request.getParameter(AllConstants.api_entryPoints.request_api_single_unit)) != null) && ((request.getParameter(AllConstants.api_entryPoints.request_api_single_unit).length()) > 0)) { useSingleUnitExport = true; } if (useSingleUnitExport) { java.lang.String shortUnitID = datastream.getDatastreamUnitsList().get(0).getShortUnitID(); if (shortUnitID == null) { shortUnitID = datastream.getDatastreamUnitsList().get(0).getUnitID(); } java.lang.System.out.println((\"--------using single unit export with request_api_dataformat-----:\" + shortUnitID)); hbaseexport = diDao.exportDatapointsForSingleUnit(datastream.getStreamId(), start, end, blockid, shortUnitID, null); }else { java.lang.System.out.println(\"--------normal data export with request_api_dataformat-----\"); hbaseexport = diDao.exportDatapoints(datastream.getStreamId(), start, end, blockid, mapUnits, dateUtil.millisecFormat, null); } }else { java.util.HashMap<java.lang.String, java.lang.Object> settings = new java.util.HashMap<java.lang.String, java.lang.Object>(); if ((request.getParameter(AllConstants.api_entryPoints.request_max)) != null) { try { int max = java.lang.Integer.parseInt(request.getParameter(AllConstants.api_entryPoints.request_max)); settings.put(AllConstants.ProgramConts.exportSetting_MAX, max); } catch (java.lang.Exception ex) { server.exception.ReturnParser.outputErrorException(response, AllConstants.ErrorDictionary.Invalid_ValueType, null, AllConstants.api_entryPoints.request_max); return; } } if (streamTitle.equalsIgnoreCase(AllConstants.ProgramConts.defaultDS_Name_heart_rate)) { health.database.DAO.nosql.DataPointsSimulators simulator = new health.database.DAO.nosql.DataPointsSimulators(); hbaseexport = simulator.exportHeartRateDatapoints(datastream.getStreamId(), start, end, blockid, mapUnits, null, settings); }else { diDao = new health.database.DAO.nosql.HBaseDatapointDAO(); boolean useSingleUnitExport = false; if (((request.getParameter(AllConstants.api_entryPoints.request_api_single_unit)) != null) && ((request.getParameter(AllConstants.api_entryPoints.request_api_single_unit).length()) > 0)) { useSingleUnitExport = true; } if (useSingleUnitExport) { java.lang.String shortUnitID = datastream.getDatastreamUnitsList().get(0).getShortUnitID(); if (shortUnitID == null) { shortUnitID = datastream.getDatastreamUnitsList().get(0).getUnitID(); } java.lang.System.out.println((\"--------using single unit export-----:\" + shortUnitID)); hbaseexport = diDao.exportDatapointsForSingleUnit(datastream.getStreamId(), start, end, blockid, shortUnitID, null); }else { java.lang.System.out.println(\"--------normal data export-----\"); hbaseexport = diDao.exportDatapoints(datastream.getStreamId(), start, end, blockid, mapUnits, null, settings); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/507/buggy-version/src.servlets.actions.get.health.bytitle.GetHealthDataPointsByTitle.java", "BodyUseAPI": ["request.getParameter(AllConstants.api_entryPoints.request_api_single_unit).length()", "request.getParameter(AllConstants.api_entryPoints.request_api_single_unit).length()", "java.lang.Integer.parseInt(request.getParameter(AllConstants.api_entryPoints.request_max))", "javax.servlet.http.HttpServletRequest.getParameter(AllConstants.api_entryPoints.request_max)", "javax.servlet.http.HttpServletRequest.getParameter(AllConstants.api_entryPoints.request_api_single_unit)", "javax.servlet.http.HttpServletRequest.getParameter(AllConstants.api_entryPoints.request_api_single_unit)", "javax.servlet.http.HttpServletRequest.getParameter(AllConstants.api_entryPoints.request_max)", "javax.servlet.http.HttpServletRequest.getParameter(AllConstants.api_entryPoints.request_api_single_unit)", "javax.servlet.http.HttpServletRequest.getParameter(AllConstants.api_entryPoints.request_api_single_unit)"], "Fixed commit": "8d8e4a1fa95125bf25a2483d86bcf8af2c8ddb39", "Url": "https://api.github.com/repos/leoncool/healthbook", "Date": "2014-05-19T19:25:44Z"},
{"Line": "=>367", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(language.equals(\"en\"))) { uri += (language) + \".\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/6575/buggy-version/src.main.java.ixa.pipe.ned.Annotate.java", "BodyUseAPI": [], "Fixed commit": "55a755a0d884d47adb37d05c17128c69c9bf2843", "Url": "https://api.github.com/repos/ixa-ehu/ixa-pipe-ned", "Date": "2014-10-07T09:59:23Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fieldQuery.getFieldValue().toLowerCase()", "de.ingrid.utils.query.FieldQuery.getFieldName()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((\"incl_meta\".equals(indexField)) && (\"on\".equals(value))) { }else if (value.contains(\"*\")) { subQuery = org.elasticsearch.index.query.QueryBuilders.wildcardQuery(indexField, value); bq = de.ingrid.admin.elasticsearch.converter.ConverterUtils.applyAndOrRules(fieldQuery, bq, subQuery); }else { subQuery = org.elasticsearch.index.query.QueryBuilders.matchQuery(fieldQuery.getFieldName(), fieldQuery.getFieldValue()); bq = de.ingrid.admin.elasticsearch.converter.ConverterUtils.applyAndOrRules(fieldQuery, bq, subQuery); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/4919/buggy-version/src.main.java.de.ingrid.admin.elasticsearch.converter.FieldQueryIGCConverter.java", "BodyUseAPI": ["org.elasticsearch.index.query.QueryBuilders.wildcardQuery(java.lang.String,java.lang.String)", "java.lang.String.contains(java.lang.String)"], "Fixed commit": "a72387f438b1e3dca2c2361cfc3ff01d3c3a119f", "Url": "https://api.github.com/repos/informationgrid/ingrid-base-webapp", "Date": "2015-11-18T11:12:27Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (failure != null) { if (!(fr.inria.diversify.transformation.Transformation.failuresDico.containsKey(failure))) { fr.inria.diversify.transformation.Transformation.failuresDico.put(failure, fr.inria.diversify.transformation.Transformation.id); (fr.inria.diversify.transformation.Transformation.id)++; } array.put(fr.inria.diversify.transformation.Transformation.failuresDico.get(failure)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/4173/buggy-version/core.src.main.java.fr.inria.diversify.transformation.Transformation.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Integer>.containsKey(java.lang.String)", "java.util.Map<java.lang.String, java.lang.Integer>.put(java.lang.String,int)", "java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)", "org.json.JSONArray.put(java.lang.Integer)"], "Fixed commit": "7d237d3f0fe79328210c9a8ac7680399370bbb99", "Url": "https://api.github.com/repos/DIVERSIFY-project/sosiefier", "Date": "2015-03-12T15:33:51Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lastPressed) != (com.marianogiuffrida.pilotcalc.CalculatorFragment.ButtonType.NUMBER)) { (consequetiveOperatorCount)--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/4249/buggy-version/app.src.main.java.com.marianogiuffrida.pilotcalc.CalculatorFragment.java", "BodyUseAPI": [], "Fixed commit": "c08f8fb6e1d6af8466bdee05292d9de3d032bc52", "Url": "https://api.github.com/repos/mgiuffri/PilotCalc", "Date": "2015-01-22T11:24:38Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (teamNR == 9) { this.iTeam = 0; }else { this.iTeam = teamNR; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/2660/buggy-version/de.hannit.fsch.common.csv.azv.src.de.hannit.fsch.common.csv.azv.Arbeitszeitanteil.java", "BodyUseAPI": [], "Fixed commit": "cbfc12de84188f1823937ff07f3be09221664a67", "Url": "https://api.github.com/repos/frankschaare/de.hannit.fsch.common.csv.azv", "Date": "2014-03-21T15:53:50Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.URL.openConnection()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((!(sofile.exists())) || ((conn.getLastModified()) > (sofile.lastModified()))) { java.io.FileOutputStream out = new java.io.FileOutputStream(sofile); byte[] buffer = new byte[4096]; int c = 0; while ((c = in.read(buffer)) != (-1)) { out.write(buffer, 0, c); } out.close(); if (nginx.clojure.DiscoverJvm.detectOSArchExt().startsWith(\"linux\")) { java.lang.Process p = java.lang.Runtime.getRuntime().exec(new java.lang.String[]{ \"/bin/sh\", \"-c\", \"chcon -u system_u -r object_r -t textrel_shlib_t \" + (sofile.getAbsolutePath()) }); try { if ((p.waitFor()) != 0) { nginx.clojure.NginxClojureRT.getLog().debug(\"fail to change security of nginx clojure embed shared library, just ignore it.\"); } } catch (java.lang.InterruptedException e) { nginx.clojure.NginxClojureRT.getLog().error((((\"can not write so file \" + (nginx.clojure.embed.NginxEmbedServer.tmpRoot.getAbsoluteFile())) + \"/\") + soname), e); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/7104/buggy-version/nginx-clojure-embed.src.java.nginx.clojure.embed.NginxEmbedServer.java", "BodyUseAPI": ["java.lang.Runtime.exec(java.lang.String[])", "java.io.File.getAbsolutePath()"], "Fixed commit": "2cefa8343f0115ed81eb76b051868bc5ca32ee71", "Url": "https://api.github.com/repos/nginx-clojure/nginx-clojure", "Date": "2015-08-12T14:31:32Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.ucchyocean.lc.command.LogCommand.getChannel(java.lang.String)", "com.github.ucchyocean.lc.channel.ChannelPlayer.getChannelPlayer(org.bukkit.entity.Player)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(channel.getMembers().contains(cp))) { sendResourceMessage(sender, com.github.ucchyocean.lc.command.PREERR, \"errmsgNomember\"); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/2474/buggy-version/src.main.java.com.github.ucchyocean.lc.command.LogCommand.java", "BodyUseAPI": [], "Fixed commit": "2b382ec31c2af4439ecdff92706307ea8bdf50ba", "Url": "https://api.github.com/repos/ucchyocean/LunaChat", "Date": "2014-09-28T04:45:43Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openstack.atlas.docs.loadbalancers.api.v1.Node.getAddress()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (address.contains(\"\\n\")) { address = address.replaceAll(\"\\n\", \"\"); node.setAddress(address); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/8407/buggy-version/api.common-api.src.main.java.org.openstack.atlas.api.resources.providers.CommonDependencyProvider.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "b3a3084243448c2b632b7cf9995ccc74a55c33bd", "Url": "https://api.github.com/repos/lbrackspace/atlas-lb", "Date": "2013-08-20T16:06:36Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (courses.containsKey(id)) { freshmenCourseCounts.put(id, total); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/7526/buggy-version/src.CourseParser.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.Integer>.put(java.lang.String,int)"], "Fixed commit": "364c94eac4663306afdf383a3dea6ebe750d572b", "Url": "https://api.github.com/repos/johngillett/Capstone", "Date": "2016-03-04T02:08:19Z"},
{"Line": "=>836", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.nijikokun.cjcfork.bukkit.General.Misc.playerMatch(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (lookup == null) { com.nijikokun.cjcfork.bukkit.General.Messaging.send(((\"Player &c\" + (split[1])) + \" &fis not online!\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/7292/buggy-version/com.nijikokun.bukkit.General.iListen.java", "BodyUseAPI": [], "Fixed commit": "12998e3db69903548262e664dded04464d6f2902", "Url": "https://api.github.com/repos/cjc343/General", "Date": "2011-03-22T12:59:18Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((((posy) < ((Main.HEIGHT) - 100)) && ((posy) > 0)) && ((posx) > 0)) && ((posx) < ((Main.WIDTH) - 7))) { g.drawString(debugstrn, posx, posy); g.drawLine(posx, 0, posx, ((Main.HEIGHT) - 100)); g.drawLine(0, posy, Main.WIDTH, posy); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/8858/buggy-version/src.me.daniel.draw.Paint.java", "BodyUseAPI": ["java.awt.Graphics.drawLine(int,int,int,((Main.HEIGHT) - 100))"], "Fixed commit": "984a5a968ea26350507285cdc778f1e71e727f0a", "Url": "https://api.github.com/repos/dashaw92/mup2", "Date": "2016-03-19T00:54:04Z"},
{"Line": "=>381", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mMatch.getStatus()) != (com.google.android.gms.games.multiplayer.turnbased.TurnBasedMatch.MATCH_STATUS_COMPLETE)) { notifyParticipantResult(mMatch.getParticipant(getCurrentParticipantId()).getResult()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/3565/buggy-version/javaplay.app.src.main.java.com.levigilad.javaplay.infra.PlayFragment.java", "BodyUseAPI": ["mMatch.getParticipant(getCurrentParticipantId()).getResult()", "com.google.android.gms.games.multiplayer.turnbased.TurnBasedMatch.getParticipant(java.lang.String)", "com.levigilad.javaplay.infra.PlayFragment.notifyParticipantResult(mMatch.getParticipant(getCurrentParticipantId()).getResult())"], "Fixed commit": "98512fbf3b98c664c1fa26cbea1930b8b35b521d", "Url": "https://api.github.com/repos/idanlv/JavaPlay_Android", "Date": "2016-12-03T18:15:40Z"},
{"Line": "=>791", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(cascadeStats.isFinished())) cascadeStats.markFailed(throwable);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/8960/buggy-version/cascading-core.src.main.java.cascading.cascade.Cascade.java", "BodyUseAPI": ["cascading.stats.CascadeStats.markFailed(java.lang.Throwable)"], "Fixed commit": "050330e7a4ed091fd0c7830b3e6b8e63bb86514b", "Url": "https://api.github.com/repos/cchepelov/cascading", "Date": "2014-10-24T16:26:31Z"},
{"Line": "=>1074", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(cascadeStats.isFinished())) cascadeStats.markFailed(cascadeException);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/8960/buggy-version/cascading-core.src.main.java.cascading.cascade.Cascade.java", "BodyUseAPI": ["cascading.stats.CascadeStats.markFailed(cascading.cascade.CascadeException)"], "Fixed commit": "050330e7a4ed091fd0c7830b3e6b8e63bb86514b", "Url": "https://api.github.com/repos/cchepelov/cascading", "Date": "2014-10-24T16:26:31Z"},
{"Line": "=>635", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getSelectedItems().get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (getItem(selected).isMap()) { copyText = copyText.substring(0, copyText.indexOf(\"http\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/5114/buggy-version/app.src.main.java.org.fossasia.susi.ai.adapters.recycleradapters.ChatFeedRecyclerAdapter.java", "BodyUseAPI": [], "Fixed commit": "0d868ef0a38a189f96bb66ee5c3f7ea8b71fcf6c", "Url": "https://api.github.com/repos/nikhilbalyan/susi_android", "Date": "2016-11-05T21:44:27Z"},
{"Line": "=>649", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getData().get(java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (message.isMap()) { java.lang.String CopiedText = getData().get(i).getContent(); copyText += CopiedText.substring(0, CopiedText.indexOf(\"http\")); }else copyText += message.getContent();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/5114/buggy-version/app.src.main.java.org.fossasia.susi.ai.adapters.recycleradapters.ChatFeedRecyclerAdapter.java", "BodyUseAPI": ["org.fossasia.susi.ai.model.ChatMessage.getContent()"], "Fixed commit": "0d868ef0a38a189f96bb66ee5c3f7ea8b71fcf6c", "Url": "https://api.github.com/repos/nikhilbalyan/susi_android", "Date": "2016-11-05T21:44:27Z"},
{"Line": "=>13", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((berlin.funemployed.wherewhat.App.component) == null) { berlin.funemployed.wherewhat.App.component = berlin.funemployed.wherewhat.dependencygraph.DaggerMainComponent.create(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/4844/buggy-version/wear.src.main.java.berlin.funemployed.wherewhat.App.java", "BodyUseAPI": [], "Fixed commit": "c1c7617608507c02431f9f35c801fcfcad5253a6", "Url": "https://api.github.com/repos/johnjohndoe/WhereWhat", "Date": "2015-11-28T01:11:02Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args.length) > 3) { throw new java.lang.IllegalArgumentException(\"Only 3 valid arguments are permitted\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/38/buggy-version/src.main.java.com.jentfoo.MediaConverter.java", "BodyUseAPI": [], "Fixed commit": "5b6ac343860f1b228aafcfd634f66a8f8f4d495d", "Url": "https://api.github.com/repos/jentfoo/XboxMediaProcessor", "Date": "2013-11-01T00:25:22Z"},
{"Line": "=>693", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (retVal == 0) { retVal = zkWorker.getWorker().getHost().compareTo(zkWorker.getWorker().getHost()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/2142/buggy-version/indexing-service.src.main.java.com.metamx.druid.indexing.coordinator.RemoteTaskRunner.java", "BodyUseAPI": [], "Fixed commit": "795657aedfb17a36999ccb65f3b87626c8ef444c", "Url": "https://api.github.com/repos/metamx/druid", "Date": "2013-08-07T04:04:13Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(imageView.isInsideImage(x, y))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/6816/buggy-version/src.main.java.ar.com.ktulu.caliboro.ui.images.ImageManager.java", "BodyUseAPI": [], "Fixed commit": "b1d62e5c8ef9c490a0337bb9f708a71c8d3804b1", "Url": "https://api.github.com/repos/luisparravicini/caliboro", "Date": "2013-10-30T22:31:17Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["assertion.object.observation()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((appropriatenessOf(target)) < (assertion.weight)) { final conceptualspace.Point newPrototype = prototype.plus(target.minus(prototype).times(lambda(assertion.weight, target))); final double newThreshold = (alpha(assertion.weight, target)) * (threshold); return new agent.Concept(newPrototype, newThreshold); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/4168/buggy-version/src.main.java.agent.Concept.java", "BodyUseAPI": ["agent.Concept.lambda(assertion.weight,conceptualspace.Point)", "conceptualspace.Point.plus(target.minus(prototype).times(lambda(assertion.weight, target)))", "agent.Concept.alpha(assertion.weight,conceptualspace.Point)", "conceptualspace.Point.minus(conceptualspace.Point)", "target.minus(prototype).times(double)"], "Fixed commit": "dbea4a465ac05dd059ded33879cccba02383d11d", "Url": "https://api.github.com/repos/notthebees/languagegames", "Date": "2015-02-12T14:53:53Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((obsGroup.getGroupMembers(false)) != null) { member = findMember(obsGroup, memberConcept); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/8040/buggy-version/api.src.main.java.org.openmrs.module.bacteriology.api.specimen.SpecimenMetadataDescriptor.java", "BodyUseAPI": ["org.openmrs.module.bacteriology.api.specimen.SpecimenMetadataDescriptor.findMember(org.openmrs.module.bacteriology.api.specimen.Obs,org.openmrs.module.bacteriology.api.specimen.Concept)"], "Fixed commit": "21e6f909f997991c349805cece070398079cbf7e", "Url": "https://api.github.com/repos/Bahmni/bacteriology", "Date": "2016-01-15T07:33:03Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (recieverUUID != null) { org.bukkit.OfflinePlayer reciever = org.bukkit.Bukkit.getOfflinePlayer(recieverUUID); if ((reciever.getName()) != null) { econ.depositPlayer(reciever, value); }else { econ.depositPlayer(this.plugin.getRegionManager().getPlayerName(recieverUUID), value); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/5641/buggy-version/src.main.java.de.kekshaus.cubit.api.vaultAPI.eConomy.EconomyHook.java", "BodyUseAPI": ["org.bukkit.Bukkit.getOfflinePlayer(java.util.UUID)", "net.milkbowl.vault.economy.Economy.depositPlayer(this.plugin.getRegionManager().getPlayerName(recieverUUID),double)", "this.plugin.getRegionManager().getPlayerName(java.util.UUID)"], "Fixed commit": "bcabe9d7c35f71a445e27ec5f084996ab62ba1a1", "Url": "https://api.github.com/repos/MineGaming/cubit", "Date": "2017-04-02T13:56:47Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(org.athento.utils.StringUtils.isNullOrEmpty(sortBy))) { params.put(\"sortBy\", sortBy); if (!(org.athento.utils.StringUtils.isNullOrEmpty(sortOrder))) { params.put(\"sortOrder\", sortOrder); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/8235/buggy-version/athento-nx-automation-extended.src.main.java.org.athento.nuxeo.operations.AthentoDocumentResultSetOperation.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,java.lang.String)"], "Fixed commit": "a25bd832f29242f56b3be316617fc3c1d12ab934", "Url": "https://api.github.com/repos/athento/athento-nx-automation-extended", "Date": "2016-07-06T11:05:29Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fieldName.equals(\"Street\")) query += ((fieldName + \" LIKE '%\") + (searchTerms.values[field])) + \"%' COLLATE NOCASE\"; else query += ((fieldName + \" = '\") + (searchTerms.values[field])) + \"' COLLATE NOCASE\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/1410/buggy-version/app.src.main.java.sdgnys.outpostlite.search.Search.java", "BodyUseAPI": [], "Fixed commit": "91176be9ca250b85c0ea099435754b45bb0c074f", "Url": "https://api.github.com/repos/JonForce/OutpostLite", "Date": "2017-12-19T18:37:10Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(toMove())) jChecsGame.goPrevious();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/8048/buggy-version/src.main.java.me.desht.chesscraft.chess.ai.JChecsAI.java", "BodyUseAPI": [], "Fixed commit": "541e75bb491660dc164b27b16fba066e8cd1022c", "Url": "https://api.github.com/repos/desht/ChessCraft", "Date": "2012-11-14T14:38:14Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(netManager.connectionAvailable(url))) { notificationManager.notifyUnavailability(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/117/buggy-version/src.main.java.core.impl.ManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "09a799629452d79271a02f34ac5b90eb6f39c866", "Url": "https://api.github.com/repos/pablo-parra/hey", "Date": "2016-11-22T21:32:28Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentPlayer == (startPlayer)) && ((players[currentPlayer].hand.size()) == 4)) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/3444/buggy-version/app.src.main.java.com.example.james.cardsuite.SpadesManager.java", "BodyUseAPI": [], "Fixed commit": "491f47cf9fd12bc43bcd0f137349bd4fd01c2d9b", "Url": "https://api.github.com/repos/SVT125/GermanBridge", "Date": "2015-08-26T01:00:52Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((material) != null) price = org.saga.config.EconomyConfiguration.config().getPrice(material);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/2075/buggy-version/src.org.saga.buildings.signs.BuySign.java", "BodyUseAPI": [], "Fixed commit": "b5df12fd331a95523b6add2e7fc22a2d223d487a", "Url": "https://api.github.com/repos/andfRa/Saga", "Date": "2012-08-13T01:52:06Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((((((i0 == 255) && (i1 == 255)) && (i3 == 255)) && (i4 == 255)) && (i5 == 255)) && (i6 == 255)) && (i7 == 255)) return -1L;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/8918/buggy-version/core.src.main.java.org.gagravarr.ogg.IOUtils.java", "BodyUseAPI": [], "Fixed commit": "8454694ac18e6b2553db93349dd0ca0a89c40c32", "Url": "https://api.github.com/repos/Gagravarr/VorbisJava", "Date": "2014-03-18T17:19:14Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((head.next) != null) { head.next.prev = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/3099/buggy-version/src.Deque.java", "BodyUseAPI": [], "Fixed commit": "e8d232d1d528843efd575c9e2c879ab3a3b258ba", "Url": "https://api.github.com/repos/szhou1/Algs4", "Date": "2017-01-02T16:12:47Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tail.prev) != null) { tail.prev.next = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/3099/buggy-version/src.Deque.java", "BodyUseAPI": [], "Fixed commit": "e8d232d1d528843efd575c9e2c879ab3a3b258ba", "Url": "https://api.github.com/repos/szhou1/Algs4", "Date": "2017-01-02T16:12:47Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.common.collect.Iterables.tryFind(java.util.List<com.stefankendall.BigLifts.allprograms.formulas.bar.PlateRemaining>,com.google.common.base.Predicate<com.stefankendall.BigLifts.allprograms.formulas.bar.PlateRemaining>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (plateForWeight.isPresent()) { plateForWeight.get().count = 0; platesToMakeWeight.remove(lastPlateWeight); }else { return potentialSolution; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/344/buggy-version/src.com.stefankendall.BigLifts.allprograms.formulas.bar.BarCalculator.java", "BodyUseAPI": ["com.google.common.base.Optional<com.stefankendall.BigLifts.allprograms.formulas.bar.PlateRemaining>.get()"], "Fixed commit": "ecf006be01b99c3550c1ae7c3155846f1c16efcb", "Url": "https://api.github.com/repos/stefankendall/Big-Lifts-2-Android", "Date": "2014-09-24T01:05:19Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mToolbar) != null) { mToolbar.setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/5528/buggy-version/app.src.main.java.com.versatilemobitech.ourtour.fragments.VendorRegistrationFragment.java", "BodyUseAPI": [], "Fixed commit": "5a8b00bf5a6384fe2c2e8a9ce3548c7e5e5a1a3a", "Url": "https://api.github.com/repos/sixscorpions/OurTour", "Date": "2016-10-15T03:11:50Z"},
{"Line": "=>336", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["me.stendec.abyss.util.BlockUtils.getBoundsBlocks(java.util.List<org.bukkit.block.Block>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (cube == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/7003/buggy-version/src.me.stendec.abyss.listeners.BlockListener.java", "BodyUseAPI": [], "Fixed commit": "a56b04a5de22a77365a49430b6531d3ce84a71f6", "Url": "https://api.github.com/repos/stendec/Abyss", "Date": "2013-02-17T22:17:43Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((arrowsPerScores == null) || (arrowsPerScores.isEmpty())) { horizontalBarChart.clear(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/2555/buggy-version/app.src.main.java.ar.com.tzulberti.archerytraining.fragments.common.AbstractArrowSeriesStatsFragment.java", "BodyUseAPI": [], "Fixed commit": "70ba02acbc22820a05cbff3e205cc45e9ec1db78", "Url": "https://api.github.com/repos/tzulberti/archery-training", "Date": "2017-07-29T11:54:36Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(jvmArgument.startsWith(\"-\"))) { jvmArgument = \"-\" + jvmArgument; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/5419/buggy-version/src.main.java.com.jayway.maven.plugins.android.phase08preparepackage.DexMojo.java", "BodyUseAPI": [], "Fixed commit": "f2b99e4c29f5a3d3ad9b1941789f52b8866937f5", "Url": "https://api.github.com/repos/simpligility/android-maven-plugin", "Date": "2011-05-17T04:47:42Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["se.kth.csc.iprog.dinnerplanner.model.DinnerModel.getSelectedDish(ChooseDish.currentDishType)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (currentDish != null) { model.removeFromMenu(currentDish); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/5248/buggy-version/src.se.kth.csc.iprog.dinnerplanner.ChooseDishFragment.java", "BodyUseAPI": ["se.kth.csc.iprog.dinnerplanner.model.DinnerModel.removeFromMenu(se.kth.csc.iprog.dinnerplanner.model.Dish)"], "Fixed commit": "2f0272327495e511e8d0ab2a0b131c6de1a5f3d9", "Url": "https://api.github.com/repos/Hygea/DinnerPlannerAndroid", "Date": "2013-02-11T16:24:21Z"},
{"Line": "=>1118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isDisposed())) { canvas_lineNumberArea[0].redraw(); getDisplay().update(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/6305/buggy-version/src.org.nschmidt.ldparteditor.composites.compositetab.CompositeTab.java", "BodyUseAPI": [], "Fixed commit": "e724169bc321af5f7a6cb978a13e5cdbcd18a987", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2016-03-02T16:29:21Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.stanford.bmir.ncbo.recommender.Recommender2Facade.getRanking(java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.util.List<java.lang.String>,double,double,double,double,double,double,double,double,double,double)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((results.size()) > 0) logger.info((\"First result: \" + (results.get(0).getOntologyAcronyms())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/2899/buggy-version/src.main.java.edu.stanford.bmir.ncbo.recommender.service.resources.Recommender2Resource.java", "BodyUseAPI": ["java.util.List<edu.stanford.bmir.ncbo.recommender.result.RecommendationResultTO>.get(int)", "results.get(0).getOntologyAcronyms()", "org.slf4j.Logger.info((\"First result: \" + (results.get(0).getOntologyAcronyms())))"], "Fixed commit": "3b580f8395f7943b6a686a7e7d28ab3f5eb100e7", "Url": "https://api.github.com/repos/marcosmartinezromero/recommender2_web_service", "Date": "2014-10-27T23:34:42Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (accessibility != null) this.accessibility = new java.util.ArrayList<>(accessibility);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/9135/buggy-version/pract1ServidorWeb.src.beans.Local.java", "BodyUseAPI": [], "Fixed commit": "5b6f8c1f9ad30c4d7997378dd0d3c69e0ce393dc", "Url": "https://api.github.com/repos/Muahahas/prac1_sys", "Date": "2016-05-19T11:04:05Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<E>.next()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (val == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/807/buggy-version/src.util.data.maps.DataCollection.java", "BodyUseAPI": [], "Fixed commit": "ceba7cf45f9a3cd69da5bcbc4142c3655c668e5d", "Url": "https://api.github.com/repos/jrc436/executors", "Date": "2016-11-17T18:47:03Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["xdi2.core.features.nodetypes.XdiInnerRoot.fromContextNode(this.getRelation().follow())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(xdiInnerRoot.getPredicateOfInnerRoot().equals(this.getRelation().getArcXri()))) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/7442/buggy-version/messaging.src.main.java.xdi2.messaging.Operation.java", "BodyUseAPI": [], "Fixed commit": "c2dea32d1f8cc09919474ac90707b372a4fc1f25", "Url": "https://api.github.com/repos/projectdanube/xdi2", "Date": "2014-07-19T10:52:31Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["xdi2.core.features.nodetypes.XdiInnerRoot.fromContextNode(this.getRelation().follow())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (xdiInnerRoot == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/7442/buggy-version/messaging.src.main.java.xdi2.messaging.Operation.java", "BodyUseAPI": [], "Fixed commit": "c2dea32d1f8cc09919474ac90707b372a4fc1f25", "Url": "https://api.github.com/repos/projectdanube/xdi2", "Date": "2014-07-19T10:52:31Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Integer, aplikasi.peserta.domain.Peserta>.get(p.getId())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (px == null) { p.setId(dbPalsu.size()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/163/buggy-version/aplikasi-manajemen-peserta-service.src.main.java.aplikasi.peserta.service.impl.dummy.ManajemenPesertaServiceDummy.java", "BodyUseAPI": [], "Fixed commit": "9e21343939846fa8a4df31ef9b0d9bd8fe716013", "Url": "https://api.github.com/repos/endymuhardin/belajar-ws", "Date": "2011-09-28T09:20:01Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((view.getBackground()) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/7984/buggy-version/presentation.src.main.java.uk.co.bubblebearapps.motionaiclient.view.customsetters.ViewCustomSetters.java", "BodyUseAPI": [], "Fixed commit": "b66059bff5aa0fc2bb1a16810ab4c405957b1f05", "Url": "https://api.github.com/repos/JoeyJubb/MotionAiClient", "Date": "2017-02-14T12:24:46Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.get(Strings.PROJECT)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((project == null) || (project.trim().isEmpty())) project = jetbrains.macros.util.Strings.ALL_PROJECTS;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/7131/buggy-version/src.jetbrains.macros.IssueReport.java", "BodyUseAPI": [], "Fixed commit": "529c27537fd002b6ad8df22d6da9f7a228d6252a", "Url": "https://api.github.com/repos/JetBrains/youtrack-confluence-plugin", "Date": "2016-09-19T16:16:58Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (collName.startsWith(cz.cuni.mff.d3s.been.repository.mongo.MongoDeleteQueryRedactor.MONGO_SYSTEM_PREFIX)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/3763/buggy-version/mongo-storage.src.main.java.cz.cuni.mff.d3s.been.repository.mongo.MongoDeleteQueryRedactor.java", "BodyUseAPI": [], "Fixed commit": "7f1f1300318ebaa9698908dc0dde42317ffe6583", "Url": "https://api.github.com/repos/ever-been/everBeen", "Date": "2013-08-24T12:56:13Z"},
{"Line": "=>4347", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (compatibleCount == 0) { return new org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding(visible[0].selector, argumentTypes, ProblemReasons.NotFound); }else if (compatibleCount == 1) { org.eclipse.jdt.internal.compiler.lookup.MethodBinding candidate = inferInvocationType(invocationSite, visible[0], argumentTypes); compilationUnitScope().recordTypeReferences(candidate.thrownExceptions); return candidate; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/7317/buggy-version/org.eclipse.jdt.core.compiler.org.eclipse.jdt.internal.compiler.lookup.Scope.java", "BodyUseAPI": [], "Fixed commit": "d42283612c50c1a8c04bc9318f8606f0e3f485c5", "Url": "https://api.github.com/repos/Overruler/eclipse.jdt.core", "Date": "2014-02-07T18:35:52Z"},
{"Line": "=>4339", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((compatibilityLevels[i] = parameterCompatibilityLevel(visible[i], argTypes)) != (org.eclipse.jdt.internal.compiler.lookup.Scope.NOT_COMPATIBLE)) { if (i != compatibleCount) { visible[compatibleCount] = visible[i]; compatibilityLevels[compatibleCount] = compatibilityLevels[i]; } compatibleCount++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/7317/buggy-version/org.eclipse.jdt.core.compiler.org.eclipse.jdt.internal.compiler.lookup.Scope.java", "BodyUseAPI": [], "Fixed commit": "d42283612c50c1a8c04bc9318f8606f0e3f485c5", "Url": "https://api.github.com/repos/Overruler/eclipse.jdt.core", "Date": "2014-02-07T18:35:52Z"},
{"Line": "=>4355", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (compatibleCount != visibleSize) { java.lang.System.arraycopy(visible, 0, (visible = new org.eclipse.jdt.internal.compiler.lookup.MethodBinding[visibleSize = compatibleCount]), 0, compatibleCount); java.lang.System.arraycopy(compatibilityLevels, 0, (compatibilityLevels = new int[compatibleCount]), 0, compatibleCount); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/7317/buggy-version/org.eclipse.jdt.core.compiler.org.eclipse.jdt.internal.compiler.lookup.Scope.java", "BodyUseAPI": ["java.lang.System.arraycopy(int[],int,int[],int,int)", "java.lang.System.arraycopy(org.eclipse.jdt.internal.compiler.lookup.MethodBinding[],int,(visible = new org.eclipse.jdt.internal.compiler.lookup.MethodBinding[visibleSize = compatibleCount]),int,int)"], "Fixed commit": "d42283612c50c1a8c04bc9318f8606f0e3f485c5", "Url": "https://api.github.com/repos/Overruler/eclipse.jdt.core", "Date": "2014-02-07T18:35:52Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((e instanceof java.lang.IllegalArgumentException) && (e.getMessage().equals(\"Invalid location\"))) { java.lang.System.out.println(\"Ignoring java.lang.IllegalArgumentException: Invalid location\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/1739/buggy-version/src.de.selfmade4u.klassenmixer.gui.MainJFrame.java", "BodyUseAPI": [], "Fixed commit": "79b43b8aae005c643b1f26af8ba39ed181621c3f", "Url": "https://api.github.com/repos/mohe2015/Klassenmixer", "Date": "2017-08-23T13:54:22Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((null == simpleKey) && (null == parentKey)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/8212/buggy-version/mardao-gae.src.main.java.net.sf.mardao.core.dao.TypeDaoImpl.java", "BodyUseAPI": [], "Fixed commit": "d1ccccf99882f391bae2a69fce603f6d4f6b1399", "Url": "https://api.github.com/repos/sosandstrom/mardao", "Date": "2013-02-11T03:49:11Z"},
{"Line": "=>827", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((e.getKeyCode()) == (java.awt.event.KeyEvent.VK_F2)) { lookupFrame.setVisible(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/5723/buggy-version/SSS.src.sss.ui.PosFrame.java", "BodyUseAPI": [], "Fixed commit": "aefa36b6bd521f84c490607258d9a02cae891ea1", "Url": "https://api.github.com/repos/jkent13/sss_project", "Date": "2015-10-05T00:20:18Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (lst != null) { ForSize : for (int i = 0; i < (lst.size()); ++i) { DummyCore.Utils.UnformedItemStack stack = lst.get(i); { if (((stack == null) || (stack.possibleStacks.isEmpty())) && ((pair[i]) == null)) { continue ForSize; } if ((stack != null) && (!(stack.itemStackMatches(pair[i])))) continue ForLST; } } return lst; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/7257/buggy-version/java.ec3.api.MagicianTableRecipes.java", "BodyUseAPI": ["java.util.List<DummyCore.Utils.UnformedItemStack>.size()", "java.util.List<DummyCore.Utils.UnformedItemStack>.get(int)"], "Fixed commit": "f3650a92a211c96a0c0581b3876c2cdd84a2fbd5", "Url": "https://api.github.com/repos/Modbder/EssentialCraft3", "Date": "2015-05-28T12:49:57Z"},
{"Line": "=>5326", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.hsqldb.ParserDQL.XreadRasArrayDimensionLiteralOrNull()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (dimensionList == null) { org.hsqldb.Expression e = XreadValueExpressionOrNull(); readThis(Tokens.RIGHTBRACKET); return new org.hsqldb.Expression(OpTypes.ARRAY, new org.hsqldb.Expression[]{ e }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/1117/buggy-version/src.org.hsqldb.ParserDQL.java", "BodyUseAPI": [], "Fixed commit": "96eee444ed3e675f1b83739e09db6c691994e792", "Url": "https://api.github.com/repos/misev/asqldb", "Date": "2014-05-05T10:34:45Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (obj instanceof java.util.Map.Entry<?, ?>) nobj = ((java.util.Map.Entry<?, ?>) (obj)).getKey();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/8664/buggy-version/struts2.org.beangle.struts2.view.src.main.java.org.beangle.struts2.view.component.Select.java", "BodyUseAPI": [], "Fixed commit": "91c48bbd2e3f1e55488741bb01f4de6c8c166772", "Url": "https://api.github.com/repos/beangle/library", "Date": "2013-08-12T04:49:18Z"},
{"Line": "=>298", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((operationEntry) != false) calculate();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/7647/buggy-version/app.src.main.java.com.arena.deba.mycalculator.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "82c76d0ed9ff1109ab6941e3f3f520305dc029f6", "Url": "https://api.github.com/repos/debasishgt/CS594-Android-Calculator", "Date": "2015-05-04T04:39:14Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (variablesManager != null) { variablesManager.transformPackageVariablesToDirPath(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/3308/buggy-version/src.main.java.org.telosys.tools.generator.context.Target.java", "BodyUseAPI": [], "Fixed commit": "618ef850d0018a16ad66b8dcb704e0a08b288066", "Url": "https://api.github.com/repos/telosys-tools-bricks/telosys-tools-generator", "Date": "2015-02-19T17:33:23Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((from.getDiskFormat()) != (org.openstack4j.model.image.DiskFormat.UNRECOGNIZED)) headers.put(org.openstack4j.openstack.image.domain.ImageHeader.DISK_FORMAT.asHeader(), from.getDiskFormat().value());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/4379/buggy-version/core.src.main.java.org.openstack4j.openstack.image.domain.functions.ImageForUpdateToHeaders.java", "BodyUseAPI": ["org.openstack4j.model.image.Image.getDiskFormat()", "from.getDiskFormat().value()", "java.util.Map<java.lang.String, java.lang.Object>.put(org.openstack4j.openstack.image.domain.ImageHeader.DISK_FORMAT.asHeader(),from.getDiskFormat().value())"], "Fixed commit": "3946aeac2746a255cacbfd5cd9e87bc6f53799a0", "Url": "https://api.github.com/repos/assistanz/openstack4j", "Date": "2015-03-26T13:37:11Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((folderList) != null) && ((folderList.size()) > 0)) { database.deleteElement(folderList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/8126/buggy-version/ch.droptilllate.application.src.ch.droptilllate.application.controller.ViewController.java", "BodyUseAPI": ["ch.droptilllate.database.api.IDatabase.deleteElement(java.util.List<ch.droptilllate.application.model.GhostFolderDob>)"], "Fixed commit": "98d5cbf17e241dc7fffa30a749e109c5ec135ec0", "Url": "https://api.github.com/repos/dev131/DropTillLate_Application", "Date": "2014-06-05T14:26:03Z"},
{"Line": "=>250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nodes.isEmpty()) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/6310/buggy-version/server.src.main.java.com.orientechnologies.orient.server.distributed.ODistributedStorage.java", "BodyUseAPI": [], "Fixed commit": "d8b4d05c98239c6118b1d2a3a143fe24145081c0", "Url": "https://api.github.com/repos/mcculls/orientdb", "Date": "2015-01-22T16:53:33Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (index < 0) { printOutputMsg(ERR_MSG_INVALID_COMMAND); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/2916/buggy-version/TextBuddyController.java", "BodyUseAPI": [], "Fixed commit": "79d86562040570dcf504860f06ff33c4528547b3", "Url": "https://api.github.com/repos/LeraLonde/CE2", "Date": "2014-09-14T07:05:38Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((pattern) == null) || ((pattern_done) >= ((pattern.length) - 1))) { if (debug) android.util.Log.d(\"END OF PATTERN\", (\"\" + (pattern_done))); path = false; resetPattern(v); try { MR.transmitMessage(TOUCHID, \"destinyReached\"); } catch (java.lang.InterruptedException e) { e.printStackTrace(); } }else { if (debug) android.util.Log.d(\"MID POINT REACHED\", (\"DONE:\" + (pattern_done))); float pox = ox; float poy = oy; float pdx = dx; float pdy = dy; p1 = v.findViewById(pattern[pattern_done]); p2 = v.findViewById(pattern[((pattern_done) + 1)]); ox = p1.getRight(); oy = p1.getTop(); dx = p2.getRight(); dy = p2.getTop(); if (debug) android.util.Log.d(\"CONTINUE PATTERN\", ((((((\"DONE: \" + (pattern_done)) + \" NEW O: \") + (ox)) + \" \") + (oy)) + \".\")); if (debug) android.util.Log.d(\"CONTINUE PATTERN\", ((((((\"DONE: \" + (pattern_done)) + \" OLD O: \") + pox) + \" \") + poy) + \".\")); if (debug) android.util.Log.d(\"CONTINUE PATTERN\", ((((((\"DONE: \" + (pattern_done)) + \" NEW D: \") + (dx)) + \" \") + (dy)) + \".\")); if (debug) android.util.Log.d(\"CONTINUE PATTERN\", ((((((\"DONE: \" + (pattern_done)) + \" OLD D: \") + pdx) + \" \") + pdy) + \".\")); try { MR.transmitMessage(TOUCHID, \"partialPatternDone\"); } catch (java.lang.InterruptedException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/3769/buggy-version/app.src.main.java.com.example.charlie.practicaandroid.TouchHandler.java", "BodyUseAPI": ["android.util.Log.d(java.lang.String,java.lang.String)", "android.util.Log.d(java.lang.String,java.lang.String)", "android.util.Log.d(java.lang.String,java.lang.String)", "android.view.View.findViewById(int)", "android.util.Log.d(java.lang.String,java.lang.String)", "android.view.View.findViewById(int)", "android.util.Log.d(java.lang.String,java.lang.String)", "android.util.Log.d(java.lang.String,java.lang.String)"], "Fixed commit": "2aed2ee7515e8ca7cb7513522593bc64ff925604", "Url": "https://api.github.com/repos/cparadela/GhostlyRunes", "Date": "2017-01-25T15:23:05Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((key.charAt(1)) == '0') index = 6; else index = (key.charAt(1)) - '1';", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/3006/buggy-version/app.src.main.java.com.hjsmallfly.syllabus.activities.ShowClassInfoActivity.java", "BodyUseAPI": ["java.lang.String.charAt(int)"], "Fixed commit": "7a4bc482f148821664a7eaf065520580d56cc19d", "Url": "https://api.github.com/repos/PATHofud/stu_syllabus", "Date": "2016-05-25T04:59:51Z"},
{"Line": "=>544", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lastByteIndex < 0) { com.athaydes.logfx.file.FileReader.log.trace(\"No bytes were read, skipping copying of tail bytes\"); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/168/buggy-version/src.main.java.com.athaydes.logfx.file.FileReader.java", "BodyUseAPI": [], "Fixed commit": "f91a29ad5b1cb4113d34f60a2b12958a5ab37ef9", "Url": "https://api.github.com/repos/renatoathaydes/LogFX", "Date": "2017-09-10T12:25:40Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((remark) == null) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/3545/buggy-version/src.main.java.com.multiagent.hawklithm.item.dataobject.ItemInfoDO.java", "BodyUseAPI": [], "Fixed commit": "daa6ccc84f541589b472c9fc994b10958131a4e3", "Url": "https://api.github.com/repos/hawklithm/Cerberus", "Date": "2014-04-25T11:31:20Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (distanceFromIntervalStart < 0) { distanceFromIntervalStart += master.length(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/5156/buggy-version/src.main.java.net.sllmdilab.t5xrefmanager.util.TimeShift.java", "BodyUseAPI": [], "Fixed commit": "9d27efef31ce7b3334666a18fcfb6a35a8eab8a2", "Url": "https://api.github.com/repos/sll-mdilab/t5-pid-xref-manager", "Date": "2016-03-15T10:35:26Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mod < 0) { mod += master.length(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/5156/buggy-version/src.main.java.net.sllmdilab.t5xrefmanager.util.TimeShift.java", "BodyUseAPI": [], "Fixed commit": "9d27efef31ce7b3334666a18fcfb6a35a8eab8a2", "Url": "https://api.github.com/repos/sll-mdilab/t5-pid-xref-manager", "Date": "2016-03-15T10:35:26Z"},
{"Line": "=>423", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (v > (parms.Vd)) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/5032/buggy-version/src.worldBuilder.Hydrology.java", "BodyUseAPI": [], "Fixed commit": "51f89211c3e930298250cd394a6a3e8d3f4b539d", "Url": "https://api.github.com/repos/markkampe/Java_Terrain", "Date": "2017-09-03T17:06:54Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ref == null) { ref = org.geogit.api.Ref.WORK_HEAD; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/4848/buggy-version/src.core.src.main.java.org.geogit.api.plumbing.LsTreeOp.java", "BodyUseAPI": [], "Fixed commit": "89f1afbbd93176e7a08991ea62f1b78e567f6163", "Url": "https://api.github.com/repos/boundlessgeo/GeoGit", "Date": "2013-11-27T20:40:50Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (node instanceof com.technophobia.substeps.execution.node.NodeWithChildren<?>) { return visit(((com.technophobia.substeps.execution.node.NodeWithChildren<?>) (node))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/3656/buggy-version/src.main.java.com.technophobia.substeps.execution.AbstractExecutionNodeVisitor.java", "BodyUseAPI": [], "Fixed commit": "83ff99506a7469bf09061cf9a243179c0db75b86", "Url": "https://api.github.com/repos/technophobia/substeps-api", "Date": "2012-12-19T11:19:53Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (basis.equalsIgnoreCase(\"n\")) { oversamp = \"j\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/4133/buggy-version/src.main.java.org.iish.hsn.invoer.web.GeboorteController.java", "BodyUseAPI": [], "Fixed commit": "1f3c7f043803da66eaf5ae373ea9427fc009ec7d", "Url": "https://api.github.com/repos/IISH/hsn-invoer", "Date": "2015-05-31T12:47:44Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.ICE_CREAM_SANDWICH)) { ((android.view.View) (findViewById(android.R.id.home).getParent().getParent())).setBackgroundResource(R.drawable.item_background_holo_light); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/8631/buggy-version/App.src.com.dozuki.ifixit.ui.BaseActivity.java", "BodyUseAPI": [], "Fixed commit": "1338aa395f0b573046a0b1c9b2509d6e09820191", "Url": "https://api.github.com/repos/iFixit/iFixitAndroid", "Date": "2013-12-12T19:47:40Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((info.getAttTypeInfos()) != null) { for (com.leaniot.dto.AttTypeInfo type : info.getAttTypeInfos()) { if (attTypes.containsKey(type.getName())) { java.lang.String error = \"duplicate attribute: \" + (type.getName()); throw new java.lang.RuntimeException(error); } com.leaniot.domain.attribute.DataType dataType = com.leaniot.domain.attribute.DataType.getDataType(type.getDataType(), type.getDataTypeInfos()); com.leaniot.domain.attribute.AttributeType attType = new com.leaniot.domain.attribute.AttributeType(dataType, type.isOptional()); attTypes.put(type.getName(), attType); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/2915/buggy-version/IOTPlatform.src.main.java.com.leaniot.service.SiteTypeService.java", "BodyUseAPI": ["com.leaniot.dto.SiteTypeInfo.getAttTypeInfos()"], "Fixed commit": "38050d8878829282b3fc6ef9b619de418647d581", "Url": "https://api.github.com/repos/iLeanIot/IOTPlatform", "Date": "2017-08-31T08:03:57Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.sonar.plugins.coverage.generic.ReportParser.Mode.IT_COVERAGE) == (mode)) { measuresBuilder.enableITMode(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/7808/buggy-version/src.main.java.org.sonar.plugins.coverage.generic.ReportParser.java", "BodyUseAPI": [], "Fixed commit": "3e35978d464eb9410c3337060b42065b3039813d", "Url": "https://api.github.com/repos/SonarQubeCommunity/sonar-generic-coverage", "Date": "2015-06-03T09:03:41Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cardDto.getStateControl()) { setStateControl(cardDto.getStateControl()); setState(org.collectiveone.modules.model.ModelCardState.valueOf(cardDto.getState())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/8185/buggy-version/src.main.java.org.collectiveone.modules.model.ModelCardWrapper.java", "BodyUseAPI": ["org.collectiveone.modules.model.ModelCardWrapper.setStateControl(cardDto.getStateControl())", "org.collectiveone.modules.model.ModelCardWrapper.setState(org.collectiveone.modules.model.ModelCardState.valueOf(cardDto.getState()))", "org.collectiveone.modules.model.dto.ModelCardDto.getState()", "org.collectiveone.modules.model.dto.ModelCardDto.getStateControl()", "org.collectiveone.modules.model.ModelCardState.valueOf(cardDto.getState())"], "Fixed commit": "6174255d7ce7f2f9b7affe91e7a65e9a2131db1e", "Url": "https://api.github.com/repos/CollectiveOne/CollectiveOneWebappCompiled", "Date": "2017-10-04T09:42:48Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((masterThread) != null) masterThread.clear();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/752/buggy-version/wififixer.src.org.wahtod.wififixer.utility.Hostup.java", "BodyUseAPI": [], "Fixed commit": "0410d9afcaf2ca9b2661107f2fa798cb1c846ef6", "Url": "https://api.github.com/repos/Zanshinmu/Wifi-Fixer", "Date": "2014-02-22T16:37:37Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (range.contains(\"-\")) { rgs = range.split(\"-\"); this.rg_beg = java.lang.Long.valueOf(rgs[0].trim(), 10); rgs = rgs[1].split(\"/\"); this.rg_end = java.lang.Long.valueOf(rgs[0].trim(), 10); this.rg_len = java.lang.Long.valueOf(rgs[1].trim(), 10); }else { rgs = range.split(\"/\"); this.rg_len = java.lang.Long.valueOf(rgs[1].trim(), 10); this.rg_end = (this.rg_len) - 1; this.rg_beg = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/2169/buggy-version/src.org.cny.awf.net.http.HResp.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)", "java.lang.String.split(java.lang.String)"], "Fixed commit": "d0336edc22e504f4dd7a605612e922cab585f8f8", "Url": "https://api.github.com/repos/Centny/awf", "Date": "2015-12-17T05:41:12Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (returnedLocations != null) { for (int i = 0; i < (returnedLocations.size()); i++) { com.example.brandon.myfriendlocater.Marker friendLocation = returnedLocations.get(i); com.google.android.gms.maps.model.LatLng friendLocationLatLng = new com.google.android.gms.maps.model.LatLng(java.lang.Double.parseDouble(friendLocation.lat), java.lang.Double.parseDouble(friendLocation.lng)); mMap.addMarker(new com.google.android.gms.maps.model.MarkerOptions().position(friendLocationLatLng).title(friendLocation.username)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/3274/buggy-version/app.src.main.java.com.example.brandon.myfriendlocater.MapsActivity.java", "BodyUseAPI": ["java.util.ArrayList<com.example.brandon.myfriendlocater.Marker>.get(int)", "java.util.ArrayList<com.example.brandon.myfriendlocater.Marker>.size()"], "Fixed commit": "2e2823fac2d4db1e6b302d84156c4a475d6d7551", "Url": "https://api.github.com/repos/Bebersohl/MyFriendLocater", "Date": "2015-12-10T04:37:23Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (returnedFriendList != null) { friends = new java.lang.String[returnedFriendList.size()]; friends = returnedFriendList.toArray(friends); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/3274/buggy-version/app.src.main.java.com.example.brandon.myfriendlocater.FriendsListActivity.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.toArray(java.lang.String[])", "java.util.ArrayList<java.lang.String>.size()"], "Fixed commit": "2e2823fac2d4db1e6b302d84156c4a475d6d7551", "Url": "https://api.github.com/repos/Bebersohl/MyFriendLocater", "Date": "2015-12-10T04:37:23Z"},
{"Line": "=>303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (headParseIndex > (bytes.length)) { throw new bid.fese.exception.UnsupportedRequestMethodException((\"unsupported request method, error message is :\" + (new java.lang.String(bytes)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/772/buggy-version/src.main.java.bid.fese.handler.ReadHandler.java", "BodyUseAPI": [], "Fixed commit": "ab0be0e542c623c7172c909f93a5fe267f6638c7", "Url": "https://api.github.com/repos/fefine/FeSe", "Date": "2017-06-08T11:51:21Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ru.pricechecker.main.FileReader.readFile(ru.pricechecker.main.FileReader.path, ru.pricechecker.main.FileReader.currentDelimeter)) { ru.pricechecker.main.FileReader.lastFileModification = attributes.lastModifiedTime().toMillis(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/5471/buggy-version/src.ru.pricechecker.main.FileReader.java", "BodyUseAPI": [], "Fixed commit": "62e91a489b7b1b8ef4e2bdc0b5e78e164402962e", "Url": "https://api.github.com/repos/vottakvot/PriceChecker", "Date": "2017-01-23T07:00:46Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.android.settings.Utils.isVoiceCapable(getContext())) { setNotificationVolumeVisibility((!isChecked)); Settings.System.putInt(getContext().getContentResolver(), Settings.System.NOTIFICATIONS_USE_RING_VOLUME, (isChecked ? 1 : 0)); if (isChecked) { mAudioManager.setStreamVolume(AudioManager.STREAM_NOTIFICATION, mAudioManager.getStreamVolume(AudioManager.STREAM_RING), 0); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/9253/buggy-version/src.com.android.settings.RingerVolumePreference.java", "BodyUseAPI": [], "Fixed commit": "5738617723fb88c019fb1db34daa3126c42df7d7", "Url": "https://api.github.com/repos/TheCollective/packages_apps_Settings", "Date": "2011-07-20T18:04:31Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.android.settings.Utils.isVoiceCapable(getContext())) { setNotificationVolumeVisibility((!(mNotificationsUseRingVolumeCheckbox.isChecked()))); }else { setNotificationVolumeVisibility(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/9253/buggy-version/src.com.android.settings.RingerVolumePreference.java", "BodyUseAPI": [], "Fixed commit": "5738617723fb88c019fb1db34daa3126c42df7d7", "Url": "https://api.github.com/repos/TheCollective/packages_apps_Settings", "Date": "2011-07-20T18:04:31Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (outgoingNode) { targets.add(new storm.trident.planner.BridgeReceiver(batchCollector)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/688/buggy-version/src.jvm.storm.trident.planner.SubtopologyBolt.java", "BodyUseAPI": [], "Fixed commit": "75655b65284b5371ecfb20abae5e61334a88c6d6", "Url": "https://api.github.com/repos/nathanmarz/storm", "Date": "2012-08-22T19:59:30Z"},
{"Line": "=>303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((activity) == null) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/5182/buggy-version/app.src.main.java.com.algorythmsteam.algorythms.AlgoryhmsMainFragment.java", "BodyUseAPI": [], "Fixed commit": "01ecb0f2bd4f841516b2fd0bf2f665894deacb56", "Url": "https://api.github.com/repos/galzo/AlgoRhythms", "Date": "2015-06-20T18:01:50Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (((result == null) || ((result.length()) == 0)) || (!(com.handlers.ResourceResolver.isValidGameId(result)))) { android.widget.Toast.makeText(getActivity(), \"Please scan a game-type card\", Toast.LENGTH_LONG).show(); return true; }else { activity.launchFragment(com.algorythmsteam.algorythms.GameIntroFragment.newInstance(result), GameIntroFragment.TAG, null, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/5182/buggy-version/app.src.main.java.com.algorythmsteam.algorythms.NFCScanFragment.java", "BodyUseAPI": ["com.algorythmsteam.algorythms.AlgoryhmsMainActivity.launchFragment(com.algorythmsteam.algorythms.GameIntroFragment.newInstance(result),GameIntroFragment.TAG,<nulltype>,<nulltype>)", "com.algorythmsteam.algorythms.GameIntroFragment.newInstance(java.lang.String)"], "Fixed commit": "01ecb0f2bd4f841516b2fd0bf2f665894deacb56", "Url": "https://api.github.com/repos/galzo/AlgoRhythms", "Date": "2015-06-20T18:01:50Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((activity) == null) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/5182/buggy-version/app.src.main.java.com.algorythmsteam.algorythms.NFCScanFragment.java", "BodyUseAPI": [], "Fixed commit": "01ecb0f2bd4f841516b2fd0bf2f665894deacb56", "Url": "https://api.github.com/repos/galzo/AlgoRhythms", "Date": "2015-06-20T18:01:50Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((result != null) && ((result.trim().length()) != 0)) { java.lang.String[] splitRes = result.split(\"#\"); if (((splitRes.length) >= 2) && (splitRes[0].equals(\"algorhythms\"))) { res = splitRes[1].trim(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/5182/buggy-version/app.src.main.java.com.algorythmsteam.algorythms.AlgoryhmsMainActivity.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "01ecb0f2bd4f841516b2fd0bf2f665894deacb56", "Url": "https://api.github.com/repos/galzo/AlgoRhythms", "Date": "2015-06-20T18:01:50Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ptsSource) != null) ptsSource.clear();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/8909/buggy-version/ntchart.src.main.java.ru.turbomolot.ntchart.series.SeriesLine.java", "BodyUseAPI": [], "Fixed commit": "8cffab9d92f9af77b51115c6661c2faa99488dcb", "Url": "https://api.github.com/repos/TurboMolot/NTChart", "Date": "2017-12-21T12:17:54Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((k > (arr.length)) || (k <= 0)) { java.lang.System.out.println(\"Not possible\"); }else { java.lang.System.out.println(treesPrograms.KthSmallestArrayElement.KthElement(arr, k)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/5043/buggy-version/src.treesPrograms.KthSmallestArrayElement.java", "BodyUseAPI": ["treesPrograms.KthSmallestArrayElement.KthElement(int[],int)", "java.io.PrintStream.println(int)"], "Fixed commit": "56b786f9d9b3708126fc5eae4e52df73cdc40916", "Url": "https://api.github.com/repos/Poorvankbhatia/Data-Structures-In-Java", "Date": "2015-07-04T03:38:15Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.arthuroliveira.construct.adapter.ProjectAdapter.getItem(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((project.getName()) != null) && ((project.getUserRemoved()) == null)) { viewHolder.projectName.setText(project.getName()); java.lang.System.out.println((\"ProjectName \" + (project.getName()))); id = project.getId(); java.lang.System.out.println((\"ID ProjectAdapter \" + (id))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/7718/buggy-version/app.src.main.java.com.example.arthuroliveira.construct.adapter.ProjectAdapter.java", "BodyUseAPI": ["android.widget.TextView.setText(project.getName())", "com.example.arthuroliveira.construct.model.Project.getId()", "java.io.PrintStream.println((\"ProjectName \" + (project.getName())))", "com.example.arthuroliveira.construct.model.Project.getName()", "com.example.arthuroliveira.construct.model.Project.getName()"], "Fixed commit": "1f450335dc12ae7a424403ae5e13b1ffe739645c", "Url": "https://api.github.com/repos/arthurabreu/Construct", "Date": "2017-07-13T12:57:33Z"},
{"Line": "=>489", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.lastIndexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (s < 0) nname = nodename; else nname = nodename.substring(0, s);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/1850/buggy-version/bnkit.src.bn.BNet.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "176acc4321612d7e35c0a0d28be58fc12892eda9", "Url": "https://api.github.com/repos/bodenlab/bnkit", "Date": "2017-01-05T03:32:02Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (size > 100) { output.collect(cellId, new org.apache.hadoop.io.Text(txt.toString())); txt = new java.lang.StringBuilder(); size = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/9230/buggy-version/src.main.java.edu.umn.cs.sthadoop.operations.STHash.java", "BodyUseAPI": [], "Fixed commit": "7a4ab2739c541962d56e2007c77a803ee27bdb6b", "Url": "https://api.github.com/repos/lmarabi/st-hadoop", "Date": "2017-04-11T03:05:33Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(rahgir.equals(\"null\"))) { or.setText(OrderList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/7716/buggy-version/app.src.main.java.com.BlackBerryJuice.User_Buy_Record_Fake.java", "BodyUseAPI": [], "Fixed commit": "559456a8abb9ab38a098f40c7e1e76185e5b238d", "Url": "https://api.github.com/repos/ehsanseyedi/BlackBerryJuice", "Date": "2016-03-13T14:12:03Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (net.sf.memoranda.util.Configuration.get(\"CALC_COMPLETION\").equals(\"yes\")) calcCompletionChB.setSelected(true); else calcCompletionChB.setSelected(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/9247/buggy-version/src.net.sf.memoranda.ui.TaskCalcDialog.java", "BodyUseAPI": [], "Fixed commit": "cb188439d1cbc5a4b8a6acc5ea9269ce407fe369", "Url": "https://api.github.com/repos/cst316/spring16project-Team-Houston", "Date": "2016-01-31T00:24:00Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (net.sf.memoranda.util.Configuration.get(\"COMPACT_DATES\").equals(\"yes\")) compactDatesChB.setSelected(true); else compactDatesChB.setSelected(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/9247/buggy-version/src.net.sf.memoranda.ui.TaskCalcDialog.java", "BodyUseAPI": [], "Fixed commit": "cb188439d1cbc5a4b8a6acc5ea9269ce407fe369", "Url": "https://api.github.com/repos/cst316/spring16project-Team-Houston", "Date": "2016-01-31T00:24:00Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (net.sf.memoranda.util.Configuration.get(\"CALC_EFFORT\").equals(\"yes\")) calcEffortChB.setSelected(true); else calcEffortChB.setSelected(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/9247/buggy-version/src.net.sf.memoranda.ui.TaskCalcDialog.java", "BodyUseAPI": [], "Fixed commit": "cb188439d1cbc5a4b8a6acc5ea9269ce407fe369", "Url": "https://api.github.com/repos/cst316/spring16project-Team-Houston", "Date": "2016-01-31T00:24:00Z"},
{"Line": "=>516", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.geekeclectic.android.stashcache.StashThread.getCode()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (id.contains(\" \")) { key = id.split(\"\\\\s\")[0]; }else { key = id; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/4191/buggy-version/StashCache.app.src.main.java.com.geekeclectic.android.stashcache.StashImporter.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "48100f4cf39f055ecbcc39a1ee99992fa1a47a78", "Url": "https://api.github.com/repos/sylkai/stash_cache", "Date": "2015-03-13T05:20:27Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["vd.getId().getName()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (current.hasFieldWithName(name)) { errors.add(((\"Field \" + name) + \" has already been declared\")); }else { current.addField(new se.helino.mjc.symbol.TypeNamePair(vd.getMJType(), vd.getId().getName())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/5905/buggy-version/src.se.helino.mjc.symbol.SymbolTableBuilder.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(java.lang.String)", "se.helino.mjc.symbol.ClassTable.addField(se.helino.mjc.symbol.TypeNamePair)"], "Fixed commit": "d487432bc43724c2219e5ba9edb24194834e1b0f", "Url": "https://api.github.com/repos/edvbld/mjc", "Date": "2011-04-21T12:33:38Z"},
{"Line": "=>528", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (chain) { return getValidChainMoves(previousSpot); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/3610/buggy-version/Fanorona.src.eighteen.Board.java", "BodyUseAPI": [], "Fixed commit": "cc5245709069258cc9bcb8de2f7029eb020ff159", "Url": "https://api.github.com/repos/gfink/project2CSCE315v2", "Date": "2013-04-03T04:32:53Z"},
{"Line": "=>676", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.forgeessentials.util.PlayerInfo.get(ident).getHasFEClient())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/8489/buggy-version/src.main.java.com.forgeessentials.protection.ProtectionEventHandler.java", "BodyUseAPI": [], "Fixed commit": "8d60adb236f3e0ecb1869463194cc50009d75e55", "Url": "https://api.github.com/repos/ForgeEssentials/ForgeEssentials", "Date": "2015-09-01T23:17:59Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((item.getTagCompound()) != null) duplicate.setTagCompound(((net.minecraft.nbt.NBTTagCompound) (item.getTagCompound().copy())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/5982/buggy-version/src.main.java.com.mrnobody.morecommands.command.server.CommandDuplicate.java", "BodyUseAPI": ["item.getTagCompound().copy()", "net.minecraft.item.ItemStack.getTagCompound()", "net.minecraft.item.ItemStack.setTagCompound(((net.minecraft.nbt.NBTTagCompound) (item.getTagCompound().copy())))"], "Fixed commit": "19e679b89a506dd13d08b09deefcff612381534d", "Url": "https://api.github.com/repos/MrNobody98/morecommands", "Date": "2015-08-28T21:41:10Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((item.getTagCompound()) != null) duplicate.setTagCompound(((net.minecraft.nbt.NBTTagCompound) (item.getTagCompound().copy())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/5982/buggy-version/src.main.java.com.mrnobody.morecommands.command.server.CommandDuplicate.java", "BodyUseAPI": ["net.minecraft.item.ItemStack.setTagCompound(((net.minecraft.nbt.NBTTagCompound) (item.getTagCompound().copy())))", "net.minecraft.item.ItemStack.getTagCompound()", "item.getTagCompound().copy()"], "Fixed commit": "19e679b89a506dd13d08b09deefcff612381534d", "Url": "https://api.github.com/repos/MrNobody98/morecommands", "Date": "2015-08-28T21:41:10Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((item.getTagCompound()) != null) duplicate.setTagCompound(((net.minecraft.nbt.NBTTagCompound) (item.getTagCompound().copy())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/5982/buggy-version/src.main.java.com.mrnobody.morecommands.command.server.CommandDuplicate.java", "BodyUseAPI": ["net.minecraft.item.ItemStack.getTagCompound()", "net.minecraft.item.ItemStack.setTagCompound(((net.minecraft.nbt.NBTTagCompound) (item.getTagCompound().copy())))", "item.getTagCompound().copy()"], "Fixed commit": "19e679b89a506dd13d08b09deefcff612381534d", "Url": "https://api.github.com/repos/MrNobody98/morecommands", "Date": "2015-08-28T21:41:10Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (returnDir == null) { java.lang.System.out.println(((\"\\n\\n\\t\\tERROR getDir - return Dir = null\\n\\t\\trandom= \" + random) + \"\\n\\t\\t\")); returnDir = Direction.DOWN; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/8383/buggy-version/src.haw.po.la.cliff.MonteCarloAlgo.java", "BodyUseAPI": [], "Fixed commit": "1166dde7b81d95dff068aaeb720a3a52cf8ce7a7", "Url": "https://api.github.com/repos/HAW-AI/PO-LA-2012-WS-Cliff", "Date": "2012-11-19T10:32:34Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (null != aTextView) { aTextView.setText((android.text.TextUtils.isEmpty(values[i]) ? \"\" : android.text.Html.fromHtml(values[i].trim()).toString())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/7065/buggy-version/app.src.main.java.com.subinkrishna.curah.ui.view.FeedItemView.java", "BodyUseAPI": ["android.widget.TextView.setText((android.text.TextUtils.isEmpty(values[i]) ? \"\" : android.text.Html.fromHtml(values[i].trim()).toString()))"], "Fixed commit": "d42d394e71c17b5a74db1147a870afab27af2108", "Url": "https://api.github.com/repos/subinkrishna/open-curah", "Date": "2016-03-26T17:01:49Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((api == (Api.Keywords)) && ((extraParams.get(\"language\")) != null)) && ((extraParams.get(\"language\")) != \"english\")) { version = \"1\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/1381/buggy-version/src.io.indico.api.ApiClient.java", "BodyUseAPI": [], "Fixed commit": "8c1cfece639e4da87cafaa8591b6c56a60c64826", "Url": "https://api.github.com/repos/IndicoDataSolutions/IndicoIo-Java", "Date": "2016-03-07T19:20:20Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getJob().useOldWf) { if (child instanceof org.scribble.ast.Choice<?>) { return visitOverrideForChoice(((org.scribble.ast.InteractionSeq<?>) (parent)), ((org.scribble.ast.Choice<?>) (child))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/5662/buggy-version/modules.core.src.main.java.org.scribble.visit.WFChoiceChecker.java", "BodyUseAPI": [], "Fixed commit": "c131b52384216ce5ea5af2335157329aa5100fc3", "Url": "https://api.github.com/repos/rhu1/scribble-java", "Date": "2016-06-03T15:41:59Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.milkbowl.vault.permission.Permission.getPlayerGroups(<nulltype>,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((groups == null) || ((groups.length) == 0)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/7841/buggy-version/src.main.java.de.tobiyas.racesandclasses.datacontainer.traitholdercontainer.permissionsettings.PermissionRegisterer.java", "BodyUseAPI": [], "Fixed commit": "43bc4f22d74e903d60e9c983f029583aea3532cc", "Url": "https://api.github.com/repos/tobiyas/Races", "Date": "2013-08-16T10:14:07Z"},
{"Line": "=>779", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((surfaceHolder.getSurface()) == null) || (!(surfaceHolder.getSurface().isValid()))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/959/buggy-version/jcvideoplayer-lib.src.main.java.fm.jiecao.jcvideoplayer_lib.JCVideoPlayer.java", "BodyUseAPI": [], "Fixed commit": "294c614d8531575c4160158b33d9f7591fdd71c4", "Url": "https://api.github.com/repos/lipangit/JiaoZiVideoPlayer", "Date": "2016-04-19T09:34:12Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.nutz.dao.entity.MappingField.getWidth()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (width <= 4) { return (\"MEDIUMINT(\" + (width * 4)) + \")\"; }else if (width <= 8) { return (\"INT(\" + (width * 4)) + \")\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/7995/buggy-version/src.org.nutz.dao.impl.jdbc.mysql.MysqlJdbcExpert.java", "BodyUseAPI": [], "Fixed commit": "d61593e3a714dff38194299f1fb17506757ffe33", "Url": "https://api.github.com/repos/nutzam/nutz", "Date": "2014-01-28T09:38:52Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (wait) { try { java.lang.Thread.sleep(delay); } catch (java.lang.InterruptedException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/4531/buggy-version/app.src.main.java.com.teinvdlugt.android.brainfuckinterpreter.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "42bb90f7c8516925d9f79f1acb0f87dd336b127e", "Url": "https://api.github.com/repos/teinvdlugt/brainfuck-interpreter", "Date": "2016-06-28T07:39:29Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((previousState == (DispatchKeyListener.STATE_GAME_MOTION)) || (previousState == (DispatchKeyListener.STATE_GAME_ESCAPE_MENU))) { this.previousState = previousState; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/6369/buggy-version/rznw.ui.EquipmentScreenKeyListener.java", "BodyUseAPI": [], "Fixed commit": "7e40a6e24e6099308d3b403f9d055fc98dea07fa", "Url": "https://api.github.com/repos/bprollinson/robotzombieninjawizard", "Date": "2017-01-04T12:33:56Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (row == (this.getRowCount())) { this.addRow(data.get(this.getRowCount()).toArray()); this.setValueAt(rowData.get(i), row, i); this.removeRow(this.getRowCount()); }else this.setValueAt(rowData.get(i), row, i);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/4527/buggy-version/PickAndPlace.src.TablePanel.java", "BodyUseAPI": ["TablePanel.myModel.setValueAt(java.lang.String,int,int)", "TablePanel.myModel.setValueAt(java.lang.String,int,int)"], "Fixed commit": "07efe23fb1065009c52f57e7144353f7e0c36211", "Url": "https://api.github.com/repos/AlexanderPeters/PickAndPlaceConverter", "Date": "2017-08-04T19:57:59Z"},
{"Line": "=>411", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, java.lang.String>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (name != null) { itemStack = com.Ben12345rocks.VotingPlugin.Utils.getInstance().nameItem(itemStack, name.replace(\"%Player%\", user.getPlayerName())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/3762/buggy-version/VotingPlugin.src.com.Ben12345rocks.VotingPlugin.Objects.Reward.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,user.getPlayerName())", "com.Ben12345rocks.VotingPlugin.Utils.getInstance().nameItem(org.bukkit.inventory.ItemStack,java.lang.String)"], "Fixed commit": "81f363018950e281f66eaceb300121109398af5b", "Url": "https://api.github.com/repos/Ben12345rocks/VotingPlugin", "Date": "2016-07-16T23:53:39Z"},
{"Line": "=>424", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, java.lang.String>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (skull != null) { itemStack = com.Ben12345rocks.VotingPlugin.Utils.getInstance().setSkullOwner(itemStack, skull.replace(\"%Player%\", user.getPlayerName())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/3762/buggy-version/VotingPlugin.src.com.Ben12345rocks.VotingPlugin.Objects.Reward.java", "BodyUseAPI": ["com.Ben12345rocks.VotingPlugin.Utils.getInstance().setSkullOwner(org.bukkit.inventory.ItemStack,java.lang.String)", "java.lang.String.replace(java.lang.String,user.getPlayerName())"], "Fixed commit": "81f363018950e281f66eaceb300121109398af5b", "Url": "https://api.github.com/repos/Ben12345rocks/VotingPlugin", "Date": "2016-07-16T23:53:39Z"},
{"Line": "=>521", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.emc.storageos.db.client.impl.ColumnField.getIndex()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (dbIndex instanceof com.emc.storageos.db.client.impl.ScopedLabelDbIndex) { indexKey = field.getPrefixIndexRowKey(com.emc.storageos.db.client.model.ScopedLabel.fromString(column.getStringValue())); }else if (dbIndex instanceof com.emc.storageos.db.client.impl.AggregateDbIndex) { }else { java.lang.String msg = java.lang.String.format(\"Unsupported index type %s.\", dbIndex.getClass()); com.emc.storageos.db.client.impl.DbConsistencyCheckerHelper._log.warn(msg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/2475/buggy-version/dbclient.src.main.java.com.emc.storageos.db.client.impl.DbConsistencyCheckerHelper.java", "BodyUseAPI": ["com.emc.storageos.db.client.impl.DbIndex.getClass()", "java.lang.String.format(java.lang.String,dbIndex.getClass())"], "Fixed commit": "f04980bf3089ec57cb7f5f4622640321168348a8", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2015-11-26T11:39:17Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eu.andymel.timecollector.graphs.AllowedPathsGraph<ID_TYPE>.getStartNode()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (n == startNode) { results.add(baseList); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/5006/buggy-version/src.eu.andymel.timecollector.graphs.AllowedPathsGraph.java", "BodyUseAPI": [], "Fixed commit": "2642abcca371f9f14ac268c878ff3ea5cb2dd279", "Url": "https://api.github.com/repos/andymel123/PathProtector", "Date": "2017-03-16T17:09:19Z"},
{"Line": "=>555", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mClick) != null) mClickGame.start();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/4918/buggy-version/GameVHTA.app.src.main.java.blackcore.tdc.edu.com.gamevhta.picture_puzzle_game.PicturePuzzleActivity.java", "BodyUseAPI": [], "Fixed commit": "8314a724ea9544d9d163d87ee96a14aaf8697d4e", "Url": "https://api.github.com/repos/GameVuiHocTiengAnh/Game-VHTA", "Date": "2017-04-27T07:03:08Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == 0) { keyValue = arr[i][0]; keyIndex = arr[i][1]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/1183/buggy-version/Task01_03.11.2017.src.Service.java", "BodyUseAPI": [], "Fixed commit": "3e56db1e0a90a19dd4bf14073a61eb936478ce04", "Url": "https://api.github.com/repos/AlexandrKondratyuk/UniverExternalJava", "Date": "2017-11-26T17:46:54Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (userFile != null) { java.lang.String[] children = userFile.list(); for (int i = 0; i < (children.length); i++) { new java.io.File(userFile, children[i]).delete(); } userFile.delete(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/3816/buggy-version/src.com.gilad.oved.telme.Login.java", "BodyUseAPI": ["java.io.File.delete()", "java.io.File.delete()", "java.io.File.list()"], "Fixed commit": "c9168c7602fc1411732800b3c52d64a4b74bf8f4", "Url": "https://api.github.com/repos/giladoved/ListenApp", "Date": "2015-01-15T03:34:16Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.nagarro.gde.util.GDEStringUtils.isNullOrEmpty(fieldValue)) && (!saveCall)) { err.rejectValue(cmd.getValidationPath(), cmd.getRequiredMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/3460/buggy-version/gde-webapp.src.main.java.com.nagarro.gde.validator.PersonalInfoValidator.java", "BodyUseAPI": [], "Fixed commit": "e59ff0fe791c5169812bc8248835e5c02e23528f", "Url": "https://api.github.com/repos/nagarro-gde/GDE", "Date": "2015-03-27T16:22:07Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((config.getScheduledExecutorService()) == null) { houseKeepingExecutorService.shutdown(); houseKeepingExecutorService.awaitTermination(5L, java.util.concurrent.TimeUnit.SECONDS); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/7461/buggy-version/src.main.java.com.zaxxer.hikari.pool.HikariPool.java", "BodyUseAPI": [], "Fixed commit": "65adba0541276395b0b0b2d6ce5065dd03cdd905", "Url": "https://api.github.com/repos/brettwooldridge/HikariCP", "Date": "2015-07-16T04:44:37Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((serverSocket) != null) { serverSocket.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/1890/buggy-version/mockserver-jetty.src.main.java.org.mockserver.jetty.runner.AbstractRunner.java", "BodyUseAPI": [], "Fixed commit": "466ec92e4e815b6d3ca1047d6e893e28f4f8646c", "Url": "https://api.github.com/repos/jamesdbloom/mockserver", "Date": "2014-04-05T23:25:59Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (date.before(new java.util.Date(((java.lang.System.currentTimeMillis()) - (((24 * 60) * 60) * 1000))))) { dateText = com.andfchat.core.data.ChatEntry.DATE_FORMAT_OLD.format(date); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/7034/buggy-version/src.com.andfchat.core.data.ChatEntry.java", "BodyUseAPI": ["java.text.DateFormat.format(java.util.Date)"], "Fixed commit": "c24be15ab3cd3e0b30192fe6dcbb657d8c681616", "Url": "https://api.github.com/repos/AndFChat/AndFChat", "Date": "2014-04-30T07:00:54Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((messageType) == (ChatEntryType.EMOTE)) { if ((text.charAt(0)) != '\\'') { finishedText.append(\" \"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/7034/buggy-version/src.com.andfchat.core.data.ChatEntry.java", "BodyUseAPI": [], "Fixed commit": "c24be15ab3cd3e0b30192fe6dcbb657d8c681616", "Url": "https://api.github.com/repos/AndFChat/AndFChat", "Date": "2014-04-30T07:00:54Z"},
{"Line": "=>349", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.withiter.models.merchant.Attention.q()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((q.count()) > 0) { this.markedCount = ((int) (count)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/4376/buggy-version/modules.quhao.appserver.app.com.withiter.models.merchant.Merchant.java", "BodyUseAPI": [], "Fixed commit": "b160cab12df9c70b1b0a2ca993257a1e8d8039c0", "Url": "https://api.github.com/repos/withitergroup/quhao", "Date": "2014-05-22T07:16:58Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isAdded()) android.widget.Toast.makeText(mContext, ((getString(R.string.something_went_wrong)) + (error.getMessage())), Toast.LENGTH_SHORT).show();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/4355/buggy-version/StudIPAndroidApp.src.de.elanev.studip.android.app.frontend.messages.MessagesListFragment.java", "BodyUseAPI": [], "Fixed commit": "a1635078411ad674d6a6d731c88be5a20e97c34c", "Url": "https://api.github.com/repos/elan-ev/StudIPAndroidApp", "Date": "2013-10-18T14:01:57Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((FruitFever.viewY) + (FruitFever.vy)) >= 0) { FruitFever.viewY += FruitFever.vy; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/4081/buggy-version/src.Player.java", "BodyUseAPI": [], "Fixed commit": "650f150cef08497974fee8077f87bd37e3b10717", "Url": "https://api.github.com/repos/MicahAndWill/FruitFever", "Date": "2014-04-30T16:15:50Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cat_x[cannonDirectionIndex]) != 0) { cat_x[cannonDirectionIndex] = 0; (remainingCats)--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/4579/buggy-version/core.src.br.cefetmg.games.minigames.CannonCat.java", "BodyUseAPI": [], "Fixed commit": "f9824bcdbed96289fd0e62bd8c895b3a4479780b", "Url": "https://api.github.com/repos/fegemo/cefet-games-meow-au", "Date": "2017-10-03T00:43:42Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.oscarehr.managers.TicklerManager.getTicklers(getLoggedInInfo(),org.oscarehr.common.model.CustomFilter,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((ticklers.size()) == limit) { result.setTotal(ticklerManager.getNumTicklers(getLoggedInInfo(), cf)); }else { result.setTotal(ticklers.size()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/2244/buggy-version/src.main.java.org.oscarehr.ws.rest.TicklerWebService.java", "BodyUseAPI": ["org.oscarehr.ws.rest.to.TicklerResponse.setTotal(ticklers.size())", "java.util.List<org.oscarehr.common.model.Tickler>.size()"], "Fixed commit": "25737c3479f9f14c0b821941da296e858033969e", "Url": "https://api.github.com/repos/scoophealth/oscar", "Date": "2014-09-26T14:41:36Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["DAO.ConnectionFactory.executeQuery(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((resultSet.getString(\"userID\")) != null) { Demo.Reservation reserve = new Demo.Reservation(resultSet.getDate(\"startDate\"), resultSet.getDate(\"endDate\"), new Demo.UsersWeb(java.lang.Integer.parseInt(resultSet.getString(\"userID\")))); res.addReservation(reserve); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/1888/buggy-version/src.DAO.ResourcesDAO.java", "BodyUseAPI": ["java.sql.ResultSet.getDate(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)", "java.sql.ResultSet.getString(java.lang.String)", "java.sql.ResultSet.getDate(java.lang.String)"], "Fixed commit": "3227e782f0ca92929b9f4eab4bbffefea3ee7f73", "Url": "https://api.github.com/repos/soen387f2016project2/finalproject", "Date": "2016-12-02T03:17:59Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((map == null) || (keys == null)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/8865/buggy-version/src.main.java.kr.jihee.text_toolkit.lang.JMap.java", "BodyUseAPI": [], "Fixed commit": "21bb791895fecf88218ef061a712805e2b91d432", "Url": "https://api.github.com/repos/chrisjihee/text_toolkit", "Date": "2015-09-03T13:12:42Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (max == 0) renderer.setYAxisMax(100);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/873/buggy-version/src.org.kei.android.phone.cellhistory.views.TimeChartHelper.java", "BodyUseAPI": [], "Fixed commit": "080965af77b4a6684f1fc430c1411b18b0b3b216", "Url": "https://api.github.com/repos/Keidan/CellHistory", "Date": "2015-12-22T21:12:25Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((gameController.getError()) != null) { error = gameController.getError(); if (!(controllers.Application.isPlayerOnTurn(player, currentMatch))) { error = \"\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/9067/buggy-version/app.controllers.Application.java", "BodyUseAPI": ["de.htwg.checkers.controller.IGameController.getError()"], "Fixed commit": "29899a92dfecf6dd6d37565399e4ac34f90ed22d", "Url": "https://api.github.com/repos/julmayer/checkersWUI", "Date": "2015-01-11T22:20:46Z"},
{"Line": "=>640", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((var1.b) == 0) && (var1.f)) this.e.a(this.e.l);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/1103/buggy-version/src.ONetServerHandler.java", "BodyUseAPI": [], "Fixed commit": "f2ba651ca181de7bc296c2bb1886adc48644eed5", "Url": "https://api.github.com/repos/shadow386/CanaryMod", "Date": "2011-10-08T00:42:26Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hudson.model.AbstractBuild<?, ?>.getResult()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (buildResultObject == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/6247/buggy-version/src.main.java.org.jenkinsci.plugins.IFTTTBuildNotifier.java", "BodyUseAPI": [], "Fixed commit": "586029f886fe449f0d9fe04af58c70964b17320b", "Url": "https://api.github.com/repos/hesantan/ifttt-build-notifier-plugin", "Date": "2016-10-17T18:34:03Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSwipeRefreshLayout) != null) { mSwipeRefreshLayout.setRefreshing(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/274/buggy-version/sstannouncer.app.src.main.java.com.sst.anouncements.FeedFragment.java", "BodyUseAPI": [], "Fixed commit": "1307c99e717d52364ba16bbb887598377032c5a9", "Url": "https://api.github.com/repos/joeltio/sstannouncer", "Date": "2017-04-26T05:46:47Z"},
{"Line": "=>501", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["args[0].getResultExpr().getType()", "synthesijer.hdl.expr.HDLCombinationExpr.toImmValue(args[1])"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (shift >= (ta.getWidth())) { str = args[0].getResultExpr().getVerilogHDL(); }else if (shift >= 1) { str = java.lang.String.format(\"%s[%d:%d],%d'b0\", args[0].getResultExpr().getVerilogHDL(), (((t0.getWidth()) - shift) - 1), 0, shift); }else { str = args[0].getResultExpr().getVerilogHDL(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/3371/buggy-version/src.synthesijer.hdl.expr.HDLCombinationExpr.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,args[0].getResultExpr().getVerilogHDL(),(((t0.getWidth()) - shift) - 1),int,int)"], "Fixed commit": "17c45d5efb90785fa4961f4e7a1e02e6d1804765", "Url": "https://api.github.com/repos/synthesijer/synthesijer", "Date": "2016-11-05T10:06:55Z"},
{"Line": "=>329", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["synthesijer.hdl.expr.HDLCombinationExpr.toImmValue(args[1])", "args[0].getResultExpr().getType()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (shift >= (ta.getWidth())) { str = args[0].getResultExpr().getVHDL(); }else if (shift >= 1) { str += java.lang.String.format(\"%s(%d downto %d) & (%d-1 downto %d => '0')\", args[0].getResultExpr().getVHDL(), msb, 0, shift, 0); }else { str += args[0].getResultExpr().getVHDL(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/3371/buggy-version/src.synthesijer.hdl.expr.HDLCombinationExpr.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,args[0].getResultExpr().getVHDL(),int,int,int,int)"], "Fixed commit": "17c45d5efb90785fa4961f4e7a1e02e6d1804765", "Url": "https://api.github.com/repos/synthesijer/synthesijer", "Date": "2016-11-05T10:06:55Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((bigDecimal.compareTo(com.zooplus.challenge.currencyConverter.client.currency.CurrencyExchangeFormValidator.MIN_VALUE)) <= 0) { errors.rejectValue(\"value\", \"currencyExchange.fields.value.tooSmall\", java.lang.String.format(\"Value cannot be smaller or equal to %s\", com.zooplus.challenge.currencyConverter.client.currency.CurrencyExchangeFormValidator.MIN_VALUE)); }else if ((bigDecimal.compareTo(com.zooplus.challenge.currencyConverter.client.currency.CurrencyExchangeFormValidator.MAX_VALUE)) > 0) { errors.rejectValue(\"value\", \"currencyExchange.fields.value.tooBig\", java.lang.String.format(\"Value cannot exeed %s\", com.zooplus.challenge.currencyConverter.client.currency.CurrencyExchangeFormValidator.MAX_VALUE)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/8668/buggy-version/web-client.src.main.java.com.zooplus.challenge.currencyConverter.client.currency.CurrencyExchangeFormValidator.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,java.math.BigDecimal)", "java.math.BigDecimal.compareTo(java.math.BigDecimal)", "org.springframework.validation.Errors.rejectValue(java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "4a1790b7c08f6bcd06cb19e85fc1f8b517506bf6", "Url": "https://api.github.com/repos/mnawalany/CurrencyConverter", "Date": "2016-03-06T19:41:19Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(par1ItemStack.isItemEnchanted())) { par1ItemStack.addEnchantment(Enchantment.infinity, 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/580/buggy-version/src.main.java.com.miningmark48.pearcelmod.item.ItemPearcelBow.java", "BodyUseAPI": ["net.minecraft.item.ItemStack.addEnchantment(Enchantment.infinity,int)"], "Fixed commit": "f64b2dd16ed3ca010217b7de5c3457c5249a154b", "Url": "https://api.github.com/repos/MiningMark48/Pearcel-Mod", "Date": "2015-03-20T23:42:57Z"},
{"Line": "=>1066", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (lstNmElmnt != null) { if ((inputParamValues.containsKey(lstNmElmnt.getTextContent().toLowerCase())) && (lstValElmnt != null)) { inputParamValues.get(lstNmElmnt.getTextContent().toLowerCase()).add(lstValElmnt.getTextContent()); }else { inputParamValues.put(lstNmElmnt.getTextContent().toLowerCase(), new java.util.TreeSet<java.lang.String>()); if (lstValElmnt != null) { inputParamValues.get(lstNmElmnt.getTextContent().toLowerCase()).add(lstValElmnt.getTextContent()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/6796/buggy-version/src.main.java.org.hpccsystems.dashboard.services.impl.HPCCQueryServiceImpl.java", "BodyUseAPI": ["java.lang.String.toLowerCase()", "org.w3c.dom.Element.getTextContent()", "java.lang.String.toLowerCase()", "org.w3c.dom.Element.getTextContent()", "java.util.Set<java.lang.String>.add(java.lang.String)", "java.util.Map<java.lang.String, java.util.Set<java.lang.String>>.containsKey(java.lang.String)", "org.w3c.dom.Element.getTextContent()", "java.lang.String.toLowerCase()", "java.util.Map<java.lang.String, java.util.Set<java.lang.String>>.get(java.lang.String)", "java.util.Map<java.lang.String, java.util.Set<java.lang.String>>.put(java.lang.String,java.util.TreeSet<java.lang.String>)", "java.util.Set<java.lang.String>.add(java.lang.String)", "org.w3c.dom.Element.getTextContent()", "java.lang.String.toLowerCase()", "java.util.Map<java.lang.String, java.util.Set<java.lang.String>>.get(java.lang.String)"], "Fixed commit": "79344c8025754b3975b7c49c72bce806f784bc71", "Url": "https://api.github.com/repos/senthilkumar2githup/Dashboard", "Date": "2014-08-19T05:52:32Z"},
{"Line": "=>1071", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (lstValElmnt != null) { inputParamValues.get(lstNmElmnt.getTextContent().toLowerCase()).add(lstValElmnt.getTextContent()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/6796/buggy-version/src.main.java.org.hpccsystems.dashboard.services.impl.HPCCQueryServiceImpl.java", "BodyUseAPI": ["java.util.Set<java.lang.String>.add(java.lang.String)", "org.w3c.dom.Element.getTextContent()"], "Fixed commit": "79344c8025754b3975b7c49c72bce806f784bc71", "Url": "https://api.github.com/repos/senthilkumar2githup/Dashboard", "Date": "2014-08-19T05:52:32Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.googlecode.lanterna.gui2.AbstractBasePane<T>.fromGlobal(mouseAction.getPosition())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (localCoordinates != null) { com.googlecode.lanterna.gui2.Interactable interactable = interactableLookupMap.getInteractableAt(localCoordinates); if (interactable != null) { interactable.handleInput(key); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/3687/buggy-version/src.main.java.com.googlecode.lanterna.gui2.AbstractBasePane.java", "BodyUseAPI": ["com.googlecode.lanterna.gui2.InteractableLookupMap.getInteractableAt(com.googlecode.lanterna.TerminalPosition)"], "Fixed commit": "f07da42f969fd83e6362eca8c9946aecbbd16d62", "Url": "https://api.github.com/repos/mabe02/lanterna", "Date": "2017-08-11T19:38:12Z"},
{"Line": "=>353", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((conn_status) == (net.davidgf.android.WhatsappConnection.SessionStatus.SessionConnected)) notifyMyPresence();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/157/buggy-version/src.net.davidgf.android.WhatsappConnection.java", "BodyUseAPI": [], "Fixed commit": "9ea7a5b646ab909c54f83167fdee015ca0171ec8", "Url": "https://api.github.com/repos/davidgfnet/xabber-android", "Date": "2013-08-31T12:37:31Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (((((((familyName == null) || (familyName.trim().equals(\"\"))) && ((givenName == null) || (givenName.trim().equals(\"\")))) && (begin_date == 0)) && (end_date == 0)) && ((section_title == null) || (section_title.trim().equals(\"\")))) && (volume_id == 0)) { json = \"{[]}\"; }else { json = er.getVolumes(familyName, givenName, section_title, scanned_only, volume_id, begin_date, end_date); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/5620/buggy-version/src.rest.volumes.java", "BodyUseAPI": ["run.ecoReader.getVolumes(java.lang.String,java.lang.String,java.lang.String,boolean,int,int,int)"], "Fixed commit": "920116638ae1742540665cfd99c476fbfa50667f", "Url": "https://api.github.com/repos/BNHM/ecoreader", "Date": "2016-07-26T23:23:13Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.transit.realtime.GtfsRealtime.EntitySelector.getRouteType()", "com.google.common.collect.Sets.newHashSet()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (validRouteTypes.contains(routeTypeVal)) { sources.add(Schema.Routes.SourceId.fromValue(routeTypeVal)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/7563/buggy-version/bostonbusmap-library.src.main.java.com.schneeloch.bostonbusmap_library.parser.MbtaAlertsParser.java", "BodyUseAPI": ["Schema.Routes.SourceId.fromValue(int)", "java.util.List<Schema.Routes.SourceId>.add(Schema.Routes.SourceId.fromValue(routeTypeVal))"], "Fixed commit": "28fa1416d1fa54d64b4cb2d32d5831d0ea19fbbb", "Url": "https://api.github.com/repos/noisecapella/bostonbusmap", "Date": "2015-04-23T23:52:08Z"},
{"Line": "=>570", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (obj instanceof org.teiid.translator.jdbc.DerivedColumn) { org.teiid.translator.jdbc.DerivedColumn dc = ((org.teiid.translator.jdbc.DerivedColumn) (obj)); org.teiid.translator.jdbc.Expression expr = dc.getExpression(); if ((expr.getType()) == (TypeFacility.RUNTIME_TYPES.GEOMETRY)) { dc.setExpression(getLanguageFactory().createFunction(SourceSystemFunctions.CONVERT, new org.teiid.translator.jdbc.Expression[]{ expr, new org.teiid.translator.jdbc.Literal(TypeFacility.RUNTIME_NAMES.GEOMETRY, java.lang.String.class) }, TypeFacility.RUNTIME_TYPES.GEOMETRY)); } }else if (obj instanceof org.teiid.translator.jdbc.Literal) { org.teiid.translator.jdbc.Literal l = ((org.teiid.translator.jdbc.Literal) (obj)); if ((l.getType()) == (TypeFacility.RUNTIME_TYPES.GEOMETRY)) { return java.util.Arrays.asList(getLanguageFactory().createFunction(SourceSystemFunctions.CONVERT, new org.teiid.translator.jdbc.Expression[]{ l, new org.teiid.translator.jdbc.Literal(TypeFacility.RUNTIME_NAMES.BLOB, java.lang.String.class) }, TypeFacility.RUNTIME_TYPES.BLOB)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/3645/buggy-version/connectors.translator-jdbc.src.main.java.org.teiid.translator.jdbc.JDBCExecutionFactory.java", "BodyUseAPI": [], "Fixed commit": "70423a006caf8575f7ca3ba213ce7ac6946c024b", "Url": "https://api.github.com/repos/Tom9729/teiid", "Date": "2015-01-02T07:32:43Z"},
{"Line": "=>275", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (endX < startX) { skipDraw = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/8007/buggy-version/src.main.java.com.jjoe64.graphview.series.LineGraphSeries.java", "BodyUseAPI": [], "Fixed commit": "a46b70c9bf44523f2d65506f15ade4138ce8fc1d", "Url": "https://api.github.com/repos/jjoe64/GraphView", "Date": "2016-08-09T06:19:58Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.opencompare.api.java.PCMContainer.getPcm()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((pcm.getProducts().get(p).findCell(pcm.getConcreteFeatures().get(i))) != null) { if (!(pcm.getProducts().get(p).findCell(pcm.getConcreteFeatures().get(i)).getContent().toLowerCase().trim().contentEquals(pcm.getProducts().get(j).findCell(pcm.getConcreteFeatures().get(i)).getContent().toLowerCase().trim()))) { generalCountCellsBinomeAux(pcm.getProducts().get(p).findCell(pcm.getConcreteFeatures().get(i)).getContent().toLowerCase(), pcm.getProducts().get(j).findCell(pcm.getConcreteFeatures().get(i)).getContent().toLowerCase()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/7924/buggy-version/src.main.java.org.opencompare.CountPairs.java", "BodyUseAPI": ["pcm.getProducts().get(j).findCell(pcm.getConcreteFeatures().get(i)).getContent()", "pcm.getProducts().get(j).findCell(pcm.getConcreteFeatures().get(i))", "pcm.getProducts().get(p).findCell(pcm.getConcreteFeatures().get(i)).getContent()", "pcm.getConcreteFeatures().get(int)", "pcm.getProducts().get(p).findCell(pcm.getConcreteFeatures().get(i)).getContent().toLowerCase()", "pcm.getConcreteFeatures().get(int)", "org.opencompare.api.java.PCM.getConcreteFeatures()", "org.opencompare.api.java.PCM.getProducts()", "pcm.getProducts().get(p).findCell(pcm.getConcreteFeatures().get(i))", "pcm.getProducts().get(p).findCell(pcm.getConcreteFeatures().get(i)).getContent()", "pcm.getProducts().get(j).findCell(pcm.getConcreteFeatures().get(i)).getContent().toLowerCase()", "pcm.getProducts().get(p).findCell(pcm.getConcreteFeatures().get(i)).getContent().toLowerCase().trim().contentEquals(pcm.getProducts().get(j).findCell(pcm.getConcreteFeatures().get(i)).getContent().toLowerCase().trim())", "pcm.getProducts().get(p).findCell(pcm.getConcreteFeatures().get(i)).getContent().toLowerCase().trim()", "org.opencompare.api.java.PCM.getConcreteFeatures()", "pcm.getProducts().get(int)", "pcm.getProducts().get(j).findCell(pcm.getConcreteFeatures().get(i)).getContent()", "org.opencompare.api.java.PCM.getConcreteFeatures()", "pcm.getProducts().get(p).findCell(pcm.getConcreteFeatures().get(i)).getContent().toLowerCase()", "pcm.getConcreteFeatures().get(int)", "org.opencompare.api.java.PCM.getProducts()", "org.opencompare.CountPairs.generalCountCellsBinomeAux(pcm.getProducts().get(p).findCell(pcm.getConcreteFeatures().get(i)).getContent().toLowerCase(),pcm.getProducts().get(j).findCell(pcm.getConcreteFeatures().get(i)).getContent().toLowerCase())", "pcm.getProducts().get(j).findCell(pcm.getConcreteFeatures().get(i))", "pcm.getConcreteFeatures().get(int)", "pcm.getProducts().get(int)", "pcm.getProducts().get(j).findCell(pcm.getConcreteFeatures().get(i)).getContent().toLowerCase().trim()", "pcm.getProducts().get(int)", "org.opencompare.api.java.PCM.getConcreteFeatures()", "pcm.getProducts().get(j).findCell(pcm.getConcreteFeatures().get(i)).getContent().toLowerCase()", "org.opencompare.api.java.PCM.getProducts()", "org.opencompare.api.java.PCM.getProducts()", "pcm.getProducts().get(int)", "pcm.getProducts().get(p).findCell(pcm.getConcreteFeatures().get(i))"], "Fixed commit": "bebd13574c909600a7854d07641580d90125b4af", "Url": "https://api.github.com/repos/miage-pdl/groupe3", "Date": "2017-12-17T14:15:52Z"},
{"Line": "=>746", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((result.errorSource) == (ru.valle.btc.MainActivity.GenerateTransactionResult.ERROR_SOURCE_INPUT_TX_FIELD)) { rawTxToSpendEdit.setError(result.errorMessage); }else if (((result.errorSource) == (ru.valle.btc.MainActivity.GenerateTransactionResult.ERROR_SOURCE_ADDRESS_FIELD)) || ((result.errorSource) == (ru.valle.btc.MainActivity.GenerateTransactionResult.HINT_FOR_ADDRESS_FIELD))) { recipientAddressView.setError(result.errorMessage); }else if ((!(android.text.TextUtils.isEmpty(result.errorMessage))) && ((result.errorSource) == (ru.valle.btc.MainActivity.GenerateTransactionResult.ERROR_SOURCE_UNKNOWN))) { new android.app.AlertDialog.Builder(this).setMessage(result.errorMessage).setPositiveButton(android.R.string.ok, null).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/7246/buggy-version/src.ru.valle.btc.MainActivity.java", "BodyUseAPI": ["new android.app.AlertDialog.Builder(this).setMessage(result.errorMessage).setPositiveButton(android.R.string.ok,<nulltype>)", "android.widget.TextView.setError(java.lang.String)", "android.widget.EditText.setError(java.lang.String)", "new android.app.AlertDialog.Builder(this).setMessage(result.errorMessage).setPositiveButton(android.R.string.ok, null).show()", "android.text.TextUtils.isEmpty(java.lang.String)", "android.app.AlertDialog.Builder.setMessage(java.lang.String)"], "Fixed commit": "b03285b53afdaf0e32204b2977ee106e0096be0f", "Url": "https://api.github.com/repos/ValleZ/Paper-Wallet", "Date": "2013-12-23T04:24:12Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fi.muikku.files.TempFileUploadServlet.getFileName(javax.servlet.http.Part)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (fileName != null) { output.put(\"fileContentType\", getServletContext().getMimeType(fileName)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/2006/buggy-version/muikku.src.main.java.fi.muikku.files.TempFileUploadServlet.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,getServletContext().getMimeType(fileName))", "getServletContext().getMimeType(java.lang.String)"], "Fixed commit": "ac0bb7df87320b74276bddf72b33384c4ba69389", "Url": "https://api.github.com/repos/otavanopisto/muikku", "Date": "2015-09-02T09:16:32Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.pig.data.Tuple.get(ml.shifu.shifu.udf.NormalizeUDF)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (tag == null) { log.warn(\"The tag is NULL, just skip it!!\"); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/860/buggy-version/src.main.java.ml.shifu.shifu.udf.NormalizeUDF.java", "BodyUseAPI": [], "Fixed commit": "222291f8e9deaad8fd0511358f6e090c909ddea0", "Url": "https://api.github.com/repos/ShifuML/shifu", "Date": "2017-07-13T00:36:53Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (jayhorn.Options.v().getSolver().equals(\"spacer\")) { errorState = errorPredicate.mkExpr(new jayhorn.solver.ProverExpr[]{ p.mkLiteral(true) }); jayhorn.hornify.encoder.S2H.sh().setErrorState(errorState); }else { errorState = p.mkLiteral(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/5721/buggy-version/jayhorn.src.main.java.jayhorn.hornify.encoder.StatementEncoder.java", "BodyUseAPI": [], "Fixed commit": "73cddf727cbb6a96672fef754ed496e7f247bbc4", "Url": "https://api.github.com/repos/jayhorn/jayhorn", "Date": "2016-10-29T03:44:21Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.palantir.typescript.text.reconciler.AnnotationReconcilingStrategy.getOffset()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (offset >= 0) { java.lang.String fileName = this.editor.getFileName(); final java.util.List<com.palantir.typescript.services.language.Diagnostic> diagnostics = languageService.getDiagnostics(fileName); final java.util.List<com.palantir.typescript.services.language.ReferenceEntry> occurrences = languageService.getOccurrencesAtPosition(fileName, offset); org.eclipse.swt.widgets.Display.getDefault().asyncExec(new java.lang.Runnable() { @java.lang.Override public void run() { updateAnnotations(diagnostics, occurrences); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/607/buggy-version/com.palantir.typescript.src.com.palantir.typescript.text.reconciler.AnnotationReconcilingStrategy.java", "BodyUseAPI": ["com.palantir.typescript.services.language.LanguageService.getOccurrencesAtPosition(java.lang.String,int)"], "Fixed commit": "4afbc57ee39721ce9cd78918c3e61fa55d7c95b9", "Url": "https://api.github.com/repos/palantir/eclipse-typescript", "Date": "2013-09-04T00:25:24Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fTarget) != null) { canonicalName = fTarget.getClass().getCanonicalName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/6795/buggy-version/plugins.org.jboss.reddeer.junit.src.org.jboss.reddeer.junit.internal.runner.RunBefores.java", "BodyUseAPI": [], "Fixed commit": "14e01539ccbe41dab38d0f6a4d8d888a6056724b", "Url": "https://api.github.com/repos/ljelinkova/reddeer", "Date": "2014-03-07T12:38:09Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.hearthsim.model.PlayerModel.getPlayerId()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((fullSideInformation.size()) < currentPlayerId) { fullSideInformation.add(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/1614/buggy-version/src.main.java.com.hearthsim.results.GameSimpleRecord.java", "BodyUseAPI": ["java.util.List<java.util.Map<java.lang.Integer, com.hearthsim.util.MinionList>>.add(<nulltype>)"], "Fixed commit": "6a4e86d12c744ed50ed68b442b6eae5602d41b9d", "Url": "https://api.github.com/repos/relimited/HearthSim", "Date": "2014-12-05T01:37:49Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (features == null) features = new java.util.ArrayList(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/6209/buggy-version/src.main.java.net.sf.mzmine.modules.rawdatamethods.peakpicking.adap3d.ADAP3DTask.java", "BodyUseAPI": [], "Fixed commit": "b06e7b9dc980e7afeb01767bd3e3896ba0ae3ca7", "Url": "https://api.github.com/repos/mzmine/mzmine2", "Date": "2017-09-17T17:47:37Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (config.containsCriterion(org.deidentifier.arx.criteria.DPresence.class)) { java.util.Set<org.deidentifier.arx.criteria.DPresence> crits = config.getCriteria(org.deidentifier.arx.criteria.DPresence.class); if ((crits.size()) > 1) { throw new java.lang.IllegalArgumentException(\"Only one d-presence criterion supported!\"); } for (org.deidentifier.arx.criteria.DPresence dPresence : crits) { rowCount = dPresence.getSubset().getArray().length; } }else { rowCount = input.getDataLength(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/5110/buggy-version/src.main.org.deidentifier.arx.metric.MetricNMPrecision.java", "BodyUseAPI": ["org.deidentifier.arx.ARXConfiguration.getCriteria(java.lang.Class)"], "Fixed commit": "5249e7f131b64e0d9f5d3c72d2cd6e1b3d47532b", "Url": "https://api.github.com/repos/arx-deidentifier/arx", "Date": "2014-08-22T18:16:37Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((taskbossHistory) != null) { taskbossHistory.push(new seedu.taskboss.model.TaskBoss(this.taskBoss)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/3527/buggy-version/src.main.java.seedu.taskboss.model.ModelManager.java", "BodyUseAPI": [], "Fixed commit": "b7a81fec87ed01a343ad7c5dcdb07460ddc14677", "Url": "https://api.github.com/repos/CS2103JAN2017-W14-B2/main", "Date": "2017-04-06T01:56:40Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (\"\".equals(result)) { edu.ucla.cens.mobilize.client.ui.SuccessDialog.show(\"Password change successful.\"); }else { edu.ucla.cens.mobilize.client.ui.ErrorDialog.show(result); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/7810/buggy-version/src.edu.ucla.cens.mobilize.client.presenter.AdminUserDetailPresenter.java", "BodyUseAPI": ["edu.ucla.cens.mobilize.client.ui.ErrorDialog.show(java.lang.String)"], "Fixed commit": "b5f67046c5442a18f8097f92823d6408b0f2a53b", "Url": "https://api.github.com/repos/ohmage/ohmageFrontEnd", "Date": "2013-08-13T22:44:14Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (beforeFirstRoundChanged) { swtRaFile.seek(Constants.playerOffsetBeforeFirstRound); for (long byteIndex = Constants.playerOffsetBeforeFirstRound; byteIndex < (Constants.roundOffset); byteIndex++) { swtRaFile.writeByte(0); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/5727/buggy-version/swt.SwtWriter.java", "BodyUseAPI": [], "Fixed commit": "3a9bc40f60ec650419f8ec1b9bac5ef94e2cf0ca", "Url": "https://api.github.com/repos/tstempfle/swtlib", "Date": "2016-07-03T14:56:57Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["me.redraskal.arcadia.Arcadia.getPlugin(me.redraskal.arcadia.Arcadia.class).getAPI()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (api.getGameManager().isSpectating(event.getPlayer())) api.getGameManager().setSpectating(event.getPlayer(), false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/829/buggy-version/src.main.java.me.redraskal.arcadia.listener.ConnectionListener.java", "BodyUseAPI": ["org.bukkit.event.player.PlayerQuitEvent.getPlayer()", "api.getGameManager().setSpectating(event.getPlayer(),boolean)", "me.redraskal.arcadia.ArcadiaAPI.getGameManager()"], "Fixed commit": "167025bc652c85d3aa8c9a7624226e570754bb6e", "Url": "https://api.github.com/repos/ArcadiaPlugins/Arcadia-Spigot", "Date": "2017-06-22T19:11:59Z"},
{"Line": "=>621", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fromEEP(table_name)) { sql1 = (\"UPDATE \" + table_name) + \" set quantity=(quantity-1)\"; }else { sql1 = (\"UPDATE \" + table_name) + \" set productquantity=(productquantity-1)\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/7798/buggy-version/Login.src.login.InventoryMgr.java", "BodyUseAPI": [], "Fixed commit": "78bb665651f4ff5359dda30d672283a3ecaa7d86", "Url": "https://api.github.com/repos/hotcoder0708/Architecture-Scalable-Ecommerce-System", "Date": "2016-03-01T21:48:54Z"},
{"Line": "=>579", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.tinkerpop.blueprints.impls.orient.OrientElement.getRecord()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (doc == null) throw new java.lang.IllegalArgumentException(((\"The record \" + (getIdentity())) + \" does not exist\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/8779/buggy-version/graphdb.src.main.java.com.tinkerpop.blueprints.impls.orient.OrientElement.java", "BodyUseAPI": [], "Fixed commit": "3b39ef6197313c5a432489362c2aeb6d40c094ee", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2015-04-14T18:10:09Z"},
{"Line": "=>1575", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((leak) != null) { leak.record(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/2531/buggy-version/buffer.src.main.java.io.netty.buffer.CompositeByteBuf.java", "BodyUseAPI": [], "Fixed commit": "51349352e29d0a400b0fa8a883912fba682b8ede", "Url": "https://api.github.com/repos/netty/netty", "Date": "2014-02-07T05:00:05Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["AnimeIndex.animeInformation.typeComboBox.getSelectedItem()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(type.equals(\"Blu-ray\"))) type = util.ConnectionManager.getAnimeData(\"type\", data);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/7498/buggy-version/src.util.task.AutoUpdateAnimeDataTask.java", "BodyUseAPI": [], "Fixed commit": "b3168a81c67be53b7a0e1588a79c0b4d8e39714b", "Url": "https://api.github.com/repos/MyAnimeManager/MyAnimeManager", "Date": "2015-10-28T21:54:34Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (AnimeIndex.animeInformation.typeComboBox.getSelectedItem().equals(\"Blu-ray\")) { typeCheckBox.setSelected(false); typeCheckBox.setEnabled(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/7498/buggy-version/src.util.window.FieldExclusionDialog.java", "BodyUseAPI": [], "Fixed commit": "b3168a81c67be53b7a0e1588a79c0b4d8e39714b", "Url": "https://api.github.com/repos/MyAnimeManager/MyAnimeManager", "Date": "2015-10-28T21:54:34Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.asu.ser322.data.User.getWaifu()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (waifu != null) statement.setInt(3, waifu.getID()); else statement.setNull(3, java.sql.Types.INTEGER);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/7016/buggy-version/src.edu.asu.ser322.data.UserDaoSQL.java", "BodyUseAPI": ["java.sql.PreparedStatement.setInt(int,waifu.getID())", "java.lang.Character.getID()"], "Fixed commit": "68dff9bdc60bd979ff11387de31da575605dcd31", "Url": "https://api.github.com/repos/zcmoore/OtakuOrphanage", "Date": "2015-04-30T23:15:01Z"},
{"Line": "=>270", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (value instanceof java.lang.Enum) { result = ((java.lang.Enum<?>) (value)).name(); }else if (value instanceof java.math.BigDecimal) { result = ((java.math.BigDecimal) (value)).toPlainString(); }else if (value instanceof java.util.regex.Pattern) { result = ((java.util.regex.Pattern) (value)).pattern(); }else { result = (value != null) ? java.lang.String.valueOf(value) : null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/6281/buggy-version/web.src.main.java.com.numdata.oss.web.form.ReflectedFieldTarget.java", "BodyUseAPI": ["java.lang.String.valueOf(java.lang.Object)"], "Fixed commit": "4a62aec63ed01953abdcdcfc9ed2295f66ad90db", "Url": "https://api.github.com/repos/Numdata/numdata-open", "Date": "2017-12-04T15:00:01Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jwildfire.base.Prefs.getOutputFlamePath()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (res == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/6618/buggy-version/src.org.jwildfire.create.tina.swing.QuickSaveFilenameGen.java", "BodyUseAPI": [], "Fixed commit": "c10d4203fc9c69982448f793647fcbc29637daf9", "Url": "https://api.github.com/repos/GreggHelt2/JWildfire", "Date": "2015-06-15T21:30:10Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jwildfire.create.tina.swing.QuickSaveFilenameGen.generateFilename(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (filename != null) { new org.jwildfire.create.tina.io.FlameWriter().writeFlame(currFlame, filename); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/6618/buggy-version/src.org.jwildfire.create.tina.swing.TinaInteractiveRendererController.java", "BodyUseAPI": ["org.jwildfire.create.tina.io.FlameWriter.writeFlame(org.jwildfire.create.tina.base.Flame,java.lang.String)"], "Fixed commit": "c10d4203fc9c69982448f793647fcbc29637daf9", "Url": "https://api.github.com/repos/GreggHelt2/JWildfire", "Date": "2015-06-15T21:30:10Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Model.Location.getOccupied()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (piece.isLegal(oldLocation, newLocation, this)) { copy.setMove(oldLocation, newLocation); java.lang.System.out.println(toString()); java.lang.System.out.println(copy.toString()); return !(copy.check()); }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/8339/buggy-version/src.Model.Board.java", "BodyUseAPI": ["Model.Board.setMove(Model.Location,Model.Location)"], "Fixed commit": "77cac30f7cba46c4da3c6c6007c4104a0cf215fe", "Url": "https://api.github.com/repos/ReinieRSrtiboS/Chess", "Date": "2017-07-17T10:42:41Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((m_listData) != null) { return m_listData.size(); }else { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/9005/buggy-version/BetterBatteryStats.src.com.asksven.betterbatterystats.HistAdapter.java", "BodyUseAPI": [], "Fixed commit": "5f23bad86721703e0f506a45325593a6ac81b4e2", "Url": "https://api.github.com/repos/asksven/BetterBatteryStats", "Date": "2012-07-30T19:14:15Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i < 2) { airlineName = airlines[0]; }else { airlineName = airlines[1]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/374/buggy-version/project.src.SampleClient.java", "BodyUseAPI": [], "Fixed commit": "cc797be12c24a6991225f2d3898616ed8bf99917", "Url": "https://api.github.com/repos/sagather/DPP2", "Date": "2016-12-09T06:02:25Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((newPoint != null) && (destinationsSet.contains(newPoint.getRepresentedObject()))) getWindow().addDestination(newPoint);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/4977/buggy-version/src.main.java.WPI.CampusMap.Frontend.UI.UserMode.java", "BodyUseAPI": ["getWindow().addDestination(WPI.CampusMap.Frontend.Graphics.User.UserPointGraphicsObject)"], "Fixed commit": "835c8c95670cc0e92ad22490eb654132d2067b13", "Url": "https://api.github.com/repos/Team11b/CampusMap", "Date": "2015-12-16T00:27:44Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(textYear.getText().isEmpty())) year = java.lang.Integer.parseInt(textYear.getText());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/3198/buggy-version/src.archavexm.studeteach.app.student.ProfileEditorController.java", "BodyUseAPI": ["javafx.scene.control.TextField.getText()", "java.lang.Integer.parseInt(textYear.getText())"], "Fixed commit": "7bfc58d8ffaef2c55b1f1fd1b5edc7d18c9f454d", "Url": "https://api.github.com/repos/Morr0/Studeteach", "Date": "2016-07-17T01:32:53Z"},
{"Line": "=>284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ctor.getBlock()) != null) { plan.before.addAll(ctor.getBlock().getStatements()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/4274/buggy-version/src.com.redhat.ceylon.compiler.java.loader.MethodOrValueReferenceVisitor.java", "BodyUseAPI": ["com.redhat.ceylon.model.typechecker.model.Constructor.getBlock()", "java.util.List<com.redhat.ceylon.compiler.typechecker.tree.Tree.Statement>.addAll(ctor.getBlock().getStatements())", "ctor.getBlock().getStatements()"], "Fixed commit": "2e785ce5c21da65613180f171a29ae18341cd64c", "Url": "https://api.github.com/repos/ceylon/ceylon-compiler", "Date": "2015-08-18T08:35:46Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Field.getAnnotation(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(ad.readOnly())) { if ((fld.get(o)) != null) { dbo.putAll(((java.util.Map<java.lang.String, java.lang.Object>) (fld.get(o)))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/5666/buggy-version/src.de.caluga.morphium.ObjectMapperImpl.java", "BodyUseAPI": [], "Fixed commit": "2edaae7c229aa8eaf624714d391d20e3e2164064", "Url": "https://api.github.com/repos/sboesebeck/morphium", "Date": "2013-08-22T19:12:21Z"},
{"Line": "=>416", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (k.equals(\"_id\")) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/5666/buggy-version/src.de.caluga.morphium.ObjectMapperImpl.java", "BodyUseAPI": [], "Fixed commit": "2edaae7c229aa8eaf624714d391d20e3e2164064", "Url": "https://api.github.com/repos/sboesebeck/morphium", "Date": "2013-08-22T19:12:21Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((discounts) == null) { return new java.util.HashSet<>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/6171/buggy-version/src.main.java.com.realdolmen.redotravel.domain.Flight.java", "BodyUseAPI": [], "Fixed commit": "c42b36098de36e0ab004831df7aa984be651d220", "Url": "https://api.github.com/repos/zynne/redo-air", "Date": "2014-10-11T14:40:31Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (exchange.hasOut()) { query.setVariable(\"out\", exchange.getOut()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/8661/buggy-version/components.camel-josql.src.main.java.org.apache.camel.builder.sql.SqlBuilder.java", "BodyUseAPI": ["org.apache.camel.Exchange.getOut()", "org.josql.Query.setVariable(java.lang.String,exchange.getOut())"], "Fixed commit": "52a8cc7b2999e9dce9efe8dd48ac4e70ba98cad0", "Url": "https://api.github.com/repos/apache/camel", "Date": "2014-12-05T12:59:05Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (controller != null) { fxmlLoader.setController(controller); if (controller instanceof de.saxsys.jfx.mvvm.base.view.View) { de.saxsys.jfx.mvvm.viewloader.DependencyInjector.getInstance().injectViewModel(((de.saxsys.jfx.mvvm.base.view.View) (controller))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/5515/buggy-version/mvvmfx-parent.mvvmfx.src.main.java.de.saxsys.jfx.mvvm.viewloader.FxmlViewLoader.java", "BodyUseAPI": ["javafx.fxml.FXMLLoader.setController(java.lang.Object)"], "Fixed commit": "309c0f01c7aa14ef2dd6637ce189aa9ebd92af5b", "Url": "https://api.github.com/repos/sialcasa/mvvmFX", "Date": "2014-06-05T15:34:16Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getContentResolver().query(android.net.Uri,java.lang.String[],<nulltype>,<nulltype>,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (cursor != null) { if (cursor.moveToFirst()) { int index = cursor.getColumnIndex(OpenableColumns.DISPLAY_NAME); if (((index >= 0) && ((displayName = cursor.getString(index)) == null)) && ((index = cursor.getColumnIndex(MediaStore.Images.Media.TITLE)) >= 0)) displayName = cursor.getString(index); } cursor.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/5327/buggy-version/Android.MygodSpeechSynthesizer.src.main.java.tk.mygod.speech.synthesizer.MainActivity.java", "BodyUseAPI": ["android.database.Cursor.moveToFirst()", "android.database.Cursor.close()", "android.database.Cursor.getColumnIndex(OpenableColumns.DISPLAY_NAME)", "android.database.Cursor.getString(int)", "android.database.Cursor.getColumnIndex(MediaStore.Images.Media.TITLE)", "android.database.Cursor.getString(int)"], "Fixed commit": "c5529aa4fb83d4f4662a795bc637fb072b4ff241", "Url": "https://api.github.com/repos/Mygod/MygodSpeechSynthesizer", "Date": "2014-09-20T07:57:47Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["scrum.client.sprint.Sprint.getBegin()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (begin.isPast()) begin = new ilarkesto.core.time.Date();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/475/buggy-version/src.main.java.scrum.client.project.RequirementBlock.java", "BodyUseAPI": [], "Fixed commit": "2dcd938ad9ffd90e848b3222d757873d71f7a27e", "Url": "https://api.github.com/repos/Kunagi/kunagi", "Date": "2011-03-24T23:26:16Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dispatched) { throw UndertowServletMessages.MESSAGES.asyncRequestAlreadyDispatched(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/4575/buggy-version/servlet.src.main.java.io.undertow.servlet.spec.AsyncContextImpl.java", "BodyUseAPI": [], "Fixed commit": "daa31732a2f321d584253c7860524e30e685e62a", "Url": "https://api.github.com/repos/pferraro/undertow", "Date": "2013-06-09T04:09:10Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dispatched) { throw UndertowServletMessages.MESSAGES.asyncRequestAlreadyDispatched(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/4575/buggy-version/servlet.src.main.java.io.undertow.servlet.spec.AsyncContextImpl.java", "BodyUseAPI": [], "Fixed commit": "daa31732a2f321d584253c7860524e30e685e62a", "Url": "https://api.github.com/repos/pferraro/undertow", "Date": "2013-06-09T04:09:10Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(method.equals(\"apiinfo.version\"))) { json.put(\"auth\", mZabbixAuthToken); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/1181/buggy-version/src.main.java.com.inovex.zabbixmobile.data.ZabbixRemoteAPI.java", "BodyUseAPI": [], "Fixed commit": "390c16a5ba79bfa41e7687580e7940f754329861", "Url": "https://api.github.com/repos/inovex/zax", "Date": "2016-02-15T16:34:11Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (e.getCause().getClass().equals(com.inovex.zabbixmobile.exceptions.CertificateChainException.class)) { final java.security.cert.X509Certificate[] chain = ((com.inovex.zabbixmobile.exceptions.CertificateChainException) (e.getCause())).getmCertChain(); return chain; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/1181/buggy-version/src.main.java.com.inovex.zabbixmobile.util.ssl.HttpsUtil.java", "BodyUseAPI": ["java.lang.Throwable.getmCertChain()", "javax.net.ssl.SSLHandshakeException.getCause()"], "Fixed commit": "390c16a5ba79bfa41e7687580e7940f754329861", "Url": "https://api.github.com/repos/inovex/zax", "Date": "2016-02-15T16:34:11Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.chinaway.android.library.locationtracker.DefaultLocationNotifier.isTooClose(com.chinaway.android.library.locationtracker.sampler.SampleLocation,com.chinaway.android.library.locationtracker.sampler.SampleLocation)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!isTooClose) { mLocation = location; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/4374/buggy-version/locationtracker.src.main.java.com.chinaway.android.library.locationtracker.DefaultLocationNotifier.java", "BodyUseAPI": [], "Fixed commit": "9577c13d7c5e774ac53c1492b5d52f36e2afe8ad", "Url": "https://api.github.com/repos/flyzhy2000/TruckTracker", "Date": "2016-01-11T10:09:49Z"},
{"Line": "=>721", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.interviwer_name.length()) > 0) { name = this.interviwer_name; }else { name = userObj.getStaffName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/6427/buggy-version/src.com.quix.aia.cn.imo.data.interview.InterviewCandidate.java", "BodyUseAPI": [], "Fixed commit": "58bb64d877c2c7f451e5107112e0bfd44ad92224", "Url": "https://api.github.com/repos/aiacncitaps/ERecruitCMS", "Date": "2015-12-29T11:03:41Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(incUrl.isEmpty())) && (incUrl != null)) this.path = incUrl;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/6739/buggy-version/src.webserver.plugins.StaticFileSystem.java", "BodyUseAPI": [], "Fixed commit": "9818ee65414863ad38b79084f2ad6e44169bc159", "Url": "https://api.github.com/repos/fhtw/indrak_kratzer", "Date": "2013-12-02T12:17:37Z"},
{"Line": "=>602", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.zaxxer.hikari.util.ClockSource.currentTime()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (now > (com.zaxxer.hikari.pool.HikariPool.clockSource.plusMillis(previous, ((3 * (HOUSEKEEPING_PERIOD_MS)) / 2)))) { com.zaxxer.hikari.pool.HikariPool.LOGGER.warn(\"{} - Thread starvation or clock leap detected (housekeeper delta={}).\", com.zaxxer.hikari.pool.HikariPool.clockSource.elapsedDisplayString(previous, now), poolName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/6998/buggy-version/src.main.java.com.zaxxer.hikari.pool.HikariPool.java", "BodyUseAPI": ["org.slf4j.Logger.warn(java.lang.String,com.zaxxer.hikari.pool.HikariPool.clockSource.elapsedDisplayString(previous, now),com.zaxxer.hikari.pool.HikariPool.HouseKeeper)", "com.zaxxer.hikari.util.ClockSource.elapsedDisplayString(long,long)"], "Fixed commit": "69dbe20cffd278746a1a43bee92393679d319dce", "Url": "https://api.github.com/repos/brettwooldridge/HikariCP", "Date": "2016-01-30T12:40:59Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.MenuItem.getItemId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (id == (R.id.menuTopup)) { changefragment(new com.example.dmv2.dealmedanv2final.view.fragment.TopupFragment()); setTitle(\"Top Up\"); }else if (id == (R.id.menuPayConfirm)) { changefragment(new com.example.dmv2.dealmedanv2final.view.fragment.PayConfirmFragment()); setTitle(\"Konfirmasi Pembayaran\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/6430/buggy-version/app.src.main.java.com.example.dmv2.dealmedanv2final.view.activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "639cf24d3308c78b255fc8fc8cbce18f9b46cd9f", "Url": "https://api.github.com/repos/AdlinMH/TeamQuotes_MobileProject", "Date": "2017-05-27T13:41:31Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.MenuItem.getItemId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (id == (R.id.menuTopup)) { this.doChangeActivity(getApplicationContext(), com.example.dmv2.dealmedanv2final.view.activity.SubMainActivity.class); changefragment(new com.example.dmv2.dealmedanv2final.view.fragment.TopupFragment()); }else if (id == (R.id.menuPayConfirm)) { this.doChangeActivity(getApplicationContext(), com.example.dmv2.dealmedanv2final.view.activity.SubMainActivity.class); changefragment(new com.example.dmv2.dealmedanv2final.view.fragment.PayConfirmFragment()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/6430/buggy-version/app.src.main.java.com.example.dmv2.dealmedanv2final.view.activity.NavDrawer.java", "BodyUseAPI": [], "Fixed commit": "639cf24d3308c78b255fc8fc8cbce18f9b46cd9f", "Url": "https://api.github.com/repos/AdlinMH/TeamQuotes_MobileProject", "Date": "2017-05-27T13:41:31Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.samayu.prodcastc.businessObjects.dto.CustomerListDTO<com.samayu.prodcastc.businessObjects.domain.NewCustomerRegistrationDetails>.getResult()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((newCustomerRegistrationDetails.getSmsAllowed()) != null) { boolean checked = false; if (newCustomerRegistrationDetails.getSmsAllowed().equals(\"1\")) { checked = true; } smsAllowed.setChecked(checked); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/160/buggy-version/Prodcast.app.src.main.java.com.samayu.prodcastc.ui.EditRegistrationActivity.java", "BodyUseAPI": ["newCustomerRegistrationDetails.getSmsAllowed().equals(java.lang.String)", "com.samayu.prodcastc.businessObjects.domain.NewCustomerRegistrationDetails.getSmsAllowed()"], "Fixed commit": "0c12bc9ff5ba69fffc6ac255cdba30c71abb53b3", "Url": "https://api.github.com/repos/samasys-software/ProdcastCAndroid", "Date": "2017-09-18T09:44:45Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.hazelcast.core.Hazelcast.getHazelcastInstanceByName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (instance != null) { instance.shutdown(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/6853/buggy-version/podium-uaa.src.main.java.org.bbmri.podium.config.CacheConfiguration.java", "BodyUseAPI": ["com.hazelcast.core.HazelcastInstance.shutdown()"], "Fixed commit": "23beea8bb1a4ec58b4ec07053004e199c266359c", "Url": "https://api.github.com/repos/thehyve/podium", "Date": "2017-02-22T09:47:42Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.game) != null) { this.game.pauseTimer(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/2220/buggy-version/src.WarehouseBoss.java", "BodyUseAPI": [], "Fixed commit": "a8e1d01aecd13557f10c672ec7840b71f41b5d9e", "Url": "https://api.github.com/repos/KazaHesto/COMP2911", "Date": "2017-05-25T09:37:22Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.robovm.apple.foundation.NSThread.getCurrentThread().isMainThread()) { exception.raise(); }else { long handler = org.robovm.apple.foundation.NSException.getUncaughtExceptionHandler(); org.robovm.apple.foundation.NSException.callUncaughtExceptionHandler(handler, exception); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/8491/buggy-version/cocoatouch.src.main.java.org.robovm.apple.foundation.NSException.java", "BodyUseAPI": [], "Fixed commit": "3f8d26903b2fe8287786406b975ca7fc88d89dbd", "Url": "https://api.github.com/repos/robodandersson/robovm", "Date": "2014-10-06T17:36:56Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sinnlabs.dbvim.rules.engine.RulesEngine.getComponentAttributes(org.zkoss.zk.ui.Component,RulesEngine.ATTRIBUTES_CUSTOM_PROPERTIES)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((org.apache.commons.lang3.ArrayUtils.isNotEmpty(customProps)) && (org.apache.commons.lang3.ArrayUtils.contains(customProps, descriptor.getName()))) { cmpValue = org.sinnlabs.dbvim.rules.engine.RulesEngine.getSpecialProperty(current, sName, developer); row.appendChild(cmpValue); }else if ((descriptor.getPropertyType()) == (boolean.class)) { org.zkoss.zul.Listbox list = new org.zkoss.zul.Listbox(); list.setMold(\"select\"); list.setWidth(\"90%\"); row.appendChild(list); org.zkoss.zul.Listitem itemTrue = new org.zkoss.zul.Listitem(\"true\"); list.appendChild(itemTrue); org.zkoss.zul.Listitem itemFalse = new org.zkoss.zul.Listitem(\"false\"); list.appendChild(itemFalse); boolean bValue = true; if (value != null) bValue = java.lang.Boolean.valueOf(((java.lang.String) (value))).booleanValue(); if (bValue) list.setSelectedItem(itemTrue); else list.setSelectedItem(itemFalse); cmpValue = list; }else { java.lang.String sValue = \"\"; if (value == null) value = \"\"; if (value instanceof java.lang.String) sValue = ((java.lang.String) (value)); else sValue = java.lang.String.valueOf(value); org.zkoss.zul.Textbox textbox = new org.zkoss.zul.Textbox(); textbox.setWidth(\"95%\"); textbox.setMaxlength(1000); if ((sValue.length()) > 50) textbox.setMultiline(true); textbox.setValue(sValue); row.appendChild(textbox); cmpValue = textbox; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/519/buggy-version/src.org.sinnlabs.dbvim.ui.DesignerProperties.java", "BodyUseAPI": ["java.beans.PropertyDescriptor.getPropertyType()"], "Fixed commit": "224bba46e066f12295e34713e749e301cdf4d0f8", "Url": "https://api.github.com/repos/sinnlabs/dbvim", "Date": "2015-11-09T07:19:50Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (iObject == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/7815/buggy-version/graphdb.src.main.java.com.tinkerpop.blueprints.impls.orient.OrientVertexIterator.java", "BodyUseAPI": [], "Fixed commit": "cd04270a124f9501acab4c882f81d373572881c5", "Url": "https://api.github.com/repos/nagarajasr/orientdb", "Date": "2015-06-04T07:49:22Z"},
{"Line": "=>8", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (htmlText == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/1421/buggy-version/src.HTMLParser.java", "BodyUseAPI": [], "Fixed commit": "493b16ffa7e26ac377b8bffa36a84d40586c546b", "Url": "https://api.github.com/repos/JackieJ6/parser", "Date": "2017-07-31T19:11:35Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((dateTime = tryFormat(strTime, com.yahoo.sql4d.query.nodes.Interval.dateTimeWithSubSecFormat)) == null) { if ((dateTime = tryFormat(strTime, com.yahoo.sql4d.query.nodes.Interval.dateTimeFormat)) == null) { if ((dateTime = tryFormat(strTime, com.yahoo.sql4d.query.nodes.Interval.dateHourMinOnlyFormat)) == null) { if ((dateTime = tryFormat(strTime, com.yahoo.sql4d.query.nodes.Interval.dateHourOnlyFormat)) == null) { if ((dateTime = tryFormat(strTime, com.yahoo.sql4d.query.nodes.Interval.dateOnlyFormat)) == null) { return dateTime; } } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/3767/buggy-version/Sql4DCompiler.src.main.java.com.yahoo.sql4d.query.nodes.Interval.java", "BodyUseAPI": ["com.yahoo.sql4d.query.nodes.Interval.tryFormat(java.lang.String,org.joda.time.format.DateTimeFormatter)", "com.yahoo.sql4d.query.nodes.Interval.tryFormat(java.lang.String,org.joda.time.format.DateTimeFormatter)", "com.yahoo.sql4d.query.nodes.Interval.tryFormat(java.lang.String,org.joda.time.format.DateTimeFormatter)", "com.yahoo.sql4d.query.nodes.Interval.tryFormat(java.lang.String,org.joda.time.format.DateTimeFormatter)"], "Fixed commit": "ef5234e025cf0e7a69f78ea23fe3a8d359279a9d", "Url": "https://api.github.com/repos/yahoo/Sql4D", "Date": "2014-09-27T20:22:49Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["historyService.createHistoricProcessInstanceQuery().notDeleted().includeProcessVariables().variableValueNotEquals(\"status\", \"Approval\").variableValueNotEquals(\"scientific_council_approved\", null).orderByProcessInstanceStartTime().desc().list()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (list != null) { java.util.Collections.sort(list, requestComparator); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/2868/buggy-version/src.main.java.business.controllers.RequestController.java", "BodyUseAPI": ["java.util.Collections.sort(java.util.List<org.activiti.engine.history.HistoricProcessInstance>,business.controllers.RequestComparator)"], "Fixed commit": "9d332dc5735a982ccbb6ef3e6f2a9c41a3110f5a", "Url": "https://api.github.com/repos/thehyve/dntp-portal", "Date": "2015-06-18T12:10:52Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["historyService.createHistoricProcessInstanceQuery().notDeleted().includeProcessVariables().variableValueNotEquals(\"status\", \"Approval\").variableValueNotEquals(\"scientific_council_approved\", null).orderByProcessInstanceStartTime().desc().list()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (list != null) { processInstances.addAll(list); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/2868/buggy-version/src.main.java.business.controllers.RequestController.java", "BodyUseAPI": ["java.util.List<org.activiti.engine.history.HistoricProcessInstance>.addAll(java.util.List<org.activiti.engine.history.HistoricProcessInstance>)"], "Fixed commit": "9d332dc5735a982ccbb6ef3e6f2a9c41a3110f5a", "Url": "https://api.github.com/repos/thehyve/dntp-portal", "Date": "2015-06-18T12:10:52Z"},
{"Line": "=>402", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ignoreMalformed.value()) { return; }else { throw new java.lang.IllegalArgumentException(((\"[scaled_float] only supports finite values, but got [\" + doubleValue) + \"]\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/2605/buggy-version/core.src.main.java.org.elasticsearch.index.mapper.ScaledFloatFieldMapper.java", "BodyUseAPI": [], "Fixed commit": "d7dd346c480b7ccc308421b1cc71202f1abb5bdb", "Url": "https://api.github.com/repos/elastic/elasticsearch", "Date": "2017-07-31T14:14:30Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (gtPlusPlus.core.lib.LoadedMods.PlayerAPI) { playerAPIStuff(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/3755/buggy-version/src.Java.gtPlusPlus.core.proxy.ClientProxy.java", "BodyUseAPI": [], "Fixed commit": "b5dbfaabb920c3fff56bf300bab8ce2043b3fa12", "Url": "https://api.github.com/repos/draknyte1/GTplusplus", "Date": "2017-03-02T09:30:15Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (gtPlusPlus.core.lib.LoadedMods.PlayerAPI) { MinecraftForge.EVENT_BUS.register(SneakManager.instance); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/3755/buggy-version/src.Java.gtPlusPlus.core.proxy.ClientProxy.java", "BodyUseAPI": [], "Fixed commit": "b5dbfaabb920c3fff56bf300bab8ce2043b3fa12", "Url": "https://api.github.com/repos/draknyte1/GTplusplus", "Date": "2017-03-02T09:30:15Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javafx.fxml.FXMLLoader.getController()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((controller.getSequenceHashMap()) != null) controller.getSequenceHashMap().close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/924/buggy-version/src.main.java.gui.App.java", "BodyUseAPI": ["gui.MenuController.getSequenceHashMap()", "controller.getSequenceHashMap().close()"], "Fixed commit": "b6a3f5a32ee9414c34d57866daab2485ad6b6a3a", "Url": "https://api.github.com/repos/ProgrammingLife2017/DynamiteAndButterflies", "Date": "2017-05-17T13:16:14Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(uploadPath.endsWith(\"/\"))) { uploadPath = uploadPath + \"/\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/3778/buggy-version/src.java.com.idega.block.article.bean.article_view.ArticleViewRequestBean.java", "BodyUseAPI": [], "Fixed commit": "5443c8167adc80a8356a9cae85deca56098df079", "Url": "https://api.github.com/repos/idega/com.idega.block.article", "Date": "2012-05-11T13:16:07Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (usersDAO.exists(username)) { return null; }else { return usersDAO.add(new org.dcn.aldous.database.users.AldousUser(null, name, newArrayList(), username, password)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/6619/buggy-version/src.QueryService.src.main.java.org.dcn.aldous.query.services.rest.UsersRest.java", "BodyUseAPI": ["org.dcn.aldous.database.users.UsersDAO.add(org.dcn.aldous.database.users.AldousUser)"], "Fixed commit": "81bf1d11b4a6212a25a04394413e1c0e728768af", "Url": "https://api.github.com/repos/olepark/aldous", "Date": "2016-12-17T22:57:50Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Double.parseDouble(request.getParameter(\"perc\"))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (formPerc > 100.0) { formPerc = 100.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/6507/buggy-version/DryvesV2.src.java.controller.AdminServlet.java", "BodyUseAPI": [], "Fixed commit": "da6763f81d232fd089925fa0f11a10c3c72d2e36", "Url": "https://api.github.com/repos/WulmvE/Dryves", "Date": "2013-06-18T14:32:10Z"},
{"Line": "=>373", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.vonhof.smartq.WriteThroughTaskStore.log.isDebugEnabled()) { com.vonhof.smartq.WriteThroughTaskStore.log.debug(java.lang.String.format(\"Getting async task - %s left\", tasks.size())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/1606/buggy-version/src.main.java.com.vonhof.smartq.WriteThroughTaskStore.java", "BodyUseAPI": ["org.apache.log4j.Logger.debug(java.lang.String)"], "Fixed commit": "24bf68ec02ec6539a6fa3093d0a0800a00c58d06", "Url": "https://api.github.com/repos/hofmeister/smartq", "Date": "2014-06-11T13:27:11Z"},
{"Line": "=>376", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (task != null) { tasks.notifyAll(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/1606/buggy-version/src.main.java.com.vonhof.smartq.WriteThroughTaskStore.java", "BodyUseAPI": [], "Fixed commit": "24bf68ec02ec6539a6fa3093d0a0800a00c58d06", "Url": "https://api.github.com/repos/hofmeister/smartq", "Date": "2014-06-11T13:27:11Z"},
{"Line": "=>1845", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["kr.co.fci.tv.channelList.ChannelListAdapter.getInstance().getItem(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (channel != null) { int type = ((int) (channel.getType())); if (type == 0) { bcas_card_insert_msg.setVisibility(View.INVISIBLE); }else { bcas_card_insert_msg.setVisibility(View.VISIBLE); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/6876/buggy-version/app.src.main.java.kr.co.fci.tv.MainActivity.java", "BodyUseAPI": ["kr.co.fci.tv.channelList.Channel.getType()"], "Fixed commit": "9cf4528c2b471bef8145c8680c8bace857e60e03", "Url": "https://api.github.com/repos/rockcarry/Isdbt", "Date": "2017-12-26T07:48:07Z"},
{"Line": "=>665", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (entryPath.contains(\":\")) entryPath = entryPath.replaceFirst(entryPath.substring(((entryPath.indexOf(\":\")) - 1), ((entryPath.indexOf(\":\")) + 1)), \"\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/3283/buggy-version/ASCoDTKernel.src.de.tum.ascodt.plugin.project.Project.java", "BodyUseAPI": ["java.lang.String.indexOf(java.lang.String)", "java.lang.String.indexOf(java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.String.replaceFirst(java.lang.String,java.lang.String)"], "Fixed commit": "2c4d98e487eeb6bd56dbe1bc3a504aadd6a89798", "Url": "https://api.github.com/repos/ascodt-users/ascodt-nightly", "Date": "2013-06-17T09:02:29Z"},
{"Line": "=>1514", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (l > (pLinePoints.length)) l = pLinePoints.length;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/8270/buggy-version/core.JavaLineArray.src.main.java.JavaLineArray.arraysupport.java", "BodyUseAPI": [], "Fixed commit": "8df296be8a4b692b094fc820c37c6b42dfbf5b95", "Url": "https://api.github.com/repos/missioncommand/mil-sym-java", "Date": "2014-09-02T17:52:39Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(myProject.isDefault())) { com.intellij.lang.LanguagePerFileMappings.LOG.error((((\"updater = null. project=\" + (myProject.getName())) + \", this=\") + (getClass().getSimpleName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/2319/buggy-version/platform.lang-impl.src.com.intellij.lang.LanguagePerFileMappings.java", "BodyUseAPI": ["com.intellij.openapi.project.Project.getName()", "com.intellij.openapi.diagnostic.Logger.error((((\"updater = null. project=\" + (myProject.getName())) + \", this=\") + (getClass().getSimpleName())))"], "Fixed commit": "ab5cb44cd8d309acf24d4467e68e49be0ab1b488", "Url": "https://api.github.com/repos/JetBrains/intellij-community", "Date": "2012-05-05T09:34:08Z"},
{"Line": "=>945", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (categoricalIndex == null) { shortValue = -1; }else { shortValue = ((short) (categoricalIndex.intValue())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/3234/buggy-version/src.main.java.ml.shifu.shifu.core.dtrain.dt.DTWorker.java", "BodyUseAPI": ["java.lang.Integer.intValue()"], "Fixed commit": "2f5116ab6b08fb69ecc32d755798af09536d072e", "Url": "https://api.github.com/repos/ShifuML/shifu", "Date": "2016-12-16T18:31:57Z"},
{"Line": "=>985", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (categoricalIndex == null) { shortValue = -1; }else { shortValue = ((short) (categoricalIndex.intValue())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/3234/buggy-version/src.main.java.ml.shifu.shifu.core.dtrain.dt.DTWorker.java", "BodyUseAPI": ["java.lang.Integer.intValue()"], "Fixed commit": "2f5116ab6b08fb69ecc32d755798af09536d072e", "Url": "https://api.github.com/repos/ShifuML/shifu", "Date": "2016-12-16T18:31:57Z"},
{"Line": "=>2996", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (raiseError) { throw new org.exist.xquery.XPathException(call, ErrorCodes.XPST0017, (\"Call to undeclared function: \" + (call.getQName().getStringValue()))); }else { unresolved.push(call); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/2923/buggy-version/src.org.exist.xquery.XQueryContext.java", "BodyUseAPI": [], "Fixed commit": "430e17d79b77c2c4fd5b514f995e7953b2399bf5", "Url": "https://api.github.com/repos/eXist-db/exist", "Date": "2017-09-23T13:00:33Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((column != \"\") && (column != null)) { Query += column; if (column != (columns[((columns.length) - 1)])) { Query += \", \"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/2382/buggy-version/src.de.AnimalProtect.MySQL.java", "BodyUseAPI": [], "Fixed commit": "f30533b17bd2238013c56dc071bdd091d7a7cc3b", "Url": "https://api.github.com/repos/Craftolution/AnimalProtect", "Date": "2014-04-09T18:37:59Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sdr.smokeAlarmState) != null) { smokeAlarmState = SmokeDetector.AlarmState.valueOf(sdr.smokeAlarmState.toUpperCase()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/7553/buggy-version/data.src.main.java.com.example.twister.model.mapper.DeviceMapper.java", "BodyUseAPI": ["SmokeDetector.AlarmState.valueOf(sdr.smokeAlarmState.toUpperCase())", "sdr.smokeAlarmState.toUpperCase()"], "Fixed commit": "2d0bdf6f35780914b49865fc60443ae99a5ec62c", "Url": "https://api.github.com/repos/kord2003/Twister", "Date": "2016-02-08T10:33:56Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sdr.coAlarmState) != null) { coAlarmState = SmokeDetector.AlarmState.valueOf(sdr.coAlarmState.toUpperCase()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/7553/buggy-version/data.src.main.java.com.example.twister.model.mapper.DeviceMapper.java", "BodyUseAPI": ["sdr.coAlarmState.toUpperCase()", "SmokeDetector.AlarmState.valueOf(sdr.coAlarmState.toUpperCase())"], "Fixed commit": "2d0bdf6f35780914b49865fc60443ae99a5ec62c", "Url": "https://api.github.com/repos/kord2003/Twister", "Date": "2016-02-08T10:33:56Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((httpClient) == null) { createHttpClient(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/2737/buggy-version/extensions.notify.src.main.java.com.dianping.puma.extensions.notify.PaasWeChatService.java", "BodyUseAPI": [], "Fixed commit": "6851724c874774862a35247c10732f0e9b00bc2c", "Url": "https://api.github.com/repos/dianping/puma", "Date": "2016-04-01T07:32:54Z"},
{"Line": "=>418", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(obj.has(\"valueURI\"))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/9072/buggy-version/src.com.cdd.bao.importer.KeywordMapping.java", "BodyUseAPI": [], "Fixed commit": "abd90b48a845b215524f06065a3df24b5b10a880", "Url": "https://api.github.com/repos/cdd/bioassay-template", "Date": "2017-07-11T21:42:53Z"},
{"Line": "=>873", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((display_pos.Y) < 0) { display_pos.Y = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/7354/buggy-version/src.uk.org.rc0.logmygsm.Map.java", "BodyUseAPI": [], "Fixed commit": "6da52b12607aba496668b17d83ee06f9994d0eaf", "Url": "https://api.github.com/repos/rc0/logmygsm", "Date": "2013-11-21T23:28:21Z"},
{"Line": "=>876", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((display_pos.Y) > (Merc28.shift_mask)) { display_pos.Y = Merc28.shift_mask; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/7354/buggy-version/src.uk.org.rc0.logmygsm.Map.java", "BodyUseAPI": [], "Fixed commit": "6da52b12607aba496668b17d83ee06f9994d0eaf", "Url": "https://api.github.com/repos/rc0/logmygsm", "Date": "2013-11-21T23:28:21Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((org.rstudio.core.client.BrowseCap.isWindowsDesktop()) && ((org.rstudio.studio.client.application.Desktop.getFrame().getDisplayDpi()) >= 192)) { com.google.gwt.dom.client.Document.get().getBody().addClassName(\"windows-highdpi\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/518/buggy-version/src.gwt.src.org.rstudio.core.client.BrowseCap.java", "BodyUseAPI": [], "Fixed commit": "01be2556383165778ea61ee538cac75715773381", "Url": "https://api.github.com/repos/rstudio/rstudio", "Date": "2015-04-22T23:45:40Z"},
{"Line": "=>350", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((field.getType().equals(java.lang.Boolean.TYPE)) && (field.getName().startsWith(\"is\"))) { pdName = (field.getName().substring(2, 3).toLowerCase()) + (field.getName().substring(3, field.getName().length())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/5998/buggy-version/elasticsearch-mapping.src.main.java.org.elasticsearch.mapping.FieldsMappingBuilder.java", "BodyUseAPI": ["java.lang.String.toLowerCase()", "java.lang.reflect.Field.getName()", "java.lang.reflect.Field.getName()", "java.lang.String.substring(int,int)", "java.lang.reflect.Field.getName()", "java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "67938797362d947b82e3b39a1459753fd2d8b1cf", "Url": "https://api.github.com/repos/cmourouvin/elasticsearch-mapping-parent", "Date": "2014-04-23T16:39:28Z"},
{"Line": "=>702", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (null != functionMetadata) { if ((functionMetadata.getNextStates().size()) > 1) { return true; }else { return false; } }else { return this.getSuperStateMetadata().hasMultipleStateCandidatesOn(transitionKey); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/4537/buggy-version/Platform.Lifecycle.src.main.java.net.madz.lifecycle.meta.impl.builder.StateMetaBuilderImpl.java", "BodyUseAPI": ["functionMetadata.getNextStates().size()", "net.madz.lifecycle.meta.instance.FunctionMetadata.getNextStates()"], "Fixed commit": "5c21724006e0e9402da90119c4c387bf509ed3c3", "Url": "https://api.github.com/repos/zhongdj/Swordfish", "Date": "2013-11-12T03:49:52Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (straightLength == 4) { test = val & (poker.Hand.RANK_MASK); if (test != 0) { straight |= java.lang.Long.lowestOneBit(test); return poker.Hand.handValue(poker.Hand.Category.STRAIGHT, new poker.CardSet(straight)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/6201/buggy-version/src.poker.Hand.java", "BodyUseAPI": [], "Fixed commit": "a0e6661d9b7d1f843bb3c761536daaf35560a956", "Url": "https://api.github.com/repos/grom358/pokerlib", "Date": "2012-12-06T03:43:06Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (allowedWorlds.get(player.getWorld().getName())) registeredPlayers.add(player);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/5892/buggy-version/src.main.java.de.gmx.endermansend.mountainWind.main.SoundHandler.java", "BodyUseAPI": ["java.util.Collection<org.bukkit.entity.Player>.add(org.bukkit.entity.Player)"], "Fixed commit": "08bfb89653115ae2e53229bdf070562f26bd116f", "Url": "https://api.github.com/repos/JulianSauer/MountainWind", "Date": "2016-04-14T20:40:12Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.hangum.tadpole.commons.libs.core.utils.LicenseValidator.getLicense()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(licenseDAO.isValidate())) { return new java.util.ArrayList<com.hangum.tadpole.commons.dialogs.message.dao.RequestResultDAO>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/7832/buggy-version/com.hangum.tadpole.commons.sql.src.com.hangum.tadpole.engine.query.sql.TadpoleSystem_ExecutedSQL.java", "BodyUseAPI": [], "Fixed commit": "b4b228ca56ac0f80c851edd1161ed21a90a8a168", "Url": "https://api.github.com/repos/jeongjaehong/TadpoleForDBTools", "Date": "2017-09-10T02:15:24Z"},
{"Line": "=>455", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.fastj.net.impl.SnmpUtil.getReqNode(java.lang.Class<T>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (rn == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/5320/buggy-version/src.org.fastj.net.impl.Snmp4jImpl.java", "BodyUseAPI": [], "Fixed commit": "1e9187da293a1d760c7d6970e49d8f8ca5bc7a96", "Url": "https://api.github.com/repos/fastj/fit-ext-default", "Date": "2016-05-23T14:45:42Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.nisovin.magicspells.spells.targeted.DisguiseSpell.manager) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/6485/buggy-version/src.com.nisovin.magicspells.spells.targeted.DisguiseSpell.java", "BodyUseAPI": [], "Fixed commit": "02097284bb95dcf63eb204c1ea523241a435c1b4", "Url": "https://api.github.com/repos/nisovin/MagicSpells", "Date": "2014-04-04T18:33:01Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.xutils.DbManager.findById(java.lang.Class,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (friend == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/1208/buggy-version/app.src.main.java.cn.ahyxy.fastvisit.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "6b10931bb161c83ccf6ab18cba07e954f7fbe93f", "Url": "https://api.github.com/repos/huizai0613/fastvisit", "Date": "2016-05-13T13:22:47Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((monitors.size()) > 0) { long nextMonitor = duration; for (edu.uwo.csd.dcsim.core.Monitor monitor : monitors.values()) { long nextExec = monitor.run(); if (nextExec < nextMonitor) nextMonitor = nextExec; } sendEvent(new edu.uwo.csd.dcsim.core.Event(edu.uwo.csd.dcsim.core.Simulation.SIMULATION_RUN_MONITORS_EVENT, nextMonitor, this, this)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/450/buggy-version/src.edu.uwo.csd.dcsim.core.Simulation.java", "BodyUseAPI": ["java.util.Map<java.lang.String, edu.uwo.csd.dcsim.core.Monitor>.values()"], "Fixed commit": "177a76e58fd1dcd40353d9ddbb50715d095b2ad5", "Url": "https://api.github.com/repos/digs-uwo/dcsim", "Date": "2012-07-12T19:33:09Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.google.firebase.auth.FirebaseAuth.getInstance().getCurrentUser()) != null) sendRegistrationToServer(token);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/2309/buggy-version/app.src.main.java.com.example.pau.busyalert.Services.MyFirebaseInstanceIdService.java", "BodyUseAPI": [], "Fixed commit": "23a740a3359df417f49e2a838eb35179b83fe29b", "Url": "https://api.github.com/repos/pbalaguer19/BusyAlert", "Date": "2017-04-20T14:11:05Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(aboutDAO.getAboutList().isEmpty())) return aboutDAO.getAboutList().get(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/7994/buggy-version/src.beans.AboutBean.java", "BodyUseAPI": ["aboutDAO.getAboutList().get(int)", "dao.AboutDAO.getAboutList()"], "Fixed commit": "03ea79bc9c36857e7291a1df383d6a816c4d1182", "Url": "https://api.github.com/repos/Giymo11/OrderManager", "Date": "2014-04-23T13:33:49Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(aboutDAO.getAboutList().isEmpty())) return aboutDAO.getAboutList().get(2);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/7994/buggy-version/src.beans.AboutBean.java", "BodyUseAPI": ["dao.AboutDAO.getAboutList()", "aboutDAO.getAboutList().get(int)"], "Fixed commit": "03ea79bc9c36857e7291a1df383d6a816c4d1182", "Url": "https://api.github.com/repos/Giymo11/OrderManager", "Date": "2014-04-23T13:33:49Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(aboutDAO.getAboutList().isEmpty())) return aboutDAO.getAboutList().get(1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/7994/buggy-version/src.beans.AboutBean.java", "BodyUseAPI": ["dao.AboutDAO.getAboutList()", "aboutDAO.getAboutList().get(int)"], "Fixed commit": "03ea79bc9c36857e7291a1df383d6a816c4d1182", "Url": "https://api.github.com/repos/Giymo11/OrderManager", "Date": "2014-04-23T13:33:49Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (zipEntry.isDirectory()) { fullName = fullName.replaceFirst(\"^(.*/)?([^/]+)/?$\", \"$2\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/5672/buggy-version/src.org.apache.cocoon.generation.ZipDirectoryGenerator.java", "BodyUseAPI": [], "Fixed commit": "021dd2e2e135d6ee4756251958c354187c0953b6", "Url": "https://api.github.com/repos/hhv/cocooncomponents", "Date": "2016-04-12T15:52:58Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.Cursor.getString(cursor.getColumnIndex(ContactsContract.Data.MIMETYPE))"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (mimeType.equals(ContactsContract.RawContacts.ACCOUNT_TYPE)) { contact.accountName = cursor.getString(cursor.getColumnIndex(ContactsContract.RawContacts.ACCOUNT_NAME)); contact.accountId = cursor.getString(cursor.getColumnIndex(ContactsContract.RawContacts.ACCOUNT_TYPE)); }else if (mimeType.equals(Note.CONTENT_ITEM_TYPE)) { contact.note = cursor.getString(cursor.getColumnIndex(Note.NOTE)); }else if (mimeType.equals(StructuredName.CONTENT_ITEM_TYPE)) { contact.givenName = cursor.getString(cursor.getColumnIndex(StructuredName.GIVEN_NAME)); contact.middleName = cursor.getString(cursor.getColumnIndex(StructuredName.MIDDLE_NAME)); contact.familyName = cursor.getString(cursor.getColumnIndex(StructuredName.FAMILY_NAME)); contact.prefix = cursor.getString(cursor.getColumnIndex(StructuredName.PREFIX)); contact.suffix = cursor.getString(cursor.getColumnIndex(StructuredName.SUFFIX)); }else if (mimeType.equals(Phone.CONTENT_ITEM_TYPE)) { java.lang.String phoneNumber = cursor.getString(cursor.getColumnIndex(Phone.NUMBER)); int type = cursor.getInt(cursor.getColumnIndex(Phone.TYPE)); if (!(android.text.TextUtils.isEmpty(phoneNumber))) { java.lang.String label; switch (type) { case android.provider.ContactsContract.CommonDataKinds.Phone.TYPE_HOME : label = \"home\"; break; case android.provider.ContactsContract.CommonDataKinds.Phone.TYPE_WORK : label = \"work\"; break; case android.provider.ContactsContract.CommonDataKinds.Phone.TYPE_MOBILE : label = \"mobile\"; break; default : label = \"other\"; } contact.phones.add(new com.rt2zz.reactnativecontacts.ContactsProvider.Contact.Item(label, phoneNumber)); } }else if (mimeType.equals(Email.CONTENT_ITEM_TYPE)) { java.lang.String email = cursor.getString(cursor.getColumnIndex(Email.ADDRESS)); int type = cursor.getInt(cursor.getColumnIndex(Email.TYPE)); if (!(android.text.TextUtils.isEmpty(email))) { java.lang.String label; switch (type) { case android.provider.ContactsContract.CommonDataKinds.Email.TYPE_HOME : label = \"home\"; break; case android.provider.ContactsContract.CommonDataKinds.Email.TYPE_WORK : label = \"work\"; break; case android.provider.ContactsContract.CommonDataKinds.Email.TYPE_MOBILE : label = \"mobile\"; break; case android.provider.ContactsContract.CommonDataKinds.Email.TYPE_CUSTOM : if ((cursor.getString(cursor.getColumnIndex(Email.LABEL))) != null) { label = cursor.getString(cursor.getColumnIndex(Email.LABEL)).toLowerCase(); }else { label = \"\"; } break; default : label = \"other\"; } contact.emails.add(new com.rt2zz.reactnativecontacts.ContactsProvider.Contact.Item(label, email)); } }else if (mimeType.equals(Organization.CONTENT_ITEM_TYPE)) { contact.company = cursor.getString(cursor.getColumnIndex(Organization.COMPANY)); contact.jobTitle = cursor.getString(cursor.getColumnIndex(Organization.TITLE)); contact.department = cursor.getString(cursor.getColumnIndex(Organization.DEPARTMENT)); }else if (mimeType.equals(StructuredPostal.CONTENT_ITEM_TYPE)) { contact.postalAddresses.add(new com.rt2zz.reactnativecontacts.ContactsProvider.Contact.PostalAddressItem(cursor)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/4746/buggy-version/android.src.main.java.com.rt2zz.reactnativecontacts.ContactsProvider.java", "BodyUseAPI": ["java.lang.String.equals(Email.CONTENT_ITEM_TYPE)", "java.lang.String.equals(Phone.CONTENT_ITEM_TYPE)", "java.lang.String.equals(Organization.CONTENT_ITEM_TYPE)", "java.lang.String.equals(StructuredPostal.CONTENT_ITEM_TYPE)", "java.lang.String.equals(Note.CONTENT_ITEM_TYPE)", "java.lang.String.equals(StructuredName.CONTENT_ITEM_TYPE)"], "Fixed commit": "597859d85b62658ebf8a1939ac38fe828bf19d2d", "Url": "https://api.github.com/repos/marwanzak/react-native-contacts", "Date": "2017-12-04T21:33:00Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.moquette.spi.ISessionsStore.getSubscription(io.moquette.spi.ISessionsStore.ClientTopicCouple)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (sub == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/2698/buggy-version/broker.src.main.java.io.moquette.spi.impl.subscriptions.SubscriptionsStore.java", "BodyUseAPI": [], "Fixed commit": "dfa75e145fe8a7fc9266826ab5ba0e3288992a6a", "Url": "https://api.github.com/repos/andsel/moquette", "Date": "2016-01-25T21:14:12Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.x) == (that.x)) return java.lang.Double.NEGATIVE_INFINITY;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/92/buggy-version/src.Point.java", "BodyUseAPI": [], "Fixed commit": "25d0e4737b8810137cb1fa78a563e56bdb06cef0", "Url": "https://api.github.com/repos/pdmoore/coursera-2017", "Date": "2017-11-20T04:17:01Z"},
{"Line": "=>356", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((filters.size()) < (filtersItemList.size())) { java.util.List<android.view.MenuItem> temp = new java.util.ArrayList(filters.size()); for (android.view.MenuItem menuItem : filtersItemList) { io.mapsquare.osmcontributor.ui.utils.PoiTypeFilter poiTypeFilter = new io.mapsquare.osmcontributor.ui.utils.PoiTypeFilter(\"\", ((long) (menuItem.getItemId())), \"\", true); if (!(filters.contains(poiTypeFilter))) { menu.removeItem(poiTypeFilter.getPoiTypeId().intValue()); }else { temp.add(menuItem); } } filtersItemList.clear(); filtersItemList.addAll(temp); temp.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/3080/buggy-version/src.main.java.io.mapsquare.osmcontributor.ui.activities.MapActivity.java", "BodyUseAPI": ["java.util.List<android.view.MenuItem>.addAll(java.util.List<android.view.MenuItem>)", "java.util.List<io.mapsquare.osmcontributor.ui.utils.PoiTypeFilter>.contains(io.mapsquare.osmcontributor.ui.utils.PoiTypeFilter)", "java.util.List<android.view.MenuItem>.clear()", "java.util.List<io.mapsquare.osmcontributor.ui.utils.PoiTypeFilter>.size()"], "Fixed commit": "03cdc8701a78ef47e7e1d9502396f5417b1eeadf", "Url": "https://api.github.com/repos/jawg/osm-contributor", "Date": "2016-06-27T07:33:29Z"},
{"Line": "=>347", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.support.design.widget.NavigationView.getMenu()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((menu.findItem(poiTypeFilter.getPoiTypeId().intValue())) == null) { filtersItemList.add(menu.add(Menu.NONE, poiTypeFilter.getPoiTypeId().intValue(), 0, poiTypeFilter.getPoiTypeName()).setChecked(poiTypeFilter.isActive()).setIcon(bitmapHandler.getDrawable(poiTypeFilter.getPoiTypeIconName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/3080/buggy-version/src.main.java.io.mapsquare.osmcontributor.ui.activities.MapActivity.java", "BodyUseAPI": ["io.mapsquare.osmcontributor.ui.utils.PoiTypeFilter.getPoiTypeIconName()", "io.mapsquare.osmcontributor.ui.utils.PoiTypeFilter.getPoiTypeName()", "android.view.Menu.add(Menu.NONE,poiTypeFilter.getPoiTypeId().intValue(),int,poiTypeFilter.getPoiTypeName())", "menu.add(Menu.NONE, poiTypeFilter.getPoiTypeId().intValue(), 0, poiTypeFilter.getPoiTypeName()).setChecked(poiTypeFilter.isActive())", "menu.add(Menu.NONE, poiTypeFilter.getPoiTypeId().intValue(), 0, poiTypeFilter.getPoiTypeName()).setChecked(poiTypeFilter.isActive()).setIcon(bitmapHandler.getDrawable(poiTypeFilter.getPoiTypeIconName()))", "io.mapsquare.osmcontributor.ui.utils.PoiTypeFilter.isActive()", "poiTypeFilter.getPoiTypeId().intValue()", "io.mapsquare.osmcontributor.ui.utils.BitmapHandler.getDrawable(poiTypeFilter.getPoiTypeIconName())", "java.util.List<android.view.MenuItem>.add(menu.add(Menu.NONE, poiTypeFilter.getPoiTypeId().intValue(), 0, poiTypeFilter.getPoiTypeName()).setChecked(poiTypeFilter.isActive()).setIcon(bitmapHandler.getDrawable(poiTypeFilter.getPoiTypeIconName())))", "io.mapsquare.osmcontributor.ui.utils.PoiTypeFilter.getPoiTypeId()"], "Fixed commit": "03cdc8701a78ef47e7e1d9502396f5417b1eeadf", "Url": "https://api.github.com/repos/jawg/osm-contributor", "Date": "2016-06-27T07:33:29Z"},
{"Line": "=>1223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((addPoiFloatingMenu) != null) { addPoiFloatingMenu.removeAllMenuButtons(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/3080/buggy-version/src.main.java.io.mapsquare.osmcontributor.ui.fragments.MapFragment.java", "BodyUseAPI": [], "Fixed commit": "03cdc8701a78ef47e7e1d9502396f5417b1eeadf", "Url": "https://api.github.com/repos/jawg/osm-contributor", "Date": "2016-06-27T07:33:29Z"},
{"Line": "=>669", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["response.body().getAnswers().get(0).getActions().get(1).getType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (\"anchor\".equals(isHavingType)) { counter = responseActionSize; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/636/buggy-version/app.src.main.java.org.fossasia.susi.ai.activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "b8d5c4523ea2e992741f45efb8c8103279cccb87", "Url": "https://api.github.com/repos/samsruti/susi_android", "Date": "2016-12-11T15:14:22Z"},
{"Line": "=>677", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((\"anchor\".equals(isHavingType)) && (!(ismap))) { addNewMessage(anchor, false, false, false, isSearchResult, datumList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/636/buggy-version/app.src.main.java.org.fossasia.susi.ai.activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "b8d5c4523ea2e992741f45efb8c8103279cccb87", "Url": "https://api.github.com/repos/samsruti/susi_android", "Date": "2016-12-11T15:14:22Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.patil.quickhac.ScrapeService.getGradeChanges(com.quickhac.common.data.Course[],com.quickhac.common.data.Course[])"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((gradeChanges.size()) > 0) { makeGradeChangeNotification(gradeChanges, user, id); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/8804/buggy-version/src.com.patil.quickhac.ScrapeService.java", "BodyUseAPI": ["com.patil.quickhac.ScrapeService.makeGradeChangeNotification(java.util.ArrayList<com.patil.quickhac.GradeChange>,java.lang.String,java.lang.String)"], "Fixed commit": "b50c13bf1e7d54b78c6fa0c75c6418fc387ad182", "Url": "https://api.github.com/repos/quickhac/qhac-android", "Date": "2014-05-28T15:07:32Z"},
{"Line": "=>371", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.activeWand) == null) && (activeWand == null)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/2580/buggy-version/src.main.java.com.elmakers.mine.bukkit.magic.Mage.java", "BodyUseAPI": [], "Fixed commit": "f8f6bf5fe20389c110be27dd2e002647c4f5b102", "Url": "https://api.github.com/repos/elBukkit/MagicPlugin", "Date": "2015-09-28T18:16:51Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((className) == null) || (org.codehaus.groovy.grails.web.errors.GrailsWrappedRuntimeException.UNKNOWN.equals(className))) { className = codeAware.getFileName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/5224/buggy-version/grails-web.src.main.groovy.org.codehaus.groovy.grails.web.errors.GrailsWrappedRuntimeException.java", "BodyUseAPI": [], "Fixed commit": "fbb46af1aac77dd215eae7a1625f830fc2b1cb29", "Url": "https://api.github.com/repos/bond-/grails-core", "Date": "2012-04-27T08:28:24Z"},
{"Line": "=>647", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (sourcePath.endsWith(\"*\")) { sourcePath = sourcePath.substring(0, ((sourcePath.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/7236/buggy-version/hadoop-hdfs-project.hadoop-hdfs.src.main.java.org.apache.hadoop.hdfs.DFSClient.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "6fcb41ada36c44c736fad8158c28d80d4575b579", "Url": "https://api.github.com/repos/zhonghaihua/AIHadoop-2.5.1", "Date": "2016-12-28T03:12:44Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["retrofit2.Response<com.hbbsolution.owner.more.duy_nguyen.model.RechargeOnlineFiResponse>.body()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (rechargeOnlineFiResponse.getStatus()) { rechargeOnlineFiView.fiSuccess(rechargeOnlineFiResponse.getData().getBill(), rechargeOnlineFiResponse.getData().getKey()); }else { rechargeOnlineFiView.fiFail(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/3835/buggy-version/app.src.main.java.com.hbbsolution.owner.more.duy_nguyen.presenter.RechargeOnlineFiPresenter.java", "BodyUseAPI": ["com.hbbsolution.owner.more.duy_nguyen.model.RechargeOnlineFiResponse.getData()", "rechargeOnlineFiResponse.getData().getBill()", "com.hbbsolution.owner.more.duy_nguyen.RechargeOnlineFiView.fiSuccess(rechargeOnlineFiResponse.getData().getBill(),rechargeOnlineFiResponse.getData().getKey())", "rechargeOnlineFiResponse.getData().getKey()", "com.hbbsolution.owner.more.duy_nguyen.model.RechargeOnlineFiResponse.getData()"], "Fixed commit": "5d5b925f9d9608b6808f77cfd865710bfe186af5", "Url": "https://api.github.com/repos/thanhduy26091995/Owner", "Date": "2017-07-28T07:07:46Z"},
{"Line": "=>367", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.deviceType) == null) { return defaultConfiguration; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/1196/buggy-version/osgp-domain-core.src.main.java.com.alliander.osgp.domain.core.entities.Device.java", "BodyUseAPI": [], "Fixed commit": "f85b21b322720ba517abdd9b084d9fc8030ac55d", "Url": "https://api.github.com/repos/OSGP/Platform", "Date": "2015-10-28T13:54:01Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ctx.isContradiction()) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/5938/buggy-version/src.peers.gov.nasa.jpf.vm.JPF_java_lang_System.java", "BodyUseAPI": [], "Fixed commit": "118c64f3d0a9fdec9a996df0d7d756d7be6611b3", "Url": "https://api.github.com/repos/meinicke/VarexJ", "Date": "2015-01-07T14:07:34Z"},
{"Line": "=>1211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ctx.isContradiction()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/5938/buggy-version/src.main.gov.nasa.jpf.vm.ElementInfo.java", "BodyUseAPI": [], "Fixed commit": "118c64f3d0a9fdec9a996df0d7d756d7be6611b3", "Url": "https://api.github.com/repos/meinicke/VarexJ", "Date": "2015-01-07T14:07:34Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(getIntent().getExtras().getString(AppConstants.PROFILE_KEY).equals(AppConstants.MY_PROFILE))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/1975/buggy-version/app.src.main.java.com.hadippa.activities.ProfileActivity.java", "BodyUseAPI": [], "Fixed commit": "3a9afa13b6f90df8f3bf3145503e5bf930502c61", "Url": "https://api.github.com/repos/PalakSDarji/hdp", "Date": "2016-12-23T20:33:14Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((keyNumberPart) != 0) { return (keyNumberPart) + (keyCharPart); }else { return (keyNumberPart) + \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/1930/buggy-version/contextproject-ms3.src.main.java.contextproject.models.Key.java", "BodyUseAPI": [], "Fixed commit": "63289088c65ec01cf07f73a6cc346fd9b1d9c9dc", "Url": "https://api.github.com/repos/daveystruijk/contextproject-ms3", "Date": "2015-04-29T15:53:36Z"},
{"Line": "=>509", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.openapi.wm.impl.ToolWindowManagerImpl.getInfo(bean.id)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((!(info.isSplit())) && (bean.secondary)) && (!(info.wasRead()))) { toolWindow.setSplitMode(bean.secondary, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/83/buggy-version/platform.platform-impl.src.com.intellij.openapi.wm.impl.ToolWindowManagerImpl.java", "BodyUseAPI": ["com.intellij.openapi.wm.impl.ToolWindowImpl.setSplitMode(bean.secondary,<nulltype>)"], "Fixed commit": "bbf82bcf557fef3f2395519c2e333866ede2ce05", "Url": "https://api.github.com/repos/JetBrains/intellij-community", "Date": "2013-03-04T18:27:45Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["document.select(\"a[href*=allMunicipality]\").first()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (linkToDetailWithAllMunicipalities == null) { linkToDetailWithAllMunicipalities = document.select(\"a[href*=urbanNeighbourhoods]\").first(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/3125/buggy-version/app.jobs.KrajeScraperJob.java", "BodyUseAPI": [], "Fixed commit": "d29193186030c49c4efde1c1762e5728a4945a9e", "Url": "https://api.github.com/repos/michalbcz/kontaktynaurady", "Date": "2012-08-23T14:01:40Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mDebugFragment) == null) { mDebugFragment = new com.att.team.keeper.fragments.DebugFragment(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/4048/buggy-version/android.src.com.att.team.keeper.activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "0fc313e08356ec1e4d84b40c7ac8f5bd363330dc", "Url": "https://api.github.com/repos/ini2005/teamKeeper", "Date": "2014-03-20T19:16:23Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pn.getProgress()) == 1.0) { stage.hide(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/3438/buggy-version/Oasis.OasisPreloader.src.preloader.OasisPreloader.java", "BodyUseAPI": [], "Fixed commit": "cd086661b58f9210e456bbd4bb6ef53c6c33a263", "Url": "https://api.github.com/repos/OshanIvantha/oasis-hms", "Date": "2017-06-13T05:54:29Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.os.Build.VERSION.SDK_INT) > 15) { v.findViewById(R.id.folder_icon).setBackgroundDrawable(drawable); }else { v.findViewById(R.id.folder_icon).setBackground(drawable); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/4349/buggy-version/src.com.beerbong.zipinst.ui.widget.FolderPicker.java", "BodyUseAPI": [], "Fixed commit": "f8fce87a74e2975f68f9c850285a541748a0448b", "Url": "https://api.github.com/repos/beerbong/com_beerbong_zipinst", "Date": "2014-02-15T16:57:01Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.os.Build.VERSION.SDK_INT) > 15) { noti = builder.build(); }else { noti = builder.getNotification(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/4349/buggy-version/src.com.beerbong.zipinst.core.plugins.update.RomUpdater.java", "BodyUseAPI": [], "Fixed commit": "f8fce87a74e2975f68f9c850285a541748a0448b", "Url": "https://api.github.com/repos/beerbong/com_beerbong_zipinst", "Date": "2014-02-15T16:57:01Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.os.Build.VERSION.SDK_INT) > 15) { v.findViewById(R.id.folder_icon).setBackgroundDrawable(cloud.getDrawable()); }else { v.findViewById(R.id.folder_icon).setBackground(cloud.getDrawable()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/4349/buggy-version/src.com.beerbong.zipinst.ui.widget.CloudPicker.java", "BodyUseAPI": [], "Fixed commit": "f8fce87a74e2975f68f9c850285a541748a0448b", "Url": "https://api.github.com/repos/beerbong/com_beerbong_zipinst", "Date": "2014-02-15T16:57:01Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ch.vorburger.xbindings.PropertyAccessTrackerUtil.ThreadLocal.get()) != null) cn.setChangeListener(ch.vorburger.xbindings.PropertyAccessTrackerUtil.ThreadLocal.get());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/6392/buggy-version/ch.vorburger.xbindings.src.ch.vorburger.xbindings.PropertyAccessTrackerUtil.java", "BodyUseAPI": ["java.lang.ThreadLocal<ch.vorburger.xbindings.PropertyChangeListener>.get()", "ch.vorburger.xbindings.PropertyChangeNotifier.setChangeListener(ch.vorburger.xbindings.PropertyAccessTrackerUtil.ThreadLocal.get())"], "Fixed commit": "66e01ed34306c9b7e9c1c63e7422fa0cf2990883", "Url": "https://api.github.com/repos/vorburger/xtext-sandbox", "Date": "2012-12-02T15:00:26Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((camera != null) && ((cameraDevice) != null)) { cameraDevice.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/4973/buggy-version/app.src.main.java.com.gwozdz2gmail.michal.myapplication.Camera2API.java", "BodyUseAPI": [], "Fixed commit": "e1e261ec02e6d381c3c37c447f9bfe259781c321", "Url": "https://api.github.com/repos/MichalGwozdz/ProjectPAW", "Date": "2017-04-21T14:10:15Z"},
{"Line": "=>1017", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (result.equals(\"Error\")) { instantCalcView.setText((\" \" + result)); result = \"\"; }else { instantCalcView.setText((\" \" + result)); calculationView.setText((\" \" + \"Ans\")); com.kumailn.calculator.MainActivity.displayCalculation = \" \" + \"Ans\"; com.kumailn.calculator.MainActivity.currentCalculation = result; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/4872/buggy-version/app.src.main.java.com.kumailn.calculator.MainActivity.java", "BodyUseAPI": ["android.widget.TextView.setText(java.lang.String)", "android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "073c9738110a519babb4fdcb7a796afa90cf8f87", "Url": "https://api.github.com/repos/kumailn/androidScientificCalculator", "Date": "2017-06-18T10:27:37Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((exec[i]) == null) { exec[i] = java.util.concurrent.Executors.newSingleThreadExecutor(); testRunner[i] = new org.jperf.SingleTestRunner(config.testFactory.create()); exec[i].execute(testRunner[i]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/1743/buggy-version/src.main.java.org.jperf.JPerf.java", "BodyUseAPI": ["java.util.concurrent.ExecutorService.execute(testRunner[i])"], "Fixed commit": "dccdfa718386589b05b668265ab4cbbe1d3f15d9", "Url": "https://api.github.com/repos/andygrove/jperf", "Date": "2014-11-10T05:26:14Z"},
{"Line": "=>1480", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(f.equals(timeRef))) { main.append(\"\\\\n\\' % (\"); if (writingVariables.containsKey(f)) { for (java.lang.String writingVar : writingVariables.get(f)) { main.append(writingVar); } } main.append(\"))\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/252/buggy-version/src.main.java.org.neuroml.export.neuron.NeuronWriter.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>>.containsKey(java.lang.String)", "java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>>.get(java.lang.String)"], "Fixed commit": "cca87794e47d149d041d04ad7ef98d9adf27f771", "Url": "https://api.github.com/repos/NeuroML/org.neuroml.export", "Date": "2017-08-05T15:39:47Z"},
{"Line": "=>868", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isVerticalFadingEdgeEnabled()) { setVerticalScrollBarEnabled(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/8463/buggy-version/src.cn.trinea.android.common.view.DropDownListView.java", "BodyUseAPI": [], "Fixed commit": "6b207eb57072fb3ab6aa7c1b5bfe093859f49f7a", "Url": "https://api.github.com/repos/Trinea/AndroidCommon", "Date": "2013-09-26T06:52:04Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (enableSwipeBack()) { return attachToSwipeBack(mFragmentView); }else { return mFragmentView; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/5363/buggy-version/TastyLattle.TastyLattleLib.src.main.java.com.desperado.tastylattlelib.base.BaseFragment.java", "BodyUseAPI": [], "Fixed commit": "d2302fa2735dcb58bf558a934a9e90da4559b3e4", "Url": "https://api.github.com/repos/foreverxiongtao/tastylattle", "Date": "2016-09-19T11:25:45Z"},
{"Line": "=>368", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((j == ((line.length) - 1)) && (statementType.equals(bs))) { dataToAdd.add(\"Assets\"); dataToAdd.add(\"Current Assets\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/6749/buggy-version/src.dev.stockanalyzer.pulldata.FinancialsExtractor.java", "BodyUseAPI": [], "Fixed commit": "eaaf9c91e1d46fdb4ef97a4771a396c72703bdeb", "Url": "https://api.github.com/repos/asarow/Yahoo-Finance-data-extractor", "Date": "2015-08-01T07:26:48Z"},
{"Line": "=>471", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.w3c.dom.NodeList.item(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (\"return\".equals(node.getNodeName().toLowerCase())) { behaviour.setReturnStatement(parseReturn(node.getChildNodes())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/4943/buggy-version/InsenseCodeGenerator.src.Generator.XmlParser.java", "BodyUseAPI": ["Units.Behaviour.setReturnStatement(java.lang.String)", "org.w3c.dom.Node.getChildNodes()", "Generator.XmlParser.parseReturn(org.w3c.dom.NodeList)"], "Fixed commit": "69bea7a3e85335a458a8d87e2ddb67764c31ecb4", "Url": "https://api.github.com/repos/avasilsg/InsenseGenerator", "Date": "2014-08-16T01:22:25Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mulitpleItem) { disp.stock = (item.amount) / 3; }else { disp.stock = item.amount; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/1584/buggy-version/app.logic.ApplicationLogic.java", "BodyUseAPI": [], "Fixed commit": "821412079bdf5867d9d093a801bcfb468f60b889", "Url": "https://api.github.com/repos/barthnet/ibsys2", "Date": "2013-06-29T11:56:51Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getTranslationY()) != 0) this.show();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/3708/buggy-version/QuickLyric.src.main.java.be.geecko.QuickLyric.view.RefreshIcon.java", "BodyUseAPI": [], "Fixed commit": "a37acf71f84c9c93bbf668ddde27aea1c11684eb", "Url": "https://api.github.com/repos/QuickLyric/QuickLyric", "Date": "2015-02-04T15:11:51Z"},
{"Line": "=>401", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isLogin()) { getNewsLinkfromServer(); }else { login(context, new eoc.studio.voicecard.facebook.FacebookManager.LoginListener()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/7493/buggy-version/src.eoc.studio.voicecard.facebook.FacebookManager.java", "BodyUseAPI": [], "Fixed commit": "66f3b30ac0ea265fadcedc4584630917a3317fa4", "Url": "https://api.github.com/repos/eoc-studio/VoiceCard", "Date": "2014-03-08T18:22:37Z"},
{"Line": "=>450", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((defaultGlobalModule) != null) { releaseVersion = defaultGlobalModule.getReleaseVersion(); nextVersion = defaultGlobalModule.getNextDevelopmentVersion(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/8238/buggy-version/src.main.java.org.jfrog.hudson.release.ReleaseAction.java", "BodyUseAPI": [], "Fixed commit": "ba2c25286d40c297c7596db3c868777668e1442c", "Url": "https://api.github.com/repos/jfrog/jenkins-artifactory-plugin", "Date": "2017-09-08T00:35:53Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (monitor.isCanceled()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/3260/buggy-version/org.dsource.ddt.ide.core.src.mmrnmhrm.core.projectmodel.SearchAndAddCompilersOnPathTask.java", "BodyUseAPI": [], "Fixed commit": "3c1d53db7f7709f155578e752eab9d9eb5445e58", "Url": "https://api.github.com/repos/bruno-medeiros/DDT", "Date": "2014-03-06T12:25:21Z"},
{"Line": "=>398", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pcl.lc.module.stargate.tile.TileEntityStargateBase.getLocation()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (hostLocation.equals(remoteLocation)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/9164/buggy-version/src.main.java.pcl.lc.module.stargate.tile.TileEntityStargateBase.java", "BodyUseAPI": [], "Fixed commit": "bd55eacbd1fcb9879546ea3409660228aff3699e", "Url": "https://api.github.com/repos/PC-Logix/LanteaCraft", "Date": "2014-06-30T08:51:55Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((kbArticle.getKbFolderId()) == (com.liferay.knowledge.base.constants.KBFolderConstants.DEFAULT_PARENT_FOLDER_ID)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/8134/buggy-version/modules.apps.knowledge-base.knowledge-base-web.src.main.java.com.liferay.knowledge.base.web.internal.selector.KBFolderKBArticleSelector.java", "BodyUseAPI": [], "Fixed commit": "c0045f1731c1a48b2078967f9bb887aff3c5b8f5", "Url": "https://api.github.com/repos/arthurchan35/liferay-portal", "Date": "2017-03-29T07:52:07Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.shc.silenceengine.core.SilenceEngine.getPlatform()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((platform == (SilenceEngine.Platform.WINDOWS_32)) || (platform == (SilenceEngine.Platform.WINDOWS_64))) return java.net.URLDecoder.decode(urlString.substring(((urlString.indexOf('/')) + 1)), \"UTF-8\"); else return \"/\" + (java.net.URLDecoder.decode(urlString.substring(((urlString.indexOf('/')) + 1)), \"UTF-8\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/3346/buggy-version/src.main.java.com.shc.silenceengine.backend.lwjgl3.io.Lwjgl3ResourceFilePath.java", "BodyUseAPI": [], "Fixed commit": "48caffdf00133631df3337c3b04ad38d8ad6c0af", "Url": "https://api.github.com/repos/sriharshachilakapati/SilenceEngine", "Date": "2016-03-14T12:55:10Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["robot.ultrasonicSensor.getUltrasonicLevel()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((distance == 0) || (distance > 200)) { return getUltrasonicLevel(); }else { return distance; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/1436/buggy-version/TeamCode.src.main.java.org.firstinspires.ftc.teamcode.Robot.RobotUtilities.java", "BodyUseAPI": [], "Fixed commit": "82f25e1dc4ac03205a7e88872ec30186216cb164", "Url": "https://api.github.com/repos/ykarim/FTC-PioTech-VelocityVortex", "Date": "2017-02-16T03:16:36Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.Double.isNaN(tmp)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/5813/buggy-version/h2o-algos.src.main.java.hex.pca.PCAModel.java", "BodyUseAPI": [], "Fixed commit": "b4f82be57c4f8b6e00be095a08eb6fd34f40dbed", "Url": "https://api.github.com/repos/h2oai/h2o-3", "Date": "2015-07-01T20:37:47Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["nl.qbusict.cupboard.CupboardFactory.cupboard().withDatabase(org.korjus.news.MainActivity.db).get(java.lang.Class,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (null != newsItem) { org.korjus.news.OldNews oldNews = new org.korjus.news.OldNews(newsItem.getId()); DatabaseBlockedHelper.itemsInDb = nl.qbusict.cupboard.CupboardFactory.cupboard().withDatabase(org.korjus.news.MainActivity.dbOld).put(oldNews); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/2902/buggy-version/app.src.main.java.org.korjus.news.MainActivity.java", "BodyUseAPI": ["org.korjus.news.NewsItem.getId()"], "Fixed commit": "80d7df519afe9a745d30c169343379889258d5a8", "Url": "https://api.github.com/repos/korjusk/news", "Date": "2016-02-08T18:09:26Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((inputElements.length) == 0) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/3684/buggy-version/src.lib.listProcessor.InputList.java", "BodyUseAPI": [], "Fixed commit": "2a279215702bdf194d507936620e92ffe92e1882", "Url": "https://api.github.com/repos/nirlendu/java-list-processor", "Date": "2016-09-22T13:13:32Z"},
{"Line": "=>1576", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((block.cx) == 0) || ((block.cy) == 0)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/4636/buggy-version/src.main.java.com.jpmorrsn.graphics.DrawFBP.java", "BodyUseAPI": [], "Fixed commit": "09c9e2b14ec29b311cc5f35472af27e54552e13a", "Url": "https://api.github.com/repos/jpaulm/drawfbp", "Date": "2014-09-20T20:49:33Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newState == (org.cryptocoinpartners.schema.OrderState.FILLED)) { log.info(\"order filled\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/2480/buggy-version/src.main.java.org.cryptocoinpartners.module.BaseOrderService.java", "BodyUseAPI": [], "Fixed commit": "a37bbd045dd6401163f35688046edcc6d28bd74c", "Url": "https://api.github.com/repos/timolson/cointrader", "Date": "2014-12-07T18:43:55Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (datasrc == null) { throw new java.lang.NullPointerException(\"DataSource is null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/4768/buggy-version/blueprint-sdk.src.blueprint.sdk.util.jdbc.AbstractJdbcQueue.java", "BodyUseAPI": [], "Fixed commit": "3e2ce01a35de6a7973fc161f0a5be68f8828f582", "Url": "https://api.github.com/repos/lempel/blueprint-sdk", "Date": "2013-08-27T05:18:02Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((request.getRow_num()) < 1) { throw new java.lang.IllegalArgumentException(\"Position row cannot be less then 1.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/4073/buggy-version/src.main.java.org.smal2.service.computer.ComputerService.java", "BodyUseAPI": [], "Fixed commit": "049e811ce27e74d8751052b63e61c681636b3688", "Url": "https://api.github.com/repos/campisano/Smal2", "Date": "2014-10-13T16:35:52Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((request.getColumn_num()) < 1) { throw new java.lang.IllegalArgumentException(\"Position column cannot be less then 1.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/4073/buggy-version/src.main.java.org.smal2.service.computer.ComputerService.java", "BodyUseAPI": [], "Fixed commit": "049e811ce27e74d8751052b63e61c681636b3688", "Url": "https://api.github.com/repos/campisano/Smal2", "Date": "2014-10-13T16:35:52Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.efaps.esjp.sales.Costing.getCosting4Currency(org.efaps.admin.event.Parameter,_bean.getDate(),filter.getObject(),_bean.getTransInst())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (costing != null) { ((org.efaps.esjp.sales.report.ProductsTransactionResultReport_Base.CostDataBean) (_bean)).setAverage(costing.getResult()).setCost(costing.getCost()).setCurrency(org.efaps.esjp.erp.CurrencyInst.get(filter.getObject()).getSymbol()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/8736/buggy-version/src.main.efaps.ESJP.org.efaps.esjp.sales.report.ProductsTransactionResultReport_Base.java", "BodyUseAPI": ["org.efaps.esjp.sales.report.DataBean.setAverage(costing.getResult())", "((org.efaps.esjp.sales.report.ProductsTransactionResultReport_Base.CostDataBean) (_bean)).setAverage(costing.getResult()).setCost(costing.getCost()).setCurrency(org.efaps.esjp.erp.CurrencyInst.get(filter.getObject()).getSymbol())", "org.efaps.esjp.sales.Costing_Base.CostingInfo.getCost()", "org.efaps.esjp.sales.Costing_Base.CostingInfo.getResult()", "org.efaps.esjp.sales.report.ProductsTransactionResultReport_Base.CostDataBean.setCost(costing.getCost())"], "Fixed commit": "8404d0b018442f9338ac6d24579c861ab5a04a79", "Url": "https://api.github.com/repos/eFaps/eFapsApp-Sales", "Date": "2015-05-27T20:56:24Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mMaxLength) > 0) { mWrapper.setCounterMaxLength(mMaxLength); android.text.InputFilter[] filters = new android.text.InputFilter[1]; filters[0] = new android.text.InputFilter.LengthFilter(mMaxLength); mEditor.setFilters(filters); }else { mEditor.setFilters(new android.text.InputFilter[]{ }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/6221/buggy-version/app.src.main.java.com.development.jaba.view.EditTextEx.java", "BodyUseAPI": [], "Fixed commit": "e07f94cd226b87b8be01157443b03e226f82a8e5", "Url": "https://api.github.com/repos/jcbaar/MoneyPit", "Date": "2016-12-03T15:27:34Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.hasTaskItem(\"english\")) { new com.piza.zhiyu.DeployEnglishAssistantItem(this, true).work(); }else if (this.hasTaskItem(\"java\")) { new com.piza.zhiyu.DeployPocketItem(this, false).work(); new com.piza.zhiyu.DeployAdminItem(this, false).work(); new com.piza.zhiyu.DeployFestivalTaskItem(this, true).work(); }else { this.sendChat((\"help:\\n code generate code\\n deploy deploy project\" + (((((((\"\\n html deploy wechat html project\" + \"\\n admin deploy admin project\") + \"\\n festival deploy festival project\") + \"\\n pocket deploy pocket project\") + \"\\n java deploy pocket,admin,festival one by one project\") + \"\\n skipBuild skip build\") + \"\\n skipPull skip pull code \") + \"\\n deployAll deploy admin & portal \"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/3178/buggy-version/robot-zhiyu.src.main.java.com.piza.zhiyu.ZhiyuTask.java", "BodyUseAPI": [], "Fixed commit": "fab29b08661cc21dd25474531e50517e08720764", "Url": "https://api.github.com/repos/piza/robotbase", "Date": "2017-03-05T14:44:34Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentBullets) < (MAX_BULLET_CAPACITY)) { com.overwatch2d.game.Hero.reloadSound.play(); isReloading = true; com.badlogic.gdx.utils.Timer.schedule(new com.badlogic.gdx.utils.Timer.Task() { @java.lang.Override public void run() { replenishAmmo(); isReloading = false; } }, TIME_TO_RELOAD); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/5539/buggy-version/core.src.com.overwatch2d.game.Hero.java", "BodyUseAPI": [], "Fixed commit": "eda3904dfcd3b3f54e6c351ed2655cf539397713", "Url": "https://api.github.com/repos/peterrupa/overwatch2d", "Date": "2016-11-19T10:20:51Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tester) { java.lang.System.err.println(\"Member could not be found\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/2119/buggy-version/src.RentItem.java", "BodyUseAPI": [], "Fixed commit": "445a0d1fb8ec89133df624f7648413bc8f565f36", "Url": "https://api.github.com/repos/thivyanWhy/cdUni", "Date": "2015-03-21T22:27:46Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wltea.analyzer.dic.Hit.getMatchedDictSegment()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (matchedDictSegment != null) { java.util.List<java.lang.Integer> corpusTypes = matchedDictSegment.getCorpusTypes(); newLexeme.setCorpusTypes(corpusTypes); context.addLexeme(newLexeme); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/2548/buggy-version/src.main.java.org.wltea.analyzer.core.CJKSegmenter.java", "BodyUseAPI": ["org.wltea.analyzer.dic.DictSegment.getCorpusTypes()"], "Fixed commit": "ef98b2801ab21ff09264f32df6b5c631d69b7803", "Url": "https://api.github.com/repos/jasstionzyf/IK_Analyzer", "Date": "2016-10-11T08:27:20Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (((msg != null) && (tag != null)) && ((com.taobao.weex.utils.WXLogUtils.sLogWatcher) != null)) { com.taobao.weex.utils.WXLogUtils.sLogWatcher.onLog(level.getName(), tag, msg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/8458/buggy-version/android.sdk.src.main.java.com.taobao.weex.utils.WXLogUtils.java", "BodyUseAPI": ["com.taobao.weex.utils.WXLogUtils.LogWatcher.onLog(level.getName(),java.lang.String,java.lang.String)"], "Fixed commit": "8a19b9beeeba0d83345bb86b946183eccf5b59a5", "Url": "https://api.github.com/repos/apache/incubator-weex", "Date": "2017-11-09T03:40:52Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["CompositeTaskGraph.closest_scope(CompositeTaskStep,this.scope_output_map.get(var))"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(closest.contains(step))) { addVertex(closest); addEdge(closest, step); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/4901/buggy-version/src.CompositeTaskGraph.java", "BodyUseAPI": ["CompositeTaskGraph.addVertex(CompositeTaskScope)", "CompositeTaskGraph.addEdge(CompositeTaskScope,CompositeTaskStep)"], "Fixed commit": "7e1ce0454f5f45df14c05d8329ea7173af2aae44", "Url": "https://api.github.com/repos/broadinstitute/wdl", "Date": "2012-08-28T17:39:51Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (inst != null) inst.registerListener(new com.orientechnologies.orient.core.OOrientListenerAbstract() { @java.lang.Override public void onStartup() { if ((com.orientechnologies.orient.core.db.ODatabaseRecordThreadLocal.INSTANCE) == null) com.orientechnologies.orient.core.db.ODatabaseRecordThreadLocal.INSTANCE = new com.orientechnologies.orient.core.db.ODatabaseRecordThreadLocal(); } @java.lang.Override public void onShutdown() { com.orientechnologies.orient.core.db.ODatabaseRecordThreadLocal.INSTANCE = null; } });", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/5066/buggy-version/core.src.main.java.com.orientechnologies.orient.core.db.ODatabaseRecordThreadLocal.java", "BodyUseAPI": [], "Fixed commit": "24970bf38e30032f08f052100395c6b337680b15", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2015-03-30T10:11:16Z"},
{"Line": "=>1422", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.getGameType()) != null) && (!(this.getGameType().equals(\"null\")))) { txtGameType.setText(this.getGameType()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/216/buggy-version/src.aurora.V1.core.Game.java", "BodyUseAPI": [], "Fixed commit": "686813e386f30ef77e3368c5796fad282aa6e0d1", "Url": "https://api.github.com/repos/sguergachi/AuroraGameHub", "Date": "2013-04-15T03:09:34Z"},
{"Line": "=>284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mitzi.IMove.getFromSquare()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((active_color) == (PieceHelper.WHITE)) && (src == 51)) { newBoard.castling[0] = -1; newBoard.castling[1] = -1; }else if (((active_color) == (PieceHelper.BLACK)) && (src == 58)) { newBoard.castling[2] = -1; newBoard.castling[3] = -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/4204/buggy-version/src.mitzi.NaiveBoard.java", "BodyUseAPI": [], "Fixed commit": "afc9b25ad0f0b1eb40298953e6f9eab7ebd138f7", "Url": "https://api.github.com/repos/lew/mitzi", "Date": "2013-10-14T17:53:32Z"},
{"Line": "=>764", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.entity.Player.getName()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((name.length()) > 15) name = name.substring(0, 15);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/1831/buggy-version/src.net.TheDgtl.Tombstone.Tombstone.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "ab58170c539799ab6f6e3e40eaafc06bbaf3ad76", "Url": "https://api.github.com/repos/TheDgtl/Tombstone", "Date": "2011-04-23T05:28:43Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((type) == (com.github.kubatatami.judonetworking.AsyncResultSender.Type.RESULT)) || ((type) == (com.github.kubatatami.judonetworking.AsyncResultSender.Type.ERROR))) { request.done(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/256/buggy-version/base.src.com.github.kubatatami.judonetworking.AsyncResultSender.java", "BodyUseAPI": [], "Fixed commit": "7badfaf211f664425a680a7e1fa6ccf2ff4d61bc", "Url": "https://api.github.com/repos/kubatatami/JudoNetworking", "Date": "2014-05-08T08:41:57Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((type) == (com.github.kubatatami.judonetworking.AsyncResultSender.Type.RESULT)) || ((type) == (com.github.kubatatami.judonetworking.AsyncResultSender.Type.ERROR))) { transaction.onFinish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/256/buggy-version/base.src.com.github.kubatatami.judonetworking.AsyncResultSender.java", "BodyUseAPI": [], "Fixed commit": "7badfaf211f664425a680a7e1fa6ccf2ff4d61bc", "Url": "https://api.github.com/repos/kubatatami/JudoNetworking", "Date": "2014-05-08T08:41:57Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getArguments().getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.ttrssreader.gui.PreferencesActivity.PREFS_WIFI.equals(cat)) addPreferencesFromResource(R.xml.prefs_wifi);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/2155/buggy-version/ttrss-reader.src.org.ttrssreader.gui.PreferencesActivity.java", "BodyUseAPI": [], "Fixed commit": "3315e1843abfd90bca67309548cbfe4f6813d5a6", "Url": "https://api.github.com/repos/nilsbraden/ttrss-reader-fork", "Date": "2013-10-09T11:48:39Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (outChar > 'Z') outChar -= 26; else if (outChar < 'A') outChar += 26;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/5476/buggy-version/CaesarCipher.src.CaesarCipher.java", "BodyUseAPI": [], "Fixed commit": "1b766d6d85980f43f1f722ab0d485d86159c1809", "Url": "https://api.github.com/repos/Brady31027/Java_Applications", "Date": "2017-04-14T19:40:17Z"},
{"Line": "=>881", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cafe.image.tiff.IFD.getField(TiffTag.BITS_PER_SAMPLE.getValue())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (f_bitsPerSample != null) bitsPerSample = f_bitsPerSample.getDataAsLong()[0];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/4111/buggy-version/src.cafe.image.tiff.TIFFTweaker.java", "BodyUseAPI": ["cafe.image.tiff.TiffField<?>.getDataAsLong()"], "Fixed commit": "c0a9d8cb604c90421eac36afe85340c8857e4967", "Url": "https://api.github.com/repos/dragon66/icafe", "Date": "2014-10-20T17:56:55Z"},
{"Line": "=>902", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cafe.image.tiff.IFD.getField(TiffTag.SAMPLES_PER_PIXEL.getValue())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (f_samplesPerPixel != null) samplesPerPixel = f_samplesPerPixel.getDataAsLong()[0];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/4111/buggy-version/src.cafe.image.tiff.TIFFTweaker.java", "BodyUseAPI": ["cafe.image.tiff.TiffField<?>.getDataAsLong()"], "Fixed commit": "c0a9d8cb604c90421eac36afe85340c8857e4967", "Url": "https://api.github.com/repos/dragon66/icafe", "Date": "2014-10-20T17:56:55Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (blueprint.sdk.util.Validator.isEmpty(result)) { result = defaultValue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/2768/buggy-version/blueprint-sdk.src.blueprint.sdk.util.StringUtil.java", "BodyUseAPI": [], "Fixed commit": "3085c9ad32fde3ddc88cedeb45219b899acf5b47", "Url": "https://api.github.com/repos/lempel/blueprint-sdk", "Date": "2015-06-22T05:58:27Z"},
{"Line": "=>506", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((selectedRow) > (-1)) && ((selectedRow) < (displayTable.getRowCount()))) { java.lang.String id = ((java.lang.String) (displayTable.getValueAt(selectedRow, 0))); java.lang.String firstName = ((java.lang.String) (displayTable.getValueAt(selectedRow, 1))); java.lang.String lastName = ((java.lang.String) (displayTable.getValueAt(selectedRow, 2))); for (int n = 0; n < (data.Student.listSize()); n++) { data.Student currentStudent = data.Student.getStudent(n); if (((currentStudent.getID().equalsIgnoreCase(id)) && (currentStudent.getFirstname().equalsIgnoreCase(firstName))) && (currentStudent.getLastname().equalsIgnoreCase(lastName))) data.Student.removeStudent(currentStudent); } selectedRow = -1; refresh(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/1292/buggy-version/src.gui.DisplayStudentPanel.java", "BodyUseAPI": ["javax.swing.JTable.getValueAt(int,int)", "javax.swing.JTable.getValueAt(int,int)", "javax.swing.JTable.getValueAt(int,int)"], "Fixed commit": "c4a6fd3a9ecb2c0d95966d806005060361fc92f2", "Url": "https://api.github.com/repos/Qwe1rty/Event-Planner", "Date": "2016-04-19T03:16:01Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((itemClickListener) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/189/buggy-version/autoadapter.src.main.java.com.benny.library.autoadapter.AutoRecyclerAdapter.java", "BodyUseAPI": [], "Fixed commit": "64b410391d1282f7fc078937bfc44c4f8e4b6867", "Url": "https://api.github.com/repos/BennyWang/AutoAdapter", "Date": "2016-04-21T09:40:37Z"},
{"Line": "=>410", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (null != results) { getPrevPageArguments().put((count - 1), results); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/4571/buggy-version/library.src.main.java.me.zhennan.android.sugary.library.control.SimpleSugaryWrapperActivity.java", "BodyUseAPI": ["android.util.SparseArray<android.os.Bundle>.put(int,android.os.Bundle)"], "Fixed commit": "a023b5139e4a6e0d4442f5ef8db392ede2f386c6", "Url": "https://api.github.com/repos/TinyRipper/sugary", "Date": "2014-07-02T23:12:20Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (null != results) { getPrevPageArguments().put((count - 1), results); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/4571/buggy-version/library.src.main.java.me.zhennan.android.sugary.library.control.SimpleSugaryWrapperFragment.java", "BodyUseAPI": ["android.util.SparseArray<android.os.Bundle>.put(int,android.os.Bundle)"], "Fixed commit": "a023b5139e4a6e0d4442f5ef8db392ede2f386c6", "Url": "https://api.github.com/repos/TinyRipper/sugary", "Date": "2014-07-02T23:12:20Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (input.equals(\"quit\")) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/7154/buggy-version/dmitry.wtc.src.main.java.com.weigandtconsulting.javaschool.dmitry.wtc.ServerSideChat.java", "BodyUseAPI": [], "Fixed commit": "f313550c261f601c7e6a37388a49bcc83b6c15de", "Url": "https://api.github.com/repos/VladislavKisliy/java-int-school", "Date": "2015-08-18T14:00:02Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (histroy == null) { histroy = new java.util.ArrayList<org.uta.nfcorienteering.event.Track>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/7061/buggy-version/src.org.uta.nfcorienteering.activity.TrackResultsActivity.java", "BodyUseAPI": [], "Fixed commit": "5e02294806a2449c8804b2766bbfe9867ba5b11d", "Url": "https://api.github.com/repos/NFC-Orienteering/NFC-Orienteering", "Date": "2014-12-04T22:23:42Z"},
{"Line": "=>318", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.umn.cs.spatialHadoop.CommandLineArguments.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (size_str == null) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/1189/buggy-version/src.edu.umn.cs.spatialHadoop.CommandLineArguments.java", "BodyUseAPI": [], "Fixed commit": "2f8e2df0ce3dc286bb4b21001148d0d4b68faf05", "Url": "https://api.github.com/repos/aseldawy/spatialhadoop2", "Date": "2014-03-03T12:13:29Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toLowerCase()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(ext.equals(\".asc\"))) { path += \".asc\"; fileAsc = new java.io.File(path); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/6412/buggy-version/src.org.giswater.controller.HecRasController.java", "BodyUseAPI": [], "Fixed commit": "e29c12a7b176b6df4b19b54a6cc18b011a623207", "Url": "https://api.github.com/repos/Giswater/giswater", "Date": "2014-10-16T10:59:50Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((player.bribesRemaining) < 1) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/5123/buggy-version/nisc-go-coop.games.anarchy.AI.java", "BodyUseAPI": [], "Fixed commit": "ee983e17e77b6ab5d4465c96844540c5565b0f5c", "Url": "https://api.github.com/repos/LaDfBC/niscai15", "Date": "2015-11-15T19:21:55Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Long, java.lang.Integer>.get(t.getId())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (usageCount == null) { usageCount = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/2739/buggy-version/source.demyo-dao.src.main.java.org.demyo.dao.ITagRepoImpl.java", "BodyUseAPI": [], "Fixed commit": "dcd022e4ecb6ea96647247d5b07b69b1d50f7ebd", "Url": "https://api.github.com/repos/The4thLaw/demyo", "Date": "2016-02-20T07:21:34Z"},
{"Line": "=>541", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type instanceof org.eclipse.xtext.common.types.JvmArrayType) { org.eclipse.xtext.common.types.JvmArrayType arrayType = ((org.eclipse.xtext.common.types.JvmArrayType) (type)); other = new org.eclipse.xtext.xbase.typesystem.references.ParameterizedTypeReference(getOwner(), arrayType.getComponentType()); for (int i = 0; i < (arrayType.getDimensions()); i++) { other = new org.eclipse.xtext.xbase.typesystem.references.ArrayTypeReference(getOwner(), other); } }else { other = new org.eclipse.xtext.xbase.typesystem.references.ParameterizedTypeReference(getOwner(), type); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/179/buggy-version/plugins.org.eclipse.xtext.xbase.src.org.eclipse.xtext.xbase.typesystem.references.LightweightTypeReference.java", "BodyUseAPI": [], "Fixed commit": "2c5182ae10307f46dfc5987888dab96a39ba1f60", "Url": "https://api.github.com/repos/splondike/xtext", "Date": "2013-11-20T15:36:07Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.web.multipart.MultipartFile.getInputStream()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((javax.imageio.ImageIO.read(input)) == null) { throw new java.io.IOException(\"Uploaded file is not a image\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/8028/buggy-version/src.main.java.com.mszostok.controller.UploadController.java", "BodyUseAPI": [], "Fixed commit": "85067799bbcd2f5a1f5d6b29a69bac8d416f7dac", "Url": "https://api.github.com/repos/mszostok/blog-proof-of-concept", "Date": "2016-06-02T08:27:17Z"},
{"Line": "=>353", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (result.get(0).equals(result.get(1))) { result.remove(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/3328/buggy-version/src.main.java.CreateTask.java", "BodyUseAPI": ["java.util.ArrayList<java.time.LocalDateTime>.remove(int)"], "Fixed commit": "13323300981e26dd62a4591e213345b02058509e", "Url": "https://api.github.com/repos/cs2103jan2015-w15-1j/main", "Date": "2015-04-12T22:41:05Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (activity.isComment()) { return org.exoplatform.social.notification.LinkProviderUtils.getOpenLink(org.exoplatform.social.notification.Utils.getActivityManager().getParentActivity(activity)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/2830/buggy-version/component.notification.src.main.java.org.exoplatform.social.notification.LinkProviderUtils.java", "BodyUseAPI": ["org.exoplatform.social.notification.Utils.getActivityManager().getParentActivity(org.exoplatform.social.core.activity.model.ExoSocialActivity)", "org.exoplatform.social.notification.LinkProviderUtils.getOpenLink(org.exoplatform.social.notification.Utils.getActivityManager().getParentActivity(activity))"], "Fixed commit": "d66b7ec1a18225c01586a9974c0225574ecbbc57", "Url": "https://api.github.com/repos/exodev/social", "Date": "2016-08-24T11:35:04Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (params.containsKey(OpsGenieClientConstants.API.ORDER)) { request.setSortOrder(ListAlertsRequest.SortOrder.valueOf(com.ifountain.opsgenie.client.script.util.ScriptBridgeUtils.getAsString(params, OpsGenieClientConstants.API.ORDER))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/6100/buggy-version/common.src.java.com.ifountain.opsgenie.client.script.util.ScriptProxy.java", "BodyUseAPI": ["ListAlertsRequest.SortOrder.valueOf(com.ifountain.opsgenie.client.script.util.ScriptBridgeUtils.getAsString(params, OpsGenieClientConstants.API.ORDER))", "com.ifountain.opsgenie.client.script.util.ListAlertsRequest.setSortOrder(ListAlertsRequest.SortOrder.valueOf(com.ifountain.opsgenie.client.script.util.ScriptBridgeUtils.getAsString(params, OpsGenieClientConstants.API.ORDER)))", "com.ifountain.opsgenie.client.script.util.ScriptBridgeUtils.getAsString(java.util.Map,OpsGenieClientConstants.API.ORDER)"], "Fixed commit": "1454d418fde80470a8d59fcea4a1427ca455ad0e", "Url": "https://api.github.com/repos/opsgenie/opsgenieclient", "Date": "2013-04-26T12:58:07Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (params.containsKey(OpsGenieClientConstants.API.STATUS)) { request.setStatus(ListAlertsRequest.Status.valueOf(com.ifountain.opsgenie.client.script.util.ScriptBridgeUtils.getAsString(params, OpsGenieClientConstants.API.STATUS))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/6100/buggy-version/common.src.java.com.ifountain.opsgenie.client.script.util.ScriptProxy.java", "BodyUseAPI": ["com.ifountain.opsgenie.client.script.util.ScriptBridgeUtils.getAsString(java.util.Map,OpsGenieClientConstants.API.STATUS)", "ListAlertsRequest.Status.valueOf(com.ifountain.opsgenie.client.script.util.ScriptBridgeUtils.getAsString(params, OpsGenieClientConstants.API.STATUS))", "com.ifountain.opsgenie.client.script.util.ListAlertsRequest.setStatus(ListAlertsRequest.Status.valueOf(com.ifountain.opsgenie.client.script.util.ScriptBridgeUtils.getAsString(params, OpsGenieClientConstants.API.STATUS)))"], "Fixed commit": "1454d418fde80470a8d59fcea4a1427ca455ad0e", "Url": "https://api.github.com/repos/opsgenie/opsgenieclient", "Date": "2013-04-26T12:58:07Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (params.containsKey(OpsGenieClientConstants.API.SORT_BY)) { request.setSortBy(ListAlertsRequest.SortBy.valueOf(com.ifountain.opsgenie.client.script.util.ScriptBridgeUtils.getAsString(params, OpsGenieClientConstants.API.SORT_BY))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/6100/buggy-version/common.src.java.com.ifountain.opsgenie.client.script.util.ScriptProxy.java", "BodyUseAPI": ["com.ifountain.opsgenie.client.script.util.ListAlertsRequest.setSortBy(ListAlertsRequest.SortBy.valueOf(com.ifountain.opsgenie.client.script.util.ScriptBridgeUtils.getAsString(params, OpsGenieClientConstants.API.SORT_BY)))", "ListAlertsRequest.SortBy.valueOf(com.ifountain.opsgenie.client.script.util.ScriptBridgeUtils.getAsString(params, OpsGenieClientConstants.API.SORT_BY))", "com.ifountain.opsgenie.client.script.util.ScriptBridgeUtils.getAsString(java.util.Map,OpsGenieClientConstants.API.SORT_BY)"], "Fixed commit": "1454d418fde80470a8d59fcea4a1427ca455ad0e", "Url": "https://api.github.com/repos/opsgenie/opsgenieclient", "Date": "2013-04-26T12:58:07Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((motionEvent != null) && (mTouchesAreDisabledTillLastFingerIsUp)) { final int action = android.support.v4.view.MotionEventCompat.getActionMasked(motionEvent); if (((android.support.v4.view.MotionEventCompat.getPointerCount(motionEvent)) == 1) && (((action == (android.view.MotionEvent.ACTION_CANCEL)) || (action == (android.view.MotionEvent.ACTION_DOWN))) || (action == (android.view.MotionEvent.ACTION_UP)))) { mTouchesAreDisabledTillLastFingerIsUp = false; return action == (android.view.MotionEvent.ACTION_UP); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/6052/buggy-version/app.src.main.java.com.anysoftkeyboard.keyboards.views.AnyKeyboardViewBase.java", "BodyUseAPI": ["android.support.v4.view.MotionEventCompat.getPointerCount(android.view.MotionEvent)", "android.support.v4.view.MotionEventCompat.getActionMasked(android.view.MotionEvent)"], "Fixed commit": "9dc18341ba7281e22202bcb7c23facd33ccb231b", "Url": "https://api.github.com/repos/AnySoftKeyboard/AnySoftKeyboard", "Date": "2017-01-09T02:00:28Z"},
{"Line": "=>843", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((!(scan.nextToken.tokenStr.equals(\"=\"))) && (!(scan.nextToken.tokenStr.equals(\"in\")))) && (!(scan.nextToken.tokenStr.equals(\"from\")))) { error((((\"\\\"\" + (scan.nextToken.tokenStr)) + \"\\\"\") + \" is not a valid for loop token\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/612/buggy-version/src.havabol.Parser.java", "BodyUseAPI": ["havabol.Parser.error((((\"\\\"\" + (scan.nextToken.tokenStr)) + \"\\\"\") + \" is not a valid for loop token\"))"], "Fixed commit": "3f35f04b0ef38834334ef6c9cd3285782dca6b09", "Url": "https://api.github.com/repos/bucknercd/Interpreter", "Date": "2017-04-09T20:32:15Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["RuleEngine.getMatchingScaleInformer(Board,int,int,board.cellAt(x1, y1).getCurrentObject())", "RuleEngine.getMatchingScaleInformer(Board,int,int,board.cellAt(x2, y2).getCurrentObject())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((msi1.horizontalMatchTotalScale()) < (RuleEngine.MINIMUM_MATCH_REQUIRED)) || ((msi2.verticalMatchTotalScale()) < (RuleEngine.MINIMUM_MATCH_REQUIRED))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/8744/buggy-version/src.RuleEngine.java", "BodyUseAPI": [], "Fixed commit": "f8d6db7dbf6fed6c7a1c68f68e593e3350817d7c", "Url": "https://api.github.com/repos/awesome-comp302/chewy-lokum-legend-v1", "Date": "2014-11-29T20:09:52Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((attributes) != null) { var.attributes = new java.util.HashMap<java.lang.String, java.lang.Object>(attributes.size()); for (java.util.Map.Entry<java.lang.String, java.lang.Object> entry : attributes.entrySet()) { java.lang.String k = entry.getKey(); java.lang.Object v = entry.getValue(); if (v instanceof com.alibaba.druid.sql.ast.SQLObject) { var.attributes.put(k, ((com.alibaba.druid.sql.ast.SQLObject) (v)).clone()); }else { var.attributes.put(k, v); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/1153/buggy-version/src.main.java.com.alibaba.druid.sql.ast.expr.SQLVariantRefExpr.java", "BodyUseAPI": [], "Fixed commit": "fd2ba2a290f32c054889c487a675c892f921f80e", "Url": "https://api.github.com/repos/alibaba/druid", "Date": "2017-12-01T14:56:40Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((collectorInfo.type()) == (codeine.jsons.collectors.CollectorInfo.CollectorType.Monitor)) { return !(collectorInfo.isSuccess()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/4979/buggy-version/src.web_server.codeine.servlets.api_servlets.angular.NodeWithMonitorsInfoApi.java", "BodyUseAPI": ["codeine.jsons.collectors.CollectorExecutionInfo.isSuccess()"], "Fixed commit": "f9ada963d50fc976af5052c052cbedfaacb38858", "Url": "https://api.github.com/repos/codeine-cd/codeine", "Date": "2015-02-10T08:58:22Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.j256.itunesjukebox.applescript.AppleScriptUtil.getPlayingInfo()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((playingInfo.getId()) < 0) { java.lang.System.err.println((\"ERROR: We aren't playing in playlist: \" + (com.j256.itunesjukebox.web.AdminController.TMP_PLAYLIST))); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/6545/buggy-version/src.main.java.com.j256.itunesjukebox.auto.PlayListAutomation.java", "BodyUseAPI": [], "Fixed commit": "255324fb31760057527d3536acb4c523f0bb906a", "Url": "https://api.github.com/repos/j256/itunesjukebox", "Date": "2016-02-07T20:39:36Z"},
{"Line": "=>419", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(ttsAddString.isEmpty())) { tts.add(ttsAddString.trim()); ttsFile.delete(); ttsFile.createNewFile(); java.nio.file.Files.write(ttsFile.toPath(), tts, java.nio.file.StandardOpenOption.WRITE); channel.sendMessage(ttsAddString.trim(), true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/7308/buggy-version/src.net.mizobo.bigsausage.BigSausage.java", "BodyUseAPI": ["java.lang.String.trim()", "sx.blah.discord.handle.obj.IChannel.sendMessage(java.lang.String,boolean)", "java.util.List<java.lang.String>.add(java.lang.String)", "java.lang.String.trim()"], "Fixed commit": "64e7a357a48a5dd0ad86f9148bbde5c5db652acb", "Url": "https://api.github.com/repos/fhbgds14531/BigSausage", "Date": "2017-10-07T09:48:54Z"},
{"Line": "=>697", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (indexOfFragment < 0) indexOfFragment = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/2229/buggy-version/app.src.main.java.org.naturenet.ui.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "9db878f06874628db05c8ad28c75fbfa846e7f3d", "Url": "https://api.github.com/repos/rigotre7/naturenet-android-app", "Date": "2017-09-11T19:49:00Z"},
{"Line": "=>675", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (indexOfFragment < 0) indexOfFragment = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/2229/buggy-version/app.src.main.java.org.naturenet.ui.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "9db878f06874628db05c8ad28c75fbfa846e7f3d", "Url": "https://api.github.com/repos/rigotre7/naturenet-android-app", "Date": "2017-09-11T19:49:00Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((n == null) || (in == null)) { return \"-\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/1047/buggy-version/src.main.java.org.sigmah.client.util.NumberUtils.java", "BodyUseAPI": [], "Fixed commit": "6b6e0faf3fb337764926bf1169ca6a3b79434520", "Url": "https://api.github.com/repos/Raphcal/sigmah", "Date": "2016-08-16T15:43:43Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (FrameLayout.LayoutParams.class.isInstance(imageView.getLayoutParams())) { imageView.setLayoutParams(new android.widget.FrameLayout.LayoutParams(FrameLayout.LayoutParams.MATCH_PARENT, FrameLayout.LayoutParams.MATCH_PARENT)); }else if (RelativeLayout.LayoutParams.class.isInstance(imageView.getLayoutParams())) { imageView.setLayoutParams(new android.widget.RelativeLayout.LayoutParams(RelativeLayout.LayoutParams.MATCH_PARENT, RelativeLayout.LayoutParams.MATCH_PARENT)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/3670/buggy-version/app.src.main.java.com.ahmad.nabih.skypressprototype.NewsImagesFetcher.java", "BodyUseAPI": ["android.widget.ImageView.getLayoutParams()", "android.widget.ImageView.setLayoutParams(android.widget.FrameLayout.LayoutParams)", "java.lang.Class.isInstance(imageView.getLayoutParams())", "android.widget.ImageView.setLayoutParams(android.widget.RelativeLayout.LayoutParams)"], "Fixed commit": "32775027db59117acc58dc00ce3b284957016b5e", "Url": "https://api.github.com/repos/nabihahmad/SkyPressPrototype", "Date": "2016-01-23T21:46:49Z"},
{"Line": "=>1393", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.stratelia.webactiv.kmelia.control.ejb.KmeliaBmEJB.getPublicationDetail(pubDetail.getPK())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((com.silverpeas.util.StringUtil.isDefined(old.getTargetValidatorId())) && (!(com.silverpeas.util.StringUtil.isDefined(pubDetail.getTargetValidatorId())))) { pubDetail.setTargetValidatorId(old.getTargetValidatorId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/6260/buggy-version/kmelia.kmelia-ejb.src.main.java.com.stratelia.webactiv.kmelia.control.ejb.KmeliaBmEJB.java", "BodyUseAPI": ["com.stratelia.webactiv.util.publication.model.PublicationDetail.setTargetValidatorId(old.getTargetValidatorId())", "com.stratelia.webactiv.util.publication.model.PublicationDetail.getTargetValidatorId()"], "Fixed commit": "22baac50d6e3fee43cfaebee60cc27013aaa152b", "Url": "https://api.github.com/repos/Silverpeas/Silverpeas-Components", "Date": "2014-08-29T12:49:13Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((msg.getCommand()) == (com.cam.eece411.Utilities.Commands.ECHO_RETURN)) { socket.send(com.cam.eece411.Communication.Builder.echoedResponseToClient(msg), msg.getReturnAddress(), msg.getReturnPort()); com.cam.eece411.Handlers.KVSHandler.log.info(\"Echo_Return received\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/7941/buggy-version/kvStore.src.com.cam.eece411.Handlers.KVSHandler.java", "BodyUseAPI": ["com.cam.eece411.Communication.Message.getReturnPort()", "com.cam.eece411.Communication.Builder.echoedResponseToClient(com.cam.eece411.Communication.Message)", "com.cam.eece411.Communication.UDPSocket.send(com.cam.eece411.Communication.Builder.echoedResponseToClient(msg),msg.getReturnAddress(),msg.getReturnPort())", "com.cam.eece411.Communication.Message.getReturnAddress()"], "Fixed commit": "3f67d7c2c47df54f86984ef7dd66d6eb7b16c31e", "Url": "https://api.github.com/repos/cszarapka/411-kvstore", "Date": "2015-04-25T04:18:34Z"},
{"Line": "=>486", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (line.startsWith(\"PING \")) { sendRaw((\"PONG \" + (line.substring(5)))); }else { java.lang.String[] splitLine = line.split(\" \"); java.lang.String command = splitLine[1].toUpperCase(); boolean commandIsNumber = true; try { java.lang.Integer.parseInt(command); } catch (java.lang.NumberFormatException e) { commandIsNumber = false; } command = (commandIsNumber ? \"N\" : \"\") + command; irc.Commands switchBy = Commands.CNF; for (irc.Commands value : irc.Commands.values()) { if (value.name().equalsIgnoreCase(command)) { switchBy = value; break; } } irc.Channel channel; irc.User user; irc.JoinedEvent joinedEvent; switch (switchBy) { case N332 : channel = channels.get(splitLine[3]); channel.topic = line.substring(((line.indexOf(\":\", 3)) + 1)); break; case N353 : channel = channels.get(splitLine[4]); java.lang.String[] nicks = line.substring(line.indexOf(\":\", 3)).split(\" \"); for (java.lang.String nick : nicks) { char priv = ' '; if (nick.matches(\"^[@+]\")) { priv = nick.charAt(0); nick = nick.substring(1); } if (users.containsKey(nick)) { user = users.get(nick); }else { user = new irc.User(this); users.put(nick, user); user.nick = nick; } user.channels.add(channel); channel.users.add(user); } break; case N366 : user = users.get(nick); channel = channels.get(splitLine[3]); channel.joined = true; channel.users.add(user); user.channels.add(channel); joinedEvent = new irc.JoinedEvent(this); joinedEvent.channel = channel; joinedEvent.user = user; joinedEvent.us = true; events.fire(\"channelJoined\", joinedEvent); break; case JOIN : user = getUser(splitLine[0]); channel = channels.get(splitLine[2]); if (user.nick.equals(nick)) { break; } channel.users.add(user); user.channels.add(channel); joinedEvent = new irc.JoinedEvent(this); joinedEvent.channel = channel; joinedEvent.user = user; joinedEvent.us = false; events.fire(\"channelJoined\", joinedEvent); break; case NICK : user = getUser(splitLine[0]); java.lang.String newnick = splitLine[2].substring(1); if (user.nick.equals(nick)) { nick = newnick; } irc.NickChangedEvent nickChangedEvent = new irc.NickChangedEvent(this); nickChangedEvent.user = user; nickChangedEvent.oldnick = user.nick; nickChangedEvent.newnick = newnick; nickChangedEvent.us = nick.equals(newnick); events.fire(\"nickChanged\", nickChangedEvent); users.remove(user.nick); users.put(newnick, user); user.nick = newnick; break; case PART : user = getUser(splitLine[0]); channel = channels.get(splitLine[2]); channel.users.remove(user); user.channels.remove(channel); irc.PartedEvent partedEvent = new irc.PartedEvent(this); partedEvent.user = user; partedEvent.channel = channel; partedEvent.partMessage = \"\"; partedEvent.us = user.nick.equals(nick); if (partedEvent.us) { channel.joined = false; }else if (line.contains(((\"PART \" + (splitLine[2])) + \" :\"))) { int offset = ((splitLine[0].length()) + (splitLine[2].length())) + 8; partedEvent.partMessage = line.substring(offset); } events.fire(\"channelParted\", partedEvent); break; case PRIVMSG : user = getUser(splitLine[0]); java.lang.String channelName = splitLine[2]; java.lang.String message = line.substring(((line.indexOf(\":\", 2)) + 1)); if (channelName.equals(nick)) { if ((message.startsWith(\"\\u0001ACTION\")) && (message.endsWith(\"\\u0001\"))) { message = message.substring(8, ((message.length()) - 1)); irc.ActionEvent event = new irc.ActionEvent(this); event.user = user; event.destination = user.nick; event.action = message; events.fire(\"queryActionReceived\", event); }else { irc.MessageEvent event = new irc.MessageEvent(this); event.user = user; event.destination = user.nick; event.message = message; events.fire(\"queryReceived\", event); } }else { channel = channels.get(channelName); if ((message.startsWith(\"\\u0001ACTION\")) && (message.endsWith(\"\\u0001\"))) { message = message.substring(8, ((message.length()) - 1)); irc.ActionEvent event = new irc.ActionEvent(this); event.user = user; event.destination = channel.name; event.action = message; events.fire(\"actionReceived\", event); }else { irc.MessageEvent event = new irc.MessageEvent(this); event.channel = channel; event.user = user; event.destination = user.nick; event.message = message; events.fire(\"messageReceived\", event); } } break; case QUIT : user = getUser(splitLine[0]); if (user.nick.equals(nick)) { break; } java.lang.String quitMessage = \"\"; if (line.contains(\"QUIT :\")) { quitMessage = line.substring((((splitLine[0].length()) + (splitLine[2].length())) + 7)); } for (irc.Channel chan : user.channels) { chan.users.remove(user); } irc.QuitEvent quitEvent = new irc.QuitEvent(this); quitEvent.user = user; quitEvent.quitMessage = quitMessage; events.fire(\"userQuit\", quitEvent); users.remove(user.nick); break; default : break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/2107/buggy-version/src.irc.Client.java", "BodyUseAPI": ["java.lang.String.substring(int)", "java.lang.String.indexOf(java.lang.String,int)", "java.lang.String.split(java.lang.String)", "java.lang.String.substring(int)", "java.lang.String.substring(int)", "java.lang.String.split(java.lang.String)", "irc.Client.sendRaw(java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.String.indexOf(java.lang.String,int)", "java.lang.String.substring(int)", "java.lang.String.indexOf(java.lang.String,int)", "java.lang.String.contains(java.lang.String)", "java.lang.String.substring(int)", "java.lang.String.substring(int)"], "Fixed commit": "79a0cc2c384abb3b73a58331e419734ecf36138e", "Url": "https://api.github.com/repos/callumacrae/JavaIRCClient", "Date": "2013-11-15T21:50:30Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(lhs.equals(A))) result.addAll(getFollows(lhs));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/4888/buggy-version/compiler.Grammer.java", "BodyUseAPI": ["compiler.Grammer.getFollows(compiler.NonTerminal)", "java.util.Set<compiler.Terminal>.addAll(java.util.Set<compiler.Terminal>)"], "Fixed commit": "dfad757bf64c7d9dfe61c3c7113d01795e04fa44", "Url": "https://api.github.com/repos/razeghi71/Recursive-descent-compiler", "Date": "2014-07-03T10:38:45Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(lhs.equals(A))) result.addAll(getFollows(lhs));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/4888/buggy-version/compiler.Grammer.java", "BodyUseAPI": ["compiler.Grammer.getFollows(compiler.NonTerminal)", "java.util.Set<compiler.Terminal>.addAll(java.util.Set<compiler.Terminal>)"], "Fixed commit": "dfad757bf64c7d9dfe61c3c7113d01795e04fa44", "Url": "https://api.github.com/repos/razeghi71/Recursive-descent-compiler", "Date": "2014-07-03T10:38:45Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((position + 1) == (mTransactions.size())) { isCheckBoxHidden = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/8071/buggy-version/app.src.main.java.com.hulkdx.moneymanagerv2.ui.main.TransactionAdapter.java", "BodyUseAPI": [], "Fixed commit": "efb6e1982e0daea1d0125e685db1fa134edb200a", "Url": "https://api.github.com/repos/hulkdx/MoneyManager", "Date": "2017-09-28T11:30:33Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (map == null) { return input.toURI().normalize(); }else { return super.createRelativeURI(map, input, linkType); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/7285/buggy-version/freeplane_plugin_workspace.src.org.freeplane.plugin.workspace.mindmapmode.MModeWorkspaceLinkController.java", "BodyUseAPI": ["org.freeplane.features.link.mindmapmode.MLinkController.createRelativeURI(java.io.File,java.io.File,int)"], "Fixed commit": "06c2a82860a395d7f0ef538731126797d52ca415", "Url": "https://api.github.com/repos/Docear/Desktop", "Date": "2013-06-05T11:27:29Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((players.get(i).howMuchMoneyOwned()) < salePrice) { java.lang.System.out.println(((players.get(i).getPlayerName()) + \" is out of the bidding!\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/4002/buggy-version/Monopoly.src.CSC110.monopoly.player.Piece.java", "BodyUseAPI": ["java.util.ArrayList<CSC110.monopoly.player.Player>.get(int)", "java.io.PrintStream.println(((players.get(i).getPlayerName()) + \" is out of the bidding!\"))", "players.get(i).getPlayerName()"], "Fixed commit": "769d39ee5ffb12431293b9f2ea660d94b02fa4ff", "Url": "https://api.github.com/repos/Pater1/CluelessMonopoly", "Date": "2016-11-29T17:50:47Z"},
{"Line": "=>387", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.example.thomas.tapin.BackgroundTask.isNetworkAvailable(this)) { backgroundTask.execute(\"editTimetable\", eid, day, month, sTime, eTime); }else { java.lang.System.out.println(BackgroundTask.var); finish(); android.widget.Toast.makeText(this, \"No internet connection\", Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/8894/buggy-version/TapIn.app.src.main.java.com.example.thomas.tapin.timetableForm2.java", "BodyUseAPI": [], "Fixed commit": "95e4cb47429695bced9b3fdf350c3d784bd2f8e0", "Url": "https://api.github.com/repos/ThomasDelaney/TapIn", "Date": "2017-04-26T18:15:48Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((input.size()) == 0) { element = new java.util.ArrayList<int[]>(0); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/2182/buggy-version/src.MilnorElement.java", "BodyUseAPI": [], "Fixed commit": "3995ccade18ea3ebbf6b049b30d5123b4f1360a7", "Url": "https://api.github.com/repos/swixi/steenrod", "Date": "2016-11-27T23:04:39Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getHeader(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (authorizationString == null) { throw new org.springframework.security.web.authentication.preauth.PreAuthenticatedCredentialsNotFoundException(\"Unauthorized access. Please provide preemptive HTTP Basic authorization credentials with every request.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/2347/buggy-version/src.main.java.com.aemreunal.config.UserUrlFilter.java", "BodyUseAPI": [], "Fixed commit": "355f5c697ca945b553e9eed647b055eba7c4b3da", "Url": "https://api.github.com/repos/aemreunal/iBeaconServer", "Date": "2015-02-07T13:58:45Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.exoplatform.social.core.manager.IdentityManager.getOrCreateIdentity(java.lang.String,java.lang.String,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (identity == null) { identity = new org.exoplatform.social.core.identity.model.Identity(providerId, remoteId); identityManager.saveIdentity(identity); }else if (identity.isDeleted()) { throw new javax.ws.rs.WebApplicationException(Response.Status.FORBIDDEN); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/5221/buggy-version/component.service.src.main.java.org.exoplatform.social.rest.impl.identity.IdentityRestResourcesV1.java", "BodyUseAPI": ["org.exoplatform.social.core.identity.model.Identity.isDeleted()"], "Fixed commit": "6d83bb115a1c547925240b0174b1e6cea431547a", "Url": "https://api.github.com/repos/exodev/social", "Date": "2015-06-22T09:13:49Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((profile.getProperty(Profile.LAST_NAME)) != null) userEntity.setLastname(profile.getProperty(Profile.LAST_NAME).toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/5221/buggy-version/component.service.src.main.java.org.exoplatform.social.rest.api.EntityBuilder.java", "BodyUseAPI": ["org.exoplatform.social.core.identity.model.Profile.getProperty(Profile.LAST_NAME)", "profile.getProperty(Profile.LAST_NAME).toString()", "org.exoplatform.social.rest.entity.UserEntity.setLastname(profile.getProperty(Profile.LAST_NAME).toString())"], "Fixed commit": "6d83bb115a1c547925240b0174b1e6cea431547a", "Url": "https://api.github.com/repos/exodev/social", "Date": "2015-06-22T09:13:49Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((profile.getProperty(Profile.FIRST_NAME)) != null) userEntity.setFirstname(profile.getProperty(Profile.FIRST_NAME).toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/5221/buggy-version/component.service.src.main.java.org.exoplatform.social.rest.api.EntityBuilder.java", "BodyUseAPI": ["org.exoplatform.social.rest.entity.UserEntity.setFirstname(profile.getProperty(Profile.FIRST_NAME).toString())", "profile.getProperty(Profile.FIRST_NAME).toString()", "org.exoplatform.social.core.identity.model.Profile.getProperty(Profile.FIRST_NAME)"], "Fixed commit": "6d83bb115a1c547925240b0174b1e6cea431547a", "Url": "https://api.github.com/repos/exodev/social", "Date": "2015-06-22T09:13:49Z"},
{"Line": "=>504", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((growth[j]) > 0) growth[j] -= lambda * (p[j].getRegularization()); else growth[j] += lambda * (p[j].getRegularization());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/4759/buggy-version/src.fresco.action.CActionManager.java", "BodyUseAPI": ["p[j].getRegularization()", "p[j].getRegularization()"], "Fixed commit": "07de833570a820a1dd9c0ac70311d480eac626e6", "Url": "https://api.github.com/repos/m3art/fresco", "Date": "2012-12-25T17:04:35Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((thresholdq) < 0) this.thresholdq = 1.0 / (scale);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/4759/buggy-version/src.workers.analyse.paramObjects.CCOGParams.java", "BodyUseAPI": [], "Fixed commit": "07de833570a820a1dd9c0ac70311d480eac626e6", "Url": "https://api.github.com/repos/m3art/fresco", "Date": "2012-12-25T17:04:35Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (oneChoice) { for (int i = 1; i < amount; i++) { this.addEffect(new mage.abilities.effects.common.AddConditionalManaOfAnyColorEffect(1, manaBuilder)); } choices = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/5117/buggy-version/Mage.src.mage.abilities.mana.ConditionalAnyColorManaAbility.java", "BodyUseAPI": [], "Fixed commit": "3a90fbb49c9052ed1b21f3a08f58780f33f046b5", "Url": "https://api.github.com/repos/magefree/mage", "Date": "2013-02-04T20:19:12Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((f.getChain().get(j)) == (f.getChain().get(x))) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/8177/buggy-version/OPT-Khaleesi.src.Driver.java", "BodyUseAPI": [], "Fixed commit": "1ba0b68689cb785a48be553b51b683441dc0d09f", "Url": "https://api.github.com/repos/Clapperclaws/OPT-Khaleesi", "Date": "2017-07-24T21:21:18Z"},
{"Line": "=>379", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCameraIndex) == (Camera.CameraInfo.CAMERA_FACING_BACK)) { mFboToView.flip(true, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/2631/buggy-version/app.src.main.java.io.agora.tutorials.helper.CustomizedCameraRenderer.java", "BodyUseAPI": [], "Fixed commit": "48fc6895526be7ebc496f6c298800a3e7e8cd29c", "Url": "https://api.github.com/repos/AgoraIO-Community/Agora-Video-Source-Android", "Date": "2017-12-08T09:01:38Z"},
{"Line": "=>9", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (shift < 0) { shift += 26; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/9133/buggy-version/src.Encrypt.java", "BodyUseAPI": [], "Fixed commit": "0a0978f65fbb5a33650f20c93cd7fa5f798a3877", "Url": "https://api.github.com/repos/RobinAnderssonCode/CodeChallenge2", "Date": "2016-04-01T16:26:39Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((studyUID == null) || (studyUID.equals(\"\"))) studyUID = \"*\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/2523/buggy-version/src.main.java.edu.stanford.epad.common.plugins.PluginDicomUtil.java", "BodyUseAPI": [], "Fixed commit": "5ae84a063b5adf8fb7ae9c3c8e9bcbcec9752a76", "Url": "https://api.github.com/repos/RubinLab/epad-common", "Date": "2016-08-26T22:22:18Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((definition.getResource()) != null) { this.addComponents(definition.getResource()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/1644/buggy-version/spring-xd-module.src.main.java.org.springframework.xd.module.SimpleModule.java", "BodyUseAPI": ["org.springframework.xd.module.SimpleModule.addComponents(definition.getResource())", "org.springframework.xd.module.SimpleModule.getResource()"], "Fixed commit": "d599c7458e1376d2de94da875de9d918916aa6b2", "Url": "https://api.github.com/repos/ericbottard/spring-xd", "Date": "2013-09-16T17:03:26Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (eu.transkribus.core.util.PageXmlUtils.hasRegions(pageData)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/7072/buggy-version/src.main.java.eu.transkribus.swt_gui.tools.ToolsWidgetListener.java", "BodyUseAPI": [], "Fixed commit": "198723b773eea8d30ad4162309ffaef34663f475", "Url": "https://api.github.com/repos/Transkribus/TranskribusSwtGui", "Date": "2017-05-15T10:21:05Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.terasoluna.gfw.common.codelist.CodeList.getCodeListId()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (codeListId != null) { java.util.regex.Matcher codeListIdMatcher = codeListIdPattern.matcher(codeListId); if (codeListIdMatcher.matches()) { targetCodeLists.put(codeListId, codeList); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/3443/buggy-version/terasoluna-gfw-web.src.main.java.org.terasoluna.gfw.web.codelist.CodeListInterceptor.java", "BodyUseAPI": ["java.util.regex.Pattern.matcher(java.lang.String)", "java.util.Map<java.lang.String, org.terasoluna.gfw.common.codelist.CodeList>.put(java.lang.String,org.terasoluna.gfw.common.codelist.CodeList)"], "Fixed commit": "f97e44066728f5b7d01aa338134ee12956b2ca58", "Url": "https://api.github.com/repos/terasolunaorg/terasoluna-gfw", "Date": "2016-01-04T04:45:07Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (channelHandlerNameField.isDisposed()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/7782/buggy-version/applications.plugins.org.csstudio.diag.pvmanager.probe.src.org.csstudio.diag.pvmanager.probe.DetailsPanel.java", "BodyUseAPI": [], "Fixed commit": "7186f0533752cbada2d55cf8e83e46e77f9154ba", "Url": "https://api.github.com/repos/ControlSystemStudio/cs-studio", "Date": "2014-12-17T10:27:02Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (target == rm) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/4896/buggy-version/asta4d-core.src.main.java.com.astamuse.asta4d.util.ElementUtil.java", "BodyUseAPI": [], "Fixed commit": "dbb6f14e920d6cd7323c30c0ad760179d72a38f9", "Url": "https://api.github.com/repos/astamuse/asta4d", "Date": "2014-05-26T10:43:36Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((source.isFile()) && (destination.isDirectory())) { destination = new java.io.File(destination.getAbsolutePath(), source.getName()); java.nio.file.Files.copy(source.toPath(), destination.toPath()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/6924/buggy-version/src.ru.fizteh.fivt.students.ADanilyak.shell.CmdCP.java", "BodyUseAPI": ["java.io.File.getAbsolutePath()", "java.io.File.getName()", "java.nio.file.Files.copy(java.nio.file.Path,java.nio.file.Path)", "java.io.File.toPath()"], "Fixed commit": "77edb0beff2e6de6a13b96fca1dd09115ea4554a", "Url": "https://api.github.com/repos/adanilyak/fizteh-java-2013", "Date": "2013-10-12T15:50:28Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<fflames.base.Transform>.size()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (size > 0) { _transforms.clear(); fireTableRowsDeleted(0, (size - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/1982/buggy-version/fflames-gui.src.main.java.fflames.gui.model.TransformTableModel.java", "BodyUseAPI": ["fflames.gui.model.TransformTableModel.fireTableRowsDeleted(int,int)"], "Fixed commit": "557891aaec173c5d5d6b699309ebc44b1e97494a", "Url": "https://api.github.com/repos/pawelkorus/FFlames", "Date": "2015-06-24T20:09:31Z"},
{"Line": "=>1162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mage.game.Game.getPlayer(java.util.UUID)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(opponent.hasLost())) { game.getPlayer(opponentId).lost(game); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/8404/buggy-version/Mage.src.mage.players.PlayerImpl.java", "BodyUseAPI": [], "Fixed commit": "fe051b5d29961af2cd30f3f1686da326c96d3ebf", "Url": "https://api.github.com/repos/magefree/mage", "Date": "2013-04-09T23:10:03Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((runStartEvent.getTarget()) != (this)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/3393/buggy-version/JavaLang.src.main.java.com.besaba.revonline.snippetide.lang.java.JavaLanguage.java", "BodyUseAPI": [], "Fixed commit": "db17491bd6153868853b7d09c4ff44996268283e", "Url": "https://api.github.com/repos/marcoacierno/SnippetIDE", "Date": "2015-07-15T22:56:17Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event.getTarget()) != (this)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/3393/buggy-version/JavaLang.src.main.java.com.besaba.revonline.snippetide.lang.java.JavaLanguage.java", "BodyUseAPI": [], "Fixed commit": "db17491bd6153868853b7d09c4ff44996268283e", "Url": "https://api.github.com/repos/marcoacierno/SnippetIDE", "Date": "2015-07-15T22:56:17Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((pixel[0]) < 0.0F) || ((pixel[0]) > 1.0F)) java.lang.System.out.println(pixel[0]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/1046/buggy-version/jegl-awt.src.main.java.de.torqdev.jegl.awt.FloatImageFromBufferedImageConverter.java", "BodyUseAPI": ["java.io.PrintStream.println(float)"], "Fixed commit": "56f7b67fc688f0bcfbab8b469585212c3b84ca9a", "Url": "https://api.github.com/repos/GuckesRohrkaGbR/jegl", "Date": "2017-05-25T09:50:25Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((image.getChannels()) == 1) { return image; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/1046/buggy-version/jegl-core.src.main.java.de.torqdev.jegl.filters.AverageGrayscaleFilter.java", "BodyUseAPI": [], "Fixed commit": "56f7b67fc688f0bcfbab8b469585212c3b84ca9a", "Url": "https://api.github.com/repos/GuckesRohrkaGbR/jegl", "Date": "2017-05-25T09:50:25Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((paths.size()) == 0) { tempLl.setVisibility(LinearLayout.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/1325/buggy-version/src.main.java.blot.jordan.ellis.com.blot.ComposeActivity.java", "BodyUseAPI": [], "Fixed commit": "9792182b2c42bf9be9eebf5e6d6bfd08324ff375", "Url": "https://api.github.com/repos/jordaniellis/Blot", "Date": "2015-01-31T19:03:51Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((null != dcRatio) && (dcRatio > 0)) { newList.add(new com.alibaba.rocketmq.common.Pair<java.lang.String, java.lang.Float>(keyValue[0], dcRatio)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/4384/buggy-version/rocketmq-client.src.main.java.com.alibaba.rocketmq.client.producer.selector.SelectMessageQueueByDataCenter.java", "BodyUseAPI": ["java.util.List<com.alibaba.rocketmq.common.Pair<java.lang.String, java.lang.Float>>.add(com.alibaba.rocketmq.common.Pair<java.lang.String, java.lang.Float>)"], "Fixed commit": "40a674bd949ebc4d5cd035571f90fcfe3d6803b0", "Url": "https://api.github.com/repos/lizhanhui/Alibaba_RocketMQ", "Date": "2014-12-16T04:09:22Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.net.ConnectivityManager.getNetworkInfo(ConnectivityManager.TYPE_WIFI)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (wifiNetworkInfo.isConnected()) { if (!(mGuestFirstConnectted)) { java.lang.String apaddr = getWifiUtils().getAPAddress(); android.util.Log.i(com.tieto.crterminal.ui.TAG, apaddr); mGuestFirstConnectted = true; try { mGuestPlayer.ConnectToHost(apaddr); } catch (java.lang.Exception e) { android.util.Log.e(\"GameActivity\", e.getMessage()); } mGuestPlayer.joinGame(); } }else { mGuestFirstConnectted = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/6441/buggy-version/src.com.tieto.crterminal.ui.GuestGameActivity.java", "BodyUseAPI": [], "Fixed commit": "54fbaf291e71195f8a7b07992755e9aaa45baca9", "Url": "https://api.github.com/repos/miflysky/CRTerminal", "Date": "2015-10-16T01:13:22Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isXposed()) { de.robv.android.xposed.XposedBridge.log(\"GetNumber failed, using cached location.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/9225/buggy-version/app.src.main.java.com.github.spezifisch.threestepsahead.SettingsStorage.java", "BodyUseAPI": [], "Fixed commit": "97303b42e168974534a7eba8a9fe04de97ed0e30", "Url": "https://api.github.com/repos/spezifisch/ThreeStepsAhead", "Date": "2016-08-20T19:15:15Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((battleField.getPlayer2()) == null) { battleField.setPlayer1(null); return response(true, 1016, \"Nobody else online.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/7443/buggy-version/src.main.java.br.unicap.cardgame.engine.BattleFieldController.java", "BodyUseAPI": ["br.unicap.cardgame.engine.BattleField.setPlayer1(<nulltype>)"], "Fixed commit": "f5738d8649d086559156167c2112dea63b7923ed", "Url": "https://api.github.com/repos/gcaraciolo/cardgame", "Date": "2016-04-25T03:36:48Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (leap.lang.Strings.isEmpty(error)) { return createTokenInfo(map); }else { if (!(response.is2xx())) { throw new leap.oauth2.webapp.OAuth2ResponseException(response.getStatus(), error, java.util.Objects.toString(map.get(\"error_description\"))); }else { throw new leap.oauth2.webapp.OAuth2InternalServerException((((\"Auth server response error '\" + error) + \"' : \") + (map.get(\"error_description\")))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/466/buggy-version/oauth2.webapp.src.main.java.leap.oauth2.webapp.token.DefaultTokenInfoLookup.java", "BodyUseAPI": [], "Fixed commit": "75cc1ff47300620e17430d3c77ca87caf6d89070", "Url": "https://api.github.com/repos/leapframework/framework", "Date": "2017-08-09T03:31:18Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((curLevel) == 3) { level = (rand.nextInt(20)) + 20; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/1052/buggy-version/Map.java", "BodyUseAPI": [], "Fixed commit": "ac5a557f1ad5dc62272514a665f17891dcf6848e", "Url": "https://api.github.com/repos/EnochPoon/100-The-Dream", "Date": "2016-01-15T00:52:47Z"},
{"Line": "=>339", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.kaazing.gateway.transport.TypedAttributeKey<org.kaazing.gateway.transport.http.DefaultHttpSession>.remove(org.kaazing.mina.core.session.IoSessionEx)", "org.kaazing.gateway.transport.http.HttpUtils.hasCloseHeader(httpSession.getReadHeaders(HttpHeaders.HEADER_CONNECTION))"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (connectionClose && (!(httpSession.isClosing()))) { httpSession.getProcessor().remove(httpSession); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/7167/buggy-version/transport.http.src.main.java.org.kaazing.gateway.transport.http.HttpConnector.java", "BodyUseAPI": ["httpSession.getProcessor().remove(org.kaazing.gateway.transport.http.DefaultHttpSession)", "org.kaazing.gateway.transport.http.DefaultHttpSession.getProcessor()"], "Fixed commit": "6446ca167d3c16c838666353e43e9bacda1acbb5", "Url": "https://api.github.com/repos/cmebarrow/gateway", "Date": "2016-02-06T02:48:07Z"},
{"Line": "=>385", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (st == null) return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/2328/buggy-version/src.by.mitchamador.XMLTV.java", "BodyUseAPI": [], "Fixed commit": "a47fc3180c663c46d8d424a1c36339b28b80036f", "Url": "https://api.github.com/repos/mitchamador/vXMLTV", "Date": "2017-06-13T17:59:52Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (type.getFullyQualifiedName().equals(java.util.Date.class.getName())) { s = org.jboss.errai.codegen.util.Stmt.nestedCall(new org.jboss.errai.codegen.TernaryStatement(org.jboss.errai.codegen.util.Bool.isNull(statement), org.jboss.errai.codegen.util.Stmt.load(\"\"), org.jboss.errai.codegen.util.Stmt.nestedCall(statement).invoke(\"toGMTString\"))); }else { s = org.jboss.errai.codegen.util.Stmt.nestedCall(new org.jboss.errai.codegen.TernaryStatement(org.jboss.errai.codegen.util.Bool.isNull(statement), org.jboss.errai.codegen.util.Stmt.load(\"\"), org.jboss.errai.codegen.util.Stmt.nestedCall(statement))); if (!(type.equals(org.jboss.errai.codegen.meta.MetaClassFactory.get(java.lang.String.class)))) { s = s.invoke(\"toString\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/848/buggy-version/errai-jaxrs.errai-jaxrs-client.src.main.java.org.jboss.errai.enterprise.rebind.TypeMarshaller.java", "BodyUseAPI": ["org.jboss.errai.codegen.meta.MetaClass.equals(org.jboss.errai.codegen.meta.MetaClassFactory.get(java.lang.String.class))"], "Fixed commit": "0df34def1f958083f0815952d030a77aa8fdaec7", "Url": "https://api.github.com/repos/mbarkley/errai", "Date": "2016-07-08T21:19:58Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.equals(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (invocandoFuncaoLeia) { geraCodigoParaFuncaoLeia(no, saida, visitor, opcoes); }else { saida.append(\"executar(new String[0])\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/2433/buggy-version/src.br.univali.portugol.nucleo.execucao.gerador.helpers.GeradorChamadaMetodo.java", "BodyUseAPI": [], "Fixed commit": "16a355f47377598cc337b030186f41e26c584e0f", "Url": "https://api.github.com/repos/UNIVALI-LITE-BACKUP/Portugol-Nucleo", "Date": "2017-08-15T12:10:55Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.util.Map>.get(this.getTypeClass().getName())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (complexType != null) { required = ((java.lang.Boolean) (complexTypes.get(pd.getName()).get(\"required\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/4067/buggy-version/src.main.java.org.jrubycxf.aegis.type.basic.XMLBeanTypeInfo.java", "BodyUseAPI": [], "Fixed commit": "3915df1eda9a7f0650ab4b4eb6b9ffe47de3d9a0", "Url": "https://api.github.com/repos/claudemamo/jruby-cxf", "Date": "2013-08-12T10:47:06Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (attacking) switch (new java.util.Random().nextInt(6)) { case 0 : oldschool.scripts.NoobCrabs.NoobCrabs.status = \"Calling crab a punk.\"; break; case 1 : oldschool.scripts.NoobCrabs.NoobCrabs.status = \"Ruining crab's day.\"; break; case 2 : oldschool.scripts.NoobCrabs.NoobCrabs.status = \"Insulting crab's mom.\"; break; case 3 : oldschool.scripts.NoobCrabs.NoobCrabs.status = \"Fucking up crab.\"; break; case 4 : oldschool.scripts.NoobCrabs.NoobCrabs.status = \"Mugging crab.\"; break; case 5 : oldschool.scripts.NoobCrabs.NoobCrabs.status = \"Breaking crab's legs.\"; break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/2275/buggy-version/oldschool.scripts.NoobCrabs.Tasks.Find.java", "BodyUseAPI": [], "Fixed commit": "4a3173ebcf816e7d74789b72b7da0d61f3aedbe8", "Url": "https://api.github.com/repos/sippylabs/NoobScripts", "Date": "2015-10-18T14:00:42Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ctx.npcs.select().id(NoobCrabs.Rocks).within(NoobCrabs.location.area()).nearest().poll()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((ctx.players.local().tile().distanceTo(nearestRock)) > 1) { ctx.movement.step(nearestRock); org.powerbot.script.Condition.wait(new java.util.concurrent.Callable<java.lang.Boolean>() { @java.lang.Override public java.lang.Boolean call() throws java.lang.Exception { return (ctx.players.local().tile().distanceTo(ctx.movement.destination())) < 10; } }); }else if ((ctx.players.local().tile().distanceTo(nearestRock)) <= 1) { attacking = org.powerbot.script.Condition.wait(new java.util.concurrent.Callable<java.lang.Boolean>() { @java.lang.Override public java.lang.Boolean call() throws java.lang.Exception { return (ctx.players.local().inCombat()) || (nearestRock.inCombat()); } }, 200, 10); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/2275/buggy-version/oldschool.scripts.NoobCrabs.Tasks.Find.java", "BodyUseAPI": ["ctx.players.local().tile().distanceTo(org.powerbot.script.rt4.Npc)", "org.powerbot.script.rt4.Npc.inCombat()", "org.powerbot.script.Condition.wait(java.util.concurrent.Callable<java.lang.Boolean>,int,int)", "ctx.movement.step(org.powerbot.script.rt4.Npc)"], "Fixed commit": "4a3173ebcf816e7d74789b72b7da0d61f3aedbe8", "Url": "https://api.github.com/repos/sippylabs/NoobScripts", "Date": "2015-10-18T14:00:42Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == (nodeId)) { org.opendaylight.openflowplugin.impl.statistics.ofpspecific.SessionStatistics.countEvent(connectionAdapter.getRemoteAddress().toString(), SessionStatistics.ConnectionStatus.CONNECTION_DISCONNECTED_BY_DEVICE); }else { org.opendaylight.openflowplugin.impl.statistics.ofpspecific.SessionStatistics.countEvent(nodeId.toString(), SessionStatistics.ConnectionStatus.CONNECTION_DISCONNECTED_BY_DEVICE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/4642/buggy-version/openflowplugin-impl.src.main.java.org.opendaylight.openflowplugin.impl.connection.ConnectionContextImpl.java", "BodyUseAPI": [], "Fixed commit": "e0e41d84dbfef6110b8f410a48b4fd63891a3090", "Url": "https://api.github.com/repos/opendaylight/openflowplugin", "Date": "2015-06-09T13:16:55Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == (nodeId)) { org.opendaylight.openflowplugin.impl.statistics.ofpspecific.SessionStatistics.countEvent(connectionAdapter.getRemoteAddress().toString(), SessionStatistics.ConnectionStatus.CONNECTION_DISCONNECTED_BY_OFP); }else { org.opendaylight.openflowplugin.impl.statistics.ofpspecific.SessionStatistics.countEvent(nodeId.toString(), SessionStatistics.ConnectionStatus.CONNECTION_DISCONNECTED_BY_OFP); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/4642/buggy-version/openflowplugin-impl.src.main.java.org.opendaylight.openflowplugin.impl.connection.ConnectionContextImpl.java", "BodyUseAPI": [], "Fixed commit": "e0e41d84dbfef6110b8f410a48b4fd63891a3090", "Url": "https://api.github.com/repos/opendaylight/openflowplugin", "Date": "2015-06-09T13:16:55Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.tridentsdk.base.Substance.placeSound()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (soundEffectType != null) { net.tridentsdk.effect.sound.SoundEffect sound = location.world().playSound(soundEffectType); sound.setPosition(location); sound.apply(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/8226/buggy-version/src.main.java.net.tridentsdk.server.packets.play.in.PacketPlayInBlockPlace.java", "BodyUseAPI": ["location.world().playSound(net.tridentsdk.effect.sound.SoundEffectType)"], "Fixed commit": "5a9c8e8540b7ecaab6fbbd86ee8c972eda7ac064", "Url": "https://api.github.com/repos/TridentSDK/Trident", "Date": "2015-08-04T05:08:25Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["player.heldItem().type()", "net.tridentsdk.server.netty.ClientConnection.player()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((substance.isFunctional()) && (!(player.isCrouching()))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/8226/buggy-version/src.main.java.net.tridentsdk.server.packets.play.in.PacketPlayInBlockPlace.java", "BodyUseAPI": [], "Fixed commit": "5a9c8e8540b7ecaab6fbbd86ee8c972eda7ac064", "Url": "https://api.github.com/repos/TridentSDK/Trident", "Date": "2015-08-04T05:08:25Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mLayoutManager.findFirstCompletelyVisibleItemPosition()) == 0) return; else { mPage += mLimit; mPresenter.getCourseList(mQuery, mPage, mLimit); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/3211/buggy-version/app.src.main.java.search.yazhou.com.courserasearch.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "ff2922aab011cbac7f770605d534ef59be5c8e53", "Url": "https://api.github.com/repos/incomingflyingbrick/course_search", "Date": "2016-11-01T06:50:02Z"},
{"Line": "=>2052", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isCloseIfPartiallyInvoiced())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/5157/buggy-version/de.metas.swat.de.metas.swat.base.src.main.java.de.metas.invoicecandidate.api.impl.InvoiceCandBL.java", "BodyUseAPI": [], "Fixed commit": "b2ffd7f77c9061aff0b55f8c8624a491a9f98578", "Url": "https://api.github.com/repos/metasfresh/metasfresh", "Date": "2016-06-27T11:44:51Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<Mate>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (temp1.doesCare()) { temp1.penalty(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/1590/buggy-version/java.MateChoice.java", "BodyUseAPI": ["Mate.penalty()"], "Fixed commit": "2a60683a5295d01211b9595c95bd964287f3136b", "Url": "https://api.github.com/repos/evanfrawley/Mate_Choice", "Date": "2015-12-08T09:59:48Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (y != 6) { mcval[y] = params[y]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/1590/buggy-version/java.MateChoiceClient.java", "BodyUseAPI": [], "Fixed commit": "2a60683a5295d01211b9595c95bd964287f3136b", "Url": "https://api.github.com/repos/evanfrawley/Mate_Choice", "Date": "2015-12-08T09:59:48Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.comphenix.protocol.reflect.FieldUtils.readField(java.lang.reflect.Field,java.lang.Object,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (value instanceof java.util.Collection) { trackedPlayers = ((java.util.Collection<?>) (value)); }else if (value instanceof java.util.Map) { trackedPlayers = ((java.util.Map<?, ?>) (value)).keySet(); }else { throw new java.lang.IllegalStateException((\"trackedPlayers field was an unknown type: expected Set or Map, but got \" + (value.getClass()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/4290/buggy-version/ProtocolLib.src.main.java.com.comphenix.protocol.injector.EntityUtilities.java", "BodyUseAPI": ["java.lang.Object.getClass()"], "Fixed commit": "a1899476176939e7beba7a158226145963835a0a", "Url": "https://api.github.com/repos/dmulloy2/ProtocolLib", "Date": "2016-02-16T20:43:23Z"},
{"Line": "=>333", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((newLine.toString().contains(\"E\")) && ((newLine.toString().charAt(((newLine.indexOf(\"E\")) + 1))) != '-')) && ((java.lang.Integer.parseInt(newLine.toString().substring(((newLine.indexOf(\"E\")) + 1), newLine.length()))) <= 15)) { return java.lang.String.format(\"%.0f\", java.lang.Double.parseDouble(newLine.toString().replace(' ', '\\u0000'))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/4939/buggy-version/app.src.main.java.com.davidsgk.microcalc.MainActivity.java", "BodyUseAPI": ["java.lang.Double.parseDouble(java.lang.String)", "java.lang.String.format(java.lang.String,double)", "java.lang.StringBuilder.toString()", "java.lang.String.replace(char,char)"], "Fixed commit": "9155efd187e01121af40308f751d4c6d19b23ca7", "Url": "https://api.github.com/repos/DavidSGK/MicroCalc", "Date": "2016-01-05T05:19:18Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<java.lang.String>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (previous != \"\") previous += \" \";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/419/buggy-version/src.de.uni_hamburg.informatik.sep.zuul.server.befehle.BefehlFactory.java", "BodyUseAPI": [], "Fixed commit": "823fbb5d68a0a6bc613754dab9010b9b8b615de8", "Url": "https://api.github.com/repos/FlaShG/SEP12", "Date": "2012-09-24T11:06:07Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newBestBlockArrived) { org.blackcoinj.pos.Staker.log.info(\"block arrived\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/1646/buggy-version/core.src.main.java.org.blackcoinj.pos.Staker.java", "BodyUseAPI": [], "Fixed commit": "2e95eeb18fc7053606cba40a0e630f2f8c07b3c1", "Url": "https://api.github.com/repos/janko33bd/blackcoinj-petra", "Date": "2016-07-09T07:59:18Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(isPastLasTime(prevBlock, coinstakeTx))) && (!(isFutureTime(coinstakeTx)))) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/1646/buggy-version/core.src.main.java.org.blackcoinj.pos.Staker.java", "BodyUseAPI": [], "Fixed commit": "2e95eeb18fc7053606cba40a0e630f2f8c07b3c1", "Url": "https://api.github.com/repos/janko33bd/blackcoinj-petra", "Date": "2016-07-09T07:59:18Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (kk > 0) url = url.substring(0, kk);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/4945/buggy-version/source.java.mirc.delete.DeleteService.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "ecb44567761313b4250b9ac891a7a93aa4df9c86", "Url": "https://api.github.com/repos/johnperry/MIRC2", "Date": "2013-12-13T12:59:30Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mIsCheater) { setAnswerShown(); setAnswerShownResult(true); }else { setAnswerShownResult(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/3153/buggy-version/app.src.main.java.com.example.dell.geoquiz.CheatActivity.java", "BodyUseAPI": [], "Fixed commit": "4bb692271285681b1dca1797d498129b250a0865", "Url": "https://api.github.com/repos/yujue86/GeoQuiz.practice", "Date": "2015-11-02T07:10:07Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["WackaUML.MultiSelectionState.elementMouseEventAtPoint(java.awt.event.MouseEvent,WackaUML.DiagramController)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((temp == null) && (selected.isEmpty())) { start = e.getPoint(); return WackaUML.MultiSelectionState.getInstance(); }else if (!(selected.contains(temp))) { WackaUML.SelectionState.getInstance().setStart(start); WackaUML.SelectionState.getInstance().setSelected(temp); elementMouseEvent(e, false); selected.clear(); temp.setSelected(true); temp.dispatchEvent(e); return WackaUML.SelectionState.getInstance(); }else { elementMouseEvent(e, true); return WackaUML.MultiSelectionState.getInstance(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/3148/buggy-version/src.WackaUML.MultiSelectionState.java", "BodyUseAPI": ["Element.Element.dispatchEvent(java.awt.event.MouseEvent)", "WackaUML.SelectionState.getInstance().setSelected(Element.Element)", "Element.Element.setSelected(boolean)", "java.util.Set<Element.Element>.contains(Element.Element)", "java.util.Set<Element.Element>.clear()"], "Fixed commit": "9b935d30033b33cc480b702953922815838ba93c", "Url": "https://api.github.com/repos/Zedzap/WackaUML", "Date": "2014-04-25T21:56:49Z"},
{"Line": "=>983", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.dspace.discovery.configuration.DiscoveryConfiguration.getSearchSortConfiguration()", "org.dspace.app.xmlui.aspect.discovery.AbstractSearch.getParameterSortBy()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((currentSort == null) && ((searchSortConfiguration.getDefaultSort()) != null)) { currentSort = org.dspace.app.xmlui.aspect.discovery.SearchUtils.getSearchService().toSortFieldIndex(searchSortConfiguration.getDefaultSort().getMetadataField(), searchSortConfiguration.getDefaultSort().getType()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/3392/buggy-version/dspace-xmlui.src.main.java.org.dspace.app.xmlui.aspect.discovery.AbstractSearch.java", "BodyUseAPI": ["org.dspace.discovery.configuration.DiscoverySortConfiguration.getDefaultSort()", "searchSortConfiguration.getDefaultSort().getType()", "org.dspace.discovery.configuration.DiscoverySortConfiguration.getDefaultSort()", "org.dspace.app.xmlui.aspect.discovery.SearchUtils.getSearchService().toSortFieldIndex(searchSortConfiguration.getDefaultSort().getMetadataField(),searchSortConfiguration.getDefaultSort().getType())", "searchSortConfiguration.getDefaultSort().getMetadataField()"], "Fixed commit": "f5abc4051ca19c5c3e0d840f2300c33b184c1c3f", "Url": "https://api.github.com/repos/akinom/DSpace", "Date": "2015-01-13T15:04:26Z"},
{"Line": "=>993", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.dspace.app.xmlui.aspect.discovery.AbstractSearch.getParameterOrder()", "org.dspace.discovery.configuration.DiscoveryConfiguration.getSearchSortConfiguration()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((sortOrder == null) && ((searchSortConfiguration.getDefaultSortOrder()) != null)) { sortOrder = searchSortConfiguration.getDefaultSortOrder().name(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/3392/buggy-version/dspace-xmlui.src.main.java.org.dspace.app.xmlui.aspect.discovery.AbstractSearch.java", "BodyUseAPI": ["searchSortConfiguration.getDefaultSortOrder().name()", "org.dspace.discovery.configuration.DiscoverySortConfiguration.getDefaultSortOrder()"], "Fixed commit": "f5abc4051ca19c5c3e0d840f2300c33b184c1c3f", "Url": "https://api.github.com/repos/akinom/DSpace", "Date": "2015-01-13T15:04:26Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.appwidget.AppWidgetManager.getAppWidgetInfo(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((context == null) || (appInfo == null)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/8015/buggy-version/16-bit-clock.src.com.lucasdnd.bitclock16.ClockProvider.java", "BodyUseAPI": [], "Fixed commit": "21abe07789e969c95d02a860083dae9b80a05a52", "Url": "https://api.github.com/repos/lucasdnd/16-bit-clock", "Date": "2014-12-03T20:46:04Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((index) == null) { throw new java.util.NoSuchElementException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/3455/buggy-version/08MyLinkedList.MyLinkedList.java", "BodyUseAPI": [], "Fixed commit": "04f0b86e9b170cde4a7a62dd8b0a0cdb2c5d5949", "Url": "https://api.github.com/repos/inSam/MKS22X-HW", "Date": "2016-03-24T16:28:58Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["AnyJson.convertToType(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((sample.payload.size) > 0) { if (SubscribeToOpenChannel.repos.containsKey(repository)) { SubscribeToOpenChannel.repos.put(repository, new DataCount(SubscribeToOpenChannel.repos.get(repository), 0, sample.payload.size)); }else { SubscribeToOpenChannel.repos.put(repository, new DataCount(sample.payload.size, 0, 0, 0)); } Actor actor = sample.actor; if (SubscribeToOpenChannel.users.containsKey(actor)) { SubscribeToOpenChannel.users.put(actor, new DataCount(SubscribeToOpenChannel.users.get(repository), 0, sample.payload.size)); }else { SubscribeToOpenChannel.users.put(actor, new DataCount(sample.payload.size, 0, 0, 0)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/2357/buggy-version/src.main.java.SubscribeToOpenChannel.java", "BodyUseAPI": ["java.util.concurrent.ConcurrentHashMap<Repository, DataCount>.put(Repository,DataCount)", "java.util.concurrent.ConcurrentHashMap<Repository, DataCount>.put(Repository,DataCount)", "java.util.concurrent.ConcurrentHashMap<Actor, DataCount>.put(Actor,DataCount)", "java.util.concurrent.ConcurrentHashMap<Actor, DataCount>.put(Actor,DataCount)"], "Fixed commit": "7292dd9dcc708dc053be24a3cf3355fe50b4e2ce", "Url": "https://api.github.com/repos/sajjadshahi/github_events", "Date": "2017-07-31T13:10:51Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((alreadyDone && (!(extension))) && (speechBehavior != null)) && (menuBehavior != null)) { behavior = new edu.wpi.disco.rt.menu.Behavior(new edu.wpi.disco.rt.menu.SimpleCompoundBehavior(edu.wpi.disco.rt.menu.PrimitiveBehavior.nullBehavior(Resources.SPEECH), menuBehavior)); if (needsFocusResource) behavior = behavior.addFocusResource(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/308/buggy-version/core.discoRT.java.edu.wpi.disco.rt.menu.MenuTurnStateMachine.java", "BodyUseAPI": [], "Fixed commit": "3c71cba8ec53c2a6c8d42f63205340a972b1badd", "Url": "https://api.github.com/repos/always-on/always", "Date": "2013-10-09T18:54:18Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.getWhitespaceFollowedNode(com.puppycrawl.tools.checkstyle.api.DetailAST)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((whitespaceFollowedAst.getNextSibling()) == null) || ((whitespaceFollowedAst.getNextSibling().getType()) != (com.puppycrawl.tools.checkstyle.api.TokenTypes.ANNOTATIONS))) { final int whitespaceColumnNo = com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.getPositionAfter(whitespaceFollowedAst); final int whitespaceLineNo = whitespaceFollowedAst.getLineNo(); if (hasTrailingWhitespace(ast, whitespaceColumnNo, whitespaceLineNo)) { log(whitespaceLineNo, whitespaceColumnNo, com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.MSG_KEY, whitespaceFollowedAst.getText()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/2278/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.java", "BodyUseAPI": ["com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.log(int,int,java.lang.String,whitespaceFollowedAst.getText())", "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.getPositionAfter(com.puppycrawl.tools.checkstyle.api.DetailAST)", "com.puppycrawl.tools.checkstyle.api.DetailAST.getLineNo()", "com.puppycrawl.tools.checkstyle.api.DetailAST.getText()"], "Fixed commit": "ec4ab65f0f8b05c19366df2225bcd0870269f9c9", "Url": "https://api.github.com/repos/sergileon/checkstyle", "Date": "2017-09-05T11:43:02Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mListener) != null) mListener.onFragmentInteraction(\"\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/4432/buggy-version/axis_allies_calc.src.main.java.foss.devmapal.axis_allies_calc.axis_allies_calc.LandResultFragment.java", "BodyUseAPI": [], "Fixed commit": "fedd72029d18f791660d1434a380e25eda597d01", "Url": "https://api.github.com/repos/devmapal/axis_allies_battle_simulator", "Date": "2014-05-02T23:08:55Z"},
{"Line": "=>1922", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (variable == null) { addValidClassUses(\"\", result, request, clazz); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/5994/buggy-version/quorum.src.org.quorum.vm.implementation.QuorumVirtualMachine.java", "BodyUseAPI": [], "Fixed commit": "8c73ba8a29569cd0ac1a3d4d4e67b54b5d9131fa", "Url": "https://api.github.com/repos/rjnienaber/quorum-ci", "Date": "2013-08-26T04:11:40Z"},
{"Line": "=>1932", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (variable == null) { addPrimitiveValues(result); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/5994/buggy-version/quorum.src.org.quorum.vm.implementation.QuorumVirtualMachine.java", "BodyUseAPI": [], "Fixed commit": "8c73ba8a29569cd0ac1a3d4d4e67b54b5d9131fa", "Url": "https://api.github.com/repos/rjnienaber/quorum-ci", "Date": "2013-08-26T04:11:40Z"},
{"Line": "=>356", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["doordonote.ui.UI.getMinutes(java.util.Calendar)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (minutes != null) { if (hour == 0) { time = (((hour + 12) + \":\") + minutes) + \"am\"; }else { time = ((hour + \":\") + minutes) + \"am\"; } }else { if (hour == 0) { time = (hour + 12) + \"am\"; }else { time = hour + \"am\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/307/buggy-version/src.doordonote.ui.UI.java", "BodyUseAPI": [], "Fixed commit": "4cc82d8628d1af6e4df1d3eca1c05de85a1034c1", "Url": "https://api.github.com/repos/cyongrui/main", "Date": "2015-10-21T13:34:06Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["teammates.ui.controller.InstructorStudentCommentAddAction.getRequestParamAsBoolean(Const.ParamsNames.FROM_STUDENT_DETAILS_PAGE)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isFromStudentDetailsPage || isFromStudentRecordsPage) { teammates.common.util.Assumption.assertPostParamNotNull(Const.ParamsNames.STUDENT_EMAIL, studentEmail); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/1521/buggy-version/src.main.java.teammates.ui.controller.InstructorStudentCommentAddAction.java", "BodyUseAPI": [], "Fixed commit": "83cf5741c736795f82ebb6bcf606f825c1e27ad5", "Url": "https://api.github.com/repos/TEAMMATES/teammates", "Date": "2015-03-14T07:49:12Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((stack.getItem()) == (org.spongepowered.api.item.ItemTypes.NONE)) { clear(); return result.replace(org.spongepowered.common.item.inventory.util.ItemStackUtil.fromNative(old)).build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/4437/buggy-version/src.main.java.org.spongepowered.common.item.inventory.adapter.impl.slots.SlotAdapter.java", "BodyUseAPI": [], "Fixed commit": "ed50541e4e428c3d1abb66ca9ab5fe726aad8a74", "Url": "https://api.github.com/repos/ZephireNZ/SpongeCommon", "Date": "2016-04-28T16:22:38Z"},
{"Line": "=>916", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.mifosplatform.infrastructure.core.serialization.FromJsonHelper.extractLongNamed(java.lang.String,com.google.gson.JsonElement)", "org.mifosplatform.infrastructure.dataqueries.domain.RegisteredTableRepository.findOneByRegisteredTableName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((registeredTable != null) && (categoryId != null)) { registeredTable.updateCategory(categoryId.intValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/1763/buggy-version/mifosng-provider.src.main.java.org.mifosplatform.infrastructure.dataqueries.service.ReadWriteNonCoreDataServiceImpl.java", "BodyUseAPI": ["org.mifosplatform.infrastructure.dataqueries.domain.RegisteredTable.updateCategory(int)", "java.lang.Long.intValue()"], "Fixed commit": "e838a6fedf3f2eed9208d902a919794797e449b4", "Url": "https://api.github.com/repos/Musoni/mifosx", "Date": "2014-11-03T08:08:13Z"},
{"Line": "=>306", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.wpi.cs.wpisuitetng.modules.calendar.models.CalendarDataModel.getInstance().getCalendarData(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (calData == null) calData = new edu.wpi.cs.wpisuitetng.modules.calendar.models.CalendarData();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/5913/buggy-version/Calendar.src.edu.wpi.cs.wpisuitetng.modules.calendar.view.maintab.secondarytabs.CommitmentTab.java", "BodyUseAPI": [], "Fixed commit": "cd67d9700aa9950be0e2483d00bcf223f9c86417", "Url": "https://api.github.com/repos/magwitch324/wpi-suite", "Date": "2013-11-19T00:33:05Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getString(java.lang.String,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (summaryJSON == null) { for (java.lang.String key : coinSharedData.getAll().keySet()) { summaryJSON = coinSharedData.getString(key, \"\"); break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/4766/buggy-version/app.src.main.java.com.github.hintofbasil.hodl.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "e24ad89fcdf0e28fe240bc982a9bb98023d42338", "Url": "https://api.github.com/repos/hintofbasil/Hodl", "Date": "2017-08-19T21:05:51Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((visibleEncrypted) != null ? !(visibleEncrypted.equals(that.visibleEncrypted)) : (that.visibleEncrypted) != null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/2269/buggy-version/src.main.java.RelationProfileTreeBuilder.RelationProfile.java", "BodyUseAPI": [], "Fixed commit": "8755b8d9cb120ad2c3497a56d845c43d064bb522", "Url": "https://api.github.com/repos/V4c0n/Spark_Catalyst_Customization_for_Distributed_Systems", "Date": "2017-03-09T17:02:20Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((visiblePlaintext) != null ? !(visiblePlaintext.equals(that.visiblePlaintext)) : (that.visiblePlaintext) != null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/2269/buggy-version/src.main.java.RelationProfileTreeBuilder.RelationProfile.java", "BodyUseAPI": [], "Fixed commit": "8755b8d9cb120ad2c3497a56d845c43d064bb522", "Url": "https://api.github.com/repos/V4c0n/Spark_Catalyst_Customization_for_Distributed_Systems", "Date": "2017-03-09T17:02:20Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(o instanceof RelationProfileTreeBuilder.RelationProfile)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/2269/buggy-version/src.main.java.RelationProfileTreeBuilder.RelationProfile.java", "BodyUseAPI": [], "Fixed commit": "8755b8d9cb120ad2c3497a56d845c43d064bb522", "Url": "https://api.github.com/repos/V4c0n/Spark_Catalyst_Customization_for_Distributed_Systems", "Date": "2017-03-09T17:02:20Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this) == o) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/2269/buggy-version/src.main.java.RelationProfileTreeBuilder.RelationProfile.java", "BodyUseAPI": [], "Fixed commit": "8755b8d9cb120ad2c3497a56d845c43d064bb522", "Url": "https://api.github.com/repos/V4c0n/Spark_Catalyst_Customization_for_Distributed_Systems", "Date": "2017-03-09T17:02:20Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((implicitEncrypted) != null ? !(implicitEncrypted.equals(that.implicitEncrypted)) : (that.implicitEncrypted) != null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/2269/buggy-version/src.main.java.RelationProfileTreeBuilder.RelationProfile.java", "BodyUseAPI": [], "Fixed commit": "8755b8d9cb120ad2c3497a56d845c43d064bb522", "Url": "https://api.github.com/repos/V4c0n/Spark_Catalyst_Customization_for_Distributed_Systems", "Date": "2017-03-09T17:02:20Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((implicitPlaintext) != null ? !(implicitPlaintext.equals(that.implicitPlaintext)) : (that.implicitPlaintext) != null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/2269/buggy-version/src.main.java.RelationProfileTreeBuilder.RelationProfile.java", "BodyUseAPI": [], "Fixed commit": "8755b8d9cb120ad2c3497a56d845c43d064bb522", "Url": "https://api.github.com/repos/V4c0n/Spark_Catalyst_Customization_for_Distributed_Systems", "Date": "2017-03-09T17:02:20Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (forwardButton.isPressed()) transportationHandler.postDelayed(forwardRunnable, net.alliknow.podcatcher.view.fragments.PlayerFragment.TRANSPORT_DELAY);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/8776/buggy-version/src.net.alliknow.podcatcher.view.fragments.PlayerFragment.java", "BodyUseAPI": [], "Fixed commit": "df3d0f4b46c13f15653727a1a91d9621755a77d8", "Url": "https://api.github.com/repos/salema/PodCatcher-Deluxe-Android", "Date": "2014-01-03T13:45:42Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rewindButton.isPressed()) transportationHandler.postDelayed(rewindRunnable, net.alliknow.podcatcher.view.fragments.PlayerFragment.TRANSPORT_DELAY);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/8776/buggy-version/src.net.alliknow.podcatcher.view.fragments.PlayerFragment.java", "BodyUseAPI": [], "Fixed commit": "df3d0f4b46c13f15653727a1a91d9621755a77d8", "Url": "https://api.github.com/repos/salema/PodCatcher-Deluxe-Android", "Date": "2014-01-03T13:45:42Z"},
{"Line": "=>321", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mWatchActivityList.isEmpty()) { return new com.kidsdynamic.swing.androidswingapp.WatchActivity(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/981/buggy-version/app.src.main.java.com.kidsdynamic.swing.androidswingapp.WatchOperator.java", "BodyUseAPI": [], "Fixed commit": "a4855fb2f8120a60027cef919c5c4e9644cd09c0", "Url": "https://api.github.com/repos/kidsdynamic/AndroidSwingApp", "Date": "2017-03-03T15:07:47Z"},
{"Line": "=>646", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getHour()) >= 12) { tempCalendar.set(java.util.Calendar.AM_PM, java.util.Calendar.PM); }else { tempCalendar.set(java.util.Calendar.AM_PM, java.util.Calendar.AM); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/8155/buggy-version/PlanningPoker.src.edu.wpi.cs.wpisuitetng.modules.planningpoker.view.CreateGameInfoPanel.java", "BodyUseAPI": [], "Fixed commit": "ac6b000f5a7a19845ac1f19f09f662f82bf70b68", "Url": "https://api.github.com/repos/zoccihedron/wpi-suite", "Date": "2014-04-07T18:38:58Z"},
{"Line": "=>564", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.currTrail) != null) { this.currTrail.setVisible(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/8258/buggy-version/src.model.WorldMap.java", "BodyUseAPI": [], "Fixed commit": "eac95b0cb334ac5ec6b810b489d1a5c31fca27d3", "Url": "https://api.github.com/repos/Tanner/Oregon-Trail", "Date": "2011-11-11T05:03:06Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (wholeWords) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/4061/buggy-version/src.main.java.org.jchmlib.ChmIndexSearcher.java", "BodyUseAPI": [], "Fixed commit": "fb26f22da297afa8cae61463d9bb7d3fb7a76f67", "Url": "https://api.github.com/repos/chimenchen/jchmlib", "Date": "2017-08-02T04:34:37Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (boltN >= (boltsName.size())) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/8358/buggy-version/Documents.workspace-sts-3.7.3.RELEASE.RLStormTesi.src.rl.executer.ExecutorsChange.java", "BodyUseAPI": [], "Fixed commit": "ff1a5234de9ed1f7040ac8bdbab2428c3245fda2", "Url": "https://api.github.com/repos/paridee/StormReinforcementLearning", "Date": "2016-07-07T20:51:36Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (other == (this)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/672/buggy-version/src.main.java.seedu.task.model.task.ReadOnlyTask.java", "BodyUseAPI": [], "Fixed commit": "b18418868f84da31a91091d3ee03720eb41dfdc3", "Url": "https://api.github.com/repos/CS2103JAN2017-T11-B4/main", "Date": "2017-03-15T09:32:35Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (x > width) { scale = width / x; }else if (y < height) { scale = height / y; }else { scale = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/789/buggy-version/export.PrintUtilities.java", "BodyUseAPI": [], "Fixed commit": "31980a565851c7de52b6393d6f9b3ce4ff1448d3", "Url": "https://api.github.com/repos/coderch/PILS", "Date": "2017-06-06T09:38:23Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((adapter) != null) adapter.rebuild();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/4950/buggy-version/app.src.main.java.ca.marklauman.dominionpicker.rules.FragmentRules.java", "BodyUseAPI": [], "Fixed commit": "1e28022b1dd12bda11f0e99994e8536da1aea764", "Url": "https://api.github.com/repos/Mark-Lauman/DominionPicker", "Date": "2016-02-05T23:55:24Z"},
{"Line": "=>477", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.Integer.MAX_VALUE) == endCommentMarkIndex) { return sql; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/3514/buggy-version/src.main.java.com.microsoft.sqlserver.jdbc.SQLServerParameterMetaData.java", "BodyUseAPI": [], "Fixed commit": "0db793fb11acf3ed1a2bab4f15c6d5a30942a2c8", "Url": "https://api.github.com/repos/v-PATHngs/mssql-jdbc-PATHngs", "Date": "2017-06-21T20:53:46Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((provider) != null) { mLocation = mLocationManager.getLastKnownLocation(provider); mLocationManager.requestLocationUpdates(provider, 5000, 1, locationListener); tvLocation = ((android.widget.TextView) (findViewById(R.id.note_location))); if ((mLocation) != null) { showLocation(mLocation); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/875/buggy-version/app.src.main.java.com.ggccnu.tinynote.view.WriteNoteActivity.java", "BodyUseAPI": [], "Fixed commit": "c8168a28be8567b27f3bec68f3612024781a2d09", "Url": "https://api.github.com/repos/gougouccnu/Tiny-note", "Date": "2017-01-29T12:48:38Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.GregorianCalendar.clone()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((nextCheckTime == null) || (delayTime.after(nextCheckTime))) return delayTime;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/454/buggy-version/src.main.java.com.daveoxley.cnery.scenes.SceneActionSchedule.java", "BodyUseAPI": [], "Fixed commit": "62c1d418fb8f983a5f6d4edecb0c248b610b42ea", "Url": "https://api.github.com/repos/cnery/cnery", "Date": "2013-07-14T15:19:47Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isSized())) { listener.updateTargetException(this, SweeperTargetAction.COMPUTE_HASH, new gg.pistol.sweeper.core.SweeperException(\"Cannot compute hash as the size operation failed\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/6313/buggy-version/src.main.java.gg.pistol.sweeper.core.SweeperTargetImpl.java", "BodyUseAPI": [], "Fixed commit": "ad9919d3ba8c7e1734084070f0b7543700b2a2b1", "Url": "https://api.github.com/repos/bogdanu/sweeper", "Date": "2012-05-28T14:20:40Z"},
{"Line": "=>341", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((evt.getSource()) == (getGraphicalRepresentation())) { if ((!(evt.getPropertyName().equals(GraphicalRepresentation.Parameters.isFocused.name()))) && (!(evt.getPropertyName().equals(GraphicalRepresentation.Parameters.isSelected.name())))) { setChanged(); } }else { update(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/578/buggy-version/flexodesktop.model.flexofoundation.src.main.java.org.openflexo.foundation.view.ViewElement.java", "BodyUseAPI": ["java.beans.PropertyChangeEvent.getPropertyName()", "java.lang.String.equals(GraphicalRepresentation.Parameters.isFocused.name())", "java.lang.String.equals(GraphicalRepresentation.Parameters.isSelected.name())", "java.beans.PropertyChangeEvent.getPropertyName()"], "Fixed commit": "07b63e2ed7b18f2e76121ecf75d21afee3f57244", "Url": "https://api.github.com/repos/agilebirds/openflexo", "Date": "2012-04-16T15:21:02Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((httpInfo) != null) { httpInfo.setFromCache(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/2596/buggy-version/okhttp3.src.main.java.com.okhttplib.helper.BaseHelper.java", "BodyUseAPI": [], "Fixed commit": "3e1fc2f36ccec743faf3919bf8c546d78f0a3eea", "Url": "https://api.github.com/repos/MrZhousf/OkHttp3", "Date": "2017-12-29T10:03:02Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((workingDir) == \"1\") { java.lang.System.out.println(\"message handled.\"); }else { try { org.eclipse.jgit.storage.file.FileRepositoryBuilder builder = new org.eclipse.jgit.storage.file.FileRepositoryBuilder(); org.eclipse.jgit.lib.Repository localRepo = builder.setGitDir(new java.io.File(((workingDir) + \"/.git\"))).readEnvironment().findGitDir().build(); org.eclipse.jgit.api.Git git = new org.eclipse.jgit.api.Git(localRepo); git.add().addFilepattern(\".\").call(); git.commit().setMessage(commitMessage).call(); git.close(); } catch (java.lang.Exception e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/446/buggy-version/src.org.eclipse.commitplugin.actions.SampleAction.java", "BodyUseAPI": ["org.eclipse.jgit.storage.file.FileRepositoryBuilder.setGitDir(java.io.File)", "builder.setGitDir(new java.io.File(((workingDir) + \"/.git\"))).readEnvironment().findGitDir()", "builder.setGitDir(new java.io.File(((workingDir) + \"/.git\"))).readEnvironment()", "builder.setGitDir(new java.io.File(((workingDir) + \"/.git\"))).readEnvironment().findGitDir().build()"], "Fixed commit": "55aa7dad467e8468b0f1d69cfddd6c497c5cc710", "Url": "https://api.github.com/repos/Splice09/EclipsePlugin", "Date": "2015-08-01T13:28:04Z"},
{"Line": "=>1014", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSearchView) != null) { outState.putBoolean(com.owncloud.android.ui.activity.FileDisplayActivity.KEY_IS_SEARCH_OPEN, (!(mSearchView.isIconified()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/4082/buggy-version/src.main.java.com.owncloud.android.ui.activity.FileDisplayActivity.java", "BodyUseAPI": [], "Fixed commit": "5d692864b917c11f5cd4126f7ac2e1385e96a4a6", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2017-01-23T10:00:13Z"},
{"Line": "=>820", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getHandler()) != null) { getHandler().postDelayed(new java.lang.Runnable() { @java.lang.Override public void run() { mDragHelper.smoothSlideViewTo(mMainView, mRectMainClose.left, mRectMainClose.top); android.support.v4.view.ViewCompat.postInvalidateOnAnimation(com.chauthai.swipereveallayout.SwipeRevealLayout.this); } }, com.chauthai.swipereveallayout.SwipeRevealLayout.DEAFULT_GLANCING_ANIMATION_PAUSE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/1662/buggy-version/swipe-reveal-layout.src.main.java.com.chauthai.swipereveallayout.SwipeRevealLayout.java", "BodyUseAPI": [], "Fixed commit": "ff40f91bcd773fb15ae9b12282c1ea54165b682e", "Url": "https://api.github.com/repos/hydrated/SwipeRevealLayout", "Date": "2017-06-20T08:58:57Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.awt.Shape.getBounds()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((bounds.width) > 1) || ((bounds.height) > 1)) { g2d.draw(shape); }else { g2d.fill(g2d.getStroke().createStrokedShape(shape)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/6253/buggy-version/modules.display.geotk-render2d.src.main.java.org.geotoolkit.display2d.style.renderer.DefaultPolygonSymbolizerRenderer.java", "BodyUseAPI": [], "Fixed commit": "d363adcadd02cb9f47c4dafe514806dd71124469", "Url": "https://api.github.com/repos/Geomatys/geotoolkit", "Date": "2015-01-19T09:50:22Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((apiUrl) != null) { github = org.kohsuke.github.GitHub.connectToEnterprise(apiUrl, resolvedUser, resolvedPassword); }else { github = org.kohsuke.github.GitHub.connectUsingPassword(resolvedUser, resolvedPassword); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/4482/buggy-version/src.main.java.org.jenkinsci.plugins.githubreleaseperformer.GitHubReleasePerformer.java", "BodyUseAPI": [], "Fixed commit": "f664abb75c1ca28c577766e59fb01b421a31350a", "Url": "https://api.github.com/repos/Ontotext-AD/perform-github-release-plugin", "Date": "2015-08-04T06:26:02Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((preferredLanguages == null) || (preferredLanguages.isEmpty())) { preferredLanguages = org.primeframework.email.service.FileSystemEmailTemplateLoader.EMPTY_LOCALES; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/6403/buggy-version/src.main.java.org.primeframework.email.service.FileSystemEmailTemplateLoader.java", "BodyUseAPI": [], "Fixed commit": "eeff952a2369ef5130fdf4415e639898a32affe2", "Url": "https://api.github.com/repos/prime-framework/prime-email", "Date": "2015-11-20T20:06:37Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.osmand.plus.download.DownloadActivity.getSupportFragmentManager()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((manager.findFragmentByTag(tag)) == null) { getSupportFragmentManager().beginTransaction().add(R.id.layout, f, tag).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/3855/buggy-version/OsmAnd.src.net.osmand.plus.download.DownloadActivity.java", "BodyUseAPI": ["getSupportFragmentManager().beginTransaction().add(R.id.layout, f, tag).commit()", "getSupportFragmentManager().beginTransaction().add(R.id.layout,android.support.v4.app.Fragment,java.lang.String)"], "Fixed commit": "29472a0a3a22e34c1916c79737f00aa5d677f40c", "Url": "https://api.github.com/repos/Bars107/Osmand", "Date": "2014-12-22T15:56:55Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fieldDefinition.type) == (MiruFieldDefinition.Type.nonIndexed)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/3720/buggy-version/code.com.jivesoftware.os.miru.miru-service.src.main.java.com.jivesoftware.os.miru.service.stream.MiruIndexFieldValues.java", "BodyUseAPI": [], "Fixed commit": "7d100a60255e9c9232d22514be4464977d75cd3e", "Url": "https://api.github.com/repos/jivesoftware/miru", "Date": "2015-02-19T16:33:37Z"},
{"Line": "=>622", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (bitmapImage != null) { bitmapImage = org.inaturalist.android.ImageUtils.rotateAccordingToOrientation(bitmapImage, mFilename); bitmapImage = org.inaturalist.android.ImageUtils.centerCropBitmap(bitmapImage); bitmapImage = org.inaturalist.android.ImageUtils.getRoundedCornerBitmap(bitmapImage); mObservationThumbnails.put(mFilename, bitmapImage); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/2395/buggy-version/iNaturalist.src.main.java.org.inaturalist.android.ObservationCursorAdapter.java", "BodyUseAPI": ["org.inaturalist.android.ImageUtils.rotateAccordingToOrientation(android.graphics.Bitmap,java.lang.String)"], "Fixed commit": "33a09ff4e362a25d4805697b506d46b0728b547a", "Url": "https://api.github.com/repos/inaturalist/iNaturalistAndroid", "Date": "2016-11-04T21:13:58Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((findViewById(R.id.details_container)) == null) { if (mainFragment instanceof sakethkaparthi.moviesapp.fragments.MovieDetailsFragment) getSupportFragmentManager().beginTransaction().replace(R.id.frame_container, sakethkaparthi.moviesapp.fragments.MovieDetailsFragment.newInstance()).commit(); else getSupportFragmentManager().beginTransaction().replace(R.id.frame_container, sakethkaparthi.moviesapp.fragments.ReviewsFragment.newInstance(sakethkaparthi.moviesapp.activities.ContainerActivity.id)).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/5985/buggy-version/app.src.main.java.sakethkaparthi.moviesapp.activities.ContainerActivity.java", "BodyUseAPI": [], "Fixed commit": "0dfce966f98f49f370b168ab3901f1ad7c74ddab", "Url": "https://api.github.com/repos/sakethkaparthi/Android-Nanodegree-Project-1", "Date": "2016-03-21T17:27:23Z"},
{"Line": "=>353", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (location != null) { android.util.Log.w(com.mac.SafeWalk.HomeScreenActivity.class.toString(), \"Location is null\"); new com.mac.SafeWalk.GetAddressTask(context).execute(location); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/8635/buggy-version/src.com.mac.SafeWalk.HomeScreenActivity.java", "BodyUseAPI": ["com.mac.SafeWalk.GetAddressTask.execute(android.location.Location)"], "Fixed commit": "40990098e2c4fc1fed6db7fd2aada22a0b7a6908", "Url": "https://api.github.com/repos/SafeWalk/SafeWalk", "Date": "2014-05-02T22:06:26Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.gmail.charleszq.picorner.ui.PhotoGridFragment.getActivity()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((act != null) && ((mCurrentCommand) == null)) { act.loadDefaultPhotoList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/7600/buggy-version/UniversalPhotoStudio.src.com.gmail.charleszq.picorner.ui.PhotoGridFragment.java", "BodyUseAPI": ["com.gmail.charleszq.picorner.ui.MainSlideMenuActivity.loadDefaultPhotoList()"], "Fixed commit": "20167ad01ae2710216c74bab5f2768d73929336e", "Url": "https://api.github.com/repos/yuyang226/UniversalPhotoStudio", "Date": "2013-01-08T03:52:11Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getTimeInMillis()) < (java.lang.System.currentTimeMillis())) alarmManager.set(AlarmManager.RTC_WAKEUP, ((getTimeInMillis()) + ((long) (8.64E7))), pendingIntent); else alarmManager.set(AlarmManager.RTC_WAKEUP, getTimeInMillis(), pendingIntent);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/4006/buggy-version/app.src.main.java.com.kludge.wakemeup.AlarmDetails.java", "BodyUseAPI": [], "Fixed commit": "4d2eaa6b6975929ab49e6b76f1ab8961566380fe", "Url": "https://api.github.com/repos/Syltaris/nusext-kludge", "Date": "2016-06-09T14:26:17Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isMapContainingMessage) { messageType = context.getTypeTable().getFullNameForElementType(field.getType().getMapValueField().getType()); }else { messageType = context.getTypeTable().getFullNameForElementType(field.getType()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/4203/buggy-version/src.main.java.com.google.api.codegen.transformer.ruby.RubyApiMethodParamTransformer.java", "BodyUseAPI": [], "Fixed commit": "1285c8c6454b68df5810ace64ff3157153ec71f9", "Url": "https://api.github.com/repos/landrito/toolkit", "Date": "2017-06-07T21:44:04Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((feedLimit) == 10) { menu.findItem(R.id.mnu10).setChecked(true); }else { menu.findItem(R.id.mnu25).setChecked(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/5474/buggy-version/Top10Downloader.app.src.main.java.com.cosmocoder.top10downloader.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "b447e8ba4b8db1a8ef3fb1790572a0eee02aa046", "Url": "https://api.github.com/repos/YWHo/Code_for_Android_Java_Development", "Date": "2017-06-08T11:25:31Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.os.Build.VERSION.SDK_INT) >= (android.os.Build.VERSION_CODES.M)) { hourOfDay = timeStart.getHour(); }else { hourOfDay = timeStart.getCurrentHour(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/3929/buggy-version/app.src.main.java.com.example.who.alarm.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "dcc7584f8cf27ede6896c6703567fbc2fe5319cb", "Url": "https://api.github.com/repos/samvgorode/alarm_grey_black", "Date": "2017-02-24T13:19:58Z"},
{"Line": "=>1410", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((main.AnimeIndex.getFansubList()) != null) util.window.AnimeInformation.fansubComboBox.setModel(new javax.swing.DefaultComboBoxModel(main.AnimeIndex.getFansubList()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/5653/buggy-version/src.util.window.AnimeInformation.java", "BodyUseAPI": [], "Fixed commit": "f383a4f71fc7fe0a58deae2f2c6ca17825c64994", "Url": "https://api.github.com/repos/MyAnimeManager/MyAnimeManager", "Date": "2015-11-07T20:46:51Z"},
{"Line": "=>443", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["model.IProductContainer.getItems(model.IProduct)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (c != null) items.addAll(c);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/2551/buggy-version/src.model.ProductContainer.java", "BodyUseAPI": ["java.util.Collection<model.IItem>.addAll(java.util.Collection<model.IItem>)"], "Fixed commit": "a5b16714fcaef40d1b20add229965ffac9cca94e", "Url": "https://api.github.com/repos/djhaskin987/snake", "Date": "2013-10-26T22:13:15Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jgll.regex.AutomatonOperations.moveTransition(nfa.getState(i),int)", "org.jgll.regex.AutomatonOperations.moveTransition(nfa.getState(j),int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((q1 == null) || (q2 == null)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/2008/buggy-version/src.org.jgll.regex.AutomatonOperations.java", "BodyUseAPI": [], "Fixed commit": "e21148b9b425f1fd0ad7a8cb459bd2b870a1f7d2", "Url": "https://api.github.com/repos/cwi-swat/iguana", "Date": "2014-01-05T16:37:14Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jgll.regex.AutomatonOperations.moveTransition(nfa.getState(j),int)", "org.jgll.regex.AutomatonOperations.moveTransition(nfa.getState(i),int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((q1.getId()) > (q2.getId())) { a = q1.getId(); b = q2.getId(); }else { a = q2.getId(); b = q1.getId(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/2008/buggy-version/src.org.jgll.regex.AutomatonOperations.java", "BodyUseAPI": ["org.jgll.regex.State.getId()", "org.jgll.regex.State.getId()", "org.jgll.regex.State.getId()", "org.jgll.regex.State.getId()"], "Fixed commit": "e21148b9b425f1fd0ad7a8cb459bd2b870a1f7d2", "Url": "https://api.github.com/repos/cwi-swat/iguana", "Date": "2014-01-05T16:37:14Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jgll.regex.AutomatonOperations.moveTransition(nfa.getState(j),int)", "org.jgll.regex.AutomatonOperations.moveTransition(nfa.getState(i),int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((q1.getId()) == (q2.getId())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/2008/buggy-version/src.org.jgll.regex.AutomatonOperations.java", "BodyUseAPI": [], "Fixed commit": "e21148b9b425f1fd0ad7a8cb459bd2b870a1f7d2", "Url": "https://api.github.com/repos/cwi-swat/iguana", "Date": "2014-01-05T16:37:14Z"},
{"Line": "=>12", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (convertedWinningMove.contains(\"draw\")) { return \"\u0395\u03af\u03bd\u03b1\u03b9 \u03b9\u03c3\u03bf\u03c0\u03b1\u03bb\u03af\u03b1!\"; }else { convertedWinningMove = \"Pa\u00edktis d\u00fdo\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/2894/buggy-version/src.main.game.Language.Greek.java", "BodyUseAPI": [], "Fixed commit": "2ef8c1b4c899804346c2928b9170f7181a25d327", "Url": "https://api.github.com/repos/Katerina-codes/rock_paper_scissors2", "Date": "2017-12-14T15:05:09Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (i != null) { java.lang.String name = Item.itemRegistry.getNameForObject(i); if ((name == null) || ((name.length()) == 0)) { BCLog.logger.error(((((\"Item \" + (i.getUnlocalizedName())) + \" (\") + (i.getClass().getName())) + \") has an empty registry name! This is a bug!\")); }else { sub.setString(\"name\", name); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/84/buggy-version/api.buildcraft.api.blueprints.MappingRegistry.java", "BodyUseAPI": ["Item.itemRegistry.getNameForObject(net.minecraft.item.Item)", "net.minecraft.item.Item.getUnlocalizedName()", "BCLog.logger.error(((((\"Item \" + (i.getUnlocalizedName())) + \" (\") + (i.getClass().getName())) + \") has an empty registry name! This is a bug!\"))", "net.minecraft.item.Item.getClass()", "i.getClass().getName()"], "Fixed commit": "d4b6be21b0cabcd14588d8d16394292bb56d54af", "Url": "https://api.github.com/repos/BuildCraft/BuildCraft", "Date": "2015-04-20T16:05:14Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (b != null) { java.lang.String name = Block.blockRegistry.getNameForObject(b); if ((name == null) || ((name.length()) == 0)) { BCLog.logger.error(((((\"Block \" + (b.getUnlocalizedName())) + \" (\") + (b.getClass().getName())) + \") has an empty registry name! This is a bug!\")); }else { sub.setString(\"name\", name); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/84/buggy-version/api.buildcraft.api.blueprints.MappingRegistry.java", "BodyUseAPI": ["net.minecraft.block.Block.getClass()", "b.getClass().getName()", "net.minecraft.block.Block.getUnlocalizedName()", "Block.blockRegistry.getNameForObject(net.minecraft.block.Block)", "BCLog.logger.error(((((\"Block \" + (b.getUnlocalizedName())) + \" (\") + (b.getClass().getName())) + \") has an empty registry name! This is a bug!\"))"], "Fixed commit": "d4b6be21b0cabcd14588d8d16394292bb56d54af", "Url": "https://api.github.com/repos/BuildCraft/BuildCraft", "Date": "2015-04-20T16:05:14Z"},
{"Line": "=>1463", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (devicePulled) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/7/buggy-version/src.device.rtl.RTL2832TunerController.java", "BodyUseAPI": [], "Fixed commit": "ab77b6c36ae3441441d467a9b6be339bd214f74d", "Url": "https://api.github.com/repos/ac2cz/FoxTelem", "Date": "2017-10-07T23:27:48Z"},
{"Line": "=>482", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (userMap == null) { userMap = getUserObjectData(traceId, sessionToken); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/1206/buggy-version/src.main.java.org.gooru.insights.services.ItemServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "b296291b8deae635f8d9301bb7a491631d29cb75", "Url": "https://api.github.com/repos/GooruAdmin/insights-reports", "Date": "2015-05-18T13:31:30Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isTryAgain) { cal.setInputExpression(input); java.lang.System.out.println(((\"Result:\\n\" + (cal.execute())) + \"\\n\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/7959/buggy-version/src.cal.Calculator.java", "BodyUseAPI": [], "Fixed commit": "8c67bd63c233e43e0f1b3a232353e1945c471c34", "Url": "https://api.github.com/repos/shinypichu88/CS3343-Cal", "Date": "2014-09-18T19:19:19Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((parent) != null) return parent.checkTimeout();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/6434/buggy-version/core.src.main.java.com.orientechnologies.orient.core.command.OBasicCommandContext.java", "BodyUseAPI": [], "Fixed commit": "9dcf98dc155d9c97f5d760fcd02446fbe49c4f7e", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2014-12-16T23:59:11Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.lang.String, com.liferay.portal.kernel.util.StringBundler>.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((sb.index()) == 0) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/7544/buggy-version/portal-impl.src.com.liferay.portal.tools.samplesqlbuilder.SampleSQLBuilder.java", "BodyUseAPI": [], "Fixed commit": "4dc9086d35875a8685e765ffc3b6a1ae4e8b3523", "Url": "https://api.github.com/repos/matthewkong/liferay-portal", "Date": "2013-08-08T07:00:03Z"}]}
