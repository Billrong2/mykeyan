{"UNKNOWN to If":[{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((address) instanceof java.net.InetSocketAddress) { if (\"0.0.0.0\".equals(((java.net.InetSocketAddress) (address)).getAddress().getHostAddress())) { java.lang.System.out.println((\"Unbind the server address \" + (acceptor.getLocalAddresses()))); acceptor.unbind(acceptor.getLocalAddresses()); }else { acceptor.unbind(address); } }else { acceptor.unbind(address); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/4625/buggy-version/components.camel-mina2.src.main.java.org.apache.camel.component.mina2.Mina2Consumer.java", "BodyUseAPI": [], "Fixed commit": "737cf43823e6648fe615fcad019ba566d31c4928", "Url": "https://api.github.com/repos/stalet/camel", "Date": "2014-12-22T00:49:14Z"},
{"Line": "=>403", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((properties) != null) { java.util.HashMap m = new java.util.HashMap(); m.putAll(properties); clone.setProperties(m); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/1733/buggy-version/src.main.java.net.sf.jmimemagic.MagicMatch.java", "BodyUseAPI": [], "Fixed commit": "7e4d274c8424708b8d5effc2176dd26eebf2a533", "Url": "https://api.github.com/repos/Qnerd/jmimemagic", "Date": "2013-11-14T08:56:22Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((gruppe3.convoy.functionality.SingleTon.myLocation) != null) { SingleTon.myLocation.startLocationService(this); android.util.Log.d(\"Stedbestemmelse\", \"Starter stedbestemmelse.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/4826/buggy-version/app.src.main.java.gruppe3.convoy.Main.java", "BodyUseAPI": [], "Fixed commit": "a6af9794834d8df540ca748362c57557fe840893", "Url": "https://api.github.com/repos/SoftTech2018/Convoy", "Date": "2016-01-21T08:02:55Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getInventoryID(player)) == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/7518/buggy-version/src.com.github.tnerevival.core.InventoryManager.java", "BodyUseAPI": [], "Fixed commit": "f2a62c84d2b764af1763b222706c7b9b9a477421", "Url": "https://api.github.com/repos/TheNewEconomy/TNE-Bukkit", "Date": "2017-03-23T00:42:58Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (file != null) { dpfmanager.shell.modules.conformancechecker.core.ConformanceCheckerModel ccm = new dpfmanager.shell.modules.conformancechecker.core.ConformanceCheckerModel(); if (!(ccm.readConfig(file.getPath()))) { getContext().send(BasicConfig.MODULE_MESSAGE, new dpfmanager.shell.modules.messages.messages.AlertMessage(AlertMessage.Type.ERROR, dpfmanager.shell.core.DPFManagerProperties.getBundle().getString(\"errorReadingConfFile\"))); file = null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/4693/buggy-version/src.main.java.dpfmanager.shell.interfaces.gui.component.dessign.DessignController.java", "BodyUseAPI": ["dpfmanager.shell.modules.conformancechecker.core.ConformanceCheckerModel.readConfig(java.lang.String)", "java.io.File.getPath()"], "Fixed commit": "34fd5276683cf067333c85ce85976227e63490a3", "Url": "https://api.github.com/repos/EasyinnovaSL/DPFManager", "Date": "2016-09-21T08:56:21Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(nameDir.mkdirs())) { final java.lang.String errorMsg = \"unable to make directory: \" + nameDir; log.error(errorMsg); throw new org.apache.mesos.hdfs.executor.ExecutorException(errorMsg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/8313/buggy-version/src.main.java.org.apache.mesos.hdfs.executor.NameNodeExecutor.java", "BodyUseAPI": [], "Fixed commit": "47330dcffacddcba7e1e1017005c80b08034cb9c", "Url": "https://api.github.com/repos/kensipe/hdfs", "Date": "2015-03-16T18:02:31Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((message.getStatus()) == (javax.sound.midi.ShortMessage.NOTE_ON)) && ((message.getMessage()[2]) == 0)) { try { sm.setMessage(javax.sound.midi.ShortMessage.NOTE_OFF, sm.getChannel(), sm.getData1(), sm.getData2()); } catch (javax.sound.midi.InvalidMidiDataException e) { return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/3119/buggy-version/src.main.java.de.synesthesy.midi.MidiReceiver.java", "BodyUseAPI": [], "Fixed commit": "7e92858bfa266250ee786752620b7d1f2f94a938", "Url": "https://api.github.com/repos/DreamRocker/synesthesy-core", "Date": "2013-06-24T17:51:08Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(checkIfEditEmpty())) { hideKeyboard(); userID = 0; userName = etUserName.getText().toString(); checkIfEditEmpty(); showProgressDialog(this, \"Fetching Information\"); searchPatient(userName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/9076/buggy-version/app.src.main.java.ie.teamchile.smartapp.activities.CreateAppointmentActivity.java", "BodyUseAPI": [], "Fixed commit": "0a692538c89107408fc5b5266b1cfa380c6d5e17", "Url": "https://api.github.com/repos/otormaigh/SMART", "Date": "2015-06-24T15:37:23Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (status != null) this.status = status;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/3001/buggy-version/client.src.main.java.com.orientechnologies.orient.client.remote.OStorageRemote.java", "BodyUseAPI": [], "Fixed commit": "160b65bcbcaf6bb89c194f77a988a48bb9cc6474", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2014-02-05T17:32:18Z"},
{"Line": "=>784", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (volumeURIs != null) { initiators.addAll(_dbClient.queryObject(com.emc.storageos.db.client.model.Initiator.class, volumeURIs)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/4504/buggy-version/controllersvc.src.main.java.com.emc.storageos.volumecontroller.impl.smis.SmisStorageDevice.java", "BodyUseAPI": ["java.util.List<com.emc.storageos.db.client.model.Initiator>.addAll(_dbClient.queryObject(com.emc.storageos.db.client.model.Initiator.class, volumeURIs))", "com.emc.storageos.db.client.DbClient.queryObject(java.lang.Class,java.util.List<java.net.URI>)"], "Fixed commit": "bd54a5da3e69f572129120f32433496a35eae833", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-11-18T05:16:43Z"},
{"Line": "=>440", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(_tree.isCheckBoxEnabled(treePath))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/4688/buggy-version/src.com.jidesoft.swing.CheckBoxTree.java", "BodyUseAPI": [], "Fixed commit": "b7b8151b46206b99a93005948f7f523f17668b59", "Url": "https://api.github.com/repos/jidesoft/jide-oss", "Date": "2015-01-16T16:17:15Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(sender instanceof org.bukkit.entity.Player)) { sender.sendMessage(\"This command is for players only\"); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/7064/buggy-version/src.com.james137137.LimitedWorldEdit.LimitedWorldEdit.java", "BodyUseAPI": ["org.bukkit.command.CommandSender.sendMessage(java.lang.String)"], "Fixed commit": "0ca52be8a17f1c6b98bd8a322c78e7d31d9d36a9", "Url": "https://api.github.com/repos/James137137/LimitedWorldEdit", "Date": "2014-10-20T19:07:48Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isReadOnly())) { this.addValue(IspnStats.WR_TX_LOCAL_EXECUTION_TIME, ((java.lang.System.nanoTime()) - (this.initTime))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/382/buggy-version/core.src.main.java.org.infinispan.stats.LocalTransactionStatistics.java", "BodyUseAPI": [], "Fixed commit": "79eca2524f0fce4e77f21558ddabaad5f47da6b9", "Url": "https://api.github.com/repos/pruivo/infinispan", "Date": "2012-06-07T12:34:53Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(file.canRead())) { cool.ic.InitializeIntegrity.log.warn((\"Cannot read file : \" + (file.getAbsolutePath()))); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/5769/buggy-version/src.main.java.cool.ic.InitializeIntegrity.java", "BodyUseAPI": ["java.io.File.getAbsolutePath()", "org.apache.log4j.Logger.warn(java.lang.String)"], "Fixed commit": "3372c497e1a68603374029e12cfbebfd1a6f9709", "Url": "https://api.github.com/repos/kuleen-upadhyaya/Integrity-Checker-CmdLn", "Date": "2017-03-17T17:28:48Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cool.ic.checksum.CheckSum.getCheckSum(java.io.File)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (hashValue != null) { try { idb.insert(file.getAbsolutePath(), hashValue, file.length()); } catch (java.lang.Exception e) { cool.ic.InitializeIntegrity.log.error(\"Error while inserting record\", e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/5769/buggy-version/src.main.java.cool.ic.InitializeIntegrity.java", "BodyUseAPI": ["cool.ic.db.IntegrityDB.insert(java.lang.String,java.lang.String,long)"], "Fixed commit": "3372c497e1a68603374029e12cfbebfd1a6f9709", "Url": "https://api.github.com/repos/kuleen-upadhyaya/Integrity-Checker-CmdLn", "Date": "2017-03-17T17:28:48Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(hashtag.isEmpty())) { sb.append(hashtag.substring(0, 1)).append(hashtag.substring(1, 2).toUpperCase()).append(hashtag.substring(2)).append(\" \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/1654/buggy-version/app.src.main.java.com.clothapp.home.TopRatedAdapter.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.String.substring(int)", "java.lang.String.toUpperCase()"], "Fixed commit": "4a008551007bcafd8da8b3c519f19140af64f2df", "Url": "https://api.github.com/repos/ClothAppProject/ClothAppAndroid", "Date": "2016-03-09T21:51:47Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!hiraganaFound) { return phrases; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/5378/buggy-version/src.cscie99.team2.lingolearn.server.confuser.Confuser.java", "BodyUseAPI": [], "Fixed commit": "109c1e11748ed71196621d69607c8bc45a9cd0a4", "Url": "https://api.github.com/repos/lingolearn/lingolearn", "Date": "2014-04-22T00:38:45Z"},
{"Line": "=>385", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((files.size()) == 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/8192/buggy-version/components.formats-common.src.loci.common.Location.java", "BodyUseAPI": [], "Fixed commit": "397d7502278138e6ca86bf0af9164e5af6a35ad8", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2014-04-24T19:37:21Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(super.isSessionUserAdmin())) { this.exportUserDbId = super.getSessionUserId(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/3512/buggy-version/src.org.ag.timeline.presentation.action.ExportAction.java", "BodyUseAPI": ["org.ag.timeline.presentation.action.SecureBaseAction.getSessionUserId()"], "Fixed commit": "7b05f4b6034dd2bef77ea418191eef2e9c3cf2e8", "Url": "https://api.github.com/repos/excellentia/timeline", "Date": "2014-01-07T01:59:39Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (map != null) { targetClass = map.get(columnType.name); if (targetClass == null) { throw com.github.dyna4jdbc.internal.common.typeconverter.TypeConversionException.forMessage(\"Mapping to %s is not supported.\", columnType.name); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/302/buggy-version/src.main.java.com.github.dyna4jdbc.internal.common.typeconverter.impl.DefaultColumnHandler.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Class<?>>.get(columnType.name)"], "Fixed commit": "cc68427b9fb3234da7adc3981e76d4ff1a8c0dd2", "Url": "https://api.github.com/repos/peter-gergely-horvath/dyna4jdbc", "Date": "2016-07-23T19:42:52Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (targetClass == null) { targetClass = columnType.mappingClass; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/302/buggy-version/src.main.java.com.github.dyna4jdbc.internal.common.typeconverter.impl.DefaultColumnHandler.java", "BodyUseAPI": [], "Fixed commit": "cc68427b9fb3234da7adc3981e76d4ff1a8c0dd2", "Url": "https://api.github.com/repos/peter-gergely-horvath/dyna4jdbc", "Date": "2016-07-23T19:42:52Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["it.unimore.awd.ShadesAPI.OfyService.ofy().load().entity(newFloor).now()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (f != null) { it.unimore.awd.ShadesAPI.OfyService.ofy().delete().entity(f).now(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/4327/buggy-version/src.main.java.it.unimore.awd.ShadesAPI.FloorResource.java", "BodyUseAPI": ["it.unimore.awd.ShadesAPI.OfyService.ofy().delete().entity(it.unimore.awd.ShadesAPI.Classes.Floor)", "it.unimore.awd.ShadesAPI.OfyService.ofy().delete().entity(f).now()"], "Fixed commit": "504b87f7a43843a633de8dba1f1494f6c4eb704c", "Url": "https://api.github.com/repos/BrosDs/DomoShades_APIs", "Date": "2015-04-11T09:46:11Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.openapi.module.ModuleUtilCore.getExtension(com.intellij.psi.PsiDirectory,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (extension == null) { java.lang.Module moduleByPsiDirectory = org.mustbe.consulo.csharp.ide.actions.CreateCSharpFileAction.findModuleByPsiDirectory(dir.getProject(), dir); if (moduleByPsiDirectory != null) { extension = com.intellij.openapi.module.ModuleUtilCore.getExtension(moduleByPsiDirectory, org.mustbe.consulo.dotnet.module.extension.DotNetSimpleModuleExtension.class); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/7837/buggy-version/csharp-impl.src.org.mustbe.consulo.csharp.ide.actions.CreateCSharpFileAction.java", "BodyUseAPI": [], "Fixed commit": "aed6f8673dd39ba97433f2c2a12635e67d01da88", "Url": "https://api.github.com/repos/consulo/consulo-csharp", "Date": "2015-10-26T18:42:28Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.mustbe.consulo.csharp.ide.actions.CreateCSharpFileAction.findModuleByPsiDirectory(com.intellij.openapi.project.Project,com.intellij.psi.PsiDirectory)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (resolve != null) return resolve;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/7837/buggy-version/csharp-impl.src.org.mustbe.consulo.csharp.ide.actions.CreateCSharpFileAction.java", "BodyUseAPI": [], "Fixed commit": "aed6f8673dd39ba97433f2c2a12635e67d01da88", "Url": "https://api.github.com/repos/consulo/consulo-csharp", "Date": "2015-10-26T18:42:28Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["map.get(name).getImagePath(java.lang.String)", "map.get(name).getImageName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(imgPathFrom.equals(((((util.FileManager.getImageFolderPath()) + folder) + (java.io.File.separator)) + nomeImg)))) util.FileManager.moveImage(imgPathFrom, folder, nomeImg);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/4647/buggy-version/src.util.window.ExitSaveDialog.java", "BodyUseAPI": ["util.FileManager.moveImage(java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "9802edb95f80a1965bb92fc8dcc75f13e6668dce", "Url": "https://api.github.com/repos/MyAnimeManager/MyAnimeManager", "Date": "2015-08-08T16:19:00Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["map.get(name).getImagePath(java.lang.String)", "map.get(name).getImageName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(imgPathFrom.equals(((((util.FileManager.getImageFolderPath()) + folder) + (java.io.File.separator)) + nomeImg)))) util.FileManager.moveImage(imgPathFrom, folder, nomeImg);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/4647/buggy-version/src.util.window.ExitSaveDialog.java", "BodyUseAPI": ["util.FileManager.moveImage(java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "9802edb95f80a1965bb92fc8dcc75f13e6668dce", "Url": "https://api.github.com/repos/MyAnimeManager/MyAnimeManager", "Date": "2015-08-08T16:19:00Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["map.get(name).getImagePath(java.lang.String)", "map.get(name).getImageName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(imgPathFrom.equals(((((util.FileManager.getImageFolderPath()) + folder) + (java.io.File.separator)) + nomeImg)))) util.FileManager.moveImage(imgPathFrom, folder, nomeImg);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/4647/buggy-version/src.util.window.ExitSaveDialog.java", "BodyUseAPI": ["util.FileManager.moveImage(java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "9802edb95f80a1965bb92fc8dcc75f13e6668dce", "Url": "https://api.github.com/repos/MyAnimeManager/MyAnimeManager", "Date": "2015-08-08T16:19:00Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["map.get(name).getImagePath(java.lang.String)", "map.get(name).getImageName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(imgPathFrom.equals(((((util.FileManager.getImageFolderPath()) + folder) + (java.io.File.separator)) + nomeImg)))) util.FileManager.moveImage(imgPathFrom, folder, nomeImg);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/4647/buggy-version/src.util.window.ExitSaveDialog.java", "BodyUseAPI": ["util.FileManager.moveImage(java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "9802edb95f80a1965bb92fc8dcc75f13e6668dce", "Url": "https://api.github.com/repos/MyAnimeManager/MyAnimeManager", "Date": "2015-08-08T16:19:00Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.getParentFile()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(dir.exists())) { dir.mkdirs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/438/buggy-version/src.main.java.com.sk89q.commandbook.session.SessionComponent.java", "BodyUseAPI": ["java.io.File.mkdirs()"], "Fixed commit": "32ebb13c9966f9eb551831d9a8ba86212f2fddd1", "Url": "https://api.github.com/repos/sk89q/commandbook", "Date": "2014-04-16T06:04:37Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((font) != null) font.dispose();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/4293/buggy-version/rocc.core.src.main.java.edu.chl.rocc.core.view.screens.AbstractMenuView.java", "BodyUseAPI": [], "Fixed commit": "5bada8b741b087bb6ad7a7032f3268947b61d5df", "Url": "https://api.github.com/repos/BeardedGaku/jGroup-OOPProjekt", "Date": "2015-05-12T12:55:25Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((textureAtlas) != null) textureAtlas.dispose();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/4293/buggy-version/rocc.core.src.main.java.edu.chl.rocc.core.view.screens.AbstractMenuView.java", "BodyUseAPI": [], "Fixed commit": "5bada8b741b087bb6ad7a7032f3268947b61d5df", "Url": "https://api.github.com/repos/BeardedGaku/jGroup-OOPProjekt", "Date": "2015-05-12T12:55:25Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((skin) != null) skin.dispose();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/4293/buggy-version/rocc.core.src.main.java.edu.chl.rocc.core.view.screens.AbstractMenuView.java", "BodyUseAPI": [], "Fixed commit": "5bada8b741b087bb6ad7a7032f3268947b61d5df", "Url": "https://api.github.com/repos/BeardedGaku/jGroup-OOPProjekt", "Date": "2015-05-12T12:55:25Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((stage) != null) stage.dispose();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/4293/buggy-version/rocc.core.src.main.java.edu.chl.rocc.core.view.screens.AbstractMenuView.java", "BodyUseAPI": [], "Fixed commit": "5bada8b741b087bb6ad7a7032f3268947b61d5df", "Url": "https://api.github.com/repos/BeardedGaku/jGroup-OOPProjekt", "Date": "2015-05-12T12:55:25Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((backgroundTexture) != null) backgroundTexture.dispose();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/4293/buggy-version/rocc.core.src.main.java.edu.chl.rocc.core.view.screens.AbstractMenuView.java", "BodyUseAPI": [], "Fixed commit": "5bada8b741b087bb6ad7a7032f3268947b61d5df", "Url": "https://api.github.com/repos/BeardedGaku/jGroup-OOPProjekt", "Date": "2015-05-12T12:55:25Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (this.isComponentErrorHandlingSuppressed(slingRequest)) { com.adobe.acs.commons.wcm.impl.ComponentErrorHandlerImpl.log.debug(\"Suppressed component error handling for: {}\", slingRequest.getResource().getPath()); throw new javax.servlet.ServletException(ex); }else { this.handleError(slingResponse, slingRequest.getResource(), pathToHTML, ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/7842/buggy-version/bundle.src.main.java.com.adobe.acs.commons.wcm.impl.ComponentErrorHandlerImpl.java", "BodyUseAPI": ["slingRequest.getResource().getPath()", "org.apache.sling.api.SlingHttpServletRequest.getResource()", "org.slf4j.Logger.debug(java.lang.String,slingRequest.getResource().getPath())", "org.apache.sling.api.SlingHttpServletRequest.getResource()", "com.adobe.acs.commons.wcm.impl.ComponentErrorHandlerImpl.handleError(org.apache.sling.api.SlingHttpServletResponse,slingRequest.getResource(),java.lang.String,java.lang.Exception)"], "Fixed commit": "67b10d93bd29f8ea8bfd811d71fd4db1810c7a1b", "Url": "https://api.github.com/repos/tml/acs-aem-commons", "Date": "2014-03-12T01:41:11Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.adobe.acs.commons.wcm.impl.ComponentErrorHandlerImpl.isComponentErrorHandlingSuppressed(org.apache.sling.api.SlingHttpServletRequest)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (suppress) { this.suppressComponentErrorHandling(slingRequest); }else if (this.isComponentErrorHandlingSuppressed(slingRequest)) { com.adobe.acs.commons.wcm.impl.ComponentErrorHandlerImpl.log.debug(\"Removing suppression component error handling at: {}\", slingRequest.getResource().getPath()); this.allowComponentErrorHandling(slingRequest); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/7842/buggy-version/bundle.src.main.java.com.adobe.acs.commons.wcm.impl.ComponentErrorHandlerImpl.java", "BodyUseAPI": [], "Fixed commit": "67b10d93bd29f8ea8bfd811d71fd4db1810c7a1b", "Url": "https://api.github.com/repos/tml/acs-aem-commons", "Date": "2014-03-12T01:41:11Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.adobe.acs.commons.wcm.impl.ComponentErrorHandlerImpl.isComponentErrorHandlingSuppressed(org.apache.sling.api.SlingHttpServletRequest)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (suppress) { com.adobe.acs.commons.wcm.impl.ComponentErrorHandlerImpl.log.debug(\"Suppressing component error handling for: {}\", slingRequest.getResource().getPath()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/7842/buggy-version/bundle.src.main.java.com.adobe.acs.commons.wcm.impl.ComponentErrorHandlerImpl.java", "BodyUseAPI": [], "Fixed commit": "67b10d93bd29f8ea8bfd811d71fd4db1810c7a1b", "Url": "https://api.github.com/repos/tml/acs-aem-commons", "Date": "2014-03-12T01:41:11Z"},
{"Line": "=>364", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (quantity < 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/5913/buggy-version/Branchs.Trunk.CoffeeShop.src.com.luvsoft.MMI.order.OrderInfoView.java", "BodyUseAPI": [], "Fixed commit": "b8d2717b4208e00626d28d2c8d00cc397c9cfcd9", "Url": "https://api.github.com/repos/cuongvm-55/WebApplication", "Date": "2016-01-11T18:07:02Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mPdfSurfaceHolder) == null) || ((mPageRect) == null)) { return com.shockwave.pdfium.PdfView.NO_BORDER; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/5967/buggy-version/Quicklook.quicklooklib.src.main.java.com.shockwave.pdfium.PdfView.java", "BodyUseAPI": [], "Fixed commit": "d06cc98ec5d4b455bcfda3cfffb7f5ed60a828b0", "Url": "https://api.github.com/repos/Ucampus/quicklook", "Date": "2016-10-30T19:18:01Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isClickedValue.value)) { containerNotifier.notifyAllContainer(_listOfStaticContainer); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/4257/buggy-version/src.metro.UI.Renderer.BasicContainerRenderer.java", "BodyUseAPI": [], "Fixed commit": "67e1e246d156f4723d9b44fad5c0e3c3c40bdeab", "Url": "https://api.github.com/repos/hauke96/METRO", "Date": "2016-09-23T18:53:04Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((invoicingProject.getDeadlineDate()) != null) { deadlineDateToDateTime = org.joda.time.LocalDateTime.fromDateFields(invoicingProject.getDeadlineDate().toDate()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/4904/buggy-version/axelor-business-production.src.main.java.com.axelor.apps.businessproduction.service.InvoicingProjectServiceBusinessProdImpl.java", "BodyUseAPI": ["com.axelor.apps.businessproject.db.InvoicingProject.getDeadlineDate()", "org.joda.time.LocalDateTime.fromDateFields(invoicingProject.getDeadlineDate().toDate())", "invoicingProject.getDeadlineDate().toDate()"], "Fixed commit": "f37871d005c549c405865ac50573c1d6d9d369f6", "Url": "https://api.github.com/repos/ssb-axelor/axelor-business-suite", "Date": "2016-05-04T15:39:07Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((recordInstance) != null) && ((recordInstance.getState()) == (android.media.AudioRecord.STATE_INITIALIZED))) { recordInstance.stop(); recordInstance.release(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/1789/buggy-version/app.src.main.java.com.example.ellioc.hearhere.AudioEngine.java", "BodyUseAPI": ["android.media.AudioRecord.stop()", "android.media.AudioRecord.release()"], "Fixed commit": "0430a97ea608d835652123cc665f19aeff788033", "Url": "https://api.github.com/repos/EllingtonKirby/HearHere", "Date": "2016-09-22T16:36:54Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((monitorController == null) || (metricName == null)) { throw new java.lang.NullPointerException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/5925/buggy-version/src.Core.org.objectweb.proactive.extensions.autonomic.gcmscript.model.MetricNode.java", "BodyUseAPI": [], "Fixed commit": "0d8490750d30e8bcdb0b64633d72d8ac47d09b6b", "Url": "https://api.github.com/repos/mnip91/mape-component-controllers", "Date": "2014-06-24T16:04:54Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((arg.length()) > 0) { order.remove(args[i]); args[i] = arg; i--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/4953/buggy-version/Lab1.src.lab1.util.Parser.java", "BodyUseAPI": [], "Fixed commit": "2ed08976ba9901b1a31fc3f1096a5c2bd1e72235", "Url": "https://api.github.com/repos/BoneBrotherCorp/lab1", "Date": "2016-03-16T14:21:03Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((arg.length()) > 0) { order.remove(args[i]); order.add(arg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/4953/buggy-version/Lab1.src.lab1.util.Parser.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "2ed08976ba9901b1a31fc3f1096a5c2bd1e72235", "Url": "https://api.github.com/repos/BoneBrotherCorp/lab1", "Date": "2016-03-16T14:21:03Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["lombok.eclipse.EclipseNode.get()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((field.modifiers) & (org.eclipse.jdt.internal.compiler.classfmt.ClassFileConstants.AccTransient)) != 0) { errorNode.addError(\"'lazy' is not supported on transient fields.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/9172/buggy-version/src.core.lombok.eclipse.handlers.HandleGetter.java", "BodyUseAPI": [], "Fixed commit": "8ce09dedf179e9e3cc2fa0efdec128d5853ff0b6", "Url": "https://api.github.com/repos/rzwitserloot/lombok", "Date": "2016-12-05T22:32:33Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["lombok.javac.JavacNode.get()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((fieldDecl.mods.flags) & (com.sun.tools.javac.code.Flags.TRANSIENT)) != 0) { source.addError(\"'lazy' is not supported on transient fields.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/9172/buggy-version/src.core.lombok.javac.handlers.HandleGetter.java", "BodyUseAPI": [], "Fixed commit": "8ce09dedf179e9e3cc2fa0efdec128d5853ff0b6", "Url": "https://api.github.com/repos/rzwitserloot/lombok", "Date": "2016-12-05T22:32:33Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isEnabledOrEnabling(\"goodFood\")) { productionLine.setField(\"eurocodSymbol\", values.get(\"eurocodsymbol\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/6621/buggy-version/mes-plugins.mes-plugins-samples.src.main.java.com.qcadoo.mes.samples.loader.MinimalSamplesLoader.java", "BodyUseAPI": [], "Fixed commit": "9590f47707651b67daddb8fe856c20c6d44bbd50", "Url": "https://api.github.com/repos/qcadoo/mes", "Date": "2014-05-08T10:58:39Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((attrs) == null) || (attrs.isEmpty())) { return uid; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/4062/buggy-version/src.main.java.org.connid.bundles.freeipa.operations.crud.groups.FreeIPAGroupUpdate.java", "BodyUseAPI": [], "Fixed commit": "255822f7cf725299ac5b985c90aa51384cec4f07", "Url": "https://api.github.com/repos/Tirasa/ConnIdFreeIPABundle", "Date": "2014-04-10T11:06:50Z"},
{"Line": "=>346", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!matched) { groupsUnmatchedInDatabase++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/8189/buggy-version/paul.src.main.java.au.edu.uq.cmm.paul.grabber.Analyser.java", "BodyUseAPI": [], "Fixed commit": "8aa1c3293235a543f8d1fa139d137530feedfaaf", "Url": "https://api.github.com/repos/UQ-CMM-Mirage/CMM-data-grabber", "Date": "2012-08-07T04:48:50Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (didChangeScreenSize) { process.logging.Logger.progress((-27), \"ConfigurationHander: Updating pixel buffer size.\"); ApplicationDelegate.inst.configureAsDrawingToScreen(system.Configuration.isDrawingToScreen()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/1444/buggy-version/src.network.handlers.ConfigurationHandler.java", "BodyUseAPI": [], "Fixed commit": "6fb2436bff01c1f8f9cbd6b8b0c3aa0da7f95a34", "Url": "https://api.github.com/repos/CalVR/ParallelRaytracing", "Date": "2014-06-04T04:31:16Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (u.contains(\";\")) { u = u.substring(0, u.indexOf(\";\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/3717/buggy-version/src.main.java.crawl.Crawler.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.indexOf(java.lang.String)"], "Fixed commit": "c979fa5681420528b982e9e79919439541e8d99a", "Url": "https://api.github.com/repos/search-engine/CS454", "Date": "2016-02-13T19:49:55Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (u.substring(((u.length()) - 1)).equals(\"/\")) { u = u.substring(0, ((u.length()) - 1)); java.lang.System.out.println(u); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/3717/buggy-version/src.main.java.crawl.Crawler.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "c979fa5681420528b982e9e79919439541e8d99a", "Url": "https://api.github.com/repos/search-engine/CS454", "Date": "2016-02-13T19:49:55Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jsoup.nodes.Element.absUrl(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (imageUrl.contains(\";\")) { imageUrl = imageUrl.substring(0, imageUrl.indexOf(\";\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/3717/buggy-version/src.main.java.crawl.Crawl.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.indexOf(java.lang.String)"], "Fixed commit": "c979fa5681420528b982e9e79919439541e8d99a", "Url": "https://api.github.com/repos/search-engine/CS454", "Date": "2016-02-13T19:49:55Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.symplifier.db.driver.jdbc.JDBCQuery<M>.Alias.getFilter()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (filter == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/786/buggy-version/src.main.java.net.symplifier.db.driver.jdbc.JDBCQuery.java", "BodyUseAPI": [], "Fixed commit": "2152e2f677c14e9429640e3684548d6152a85ac5", "Url": "https://api.github.com/repos/ranjan-sym/sym.net-db", "Date": "2015-08-20T17:13:10Z"},
{"Line": "=>1443", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((methodMagicGet) != null) { php.runtime.Memory altResult = getProperty(env, trace, object, property, callCache, cacheIndex); if (altResult.isObject()) { return altResult; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/1427/buggy-version/jphp-runtime.src.php.runtime.reflection.ClassEntity.java", "BodyUseAPI": [], "Fixed commit": "5a9b7df90e636303496deabf3410cbc1ea008803", "Url": "https://api.github.com/repos/jphp-group/jphp", "Date": "2017-10-27T12:43:21Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((file.getGroupID()) > 0) { ctx = new org.openmicroscopy.shoola.env.data.util.SecurityContext(file.getGroupID()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/1839/buggy-version/components.insight.SRC.org.openmicroscopy.shoola.env.data.views.calls.ResultsSaver.java", "BodyUseAPI": ["org.openmicroscopy.shoola.env.data.model.FileObject.getGroupID()"], "Fixed commit": "bad705fcd912d28966a114157bcc40c8023477b8", "Url": "https://api.github.com/repos/openmicroscopy/openmicroscopy", "Date": "2015-05-29T21:37:33Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((file.getGroupID()) > 0) { ctx = new org.openmicroscopy.shoola.env.data.util.SecurityContext(file.getGroupID()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/1839/buggy-version/components.insight.SRC.org.openmicroscopy.shoola.env.data.views.calls.ResultsSaver.java", "BodyUseAPI": ["org.openmicroscopy.shoola.env.data.model.FileObject.getGroupID()"], "Fixed commit": "bad705fcd912d28966a114157bcc40c8023477b8", "Url": "https://api.github.com/repos/openmicroscopy/openmicroscopy", "Date": "2015-05-29T21:37:33Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((file.getGroupID()) > 0) { ctx = new org.openmicroscopy.shoola.env.data.util.SecurityContext(file.getGroupID()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/1839/buggy-version/components.insight.SRC.org.openmicroscopy.shoola.env.data.views.calls.ResultsSaver.java", "BodyUseAPI": ["org.openmicroscopy.shoola.env.data.model.FileObject.getGroupID()"], "Fixed commit": "bad705fcd912d28966a114157bcc40c8023477b8", "Url": "https://api.github.com/repos/openmicroscopy/openmicroscopy", "Date": "2015-05-29T21:37:33Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ume.getId()) == tweetViewerId) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/3701/buggy-version/src.main.java.com.vaguehope.onosendai.provider.twitter.TwitterUtils.java", "BodyUseAPI": [], "Fixed commit": "824d7588a5cefc00ad86a7f0b9b0c9d818600df8", "Url": "https://api.github.com/repos/haku/Onosendai", "Date": "2014-02-22T10:44:40Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.bluetooth.BluetoothDevice.getAddress()", "android.bluetooth.BluetoothDevice.getName()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((name != null) && (!(deviceAddressList.contains(address)))) { foundDevicesArrayAdapter.add(name); deviceAddressList.add(address); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/3161/buggy-version/app.src.main.java.com.ybg.ga.ymga.bt.BLEDeviceListActivity.java", "BodyUseAPI": ["android.widget.ArrayAdapter<java.lang.String>.add(java.lang.String)", "java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "c77d5f1f434a282e77ff18032e52198f7e123e44", "Url": "https://api.github.com/repos/yangbagang/ymga", "Date": "2017-01-01T09:23:16Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (n == 0) { soldierLabel.setGraphic(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/6817/buggy-version/src.ui.MapTile.java", "BodyUseAPI": [], "Fixed commit": "7a3bf0eecb15283b792222a3b7d2f1da0a18d0a9", "Url": "https://api.github.com/repos/erimerdal/1H.Infinite-Tale", "Date": "2017-12-16T18:08:47Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(android.text.TextUtils.isEmpty(bridgeName))) { this.bridgeName = bridgeName; JS_HANDLE_MESSAGE_FROM_JAVA = (\"javascript:\" + bridgeName) + \"._handleMessageFromNative('%s');\"; JS_FETCH_QUEUE_FROM_JAVA = (\"javascript:\" + bridgeName) + \"._fetchQueue();\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/2994/buggy-version/library.src.main.java.com.github.ziv.lib.jsbridge.BridgeUtil.java", "BodyUseAPI": [], "Fixed commit": "6f74c368484e635671cd1cfc1ac335bae18b1c61", "Url": "https://api.github.com/repos/daawa/js-bridge", "Date": "2017-07-26T06:08:57Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.sk89q.util.yaml.YAMLProcessor.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((tran == null) || (trand == null)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/3293/buggy-version/src.main.java.com.sk89q.craftbook.LanguageManager.java", "BodyUseAPI": [], "Fixed commit": "44153ec197bebc8a5ae7664afe57b5036d75407f", "Url": "https://api.github.com/repos/sk89q/craftbook", "Date": "2013-10-30T09:38:19Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((identifier.getMediaType()) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/7456/buggy-version/Mediasystem.src.main.java.hs.mediasystem.framework.AbstractEnrichTaskProvider.java", "BodyUseAPI": [], "Fixed commit": "9609a2744bdfa3690a6f739e807a2ee92d2d0d5e", "Url": "https://api.github.com/repos/hjohn/MediaSystem", "Date": "2012-06-26T18:44:57Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((identifier.getMediaType()) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/7456/buggy-version/Mediasystem.src.main.java.hs.mediasystem.framework.AbstractEnrichTaskProvider.java", "BodyUseAPI": [], "Fixed commit": "9609a2744bdfa3690a6f739e807a2ee92d2d0d5e", "Url": "https://api.github.com/repos/hjohn/MediaSystem", "Date": "2012-06-26T18:44:57Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.levelName) != null) { this.spongeNbt.setString(\"LevelName\", this.levelName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/6219/buggy-version/src.main.java.org.spongepowered.mod.mixin.core.world.storage.MixinWorldInfo.java", "BodyUseAPI": [], "Fixed commit": "827a299b43c3f910c252292d3b861dfa5a91a7b1", "Url": "https://api.github.com/repos/simon816/Sponge", "Date": "2015-04-07T16:38:34Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (removeID != (-1)) { players.remove(removeID); return true; }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/4982/buggy-version/src.main.java.CardGame.GameEngine.GameLobby.java", "BodyUseAPI": ["java.util.ArrayList<CardGame.GameEngine.Player>.remove(int)"], "Fixed commit": "63ff0348bcc182b91a4a6f5b7eeeef9cbeb0fb4e", "Url": "https://api.github.com/repos/tombrereton/bordeaux", "Date": "2017-03-11T16:15:56Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (searchString.contains(\"'\")) { java.lang.StringBuilder temp = new java.lang.StringBuilder(); for (char c : searchString.toCharArray()) { if (c != '\\'') temp.append(c); } searchString = temp.toString(); if (searchString.trim().equals(\"\")) searchString = \":\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/5694/buggy-version/app.src.main.java.com.olam.MainSearch.java", "BodyUseAPI": ["java.lang.String.toCharArray()"], "Fixed commit": "b58b6d3d9a687fbeaf086ff8732bbdd00ec0d31e", "Url": "https://api.github.com/repos/vishnus/Olam", "Date": "2015-09-01T11:51:18Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (xturn()) { if (v > (num)) num = v; if ((java.lang.Math.abs(v)) > (num)) num = v; }else { if (v < (num)) num = v; if (v > 0) { if ((v * (-1)) < (num)) num = v; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/7245/buggy-version/Assignment_4.TicTacToe.src.Board.java", "BodyUseAPI": [], "Fixed commit": "f3c3ea246d8df22358a59d7cfcbd57ba0ae4007a", "Url": "https://api.github.com/repos/akimzet/CS3340", "Date": "2016-11-29T19:24:54Z"},
{"Line": "=>330", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isRelationAllowed(this.relation))) { throw new java.lang.IllegalArgumentException(((\"[range] query does not support relation [\" + relation) + \"]\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/8289/buggy-version/core.src.main.java.org.elasticsearch.index.query.RangeQueryBuilder.java", "BodyUseAPI": [], "Fixed commit": "94d359d67d93007fa0e6ef6a60c00becc3b5946d", "Url": "https://api.github.com/repos/hub-cap/elasticsearch", "Date": "2017-09-15T19:23:36Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCallbackManager) != null) return mCallbackManager.onActivityResult(requestCode, resultCode, data); else return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/6024/buggy-version/android.src.main.java.com.appnormal.plugin.fblogin.ApnFbLoginPlugin.java", "BodyUseAPI": [], "Fixed commit": "c908a2243b0c99335ab81e3c664b8247cdd2ad22", "Url": "https://api.github.com/repos/markmooibroek/apn_fb_login", "Date": "2017-12-08T13:22:15Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mConnectedThread) != null) { mConnectedThread.cancel(); try { btSocket.close(); } catch (java.io.IOException e2) { finish(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/2701/buggy-version/app.src.main.java.com.lucazanrosso.bluetoothchat.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "372de4eb6de486d6dc4023c8d6ec8db7d44e5358", "Url": "https://api.github.com/repos/lucazanrosso/BluetoothChat", "Date": "2017-03-04T15:27:22Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getCursor().getString(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((label == null) || (label.equals(\"0\"))) { recordingView.setVisibility(View.GONE); }else { recordingView.setVisibility(View.VISIBLE); recordingView.setText(((label.length()) < 10 ? label : \"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/7336/buggy-version/app.src.main.java.org.fasola.fasolaminutes.IndexedCursorAdapter.java", "BodyUseAPI": ["java.lang.String.length()", "android.widget.TextView.setText(((label.length()) < 10 ? label : \"\"))"], "Fixed commit": "dc97eaa81d3780285a71571627f5c8bd2de1dd8d", "Url": "https://api.github.com/repos/mrichards42/fasola_android", "Date": "2015-09-05T23:45:08Z"},
{"Line": "=>328", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getFilesCount()) == 0) { dk.dtu.imm.datacollector2013.Toast.makeText(this, \"No files to upload\", Toast.LENGTH_SHORT).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/4404/buggy-version/datacollector.src.dk.dtu.imm.datacollector2013.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "c300abb6d67e02339f085804576d33186b744d74", "Url": "https://api.github.com/repos/OpenSensing/funf-v3", "Date": "2014-04-10T18:07:33Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(powerListsSpellFilters.contains(filterListName))) powerListsSpellFilters.add(filterListName);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/5036/buggy-version/app.src.main.java.tomi.piipposoft.blankspellbook.MainActivity.MainActivityPresenter.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "d01a847e9aad70574a40715a4720ace0c067fab0", "Url": "https://api.github.com/repos/Domuska/BlankSpellbook", "Date": "2017-07-20T08:07:48Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["powersInList.get(0).getPowerListId()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (powerListId == null) powerListId = \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/5036/buggy-version/app.src.main.java.tomi.piipposoft.blankspellbook.MainActivity.MainActivityPresenter.java", "BodyUseAPI": [], "Fixed commit": "d01a847e9aad70574a40715a4720ace0c067fab0", "Url": "https://api.github.com/repos/Domuska/BlankSpellbook", "Date": "2017-07-20T08:07:48Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(powerListsSpellFilters.contains(filterListName))) groupsSpellFilters.add(filterListName);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/5036/buggy-version/app.src.main.java.tomi.piipposoft.blankspellbook.MainActivity.MainActivityPresenter.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "d01a847e9aad70574a40715a4720ace0c067fab0", "Url": "https://api.github.com/repos/Domuska/BlankSpellbook", "Date": "2017-07-20T08:07:48Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.votingsystem.model.OperationVS.parse(net.sf.json.JSONObject)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((operationVS.getDocumentToSignMap()) != null) org.votingsystem.client.BrowserVS.getInstance().processOperationVS(operationVS, null); else org.votingsystem.client.BrowserVS.getInstance().processOperationVS(null, operationVS);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/7010/buggy-version/ClientTool.src.main.java.org.votingsystem.client.util.BrowserVSClient.java", "BodyUseAPI": ["org.votingsystem.client.BrowserVS.getInstance().processOperationVS(org.votingsystem.model.OperationVS,<nulltype>)", "org.votingsystem.client.BrowserVS.getInstance().processOperationVS(<nulltype>,org.votingsystem.model.OperationVS)"], "Fixed commit": "bc725eeb2a63d31ae6cebdd24f4060c3a374796a", "Url": "https://api.github.com/repos/votingsystem/votingsystem", "Date": "2014-12-17T17:58:46Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles(java.io.FilenameFilter)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (jars != null) { for (java.io.File jar : jars) { macroClassPath.add(new org.apache.tools.ant.types.Path(getProject(), jar.getAbsolutePath())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/95/buggy-version/src.ca.weblite.mirah.ant.MirahcTask.java", "BodyUseAPI": [], "Fixed commit": "e8f24007d2e0b859dae3f4014ae6bdce2b8e0f21", "Url": "https://api.github.com/repos/shannah/mirah-ant", "Date": "2014-09-12T22:21:12Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (colorDarkVaient != null) { svContainerTrailer.setBackgroundColor(colorDarkVaient.getRgb()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/5368/buggy-version/app.src.main.java.net.aung.moviemaniac.fragments.MovieDetailFragment.java", "BodyUseAPI": ["Palette.Swatch.getRgb()", "android.support.v4.widget.NestedScrollView.setBackgroundColor(colorDarkVaient.getRgb())"], "Fixed commit": "ea3087e7dd2ce4e7673d46086337b1555ab65f94", "Url": "https://api.github.com/repos/agpyaephyo/Movie-Maniac-Android", "Date": "2016-03-08T13:28:36Z"},
{"Line": "=>2647", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mPausingActivity) == r) { mPausingActivity = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/5771/buggy-version/services.java.com.android.server.am.ActivityStack.java", "BodyUseAPI": [], "Fixed commit": "ae1b58d86ec316bfad07cbc9d6069dcce38eacf1", "Url": "https://api.github.com/repos/TEAM-Gummy/android_frameworks_base", "Date": "2014-05-02T02:35:06Z"},
{"Line": "=>553", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.System.getProperty(Constants.SPARK_EXECUTOR_JVM_OPT)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((sparkJvm != null) && (java.lang.Boolean.parseBoolean(sparkJvm))) { org.wso2.carbon.analytics.dataservice.core.indexing.IndexNodeCoordinator.log.info(\"This is not a carbon JVM. Hence node ID will not be set\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/5187/buggy-version/components.analytics-core.org.wso2.carbon.analytics.dataservice.core.src.main.java.org.wso2.carbon.analytics.dataservice.core.indexing.IndexNodeCoordinator.java", "BodyUseAPI": [], "Fixed commit": "8e2ba9ee8d8827dd9208672373e87ddc47c3a274", "Url": "https://api.github.com/repos/SupunS/carbon-analytics", "Date": "2016-04-28T10:08:24Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.seventh7.mybatis.util.MapperUtils.getId(T)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (id == null) { id = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/2500/buggy-version/src.com.seventh7.mybatis.util.MapperUtils.java", "BodyUseAPI": [], "Fixed commit": "8dcc8290789bc5f4701ab109c16a480f189e2d84", "Url": "https://api.github.com/repos/wuzhizhan/free-idea-mybatis", "Date": "2016-05-20T02:50:46Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((((mSharedPreferences.getInt(\"id1\", (-1))) != (-1)) && ((mSharedPreferences.getInt(\"id2\", (-1))) != (-1))) && ((mSharedPreferences.getInt(\"id3\", (-1))) != (-1))) && ((mSharedPreferences.getInt(\"id4\", (-1))) != (-1))) { android.widget.Toast.makeText(this, \"Your team is full!\", Toast.LENGTH_SHORT).show(); }else if (((mSharedPreferences.getInt(\"id1\", (-1))) != dataId) && ((mSharedPreferences.getInt(\"id1\", (-1))) == (-1))) { android.widget.Toast.makeText(this, ((mHeroNameTv.getText().toString()) + \" is placed on your team!\"), Toast.LENGTH_SHORT).show(); mEditor.putInt(\"id1\", dataId); mEditor.commit(); }else if (((mSharedPreferences.getInt(\"id2\", (-1))) != dataId) && ((mSharedPreferences.getInt(\"id2\", (-1))) == (-1))) { android.widget.Toast.makeText(this, ((mHeroNameTv.getText().toString()) + \" is placed on your team!\"), Toast.LENGTH_SHORT).show(); mEditor.putInt(\"id2\", dataId); mEditor.commit(); }else if (((mSharedPreferences.getInt(\"id3\", (-1))) != dataId) && ((mSharedPreferences.getInt(\"id3\", (-1))) == (-1))) { android.widget.Toast.makeText(this, ((mHeroNameTv.getText().toString()) + \" is placed on your team!\"), Toast.LENGTH_SHORT).show(); mEditor.putInt(\"id3\", dataId); mEditor.commit(); }else if (((mSharedPreferences.getInt(\"id4\", (-1))) != dataId) && ((mSharedPreferences.getInt(\"id4\", (-1))) == (-1))) { android.widget.Toast.makeText(this, ((mHeroNameTv.getText().toString()) + \" is placed on your team!\"), Toast.LENGTH_SHORT).show(); mEditor.putInt(\"id4\", dataId); mEditor.commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/2858/buggy-version/NeighborhoodApp.app.src.main.java.ypsitos.neighborhoodapp.DetailActivity.java", "BodyUseAPI": ["android.content.SharedPreferences.getInt(java.lang.String,int)", "android.content.SharedPreferences.getInt(java.lang.String,int)", "android.content.SharedPreferences.getInt(java.lang.String,int)", "android.content.SharedPreferences.getInt(java.lang.String,int)", "android.content.SharedPreferences.getInt(java.lang.String,int)", "android.content.SharedPreferences.getInt(java.lang.String,int)", "android.content.SharedPreferences.getInt(java.lang.String,int)", "android.content.SharedPreferences.getInt(java.lang.String,int)"], "Fixed commit": "400c25ee8cfc3f323237dfb1bbcd7e4fb46e3fde", "Url": "https://api.github.com/repos/Yanni-Psitos/Project-2", "Date": "2016-02-12T15:24:42Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rpcMethodMngServiceRef) != null) { context.ungetService(rpcMethodMngServiceRef); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/3374/buggy-version/DownloadBundle.src.main.java.com.francetelecom.admindm.download.Activator.java", "BodyUseAPI": [], "Fixed commit": "a62da0397f2ebdf3d249c82f0a2ce320fe4c8374", "Url": "https://api.github.com/repos/p-alik/modus-tr69-client", "Date": "2016-06-23T07:41:06Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dataServiceRef) != null) { context.ungetService(dataServiceRef); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/3374/buggy-version/DownloadBundle.src.main.java.com.francetelecom.admindm.download.Activator.java", "BodyUseAPI": [], "Fixed commit": "a62da0397f2ebdf3d249c82f0a2ce320fe4c8374", "Url": "https://api.github.com/repos/p-alik/modus-tr69-client", "Date": "2016-06-23T07:41:06Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<de.l3s.boilerpipe.document.TextBlock>.listIterator()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(it.hasNext())) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/1735/buggy-version/boilerpipe.src.main.java.de.l3s.boilerpipe.filters.english.DensityRulesClassifier.java", "BodyUseAPI": [], "Fixed commit": "af0d80fad20114241529b02fc2b0086919d8be46", "Url": "https://api.github.com/repos/helianbobo/FlipDroid", "Date": "2011-03-16T04:10:08Z"},
{"Line": "=>330", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(var.image.isConstant())) { var.image = fr.lirmm.graphik.graal.core.term.DefaultTermFactory.instance().createConstant(var.image.getLabel()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/8562/buggy-version/graal.graal-homomorphism.src.main.java.fr.lirmm.graphik.graal.homomorphism.BacktrackIterator.java", "BodyUseAPI": ["fr.lirmm.graphik.graal.core.term.DefaultTermFactory.instance().createConstant(var.image.getLabel())", "var.image.getLabel()"], "Fixed commit": "b93dd790e25e87d7c6b1a7182c8441327e0888ac", "Url": "https://api.github.com/repos/graphik-team/graal", "Date": "2016-01-12T15:24:25Z"},
{"Line": "=>1439", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (haveFilters) unlockFilters(ses);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/1415/buggy-version/modules.core.src.main.java.org.apache.ignite.internal.util.nio.GridNioServer.java", "BodyUseAPI": [], "Fixed commit": "8f155640ffc9fd039efc5ff756338ed2fb911777", "Url": "https://api.github.com/repos/NSAmelchev/ignite", "Date": "2017-12-08T10:58:02Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Data.PixelMap.getPixels()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((mas[y][x]) != null) mas[y][x].setPixel(RGB[0], RGB[1], RGB[2]); else mas[y][x] = new Data.Pixel(x, y, RGB);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/4138/buggy-version/src.Data.ImageData.java", "BodyUseAPI": ["mas[y][x].setPixel(int,int,int)"], "Fixed commit": "ad6de54ef26f60fbc137bf6e22f1f82966107827", "Url": "https://api.github.com/repos/acanna/meteo", "Date": "2017-10-24T17:57:15Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.yoneko.areyouthereyet.update.GeoFenceReceiver.mListener) != null) { com.yoneko.areyouthereyet.update.GeoFenceReceiver.mListener.updateLeftDrawer(simpleList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/7200/buggy-version/src.com.yoneko.areyouthereyet.update.GeoFenceReceiver.java", "BodyUseAPI": [], "Fixed commit": "38d942b59410f19c8ef6dd39f47d1aba8c1d681e", "Url": "https://api.github.com/repos/reidisaki/dumpy", "Date": "2015-01-08T17:43:28Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((attributes.getIndex(\"class\")) != (-1)) { testSuite.setClassName(attributes.getValue(\"class\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/8322/buggy-version/com.piece_framework.makegood.core.src.com.piece_framework.makegood.core.run.ResultReader.java", "BodyUseAPI": ["com.piece_framework.makegood.core.result.TestSuiteResult.setClassName(java.lang.String)", "org.xml.sax.Attributes.getValue(java.lang.String)"], "Fixed commit": "3614fd7fb0bf73257594fdcd1bcd474e850c6a92", "Url": "https://api.github.com/repos/piece/makegood", "Date": "2012-06-28T02:44:35Z"},
{"Line": "=>612", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((i == (inflatedLengths.length)) && (pos >= (length))) { return (inflatedLengths.length) - 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/1793/buggy-version/LuceneTransform.src.org.apache.lucene.store.transform.TransformedIndexInput.java", "BodyUseAPI": [], "Fixed commit": "56ac8727e3acc6a08c4314251f33ff5cf19e7448", "Url": "https://api.github.com/repos/mitjale/lucenetransform", "Date": "2011-09-09T22:00:15Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((m_transInfo) != null) { boolean isCommitTrans = m_transInfo.commitTrans(t.getSequenceId(), t); if (isCommitTrans) { return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/8441/buggy-version/app.src.main.java.com.example.arvin.myapplication.socket.IRecvHandler.java", "BodyUseAPI": [], "Fixed commit": "85987e545d6a4a319650be121153e98350962cbd", "Url": "https://api.github.com/repos/waddwaw/server_client_socket", "Date": "2017-04-19T07:12:07Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (url.contains(\"scenic/addScenicSpot\")) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/8448/buggy-version/src.main.java.com.mianbao.Interceptor.UserLoginInterceptor.java", "BodyUseAPI": [], "Fixed commit": "1f3e602b228c622af16d578e23bbcbcd52749b57", "Url": "https://api.github.com/repos/zoujiajian/mianbao", "Date": "2017-05-06T14:46:54Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (url.contains(\"scenic/collectionInfo\")) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/8448/buggy-version/src.main.java.com.mianbao.Interceptor.UserLoginInterceptor.java", "BodyUseAPI": [], "Fixed commit": "1f3e602b228c622af16d578e23bbcbcd52749b57", "Url": "https://api.github.com/repos/zoujiajian/mianbao", "Date": "2017-05-06T14:46:54Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((evt.type) == (net.minecraftforge.client.event.RenderGameOverlayEvent.ElementType.HELMET)) && (evt instanceof net.minecraftforge.client.event.RenderGameOverlayEvent.Post)) { for (openperipheral.common.terminal.IDrawable drawable : drawableList) { drawable.draw(evt.partialTicks, evt.mouseX, evt.mouseY); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/8544/buggy-version/src.openperipheral.common.terminal.DrawableManager.java", "BodyUseAPI": ["openperipheral.common.terminal.IDrawable.draw(evt.partialTicks,evt.mouseX,evt.mouseY)"], "Fixed commit": "37190346b81dbd1462b26bf1d22f79d9343a5f49", "Url": "https://api.github.com/repos/mikeemoo/OpenPeripheral", "Date": "2013-06-10T22:36:48Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((application.getLoginUser()) != null) && (com.tessoft.common.Util.isEmptyString(application.getLoginUser().getKakaoID()))) com.tessoft.common.Constants.bKakaoLogin = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/3781/buggy-version/FavorForMe.src.com.tessoft.nearhere.fragment.TaxiFragment.java", "BodyUseAPI": [], "Fixed commit": "679b10f0e0f80bac560119350dd06eec851e0d76", "Url": "https://api.github.com/repos/kim2509/NearhereTaxi", "Date": "2015-09-14T12:41:54Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.svglol.autobright.service.AutoBrightService.2.getForegroundApp()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (foregroundApp != null) { if ((foregroundApp.processName) != null) { if (foregroundApp.processName.equals(app.getPackageName())) { float value = ((((float) (app.getBrightness())) * 2) / 255) - 1.0F; Settings.System.putFloat(contentResolver, \"screen_auto_brightness_adj\", value); firstTime.clear(); firstTime.put(appBright.getPackageName(), true); changed = true; appUpdated = true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/24/buggy-version/app.src.main.java.net.svglol.autobright.service.AutoBrightService.java", "BodyUseAPI": ["foregroundApp.processName.equals(app.getPackageName())"], "Fixed commit": "61c03f4240d14ab9b3206bc0b929bc5a19189906", "Url": "https://api.github.com/repos/svglol/AutoBright", "Date": "2015-05-16T13:55:58Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.subutai.core.registration.impl.dao.RequestDataService.find(requestedHost.getId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((!(com.google.common.base.Strings.isNullOrEmpty(requestedHost.getHostname()))) && (!(requestedHostImpl.getHostname().equalsIgnoreCase(requestedHost.getHostname())))) { requestedHostImpl.setHostname(requestedHost.getHostname()); requestDataService.update(requestedHostImpl); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/7515/buggy-version/management.server.core.host-registration.host-registration-impl.src.main.java.io.subutai.core.registration.impl.RegistrationManagerImpl.java", "BodyUseAPI": ["io.subutai.core.registration.impl.dao.RequestDataService.update(io.subutai.core.registration.impl.entity.RequestedHostImpl)", "io.subutai.core.registration.api.service.RequestedHost.getHostname()", "io.subutai.core.registration.impl.entity.RequestedHostImpl.setHostname(requestedHost.getHostname())"], "Fixed commit": "499109106a3e37343e6d6200f0f60bd4ca211e07", "Url": "https://api.github.com/repos/subutai-io/peer-os", "Date": "2016-04-20T13:02:45Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.aufdemrand.denizen.events.ReplaceableTagEvent.getNPC()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (n == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/3224/buggy-version/src.main.java.net.aufdemrand.denizen.tags.core.NPCTags.java", "BodyUseAPI": [], "Fixed commit": "3d841a61959137549147fbfb7f2c432c070d9c34", "Url": "https://api.github.com/repos/aufdemrand/Denizen", "Date": "2013-03-07T02:01:47Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.gildedgames.util.modules.chunk.impl.ChunkServicesImpl.getWorldPool(event.getWorld())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (worldPool == null) { this.pools.put(event.getWorld().provider.getDimension(), (worldPool = new com.gildedgames.util.modules.chunk.impl.pools.WorldHookPool(this.providers.values()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/1445/buggy-version/src.main.java.com.gildedgames.util.modules.chunk.impl.ChunkServicesImpl.java", "BodyUseAPI": [], "Fixed commit": "83964ebc5417c7486b86c67263aa3872aad05511", "Url": "https://api.github.com/repos/gildedgames/gilded-games-util", "Date": "2016-07-06T15:05:23Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(intersects(other))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/8097/buggy-version/src.Ball.java", "BodyUseAPI": [], "Fixed commit": "05ed038931a60b698711cfda8c5584dd28ec3521", "Url": "https://api.github.com/repos/Wintus/CSC143Homework3RTCG", "Date": "2015-05-13T05:12:14Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (method.isAnnotationPresent(com.zhucode.mao.mongo.annotation.Count.class)) { query = new com.zhucode.mao.mongo.statement.CountQuerier(jongo); }else if (method.isAnnotationPresent(com.zhucode.mao.mongo.annotation.Distinct.class)) { query = new com.zhucode.mao.mongo.statement.DistinctQuerier(jongo); }else if (method.isAnnotationPresent(com.zhucode.mao.mongo.annotation.FindAndModify.class)) { query = new com.zhucode.mao.mongo.statement.FindAndModifyQuerier(jongo); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/2273/buggy-version/src.main.java.com.zhucode.mao.mongo.context.MongoInvocationHandler.java", "BodyUseAPI": ["java.lang.reflect.Method.isAnnotationPresent(java.lang.Class)", "java.lang.reflect.Method.isAnnotationPresent(java.lang.Class)"], "Fixed commit": "c8d1dc0e1ed0815fc9c1f375a306901e8561e22d", "Url": "https://api.github.com/repos/zhujinPATHn/zhucode-mao", "Date": "2015-12-11T10:08:50Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((org.redcastlemedia.multitallented.civs.menus.Menu.history.get(civilian.getUuid())) == null) { org.redcastlemedia.multitallented.civs.menus.Menu.history.put(civilian.getUuid(), new java.util.ArrayList<java.lang.String>()); }else { backButton.setLore(org.redcastlemedia.multitallented.civs.menus.Menu.history.get(civilian.getUuid())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/6540/buggy-version/src.org.redcastlemedia.multitallented.civs.menus.Menu.java", "BodyUseAPI": ["org.redcastlemedia.multitallented.civs.civilians.Civilian.getUuid()", "java.util.Map<java.util.UUID, java.util.List<java.lang.String>>.put(civilian.getUuid(),java.util.ArrayList<java.lang.String>)", "org.redcastlemedia.multitallented.civs.civilians.Civilian.getUuid()", "org.redcastlemedia.multitallented.civs.util.CVItem.setLore(java.util.List<java.lang.String>)", "java.util.Map<java.util.UUID, java.util.List<java.lang.String>>.get(civilian.getUuid())"], "Fixed commit": "22b79f8a475889175dcb6e038f131ee7be87010c", "Url": "https://api.github.com/repos/Multitallented/Civs", "Date": "2017-10-13T17:04:47Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((localFriendManager) != null) this.getApplicationContext().unbindService(friendManagerConnection);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/7578/buggy-version/android.client-frwk.SocietiesLibraries.FriendsManager.FriendsManager.src.org.societies.android.platform.css.friends.AcceptFriendActivity.java", "BodyUseAPI": [], "Fixed commit": "2f881b8c2551b27776a7f51f86c484ac73ac2839", "Url": "https://api.github.com/repos/societies/SOCIETIES-Platform", "Date": "2013-03-31T00:38:12Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (res instanceof orca.flukes.OrcaNode) { mgt = ((orca.flukes.OrcaNode) (res)).getSSHManagementAccess(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/2191/buggy-version/src.main.java.orca.flukes.OrcaHtmlResourceStateViewer.java", "BodyUseAPI": [], "Fixed commit": "a12e0244c07bfb54934fc28b860d50bf00e29ff5", "Url": "https://api.github.com/repos/RENCI-NRIG/flukes", "Date": "2015-11-06T21:10:39Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (channelId != null) { try { channelPage.getElementsByClass(\"qualified-channel-title-badge\"); verified = true; } catch (java.lang.NullPointerException e) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/7006/buggy-version/app.src.main.java.com.eyeop.rorschach.ui.YoutubeSearch.java", "BodyUseAPI": [], "Fixed commit": "b540c7cbea7aeb4b54b44d7013c8f570bcfa2ed0", "Url": "https://api.github.com/repos/dfmaloney/Rorschach", "Date": "2015-10-04T23:54:40Z"},
{"Line": "=>362", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((r.length()) == 0) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/5126/buggy-version/OsmAndMapCreator.src.net.osmand.osm.MapRenderingTypesEncoder.java", "BodyUseAPI": [], "Fixed commit": "789ba6daf728990f28a364b71f02fb5e072f90e6", "Url": "https://api.github.com/repos/osmandapp/OsmAnd-tools", "Date": "2016-02-22T10:50:19Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(com.google.common.base.Strings.isNullOrEmpty(indexFilePath))) { diskResourcePaths.setPaths(java.util.Arrays.asList(path, indexFilePath)); }else { diskResourcePaths.setPaths(java.util.Arrays.asList(path)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/7948/buggy-version/applications.de-webapp.src.main.java.org.iplantc.de.client.viewer.callbacks.EnsemblUtil.java", "BodyUseAPI": ["java.util.Arrays.asList(java.lang.String,java.lang.String)", "org.iplantc.de.client.models.HasPaths.setPaths(java.util.List<java.lang.String>)"], "Fixed commit": "b7ea9b7e01553b206215101f47700a3a405f5d38", "Url": "https://api.github.com/repos/iPlantCollaborativeOpenSource/DiscoveryEnvironment", "Date": "2014-09-22T17:43:45Z"},
{"Line": "=>357", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (original == null) original = \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/5012/buggy-version/src.main.java.ilarkesto.base.Crypt.java", "BodyUseAPI": [], "Fixed commit": "e8cdc7d00bc0373ec818d2c2441c34d042d7438a", "Url": "https://api.github.com/repos/Kunagi/ilarkesto", "Date": "2011-03-16T22:59:00Z"},
{"Line": "=>531", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bestMoveVal > ((board.posINF) - 100)) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/3940/buggy-version/intBoards.board.java", "BodyUseAPI": [], "Fixed commit": "5fef4a64aa2570a8db3ce2dc3863939bae0ff5b5", "Url": "https://api.github.com/repos/anagalingam/checkers-ai", "Date": "2017-11-01T13:09:00Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (openApostrophe == (-1)) { result[i] = line.substring(0, sepOc); line = line.substring((sepOc + 1)); }else { int closingApostrophe = line.indexOf(\"\\\"\", (openApostrophe + 1)); int nextSep = line.indexOf(SEP, closingApostrophe); org.aksw.limes.core.util.DataCleaner.logger.trace((\"closingApostrophe:\" + closingApostrophe)); org.aksw.limes.core.util.DataCleaner.logger.trace((\"nextSep=\" + nextSep)); if ((openApostrophe < nextSep) && (openApostrophe > (-1))) { result[i] = org.aksw.limes.core.util.DataCleaner.removeQuotes(line.substring(openApostrophe, nextSep)); }else result[i] = \"\"; org.aksw.limes.core.util.DataCleaner.logger.trace((((((\"closingAp=\" + closingApostrophe) + \" cut out: \") + openApostrophe) + \" - \") + nextSep)); line = line.substring((nextSep + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/7933/buggy-version/limes-core.src.main.java.org.aksw.limes.core.util.DataCleaner.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "org.aksw.limes.core.util.DataCleaner.removeQuotes(java.lang.String)", "java.lang.String.indexOf(java.lang.String,int)", "org.slf4j.Logger.trace(java.lang.String)"], "Fixed commit": "448a3c9282095f8d4b2aadb81959e5f6e25fc906", "Url": "https://api.github.com/repos/dice-group/LIMES", "Date": "2016-11-30T10:38:59Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((expenseDto.getTransactionType()) == null) { description = expenseDto.getMetaDataChunk(); }else { description = expenseDto.getTransactionType().getDescription(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/5039/buggy-version/src.main.java.au.com.mason.expensemanager.service.ExpenseService.java", "BodyUseAPI": ["au.com.mason.expensemanager.dto.ExpenseDto.getMetaDataChunk()", "expenseDto.getTransactionType().getDescription()", "au.com.mason.expensemanager.dto.ExpenseDto.getTransactionType()"], "Fixed commit": "1b2e34a02e9ad7759b026234136a00cd180358e7", "Url": "https://api.github.com/repos/cjmason8/expenseManager", "Date": "2017-09-23T07:34:05Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((afterChange.length()) < 4) { searchParameter = \"\"; isSearch = false; if (!(loadingMore)) { fetchMovies(\"\"); redraw(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/660/buggy-version/app.src.main.java.karataiev.dmytro.popularmovies.MainActivityFragment.java", "BodyUseAPI": [], "Fixed commit": "d170018dac1ffc52a54fc4ed888fa8a9c9390a3a", "Url": "https://api.github.com/repos/dmytroKarataiev/MovieDb", "Date": "2015-12-26T07:44:33Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.LOLLIPOP)) { buttonItem.setImageDrawable(getResources().getDrawable(painting.getId(), null)); }else buttonItem.setImageDrawable(getResources().getDrawable(painting.getId()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/8881/buggy-version/app.src.main.java.org.td19.tut.renaissancepaintings.MyActivity.java", "BodyUseAPI": [], "Fixed commit": "df160b14c1a4a6cb57b6ea7d2bc553da99b6696d", "Url": "https://api.github.com/repos/TheDestroyer19/AndroidProject", "Date": "2016-02-19T22:32:09Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((from.getScheduledEventId()) != null) { to.setScheduledEventId(from.getScheduledEventId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/4137/buggy-version/vipr-portal.StorageAPI.src.java.com.emc.sa.api.mapper.OrderMapper.java", "BodyUseAPI": ["com.emc.storageos.db.client.model.uimodels.Order.getScheduledEventId()", "com.emc.vipr.model.catalog.OrderRestRep.setScheduledEventId(from.getScheduledEventId())"], "Fixed commit": "71806693c81ec56baea83680e6a2afc99d15aa9f", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-08-09T18:51:21Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.nio.channels.SocketChannel>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (prevChannel != null) { prevChannel.keyFor(selector).cancel(); prevChannel.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/1275/buggy-version/src.main.java.com.github.aklatt1194.SuperAwesomeOverlay.network.NetworkInterface.java", "BodyUseAPI": ["java.nio.channels.SocketChannel.close()", "java.nio.channels.SocketChannel.keyFor(java.nio.channels.Selector)", "java.nio.channels.SelectionKey.cancel()"], "Fixed commit": "660fe899bdc8e942474c77721d412c375229b8a0", "Url": "https://api.github.com/repos/aklatt1194/SuperAwesomeOverlay", "Date": "2014-12-01T06:08:14Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.grails.plugin.i18njs.ScriptCreator.LOGGER.isDebugEnabled()) { org.grails.plugin.i18njs.ScriptCreator.LOGGER.debug((((\"remain props size is \" + (props.size())) + \", content is \") + props)); org.grails.plugin.i18njs.ScriptCreator.LOGGER.debug((((\"exluded keys size is \" + (excludedKeys.size())) + \", content is \") + excludedKeys)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/8425/buggy-version/src.java.org.grails.plugin.i18njs.ScriptCreator.java", "BodyUseAPI": ["org.apache.log4j.Logger.debug(java.lang.String)", "org.apache.log4j.Logger.debug(java.lang.String)"], "Fixed commit": "c3e4076cbfaa6e430ad243b17dea82e3264348ec", "Url": "https://api.github.com/repos/vogdb/jawr-i18", "Date": "2012-04-10T16:00:06Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.grails.plugin.i18njs.ScriptCreator.LOGGER.isDebugEnabled()) { org.grails.plugin.i18njs.ScriptCreator.LOGGER.debug((((\"props size is \" + (props.size())) + \", content is \") + props)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/8425/buggy-version/src.java.org.grails.plugin.i18njs.ScriptCreator.java", "BodyUseAPI": ["org.apache.log4j.Logger.debug(java.lang.String)"], "Fixed commit": "c3e4076cbfaa6e430ad243b17dea82e3264348ec", "Url": "https://api.github.com/repos/vogdb/jawr-i18", "Date": "2012-04-10T16:00:06Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((assignment2.BuildTree.token) == ')') assignment2.BuildTree.getToken();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/1213/buggy-version/src.assignment2.BuildTree.java", "BodyUseAPI": [], "Fixed commit": "4d113449a05cf103237e7f0e9ae21b66d22823f0", "Url": "https://api.github.com/repos/pvp51/Recursive", "Date": "2017-10-14T00:47:14Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ru.lobyrin.training.project.services.impl.EmployerServiceImpl.get(employer.getId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(oldState.getPassword().equals(employer.getPassword()))) { employer.setPassword(hashPassword(employer.getPassword())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/6514/buggy-version/services.src.main.java.ru.lobyrin.training.project.services.impl.EmployerServiceImpl.java", "BodyUseAPI": ["ru.lobyrin.training.project.datamodel.Employer.getPassword()", "ru.lobyrin.training.project.datamodel.Employer.setPassword(java.lang.String)", "ru.lobyrin.training.project.services.impl.EmployerServiceImpl.hashPassword(employer.getPassword())"], "Fixed commit": "5b34ba7fe43306f6cc19aaac940bd54deedfe282", "Url": "https://api.github.com/repos/Comrada/java_project", "Date": "2016-12-01T18:41:16Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (null != (employer.getId())) { return this.update(employer); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/6514/buggy-version/services.src.main.java.ru.lobyrin.training.project.services.impl.EmployerServiceImpl.java", "BodyUseAPI": ["ru.lobyrin.training.project.services.impl.EmployerServiceImpl.update(ru.lobyrin.training.project.datamodel.Employer)"], "Fixed commit": "5b34ba7fe43306f6cc19aaac940bd54deedfe282", "Url": "https://api.github.com/repos/Comrada/java_project", "Date": "2016-12-01T18:41:16Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (selectListStrList.isEmpty()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/1651/buggy-version/ql.src.java.org.apache.hadoop.hive.ql.parse.sql.transformer.SubQUnnestTransformer.java", "BodyUseAPI": [], "Fixed commit": "e0b37f7bd0d308389a3f088a7e8e331a10e42c5a", "Url": "https://api.github.com/repos/intel-hadoop/project-panthera-ase", "Date": "2013-03-26T05:04:43Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["project.ilyagorban.model.XY.addToIndex(int,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (newXY == (-1)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/7504/buggy-version/YetAnotherChess.src.project.ilyagorban.model.figures.Figure.java", "BodyUseAPI": [], "Fixed commit": "a669b9bdab42c05ae8985d715b64d495bdd2f608", "Url": "https://api.github.com/repos/zelig81/hyperactive-home", "Date": "2014-10-15T21:04:20Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.oltpbenchmark.benchmarks.tpcc.TPCCBenchmark.getScaleFactor()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (numWarehouses <= 0) { numWarehouses = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/2664/buggy-version/src.com.oltpbenchmark.benchmarks.tpcc.TPCCBenchmark.java", "BodyUseAPI": [], "Fixed commit": "e9995d81b2ee5126d2400ad2e919664898a703c6", "Url": "https://api.github.com/repos/dvanaken/oltpbench", "Date": "2017-04-11T22:44:43Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["modelo.aniadirBoton.BotonParaLamina.getNumeroDeBotons()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (aux == 0) { aux = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/1088/buggy-version/BuscadorFacil.src.modelo.utiles.BotonsAPaxinas.java", "BodyUseAPI": [], "Fixed commit": "26e58344973f1174a77dd072afe5313bb099780d", "Url": "https://api.github.com/repos/Nestorm18/BuscadorFacilAPP", "Date": "2016-11-22T13:20:16Z"},
{"Line": "=>1889", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (saveImage) android.widget.Toast.makeText(this, R.string.look_image_saved, Toast.LENGTH_SHORT);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/8510/buggy-version/CLOZ.src.com.hienbibi.cloz.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "09e943c7597680bdeca30791d6ee1e120c2eaaa1", "Url": "https://api.github.com/repos/cycrix13/CLOZ", "Date": "2014-08-02T18:18:00Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args.length) < 1) { sender.sendMessage(getHelp(sender)); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/7470/buggy-version/src.main.java.io.github.alshain01.petstore.PetStore.java", "BodyUseAPI": [], "Fixed commit": "684ab48af0909c5c157070ffc331bd26aa91eddb", "Url": "https://api.github.com/repos/Alshain01/PetStore", "Date": "2014-02-12T03:05:53Z"},
{"Line": "=>835", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.text.Layout.isRtlCharAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((layout.getAlignment()) == (Layout.Alignment.ALIGN_OPPOSITE)) && textIsRtl) { result = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/7053/buggy-version/library.src.main.java.uk.co.samuelwall.materialtaptargetprompt.MaterialTapTargetPrompt.java", "BodyUseAPI": [], "Fixed commit": "3133db08fa861b8a49fb495e67e6f9d8ddcfadd9", "Url": "https://api.github.com/repos/sjwall/MaterialTapTargetPrompt", "Date": "2017-04-02T13:33:14Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fromJob.get(\"mapred.input.format.class\")) == null) throw new cascading.CascadingException(\"mapred.input.format.class is required, should be set in source Scheme#sourceConfInit\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/1776/buggy-version/cascading-hadoop.src.main.java.cascading.tap.hadoop.io.MultiInputFormat.java", "BodyUseAPI": [], "Fixed commit": "d6cf7d794e86ac13c75efb131fa53077ee354c4f", "Url": "https://api.github.com/repos/cwensel/cascading", "Date": "2013-04-05T17:19:36Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.sf.antcontrib.design.Design.retreivePack(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (p == null) throw new org.apache.tools.ant.BuildException(net.sf.antcontrib.design.Design.getNoDefinitionError(className), location);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/8799/buggy-version/trunk.ant-contrib.src.java.net.sf.antcontrib.design.Design.java", "BodyUseAPI": [], "Fixed commit": "b5e602abef17c7099c654e7fa34215df9bc26945", "Url": "https://api.github.com/repos/crazy-max/ant-contrib", "Date": "2006-10-16T16:50:25Z"},
{"Line": "=>1445", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (conceptType.equals(OntConceptType.RDF_PROPERTY)) { cn.setType(ConceptType.RDFPROPERTY); }else if (conceptType.equals(OntConceptType.VARIABLE)) { cn.setType(ConceptType.VARIABLE); }else if (conceptType.equals(OntConceptType.FUNCTION_DEFN)) { cn.setType(ConceptType.FUNCTION_DEFN); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/808/buggy-version/sadl3.com.ge.research.sadl.parent.com.ge.research.sadl.jena.src.com.ge.research.sadl.jena.JenaBasedSadlModelValidator.java", "BodyUseAPI": ["com.ge.research.sadl.model.OntConceptType.equals(OntConceptType.VARIABLE)", "com.ge.research.sadl.model.OntConceptType.equals(OntConceptType.FUNCTION_DEFN)"], "Fixed commit": "95bf14c5c248fb5bb906209b65f072ffaee25d79", "Url": "https://api.github.com/repos/crapo/sadlos2", "Date": "2016-10-11T13:50:52Z"},
{"Line": "=>1309", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (expression.isFunction()) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/808/buggy-version/sadl3.com.ge.research.sadl.parent.com.ge.research.sadl.jena.src.com.ge.research.sadl.jena.JenaBasedSadlModelValidator.java", "BodyUseAPI": [], "Fixed commit": "95bf14c5c248fb5bb906209b65f072ffaee25d79", "Url": "https://api.github.com/repos/crapo/sadlos2", "Date": "2016-10-11T13:50:52Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((args[0]) != null) && (!(args[0].equals(\"\")))) { host = args[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/1058/buggy-version/modules.siddhi-launcher.samples.sample-clients.tcp-server.src.main.java.org.wso2.sp.tcp.server.TCPServer.java", "BodyUseAPI": [], "Fixed commit": "69bfd79f0b6255fedf899bc5ec3c4f2ee4631c2c", "Url": "https://api.github.com/repos/RAVEENSR/siddhi-sdk", "Date": "2017-11-08T04:16:28Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((args[1]) != null) && (!(args[1].equals(\"\")))) { port = args[1]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/1058/buggy-version/modules.siddhi-launcher.samples.sample-clients.tcp-server.src.main.java.org.wso2.sp.tcp.server.TCPServer.java", "BodyUseAPI": [], "Fixed commit": "69bfd79f0b6255fedf899bc5ec3c4f2ee4631c2c", "Url": "https://api.github.com/repos/RAVEENSR/siddhi-sdk", "Date": "2017-11-08T04:16:28Z"},
{"Line": "=>635", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (timeout > 0) { timeLeft = ((int) (stopTime - (java.lang.System.currentTimeMillis()))); if (timeLeft <= 0) { break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/599/buggy-version/usbserial.src.main.java.com.felhr.usbserial.FTDISerialDevice.java", "BodyUseAPI": [], "Fixed commit": "f63a29f0b42c1f118e46f68f4c3fa0642cb62478", "Url": "https://api.github.com/repos/felHR85/UsbSerial", "Date": "2016-09-18T19:42:19Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (frequency.isEmpty()) { frequency.put(string, 1); }else { java.lang.Integer count = frequency.get(string); if (count == null) { frequency.put(string, 1); }else { frequency.put(string, (count + 1)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/399/buggy-version/app.src.main.java.cs245.concentration.Game.CardAdapter.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Integer>.put(java.lang.String,int)", "java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)", "java.util.Map<java.lang.String, java.lang.Integer>.put(java.lang.String,int)", "java.util.Map<java.lang.String, java.lang.Integer>.put(java.lang.String,int)"], "Fixed commit": "96f574713e1a07ba486b4151b1107a1fb28c3289", "Url": "https://api.github.com/repos/flippindylan/CS245_AndroidApp", "Date": "2017-03-04T02:05:12Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((hrcek.core.Boot.sources.size()) % (hrcek.core.Boot.threads)) != 0) { count++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/673/buggy-version/DerpyWriter.src.hrcek.core.Boot.java", "BodyUseAPI": [], "Fixed commit": "9bb16cbfd4b0eaf92731b2837374ebc8154b56c7", "Url": "https://api.github.com/repos/joemahmah/Derpy-Writer", "Date": "2015-10-25T15:11:09Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (number <= 0) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/7662/buggy-version/src.main.java.io.github.aarvedahl.romanNumerals.RomanNumerals.java", "BodyUseAPI": [], "Fixed commit": "1f5dc32bebbee5f8c07155d5e1a72d488b178f57", "Url": "https://api.github.com/repos/Aarvedahl/awesome-katas", "Date": "2017-10-06T06:52:13Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isSquash()) { type = \"SQ\"; }else { type = \"BA\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/4793/buggy-version/app.src.main.java.com.markusborg.logic.Setting.java", "BodyUseAPI": [], "Fixed commit": "4c4caa85541456bf9050766403a9dfc0283edb53", "Url": "https://api.github.com/repos/mrksbrg/RacketGhost", "Date": "2015-10-27T08:57:42Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (user == null) { processInstances = new java.util.ArrayList<org.activiti.engine.runtime.ProcessInstance>(); }else { processInstances = runtimeService.createProcessInstanceQuery().includeProcessVariables().involvedUser(user.getId().toString()).list(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/8885/buggy-version/src.main.java.business.controllers.ProcessController.java", "BodyUseAPI": ["business.security.UserAuthenticationToken.getId()", "user.getId().toString()", "runtimeService.createProcessInstanceQuery().includeProcessVariables().involvedUser(user.getId().toString()).list()", "runtimeService.createProcessInstanceQuery().includeProcessVariables().involvedUser(user.getId().toString())"], "Fixed commit": "eff1193997f6b0cb489655d9dec9fd976f338eed", "Url": "https://api.github.com/repos/thehyve/dntp-portal", "Date": "2015-03-27T15:34:09Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (compareObject instanceof java.util.LinkedList) { java.util.LinkedList<?> compareValues = ((java.util.LinkedList) (compareObject)); for (java.lang.Object compareValue : compareValues) { values.add(compareValue); } }else if (compareObject instanceof java.lang.Double[]) { java.lang.Double[] compareValues = ((java.lang.Double[]) (compareObject)); values.addAll(java.util.Arrays.asList(compareValues)); }else if (compareObject instanceof java.lang.Integer[]) { java.lang.Integer[] compareValues = ((java.lang.Integer[]) (compareObject)); values.addAll(java.util.Arrays.asList(compareValues)); }else if (compareObject instanceof java.lang.Boolean[]) { java.lang.Boolean[] compareValues = ((java.lang.Boolean[]) (compareObject)); values.addAll(java.util.Arrays.asList(compareValues)); }else if (compareObject instanceof java.lang.Long[]) { java.lang.Long[] compareValues = ((java.lang.Long[]) (compareObject)); values.addAll(java.util.Arrays.asList(compareValues)); }else if (compareObject instanceof java.lang.Float[]) { java.lang.Float[] compareValues = ((java.lang.Float[]) (compareObject)); values.addAll(java.util.Arrays.asList(compareValues)); }else if (compareObject instanceof java.lang.String[]) { java.lang.String[] compareValues = ((java.lang.String[]) (compareObject)); values.addAll(java.util.Arrays.asList(compareValues)); }else if (compareObject instanceof java.util.Date[]) { java.util.Date[] compareValues = ((java.util.Date[]) (compareObject)); values.addAll(java.util.Arrays.asList(compareValues)); }else if (compareObject instanceof java.lang.Object[]) { java.lang.Object[] compareValues = ((java.lang.Object[]) (compareObject)); values.addAll(java.util.Arrays.asList(compareValues)); }else if (((((compareObject instanceof double[]) || (compareObject instanceof int[])) || (compareObject instanceof long[])) || (compareObject instanceof float[])) || (compareObject instanceof boolean[])) { if (compareObject instanceof double[]) { for (java.lang.Object compareValue : ((double[]) (compareObject))) { values.add(compareValue); } }else if (compareObject instanceof int[]) { for (java.lang.Object compareValue : ((int[]) (compareObject))) { values.add(compareValue); } }else if (compareObject instanceof long[]) { for (java.lang.Object compareValue : ((long[]) (compareObject))) { values.add(compareValue); } }else if (compareObject instanceof float[]) { for (java.lang.Object compareValue : ((float[]) (compareObject))) { values.add(compareValue); } }else if (compareObject instanceof boolean[]) { for (java.lang.Object compareValue : ((boolean[]) (compareObject))) { values.add(compareValue); } } }else if (((((((compareObject instanceof java.lang.Double) || (compareObject instanceof java.lang.Integer)) || (compareObject instanceof java.lang.Boolean)) || (compareObject instanceof java.lang.Long)) || (compareObject instanceof java.lang.Float)) || (compareObject instanceof java.lang.String)) || (compareObject instanceof java.util.Date)) { return com.smartbullet.equery.virtual.filter.util.BuilderUtil.compare(fieldValue, compareObject, clause, dateFormat); }else { com.smartbullet.equery.virtual.filter.util.BuilderUtil.LOG.info((((\"Could not cast/compare field as requested for filter \" + \"rule [\") + (compareObject.getClass().getSimpleName())) + \"]\")); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/2660/buggy-version/src.com.smartbullet.equery.virtual.filter.util.BuilderUtil.java", "BodyUseAPI": ["com.smartbullet.equery.virtual.filter.util.BuilderUtil.compare(java.lang.Object,java.lang.Object,com.smartbullet.equery.virtual.filter.enums.Clauses,java.lang.String)", "org.apache.commons.logging.Log.info(java.lang.String)", "java.lang.Class<? extends java.lang.Object>.getSimpleName()", "java.lang.Object.getClass()"], "Fixed commit": "da1c4f7bca92f0e06586a157c8047635856c6aa4", "Url": "https://api.github.com/repos/SmartBullet/EQuery", "Date": "2014-02-19T12:51:47Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(player.isSneaking())) { net.minecraft.util.EnumActionResult itemUse = net.minecraftforge.common.ForgeHooks.onPlaceItemIntoWorld(stack, player, player.getEntityWorld(), pos, result.sideHit, hitX, hitY, hitZ, hand); if (itemUse != (net.minecraft.util.EnumActionResult.PASS)) return itemUse; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/2477/buggy-version/ThutTech.src.main.java.thut.tech.common.entity.LiftInteractHandler.java", "BodyUseAPI": ["net.minecraftforge.common.ForgeHooks.onPlaceItemIntoWorld(net.minecraft.item.ItemStack,net.minecraft.entity.player.EntityPlayer,player.getEntityWorld(),net.minecraft.util.math.BlockPos,result.sideHit,float,float,float,net.minecraft.util.EnumHand)", "net.minecraft.entity.player.EntityPlayer.getEntityWorld()"], "Fixed commit": "8048684bd1693a68e7b063b06e4d9a7b6216df47", "Url": "https://api.github.com/repos/Thutmose/Thut", "Date": "2017-08-31T11:26:46Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (player.isSneaking()) { net.minecraft.util.EnumActionResult itemUse = net.minecraftforge.common.ForgeHooks.onPlaceItemIntoWorld(stack, player, player.getEntityWorld(), pos, result.sideHit, hitX, hitY, hitZ, hand); if (itemUse != (net.minecraft.util.EnumActionResult.PASS)) return itemUse; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/2477/buggy-version/ThutTech.src.main.java.thut.tech.common.entity.LiftInteractHandler.java", "BodyUseAPI": ["net.minecraftforge.common.ForgeHooks.onPlaceItemIntoWorld(net.minecraft.item.ItemStack,net.minecraft.entity.player.EntityPlayer,player.getEntityWorld(),net.minecraft.util.math.BlockPos,result.sideHit,float,float,float,net.minecraft.util.EnumHand)", "net.minecraft.entity.player.EntityPlayer.getEntityWorld()"], "Fixed commit": "8048684bd1693a68e7b063b06e4d9a7b6216df47", "Url": "https://api.github.com/repos/Thutmose/Thut", "Date": "2017-08-31T11:26:46Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((myAddDebugInfoCheckBox.isSelected()) != (mySettings.isAddDebugInfoEnabled())) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/6683/buggy-version/src.org.intellij.erlang.configuration.ErlangCompilerOptionsConfigurable.java", "BodyUseAPI": [], "Fixed commit": "d5e39cb5480efd0f5fc474d4a7a1e90df8cd2d97", "Url": "https://api.github.com/repos/istocniks/intellij-erlang", "Date": "2015-06-02T19:05:39Z"},
{"Line": "=>2030", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getRGBChannelCount()) == 1) || ((getRGBChannelCount()) == (getSizeC()))) { if (((getSizeC()) > 1) && ((getSizeT()) > 1)) { ms.dimensionOrder += \"C\"; } for (java.lang.Long nBytes : bytes) { java.lang.String axis = bytesPerAxis.get(nBytes); if ((ms.dimensionOrder.indexOf(axis)) == (-1)) { ms.dimensionOrder += axis; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/3668/buggy-version/components.formats-gpl.src.loci.formats.in.LIFReader.java", "BodyUseAPI": [], "Fixed commit": "603a765cadd0513901e967cd2137035d4c3bc8e3", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2016-03-29T03:01:08Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (connection != (WSserver.currentConnect)) { connection.getWsOutbound().writeTextMessage(buffer); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/5415/buggy-version/src.WSserver.java", "BodyUseAPI": ["WSserver.EchoMessageInbound.getWsOutbound()", "connection.getWsOutbound().writeTextMessage(java.nio.CharBuffer)"], "Fixed commit": "b00f0f021e17613077319b7603a27469227f2950", "Url": "https://api.github.com/repos/SpecialForce3331/ServerWS", "Date": "2013-01-28T10:40:22Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tier.getNetworks()) != null) { tier.getNetworks().size(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/4862/buggy-version/core.src.main.java.com.telefonica.euro_iaas.paasmanager.dao.impl.TierDaoJpaImpl.java", "BodyUseAPI": ["com.telefonica.euro_iaas.paasmanager.model.Tier.getNetworks()", "tier.getNetworks().size()"], "Fixed commit": "2e632131b1c0f91097f7e68f3029096051162394", "Url": "https://api.github.com/repos/telefonicaid/fiware-paas", "Date": "2015-02-13T15:20:37Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tier.getProductReleases()) != null) { tier.getProductReleases().size(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/4862/buggy-version/core.src.main.java.com.telefonica.euro_iaas.paasmanager.dao.impl.TierDaoJpaImpl.java", "BodyUseAPI": ["com.telefonica.euro_iaas.paasmanager.model.Tier.getProductReleases()", "tier.getProductReleases().size()"], "Fixed commit": "2e632131b1c0f91097f7e68f3029096051162394", "Url": "https://api.github.com/repos/telefonicaid/fiware-paas", "Date": "2015-02-13T15:20:37Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isTypeDiploma()) { return new net.sourceforge.stripes.action.ForwardResolution(\"/stripes/site-factsheet/site-factsheet-diploma.layout.jsp\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/7971/buggy-version/web.src.main.java.eionet.eunis.stripes.actions.SitesFactsheetActionBean.java", "BodyUseAPI": [], "Fixed commit": "2a8f207a9d0a49a3658ed57600633c7bb4542f3f", "Url": "https://api.github.com/repos/eea/eea.eunis", "Date": "2014-05-20T08:46:59Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((engine.GlobalData.server) != null) GlobalData.server.instantStop(null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/9030/buggy-version/src.ServerForm.java", "BodyUseAPI": [], "Fixed commit": "176bd7c8e1bd4382c68037c1926c553b441d681b", "Url": "https://api.github.com/repos/DrFair/Game", "Date": "2016-12-15T14:25:25Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(server.network.isOpen())) { GlobalData.server = null; StartServer.isRunning = false; java.lang.System.out.println((\"Error in starting server: \" + (server.network.error))); java.lang.System.out.println(\"Server has stopped.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/9030/buggy-version/src.StartServer.java", "BodyUseAPI": ["java.io.PrintStream.println((\"Error in starting server: \" + (server.network.error)))"], "Fixed commit": "176bd7c8e1bd4382c68037c1926c553b441d681b", "Url": "https://api.github.com/repos/DrFair/Game", "Date": "2016-12-15T14:25:25Z"},
{"Line": "=>462", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((state.stateData.opt.rctx) == null) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/7179/buggy-version/opentripplanner-routing.src.main.java.org.opentripplanner.routing.core.StateEditor.java", "BodyUseAPI": [], "Fixed commit": "d355e8d9523f747b23e62217d201e51c479b26b6", "Url": "https://api.github.com/repos/StichtingOpenGeo/OpenTripPlanner", "Date": "2012-05-21T01:34:00Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((options.rctx) != null) { this.pathParserStates = new int[options.rctx.pathParsers.length]; java.util.Arrays.fill(this.pathParserStates, AutomatonState.START); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/7179/buggy-version/opentripplanner-routing.src.main.java.org.opentripplanner.routing.core.State.java", "BodyUseAPI": [], "Fixed commit": "d355e8d9523f747b23e62217d201e51c479b26b6", "Url": "https://api.github.com/repos/StichtingOpenGeo/OpenTripPlanner", "Date": "2012-05-21T01:34:00Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cz.advel.stack.instrument.MethodInsnNode.getPrevious()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (insnBefore instanceof cz.advel.stack.instrument.LineNumberNode) { insnBefore = insnBefore.getPrevious(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/745/buggy-version/src.main.java.cz.advel.stack.instrument.InstrumentMethod.java", "BodyUseAPI": ["cz.advel.stack.instrument.AbstractInsnNode.getPrevious()"], "Fixed commit": "d51bc26f68affabb2f1356433f42412a26e14db1", "Url": "https://api.github.com/repos/tterrag1098/jbullet", "Date": "2017-12-12T11:59:39Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.inventory.PlayerInventory.getHelmet()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (!(oldItem == null)) inv.addItem(oldItem);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/6754/buggy-version/src.main.java.cz.sycha.hattie.Main.java", "BodyUseAPI": ["org.bukkit.inventory.PlayerInventory.addItem(org.bukkit.inventory.ItemStack)"], "Fixed commit": "78dffc798a9cfc413ebd7a189d0eda1d1ee98220", "Url": "https://api.github.com/repos/ImagineCraft/Hattie", "Date": "2016-09-02T22:07:45Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (mojarraMinorVersion > 2) { namespacedViewStateSupported = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/1772/buggy-version/bridge-impl.src.main.java.com.liferay.faces.bridge.renderkit.bridge.internal.ResponseWriterBridgeCompat_2_0_Impl.java", "BodyUseAPI": [], "Fixed commit": "381f9a07eca699e7063c60489034b040e0ab8436", "Url": "https://api.github.com/repos/vsingleton/liferay-faces-bridge-impl", "Date": "2016-07-11T23:26:28Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (mojarraMajorVersion > 2) { namespacedViewStateSupported = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/1772/buggy-version/bridge-impl.src.main.java.com.liferay.faces.bridge.renderkit.bridge.internal.ResponseWriterBridgeCompat_2_0_Impl.java", "BodyUseAPI": [], "Fixed commit": "381f9a07eca699e7063c60489034b040e0ab8436", "Url": "https://api.github.com/repos/vsingleton/liferay-faces-bridge-impl", "Date": "2016-07-11T23:26:28Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(p.isAlive())) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/8508/buggy-version/src.it.unibs.pajc.agar.GameController.java", "BodyUseAPI": [], "Fixed commit": "c19fb44e27eb68366ac0de705fdc7fecfc5dae9b", "Url": "https://api.github.com/repos/FloydJohn/AgarPajc", "Date": "2016-02-19T16:23:38Z"},
{"Line": "=>794", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openforis.collect.manager.SurveyManager.getById(java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (oldPublishedSurvey != null) { removeFromCache(oldPublishedSurvey); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/5190/buggy-version/collect-core.src.main.java.org.openforis.collect.manager.SurveyManager.java", "BodyUseAPI": ["org.openforis.collect.manager.SurveyManager.removeFromCache(org.openforis.collect.model.CollectSurvey)"], "Fixed commit": "f53e9d6d1811c77c466a36a82095609c8fe4fe26", "Url": "https://api.github.com/repos/openforis/collect", "Date": "2015-10-16T15:59:03Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((matchCount >= 1) && (rowCount == 1)) { return \"hallo\"; }else if ((matchCount >= 1) && (rowCount == 2)) { return \"gutentag\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/8705/buggy-version/src.resources.MessageAnalyzer.java", "BodyUseAPI": [], "Fixed commit": "f4066f7f380d07875dcb7b51b04f4f43c6cf98c4", "Url": "https://api.github.com/repos/Brimill/MasterOfCoin", "Date": "2017-07-24T10:26:34Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((worldObj) != null) && (!(worldObj.isRemote))) { setNeedsNetworkUpdate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/835/buggy-version/src.main.java.forestry.apiculture.gadgets.TileAlveary.java", "BodyUseAPI": [], "Fixed commit": "d183abfd11e8d29f9c0c62db42ae4bade76c3fc1", "Url": "https://api.github.com/repos/ForestryMC/ForestryMC", "Date": "2015-06-08T04:09:20Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((clauses.size()) > 0) { return clauses.get(0).rewrite(reader); }else { return super.rewrite(reader); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/5788/buggy-version/src.mtas.search.spans.MtasSpanOrQuery.java", "BodyUseAPI": ["clauses.get(0).rewrite(org.apache.lucene.index.IndexReader)", "java.util.List<mtas.search.spans.util.MtasSpanQuery>.get(int)"], "Fixed commit": "f9ead31eaa355c2138ba2acaa0046982f9a11f99", "Url": "https://api.github.com/repos/meertensinstituut/mtas", "Date": "2017-03-07T18:25:07Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((clauses.size()) > 0) { return clauses.get(0).rewrite(reader); }else { return super.rewrite(reader); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/5788/buggy-version/src.mtas.search.spans.MtasSpanAndQuery.java", "BodyUseAPI": ["clauses.get(0).rewrite(org.apache.lucene.index.IndexReader)", "java.util.List<mtas.search.spans.util.MtasSpanQuery>.get(int)"], "Fixed commit": "f9ead31eaa355c2138ba2acaa0046982f9a11f99", "Url": "https://api.github.com/repos/meertensinstituut/mtas", "Date": "2017-03-07T18:25:07Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<java.lang.String>.toArray(java.lang.String[])"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((args.length) > 0) { java.lang.String command = argsOr[1]; cmd.issueCommand(command, args, event); }else { cmd.issueCommand(\"DisCal\", args, event); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/1627/buggy-version/src.main.java.com.cloudcraftgaming.module.command.CommandListener.java", "BodyUseAPI": ["com.cloudcraftgaming.module.command.CommandExecutor.issueCommand(java.lang.String,java.lang.String[],sx.blah.discord.handle.impl.events.MessageReceivedEvent)", "com.cloudcraftgaming.module.command.CommandExecutor.issueCommand(java.lang.String,java.lang.String[],sx.blah.discord.handle.impl.events.MessageReceivedEvent)"], "Fixed commit": "aab8f42afa31b383f65a08cc8f0bc3a388444338", "Url": "https://api.github.com/repos/NovaFox161/DisCal-Discord-Bot", "Date": "2017-02-04T01:05:26Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((OperationRemark != null) && (!(\"\".equalsIgnoreCase(OperationRemark)))) { OperationRemark += \"<br>\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/8977/buggy-version/src.java.com.smi.travel.datalayer.view.dao.impl.GuideJobImpl.java", "BodyUseAPI": [], "Fixed commit": "a66c53e95ab518bc6816991f612ae57d9c231dce", "Url": "https://api.github.com/repos/iCONEXT/SMI_Travel", "Date": "2015-06-18T10:31:08Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.common.collect.Sets.newHashSet()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (tags.isEmpty()) { tags.add(UNCLASSIFIED_TAG); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/5618/buggy-version/atlas-legacy.src.main.java.org.atlasapi.system.legacy.PaTagMap.java", "BodyUseAPI": ["java.util.Set<java.lang.String>.add(java.lang.String)"], "Fixed commit": "9166de02a2f3598ae46be5a58902a1cabb4c5bc8", "Url": "https://api.github.com/repos/atlasapi/atlas-deer", "Date": "2016-06-22T13:27:47Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gson.Gson.fromJson(java.lang.String,java.lang.reflect.Type)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (theObj != null) { com.example.android.ud853.finalproject.adapter.MovieObjectAdapter adp = new com.example.android.ud853.finalproject.adapter.MovieObjectAdapter(getActivity(), theObj); grdMovieList.setAdapter(adp); }else { com.example.android.ud853.finalproject.adapter.MovieObjectAdapter adp = new com.example.android.ud853.finalproject.adapter.MovieObjectAdapter(getActivity(), new java.util.ArrayList<com.example.android.ud853.finalproject.app.MovieObject>()); grdMovieList.setAdapter(adp); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/4944/buggy-version/app.src.main.java.com.example.android.ud853.finalproject.app.GridMovieFragment.java", "BodyUseAPI": [], "Fixed commit": "e37b72afdf9a3e032b95e921d2d232e2991332f1", "Url": "https://api.github.com/repos/withered-flowers/ud853_finalproject", "Date": "2016-12-06T15:40:44Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.Boolean.TRUE.equals(existingSubscription.isFlexTime())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/6529/buggy-version/src.se.osdsquash.gui.ValidatorHelper.java", "BodyUseAPI": [], "Fixed commit": "bcbcf1fb9b61df0ec5009c789725c12f540c263d", "Url": "https://api.github.com/repos/troylee33/SquashCustomers", "Date": "2017-12-20T21:14:53Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tickSpace < 10) { return java.math.BigDecimal.ONE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/8987/buggy-version/xchart.src.main.java.com.xeiam.xchart.internal.chartpart.AxisTickNumericalCalculator.java", "BodyUseAPI": [], "Fixed commit": "e42bd6c32195fb10d348aed414726e0d66413cf7", "Url": "https://api.github.com/repos/netomi/XChart", "Date": "2013-06-16T08:52:14Z"},
{"Line": "=>534", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (m.find()) { name = m.replaceFirst(\"\"); pn.setType(NameType.PLACEHOLDER); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/6586/buggy-version/src.main.java.org.gbif.nameparser.NameParser.java", "BodyUseAPI": ["java.util.regex.Matcher.replaceFirst(java.lang.String)"], "Fixed commit": "85b15c233b817e4fff42471fc53c43948988ea37", "Url": "https://api.github.com/repos/gbif/name-parser", "Date": "2016-09-08T11:23:41Z"},
{"Line": "=>529", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (m.find()) { name = m.replaceFirst(\" $1\"); pn.setType(NameType.PLACEHOLDER); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/6586/buggy-version/src.main.java.org.gbif.nameparser.NameParser.java", "BodyUseAPI": ["java.util.regex.Matcher.replaceFirst(java.lang.String)"], "Fixed commit": "85b15c233b817e4fff42471fc53c43948988ea37", "Url": "https://api.github.com/repos/gbif/name-parser", "Date": "2016-09-08T11:23:41Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.autoRefresh) != null) { this.autoRefresh.stopAutoRefresh(); this.autoRefresh = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/3754/buggy-version/src.sta.andswtch.extensionLead.ExtensionLead.java", "BodyUseAPI": [], "Fixed commit": "f01ee478d6713e06287074eac5bdc81da7a28acd", "Url": "https://api.github.com/repos/scurrility/andswtch", "Date": "2011-03-16T13:53:33Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((data != null) && ((data.length) > 0)) { final java.util.List<com.crtb.tunnelmonitor.entity.TunnelSettlementTotalData> pointTestDataList = java.util.Arrays.asList(((com.crtb.tunnelmonitor.entity.TunnelSettlementTotalData[]) (data))); storeTunnelPoints(pointTestDataList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/4168/buggy-version/CRTBTunnelMonitor.src.com.crtb.tunnelmonitor.task.DataDownloadManager.java", "BodyUseAPI": [], "Fixed commit": "97be15142996587b2ffe45aa0ffb46f603213f17", "Url": "https://api.github.com/repos/2014-2/001", "Date": "2014-05-02T02:44:31Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (user.user.User.findUserByName(((java.lang.String) (request.getSession().getAttribute(\"username\")))).isOwner()) response.sendRedirect(\"../product.jsp?pagetype=admin\"); else response.sendRedirect(\"../product.jsp?pagetype=browsing\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/8643/buggy-version/CSE135.src.user.LoginHandler.java", "BodyUseAPI": [], "Fixed commit": "839056978401cee3b839a3fa87388babb690ab85", "Url": "https://api.github.com/repos/matthias-springer/cse135-serverside-web-apps", "Date": "2014-05-02T06:14:19Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((s.getResidue()) < (s_store.getResidue())) s_store = s;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/972/buggy-version/prog3.src.AbstractSolution.java", "BodyUseAPI": [], "Fixed commit": "65608446464ef735b57e83a739682238a85b8daf", "Url": "https://api.github.com/repos/jyquinn/cs124-prog3", "Date": "2012-04-26T00:24:40Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mMinute) > 29) { endMinute = java.lang.String.valueOf((((mMinute) + 30) - 60)); if ((((mMinute) + 30) - 60) < 10) endMinute = \"0\" + endMinute; if ((java.lang.Integer.parseInt((hour + 1))) > 12) { hour = java.lang.String.valueOf((((java.lang.Integer.parseInt(hour)) + 1) - 12)); endHour = hour; }else endHour = java.lang.String.valueOf(((java.lang.Integer.parseInt(hour)) + 1)); }else endMinute = java.lang.String.valueOf(((mMinute) + 30));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/472/buggy-version/android-bootstrap.app.src.main.java.com.lsus.teamcoach.teamcoachapp.ui.Calender.AddEventFrag.java", "BodyUseAPI": ["java.lang.String.valueOf(int)", "java.lang.String.valueOf(int)"], "Fixed commit": "5b309f953adbfaf7c5163731dc269ba913e9c48e", "Url": "https://api.github.com/repos/donadley/TeamCoach", "Date": "2015-04-29T16:11:00Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((mHour) + 1) == 12) hour = java.lang.String.valueOf(((mHour) + 1)); else hour = java.lang.String.valueOf((((mHour) + 1) - 12));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/472/buggy-version/android-bootstrap.app.src.main.java.com.lsus.teamcoach.teamcoachapp.ui.Calender.AddEventFrag.java", "BodyUseAPI": ["java.lang.String.valueOf(int)", "java.lang.String.valueOf(int)"], "Fixed commit": "5b309f953adbfaf7c5163731dc269ba913e9c48e", "Url": "https://api.github.com/repos/donadley/TeamCoach", "Date": "2015-04-29T16:11:00Z"},
{"Line": "=>400", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.ssehub.easy.varModel.confModel.Configuration.getDecision(net.ssehub.easy.varModel.model.AbstractVariable)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (null != frozenVariable) { frozenVariable.freeze(selector); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/6845/buggy-version/Plugins.VarModel.Model.src.net.ssehub.easy.varModel.confModel.Configuration.java", "BodyUseAPI": ["net.ssehub.easy.varModel.confModel.IDecisionVariable.freeze(net.ssehub.easy.varModel.confModel.IFreezeSelector)"], "Fixed commit": "990c3157693fd08832e67f8b14b76f28b8183881", "Url": "https://api.github.com/repos/SSEHUB/EASyProducer", "Date": "2016-07-01T12:00:36Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (itemElement != null) { itemElementConstraintInformation = itemElement.getConstraintInformation(); if (itemElementConstraintInformation == null) { gov.anl.aps.cdb.portal.model.db.entities.Item parentItem = itemElement.getParentItem(); if (parentItem != null) { gov.anl.aps.cdb.portal.controllers.ItemController itemDomainController = gov.anl.aps.cdb.portal.controllers.ItemController.findDomainControllerForItem(parentItem); itemElementConstraintInformation = itemDomainController.loadItemElementConstraintInformation(itemElement); itemElement.setConstraintInformation(itemElementConstraintInformation); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/3414/buggy-version/src.java.CdbWebPortal.src.java.gov.anl.aps.cdb.portal.controllers.ItemElementController.java", "BodyUseAPI": ["gov.anl.aps.cdb.portal.model.db.entities.ItemElement.setConstraintInformation(gov.anl.aps.cdb.portal.view.objects.ItemElementConstraintInformation)", "gov.anl.aps.cdb.portal.controllers.ItemController.loadItemElementConstraintInformation(gov.anl.aps.cdb.portal.model.db.entities.ItemElement)", "gov.anl.aps.cdb.portal.model.db.entities.ItemElement.getConstraintInformation()", "gov.anl.aps.cdb.portal.model.db.entities.ItemElement.getParentItem()"], "Fixed commit": "e74e0a5595ee808e96c3fc04ef724eede8e4da9b", "Url": "https://api.github.com/repos/iTerminate/Component.DB", "Date": "2017-03-10T19:26:34Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((defineService.getApplicationDetails()) != null) && ((defineService.getApplicationDetails().projects.size()) > 0)) { try { return configuration.getSeverityFromKey(defineService.getApplicationDetails().projects.get(0).programmingLanguage, ruleTypeKey); } catch (husacct.validate.domain.exception.SeverityNotFoundException e) { husacct.validate.domain.validation.DefaultSeverities defaultSeverity = getCategoryKeyClassDTO(ruleTypeKey); if (defaultSeverity != null) { return configuration.getSeverityByName(defaultSeverity.toString()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/4842/buggy-version/src.husacct.validate.domain.factory.ruletype.RuleTypesFactory.java", "BodyUseAPI": ["defineService.getApplicationDetails().projects.get(int)", "husacct.validate.domain.configuration.ConfigurationServiceImpl.getSeverityFromKey(defineService.getApplicationDetails().projects.get(0).programmingLanguage,java.lang.String)", "husacct.define.IDefineService.getApplicationDetails()"], "Fixed commit": "b7b77badabebcd4beea80e48a13987735ee2b1ec", "Url": "https://api.github.com/repos/timohu/HUSACCT", "Date": "2013-04-11T14:12:23Z"},
{"Line": "=>2903", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((SearchClicked) != true) { showAnimatedSubcategories(subCatList, 1.0, demo.kolorob.kolorobdemoversion.utils.AppConstants.ALL_CAT_ICONS_NEW[((ci.getId()) - 1)], ci.getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/2518/buggy-version/app.src.main.java.demo.kolorob.kolorobdemoversion.activity.PlaceDetailsActivityNewLayout.java", "BodyUseAPI": [], "Fixed commit": "171619fb07f887efdcd7ccde9bf1f796763c36e4", "Url": "https://api.github.com/repos/Kolorob/Kolorob", "Date": "2016-10-09T07:57:35Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<com.watabou.noosa.Gizmo>.indexOf(com.watabou.noosa.Gizmo)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((length) - 1) != index) { return remove(g); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/1495/buggy-version/com.watabou.noosa.Group.java", "BodyUseAPI": [], "Fixed commit": "459914c835f014ebd12b03dcc892658958e8341f", "Url": "https://api.github.com/repos/00-Evan/PD-classes", "Date": "2014-08-30T03:45:04Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((jdbcTemplate.update(ru.org.linux.spring.dao.UserDao.queryChangeScore, delta, id)) == 0) { throw new java.lang.IllegalArgumentException(new ru.org.linux.site.UserNotFoundException(id)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/7516/buggy-version/src.main.java.ru.org.linux.spring.dao.UserDao.java", "BodyUseAPI": [], "Fixed commit": "9cefbbc8128b10aa19277aaa24c82d7f575584bc", "Url": "https://api.github.com/repos/maxcom/lorsource", "Date": "2011-09-04T06:11:40Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((dataSnapshot.getValue()) != null) { savedAmount = java.lang.Math.round(java.lang.Float.parseFloat(java.lang.String.valueOf(dataSnapshot.getValue()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/1796/buggy-version/app.src.main.java.com.epicodus.quibit.fragments.ProgressFragment.java", "BodyUseAPI": ["java.lang.Math.round(float)", "com.google.firebase.database.DataSnapshot.getValue()", "java.lang.Float.parseFloat(java.lang.String)", "java.lang.String.valueOf(dataSnapshot.getValue())"], "Fixed commit": "b7e1629108fb03e0829b72c6e5de951fafd64c04", "Url": "https://api.github.com/repos/ChanceMagno/Quibit-android", "Date": "2017-06-20T04:33:58Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((dataSnapshot.getValue()) != null) { totalDatabaseAmount = java.lang.Float.parseFloat(java.lang.String.valueOf(dataSnapshot.getValue())); updateTotalRef.setValue(((totalDatabaseAmount) + (amount))); }else { updateTotalRef.setValue(amount); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/1796/buggy-version/app.src.main.java.com.epicodus.quibit.adapters.FirebaseQuibitsViewHolder.java", "BodyUseAPI": ["com.google.firebase.database.DataSnapshot.getValue()", "java.lang.Float.parseFloat(java.lang.String)", "java.lang.String.valueOf(dataSnapshot.getValue())"], "Fixed commit": "b7e1629108fb03e0829b72c6e5de951fafd64c04", "Url": "https://api.github.com/repos/ChanceMagno/Quibit-android", "Date": "2017-06-20T04:33:58Z"},
{"Line": "=>516", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (obj == null) { throw new java.lang.NullPointerException(\"Fragment.getView() == null when inject events to it.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/9264/buggy-version/light-android-annotation.src.main.java.com.wq.android.lightannotation.Injector.java", "BodyUseAPI": [], "Fixed commit": "93f9265d98552dc68b17526c53e8c1e01ba9b400", "Url": "https://api.github.com/repos/kim-wang-bj/LightAndroidAnnotation", "Date": "2016-07-22T02:30:20Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) < (Build.VERSION_CODES.HONEYCOMB)) { onSearchRequested(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/4335/buggy-version/src.com.cruzroja.creuroja.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "e4e09abae4b76943a537bf19d6e7a7185155a79b", "Url": "https://api.github.com/repos/darthsuicune/CreuRoja", "Date": "2013-04-27T19:05:48Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.dom4j.Element.element(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (pk == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/4283/buggy-version/src.main.java.org.richie.codeGen.database.pdm.PdmParser.java", "BodyUseAPI": [], "Fixed commit": "2006ef02d96d1b3eb591474567fbd15829193509", "Url": "https://api.github.com/repos/elfkingw/codeGen", "Date": "2013-10-17T14:53:50Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.cupofcrumley.gyokuro.config.ConfigImpl<T>.getDefault(java.lang.reflect.Method)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (defaultValue != null) { validateReturnValue(proxy, method, defaultValue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/238/buggy-version/gyokuro-config.src.main.java.com.cupofcrumley.gyokuro.config.ConfigImpl.java", "BodyUseAPI": ["com.cupofcrumley.gyokuro.config.ConfigImpl<T>.validateReturnValue(java.lang.Object,java.lang.reflect.Method,java.lang.Object)"], "Fixed commit": "24f578aab32a1e0491ffe5e2062c44ca63ca90c0", "Url": "https://api.github.com/repos/crumley/gyokuro", "Date": "2013-02-21T23:20:32Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.Menu.findItem(R.id.menu_radio)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (null != miRadio) { if (isRadioPlaying) { miRadio.setIcon(R.drawable.ic_action_pause_over_video); }else { miRadio.setIcon(R.drawable.ic_action_play_over_video); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/3336/buggy-version/app.src.info.guardianproject.securereaderinterface.FragmentActivityWithMenu.java", "BodyUseAPI": ["android.view.MenuItem.setIcon(R.drawable.ic_action_play_over_video)", "android.view.MenuItem.setIcon(R.drawable.ic_action_pause_over_video)"], "Fixed commit": "0b16a17ca10a45e44dfc3cae0246f087e98ffddf", "Url": "https://api.github.com/repos/scalio/securereader", "Date": "2015-04-01T03:53:02Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (results == null) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/2456/buggy-version/src.jrobo.PirateBay.java", "BodyUseAPI": [], "Fixed commit": "27a6746e1060ae4649c0dd7595884fe3ad88a84f", "Url": "https://api.github.com/repos/BullShark/JRobo", "Date": "2013-02-26T23:56:01Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((de.tu.darmstadt.seemoo.ansian.control.SourceControl.getSource()) instanceof de.tu.darmstadt.seemoo.ansian.model.sources.RtlsdrSource) ((de.tu.darmstadt.seemoo.ansian.model.sources.RtlsdrSource) (de.tu.darmstadt.seemoo.ansian.control.SourceControl.getSource())).setManualGain(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/3341/buggy-version/app.src.main.java.de.tu.darmstadt.seemoo.ansian.control.threads.SourceControlThread.java", "BodyUseAPI": [], "Fixed commit": "94be36cea6474bb4d89bd508e525edffd88c4ee2", "Url": "https://api.github.com/repos/demantz/AnSiAn", "Date": "2016-05-03T19:49:26Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((de.tu.darmstadt.seemoo.ansian.control.SourceControl.getSource()) instanceof de.tu.darmstadt.seemoo.ansian.model.sources.RtlsdrSource) ((de.tu.darmstadt.seemoo.ansian.model.sources.RtlsdrSource) (de.tu.darmstadt.seemoo.ansian.control.SourceControl.getSource())).setManualGain(Preferences.MISC_PREFERENCE.isManualGain());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/3341/buggy-version/app.src.main.java.de.tu.darmstadt.seemoo.ansian.control.threads.SourceControlThread.java", "BodyUseAPI": [], "Fixed commit": "94be36cea6474bb4d89bd508e525edffd88c4ee2", "Url": "https://api.github.com/repos/demantz/AnSiAn", "Date": "2016-05-03T19:49:26Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (updatedRelation != null) _asscMap.put((_asscMap.containsKey(key1) ? key1 : key2), updatedRelation);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/932/buggy-version/src.main.java.RelationsReader.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, RelationType>.put((_asscMap.containsKey(key1) ? key1 : key2),RelationType)"], "Fixed commit": "10cc5ee4d8baf91b198ba45fc2b258937ef4fe9a", "Url": "https://api.github.com/repos/Kaushik-18/cmpe202-UMLParser", "Date": "2017-05-13T20:44:46Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (admin.isInstalled(admin.getFeature(\"tesb-ccs-service-rest\"))) { admin.uninstallFeature(\"tesb-ccs-service-rest\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/2871/buggy-version/callcontext-store.commands.src.main.java.org.talend.esb.callcontext.store.commands.StopCallbackRepo.java", "BodyUseAPI": ["org.apache.karaf.features.FeaturesService.uninstallFeature(java.lang.String)"], "Fixed commit": "00e2a10b600bf8c8b243654a02562663d628a129", "Url": "https://api.github.com/repos/Talend/tesb-rt-se", "Date": "2014-05-16T09:19:02Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((api.getAttributes()) != null) && (api.getAttributes().containsKey(\"frequency\"))) { switch (api.getAttributes().get(\"frequency\").toString()) { case \"Time Interval\" : schedule.frequency(com.solidfire.adaptor.TimeIntervalFrequency.builder().days(((api.getHours()) / 24)).hours(((api.getHours()) % 24)).minutes(api.getMinutes()).build()); break; case \"Days Of Month\" : schedule.frequency(com.solidfire.adaptor.DaysOfMonthFrequency.builder().hours(api.getHours()).minutes(api.getMinutes()).monthdays(api.getMonthdays()).build()); break; case \"Days Of Week\" : schedule.frequency(com.solidfire.adaptor.DaysOfWeekFrequency.builder().hours(api.getHours()).minutes(api.getMinutes()).weekdays(com.solidfire.adaptor.ScheduleAdaptor.toWeekdays(api.getWeekdays())).build()); break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/8961/buggy-version/src.main.java.com.solidfire.adaptor.ScheduleAdaptor.java", "BodyUseAPI": ["com.solidfire.adaptor.TimeIntervalFrequency.builder().days(((api.getHours()) / 24)).hours(((api.getHours()) % 24)).minutes(api.getMinutes()).build()", "com.solidfire.adaptor.ApiSchedule.getMonthdays()", "com.solidfire.adaptor.DaysOfWeekFrequency.builder().hours(api.getHours())", "Schedule.Builder.frequency(com.solidfire.adaptor.DaysOfMonthFrequency.builder().hours(api.getHours()).minutes(api.getMinutes()).monthdays(api.getMonthdays()).build())", "com.solidfire.adaptor.ApiSchedule.getMinutes()", "com.solidfire.adaptor.DaysOfWeekFrequency.builder().hours(api.getHours()).minutes(api.getMinutes()).weekdays(com.solidfire.adaptor.Weekday[])", "com.solidfire.adaptor.TimeIntervalFrequency.builder().days(((api.getHours()) / 24))", "com.solidfire.adaptor.ApiSchedule.getHours()", "com.solidfire.adaptor.ApiSchedule.getHours()", "com.solidfire.adaptor.ApiSchedule.getHours()", "com.solidfire.adaptor.TimeIntervalFrequency.builder().days(((api.getHours()) / 24)).hours(((api.getHours()) % 24)).minutes(api.getMinutes())", "com.solidfire.adaptor.DaysOfMonthFrequency.builder().hours(api.getHours()).minutes(api.getMinutes()).monthdays(api.getMonthdays())", "com.solidfire.adaptor.ApiSchedule.getAttributes()", "api.getAttributes().get(java.lang.String)", "com.solidfire.adaptor.ApiSchedule.getHours()", "com.solidfire.adaptor.DaysOfMonthFrequency.builder().hours(api.getHours()).minutes(api.getMinutes()).monthdays(api.getMonthdays()).build()", "Schedule.Builder.frequency(com.solidfire.adaptor.TimeIntervalFrequency.builder().days(((api.getHours()) / 24)).hours(((api.getHours()) % 24)).minutes(api.getMinutes()).build())", "api.getAttributes().get(\"frequency\").toString()", "com.solidfire.adaptor.TimeIntervalFrequency.builder().days(((api.getHours()) / 24)).hours(((api.getHours()) % 24))", "com.solidfire.adaptor.ApiSchedule.getMinutes()", "com.solidfire.adaptor.DaysOfWeekFrequency.builder().hours(api.getHours()).minutes(api.getMinutes())", "com.solidfire.adaptor.ScheduleAdaptor.toWeekdays(api.getWeekdays())", "com.solidfire.adaptor.ApiSchedule.getWeekdays()", "Schedule.Builder.frequency(com.solidfire.adaptor.DaysOfWeekFrequency.builder().hours(api.getHours()).minutes(api.getMinutes()).weekdays(com.solidfire.adaptor.ScheduleAdaptor.toWeekdays(api.getWeekdays())).build())", "com.solidfire.adaptor.DaysOfMonthFrequency.builder().hours(api.getHours()).minutes(api.getMinutes())", "com.solidfire.adaptor.DaysOfMonthFrequency.builder().hours(api.getHours())", "com.solidfire.adaptor.ApiSchedule.getMinutes()", "com.solidfire.adaptor.DaysOfWeekFrequency.builder().hours(api.getHours()).minutes(api.getMinutes()).weekdays(com.solidfire.adaptor.ScheduleAdaptor.toWeekdays(api.getWeekdays())).build()"], "Fixed commit": "16d8636dbade27209b3c0423ea15201d12f0ec65", "Url": "https://api.github.com/repos/solidfire/solidfire-sdk-java", "Date": "2016-08-31T20:28:16Z"},
{"Line": "=>356", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((device) != null) && ((room) != null)) { outState.putString(\"roomId\", room.getId()); outState.putString(\"deviceId\", device.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/5908/buggy-version/interfaces.android.src.st.alr.homA.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "c8fcd25d7655256febc5dac71c69ed84ed353b1a", "Url": "https://api.github.com/repos/binarybucks/homA", "Date": "2013-06-06T17:36:44Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["valandur.webapi.servlet.ServletData.getRequestBody()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (reqJson == null) { data.sendError(HttpServletResponse.SC_BAD_REQUEST, (\"Invalid command data: \" + (data.getLastParseError().getMessage()))); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/605/buggy-version/src.main.java.valandur.webapi.servlet.cmd.CmdServlet.java", "BodyUseAPI": [], "Fixed commit": "d7d1507a49fbb7629c33b680762981134cb023a7", "Url": "https://api.github.com/repos/Valandur/Web-API", "Date": "2017-08-23T10:06:10Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tools.callGraph.CallGraphListener.resolveCalledFunction(long)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (dstIds == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/5915/buggy-version/src.tools.callGraph.CallGraphListener.java", "BodyUseAPI": [], "Fixed commit": "f543f2e411743dd9ad999b2f79ba299789ce2baa", "Url": "https://api.github.com/repos/fabsx00/joern", "Date": "2013-07-03T20:29:22Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (callee.contains(\" \")) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/5915/buggy-version/src.tools.callGraph.CallGraphListener.java", "BodyUseAPI": [], "Fixed commit": "f543f2e411743dd9ad999b2f79ba299789ce2baa", "Url": "https://api.github.com/repos/fabsx00/joern", "Date": "2013-07-03T20:29:22Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((channel.size()) > 1) { int row = (resultsTable.getCounter()) - 1; resultsTable.addValue(\"Count Ratio (%)\", ratio(resultsTable.getValueAsDouble(1, row), resultsTable.getValueAsDouble(3, row))); resultsTable.addValue(\"Intensity Ratio (%)\", ratio(resultsTable.getValueAsDouble(2, row), resultsTable.getValueAsDouble(4, row))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/5621/buggy-version/src.main.java.Spheroid_RGB.java", "BodyUseAPI": [], "Fixed commit": "2920dc154fd91d47e4d317cbe3262ff8488e0300", "Url": "https://api.github.com/repos/IamMM/Spheroid_RGB", "Date": "2016-09-27T01:00:02Z"},
{"Line": "=>318", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ST.hasMoreTokens()) ST.nextToken();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/7936/buggy-version/src.edu.purdue.comradesgui.CommunicatorOptionsFrameUCI.java", "BodyUseAPI": ["java.util.StringTokenizer.nextToken()"], "Fixed commit": "a415aed2065365982a303d285982525bad997037", "Url": "https://api.github.com/repos/DeviousCrypto/CNIT325_TeamProjectFall2017", "Date": "2017-12-11T14:19:41Z"},
{"Line": "=>320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ST.hasMoreTokens()) ST.nextToken();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/7936/buggy-version/src.edu.purdue.comradesgui.CommunicatorOptionsFrameUCI.java", "BodyUseAPI": ["java.util.StringTokenizer.nextToken()"], "Fixed commit": "a415aed2065365982a303d285982525bad997037", "Url": "https://api.github.com/repos/DeviousCrypto/CNIT325_TeamProjectFall2017", "Date": "2017-12-11T14:19:41Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(attributeMetaData.getDataType().getEnumType().equals(MolgenisFieldTypes.FieldTypeEnum.COMPOUND))) { jdbcTemplate.execute(getAlterSql(attributeMetaData)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/7607/buggy-version/molgenis-data-mysql.src.main.java.org.molgenis.data.mysql.MysqlRepository.java", "BodyUseAPI": ["org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)", "org.molgenis.data.mysql.MysqlRepository.getAlterSql(org.molgenis.data.AttributeMetaData)"], "Fixed commit": "0ee413315f7af258f7790de5a1a6bd63c4d04897", "Url": "https://api.github.com/repos/erwinwinder/molgenis", "Date": "2015-03-09T12:28:16Z"},
{"Line": "=>297", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((selectedPlace) != null) { MY_EVENT.setEventLocation(selectedPlace.getName().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/2310/buggy-version/Timetale.app.src.main.java.com.dpckou.agoston.timetale.EventActivity.java", "BodyUseAPI": [], "Fixed commit": "f09a5cbaffaf11718bab436af188be0ab3cb51c0", "Url": "https://api.github.com/repos/adakiss/android", "Date": "2017-11-18T22:23:20Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mShareActionProvider) != null) { mShareActionProvider.setShareIntent(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/2240/buggy-version/library.src.main.java.com.raymondtz65.prolificlibrary.library.BookDetailActivity.java", "BodyUseAPI": [], "Fixed commit": "4af3d0c87e60d9960376487d687b0af75ff8b3d0", "Url": "https://api.github.com/repos/skyzhangty/ProlificLibrary", "Date": "2014-04-07T15:32:21Z"},
{"Line": "=>586", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<com.github.mikephil.charting.interfaces.datasets.ILineDataSet>.get(int)", "com.github.mikephil.charting.interfaces.datasets.ILineDataSet.getInnerCircleRadius()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (innerCircleRadius >= (dataSet.getCircleRadius())) { android.util.Log.e(\"MPAndroidChart\", (\"mInnerCircleRadius must be less than mCircleRadius.\" + \" Setting mInnerCircleRadius to mCircleRadius/2.\")); innerCircleRadius = (dataSet.getCircleRadius()) / 2.0F; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/4929/buggy-version/MPChartLib.src.com.github.mikephil.charting.renderer.LineChartRenderer.java", "BodyUseAPI": ["com.github.mikephil.charting.interfaces.datasets.ILineDataSet.getCircleRadius()"], "Fixed commit": "1831e50aaa86d709733ed0b061da799dc9e2160e", "Url": "https://api.github.com/repos/WW-Digital/MPAndroidChart", "Date": "2016-03-17T21:27:24Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((calogerusdraconis.StoreDisplay.pilihan) == ((ac.size()) - 2)) minus = 60; else if ((calogerusdraconis.StoreDisplay.pilihan) == 0) minus = -10;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/5638/buggy-version/src.calogerusdraconis.StoreDisplay.java", "BodyUseAPI": [], "Fixed commit": "0a545e3889aa76f91ee89334c181383d38b6c3f1", "Url": "https://api.github.com/repos/dalva24/if2210-tubes2", "Date": "2014-05-17T19:35:48Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mafias.getText().toString().matches(\"\")) || (mafias.getText().equals(null))) { android.widget.Toast.makeText(this, \"Press Compute Game\", Toast.LENGTH_SHORT).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/7668/buggy-version/app.src.main.java.tirththeartist.mafia.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "1c233a5ccd0ac388ee1c2dbaf3e78b79061d7bd9", "Url": "https://api.github.com/repos/tirthrami/Mafia", "Date": "2017-07-27T19:35:15Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mafias.getText().toString().matches(\"\")) || (mafias.getText().equals(null))) { android.widget.Toast.makeText(this, \"Press Compute Game\", Toast.LENGTH_SHORT).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/7668/buggy-version/app.src.main.java.tirththeartist.mafia.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "1c233a5ccd0ac388ee1c2dbaf3e78b79061d7bd9", "Url": "https://api.github.com/repos/tirthrami/Mafia", "Date": "2017-07-27T19:35:15Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.todoroo.astrid.activity.AstridActivity.isTagFilter(filter)) ((com.todoroo.astrid.api.FilterWithCustomIntent) (filter)).customTaskList = new android.content.ComponentName(context, com.todoroo.astrid.actfm.TagViewFragment.class);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/5924/buggy-version/astrid.src.com.todoroo.astrid.widget.TasksWidget.java", "BodyUseAPI": [], "Fixed commit": "eb704a948a64967bfc0162bde66ce8e279cd7303", "Url": "https://api.github.com/repos/sbosley/astrid", "Date": "2012-10-19T23:49:46Z"},
{"Line": "=>1497", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.frostwire.search.youtube.YouTubeCrawledStreamableSearchResult.getDetailsUrl()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (preliminaryDetailsUrl.contains(\"&\")) { preliminaryDetailsUrl = preliminaryDetailsUrl.substring(0, preliminaryDetailsUrl.indexOf('&')); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/3048/buggy-version/desktop.src.com.limegroup.gnutella.gui.GUIMediator.java", "BodyUseAPI": ["java.lang.String.indexOf(char)", "java.lang.String.substring(int,int)"], "Fixed commit": "f7994a58db8bce4c60f42e9f9aca4f2d5ddd4c56", "Url": "https://api.github.com/repos/frostwire/frostwire", "Date": "2016-04-10T13:28:53Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((startPicker.getCurrentHour()) >= 23) { endPicker.setCurrentHour(0); }else { endPicker.setCurrentHour(((startPicker.getCurrentHour()) + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/6428/buggy-version/src.org.androidaalto.bookingroom.MeetingActivity.java", "BodyUseAPI": ["android.widget.TimePicker.setCurrentHour(((startPicker.getCurrentHour()) + 1))", "android.widget.TimePicker.getCurrentHour()"], "Fixed commit": "bed1e2a2ac88d66a5f26de47b3c40b1aa6733b78", "Url": "https://api.github.com/repos/AndroidAalto/BookingRoom", "Date": "2011-09-03T14:33:16Z"},
{"Line": "=>1826", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (\"overview\".equals(tableParts[0])) { possibleProperties.put(tableParts[1], value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/8445/buggy-version/components.governance.org.wso2.carbon.governance.api.src.main.java.org.wso2.carbon.governance.api.util.GovernanceUtils.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)"], "Fixed commit": "48540e0c2a523218c9edd97de80b1cc2322f8923", "Url": "https://api.github.com/repos/prasa7/carbon-governance", "Date": "2015-10-08T12:45:37Z"},
{"Line": "=>761", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isRightOverScrolled || isLeftOverScrolled) { selectedPosition = position; indicator.setSelectedPosition(selectedPosition); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/5723/buggy-version/pageindicatorview.src.main.java.com.rd.PageIndicatorView2.java", "BodyUseAPI": [], "Fixed commit": "2ff5f50427733039e0646d507ed19eb61ab3fa68", "Url": "https://api.github.com/repos/romandanylyk/PageIndicatorView", "Date": "2017-04-25T20:03:53Z"},
{"Line": "=>755", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isRtl()) { isLeftOverScrolled = (position - 1) < selectedPosition; }else { isLeftOverScrolled = (position + 1) < selectedPosition; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/5723/buggy-version/pageindicatorview.src.main.java.com.rd.PageIndicatorView2.java", "BodyUseAPI": [], "Fixed commit": "2ff5f50427733039e0646d507ed19eb61ab3fa68", "Url": "https://api.github.com/repos/romandanylyk/PageIndicatorView", "Date": "2017-04-25T20:03:53Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (items.get(position).equals(removedItem)) { items.remove(position); notifyDataSetChanged(); animation.cancel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/6405/buggy-version/app.src.main.java.parcsys.com.adapters.SoldItemAdapter.java", "BodyUseAPI": ["java.util.List<parcsys.com.entity.SoldItem>.remove(int)"], "Fixed commit": "c4677be6686cd1d7d14c8df2cc862e4cf5ad84ed", "Url": "https://api.github.com/repos/ivan9105/Market", "Date": "2015-03-02T19:42:59Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (de.peeeq.wurstscript.attributes.attr.unitTestMode) { throw err; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/6446/buggy-version/de.peeeq.wurstscript.src.de.peeeq.wurstscript.parser.ExtendedParser.java", "BodyUseAPI": [], "Fixed commit": "cb279a042ab60946ef96a644f7b12489488271fe", "Url": "https://api.github.com/repos/peq/WurstScript", "Date": "2012-05-31T23:03:39Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openmrs.Patient.getPersonAddress()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (address == null) { addressCode = null; }else { org.openmrs.module.addresshierarchy.AddressHierarchyLevel addressHierarchyLevel = addressHierarchyService.getTopAddressHierarchyLevel(); java.lang.String addressString = getAddressValueForLevel(addressHierarchyLevel.getLevelId(), address); java.util.List<org.openmrs.module.addresshierarchy.AddressHierarchyEntry> childAddressHierarchyEntry = addressHierarchyService.getAddressHierarchyEntriesByLevelAndName(addressHierarchyLevel, addressString); addressCode = getAddressCode(addressHierarchyLevel.getLevelId(), childAddressHierarchyEntry.get(0), address); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/8679/buggy-version/omod.src.main.java.org.bahmni.module.bahmniOfflineSync.utils.AddressCalculator.java", "BodyUseAPI": ["org.bahmni.module.bahmniOfflineSync.utils.AddressCalculator.getAddressValueForLevel(addressHierarchyLevel.getLevelId(),org.openmrs.PersonAddress)", "org.bahmni.module.bahmniOfflineSync.utils.AddressCalculator.getAddressCode(addressHierarchyLevel.getLevelId(),childAddressHierarchyEntry.get(0),org.openmrs.PersonAddress)"], "Fixed commit": "427b629488957e392daa3110d979554272bcf95b", "Url": "https://api.github.com/repos/Bahmni/bahmni-offline-sync", "Date": "2017-11-24T06:38:24Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (inLocation != null) { entity.spawn(inLocation); if (inSetupGoals) ((de.kumpelblase2.remoteentities.RemoteEntityHandle) (entity.getHandle())).setupStandardGoals(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/2348/buggy-version/src.main.java.de.kumpelblase2.remoteentities.EntityManager.java", "BodyUseAPI": ["de.kumpelblase2.remoteentities.RemoteEntity.spawn(org.bukkit.Location)"], "Fixed commit": "891af5c19a667b2e7294cb31113f4145efa67007", "Url": "https://api.github.com/repos/kumpelblase2/Remote-Entities", "Date": "2013-01-23T13:08:11Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(inType.isNamed())) { return this.createEntity(inType, inLocation, inSetupGoals); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/2348/buggy-version/src.main.java.de.kumpelblase2.remoteentities.EntityManager.java", "BodyUseAPI": ["de.kumpelblase2.remoteentities.EntityManager.createEntity(de.kumpelblase2.remoteentities.RemoteEntityType,org.bukkit.Location,boolean)"], "Fixed commit": "891af5c19a667b2e7294cb31113f4145efa67007", "Url": "https://api.github.com/repos/kumpelblase2/Remote-Entities", "Date": "2013-01-23T13:08:11Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getListView().getListGrid()) != null) { getListView().getListGrid().setVisibleRangeAndClearData(getListView().getListGrid().getVisibleRange(), true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/3349/buggy-version/jbpm-console-ng-generic.jbpm-console-ng-generic-client.src.main.java.org.jbpm.console.ng.gc.client.list.base.AbstractListPresenter.java", "BodyUseAPI": [], "Fixed commit": "20a4df0fa653495d2a5f1983c0ca1d43c3938fbe", "Url": "https://api.github.com/repos/mswiderski/jbpm-console-ng", "Date": "2016-06-06T15:23:15Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (o instanceof java.lang.Object[]) return unwrapPortablesInArrayIfNeeded(((java.lang.Object[]) (o)), keepPortable, cpy); else if (o instanceof org.apache.ignite.internal.processors.cache.CacheObject) { org.apache.ignite.internal.processors.cache.CacheObject co = ((org.apache.ignite.internal.processors.cache.CacheObject) (o)); if ((!keepPortable) || (co.isPlatformType())) return unwrapPortable(co.value(this, true), keepPortable, cpy); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/5851/buggy-version/modules.core.src.main.java.org.apache.ignite.internal.processors.cache.CacheObjectContext.java", "BodyUseAPI": [], "Fixed commit": "0dec2b9ed2fe31a435ceb42a2e2eee454401281d", "Url": "https://api.github.com/repos/apache/ignite", "Date": "2015-11-24T14:49:44Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (clazz == (java.lang.Number.class)) { return target instanceof java.lang.Number ? ((N) (target)) : null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/7240/buggy-version/ddth-commons-core.src.main.java.com.github.ddth.commons.utils.DPathUtils.java", "BodyUseAPI": [], "Fixed commit": "303ae9f6bad8daff82ad6c4f94527ad6f3204fff", "Url": "https://api.github.com/repos/DDTH/ddth-commons", "Date": "2016-12-28T16:18:45Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (model.renameAnnotationField(oldName, newName)) { return true; }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/8964/buggy-version/src.gui.sysadmin.SysadminController.java", "BodyUseAPI": [], "Fixed commit": "47373443ad9c01e5c0f3aa89f3ad4c653b694f62", "Url": "https://api.github.com/repos/genomizer/genomizer-desktop", "Date": "2014-05-20T13:19:13Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gui.sysadmin.annotationview.EditAnnotationPopup2.getNewAnnotationName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (sysController.renameAnnotationField(oldName, newName)) { editPopup.getAnnotation().name = newName; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/8964/buggy-version/src.gui.sysadmin.annotationview.EditAnnotationPopupListener.java", "BodyUseAPI": [], "Fixed commit": "47373443ad9c01e5c0f3aa89f3ad4c653b694f62", "Url": "https://api.github.com/repos/genomizer/genomizer-desktop", "Date": "2014-05-20T13:19:13Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (recaptchaConfig.isEnabled()) { mav.addObject(\"recaptchaSiteKey\", recaptchaConfig.getSiteKey()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/3931/buggy-version/konker.registry.src.main.java.com.konkerlabs.platform.registry.web.controllers.LoginController.java", "BodyUseAPI": ["org.springframework.web.servlet.ModelAndView.addObject(java.lang.String,recaptchaConfig.getSiteKey())", "com.konkerlabs.platform.registry.config.RecaptchaConfig.getSiteKey()"], "Fixed commit": "d0b82c87114e6426d41d59fc2f707a1e0642c02d", "Url": "https://api.github.com/repos/KonkerLabs/konker-platform", "Date": "2017-01-24T13:36:58Z"},
{"Line": "=>341", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mSearchOpen) { mSearchView.setIconified(false); mSearchView.setQuery(mSearchQuery, false); mSearchView.clearFocus(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/582/buggy-version/src.com.owncloud.android.ui.preview.PreviewTextFragment.java", "BodyUseAPI": [], "Fixed commit": "ef42119204c111d51935b6f459fbb876266a0328", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2017-01-30T13:06:09Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(com.jieli.util.IdentifyUtils.isAdmin(sessionId))) || (account.state.equals(AccountState.SUPPER))) { return javax.ws.rs.core.Response.status(403).build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/4470/buggy-version/src.main.java.com.jieli.service.AccountService.java", "BodyUseAPI": [], "Fixed commit": "285e11573da3d0d3aa0bc5c01a4d5b04aa5e4222", "Url": "https://api.github.com/repos/daqingllm/jieli-rest", "Date": "2014-04-13T03:37:06Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang.StringUtils.isNotEmpty(account.password)) { current.password = com.jieli.util.PasswordGenerator.md5Encode(account.password); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/4470/buggy-version/src.main.java.com.jieli.service.AccountService.java", "BodyUseAPI": ["com.jieli.util.PasswordGenerator.md5Encode(account.password)"], "Fixed commit": "285e11573da3d0d3aa0bc5c01a4d5b04aa5e4222", "Url": "https://api.github.com/repos/daqingllm/jieli-rest", "Date": "2014-04-13T03:37:06Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((d.vendor) == null) && ((vendor) != (d.vendor))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/6022/buggy-version/src.net.pieroxy.ua.detection.Bot.java", "BodyUseAPI": [], "Fixed commit": "78974e2352e8a1762f1610f8cb30d1e2d036d292", "Url": "https://api.github.com/repos/pieroxy/java-user-agent-detection", "Date": "2015-03-07T16:12:36Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (operation instanceof com.owncloud.android.operations.GetSharesForFileOperation) { if ((result.getCode()) == (com.owncloud.android.lib.common.operations.RemoteOperationResult.ResultCode.MAINTENANCE_MODE)) { message = res.getString(R.string.maintenance_mode); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/5567/buggy-version/src.com.owncloud.android.utils.ErrorMessageAdapter.java", "BodyUseAPI": [], "Fixed commit": "d8d951d889e9ce7355a582c8d3974a85f480fb88", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2016-12-28T09:27:05Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.xqbase.java.set.DisjointSets.find(int)", "com.xqbase.java.set.DisjointSets.find(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((r1 != root1) || (r2 != root2)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/5462/buggy-version/Project02.src.com.xqbase.java.set.DisjointSets.java", "BodyUseAPI": [], "Fixed commit": "2893d7fc6af219cad7f4c79b40d2ba998ca74d0e", "Url": "https://api.github.com/repos/adohe/Homework", "Date": "2015-01-27T07:44:24Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.xqbase.java.set.DisjointSets.find(int)", "com.xqbase.java.set.DisjointSets.find(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (r1 == r2) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/5462/buggy-version/Project02.src.com.xqbase.java.set.DisjointSets.java", "BodyUseAPI": [], "Fixed commit": "2893d7fc6af219cad7f4c79b40d2ba998ca74d0e", "Url": "https://api.github.com/repos/adohe/Homework", "Date": "2015-01-27T07:44:24Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.common.collect.Range<org.joda.time.DateTime>.lowerEndpoint()", "org.joda.time.DateTime.now()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(isSameYear(lower, curDateTime))) { lowerDetails.showYear = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/4732/buggy-version/wealdtech-core.src.main.java.com.wealdtech.utils.RangeFormatter.java", "BodyUseAPI": [], "Fixed commit": "57fd240a922003a8b9f54047919953b0cbe3838c", "Url": "https://api.github.com/repos/wealdtech/wealdtech", "Date": "2014-03-23T11:50:42Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.common.collect.Range<org.joda.time.DateTime>.lowerEndpoint()", "org.joda.time.DateTime.now()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(isSameMonth(lower, curDateTime))) { lowerDetails.showMonthOfYear = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/4732/buggy-version/wealdtech-core.src.main.java.com.wealdtech.utils.RangeFormatter.java", "BodyUseAPI": [], "Fixed commit": "57fd240a922003a8b9f54047919953b0cbe3838c", "Url": "https://api.github.com/repos/wealdtech/wealdtech", "Date": "2014-03-23T11:50:42Z"},
{"Line": "=>2535", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((ph.getStatus()) != (org.exist.storage.index.BFile.MULTI_PAGE)) readOffsets();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/569/buggy-version/src.org.exist.storage.index.BFile.java", "BodyUseAPI": [], "Fixed commit": "e2f5415b0eacdcd01aa626bfa298785244c610e9", "Url": "https://api.github.com/repos/dizzzz/exist", "Date": "2013-12-18T20:23:20Z"},
{"Line": "=>1048", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((name.indexOf(\"id=\")) > 0) { tokens[1] = name.substring(((name.indexOf(\"id=\")) + 3), name.indexOf(\" in\")); tokens[2] = name.substring(((name.indexOf(\" in\")) + 3)); }else { tokens[1] = \"\"; tokens[2] = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/7793/buggy-version/tda.src.java.com.pironet.tda.SunJDKParser.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.indexOf(java.lang.String)", "java.lang.String.substring(int)", "java.lang.String.indexOf(java.lang.String)", "java.lang.String.indexOf(java.lang.String)"], "Fixed commit": "1b9acc6f727005311e0955135c2d1159bf7a9543", "Url": "https://api.github.com/repos/irockel/tda", "Date": "2016-07-12T11:55:13Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["haven.Utils.floormod(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (n < (actions.length)) { wdgmsg(\"use\", n); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/3136/buggy-version/src.haven.Fightsess.java", "BodyUseAPI": ["haven.Fightsess.wdgmsg(java.lang.String,int)"], "Fixed commit": "3dcb3b9e2724c74fd153c1ec824d7a80082827ae", "Url": "https://api.github.com/repos/Venseer/amber", "Date": "2016-06-07T15:20:23Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (com.nijiko.coelho.iConomy.util.Misc.is(Constants.Database_Type, new java.lang.String[]{ \"sqlite\", \"h2\", \"h2sql\", \"h2db\" })) { if ((h2pool) == null) { h2pool = org.h2.jdbcx.JdbcConnectionPool.create(dsn, username, password); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/7099/buggy-version/src.com.nijiko.coelho.iConomy.net.Database.java", "BodyUseAPI": [], "Fixed commit": "383a1b0b0978bef4b36839033dcff99e25ea81a2", "Url": "https://api.github.com/repos/iConomy/Core", "Date": "2011-03-26T00:27:19Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.nijiko.coelho.iConomy.util.Misc.is(Constants.Database_Type, new java.lang.String[]{ \"sqlite\", \"h2\", \"h2sql\", \"h2db\" })) { return h2pool.getConnection(); }else { return java.sql.DriverManager.getConnection(dsn, username, password); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/7099/buggy-version/src.com.nijiko.coelho.iConomy.net.Database.java", "BodyUseAPI": [], "Fixed commit": "383a1b0b0978bef4b36839033dcff99e25ea81a2", "Url": "https://api.github.com/repos/iConomy/Core", "Date": "2011-03-26T00:27:19Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.charAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (typeCode == 'L') { return mockit.internal.state.MockedTypeCascade.isTypeSupportedForCascading(typeName) ? typeName : null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/2729/buggy-version/main.src.mockit.internal.state.MockedTypeCascade.java", "BodyUseAPI": [], "Fixed commit": "cf2c6fce9673739714a951c6269e1ed662174382", "Url": "https://api.github.com/repos/jmockit/jmockit1", "Date": "2015-03-07T16:55:02Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.h2.value.DataType.getTypeByName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (builtIn != null) { if (!(builtIn.hidden)) { throw org.h2.message.DbException.get(ErrorCode.CUSTOM_DATA_TYPE_ALREADY_EXISTS_1, typeName); } org.h2.table.Table table = session.getDatabase().getFirstUserTable(); if (table != null) { throw org.h2.message.DbException.get(ErrorCode.CUSTOM_DATA_TYPE_ALREADY_EXISTS_1, ((((typeName) + \" (\") + (table.getSQL())) + \")\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/1504/buggy-version/h2.src.main.org.h2.command.ddl.CreateCustomDataType.java", "BodyUseAPI": [], "Fixed commit": "0c36b8cb8f8d8b631a117d8e4442c06c3d595c1f", "Url": "https://api.github.com/repos/alexpaschenko/h2database", "Date": "2017-01-25T12:55:15Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (cmd != null) cmd.execute(); else ctx.printLn(\"in do: unknown command\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/3416/buggy-version/src.com.gmail.einsyui.commands.DoCommand.java", "BodyUseAPI": ["com.gmail.einsyui.argumentreader.CommandWithLateArgs.execute()"], "Fixed commit": "9f2903824c9f5d51fd8553d5bf1fe03efd9e15ef", "Url": "https://api.github.com/repos/Einsyui/BuildUtils", "Date": "2015-02-20T17:13:27Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(socket.getServerRunning())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/7808/buggy-version/lifx-sdk.src.main.java.lifx.java.android.network_context.internal.transport_manager.gateway_connection.LFXUDPGatewayConnection.java", "BodyUseAPI": [], "Fixed commit": "cf5ccbe7e48be2331266fcef4122f4522f47a7fb", "Url": "https://api.github.com/repos/matthewn4444/VoiceAutomation", "Date": "2015-05-17T19:58:56Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.candlepin.paging.Page.getPageRequest()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((page.getMaxRecords()) % (pageRequest.getPerPage())) != 0) { lastPage++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/3846/buggy-version/src.main.java.org.candlepin.resteasy.interceptor.LinkHeaderPostInterceptor.java", "BodyUseAPI": [], "Fixed commit": "f74e03da5a8768c122cf7009dd72cb56584df2ab", "Url": "https://api.github.com/repos/candlepin/candlepin", "Date": "2013-05-31T19:33:48Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((classSplit.length) == 2) { java.lang.String className = classSplit[1]; if (className.endsWith(\".class\")) { this.mainPluginInterfaces.add(className.split(\"\\\\.\")[0]); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/360/buggy-version/platform.src.main.java.fr.univnantes.mgsframework.PluginLoader.java", "BodyUseAPI": [], "Fixed commit": "79fd2455975c56ce10278b85ae04664ea2548421", "Url": "https://api.github.com/repos/masters-info-nantes/snake", "Date": "2015-03-04T20:17:12Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (((msg != null) && (tag != null)) && ((com.taobao.weex.utils.WXLogUtils.sLogWatcher) != null)) { com.taobao.weex.utils.WXLogUtils.sLogWatcher.onLog(level.getName(), tag, msg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/2959/buggy-version/android.sdk.src.main.java.com.taobao.weex.utils.WXLogUtils.java", "BodyUseAPI": ["com.taobao.weex.utils.WXLogUtils.LogWatcher.onLog(level.getName(),java.lang.String,java.lang.String)"], "Fixed commit": "946385a5fbf5ded5f3175f9ca0496a3f75b0cc46", "Url": "https://api.github.com/repos/atomtong/incubator-weex", "Date": "2017-11-09T03:40:52Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.os.Build.VERSION.SDK_INT) > 9) { android.os.StrictMode.ThreadPolicy policy = new android.os.StrictMode.ThreadPolicy.Builder().permitAll().build(); android.os.StrictMode.setThreadPolicy(policy); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/5502/buggy-version/homegenie.src.main.java.com.glabs.homegenie.StartActivity.java", "BodyUseAPI": [], "Fixed commit": "58eb4c028e2d1f150db60f3c3ab8d64c007eca41", "Url": "https://api.github.com/repos/genemars/HomeGenie-Android", "Date": "2015-12-16T15:20:28Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(getNonAcceptState().isEmpty())) { pi.add(getNonAcceptState()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/6371/buggy-version/Lex.src.cn.edu.nju.DFA.java", "BodyUseAPI": [], "Fixed commit": "8dfb06705d82f90b8ba54149cdac3c9e834888cf", "Url": "https://api.github.com/repos/Shawn-Hx/CompilerLabs", "Date": "2017-11-02T14:53:57Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((videoRenderer) != null) player.sendMessage(videoRenderer, MediaCodecVideoTrackRenderer.MSG_SET_SURFACE, new android.view.Surface(surface));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/4191/buggy-version/app.src.main.java.org.sunger.net.ui.widget.VideoView.java", "BodyUseAPI": [], "Fixed commit": "c9c8ad6aebaf54456fcacd95a0cc76f2c24d11ba", "Url": "https://api.github.com/repos/sungerk/meiShi", "Date": "2016-04-07T09:58:58Z"},
{"Line": "=>250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.example.nofarcohenzedek.dogo.Model.Utilities.getLocationFromAddress(address, getApplicationContext())) == null) { errorMessage = \"\u05db\u05ea\u05d5\u05d1\u05ea \u05dc\u05d0 \u05d5\u05dc\u05d9\u05d3\u05d9\u05ea. \u05d0\u05e0\u05d0 \u05d5\u05d3\u05d0 \u05d0\u05d9\u05d5\u05ea \u05e0\u05db\u05d5\u05df.\"; isValid = false; }else if (isOwner.isChecked()) { if (((dogName.isEmpty()) || (dogAge.isEmpty())) || (((!(isBig.isChecked())) && (!(isMedium.isChecked()))) && (!(isSmall.isChecked())))) { errorMessage = \"\u05d0\u05e0\u05d0 \u05de\u05dc\u05d0 \u05d0\u05ea \u05e4\u05e8\u05d8\u05d9 \u05d4\u05db\u05dc\u05d1.\"; isValid = false; } }else if (isWalker.isChecked()) { if ((priceForHour.isEmpty()) || (age.isEmpty())) { errorMessage = \"\u05d0\u05e0\u05d0 \u05de\u05dc\u05d0 \u05d0\u05ea \u05db\u05dc \u05d4\u05e4\u05e8\u05d8\u05d9\u05dd.\"; isValid = false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/7067/buggy-version/app.src.main.java.com.example.nofarcohenzedek.dogo.SignUpActivity.java", "BodyUseAPI": [], "Fixed commit": "6853d26967539b340a6a2eac18e06850d58ffe14", "Url": "https://api.github.com/repos/nofar9792/Nofar", "Date": "2016-06-07T14:14:17Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((length) > 4) { inputAnalysisProcesses = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/6349/buggy-version/src.main.java.com.univocity.parsers.common.input.AbstractCharInputReader.java", "BodyUseAPI": [], "Fixed commit": "8d8bf5d6a0abd379cd5e72b9ce0f32a74874e78a", "Url": "https://api.github.com/repos/mosoft521/univocity-parsers", "Date": "2017-08-10T02:25:57Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["nl.surfnet.coin.selfservice.service.impl.LmngUtil.getFirstSubElementStringValue(org.w3c.dom.Element,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((licenseModel != null) && (nl.surfnet.coin.selfservice.service.impl.LmngUtil.GROUP_LICENSEMODEL.equals(licenseModel))) { license.setGroupLicense(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/432/buggy-version/coin-selfservice-war.src.main.java.nl.surfnet.coin.selfservice.service.impl.LmngUtil.java", "BodyUseAPI": [], "Fixed commit": "63ec2ae988d86719f1887199c879059058f1b898", "Url": "https://api.github.com/repos/OpenConext/OpenConext-selfservice", "Date": "2012-10-29T15:34:44Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (intent.getAction().equals(BroadcastType.BCAST_TYPE_CONTROLLER_STATUS.toString())) { java.lang.String response = intent.getStringExtra(BroadcastType.BCAST_EXTRA_SERVER_RESPONSE.toString()); android.widget.TextView server = ((android.widget.TextView) (mActivity.findViewById(R.id.controller_display_status))); server.setText(response); }else { java.lang.Float data = intent.getFloatExtra(BroadcastType.BCAST_EXTRA_SENSOR_DATA.toString(), 0); ((tcslab.syndesiapp.views.MainActivity) (mActivity)).addSensor(new tcslab.syndesiapp.models.SensorData(\"\", data, intent.getAction())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/3575/buggy-version/app.src.main.java.tcslab.syndesiapp.controllers.ui.UIReceiver.java", "BodyUseAPI": ["android.content.Intent.getStringExtra(BroadcastType.BCAST_EXTRA_SERVER_RESPONSE.toString())", "android.app.Activity.addSensor(tcslab.syndesiapp.models.SensorData)", "android.content.Intent.getFloatExtra(BroadcastType.BCAST_EXTRA_SENSOR_DATA.toString(),int)", "android.content.Intent.getAction()"], "Fixed commit": "e5686505fbd444353df88df34a8e30db2922fdf1", "Url": "https://api.github.com/repos/bcarron/SyndesiApp", "Date": "2016-11-16T03:18:14Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.pentaho.agilebi.modeler.nodes.LevelMetaData.getHierarchyMetaData()", "org.pentaho.agilebi.modeler.nodes.HierarchyMetaData.getDimensionMetaData()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (dimension.contains(hierarchy)) { dimension.remove(hierarchy); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/2767/buggy-version/src.org.pentaho.agilebi.modeler.models.annotations.AnnotationType.java", "BodyUseAPI": ["org.pentaho.agilebi.modeler.nodes.DimensionMetaData.remove(org.pentaho.agilebi.modeler.nodes.HierarchyMetaData)"], "Fixed commit": "72e3cbbe92601be919e32fea8886f715ba9a3aea", "Url": "https://api.github.com/repos/kurtwalker/modeler", "Date": "2015-01-13T16:27:44Z"},
{"Line": "=>437", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getReadPreference()) == null) { java.lang.String msg = (\"Could not resolve specified ReadPreference of type \" + readPreference) + \". Read preferences are resolved from inner classes of com.mongodb.ReadPreference.\"; throw new java.lang.IllegalArgumentException(msg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/6005/buggy-version/components.camel-mongodb.src.main.java.org.apache.camel.component.mongodb.MongoDbEndpoint.java", "BodyUseAPI": [], "Fixed commit": "d7347cec8859ef7142d5017f4d839c7fc9478ffc", "Url": "https://api.github.com/repos/apache/camel", "Date": "2014-04-13T09:17:45Z"},
{"Line": "=>408", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((structureFound.fluidStored) != null) { structureFound.fluidStored.amount = java.lang.Math.min(structureFound.fluidStored.amount, ((structureFound.volume) * (mekanism.common.TankUpdateProtocol.FLUID_PER_TANK))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/3695/buggy-version/common.mekanism.common.TankUpdateProtocol.java", "BodyUseAPI": ["java.lang.Math.min(structureFound.fluidStored.amount,((structureFound.volume) * (mekanism.common.TankUpdateProtocol.FLUID_PER_TANK)))"], "Fixed commit": "0715a890bdb1f64732aa2e0b3a0ae2d06abe089b", "Url": "https://api.github.com/repos/aidancbrady/Mekanism", "Date": "2013-11-30T17:34:18Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.ui.IEditorRegistry.getDefaultEditor(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (defaultEditor == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/1406/buggy-version/plugins.org.python.pydev.shared_ui.src.org.python.pydev.shared_ui.EditorUtils.java", "BodyUseAPI": [], "Fixed commit": "7522438ddd4c8029e8dce87888198053ae5514c4", "Url": "https://api.github.com/repos/fabioz/Pydev", "Date": "2014-09-25T11:58:47Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"0\".equals(expressionParts[5])) { expressionParts[5] = \"7\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/50/buggy-version/cron-parser-core.src.main.java.net.redhogs.cronparser.ExpressionParser.java", "BodyUseAPI": [], "Fixed commit": "15215c2df05ff6e7c5ee7b7aaf1544da0cf72d68", "Url": "https://api.github.com/repos/mcallinder/cron-parser", "Date": "2015-05-27T18:00:20Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ingredients) != null) { for (com.sk89q.craftbook.mech.crafting.CraftingItemStack stack : ingredients) if (stack.hasAdvancedData()) return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/6270/buggy-version/src.main.java.com.sk89q.craftbook.mech.crafting.RecipeManager.java", "BodyUseAPI": [], "Fixed commit": "81f2dc609f999d0b5d9b984457d1b487d6936015", "Url": "https://api.github.com/repos/sk89q/craftbook", "Date": "2013-04-27T11:55:42Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((items) != null) { for (com.sk89q.craftbook.mech.crafting.CraftingItemStack stack : items.keySet()) if (stack.hasAdvancedData()) return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/6270/buggy-version/src.main.java.com.sk89q.craftbook.mech.crafting.RecipeManager.java", "BodyUseAPI": [], "Fixed commit": "81f2dc609f999d0b5d9b984457d1b487d6936015", "Url": "https://api.github.com/repos/sk89q/craftbook", "Date": "2013-04-27T11:55:42Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (status == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/7212/buggy-version/jkind-api.src.jkind.api.ui.AnalysisResultLabelProvider.java", "BodyUseAPI": [], "Fixed commit": "735199c28ddc412ca21b126a78f98e6bbaf01593", "Url": "https://api.github.com/repos/agacek/jkind", "Date": "2013-08-06T13:29:32Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isFirstOrEmptyLayout) { notifyFirstLayoutCompleted(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/3143/buggy-version/library.src.main.java.com.yarolegovich.discretescrollview.DiscreteScrollLayoutManager.java", "BodyUseAPI": [], "Fixed commit": "5d80250a26260d46391ea2867ab7b1fd34e8ae76", "Url": "https://api.github.com/repos/yarolegovich/DiscreteScrollView", "Date": "2017-03-09T14:21:21Z"},
{"Line": "=>333", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["plugin.getGrid().getIslandAt(org.bukkit.Location)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (newSpawn == null) { newSpawn = plugin.getGrid().addIsland(closestIsland.getBlockX(), closestIsland.getBlockZ()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/8128/buggy-version/src.com.wasteofplastic.askyblock.commands.AdminCmd.java", "BodyUseAPI": [], "Fixed commit": "aa41e82b6b48c2a71dd527fac96db16529f05c4e", "Url": "https://api.github.com/repos/wolfwork/askyblock", "Date": "2015-02-28T17:56:20Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((fileBaseName.length()) > (org.apache.nutch.util.DumpFileUtil.MAX_LENGTH_OF_FILENAME)) { org.apache.nutch.util.DumpFileUtil.LOG.info(\"File name is too long. Truncated to {} characters.\", org.apache.nutch.util.DumpFileUtil.MAX_LENGTH_OF_FILENAME); fileBaseName = org.apache.commons.lang.StringUtils.substring(fileBaseName, 0, org.apache.nutch.util.DumpFileUtil.MAX_LENGTH_OF_FILENAME); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/1076/buggy-version/src.java.org.apache.nutch.util.DumpFileUtil.java", "BodyUseAPI": ["org.apache.commons.lang.StringUtils.substring(java.lang.String,int,java.lang.Integer)"], "Fixed commit": "dbf84893e5bbb98b491ba33121c49a3f84810670", "Url": "https://api.github.com/repos/renPATHwang/nutch", "Date": "2015-03-18T17:09:09Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (estimateDate == null) estimateDate = new java.util.Date();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/959/buggy-version/egov.egov-works.src.main.java.org.egov.works.master.service.ScheduleOfRateService.java", "BodyUseAPI": [], "Fixed commit": "909e29baa6620600dca77f58015d4a9fbb5c6657", "Url": "https://api.github.com/repos/egovernments/egov-smartcity-suite", "Date": "2016-07-04T13:39:28Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.preference.PreferenceManager.getDefaultSharedPreferences(android.content.Context)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (sharedPreferences.getBoolean(context.getString(R.string.key_notification), false)) { com.yu.yuweather.utils.NotificationUtils.startNotificationService(context); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/1809/buggy-version/app.src.main.java.com.yu.yuweather.receiver.BootCompletedReceiver.java", "BodyUseAPI": ["com.yu.yuweather.utils.NotificationUtils.startNotificationService(android.content.Context)"], "Fixed commit": "da01d58ca7553fa0a2db5c131ff802be8e5f2afe", "Url": "https://api.github.com/repos/muou171/YuWeather", "Date": "2017-03-03T09:12:08Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((vendorInfo.getVendor().getTransparencyAttestation()) == null) { toCreate.setTransparencyAttestation(java.lang.Boolean.FALSE); }else { toCreate.setTransparencyAttestation(vendorInfo.getVendor().getTransparencyAttestation()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/1608/buggy-version/chpl.chpl-service.src.main.java.gov.healthit.chpl.web.controller.VendorController.java", "BodyUseAPI": ["vendorInfo.getVendor().getTransparencyAttestation()", "gov.healthit.chpl.dto.VendorDTO.setTransparencyAttestation(vendorInfo.getVendor().getTransparencyAttestation())", "gov.healthit.chpl.domain.UpdateVendorsRequest.getVendor()"], "Fixed commit": "5e39b051a195707969283a67299a10ea04de02d1", "Url": "https://api.github.com/repos/kekey1/chpl-api", "Date": "2016-01-04T18:46:20Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((vendorInfo.getVendor().getTransparencyAttestation()) == null) { toUpdate.setTransparencyAttestation(java.lang.Boolean.FALSE); }else { toUpdate.setTransparencyAttestation(vendorInfo.getVendor().getTransparencyAttestation()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/1608/buggy-version/chpl.chpl-service.src.main.java.gov.healthit.chpl.web.controller.VendorController.java", "BodyUseAPI": ["gov.healthit.chpl.dto.VendorDTO.setTransparencyAttestation(vendorInfo.getVendor().getTransparencyAttestation())", "gov.healthit.chpl.domain.UpdateVendorsRequest.getVendor()", "vendorInfo.getVendor().getTransparencyAttestation()"], "Fixed commit": "5e39b051a195707969283a67299a10ea04de02d1", "Url": "https://api.github.com/repos/kekey1/chpl-api", "Date": "2016-01-04T18:46:20Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gwt.core.client.GWT.getHostPageBaseURL()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (appUrl.endsWith(\"/\")) { appUrl = appUrl.substring(0, ((appUrl.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/8355/buggy-version/server.src.main.java.org.activityinfo.ui.client.component.form.field.attachment.Uploader.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "1363fdd516ccc6aeeca571a5acff3d5db825bf0b", "Url": "https://api.github.com/repos/bedatadriven/activityinfo", "Date": "2015-12-07T14:45:52Z"},
{"Line": "=>1143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((brewNoteItem.getBoilHopNotes()) != null) { java.util.Collections.sort(brewNoteItem.getBoilHopNotes(), new java.util.Comparator<gbbmgmt.model.brewnotes.BoilHopNotes>() { @java.lang.Override public int compare(gbbmgmt.model.brewnotes.BoilHopNotes val1, gbbmgmt.model.brewnotes.BoilHopNotes val2) { if (val1.getDate().after(val2.getDate())) { return 1; }else if (val2.getDate().after(val1.getDate())) { return -1; }else { return 0; } } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/7525/buggy-version/src.main.java.gbbmgmt.BrewingFrames.BrewNotesFrame.java", "BodyUseAPI": ["gbbmgmt.model.brewnotes.BrewNote.getBoilHopNotes()", "java.util.Collections.sort(brewNoteItem.getBoilHopNotes(),java.util.Comparator<gbbmgmt.model.brewnotes.BoilHopNotes>)"], "Fixed commit": "84a07b16f59dd411e0b73513ba6bbbaa8dfbd6d8", "Url": "https://api.github.com/repos/donaldchapman/openbrew", "Date": "2015-09-22T20:38:58Z"},
{"Line": "=>871", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portal.model.Layout.getSourcePrototypeLayoutUuid()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (com.liferay.portal.kernel.util.Validator.isNotNull(sourcePrototypeLayoutUuid)) { com.liferay.portal.model.LayoutSet layoutSet = layout.getLayoutSet(); com.liferay.portal.model.Group layoutSetPrototypeGroup = com.liferay.portal.service.GroupLocalServiceUtil.getLayoutSetPrototypeGroup(layout.getCompanyId(), layoutSet.getLayoutSetPrototypeId()); com.liferay.portal.model.Layout sourcePrototypeLayout = com.liferay.portal.service.persistence.LayoutUtil.findByUUID_G(sourcePrototypeLayoutUuid, layoutSetPrototypeGroup.getGroupId()); com.liferay.portlet.sites.util.SitesUtil.doMergeLayoutProtypeLayout(layoutSetPrototypeGroup, sourcePrototypeLayout); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/1514/buggy-version/portal-impl.src.com.liferay.portlet.sites.util.SitesUtil.java", "BodyUseAPI": ["com.liferay.portal.service.persistence.LayoutUtil.findByUUID_G(java.lang.String,layoutSetPrototypeGroup.getGroupId())"], "Fixed commit": "54c28214d8b1ce2beebdb1433d62a1fbef2750ae", "Url": "https://api.github.com/repos/KocsisDaniel/liferay-portal", "Date": "2012-12-17T16:45:29Z"},
{"Line": "=>1127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sender instanceof org.bukkit.entity.Player) { parent.getBoxManager().clearEditmodeBox(((org.bukkit.entity.Player) (sender))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/8997/buggy-version/src.main.java.org.bitbucket.ucchy.undine.UndineCommand.java", "BodyUseAPI": [], "Fixed commit": "32694f44fd0f9964e32cc9384906577958951e56", "Url": "https://api.github.com/repos/ucchyocean/UndineMailer", "Date": "2015-02-01T05:03:37Z"},
{"Line": "=>457", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((parts.length) == 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/3151/buggy-version/src.Frame.java", "BodyUseAPI": [], "Fixed commit": "0d02a19212d923c58055e68e3f9cdb86af3d26f8", "Url": "https://api.github.com/repos/BluuArc/BFFrameAnimator", "Date": "2016-12-22T04:57:50Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nextWaveButton.isEnabled()) gc.getGame().sendNextWave();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/480/buggy-version/src.ui.side.TimeWavePanel.java", "BodyUseAPI": [], "Fixed commit": "59a00fe1b7fe5bbaff73c480aa472c75abb6a094", "Url": "https://api.github.com/repos/jchilln92/cs32final", "Date": "2011-05-04T22:29:47Z"},
{"Line": "=>436", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.abs((((m.getDst()) & (PieceData.PIECE_MASK)) - ((m.getSrc()) & (PieceData.PIECE_MASK))))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (deltaFile > 0) { if ((this.get(m.get2DDst()).getColor()) == color) { return false; }else if ((this.get(m.get2DDst()).getPieceWithoutColorByte()) == (PieceData.EMPTY_BYTE)) { return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/1550/buggy-version/src.Chess.Game.GameManager.java", "BodyUseAPI": [], "Fixed commit": "daf3ddada4bc97bad4b8076e78c7c923981a6d67", "Url": "https://api.github.com/repos/ThomasCassimon/Chezz", "Date": "2017-04-20T16:03:48Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (useDefaultDisplayVsync) { vsyncSampler = com.google.android.exoplayer2.video.VideoFrameReleaseTimeHelper.VSyncSampler.getInstance(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/3004/buggy-version/library.core.src.main.java.com.google.android.exoplayer2.video.VideoFrameReleaseTimeHelper.java", "BodyUseAPI": [], "Fixed commit": "3830307cd3c012ed4e6e5a764793b640ead00e2b", "Url": "https://api.github.com/repos/drhill/ExoPlayer", "Date": "2017-10-20T00:28:17Z"},
{"Line": "=>2030", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getRGBChannelCount()) == 1) || ((getRGBChannelCount()) == (getSizeC()))) { if (((getSizeC()) > 1) && ((getSizeT()) > 1)) { ms.dimensionOrder += \"C\"; } for (java.lang.Long nBytes : bytes) { java.lang.String axis = bytesPerAxis.get(nBytes); if ((ms.dimensionOrder.indexOf(axis)) == (-1)) { ms.dimensionOrder += axis; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/6568/buggy-version/components.formats-gpl.src.loci.formats.in.LIFReader.java", "BodyUseAPI": [], "Fixed commit": "6b623cd06328aff7ec9676ce47dac9e5611405c7", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2016-04-11T03:01:05Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.stockholm.api.weather.config.WeatherConfig.getCityBeanList()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (cityBeanList.isEmpty()) { cityBeanList.add(bean); }else { com.stockholm.api.weather.config.CityBean location = cityBeanList.get(0); if ((location != null) && (location.isLocation())) { cityBeanList.add(1, bean); }else { cityBeanList.add(0, bean); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/2214/buggy-version/api.src.main.java.com.stockholm.api.weather.config.WeatherConfig.java", "BodyUseAPI": ["java.util.List<com.stockholm.api.weather.config.CityBean>.get(int)", "java.util.List<com.stockholm.api.weather.config.CityBean>.add(int,com.stockholm.api.weather.config.CityBean)", "java.util.List<com.stockholm.api.weather.config.CityBean>.add(com.stockholm.api.weather.config.CityBean)", "java.util.List<com.stockholm.api.weather.config.CityBean>.add(int,com.stockholm.api.weather.config.CityBean)"], "Fixed commit": "730655442bd46c20894beaf9f2dad3cdcf71ff1d", "Url": "https://api.github.com/repos/xidian/stockholm-api", "Date": "2017-11-06T11:59:16Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((null == tableName) || (\"\".equals(tableName))) { tables = dbTableService.getTables(); }else { tables = dbTableService.queryTablesMatchesName(((\"%\" + tableName) + \"%\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/8797/buggy-version/src.main.java.com.zju.hpec.controller.DBController.java", "BodyUseAPI": ["com.zju.hpec.service.IDBTableService.queryTablesMatchesName(java.lang.String)"], "Fixed commit": "86b7b0834c963b7c4c63cb704069b1ed0a09bc2e", "Url": "https://api.github.com/repos/summer1897/cute-db", "Date": "2016-06-19T06:48:05Z"},
{"Line": "=>713", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (node.isFloatingPointNumber()) { theValue = node.floatValue(); }else if (node.isInt()) { theValue = node.intValue(); }else if (node.isLong()) { theValue = node.longValue(); }else if (node.isTextual()) { theValue = node.textValue(); }else if (node.isArray()) { theValue = node; }else if (node.isObject()) { theValue = node; }else { theValue = node.textValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/5703/buggy-version/blueprints-core.src.main.java.com.tinkerpop.blueprints.util.io.graphson.GraphSONUtility.java", "BodyUseAPI": ["com.fasterxml.jackson.databind.JsonNode.longValue()", "com.fasterxml.jackson.databind.JsonNode.isTextual()", "com.fasterxml.jackson.databind.JsonNode.floatValue()", "com.fasterxml.jackson.databind.JsonNode.isLong()", "com.fasterxml.jackson.databind.JsonNode.textValue()", "com.fasterxml.jackson.databind.JsonNode.isArray()", "com.fasterxml.jackson.databind.JsonNode.textValue()", "com.fasterxml.jackson.databind.JsonNode.isInt()", "com.fasterxml.jackson.databind.JsonNode.intValue()", "com.fasterxml.jackson.databind.JsonNode.isObject()"], "Fixed commit": "c498e66bccd359442d2cd81bf9fc4dc9804778fc", "Url": "https://api.github.com/repos/tinkerpop/blueprints", "Date": "2013-09-27T15:10:50Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["request.getRequestLine().getUri()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((target.indexOf('?')) >= 0) { target = target.substring(0, target.indexOf('?')); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/3561/buggy-version/src.main.java.eu.w4.contrib.bpmnplus.module.httpd.FileHandler.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.indexOf(char)"], "Fixed commit": "2ddc03cbca2d304c2c5a12dffe01b6f450cd25bf", "Url": "https://api.github.com/repos/w4software/w4-bpmnplus-module-httpd", "Date": "2015-11-24T09:01:59Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.cxf.rs.security.jose.jwk.KeyType.getKeyType(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (kt == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/4714/buggy-version/rt.rs.security.jose.src.main.java.org.apache.cxf.rs.security.jose.jwk.JsonWebKeys.java", "BodyUseAPI": [], "Fixed commit": "3a72794e70164aff749509b7fb2d94b06d47ea39", "Url": "https://api.github.com/repos/eonezhang/cxf", "Date": "2015-08-06T14:43:55Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((workflowController.getWorkitem()) != null) workflowController.getWorkitem().replaceItemValue(\"_invalidRequestID\", backendModified);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/1645/buggy-version/imixs-marty-util.src.main.java.org.imixs.marty.util.BrowserCacheController.java", "BodyUseAPI": ["org.imixs.marty.workflow.WorkflowController.getWorkitem()", "workflowController.getWorkitem().replaceItemValue(java.lang.String,java.lang.String)"], "Fixed commit": "9c86e3accf2acb094ea8a91820a097fbd75d022f", "Url": "https://api.github.com/repos/imixs/imixs-marty", "Date": "2014-05-22T06:59:42Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSocketObserver) != null) { mSocketObserver.onDisconnect(socket); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/2071/buggy-version/src.main.java.com.jajuka.telnet.TelnetServer.java", "BodyUseAPI": [], "Fixed commit": "f22635902668931849810ebfdea0e22ed225d4d7", "Url": "https://api.github.com/repos/berdon/telnet-java", "Date": "2014-01-03T00:04:30Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (cleaned == null) { ret.add(\"\"); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/4199/buggy-version/BDELocationExtraction.src.main.java.gr.demokritos.iit.location.extraction.DefaultLocationExtractor.java", "BodyUseAPI": [], "Fixed commit": "bda55aea12ea7315614313959ee978abe5121b4c", "Url": "https://api.github.com/repos/npit/bde-event-detection-sc7", "Date": "2016-11-28T11:25:14Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portal.kernel.search.Document.get(Field.ROOT_ENTRY_CLASS_NAME)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.liferay.portal.kernel.util.Validator.isNull(className)) { className = document.get(Field.ENTRY_CLASS_NAME); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/8082/buggy-version/portal-impl.src.com.liferay.portal.search.SearchPermissionCheckerImpl.java", "BodyUseAPI": [], "Fixed commit": "aa11a8ac63e9dbbca44f785752d5f521f6777fcf", "Url": "https://api.github.com/repos/Preston-Crary/liferay-portal", "Date": "2015-05-22T21:08:16Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.joget.apps.form.service.FormUtil.isReadonly(this, formData)) { value = formattedDisplayValue(value, displayFormat, formData); }else { value = formattedValue(value, displayFormat, formData); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/2898/buggy-version/wflow-core.src.main.java.org.joget.apps.form.lib.DatePicker.java", "BodyUseAPI": ["org.joget.apps.form.lib.DatePicker.formattedValue(java.lang.String,java.lang.String,org.joget.apps.form.model.FormData)", "org.joget.apps.form.lib.DatePicker.formattedDisplayValue(java.lang.String,java.lang.String,org.joget.apps.form.model.FormData)"], "Fixed commit": "f06557b065d6cd81f565b146a469060bd6d42718", "Url": "https://api.github.com/repos/jogetworkflow/jw-community", "Date": "2017-08-22T07:06:51Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["level.entities.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (entity == (level.player)) { if (explosionRadius.overlaps(level.player.bounds)) { level.player.takeDamage(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/3965/buggy-version/roomforchange.roomforchange.src.com.sturdyhelmetgames.roomforchange.entity.ExplodingBomb.java", "BodyUseAPI": [], "Fixed commit": "d33688389578e892a7069e115514cadc3ba56041", "Url": "https://api.github.com/repos/antionio/game-off-2013", "Date": "2013-11-27T21:51:32Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((data) == null) { data = provideData(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/4497/buggy-version/app.src.main.java.be.ugent.zeus.hydra.ui.common.RefreshViewModel.java", "BodyUseAPI": [], "Fixed commit": "4d61f0671635aef5caea29866bc01b3de78bb96c", "Url": "https://api.github.com/repos/ZeusWPI/hydra-android", "Date": "2017-05-29T19:05:30Z"},
{"Line": "=>309", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((com.orientechnologies.common.collection.OMultiValue.isMultiValue(o)) || (o instanceof java.util.Iterator)) { for (java.lang.Object inner : com.orientechnologies.common.collection.OMultiValue.getMultiValueIterable(o)) { result.add(iCallable.call(((com.orientechnologies.orient.core.db.record.OIdentifiable) (inner)))); } }else result.add(iCallable.call(((com.orientechnologies.orient.core.db.record.OIdentifiable) (o))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/8196/buggy-version/core.src.main.java.com.orientechnologies.orient.core.sql.OSQLEngine.java", "BodyUseAPI": ["com.orientechnologies.common.collection.OMultiValue.getMultiValueIterable(java.lang.Object)"], "Fixed commit": "ef28584b96ff0b015c5ff727e5b2a693d637ee09", "Url": "https://api.github.com/repos/nuvolabase/orientdb", "Date": "2013-06-03T12:30:10Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.gwtopenmaps.openlayers.client.layer.Vector.getDataExtent()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (layerExtent == null) { com.sencha.gxt.widget.core.client.info.Info.display(UIMessages.INSTANCE.zoomToVectorLayerToolText(), UIMessages.INSTANCE.emptyVectorLayer()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/6259/buggy-version/src.main.java.org.geowe.client.local.layermanager.tool.ZoomToVectorLayerTool.java", "BodyUseAPI": [], "Fixed commit": "4b62daadd8dc6be6c374b0c53ac4ebb40cb9d5d2", "Url": "https://api.github.com/repos/geowe/geowe-core", "Date": "2016-10-14T07:08:02Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((scheme == null) || (scheme.isEmpty())) { throw new nl.esciencecenter.octopus.exceptions.OctopusException(\"engine\", (\"Invalid scheme \" + scheme)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/4207/buggy-version/src.nl.esciencecenter.octopus.engine.OctopusEngine.java", "BodyUseAPI": [], "Fixed commit": "cbd267f7b56b0f1a22321b8df72f6d7328232b36", "Url": "https://api.github.com/repos/NLeSC/octopus", "Date": "2013-08-29T15:34:43Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang.StringUtils.isBlank(value)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/2966/buggy-version/src.main.java.com.e2open.falcon.framework.model.Model.java", "BodyUseAPI": [], "Fixed commit": "aa1852881ca5505f00c3393516fdd1580a94cdc4", "Url": "https://api.github.com/repos/e2open/falcon", "Date": "2014-01-31T21:08:06Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (util2 == util1) { if (Game.DEBUG_GAME) { java.lang.System.out.print(\"-\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/4106/buggy-version/Game.java", "BodyUseAPI": [], "Fixed commit": "81c582e3e058c6a07f92a6004a4264a34ae34fbe", "Url": "https://api.github.com/repos/mozerfazer/dmkmmas14", "Date": "2014-03-06T18:33:19Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Game.DEBUG_GAME) { java.lang.System.out.println(\"\"); java.lang.System.out.print(\"Press enter for the next round\"); try { buf.readLine(); } catch (java.lang.Exception e) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/4106/buggy-version/Game.java", "BodyUseAPI": [], "Fixed commit": "81c582e3e058c6a07f92a6004a4264a34ae34fbe", "Url": "https://api.github.com/repos/mozerfazer/dmkmmas14", "Date": "2014-03-06T18:33:19Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((undoStack.size()) > 0) { java.awt.Shape temp = undoStack.pop(); javafx.application.Platform.runLater(new java.lang.Runnable() { @java.lang.Override public void run() { root.getChildren().remove(temp); } }); redoStack.push(temp); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/7624/buggy-version/annotationtool.annotationtool.AnnotationToolApplication.java", "BodyUseAPI": ["java.util.Deque<java.awt.Shape>.pop()"], "Fixed commit": "fcf0a3a7513363fd661ed8dfa51773837065ab4e", "Url": "https://api.github.com/repos/seedor87/scratchpad_project", "Date": "2017-05-31T21:10:24Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((redoStack.size()) > 0) { java.awt.Shape temp = redoStack.pop(); javafx.application.Platform.runLater(new java.lang.Runnable() { @java.lang.Override public void run() { root.getChildren().add(temp); } }); undoStack.push(temp); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/7624/buggy-version/annotationtool.annotationtool.AnnotationToolApplication.java", "BodyUseAPI": ["java.util.Deque<java.awt.Shape>.pop()"], "Fixed commit": "fcf0a3a7513363fd661ed8dfa51773837065ab4e", "Url": "https://api.github.com/repos/seedor87/scratchpad_project", "Date": "2017-05-31T21:10:24Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(org.hcjf.io.net.http.LINE_FIELD_SEPARATOR)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((parts.length) == 2) { setResponseCode(java.lang.Integer.parseInt(parts[org.hcjf.io.net.http.HttpResponse.RESPONSE_CODE_INDEX])); setHttpVersion(parts[org.hcjf.io.net.http.HttpResponse.VERSION_INDEX]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/2029/buggy-version/src.org.hcjf.io.net.http.HttpResponse.java", "BodyUseAPI": ["org.hcjf.io.net.http.HttpResponse.setResponseCode(int)", "org.hcjf.io.net.http.HttpResponse.setHttpVersion(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "b538d1b144b1ba289fc9ae1a35a26760a13e42fe", "Url": "https://api.github.com/repos/javaito/HolandaCatalinaFw", "Date": "2017-02-13T15:42:13Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(org.hcjf.io.net.http.LINE_FIELD_SEPARATOR)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((parts.length) == 3) { setResponseCode(java.lang.Integer.parseInt(parts[org.hcjf.io.net.http.HttpResponse.RESPONSE_CODE_INDEX])); setReasonPhrase(parts[org.hcjf.io.net.http.HttpResponse.REASON_PHRASE_INDEX]); setHttpVersion(parts[org.hcjf.io.net.http.HttpResponse.VERSION_INDEX]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/2029/buggy-version/src.org.hcjf.io.net.http.HttpResponse.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "org.hcjf.io.net.http.HttpResponse.setHttpVersion(java.lang.String)", "org.hcjf.io.net.http.HttpResponse.setReasonPhrase(java.lang.String)", "org.hcjf.io.net.http.HttpResponse.setResponseCode(int)"], "Fixed commit": "b538d1b144b1ba289fc9ae1a35a26760a13e42fe", "Url": "https://api.github.com/repos/javaito/HolandaCatalinaFw", "Date": "2017-02-13T15:42:13Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((image) != null) com.google.gwt.user.client.ui.RootPanel.get().remove(image);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/9006/buggy-version/vtm-gdx-html.src.org.oscim.gdx.client.GwtBitmap.java", "BodyUseAPI": [], "Fixed commit": "0ed2542d5cfabb8df58f504db99bf872ba6269ab", "Url": "https://api.github.com/repos/hjanetzek/vtm", "Date": "2014-02-27T02:50:12Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pointToNavigate) == null) { mapActivity.getMapActions().stopNavigationWithoutConfirm(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/471/buggy-version/OsmAnd.src.net.osmand.plus.TargetPointsHelper.java", "BodyUseAPI": [], "Fixed commit": "f75a8a0a4e46342d519510e4de6eb054678195b8", "Url": "https://api.github.com/repos/osmandapp/Osmand", "Date": "2016-01-13T12:37:35Z"},
{"Line": "=>955", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (xDiff == 0) { speedX = 0; }else { speedX = (xDiff > (edu.neu.mhealth.debug.opengl.OpenGLBug.BOUNCING_STEP)) ? xDiff / (edu.neu.mhealth.debug.opengl.OpenGLBug.BOUNCING_STEP) : xDiff / (java.lang.Math.abs(xDiff)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/4640/buggy-version/src.edu.neu.mhealth.debug.OpenGlRenderer.java", "BodyUseAPI": ["java.lang.Math.abs(int)"], "Fixed commit": "55ef9d634f3bfd728edd63f8d594a648f8bdd71a", "Url": "https://api.github.com/repos/czxttkl/Debug", "Date": "2013-12-01T04:22:45Z"},
{"Line": "=>961", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (yDiff == 0) { speedY = 0; }else { speedY = (yDiff > (edu.neu.mhealth.debug.opengl.OpenGLBug.BOUNCING_STEP)) ? yDiff / (edu.neu.mhealth.debug.opengl.OpenGLBug.BOUNCING_STEP) : yDiff / (java.lang.Math.abs(yDiff)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/4640/buggy-version/src.edu.neu.mhealth.debug.OpenGlRenderer.java", "BodyUseAPI": ["java.lang.Math.abs(int)"], "Fixed commit": "55ef9d634f3bfd728edd63f8d594a648f8bdd71a", "Url": "https://api.github.com/repos/czxttkl/Debug", "Date": "2013-12-01T04:22:45Z"},
{"Line": "=>792", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (speedX == 0) { if (speedY < 0) rotateRadian = 0; else rotateRadian = (java.lang.Math.PI) / 2; }else { rotateRadian = java.lang.Math.atan(java.lang.Math.abs((((double) (speedY)) / speedX))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/4640/buggy-version/src.edu.neu.mhealth.debug.OpenGlRenderer.java", "BodyUseAPI": ["java.lang.Math.atan(double)", "java.lang.Math.abs(double)"], "Fixed commit": "55ef9d634f3bfd728edd63f8d594a648f8bdd71a", "Url": "https://api.github.com/repos/czxttkl/Debug", "Date": "2013-12-01T04:22:45Z"},
{"Line": "=>545", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(entity.hasMetadata(\"MagicBlockList\"))) { entity.setMetadata(\"MagicBlockList\", new org.bukkit.metadata.FixedMetadataValue(plugin, this)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/5562/buggy-version/Magic.src.main.java.com.elmakers.mine.bukkit.block.UndoList.java", "BodyUseAPI": ["org.bukkit.entity.Entity.setMetadata(java.lang.String,org.bukkit.metadata.FixedMetadataValue)"], "Fixed commit": "f83ee8e6cefb5fa2a644edbe8dcb0f9ab20398f3", "Url": "https://api.github.com/repos/elBukkit/MagicPlugin", "Date": "2017-07-03T21:00:05Z"},
{"Line": "=>302", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((state) == (edu.archer.Archer.State.MAIN_MENU)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/5554/buggy-version/src.edu.archer.Archer.java", "BodyUseAPI": [], "Fixed commit": "d88aee6b839f01a554a24cf46d1294b0e69628bb", "Url": "https://api.github.com/repos/tukon/cs321-game", "Date": "2016-11-29T02:58:31Z"},
{"Line": "=>331", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (mSlidingPaneLayout)) { mDrawerIndicatorEnabled = !(mSlidingPaneLayout.isSlideable()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/735/buggy-version/src.dev.dworks.libs.actionbartoggle.ActionBarToggle.java", "BodyUseAPI": [], "Fixed commit": "d568b7146ca1c5cd408878bcad60366da8caab11", "Url": "https://api.github.com/repos/DWorkS/ActionBarToggle", "Date": "2013-06-07T18:01:36Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<soot.jimple.toolkits.callgraph.Edge>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((!(edge.tgt().getName().equals(\"<clinit>\"))) && (!(edge.tgt().getName().equals(\"<init>\")))) methods.add(edge.tgt());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/2620/buggy-version/src.main.java.de.tud.cs.soot.callgraph.CorrectCallgraphAnalysis.java", "BodyUseAPI": ["soot.jimple.toolkits.callgraph.Edge.tgt()", "java.util.Set<soot.SootMethod>.add(edge.tgt())"], "Fixed commit": "c571a1e02f1ae3133680d5426744cb94bb654cfb", "Url": "https://api.github.com/repos/florian-kuebler/soot-callgraph-tests", "Date": "2015-05-13T15:26:37Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((classSplit == null) && (classSplit.isEmpty())) { classSplit = json_obj.getString(json.UserBoard.TAG.NAME.getValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/7246/buggy-version/app.src.main.java.json.UserBoard.java", "BodyUseAPI": [], "Fixed commit": "47812d1522a9bb5fe1b1ca6e6607f967ba3f34f8", "Url": "https://api.github.com/repos/AlexTeixeira/idboard_android", "Date": "2016-07-06T18:14:07Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((doc.get(\"orPerCopyUnitDescr\")) != null) { ci = ci.concat(doc.get(\"orPerCopyUnitDescr\").asText().trim()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/4267/buggy-version/goci-interfaces.goci-ui.src.main.java.uk.ac.ebi.spot.goci.ui.service.JsonProcessingService.java", "BodyUseAPI": ["java.lang.String.concat(doc.get(\"orPerCopyUnitDescr\").asText().trim())", "com.fasterxml.jackson.databind.JsonNode.get(java.lang.String)", "doc.get(\"orPerCopyUnitDescr\").asText().trim()", "doc.get(\"orPerCopyUnitDescr\").asText()"], "Fixed commit": "370da07d383639bf1e1f73536f11887f1b2eb524", "Url": "https://api.github.com/repos/EBISPOT/goci", "Date": "2016-01-22T09:54:25Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (erg == null) erg = \"0\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/3505/buggy-version/LeoApp.app.src.main.java.de.slg.leoapp.sqlite.SQLiteConnectorMessenger.java", "BodyUseAPI": [], "Fixed commit": "b8106338d70e7e95a58848a44271d5fc5e59bc99", "Url": "https://api.github.com/repos/Leo-App/android", "Date": "2017-12-24T14:33:17Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.slg.leoapp.utility.Utils.getController().getMessengerDatabase().getLatestMessage()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((date.length()) > 3) date = date.substring(0, ((date.length()) - 3));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/3505/buggy-version/LeoApp.app.src.main.java.de.slg.leoapp.service.ReceiveService.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "b8106338d70e7e95a58848a44271d5fc5e59bc99", "Url": "https://api.github.com/repos/Leo-App/android", "Date": "2017-12-24T14:33:17Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (restoreCommencing) { try { if ((restoredSelection) >= 0) { setSelection(restoredSelection); restoredSelection = -1; } restored = true; } finally { restoreCommencing = false; } }else if (requestedRefreshOnce) { performClick(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/4907/buggy-version/app.src.main.java.ru.adios.budgeter.widgets.RefreshingSpinner.java", "BodyUseAPI": [], "Fixed commit": "ff94205635cca77bccd014eebc6d01dde8466787", "Url": "https://api.github.com/repos/adiosmsu/budgeter-app", "Date": "2015-12-01T13:39:12Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["alluxio.util.io.PathUtils.concatPath(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (alluxio.util.io.FileUtils.exists(tmpDirPath)) { alluxio.worker.block.meta.StorageTier.LOG.error(\"Failed to clean up temporary directory: {}.\", tmpDirPath); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/4471/buggy-version/core.server.src.main.java.alluxio.worker.block.meta.StorageTier.java", "BodyUseAPI": ["org.slf4j.Logger.error(java.lang.String,java.lang.String)"], "Fixed commit": "822e84f0c2f3865821aefbc77c15ece10fcd8f90", "Url": "https://api.github.com/repos/PasaLab/tachyon", "Date": "2016-05-24T20:46:47Z"},
{"Line": "=>1539", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.meetme.android.horizontallistview.HorizontalListView.getChildCount()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((firstPosition >= 0) && (childCount > 0)) { final android.view.View view = getChildAt(0); final int left = view.getLeft(); int width = view.getWidth(); if (width > 0) { int result = java.lang.Math.max(((firstPosition * 100) - ((left * 100) / width)), 0); return result; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/3049/buggy-version/AndroidHorizontalListView.src.com.meetme.android.horizontallistview.HorizontalListView.java", "BodyUseAPI": ["java.lang.Math.max(int,int)"], "Fixed commit": "6d7085e6d0a8102552813c8b45ed87cac100c3e3", "Url": "https://api.github.com/repos/Fichardu/Android-HorizontalListView", "Date": "2014-12-07T14:07:21Z"},
{"Line": "=>463", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((accID.numericPart) == null) { throw new java.lang.Exception(\"Bad J: number assigned (null)\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/7218/buggy-version/src.main.java.org.jax.mgi.mgd.api.entities.Reference.java", "BodyUseAPI": [], "Fixed commit": "79e438f574bc05ebbdbeb8445b337f99ec7ddc28", "Url": "https://api.github.com/repos/mgijax/mgd_java_api", "Date": "2017-08-14T11:57:43Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((img_url) == null) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/9244/buggy-version/matchp-core.src.main.java.cn.edu.xmu.gxj.matchp.model.Weibo.java", "BodyUseAPI": [], "Fixed commit": "81f26c6eb979ae1a09fce4b1b89d7460e842dd85", "Url": "https://api.github.com/repos/cdmaok/matchp", "Date": "2016-05-07T07:56:19Z"},
{"Line": "=>1177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!implExists) { if (c == (func.attrNearestStructureDef())) { func.addError(((((\"Class \" + (c.getName())) + \" is not abstract so it cannot have abstract functions like \") + (func.getName())) + \".\")); }else { c.addError((((((\"Class \" + (c.getName())) + \" must implement the abstract function \") + (func.getName())) + \" from \") + (de.peeeq.wurstscript.utils.Utils.printElement(func.attrNearestStructureDef())))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/1798/buggy-version/de.peeeq.wurstscript.src.de.peeeq.wurstscript.validation.WurstValidator.java", "BodyUseAPI": [], "Fixed commit": "1133ce6fd773c99e24e4812038dd52574c98cb27", "Url": "https://api.github.com/repos/peq/WurstScript", "Date": "2013-01-11T22:50:02Z"},
{"Line": "=>1203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.peeeq.wurstscript.attributes.names.NameLink.getNameDef()", "de.peeeq.wurstscript.attributes.names.NameLink.getNameDef()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((func.attrIsStatic()) && (!(overriddenFunc.attrIsStatic()))) { func.addError(((\"Cannot override nonstatic function \" + (func.getName())) + \" with a static function.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/1798/buggy-version/de.peeeq.wurstscript.src.de.peeeq.wurstscript.validation.WurstValidator.java", "BodyUseAPI": ["de.peeeq.wurstscript.ast.FuncDef.addError(((\"Cannot override nonstatic function \" + (func.getName())) + \" with a static function.\"))", "de.peeeq.wurstscript.ast.FuncDef.getName()"], "Fixed commit": "1133ce6fd773c99e24e4812038dd52574c98cb27", "Url": "https://api.github.com/repos/peq/WurstScript", "Date": "2013-01-11T22:50:02Z"},
{"Line": "=>1206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.peeeq.wurstscript.attributes.names.NameLink.getNameDef()", "de.peeeq.wurstscript.attributes.names.NameLink.getNameDef()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((!(func.attrIsStatic())) && (overriddenFunc.attrIsStatic())) { func.addError(((\"Cannot override static function \" + (func.getName())) + \" with a nonstatic function.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/1798/buggy-version/de.peeeq.wurstscript.src.de.peeeq.wurstscript.validation.WurstValidator.java", "BodyUseAPI": ["de.peeeq.wurstscript.ast.FuncDef.addError(((\"Cannot override static function \" + (func.getName())) + \" with a nonstatic function.\"))", "de.peeeq.wurstscript.ast.FuncDef.getName()"], "Fixed commit": "1133ce6fd773c99e24e4812038dd52574c98cb27", "Url": "https://api.github.com/repos/peq/WurstScript", "Date": "2013-01-11T22:50:02Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["printer.getProblems().get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (selectedProblem.isFinished()) { nl.sm42.ocealerts.activitys.Administration.getInstance().setSelectedFixedProblem(selectedProblem); i = new android.content.Intent(getApplicationContext(), nl.sm42.ocealerts.activitys.FixedProblemActivity.class); }else { nl.sm42.ocealerts.activitys.Administration.getInstance().setSelectedFixedProblem(selectedProblem); i = new android.content.Intent(getApplicationContext(), nl.sm42.ocealerts.activitys.ErrorDetailActivity.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/7411/buggy-version/OCEAlerts.app.src.main.java.nl.sm42.ocealerts.activitys.PrinterDetailActivity.java", "BodyUseAPI": ["nl.sm42.ocealerts.activitys.Administration.getInstance().setSelectedFixedProblem(nl.sm42.ocealerts.activitys.Problem)", "nl.sm42.ocealerts.activitys.Administration.getInstance().setSelectedFixedProblem(nl.sm42.ocealerts.activitys.Problem)"], "Fixed commit": "3718f843994679865cda68869eec758aa4ec608c", "Url": "https://api.github.com/repos/DaanTul/SM42-Alerting", "Date": "2017-01-14T16:01:40Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.PATHomei.yanyu.util.YanYuUtils.isConnect(this))) { ((android.widget.TextView) (mEmptyView.findViewById(R.id.txt))).setText(\"\u7f51\u7edc\u4e0d\u7ed9\u529b\u54e6\uff01\"); ((android.widget.TextView) (mEmptyView.findViewById(R.id.sub_txt))).setText(\"\"); }else { ((android.widget.TextView) (mEmptyView.findViewById(R.id.txt))).setText(\"\u6682\u65e0\u8ba2\u5355\u8bb0\u5f55\"); ((android.widget.TextView) (mEmptyView.findViewById(R.id.sub_txt))).setText(\"\u53bb\u770b\u770b\u5206\u7c7b\u5546\u94fa\u5427\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/5370/buggy-version/src.com.PATHomei.yanyu.module.user.center.UserOrderListActivity.java", "BodyUseAPI": [], "Fixed commit": "148b607c002c1b8b4597fb71fc7f424d6e8d1dc8", "Url": "https://api.github.com/repos/seedzi/PATHomei_eclipse", "Date": "2015-07-27T05:34:20Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.eyeseetea.malariacare.BuildConfig.buildControlDataelements) { buildControlDataElements(surveyDB, event); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/8034/buggy-version/app.src.main.java.org.eyeseetea.malariacare.data.sync.exporter.ConvertToSDKVisitor.java", "BodyUseAPI": [], "Fixed commit": "e01c68d09af7fe0603df8e67a93d5e57041cd586", "Url": "https://api.github.com/repos/EyeSeeTea/pictureapp", "Date": "2017-10-20T15:44:13Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) != null) { com.yugy.v2ex.daily.widget.AppMsg.makeText(getActivity(), \"Network error\", AppMsg.STYLE_ALERT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/3335/buggy-version/app.src.main.java.com.yugy.v2ex.daily.fragment.TopicFragment.java", "BodyUseAPI": [], "Fixed commit": "165d808583df6edd2d37aef0001f2d00b28932dd", "Url": "https://api.github.com/repos/kyze8439690/v2ex-daily-android", "Date": "2014-03-22T07:46:10Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) != null) { com.yugy.v2ex.daily.widget.AppMsg.makeText(getActivity(), \"Network error\", AppMsg.STYLE_ALERT).show(); mPullToRefreshLayout.setRefreshComplete(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/3335/buggy-version/app.src.main.java.com.yugy.v2ex.daily.fragment.NewestNodeFragment.java", "BodyUseAPI": [], "Fixed commit": "165d808583df6edd2d37aef0001f2d00b28932dd", "Url": "https://api.github.com/repos/kyze8439690/v2ex-daily-android", "Date": "2014-03-22T07:46:10Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) != null) { com.yugy.v2ex.daily.widget.AppMsg.makeText(getActivity(), \"Network error\", AppMsg.STYLE_ALERT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/3335/buggy-version/app.src.main.java.com.yugy.v2ex.daily.fragment.NewestNodeFragment.java", "BodyUseAPI": [], "Fixed commit": "165d808583df6edd2d37aef0001f2d00b28932dd", "Url": "https://api.github.com/repos/kyze8439690/v2ex-daily-android", "Date": "2014-03-22T07:46:10Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) != null) { com.yugy.v2ex.daily.widget.AppMsg.makeText(getActivity(), \"Network error\", AppMsg.STYLE_ALERT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/3335/buggy-version/app.src.main.java.com.yugy.v2ex.daily.fragment.NodeFragment.java", "BodyUseAPI": [], "Fixed commit": "165d808583df6edd2d37aef0001f2d00b28932dd", "Url": "https://api.github.com/repos/kyze8439690/v2ex-daily-android", "Date": "2014-03-22T07:46:10Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((player.get()) != null) ((baubles.api.IBauble) (stack.getItem())).onEquipped(stack, player.get());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/1179/buggy-version/src.main.java.baubles.common.container.InventoryBaubles.java", "BodyUseAPI": ["java.lang.ref.WeakReference<net.minecraft.entity.player.EntityPlayer>.get()", "((baubles.api.IBauble) (stack.getItem())).onEquipped(net.minecraft.item.ItemStack,player.get())"], "Fixed commit": "ac437e11bc5b7d3cfdf50e4b7669248b69bec993", "Url": "https://api.github.com/repos/Azanor/Baubles", "Date": "2016-02-17T09:55:53Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((movie.getObject(\"formats\")) != null) { this.digital = movie.getObject(\"formats\").getBoolean(\"digital\"); this.bluray = movie.getObject(\"formats\").getBoolean(\"bluray\"); this.dvd = movie.getObject(\"formats\").getBoolean(\"dvd\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/214/buggy-version/complete.javafx-http.src.main.java.com.couchbase.Movie.java", "BodyUseAPI": [], "Fixed commit": "394a743f83b728098ea515d6a4ecc0b774f9abda", "Url": "https://api.github.com/repos/couchbaselabs/devnexus-java-workshop", "Date": "2017-03-02T20:36:17Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(fullUrl.toLowerCase().contains(searchProducts.get(i).getSubCategory().toLowerCase()))) { fullUrl = (fullUrl + (searchProducts.get(i).getSubCategory())) + \"%20\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/3231/buggy-version/client.app.src.main.java.hftl.dwi.se.fridgeapp.util.ApiHandler.java", "BodyUseAPI": ["searchProducts.get(i).getSubCategory()", "java.util.ArrayList<hftl.dwi.se.fridgeapp.util.Product>.get(int)"], "Fixed commit": "5a1b9ab028940e1cdad5df3f153b47c133dbea64", "Url": "https://api.github.com/repos/Explie/FridgeApp", "Date": "2015-12-13T18:53:04Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((clazz.getPackage()) != null) { packagename = clazz.getPackage().getName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/5861/buggy-version/src.main.java.de.prob2.ui.groovy.GroovyClassStage.java", "BodyUseAPI": ["java.lang.Package.getName()", "java.lang.Class<? extends java.lang.Object>.getPackage()"], "Fixed commit": "5d19aa731d40630bf45ce1b64ca5de17f97bc731", "Url": "https://api.github.com/repos/bendisposto/prob2-ui", "Date": "2016-08-30T12:42:09Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((freebie) != null) { freebie = edu.wpi.cs.cs403xproj4.wpifreebies.services.FreebieManager.getInstance().getFreebieByID(freebie.get_id()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/1339/buggy-version/Proj4.app.src.main.java.edu.wpi.cs.cs403xproj4.wpifreebies.FreebieLocator.java", "BodyUseAPI": [], "Fixed commit": "64f86d43f7462a3953a72979f223a367f8986dee", "Url": "https://api.github.com/repos/zparnold/CS403x", "Date": "2015-05-02T20:30:48Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((freebie) != null) { updateInfoTab(); }else { initializeInfoTab(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/1339/buggy-version/Proj4.app.src.main.java.edu.wpi.cs.cs403xproj4.wpifreebies.FreebieLocator.java", "BodyUseAPI": [], "Fixed commit": "64f86d43f7462a3953a72979f223a367f8986dee", "Url": "https://api.github.com/repos/zparnold/CS403x", "Date": "2015-05-02T20:30:48Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (expensive) water.util.Log.info((\"Dropping constant columns: \" + cstr));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/6457/buggy-version/h2o-core.src.main.java.hex.ModelBuilder.java", "BodyUseAPI": [], "Fixed commit": "03ed1c6d0de38847b9b4f8b31b4117bfaaeb3c07", "Url": "https://api.github.com/repos/h2oai/h2o-3", "Date": "2015-01-16T20:51:34Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (expensive) water.util.Log.info((\"Dropping columns with too many missing values: \" + nstr));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/6457/buggy-version/h2o-core.src.main.java.hex.ModelBuilder.java", "BodyUseAPI": [], "Fixed commit": "03ed1c6d0de38847b9b4f8b31b4117bfaaeb3c07", "Url": "https://api.github.com/repos/h2oai/h2o-3", "Date": "2015-01-16T20:51:34Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cstr.length()) > 0) cstr += \", \";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/6457/buggy-version/h2o-core.src.main.java.hex.ModelBuilder.java", "BodyUseAPI": [], "Fixed commit": "03ed1c6d0de38847b9b4f8b31b4117bfaaeb3c07", "Url": "https://api.github.com/repos/h2oai/h2o-3", "Date": "2015-01-16T20:51:34Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((nstr.length()) > 0) nstr += \", \";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/6457/buggy-version/h2o-core.src.main.java.hex.ModelBuilder.java", "BodyUseAPI": [], "Fixed commit": "03ed1c6d0de38847b9b4f8b31b4117bfaaeb3c07", "Url": "https://api.github.com/repos/h2oai/h2o-3", "Date": "2015-01-16T20:51:34Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i >= 100) { i = 100; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/8677/buggy-version/src.game.physics.AABoundingRect.java", "BodyUseAPI": [], "Fixed commit": "1c990d6ca47784942c0a18665dd2545cba5236d7", "Url": "https://api.github.com/repos/jwellstech/zombiegame", "Date": "2016-05-18T15:04:43Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (j >= 100) { j = 100; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/8677/buggy-version/src.game.physics.AABoundingRect.java", "BodyUseAPI": [], "Fixed commit": "1c990d6ca47784942c0a18665dd2545cba5236d7", "Url": "https://api.github.com/repos/jwellstech/zombiegame", "Date": "2016-05-18T15:04:43Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["config.getBroker().getUsers().get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((user.getUsername()) == null) { throw new java.lang.RuntimeException(\"Broker local username is null..\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/5222/buggy-version/raptor-api.raptor-api-common.src.main.java.org.createnet.raptor.api.common.dispatcher.DispatcherService.java", "BodyUseAPI": [], "Fixed commit": "c0cc77cdda902e82c2892da2224aa9d9982a0196", "Url": "https://api.github.com/repos/raptorbox/raptor", "Date": "2017-06-21T06:58:08Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((indexes.size()) > (irank)) { throw new java.lang.IllegalArgumentException(\"Too many indices (a boolean dataset may have too many dimensions)\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/4160/buggy-version/org.eclipse.dawnsci.analysis.dataset.src.org.eclipse.dawnsci.analysis.dataset.impl.IntegersIterator.java", "BodyUseAPI": [], "Fixed commit": "91f7391912d62fb679215bb8a67774d63ea4d682", "Url": "https://api.github.com/repos/eclipse/dawnsci", "Date": "2015-11-06T13:39:30Z"},
{"Line": "=>370", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (firstSet.contains(org.jgll.grammar.symbol.Epsilon.getInstance())) { predictionSet.or(followSetBitSet); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/5374/buggy-version/src.org.jgll.grammar.slot.HeadGrammarSlot.java", "BodyUseAPI": [], "Fixed commit": "50f10c547edbf7f3e2604e4506e4afc71843e37c", "Url": "https://api.github.com/repos/cwi-swat/iguana", "Date": "2013-12-11T12:20:58Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((items.length) - stationNameIndex) < 0) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/1565/buggy-version/BusesSpb.src.main.java.ru.slavabulgakov.busesspb.Network.StationsContainer.java", "BodyUseAPI": [], "Fixed commit": "e7de5b4a8d65d5d0c670dc16102e89a3ce037895", "Url": "https://api.github.com/repos/slavabulgakov/BusesSpb", "Date": "2014-03-21T18:02:39Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.file.Path.toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (TarredLogFile.LOGFILE_PATTERN.matcher(absolutePath).matches()) { addTarFileToIndex(absolutePath); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/985/buggy-version/whois-logsearch.src.main.java.net.ripe.db.whois.logsearch.NewLogFormatProcessor.java", "BodyUseAPI": ["net.ripe.db.whois.logsearch.NewLogFormatProcessor.3.addTarFileToIndex(java.lang.String)"], "Fixed commit": "19e24c4d3d27cc9012af605ec53f60bbc27d4198", "Url": "https://api.github.com/repos/RIPE-NCC/whois", "Date": "2013-09-02T13:22:05Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tab == (com.kashdeya.tinyprogressions.main.TinyProgressions.tabTP)) for (int i = 0; i < (unlocalNames.length); i++) items.add(new net.minecraft.item.ItemStack(this, 1, i));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/8779/buggy-version/src.main.java.com.kashdeya.tinyprogressions.items.ItemBaseMeta.java", "BodyUseAPI": [], "Fixed commit": "4a5e6d93ff6dcb672eff98c6f05886c795580018", "Url": "https://api.github.com/repos/Kashdeya/Tiny-Progressions", "Date": "2017-09-17T18:55:09Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((file.getSize()) > 1) { upload(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/6174/buggy-version/AttendanceSystem-web.src.main.java.com.gemtastic.attendancesystem.managedbeans.StudentMB.java", "BodyUseAPI": [], "Fixed commit": "c5bb08593225e826259f79fb5ae1fff1b53c91e0", "Url": "https://api.github.com/repos/Gemtastic/JavaEEProject", "Date": "2016-04-30T21:49:00Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.location.LocationManager.getLastKnownLocation(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (lastKnownLocation != null) { report.setLatitude(lastKnownLocation.getLatitude()); report.setLongitude(lastKnownLocation.getLongitude()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/3637/buggy-version/app.src.main.java.com.starlabs.h2o.controller.CreateWaterReportActivity.java", "BodyUseAPI": ["android.location.Location.getLongitude()", "com.starlabs.h2o.model.report.WaterReport.setLongitude(lastKnownLocation.getLongitude())", "com.starlabs.h2o.model.report.WaterReport.setLatitude(lastKnownLocation.getLatitude())", "android.location.Location.getLatitude()"], "Fixed commit": "5198616f2155f742d01bd9af3a579ffc2a3b9445", "Url": "https://api.github.com/repos/chase-lewis/STARLabs39", "Date": "2017-03-07T03:09:23Z"},
{"Line": "=>641", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["event.getClickedBlock().getState()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (s.getLine(0).toLowerCase().contains(\"colormatch\")) { if (s.getLine(1).equalsIgnoreCase(\"\ufffd2[join]\")) { if (isValidArena(s.getLine(2))) { joinLobby(event.getPlayer(), s.getLine(2)); }else { event.getPlayer().sendMessage(arena_invalid); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/4251/buggy-version/src.com.comze_instancelabs.colormatch.Main.java", "BodyUseAPI": ["org.bukkit.block.Sign.getLine(int)", "org.bukkit.block.Sign.getLine(int)", "com.comze_instancelabs.colormatch.Main.joinLobby(event.getPlayer(),s.getLine(2))", "com.comze_instancelabs.colormatch.Main.isValidArena(s.getLine(2))", "org.bukkit.block.Sign.getLine(int)", "s.getLine(1).equalsIgnoreCase(java.lang.String)"], "Fixed commit": "13402319b09a308eddfe81a871195a3a8e84760b", "Url": "https://api.github.com/repos/instance01/ColorMatch", "Date": "2014-02-16T12:11:25Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isEven(value))) { return options.param(0).toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/3470/buggy-version/handlebars.src.main.java.com.github.jknack.handlebars.helper.NumberHelper.java", "BodyUseAPI": [], "Fixed commit": "d7762f50d710db2e4e0d9de2eaed2cfad69d4cd8", "Url": "https://api.github.com/repos/Jarlakxen/handlebars.java", "Date": "2013-07-24T15:46:13Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isEven(value)) { return options.param(0).toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/3470/buggy-version/handlebars.src.main.java.com.github.jknack.handlebars.helper.NumberHelper.java", "BodyUseAPI": [], "Fixed commit": "d7762f50d710db2e4e0d9de2eaed2cfad69d4cd8", "Url": "https://api.github.com/repos/Jarlakxen/handlebars.java", "Date": "2013-07-24T15:46:13Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type.isInstance(when)) { found.add(((T) (when))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/4017/buggy-version/camel-core.src.main.java.org.apache.camel.model.ProcessorDefinitionHelper.java", "BodyUseAPI": [], "Fixed commit": "61867a06054b57d8e6b218d78cec0c9e4ed8c8ea", "Url": "https://api.github.com/repos/apache/camel", "Date": "2014-09-22T07:05:59Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((AccountAssets) != null) { for (de.bitshares_munich.models.AccountAssets asset : AccountAssets) { array.put(asset); } try { obj.put(\"AccountAssets\", array); } catch (org.json.JSONException e) { android.util.Log.e(TAG, \"JSONException while trying to serialize AccountAssets\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/3808/buggy-version/app.src.main.java.de.bitshares_munich.models.AccountDetails.java", "BodyUseAPI": [], "Fixed commit": "5a89e56abd45f92d764ea57be8f8916f14bd07fb", "Url": "https://api.github.com/repos/kenCode-de/smartcoins-wallet", "Date": "2016-11-24T16:49:18Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cal.MathHelper.isNegativeSign(infixArrayList, i)) { postfixArrayList.add(\"0\"); }else if (cal.MathHelper.isPrefixOperator(currentChar)) { postfixArrayList.add(\" \"); if (((i - 1) >= 0) && (infixArrayList.get((i - 1)).equals(\")\"))) operatorStack.add(\"*\"); }else { while (cal.MathHelper.comparePriority(currentChar, operatorStack.peek())) postfixArrayList.add(operatorStack.pop()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/7068/buggy-version/src.cal.AffixConverter.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.util.ArrayList<java.lang.String>.get(int)"], "Fixed commit": "ef69e1c98a58226fd1468aaa74bd5099a241430a", "Url": "https://api.github.com/repos/shinypichu88/CS3343-Cal", "Date": "2014-10-15T14:44:03Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(src.canRead())) || (!(dst.canWrite()))) { android.util.Log.e(de.azapps.tools.FileUtils.TAG, \"cannot copy file\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/8446/buggy-version/src.de.azapps.tools.FileUtils.java", "BodyUseAPI": [], "Fixed commit": "54786cb93da608f020b8a6cbed33eb52dad94816", "Url": "https://api.github.com/repos/azapps/mirakel-android", "Date": "2013-11-19T08:49:39Z"},
{"Line": "=>465", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.files.size()) > 0) this.files.remove(((this.files.size()) - 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/6756/buggy-version/src.com.quanturium.androcloud.fragments.FilesFragment.java", "BodyUseAPI": ["java.util.List<com.cloudapp.api.model.CloudAppItem>.remove(((this.files.size()) - 1))", "java.util.List<com.cloudapp.api.model.CloudAppItem>.size()"], "Fixed commit": "111328fefd9c640494ffa47d75e91b2bec262b59", "Url": "https://api.github.com/repos/quanturium/AndroCloud", "Date": "2012-12-02T09:54:12Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mode) == 2) { double temp = xPara; xPara = ((xPara * xPara) - (yPara * yPara)) + x; yPara = ((2 * temp) * yPara) + y; }else { XY = getNextXY(xPara, yPara, x, y, mode); xPara = XY[0]; yPara = XY[1]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/6281/buggy-version/src.mandelbrot.MandelSetter.java", "BodyUseAPI": [], "Fixed commit": "440fd06ba0022cbe45c59997b62dfd8d2a431826", "Url": "https://api.github.com/repos/rixx/MandelBrot", "Date": "2012-11-29T09:01:33Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getValueAt(0, c)) == null) return java.lang.String.class;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/4736/buggy-version/src.pt.lsts.neptus.util.llf.IndexedLogTableModel.java", "BodyUseAPI": [], "Fixed commit": "24ad6e851c0294d36cfb82fde0f6b086eb2ece4b", "Url": "https://api.github.com/repos/LSTS/neptus", "Date": "2014-07-04T14:01:21Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((r1.getEntries().size()) == 0) { return 1; }else if ((r2.getEntries().size()) == 0) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/4047/buggy-version/src.main.java.com.inovia.magnifier.reports.Report.java", "BodyUseAPI": [], "Fixed commit": "8bc4f5b2c0245676d34fccc6136ca8d918205e65", "Url": "https://api.github.com/repos/inovia-team/magnifier", "Date": "2015-01-22T00:35:16Z"},
{"Line": "=>657", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((albumListType) == null) || (\"starred\".equals(albumListType))) || (!(largeAlbums))) { entryList.addHeaderView(albumList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/4970/buggy-version/src.github.daneren2005.dsub.fragments.SelectDirectoryFragment.java", "BodyUseAPI": [], "Fixed commit": "7a067358df68d85e2439ec1d0155946e01116771", "Url": "https://api.github.com/repos/MarkAdamson/Subsonic", "Date": "2014-05-04T00:17:23Z"},
{"Line": "=>1670", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((statusUpdateHandler) != null) { statusUpdateHandler.removeCallbacks(statusUpdateRunnable); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/4038/buggy-version/app.src.main.java.com.zulip.android.activities.ZulipActivity.java", "BodyUseAPI": [], "Fixed commit": "e3b87723bd3051e04f22411a059401f588983fa8", "Url": "https://api.github.com/repos/saketkumar95/zulip-android", "Date": "2016-12-28T00:08:44Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (this.edges.containsKey(vertex)) { return this.edges.get(vertex); }else { return new java.util.ArrayList<T>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/255/buggy-version/src.scc.Graph.java", "BodyUseAPI": ["java.util.Map<T, java.util.Collection<T>>.get(T)"], "Fixed commit": "c6313fb5c45648eb273f112ec840707ea721f53d", "Url": "https://api.github.com/repos/cloverrose/StronglyConnectedComponent", "Date": "2013-10-08T05:54:33Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((level) <= (com.clouby.tetris.game.BoardPanel.MAX_LEVEL)) timeTillPieceMoveDown = (com.clouby.tetris.game.BoardPanel.TIME_TILL_MOVE_DOWN_INITIAL) / (level);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/2494/buggy-version/App.app.src.main.java.com.clouby.tetris.game.BoardPanel.java", "BodyUseAPI": [], "Fixed commit": "3d36fd1ba48d2babe7a196840330e1dad9833373", "Url": "https://api.github.com/repos/nboneh/AndroidTetris", "Date": "2015-12-07T05:49:37Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.tobiyas.racesandclasses.traitcontainer.interfaces.Trait.getPrettyConfiguration()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((traitConfigText.length()) > 32) { lore.add(traitConfigText.substring(0, 31)); lore.add((\" -\" + (traitConfigText.substring(32, ((traitConfigText.length()) - 1))))); }else { lore.add(trait.getPrettyConfiguration()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/3752/buggy-version/src.main.java.de.tobiyas.racesandclasses.traitcontainer.traitgui.TraitInventory.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.substring(int,int)", "java.util.List<java.lang.String>.add(java.lang.String)", "java.util.List<java.lang.String>.add(java.lang.String)", "java.lang.String.length()"], "Fixed commit": "af6cb5226512248b98fbf4a01af3e2f3f6164958", "Url": "https://api.github.com/repos/tobiyas/RacesAndClasses", "Date": "2013-08-23T16:31:22Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getRequestURI()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (requestURI.contains(\"info\")) { modelAndView.addObject(((de.fred4jupiter.fredbet.web.ActivePageHandlerInterceptor.PAGE_STATE_REFIX) + \"info\"), de.fred4jupiter.fredbet.web.ActivePageHandlerInterceptor.CSS_ACTIVE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/4785/buggy-version/src.main.java.de.fred4jupiter.fredbet.web.ActivePageHandlerInterceptor.java", "BodyUseAPI": [], "Fixed commit": "5aca8f4d8e7d3e187c224df002eb2ade40acf02b", "Url": "https://api.github.com/repos/fred4jupiter/fredbet", "Date": "2016-05-10T18:15:35Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getRequestURI()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((requestURI.contains(\"user\")) || (requestURI.contains(\"buildinfo\"))) || (requestURI.contains(\"administration\"))) { modelAndView.addObject(((de.fred4jupiter.fredbet.web.ActivePageHandlerInterceptor.PAGE_STATE_REFIX) + \"administrationMenu\"), de.fred4jupiter.fredbet.web.ActivePageHandlerInterceptor.CSS_ACTIVE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/4785/buggy-version/src.main.java.de.fred4jupiter.fredbet.web.ActivePageHandlerInterceptor.java", "BodyUseAPI": [], "Fixed commit": "5aca8f4d8e7d3e187c224df002eb2ade40acf02b", "Url": "https://api.github.com/repos/fred4jupiter/fredbet", "Date": "2016-05-10T18:15:35Z"},
{"Line": "=>367", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["T.length()", "T.length()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (sequenceLength > (containerLength - i)) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/3993/buggy-version/Bisanti.src.org.bisanti.util.StringUtil.java", "BodyUseAPI": [], "Fixed commit": "c232eab17163b82c6bcc8189a8d1b29fb3754937", "Url": "https://api.github.com/repos/jbisanti/Bisanti", "Date": "2014-11-24T01:06:29Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cuisine.contentEquals(\"null\")) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/384/buggy-version/jColibriRecipe.src.jcolibri.mtechkecbr.RecipeRecommender.RecipeDescription.java", "BodyUseAPI": [], "Fixed commit": "70016095b55a1e62ff6de73cfb2a798c66464ce6", "Url": "https://api.github.com/repos/arynchoong/MTech-KE-CBR", "Date": "2016-06-29T12:21:48Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((mSendCacheResult) || ((mUrl) != null)) mProcessData = data.optJSONObject(fr.haploid.WebservicesPlugin.WebservicesTask.kJSProcessData);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/106/buggy-version/Webservices.Android.Webservices.src.fr.haploid.WebservicesPlugin.WebservicesTask.java", "BodyUseAPI": [], "Fixed commit": "a32738b83eb6a9646b16d9916dfa9cccf200de2a", "Url": "https://api.github.com/repos/cobaltians/plugins", "Date": "2014-11-18T15:31:23Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((way.hasTag(\"maxspeed:forward\")) && (way.hasTag(\"maxspeed:backward\"))) { double maxSpeed = parseSpeed(way.getTag(\"maxspeed:forward\")); double backSpeed = parseSpeed(way.getTag(\"maxspeed:backward\")); if ((maxSpeed >= 0) && (backSpeed >= 0)) speed = (java.lang.Math.min(maxSpeed, backSpeed)) * 0.9; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/475/buggy-version/core.src.main.java.com.graphhopper.routing.util.CarFlagEncoder.java", "BodyUseAPI": ["com.graphhopper.reader.OSMWay.getTag(java.lang.String)", "com.graphhopper.routing.util.CarFlagEncoder.parseSpeed(way.getTag(\"maxspeed:backward\"))", "com.graphhopper.routing.util.CarFlagEncoder.parseSpeed(way.getTag(\"maxspeed:forward\"))", "com.graphhopper.reader.OSMWay.getTag(java.lang.String)"], "Fixed commit": "01e2182d23a954ee8fd4dbad636dec7af661f554", "Url": "https://api.github.com/repos/graphhopper/graphhopper", "Date": "2014-03-28T21:43:15Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (way.hasTag(\"maxspeed\")) { double maxspeed = parseSpeed(way.getTag(\"maxspeed\")); if (maxspeed >= 0) speed = maxspeed * 0.9; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/475/buggy-version/core.src.main.java.com.graphhopper.routing.util.CarFlagEncoder.java", "BodyUseAPI": ["com.graphhopper.routing.util.CarFlagEncoder.parseSpeed(way.getTag(\"maxspeed\"))", "com.graphhopper.reader.OSMWay.getTag(java.lang.String)"], "Fixed commit": "01e2182d23a954ee8fd4dbad636dec7af661f554", "Url": "https://api.github.com/repos/graphhopper/graphhopper", "Date": "2014-03-28T21:43:15Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((player1Team2.getText().length()) == 0) { beloteScoreBoard.putExtra(\"player1Team2\", ((getResources().getString(R.string.player)) + \"1\")); }else { beloteScoreBoard.putExtra(\"player1Team2\", player1Team2.getText().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/6690/buggy-version/app.src.main.java.rachma.tn.team.binary.rachma.belote.BeloteSetting.java", "BodyUseAPI": ["player1Team2.getText().toString()", "android.content.Intent.putExtra(java.lang.String,player1Team2.getText().toString())", "android.widget.EditText.getText()"], "Fixed commit": "39207270aab357ce9332396b05fc924a9359c227", "Url": "https://api.github.com/repos/Binary-Team/Rachma-Android", "Date": "2017-08-11T21:58:57Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((player2Team1.getText().length()) == 0) { beloteScoreBoard.putExtra(\"player2Team1\", ((getResources().getString(R.string.player)) + \"2\")); }else { beloteScoreBoard.putExtra(\"player2Team1\", player2Team1.getText().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/6690/buggy-version/app.src.main.java.rachma.tn.team.binary.rachma.belote.BeloteSetting.java", "BodyUseAPI": ["android.widget.EditText.getText()", "player2Team1.getText().toString()", "android.content.Intent.putExtra(java.lang.String,player2Team1.getText().toString())"], "Fixed commit": "39207270aab357ce9332396b05fc924a9359c227", "Url": "https://api.github.com/repos/Binary-Team/Rachma-Android", "Date": "2017-08-11T21:58:57Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((player1Team1.getText().length()) == 0) { beloteScoreBoard.putExtra(\"player1Team1\", ((getResources().getString(R.string.player)) + \"1\")); }else { beloteScoreBoard.putExtra(\"player1Team1\", player1Team1.getText().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/6690/buggy-version/app.src.main.java.rachma.tn.team.binary.rachma.belote.BeloteSetting.java", "BodyUseAPI": ["android.content.Intent.putExtra(java.lang.String,player1Team1.getText().toString())", "android.widget.EditText.getText()", "player1Team1.getText().toString()"], "Fixed commit": "39207270aab357ce9332396b05fc924a9359c227", "Url": "https://api.github.com/repos/Binary-Team/Rachma-Android", "Date": "2017-08-11T21:58:57Z"},
{"Line": "=>337", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mAudioDecoder.hasSource()) { int length = mAudioDecoder.pumpAudioBuffer(info.size); android.util.Log.d(cn.myhug.baobaoplayer.media.MediaMixer.TAG, java.lang.String.format(\"decode mix audio len=%d,time=%d,audio len = %d time=%d \", length, mAudioDecoder.latest.presentationTimeUs, info.size, info.presentationTimeUs)); mAudioDecoderOutputBuffers[decoderStatus].get(mAudioBytes, 0, info.size); cn.myhug.baobaoplayer.media.AudioUtil.mixVoice(mAudioBytes, mAudioDecoder.getResult(), java.lang.Math.min(length, info.size)); mAudioByteBuffer.position(0); info.offset = 0; mAudioByteBuffer.put(mAudioBytes, 0, info.size); mAudioByteBuffer.flip(); mEncoder.drainAudioEncoder(false, mAudioByteBuffer, info); }else { mEncoder.drainAudioEncoder(false, mAudioDecoderOutputBuffers[decoderStatus], info); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/8691/buggy-version/app.src.main.java.cn.myhug.baobaoplayer.media.MediaMixer.java", "BodyUseAPI": ["cn.myhug.baobaoplayer.media.AudioDecoder.pumpAudioBuffer(info.size)", "cn.myhug.baobaoplayer.media.AudioDecoder.getResult()", "java.lang.String.format(java.lang.String,int,mAudioDecoder.latest.presentationTimeUs,info.size,info.presentationTimeUs)", "cn.myhug.baobaoplayer.media.AudioUtil.mixVoice(byte[],mAudioDecoder.getResult(),int)", "android.util.Log.d(java.lang.String,java.lang.String)"], "Fixed commit": "445a09237973bac06c330c6bd5dbb770ec9762b6", "Url": "https://api.github.com/repos/zxzx74147/BaobaoPlayer", "Date": "2016-11-21T12:34:08Z"},
{"Line": "=>1163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getHint()) == null) { start = mTokenizer.findTokenStart(editable, end); }else { int hintLength = getHint().length(); java.lang.String text = getText().toString(); java.lang.String sub = getText().subSequence(hintLength, text.length()).toString(); start = sub.length(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/1862/buggy-version/src.com.android.ex.chips.RecipientEditTextView.java", "BodyUseAPI": [], "Fixed commit": "f5246c30610b6a0747e3b12e389c44690b005365", "Url": "https://api.github.com/repos/torresmi/ChipsLibrary", "Date": "2014-07-28T14:59:47Z"},
{"Line": "=>526", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (android.text.TextUtils.isEmpty(getHint())) { start = mTokenizer.findTokenStart(editable, end); }else { start = getHint().length(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/1862/buggy-version/src.com.android.ex.chips.RecipientEditTextView.java", "BodyUseAPI": [], "Fixed commit": "f5246c30610b6a0747e3b12e389c44690b005365", "Url": "https://api.github.com/repos/torresmi/ChipsLibrary", "Date": "2014-07-28T14:59:47Z"},
{"Line": "=>524", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (meta == null) { meta = entry.getMetaData(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/3478/buggy-version/src.main.java.org.linagora.linshare.core.service.impl.DocumentEntryServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "bd5226223293702eac0d725c25c1009f52229f08", "Url": "https://api.github.com/repos/linagora/linshare-core", "Date": "2014-10-30T14:16:07Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (data.getParents(contexts).contains(subject)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/736/buggy-version/roles.src.main.java.org.cubeengine.module.roles.RolesUtil.java", "BodyUseAPI": [], "Fixed commit": "a5fedc06cffb03ec560861b38f239a891321c6d8", "Url": "https://api.github.com/repos/CubeEngine/modules-main", "Date": "2017-07-15T08:12:11Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (id >= (PrivateTweet.PRIVATE_TWEET_START_ID)) { table = PrivateTweet.PRIVATE_TWEET_TABLE_NAME; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/5082/buggy-version/app.controllers.Comment.java", "BodyUseAPI": [], "Fixed commit": "e3b34fa1623bc2cd35a78889b76ad2098bbf2d01", "Url": "https://api.github.com/repos/jiangecho/maopao_server", "Date": "2015-06-28T14:22:51Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (addCategoryHasQuiz(category.getId(), quizId)) { succes = true; }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/8908/buggy-version/src.dao.QuizDAO.java", "BodyUseAPI": [], "Fixed commit": "509a536efa8f364f6917d756027f7e70ccb6d57f", "Url": "https://api.github.com/repos/MartijnDevNull/storytime-backend", "Date": "2016-04-07T13:17:04Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (addAnswer(answer, questionId)) { succes = true; }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/8908/buggy-version/src.dao.QuizDAO.java", "BodyUseAPI": [], "Fixed commit": "509a536efa8f364f6917d756027f7e70ccb6d57f", "Url": "https://api.github.com/repos/MartijnDevNull/storytime-backend", "Date": "2016-04-07T13:17:04Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (succes = true) { for (model.quiz.Question question : quiz.getTheQuestions()) { statement.clearBatch(); questionId = addQuestion(question, quizId); if (questionId != 0) { for (model.quiz.Answer answer : question.getTheAnswers()) { statement.clearBatch(); if (addAnswer(answer, questionId)) { succes = true; }else { return false; } } } } }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/8908/buggy-version/src.dao.QuizDAO.java", "BodyUseAPI": [], "Fixed commit": "509a536efa8f364f6917d756027f7e70ccb6d57f", "Url": "https://api.github.com/repos/MartijnDevNull/storytime-backend", "Date": "2016-04-07T13:17:04Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["session.getSelectedCell().getField()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (col < 0) col = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/4035/buggy-version/src.client.panel.FormEntryPanel.java", "BodyUseAPI": [], "Fixed commit": "85006a902b24e144a6bd291b35e856f76f6325af", "Url": "https://api.github.com/repos/zaphinath/record-indexer", "Date": "2013-08-08T00:10:43Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JList.getSelectedIndex()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (row < 0) row = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/4035/buggy-version/src.client.panel.FormEntryPanel.java", "BodyUseAPI": [], "Fixed commit": "85006a902b24e144a6bd291b35e856f76f6325af", "Url": "https://api.github.com/repos/zaphinath/record-indexer", "Date": "2013-08-08T00:10:43Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (destinationName.startsWith(\".\")) { destinationName = destinationName.substring(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/6853/buggy-version/activemq-broker.src.main.java.org.apache.activemq.plugin.StatisticsBroker.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "4eb5097f22a1ca2a3901a343f4dbb1e4b5a45b4a", "Url": "https://api.github.com/repos/inventit/activemq", "Date": "2014-04-30T08:44:28Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getDamager()) instanceof org.bukkit.entity.Arrow) { org.bukkit.entity.Arrow arr = ((org.bukkit.entity.Arrow) (e.getDamager())); zombie.setTarget(((org.bukkit.entity.Player) (arr.getShooter()))); }else { zombie.setTarget(((org.bukkit.entity.LivingEntity) (e.getDamager()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/3581/buggy-version/src.fr.vraken.gameoftaupes.BossEvents.java", "BodyUseAPI": ["org.bukkit.entity.Zombie.setTarget(((org.bukkit.entity.LivingEntity) (e.getDamager())))", "org.bukkit.event.entity.EntityDamageByEntityEvent.getDamager()", "org.bukkit.event.entity.EntityDamageByEntityEvent.getDamager()"], "Fixed commit": "c6bd06989973ac5d53d01e47a7f509af8275d53f", "Url": "https://api.github.com/repos/Vraken/GameOfTaupes", "Date": "2017-10-22T16:54:36Z"},
{"Line": "=>462", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getDamager()) instanceof org.bukkit.entity.Arrow) { org.bukkit.entity.Arrow arr = ((org.bukkit.entity.Arrow) (e.getDamager())); spider.setTarget(((org.bukkit.entity.Player) (arr.getShooter()))); }else { spider.setTarget(((org.bukkit.entity.LivingEntity) (e.getDamager()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/3581/buggy-version/src.fr.vraken.gameoftaupes.BossEvents.java", "BodyUseAPI": ["org.bukkit.entity.Spider.setTarget(((org.bukkit.entity.LivingEntity) (e.getDamager())))", "org.bukkit.event.entity.EntityDamageByEntityEvent.getDamager()", "org.bukkit.event.entity.EntityDamageByEntityEvent.getDamager()"], "Fixed commit": "c6bd06989973ac5d53d01e47a7f509af8275d53f", "Url": "https://api.github.com/repos/Vraken/GameOfTaupes", "Date": "2017-10-22T16:54:36Z"},
{"Line": "=>393", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getDamager()) instanceof org.bukkit.entity.Arrow) { org.bukkit.entity.Arrow arr = ((org.bukkit.entity.Arrow) (e.getDamager())); zomb.setTarget(((org.bukkit.entity.Player) (arr.getShooter()))); }else { zomb.setTarget(((org.bukkit.entity.LivingEntity) (e.getDamager()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/3581/buggy-version/src.fr.vraken.gameoftaupes.BossEvents.java", "BodyUseAPI": ["org.bukkit.entity.Zombie.setTarget(((org.bukkit.entity.LivingEntity) (e.getDamager())))", "org.bukkit.event.entity.EntityDamageByEntityEvent.getDamager()", "org.bukkit.event.entity.EntityDamageByEntityEvent.getDamager()"], "Fixed commit": "c6bd06989973ac5d53d01e47a7f509af8275d53f", "Url": "https://api.github.com/repos/Vraken/GameOfTaupes", "Date": "2017-10-22T16:54:36Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getDamager()) instanceof org.bukkit.entity.Arrow) { org.bukkit.entity.Arrow arr = ((org.bukkit.entity.Arrow) (e.getDamager())); skel.setTarget(((org.bukkit.entity.Player) (arr.getShooter()))); }else { skel.setTarget(((org.bukkit.entity.LivingEntity) (e.getDamager()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/3581/buggy-version/src.fr.vraken.gameoftaupes.BossEvents.java", "BodyUseAPI": ["org.bukkit.entity.Skeleton.setTarget(((org.bukkit.entity.LivingEntity) (e.getDamager())))", "org.bukkit.event.entity.EntityDamageByEntityEvent.getDamager()", "org.bukkit.event.entity.EntityDamageByEntityEvent.getDamager()"], "Fixed commit": "c6bd06989973ac5d53d01e47a7f509af8275d53f", "Url": "https://api.github.com/repos/Vraken/GameOfTaupes", "Date": "2017-10-22T16:54:36Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getDamager()) instanceof org.bukkit.entity.Arrow) { org.bukkit.entity.Arrow arr = ((org.bukkit.entity.Arrow) (e.getDamager())); creeper.setTarget(((org.bukkit.entity.Player) (arr.getShooter()))); }else { creeper.setTarget(((org.bukkit.entity.LivingEntity) (e.getDamager()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/3581/buggy-version/src.fr.vraken.gameoftaupes.BossEvents.java", "BodyUseAPI": ["org.bukkit.event.entity.EntityDamageByEntityEvent.getDamager()", "org.bukkit.entity.Creeper.setTarget(((org.bukkit.entity.LivingEntity) (e.getDamager())))", "org.bukkit.event.entity.EntityDamageByEntityEvent.getDamager()"], "Fixed commit": "c6bd06989973ac5d53d01e47a7f509af8275d53f", "Url": "https://api.github.com/repos/Vraken/GameOfTaupes", "Date": "2017-10-22T16:54:36Z"},
{"Line": "=>795", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(entityType.substring(((entityType.length()) - 1)).equals(\"s\"))) { entityType += \"s\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/440/buggy-version/source.src.main.java.com.apigee.sdk.data.client.DataClient.java", "BodyUseAPI": [], "Fixed commit": "61ac41be8ac319b2e4c3eab044302102cbdbd2c6", "Url": "https://api.github.com/repos/apigee/apigee-android-sdk", "Date": "2014-06-16T21:45:38Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(deflater.needsInput())) { deflateData(); if (!(deflater.needsInput())) { return 0; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/7666/buggy-version/core.src.main.java.io.undertow.conduits.DeflatingStreamSinkConduit.java", "BodyUseAPI": ["java.util.zip.Deflater.needsInput()"], "Fixed commit": "35b828b257bed2f0b3533630163b32f9e51c9de0", "Url": "https://api.github.com/repos/undertow-io/undertow", "Date": "2014-04-28T18:21:39Z"},
{"Line": "=>4008", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lb.isArg) lb.idx -= 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/7400/buggy-version/src.jvm.clojure.lang.Compiler.java", "BodyUseAPI": [], "Fixed commit": "9bfe67e01ef26bcbc6f5d6fbe9be203d82a635c2", "Url": "https://api.github.com/repos/MichaelBlume/clojure", "Date": "2015-08-31T04:27:39Z"},
{"Line": "=>587", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((clientId != null) && (!(clientId.isEmpty()))) { if ((rightArguments.size()) == (rightMethod.getParameterAnnotations().length)) { rightArguments.remove(((rightArguments.size()) - 1)); } rightArguments.add(new java.lang.String(clientId)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/7660/buggy-version/src.it.polito.elite.dog.communication.websocket.WebSocketConnection.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "64056ef7f50ae956ea80b2952f9e834f3fac80df", "Url": "https://api.github.com/repos/dog-gateway/websocket-connector", "Date": "2014-10-17T14:12:52Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((syslogng.getCertificatePassword()) != null) { updateStatement.bindString(5, syslogng.getCertificatePassword()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/2149/buggy-version/src.com.mobile.syslogng.monitor.SQLiteManager.java", "BodyUseAPI": ["android.database.sqlite.SQLiteStatement.bindString(int,syslogng.getCertificatePassword())", "com.mobile.syslogng.monitor.Syslogng.getCertificatePassword()"], "Fixed commit": "bee8f2671697f73d88f75708ce835d3f17388dc2", "Url": "https://api.github.com/repos/krishnakannan/Syslog-ng-Monitor-Android", "Date": "2015-07-18T12:38:34Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((syslogng.getCertificatePassword()) != null) { insertStatement.bindString(5, syslogng.getCertificatePassword()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/2149/buggy-version/src.com.mobile.syslogng.monitor.SQLiteManager.java", "BodyUseAPI": ["android.database.sqlite.SQLiteStatement.bindString(int,syslogng.getCertificatePassword())", "com.mobile.syslogng.monitor.Syslogng.getCertificatePassword()"], "Fixed commit": "bee8f2671697f73d88f75708ce835d3f17388dc2", "Url": "https://api.github.com/repos/krishnakannan/Syslog-ng-Monitor-Android", "Date": "2015-07-18T12:38:34Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((syslogng.getCertificateFileName()) != null) { insertStatement.bindString(4, syslogng.getCertificateFileName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/2149/buggy-version/src.com.mobile.syslogng.monitor.SQLiteManager.java", "BodyUseAPI": ["android.database.sqlite.SQLiteStatement.bindString(int,syslogng.getCertificateFileName())", "com.mobile.syslogng.monitor.Syslogng.getCertificateFileName()"], "Fixed commit": "bee8f2671697f73d88f75708ce835d3f17388dc2", "Url": "https://api.github.com/repos/krishnakannan/Syslog-ng-Monitor-Android", "Date": "2015-07-18T12:38:34Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((syslogng.getCertificateFileName()) != null) { updateStatement.bindString(4, syslogng.getCertificateFileName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/2149/buggy-version/src.com.mobile.syslogng.monitor.SQLiteManager.java", "BodyUseAPI": ["com.mobile.syslogng.monitor.Syslogng.getCertificateFileName()", "android.database.sqlite.SQLiteStatement.bindString(int,syslogng.getCertificateFileName())"], "Fixed commit": "bee8f2671697f73d88f75708ce835d3f17388dc2", "Url": "https://api.github.com/repos/krishnakannan/Syslog-ng-Monitor-Android", "Date": "2015-07-18T12:38:34Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.byteshaft.shout.AppGlobals.getSongStatus()) { textView.setText(\"Playing\"); }else { textView.setText(\"Stopped\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/5779/buggy-version/app.src.main.java.com.byteshaft.shout.Player.java", "BodyUseAPI": [], "Fixed commit": "2c6eaab9838dbf10c24bea4d138ed985d0df1ef7", "Url": "https://api.github.com/repos/s9iper1/Radio", "Date": "2016-05-09T06:37:50Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((min != null) && (min instanceof java.lang.String)) { newMin = tryCovert2Date(min.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/2605/buggy-version/jdbc.src.main.java.org.boreas.spring.jdbc.query.oracle.OracleCondition.java", "BodyUseAPI": ["java.lang.Object.toString()", "org.boreas.spring.jdbc.query.oracle.OracleCondition.tryCovert2Date(java.lang.String)"], "Fixed commit": "7e534abd8b899017bcfce7daaa4f9e88ca6b5d2a", "Url": "https://api.github.com/repos/Boreas-y/xspring_jdbc", "Date": "2015-03-13T06:31:03Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (args != null) { for (java.lang.Object arg : args) if (arg == null) return query; setValue(condition, args); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/2605/buggy-version/jdbc.src.main.java.org.boreas.spring.jdbc.query.AbstractCondition.java", "BodyUseAPI": ["org.boreas.spring.jdbc.query.AbstractCondition.setValue(java.lang.String,java.lang.Object[])"], "Fixed commit": "7e534abd8b899017bcfce7daaa4f9e88ca6b5d2a", "Url": "https://api.github.com/repos/Boreas-y/xspring_jdbc", "Date": "2015-03-13T06:31:03Z"},
{"Line": "=>552", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (DateField.TYPE.equalsIgnoreCase(rs.getString(\"TYPE_NAME\"))) { dataType = java.sql.Types.DATE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/8354/buggy-version/mydb.mydb-war.src.main.java.com.silverpeas.mydb.control.MyDBSessionController.java", "BodyUseAPI": [], "Fixed commit": "689e3af9e4ba03a984b5bcc1cd1b6bdf4cb8faef", "Url": "https://api.github.com/repos/mmoqui/Silverpeas-Components", "Date": "2015-04-22T09:28:52Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (existingVersionObject == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/5744/buggy-version/components.vocabularies.api.src.main.java.org.phenotips.vocabulary.listeners.PatientVocabularyVersionRecorder.java", "BodyUseAPI": [], "Fixed commit": "a6fd3ece9e0c29a95bbe057c4476ff31303f8b40", "Url": "https://api.github.com/repos/phenotips/phenotips", "Date": "2016-10-16T00:43:55Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) != null) { ((org.openlmis.core.view.activity.BaseActivity) (getActivity())).hideImm(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/8709/buggy-version/app.src.main.java.org.openlmis.core.view.fragment.MMIARequisitionFragment.java", "BodyUseAPI": [], "Fixed commit": "a2d71332992cbb137030411ae9c75e3bbf3ab9ed", "Url": "https://api.github.com/repos/SIGLUS/lmis-moz-mobile", "Date": "2015-12-16T08:21:39Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) != null) { ((org.openlmis.core.view.activity.BaseActivity) (getActivity())).hideImm(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/8709/buggy-version/app.src.main.java.org.openlmis.core.view.fragment.VIARequisitionFragment.java", "BodyUseAPI": [], "Fixed commit": "a2d71332992cbb137030411ae9c75e3bbf3ab9ed", "Url": "https://api.github.com/repos/SIGLUS/lmis-moz-mobile", "Date": "2015-12-16T08:21:39Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type instanceof soot.jimple.spark.internal.ArrayType) { soot.jimple.spark.internal.ArrayType at = ((soot.jimple.spark.internal.ArrayType) (type)); type = at.getArrayElementType(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/1641/buggy-version/src.soot.jimple.spark.internal.TypeManager.java", "BodyUseAPI": [], "Fixed commit": "f1c038845d43fe0a74e57544957925ae0bc2236c", "Url": "https://api.github.com/repos/malaverdiere/soot", "Date": "2012-08-16T15:56:01Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (subjectToMatch.startsWith(OCommandExecutorSQLAbstract.DICTIONARY_PREFIX)) { final java.lang.String key = originalSubjectName.substring(OCommandExecutorSQLAbstract.DICTIONARY_PREFIX.length()); targetRecords = new java.util.ArrayList<com.orientechnologies.orient.core.db.record.OIdentifiable>(); final com.orientechnologies.orient.core.db.record.OIdentifiable value = ODatabaseRecordThreadLocal.INSTANCE.get().getDictionary().get(key); if (value != null) ((java.util.List<com.orientechnologies.orient.core.db.record.OIdentifiable>) (targetRecords)).add(value); }else { if (subjectToMatch.startsWith(OCommandExecutorSQLAbstract.CLASS_PREFIX)) subjectName = subjectName.substring(OCommandExecutorSQLAbstract.CLASS_PREFIX.length()); if ((targetClasses) == null) targetClasses = new java.util.HashMap<com.orientechnologies.orient.core.metadata.schema.OClass, java.lang.String>(); final com.orientechnologies.orient.core.metadata.schema.OClass cls = ODatabaseRecordThreadLocal.INSTANCE.get().getMetadata().getSchema().getClass(subjectName); if (cls == null) throw new com.orientechnologies.orient.core.exception.OCommandExecutionException(((\"Class '\" + subjectName) + \"' was not found in current database\")); targetClasses.put(cls, alias); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/5031/buggy-version/core.src.main.java.com.orientechnologies.orient.core.sql.filter.OSQLTarget.java", "BodyUseAPI": ["java.lang.String.startsWith(OCommandExecutorSQLAbstract.CLASS_PREFIX)"], "Fixed commit": "b3a2a45b3cc39eff5d5a7afe434500df5d943fbb", "Url": "https://api.github.com/repos/logart/orientdb", "Date": "2013-01-02T19:26:59Z"},
{"Line": "=>397", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mt.getReturnType()) == null) { returnType = mirror.type().getClassName(); }else { returnType = mt.getReturnType().toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/6112/buggy-version/src.ca.weblite.mirah.ant.JavaToMirahMirror.java", "BodyUseAPI": ["com.sun.source.tree.MethodTree.getReturnType()", "com.sun.source.tree.Tree.toString()"], "Fixed commit": "994be15ea3fe5ff39007520112adb2d9fd3cf386", "Url": "https://api.github.com/repos/shannah/mirah-ant", "Date": "2014-08-14T15:29:48Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpSession.getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(deployment.getRealm().equals(account.getKeycloakSecurityContext().getDeployment().getRealm()))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/6910/buggy-version/integration.undertow.src.main.java.org.keycloak.adapters.undertow.ServletRequestAuthenticator.java", "BodyUseAPI": [], "Fixed commit": "bdc2af22d50746511f52e292d442b8e3b30945b6", "Url": "https://api.github.com/repos/jpkrohling/keycloak", "Date": "2014-10-23T14:50:57Z"},
{"Line": "=>1157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (decl instanceof com.redhat.ceylon.compiler.typechecker.model.FunctionalParameter) { type = getTypeForParameter(((com.redhat.ceylon.compiler.typechecker.model.Parameter) (decl)), false, java.util.Collections.<com.redhat.ceylon.compiler.typechecker.model.ProducedType>emptyList()); }else { type = decl.getType(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/3843/buggy-version/src.com.redhat.ceylon.compiler.java.codegen.AbstractTransformer.java", "BodyUseAPI": ["com.redhat.ceylon.compiler.typechecker.model.TypedDeclaration.getType()"], "Fixed commit": "90a05fdd3531c20b44abcb9535151595f5ea6ae9", "Url": "https://api.github.com/repos/ceylon/ceylon-compiler", "Date": "2012-03-29T08:34:39Z"},
{"Line": "=>678", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.opensourcephysics.tools.FunctionEditor.getObject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (obj instanceof org.opensourcephysics.tools.UserFunction) { org.opensourcephysics.tools.UserFunction func = ((org.opensourcephysics.tools.UserFunction) (obj)); java.lang.String[] functionNames = func.getFunctionNames(); for (java.lang.String s : functionNames) { eqn = eqn.replaceAll(s, \"#\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/7007/buggy-version/src.org.opensourcephysics.tools.FunctionEditor.java", "BodyUseAPI": [], "Fixed commit": "835ec328912c74c1b429a53269d2b262c98c9975", "Url": "https://api.github.com/repos/OpenSourcePhysics/osp", "Date": "2015-12-10T17:10:05Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.archive) == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/2319/buggy-version/src.main.java.com.bergerkiller.bukkit.common.map.archive.MapResourcePackAutoArchive.java", "BodyUseAPI": [], "Fixed commit": "ae35bd342bc763c3470162b2c492e52193eea6e8", "Url": "https://api.github.com/repos/bergerhealer/BKCommonLib", "Date": "2017-11-10T00:14:56Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.archive) != null) { this.archive.load(lazy); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/2319/buggy-version/src.main.java.com.bergerkiller.bukkit.common.map.archive.MapResourcePackAutoArchive.java", "BodyUseAPI": [], "Fixed commit": "ae35bd342bc763c3470162b2c492e52193eea6e8", "Url": "https://api.github.com/repos/bergerhealer/BKCommonLib", "Date": "2017-11-10T00:14:56Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (wasShuffling) { queue.shuffle(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/8788/buggy-version/src.com.lithiumli.fiction.LibraryActivity.java", "BodyUseAPI": [], "Fixed commit": "226f8ebfcab082ba68e90c4d563fe90a4f565b29", "Url": "https://api.github.com/repos/lidavidm/fiction", "Date": "2013-06-02T16:55:54Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.lithiumli.fiction.PlaybackService.getQueue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (queue.isShuffling()) { queue.restoreShuffle(); wasShuffling = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/8788/buggy-version/src.com.lithiumli.fiction.LibraryActivity.java", "BodyUseAPI": ["com.lithiumli.fiction.PlaybackQueue.restoreShuffle()"], "Fixed commit": "226f8ebfcab082ba68e90c4d563fe90a4f565b29", "Url": "https://api.github.com/repos/lidavidm/fiction", "Date": "2013-06-02T16:55:54Z"},
{"Line": "=>362", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((charPos > 0) && ((string.charAt((charPos - 1))) == '\\\\')) { singleQuoteOn = !singleQuoteOn; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/1659/buggy-version/src.main.java.cz.startnet.utils.pgdiff.parsers.Parser.java", "BodyUseAPI": [], "Fixed commit": "2a87e6cbb0be632cfc8320b8e20cdce2e8359ce7", "Url": "https://api.github.com/repos/plumqqz/apgdiff", "Date": "2012-09-22T18:39:19Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(file.createNewFile())) { throw new java.io.IOException(((\"File \" + (filename.toString())) + \" could not be created\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/7044/buggy-version/src.main.java.org.yj.smtpstub.storage.FSMailStore.java", "BodyUseAPI": [], "Fixed commit": "1dc465b37837b5732829034809d5209a209a3eeb", "Url": "https://api.github.com/repos/TriYop/SMTPStub", "Date": "2017-03-16T17:50:55Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isEarlyInsert()) { getSession().getPersistenceContext().getNaturalIdHelper().manageLocalNaturalIdCrossReference(getPersister(), id, state, null, CachedNaturalIdValueSource.INSERT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/2985/buggy-version/hibernate-core.src.main.java.org.hibernate.action.internal.AbstractEntityInsertAction.java", "BodyUseAPI": [], "Fixed commit": "8d14946f9fd4713c590fffd60896989b0d0e0630", "Url": "https://api.github.com/repos/brmeyer/hibernate-orm", "Date": "2012-05-09T14:42:39Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (id != null) { handleNaturalIdPreSaveNotifications(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/2985/buggy-version/hibernate-core.src.main.java.org.hibernate.action.internal.AbstractEntityInsertAction.java", "BodyUseAPI": [], "Fixed commit": "8d14946f9fd4713c590fffd60896989b0d0e0630", "Url": "https://api.github.com/repos/brmeyer/hibernate-orm", "Date": "2012-05-09T14:42:39Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((connection) != null) connection.send(new Project.EventMessage(vectorClock, mte));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/6765/buggy-version/src.Project.EventReplayer.java", "BodyUseAPI": [], "Fixed commit": "6cd88a7bd24b7a3fce5ce5e1469306e89b357557", "Url": "https://api.github.com/repos/simonpurup/dDist", "Date": "2017-04-27T11:33:38Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((config) == null) { saveDefaultConfig(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/994/buggy-version/src.main.java.me.jaime29010.crc.Main.java", "BodyUseAPI": [], "Fixed commit": "9325eb43f0754c9d016fa84aa2ad9bb97fef9b84", "Url": "https://api.github.com/repos/jamezrin/CustomRepairCost", "Date": "2016-12-31T10:58:55Z"},
{"Line": "=>317", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == (index)) { throw new java.io.IOException(\"The reading of one header initiates an infinite loop\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/4537/buggy-version/modules.org.restlet.src.org.restlet.engine.header.HeaderReader.java", "BodyUseAPI": [], "Fixed commit": "610c4bbad87af05da8ebd7581f64c8fb3d2388a7", "Url": "https://api.github.com/repos/restlet/restlet-framework-java", "Date": "2012-12-21T11:57:45Z"},
{"Line": "=>476", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.ucsc.barrel.cdf_gen.FrameHolder.getFrame(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (frame != null) { frame.setQualityFlag(QualityFlags.FILLED_TIME); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/6456/buggy-version/src.edu.ucsc.barrel.cdf_gen.ExtractTiming.java", "BodyUseAPI": ["edu.ucsc.barrel.cdf_gen.BarrelFrame.setQualityFlag(QualityFlags.FILLED_TIME)"], "Fixed commit": "97b049dfdbf74eded1462caf70e1394d84b1d788", "Url": "https://api.github.com/repos/wrexroad/barrel-cdf-generator", "Date": "2015-08-07T20:17:58Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((valueAsList.size()) == 1) { ((java.util.Map) (value)).putAll(((java.util.Map) (valueAsList.get(0)))); }else { ((java.util.Map) (value)).put(key, valueAsList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/6058/buggy-version/liquibase-core.src.main.java.liquibase.serializer.core.yaml.YamlSerializer.java", "BodyUseAPI": ["java.lang.Object.putAll(java.lang.Object)", "java.lang.Object.put(java.lang.Object,java.util.List)", "java.util.List.get(int)"], "Fixed commit": "888a46de70578ad5a108210394b80228047bc3f8", "Url": "https://api.github.com/repos/riyvitxgt/liquibase", "Date": "2016-04-08T08:00:43Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (seed == null) { throw new java.lang.IllegalArgumentException(\"Seed must not be null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/3461/buggy-version/betterrandom.src.main.java.io.github.pr0methean.betterrandom.prng.RandomWrapper.java", "BodyUseAPI": [], "Fixed commit": "4c8daf19e6a1d2243951194cd977f16950cf5ad2", "Url": "https://api.github.com/repos/Pr0methean/BetterRandom", "Date": "2017-09-29T01:57:19Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.world.World.getBlockTileEntity(int,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((((te.timer) == 0) && (!(te.hasEndItem))) && (te.hasJewel)) && (te.hasModifier)) te.timer = darkknight.jewelrycraft.config.ConfigHandler.jewelryCraftingTime;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/1647/buggy-version/common.darkknight.jewelrycraft.block.BlockJewelrsCraftingTable.java", "BodyUseAPI": [], "Fixed commit": "6e9f023d2a5d272640149c85a36c7aa05845a984", "Url": "https://api.github.com/repos/sor1n/Modjam-Mod", "Date": "2013-12-21T19:13:44Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((byteBufferOutputStream) != null) { this.byteBufferOutputStream.flushContent(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/1861/buggy-version/components.src.main.java.org.wso2.carbon.messaging.CarbonMessage.java", "BodyUseAPI": [], "Fixed commit": "eb7e91c53447b9e10e6e014e5433ecc56ee287ef", "Url": "https://api.github.com/repos/isururanawaka/carbon-messaging", "Date": "2016-06-10T18:52:49Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.mifosplatform.accounting.closure.bookoffincomeandexpense.service.CalculateIncomeAndExpenseBookingImpl.bookOffIncomeAndExpense(java.util.List<org.mifosplatform.accounting.closure.bookoffincomeandexpense.data.IncomeAndExpenseJournalEntryData>,org.mifosplatform.accounting.closure.command.GLClosureCommand,boolean,org.mifosplatform.accounting.glaccount.domain.GLAccount,org.mifosplatform.organisation.office.domain.Office)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((incomeAndExpBookingData.getJournalEntries().size()) > 0) { incomeAndExpenseBookingCollection.add(incomeAndExpBookingData); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/5830/buggy-version/mifosng-provider.src.main.java.org.mifosplatform.accounting.closure.bookoffincomeandexpense.service.CalculateIncomeAndExpenseBookingImpl.java", "BodyUseAPI": ["java.util.Collection<org.mifosplatform.accounting.closure.bookoffincomeandexpense.data.IncomeAndExpenseBookingData>.add(org.mifosplatform.accounting.closure.bookoffincomeandexpense.data.IncomeAndExpenseBookingData)"], "Fixed commit": "b1d46765f4f0515ea95be691209d6a71fbfa1869", "Url": "https://api.github.com/repos/Musoni/mifosx", "Date": "2016-03-29T11:26:40Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ashley.core.Entity.remove(java.lang.Class<? extends ashley.core.Component>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (component != null) { com.badlogic.gdx.utils.Pools.free(component); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/3817/buggy-version/engine.core.src.main.java.es.eucm.ead.engine.entities.EngineEntity.java", "BodyUseAPI": ["com.badlogic.gdx.utils.Pools.free(ashley.core.Component)"], "Fixed commit": "dff5e3fb6889f76984c204c69571ab36267303a5", "Url": "https://api.github.com/repos/e-ucm/ead", "Date": "2014-06-10T10:42:45Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sakaiproject.gradebookng.business.GradebookNgBusinessService.saveGrade(java.lang.Long,java.lang.String,java.lang.String,java.lang.String,params.get(\"comment\").asText())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (result.equals(GradeSaveResponse.NO_CHANGE)) { return new org.sakaiproject.gradebookng.tool.actions.GradeUpdateAction.SaveGradeNoChangeResponse(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/2112/buggy-version/gradebookng.tool.src.java.org.sakaiproject.gradebookng.tool.actions.GradeUpdateAction.java", "BodyUseAPI": [], "Fixed commit": "139340ac361bdf4a8e7e5e02fa2e4270542d425d", "Url": "https://api.github.com/repos/marktriggs/sakai", "Date": "2016-04-28T22:15:53Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fm.jiecao.jcvideoplayer_lib.JCUtils.getAppCompActivity(getContext()).getWindow().getAttributes()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((lp.screenBrightness) < 0) { try { mGestureDownBrightness = Settings.System.getInt(getContext().getContentResolver(), Settings.System.SCREEN_BRIGHTNESS); android.util.Log.i(fm.jiecao.jcvideoplayer_lib.JCVideoPlayer.TAG, (\"current system brightness: \" + (mGestureDownBrightness))); } catch (android.provider.Settings e) { e.printStackTrace(); } }else { mGestureDownBrightness = (lp.screenBrightness) * 255; android.util.Log.i(fm.jiecao.jcvideoplayer_lib.JCVideoPlayer.TAG, (\"current activity brightness: \" + (mGestureDownBrightness))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/6727/buggy-version/jcvideoplayer-lib.src.main.java.fm.jiecao.jcvideoplayer_lib.JCVideoPlayer.java", "BodyUseAPI": [], "Fixed commit": "f2a0b3d39677ca9d243f8cf9aece65c39de1478d", "Url": "https://api.github.com/repos/lipangit/JiaoZiVideoPlayer", "Date": "2017-05-02T14:39:46Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (eFactor == 1.0F) map.put(dim, component); else { float newExponent = eFactor * (component.exponent()); if (newExponent != 0.0F) map.put(dim, new com.madphysicist.monada.DimensionComponent(dim, newExponent)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/2059/buggy-version/src.main.java.com.madphysicist.monada.Dimension.java", "BodyUseAPI": [], "Fixed commit": "109a32fe566ff000c5d302d75fc45a5470638aef", "Url": "https://api.github.com/repos/madphysicist/Monada", "Date": "2014-09-01T06:22:39Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasEuros) balanceArray[2] = java.lang.Double.parseDouble(EURBalance); else balanceArray[2] = -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/4472/buggy-version/src.com.mtgox.api.MtGox.java", "BodyUseAPI": [], "Fixed commit": "39a70b2803c4d318f452c6bc173be13a210a3cc0", "Url": "https://api.github.com/repos/adv0r/mtgox-api-v2-java", "Date": "2013-05-03T08:07:50Z"},
{"Line": "=>273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasDollars) balanceArray[1] = java.lang.Double.parseDouble(USDBalance); else balanceArray[1] = -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/4472/buggy-version/src.com.mtgox.api.MtGox.java", "BodyUseAPI": [], "Fixed commit": "39a70b2803c4d318f452c6bc173be13a210a3cc0", "Url": "https://api.github.com/repos/adv0r/mtgox-api-v2-java", "Date": "2013-05-03T08:07:50Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (k > 0) { double x = 1.0 - ((lodThreshold - (lod[(k - 1)])) / ((lod[k]) - (lod[(k - 1)]))); power = x * (p[(k - 1)]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/6923/buggy-version/src.org.broadinstitute.cga.tools.gatk.walkers.cancer.mutect.NormalPowerCalculator.java", "BodyUseAPI": [], "Fixed commit": "0dac967aa571c2a2c0726a8e930bb0f7706087c6", "Url": "https://api.github.com/repos/broadinstitute/mutect", "Date": "2011-12-21T18:54:38Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (src.contains(\"/\")) { path = src.substring(0, src.lastIndexOf('/')); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/722/buggy-version/dspace-xmlui.src.main.java.org.dspace.app.xmlui.cocoon.ConcatenationReader.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.lastIndexOf(char)"], "Fixed commit": "db9a1ecba4cf352a045e6d5113c460cb899dc8ac", "Url": "https://api.github.com/repos/rivaldi8/DSpace", "Date": "2015-02-20T16:45:43Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(path.isEmpty())) fullPath = (path + \"/\") + f; else fullPath = f;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/722/buggy-version/dspace-xmlui.src.main.java.org.dspace.app.xmlui.cocoon.ConcatenationReader.java", "BodyUseAPI": [], "Fixed commit": "db9a1ecba4cf352a045e6d5113c460cb899dc8ac", "Url": "https://api.github.com/repos/rivaldi8/DSpace", "Date": "2015-02-20T16:45:43Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.dspace.app.xmlui.cocoon.SourceResolver.resolveURI(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (inSource.exists()) { this.inputSources.add(inSource); }else throw new org.apache.cocoon.ResourceNotFoundException(((\"Resource not found (\" + fullPath) + \")\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/722/buggy-version/dspace-xmlui.src.main.java.org.dspace.app.xmlui.cocoon.ConcatenationReader.java", "BodyUseAPI": ["java.util.List<org.apache.excalibur.source.Source>.add(org.apache.excalibur.source.Source)"], "Fixed commit": "db9a1ecba4cf352a045e6d5113c460cb899dc8ac", "Url": "https://api.github.com/repos/rivaldi8/DSpace", "Date": "2015-02-20T16:45:43Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(inputTokens.hasMoreTokens())) { return new gr.kzps.id2212.marketplace.client.Commands.UnknownCommand(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/2991/buggy-version/homework1.src.main.java.gr.kzps.id2212.marketplace.client.Parser.java", "BodyUseAPI": [], "Fixed commit": "ca70beae5543c5313778e003e707f0fadfcd7c25", "Url": "https://api.github.com/repos/kouzant/ID2212", "Date": "2015-11-18T19:31:21Z"},
{"Line": "=>844", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.swagger.parser.util.ObjectNode.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (exampleNode.isValueNode()) { model.setExample(exampleNode.asText()); }else { model.setExample(exampleNode.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/4136/buggy-version/modules.swagger-parser.src.main.java.io.swagger.parser.util.SwaggerDeserializer.java", "BodyUseAPI": ["io.swagger.parser.util.Model.setExample(exampleNode.asText())", "com.fasterxml.jackson.databind.JsonNode.toString()", "io.swagger.parser.util.Model.setExample(exampleNode.toString())", "com.fasterxml.jackson.databind.JsonNode.asText()"], "Fixed commit": "50f80982b87eb5c888ad44aed34db297b84fa7cb", "Url": "https://api.github.com/repos/swagger-api/swagger-parser", "Date": "2017-11-14T04:38:19Z"},
{"Line": "=>655", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.gradugation.DbHelper.getRow(int,java.lang.String[])"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((gameList.size()) > 0) { currentCharacter = java.lang.Integer.valueOf(((java.lang.String) (gameList.get(3)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/2843/buggy-version/src.com.gradugation.MainGameScreen.java", "BodyUseAPI": ["java.util.ArrayList.get(int)", "java.lang.Integer.valueOf(java.lang.Object)"], "Fixed commit": "21756099e68ed7244711e8c349ab4fc2b4fbc5d5", "Url": "https://api.github.com/repos/tash1207/Gradugation", "Date": "2013-11-19T03:46:15Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Set<java.util.Map.Entry<java.lang.String, java.lang.Object>>.iterator()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (entries.hasNext()) { stringBuilder.append(\",\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/5142/buggy-version/spring-session-neo4j.src.main.java.org.springframework.session.neo4j.OgmSessionRepository.java", "BodyUseAPI": [], "Fixed commit": "7f185d10bf96f2cb1dea337d70c8852046f8c786", "Url": "https://api.github.com/repos/espiegelberg/spring-session", "Date": "2017-06-25T22:17:47Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bestResult == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/2372/buggy-version/src.org.metawatch.manager.LocationFinder.java", "BodyUseAPI": [], "Fixed commit": "34bc99a96b9f6ea50f5f8d2d68fa7024a05110bc", "Url": "https://api.github.com/repos/grueni75/MWM-for-Android", "Date": "2014-10-01T07:02:45Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (target == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/8236/buggy-version/app.src.main.java.com.stedi.gyrshot.layers.TargetsPointerLayer.java", "BodyUseAPI": [], "Fixed commit": "8f1bc16cfdf495fc082b5c1f14effcef4b478b9a", "Url": "https://api.github.com/repos/stedi-akk/Gyrshot", "Date": "2017-02-04T13:29:06Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (canvas == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/8236/buggy-version/app.src.main.java.com.stedi.gyrshot.layers.LayersView.java", "BodyUseAPI": [], "Fixed commit": "8f1bc16cfdf495fc082b5c1f14effcef4b478b9a", "Url": "https://api.github.com/repos/stedi-akk/Gyrshot", "Date": "2017-02-04T13:29:06Z"},
{"Line": "=>348", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Stack<loop.Context>.peek()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((!(context.thisFunction.patternMatching)) && ((context.thisFunction.children().size()) > 1)) { for (int i = 1; i < (context.thisFunction.children().size()); i++) { methodVisitor.visitInsn(loop.POP); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/3475/buggy-version/src.loop.AsmCodeEmitter.java", "BodyUseAPI": ["context.thisFunction.children()", "context.thisFunction.children().size()"], "Fixed commit": "ce29fc43cdbfc557b4cfcfa7139de01e557f3d28", "Url": "https://api.github.com/repos/dhanji/loop", "Date": "2012-08-19T06:47:59Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args.length) < 2) { sender.sendMessage(((((org.bukkit.ChatColor.GREEN) + \"[Emotes]\") + (org.bukkit.ChatColor.RED)) + \" Improper format, use /emotes help.\")); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/5980/buggy-version/src.main.java.apdevteam.APEmotes.APEmotes.java", "BodyUseAPI": [], "Fixed commit": "c4e2b18959f562dd688d237c2c58d80bf1b1bf51", "Url": "https://api.github.com/repos/APDevTeam/APEmotes", "Date": "2017-07-29T15:26:44Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jshaw.greeknetwork.GreekHelper.getNumber(android.database.Cursor)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (number != null) { sms.sendTextMessage(number, null, m, pi, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/2529/buggy-version/GreekNetwork.src.com.jshaw.greeknetwork.CreateMemberActivity.java", "BodyUseAPI": ["android.telephony.SmsManager.sendTextMessage(java.lang.String,<nulltype>,java.lang.String,android.app.PendingIntent,<nulltype>)"], "Fixed commit": "4664b5d80b97802067b3f5f1638f642f276e16ab", "Url": "https://api.github.com/repos/jshaw-mines/greeknetwork", "Date": "2012-12-10T05:50:58Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (check365(startTime.toLocalDate())) { Auction tempAuction = new Auction(myNPOName, super.getUserName(), startTime, endTime); if (theCalendar.addAuction(tempAuction)) { java.lang.System.out.println(\"Auction added!\"); myAuction = tempAuction; }else java.lang.System.out.println(\"There was an error adding your auction.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/746/buggy-version/NonProfit.java", "BodyUseAPI": [], "Fixed commit": "9d778fd06f5e551aaae469e8444bf1bb73f8d11c", "Url": "https://api.github.com/repos/TCSS360group5/AuctionCentral", "Date": "2015-11-17T05:12:07Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (position == 0) { holder.costumes.setText((((context.getResources().getString(R.string.number_of_backgrounds)) + \" \") + (sprite.getCostumeDataList().size()))); }else { holder.costumes.setText((((context.getResources().getString(R.string.number_of_costumes)) + \" \") + (sprite.getCostumeDataList().size()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/3044/buggy-version/catroid.src.at.tugraz.ist.catroid.ui.adapter.SpriteAdapter.java", "BodyUseAPI": [], "Fixed commit": "6faad3207f8dd8f46d6e06629294b3c1fcd0b24b", "Url": "https://api.github.com/repos/Catrobat/Catroid", "Date": "2012-05-08T10:45:39Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (s == (-1)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/4370/buggy-version/src.main.java.io.mauth.fakefood.services.MailReaderService.java", "BodyUseAPI": [], "Fixed commit": "9b78bf589239d692ded416334687c7530449b82f", "Url": "https://api.github.com/repos/r-a-x/FakeFoodJava", "Date": "2017-12-08T03:29:16Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.mauth.fakefood.services.MailReaderService.getAndroidId(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (androidId == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/4370/buggy-version/src.main.java.io.mauth.fakefood.services.MailReaderService.java", "BodyUseAPI": [], "Fixed commit": "9b78bf589239d692ded416334687c7530449b82f", "Url": "https://api.github.com/repos/r-a-x/FakeFoodJava", "Date": "2017-12-08T03:29:16Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((configuration.global) == null) { throw new java.lang.IllegalStateException(\"Configuration does not have global configuration defined.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/3853/buggy-version/cassandra-diagnostics-core.src.main.java.io.smartcat.cassandra.diagnostics.DiagnosticsProcessor.java", "BodyUseAPI": [], "Fixed commit": "27a0eef358f451949f71474ebf1bdc98efc3e669", "Url": "https://api.github.com/repos/smartcat-labs/cassandra-diagnostics", "Date": "2017-04-13T22:28:19Z"},
{"Line": "=>328", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.cytoscape.view.model.CyNetworkView.getModel()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (targetNetwork.containsEdge(edge)) { newEdge = targetNetwork.addEdge(newNodeMap.get(sourceNode), newNodeMap.get(targetNode), edge.isDirected()); }else { targetNetwork.addEdge(edge); newEdge = edge; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/9042/buggy-version/editor-impl.src.main.java.org.cytoscape.editor.internal.ClipboardImpl.java", "BodyUseAPI": ["org.cytoscape.model.subnetwork.CySubNetwork.addEdge(org.cytoscape.model.CyEdge)", "org.cytoscape.model.subnetwork.CySubNetwork.addEdge(newNodeMap.get(sourceNode),newNodeMap.get(targetNode),edge.isDirected())", "org.cytoscape.model.CyEdge.isDirected()"], "Fixed commit": "0eacb016569d62c583d02afdee2c8e9a2e3efb1c", "Url": "https://api.github.com/repos/cytoscape/cytoscape-impl", "Date": "2014-04-24T17:34:26Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Scanner.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (var4.equals(\"5\")) { break; }else { java.lang.System.out.println(\"Redigite a op\u00e7\u00e3o!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/8036/buggy-version/Fachada.java", "BodyUseAPI": [], "Fixed commit": "f7fb9bf1f144b9c3cc7a3bc881a9782e04a9c4b6", "Url": "https://api.github.com/repos/AntonioAndradeGomes/ProjetoLP2", "Date": "2017-06-07T01:00:01Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Scanner.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (var4.equals(\"0\")) { metodo1(); break; }else if (var4.equals(\"4\")) { break; }else if (var4.equals(\"5\")) { break; }else { java.lang.System.out.println(\"Redigite a op\u00e7\u00e3o!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/8036/buggy-version/Fachada.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "f7fb9bf1f144b9c3cc7a3bc881a9782e04a9c4b6", "Url": "https://api.github.com/repos/AntonioAndradeGomes/ProjetoLP2", "Date": "2017-06-07T01:00:01Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ua.matvienko_apps.horoscope.data.DataProvider.getSettings(DataProvider.DOB)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (dob_str.equals(\"\")) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/6054/buggy-version/app.src.main.java.ua.matvienko_apps.horoscope.activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "abae54e5270468f553ce5f18e6d07a7250b9153e", "Url": "https://api.github.com/repos/matvapps/HoroscopeApp", "Date": "2017-04-11T11:33:30Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (patient != null) { clinicName = patient.getClinic().getName(); }else if ((likelyPatientDocIds != null) && ((likelyPatientDocIds.size()) > 0)) { clinicName = allPatients.get(likelyPatientDocIds.get(0)).getClinic().getName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/4188/buggy-version/presentation.src.main.java.org.motechproject.tama.web.mapper.CallLogViewMapper.java", "BodyUseAPI": ["patient.getClinic().getName()", "org.motechproject.tama.domain.Patient.getClinic()"], "Fixed commit": "2782479a85469150b2eed06de9e573750b5fd43f", "Url": "https://api.github.com/repos/motech/TAMA-Web", "Date": "2011-11-25T11:36:32Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState == null) { drawerController.showDefaultFragment(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/3260/buggy-version/app.src.main.java.com.morcinek.showcase.home.HomeActivity.java", "BodyUseAPI": [], "Fixed commit": "9c146060e100bc7ce0686240e5301671018d0e23", "Url": "https://api.github.com/repos/tmorcinek/android-showcase", "Date": "2015-02-02T22:53:14Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((boundingBox.maxY) > (worldObj.getHeight())) { boundingBox.maxY = ((double) (worldObj.getHeight())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/4060/buggy-version/src.main.java.alchemyplusplus.block.complex.diffuser.DiffuserTileEntity.java", "BodyUseAPI": ["alchemyplusplus.block.complex.diffuser.DiffuserTileEntity.getHeight()"], "Fixed commit": "eb700bfe434cb837b4be4e54d7f710a0aa4c4cea", "Url": "https://api.github.com/repos/iopleke/AlchemyPlusPlus", "Date": "2015-04-14T23:12:35Z"},
{"Line": "=>315", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.android.yardsale.fragments.SaleMapFragment.markers) != null) { for (com.google.android.gms.maps.model.Marker m : com.android.yardsale.fragments.SaleMapFragment.markers) m.remove(); }else { com.android.yardsale.fragments.SaleMapFragment.markers = new java.util.ArrayList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/1198/buggy-version/app.src.main.java.com.android.yardsale.fragments.SaleMapFragment.java", "BodyUseAPI": [], "Fixed commit": "82481bbccbfad658893184c551ff5b392dbc38e3", "Url": "https://api.github.com/repos/Prajakta-Ashwini/YardSale", "Date": "2015-06-24T18:13:04Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this._runnable) != null) { _handler.postDelayed(_runnable, _time); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/1448/buggy-version/library.src.main.java.nuesoft.helpdroid.util.ScreenLocker.java", "BodyUseAPI": [], "Fixed commit": "98f2f467798493073000350259b433bf89b5f8c4", "Url": "https://api.github.com/repos/EhsanMashhadi/helpdroid", "Date": "2017-10-15T20:07:48Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this._runnable) != null) { _handler.removeCallbacks(_runnable); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/1448/buggy-version/library.src.main.java.nuesoft.helpdroid.util.ScreenLocker.java", "BodyUseAPI": [], "Fixed commit": "98f2f467798493073000350259b433bf89b5f8c4", "Url": "https://api.github.com/repos/EhsanMashhadi/helpdroid", "Date": "2017-10-15T20:07:48Z"},
{"Line": "=>345", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isInWorkspace(org.eclipse.gemoc.moccml.mapping.moccml_mapping.MoCCMLmappingPackage.class))) { resourceSet.getPackageRegistry().put(org.eclipse.gemoc.moccml.mapping.moccml_mapping.org.eclipse.gemoc.moccml.mapping.moccml_mapping.MoCCMLmappingPackage.getNsURI(), org.eclipse.gemoc.moccml.mapping.moccml_mapping.org.eclipse.gemoc.moccml.mapping.moccml_mapping.MoCCMLmappingPackage); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/4487/buggy-version/moccml.mapping.transformations.org.eclipse.gemoc.moccml.mapping.ecltoqvto.src.org.eclipse.gemoc.moccml.mapping.ecltoqvto.main.Generate.java", "BodyUseAPI": [], "Fixed commit": "65d4f94ba2785136d0f9d5e580ea78cfc7d3fe55", "Url": "https://api.github.com/repos/gemoc/concurrency", "Date": "2017-09-26T15:51:40Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (minutes > 0) hours++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/596/buggy-version/src.main.java.ua.softserveinc.tc.entity.Booking.java", "BodyUseAPI": [], "Fixed commit": "8eb64a397fdfec5e06295cc7226b01786e8c9a86", "Url": "https://api.github.com/repos/koldovsky/kids-room", "Date": "2016-05-14T20:13:18Z"},
{"Line": "=>522", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isRoundTrip) { Global.currentReservation.setFlightReturnDatePrint(searchPanel.getFlightPrintDate(this.returnDatePicker.getDate())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/4139/buggy-version/JavaAir.src.java_air.main.FlightSearchPanel.java", "BodyUseAPI": [], "Fixed commit": "d2a9c653bc788e7484dc6b60ba931904358b3845", "Url": "https://api.github.com/repos/aerxleben/JavaAir", "Date": "2016-11-18T03:09:36Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dc.field(\"uri\").value()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((uri != null) && (!(uri.isEmpty()))) { jsonData.put(\"uri\", dc.field(\"uri\").value()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/6375/buggy-version/app.controllers.DeviceController.java", "BodyUseAPI": [], "Fixed commit": "6d9bb5cda6528016bf3173d55400dd091f61391a", "Url": "https://api.github.com/repos/cmusv-sc/ArchF2013-Project3-FT", "Date": "2014-02-24T20:18:55Z"},
{"Line": "=>381", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (part != null) parameterIndex = part.setSQLParam(pst, parameterIndex);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/4347/buggy-version/src.obj.Base.java", "BodyUseAPI": ["Restraint.Part.setSQLParam(java.sql.PreparedStatement,int)"], "Fixed commit": "d154181143a45407ba227c43e3be9a015cc07d5b", "Url": "https://api.github.com/repos/LionCherry/EPMS", "Date": "2017-11-16T05:07:08Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.futurepages.menta.core.control.InvocationChain.getAction()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((action.loggedUser()) == null) { return result; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/6261/buggy-version/src.org.futurepages.menta.filters.RedirectAfterLoginFilter.java", "BodyUseAPI": [], "Fixed commit": "32edbb0be6f1507287484e6c4b0fa620e0ecb460", "Url": "https://api.github.com/repos/futurepages/4", "Date": "2017-10-14T07:27:21Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((request.getSession().getAttribute(\"SPRING_SECURITY_CONTEXT\")) != null) { org.springframework.social.security.SocialUser socialUser = ((org.springframework.social.security.SocialUser) (((org.springframework.security.core.context.SecurityContextImpl) (request.getSession().getAttribute(\"SPRING_SECURITY_CONTEXT\"))).getAuthentication().getPrincipal())); return getUserByFacebookId(socialUser.getUserId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/4208/buggy-version/src.main.java.pl.edu.agh.student.service.UserService.java", "BodyUseAPI": ["((org.springframework.security.core.context.SecurityContextImpl) (request.getSession().getAttribute(\"SPRING_SECURITY_CONTEXT\"))).getAuthentication().getPrincipal()", "((org.springframework.security.core.context.SecurityContextImpl) (request.getSession().getAttribute(\"SPRING_SECURITY_CONTEXT\"))).getAuthentication()", "request.getSession().getAttribute(java.lang.String)", "javax.servlet.http.HttpServletRequest.getSession()"], "Fixed commit": "eb0ec1e17dad22f9984168d9bb5cdaf7b979a5b4", "Url": "https://api.github.com/repos/xorver/IOSR2015_calendar", "Date": "2015-05-03T21:19:56Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((offset < 0) || (count < 0)) { throw new org.w3c.dom.DOMException(org.w3c.dom.DOMException.INDEX_SIZE_ERR, \"offset is out of bounds\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/2736/buggy-version/src.org.exist.dom.persistent.AbstractCharacterData.java", "BodyUseAPI": [], "Fixed commit": "2e0c1bd05df7f032376d6236b3c30f89431165ea", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2017-08-02T21:14:34Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((offset < 0) || (count < 0)) { throw new org.w3c.dom.DOMException(org.w3c.dom.DOMException.INDEX_SIZE_ERR, \"offset is out of bounds\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/2736/buggy-version/src.org.exist.dom.memtree.AbstractCharacterData.java", "BodyUseAPI": [], "Fixed commit": "2e0c1bd05df7f032376d6236b3c30f89431165ea", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2017-08-02T21:14:34Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((list.size()) != 0) { for (int i = (list.size()) - 1; i > 0; i--) { if ((list.get(i)) instanceof Player) { list.remove(i); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/1610/buggy-version/SkiGame.Hitbox.java", "BodyUseAPI": ["java.util.List<Actor>.size()", "java.util.List<Actor>.get(int)", "java.util.List<Actor>.remove(int)"], "Fixed commit": "a47444eccd4aa94223b0993854054799dd68fcc0", "Url": "https://api.github.com/repos/TheRebelCreeper/CPE123", "Date": "2017-10-26T16:46:45Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((aBrandName) != null) { return ((aBrandName) + \" \") + (aDisplayName); }else { return aDisplayName; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/1384/buggy-version/src.main.java.ca.mcgill.cs.creco.data.Product.java", "BodyUseAPI": [], "Fixed commit": "ec1daff7109d9dce1685f4f53badaca074f11e33", "Url": "https://api.github.com/repos/prmr/Creco", "Date": "2014-03-08T01:15:54Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pProductStub.brand) != null) { lReturn = new ca.mcgill.cs.creco.data.Product(pProductStub.id, pProductStub.displayName, pProductStub.isTested, pProductStub.category.id, pProductStub.brand.displayName); }else { lReturn = new ca.mcgill.cs.creco.data.Product(pProductStub.id, pProductStub.displayName, pProductStub.isTested, pProductStub.category.id, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/1384/buggy-version/src.main.java.ca.mcgill.cs.creco.data.json.JsonLoadingService.java", "BodyUseAPI": [], "Fixed commit": "ec1daff7109d9dce1685f4f53badaca074f11e33", "Url": "https://api.github.com/repos/prmr/Creco", "Date": "2014-03-08T01:15:54Z"},
{"Line": "=>874", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.children.get(0).getValue().equals(Operator.AND)) || (this.children.get(1).getValue().equals(Operator.AND))) { this.distributeOrOverAnd(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/2102/buggy-version/src.mjchao.mazenav.logic.ExpressionTree.java", "BodyUseAPI": [], "Fixed commit": "9376030fb42889c84d0fcea1fbd042255d595424", "Url": "https://api.github.com/repos/mjchao/Logic-Based-AI", "Date": "2016-04-13T19:07:24Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(world.blockExists(position.posX, position.posY, position.posZ))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/6838/buggy-version/src.projectzulu.common.world.buildingmanager.BuildingManager.java", "BodyUseAPI": [], "Fixed commit": "164709a5acc3a938b92ad4722964639c86d38385", "Url": "https://api.github.com/repos/ProjectZulu/Project-Zulu", "Date": "2013-04-16T17:47:33Z"},
{"Line": "=>273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((refArchitectureID) == null) componentPlatformIdToRefId = null; else componentPlatformIdToRefId = fr.liglab.adele.cilia.workbench.restmonitoring.parser.platform.runtimetorefarch.RuntimeToRefArchManager.computeComponentPlatformIdToRefId(getRefArchitecture(), this);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/1542/buggy-version/cilia-workbench-rest-monitoring.src.fr.liglab.adele.cilia.workbench.restmonitoring.parser.platform.PlatformChain.java", "BodyUseAPI": [], "Fixed commit": "52741768f7a901e1cd840de6eebfd9fb8f835d59", "Url": "https://api.github.com/repos/cilia-workbench/cilia-workbench", "Date": "2013-07-30T08:55:29Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((buttonOk) instanceof android.widget.TextView) { ((android.widget.TextView) (buttonOk)).setText(buttonText); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/5027/buggy-version/src.com.tiyuzazhi.component.PassDialog.java", "BodyUseAPI": [], "Fixed commit": "4eec592fb81bf4a457227c314ef8337ef52f1abc", "Url": "https://api.github.com/repos/chris6k/tiyuzazhi", "Date": "2014-09-20T04:17:40Z"},
{"Line": "=>833", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(skyPlot)) { txtAvgPeriod.setText(java.lang.Integer.toString(gui.GraphFrame.DEFAULT_AVG_PERIOD)); parseAvgPeriod(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/213/buggy-version/src.gui.GraphFrame.java", "BodyUseAPI": [], "Fixed commit": "a5dd423951a20c0196533c512b321237b04e4559", "Url": "https://api.github.com/repos/ac2cz/FoxTelem", "Date": "2016-04-26T15:18:51Z"},
{"Line": "=>821", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(skyPlot)) { initVarlist(); add = false; cbAddVariable.setVisible(add); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/213/buggy-version/src.gui.GraphFrame.java", "BodyUseAPI": [], "Fixed commit": "a5dd423951a20c0196533c512b321237b04e4559", "Url": "https://api.github.com/repos/ac2cz/FoxTelem", "Date": "2016-04-26T15:18:51Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sender) != null) { sender.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/7689/buggy-version/app.src.main.java.com.eje_c.reastream.ReaStream.java", "BodyUseAPI": [], "Fixed commit": "32101a076c50c83cb0cdcf8549ed121f6da98365", "Url": "https://api.github.com/repos/niusounds/reastream-android", "Date": "2016-07-15T08:14:16Z"},
{"Line": "=>551", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.nschmidt.ldparteditor.data.VM20Manipulator.getDrawPerLine_NOCLONE()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(drawPerLine.containsKey(subf))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/4183/buggy-version/src.org.nschmidt.ldparteditor.data.VM20Manipulator.java", "BodyUseAPI": [], "Fixed commit": "ba9e556e80afc38af6898e73793b2839a2142af5", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2016-05-10T17:07:02Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.den) == 1) return \"\" + (this.num);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/1960/buggy-version/PlotkinMP3.Fraction.java", "BodyUseAPI": [], "Fixed commit": "f08e5356f248212bf7a64675b8c67608a6a48c04", "Url": "https://api.github.com/repos/maseca/CS182", "Date": "2017-10-28T01:58:27Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (s != null) p.writeString(s);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/3576/buggy-version/androidcommon_lib.src.main.java.org.opendatakit.views.ViewDataQueryParams.java", "BodyUseAPI": ["android.os.Parcel.writeString(java.lang.String)"], "Fixed commit": "148d2b5331c4ef444f21d8af2da16ea0a6d498d2", "Url": "https://api.github.com/repos/opendatakit/androidcommon", "Date": "2017-06-09T18:15:01Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((rng.getText().toString().length()) > 0) { range = java.lang.Double.parseDouble(rng.getText().toString()); }else { range = 50; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/7105/buggy-version/app.src.main.java.com.example.meteorsite.MainActivity.java", "BodyUseAPI": ["rng.getText().toString()", "java.lang.Double.parseDouble(rng.getText().toString())", "android.widget.EditText.getText()"], "Fixed commit": "736b6e56cadfc4d0cd30e07bbcbca27fcf03149e", "Url": "https://api.github.com/repos/kharwas/MeteorSite", "Date": "2016-04-14T13:03:56Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rowsPerThread == 0) { rowsPerThread = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/78/buggy-version/src.com.fmi.corejava.operations.MatrixMutiplier.java", "BodyUseAPI": [], "Fixed commit": "d4c3e1f90a253207b44d5d0c5e28bfcfd0f0f08b", "Url": "https://api.github.com/repos/DChaushev/CoreJava_MatrixMultiplier", "Date": "2015-01-09T21:17:26Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (declaredType instanceof java.lang.reflect.GenericArrayType) { declaredType = ((java.lang.reflect.GenericArrayType) (declaredType)).getGenericComponentType(); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/4159/buggy-version/main.src.mockit.internal.util.Utilities.java", "BodyUseAPI": [], "Fixed commit": "ba45d60b3fd4df7fd9ac203e5baabb3acd34746c", "Url": "https://api.github.com/repos/jmockit/jmockit1", "Date": "2017-09-23T15:25:12Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.avro.Schema.getField(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (schemaField.getSchema().getType().equals(co.cask.cdap.api.data.schema.Schema.Type.BYTES)) { recordBuilder.set(fieldName, java.nio.ByteBuffer.wrap(((byte[]) (structuredRecord.get(fieldName))))); }else { recordBuilder.set(fieldName, convertField(structuredRecord.get(fieldName), schemaField.getSchema())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/1712/buggy-version/core-plugins.src.main.java.co.cask.hydrator.plugin.common.StructuredToAvroTransformer.java", "BodyUseAPI": ["co.cask.cdap.api.data.schema.Schema.Field.getSchema()", "org.apache.avro.generic.GenericRecordBuilder.set(java.lang.String,convertField(structuredRecord.get(fieldName), schemaField.getSchema()))", "co.cask.hydrator.plugin.common.StructuredToAvroTransformer.convertField(structuredRecord.get(fieldName),schemaField.getSchema())"], "Fixed commit": "3809db78c96cbab7fdc5db6088b1fd412e8b53e6", "Url": "https://api.github.com/repos/shashankmoghe/hydrator-plugins", "Date": "2016-12-27T06:30:56Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ca.psiphon.ploggy.Events.mRegisteredObjects.contains(object)) { ca.psiphon.ploggy.Events.mBus.unregister(object); ca.psiphon.ploggy.Events.mRegisteredObjects.remove(object); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/6989/buggy-version/AndroidApp.src.ca.psiphon.ploggy.Events.java", "BodyUseAPI": ["com.squareup.otto.Bus.unregister(java.lang.Object)", "java.util.Set<java.lang.Object>.remove(java.lang.Object)"], "Fixed commit": "98f1ee36a058b56cf375a602bd9793830adeb0da", "Url": "https://api.github.com/repos/Psiphon-Labs/ploggy", "Date": "2013-11-15T21:19:31Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(ca.psiphon.ploggy.Events.mRegisteredObjects.contains(object))) { ca.psiphon.ploggy.Events.mBus.register(object); ca.psiphon.ploggy.Events.mRegisteredObjects.add(object); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/6989/buggy-version/AndroidApp.src.ca.psiphon.ploggy.Events.java", "BodyUseAPI": ["java.util.Set<java.lang.Object>.add(java.lang.Object)", "com.squareup.otto.Bus.register(java.lang.Object)"], "Fixed commit": "98f1ee36a058b56cf375a602bd9793830adeb0da", "Url": "https://api.github.com/repos/Psiphon-Labs/ploggy", "Date": "2013-11-15T21:19:31Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(pl.get(l).contains(v))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/2668/buggy-version/RobotSkinExact.src.rs.NodeILPSolver.java", "BodyUseAPI": [], "Fixed commit": "e23fdc5fe709725be2462e7c418da77739709c5b", "Url": "https://api.github.com/repos/fabiocolombo/RSFormulation", "Date": "2012-11-19T17:41:58Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (pl.get(l).contains(j)) { expr = solver.sum(expr, f.get(l, j, i)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/2668/buggy-version/RobotSkinExact.src.rs.NodeILPSolver.java", "BodyUseAPI": ["ilog.cplex.IloCplex.sum(ilog.concert.IloNumExpr,f.get(l, j, i))", "or.util.TriIndexedNumVarMap.get(int,java.lang.Integer,int)"], "Fixed commit": "e23fdc5fe709725be2462e7c418da77739709c5b", "Url": "https://api.github.com/repos/fabiocolombo/RSFormulation", "Date": "2012-11-19T17:41:58Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((input.equalsIgnoreCase(\"quit\")) || (input.equalsIgnoreCase(\"exit\"))) || (input.equalsIgnoreCase(\"stop\"))) { break; }else { net.clonecomputers.lab.AtomicWords.logger.info((\"Unrecognized command: \" + input)); java.lang.System.out.println((\"Unrecognized command: \" + input)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/2283/buggy-version/src.main.java.net.clonecomputers.lab.AtomicWords.java", "BodyUseAPI": ["java.util.logging.Logger.info(java.lang.String)", "java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "93cbda6c2c5a2107a79d8bf47a9932ff6563d72e", "Url": "https://api.github.com/repos/LAB-Programming/Atomic-Words", "Date": "2014-05-01T22:50:11Z"},
{"Line": "=>961", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cha.getContinues()) == 0) ingame = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/4399/buggy-version/src.game.game.java", "BodyUseAPI": [], "Fixed commit": "0890b8fd9e3a9c1aad2436ab0cf984c77c0dd59d", "Url": "https://api.github.com/repos/propra13-orga/gruppe94", "Date": "2013-06-19T17:22:39Z"},
{"Line": "=>1119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cha.getContinues()) == 0) ingame = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/4399/buggy-version/src.game.game.java", "BodyUseAPI": [], "Fixed commit": "0890b8fd9e3a9c1aad2436ab0cf984c77c0dd59d", "Url": "https://api.github.com/repos/propra13-orga/gruppe94", "Date": "2013-06-19T17:22:39Z"},
{"Line": "=>1019", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cha.getContinues()) == 0) ingame = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/4399/buggy-version/src.game.game.java", "BodyUseAPI": [], "Fixed commit": "0890b8fd9e3a9c1aad2436ab0cf984c77c0dd59d", "Url": "https://api.github.com/repos/propra13-orga/gruppe94", "Date": "2013-06-19T17:22:39Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((toDelete.size()) != 0) { toDelete.remove(toDelete.indexOf(position)); if ((toDelete.size()) == 0) { mActionMode.finish(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/6747/buggy-version/app.src.main.java.radonsoft.firenotes.Fragments.NoteFragment.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.Integer>.remove(int)", "java.util.ArrayList<java.lang.Integer>.indexOf(int)", "java.util.ArrayList<java.lang.Integer>.size()"], "Fixed commit": "f65d0cf4da5c0b064be705402ac81db3fd388539", "Url": "https://api.github.com/repos/RuslanBarcho/FireNotes", "Date": "2017-12-31T15:44:11Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (faculty == null) { faculty = new edu.mum.swe.msched.domain.Faculty(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/3280/buggy-version/src.main.java.edu.mum.swe.msched.web.FacultyController.java", "BodyUseAPI": [], "Fixed commit": "02608e7451ac916cfec19db53efb8410c8e0d1c8", "Url": "https://api.github.com/repos/roat167/msched", "Date": "2017-02-08T05:19:53Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (base == null) base = \"\"; else if (!(base.endsWith(\"/\"))) base += \"/\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/5217/buggy-version/src.org.nutz.resource.impl.FileResource.java", "BodyUseAPI": [], "Fixed commit": "eaf3f9fe54aa4da82715905b24cfa26def9899a3", "Url": "https://api.github.com/repos/nutzam/nutz", "Date": "2012-08-28T04:22:50Z"},
{"Line": "=>562", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((t.charAt(0)) == '@') { t = t.substring(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/9277/buggy-version/jsoar-core.src.main.java.org.jsoar.kernel.Agent.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "07ff79c0510a823e002bf8c34e99923b671af67e", "Url": "https://api.github.com/repos/soartech/jsoar", "Date": "2013-08-14T14:15:48Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.broad.igv.track.MutationTrackLoader.isMutationAnnotationFile(locator)) { loadMutFile(locator, newTracks, genome); }else { loadMultipleAlignmentTrack(locator, newTracks, genome); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/819/buggy-version/src.org.broad.igv.track.TrackLoader.java", "BodyUseAPI": ["org.broad.igv.track.TrackLoader.loadMultipleAlignmentTrack(org.broad.igv.util.ResourceLocator,java.util.List<org.broad.igv.track.Track>,org.broad.igv.feature.genome.Genome)", "org.broad.igv.track.TrackLoader.loadMutFile(org.broad.igv.util.ResourceLocator,java.util.List<org.broad.igv.track.Track>,org.broad.igv.feature.genome.Genome)"], "Fixed commit": "8880c26f3d0bae4d22c947fe819eefa5446d10e3", "Url": "https://api.github.com/repos/igvteam/igv", "Date": "2017-01-24T05:12:52Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((paypalOffer.length()) > 22) { paypalOffer = paypalOffer.substring(0, 22); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/1979/buggy-version/foodCircles.src.main.java.co.foodcircles.activities.BuyFragment.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "33348c54e4b6d39d784d84d00da88785210635af", "Url": "https://api.github.com/repos/gvv-ua/FoodCirclesGeekHub", "Date": "2017-04-10T09:48:45Z"},
{"Line": "=>447", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((existing != null) && (runStatus != (co.cask.cdap.proto.ProgramRunStatus.FAILED))) { throw new java.lang.UnsupportedOperationException(java.lang.String.format(\"Cannot record program %s in status %s\", programId, runStatus)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/542/buggy-version/cdap-app-fabric.src.main.java.co.cask.cdap.internal.app.store.AppMetadataStore.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,co.cask.cdap.proto.id.ProgramId,co.cask.cdap.proto.ProgramRunStatus)"], "Fixed commit": "1bb5099c537b15d386d8f2079ba0410e3c44f89d", "Url": "https://api.github.com/repos/caskdata/cdap", "Date": "2017-07-20T17:50:15Z"},
{"Line": "=>593", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.kalei.views.CaptureView.getOutputMediaFile(int,boolean)", "com.kalei.views.CaptureView.getOutputMediaFile(int,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((pictureFile != null) && (originalPicture != null)) { mPhotoTakenListener.onPhotoTaken(pictureFile.toString(), originalPicture.toString()); new com.kalei.views.CaptureView.SavePhotoTask(pictureFile.toString(), originalPicture.toString(), data).execute(mCameraRotation); }else { com.crashlytics.android.Crashlytics.log((((\"picture file is null:\" + (pictureFile == null)) + \" or orginal picture is null: \") + (originalPicture == null))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/3120/buggy-version/app.src.main.java.com.kalei.views.CaptureView.java", "BodyUseAPI": ["java.io.File.toString()", "com.kalei.interfaces.IPhotoTakenListener.onPhotoTaken(java.lang.String,java.lang.String)", "com.crashlytics.android.Crashlytics.log(java.lang.String)", "java.io.File.toString()", "java.io.File.toString()", "java.io.File.toString()", "com.kalei.views.CaptureView.SavePhotoTask.execute(int)"], "Fixed commit": "66b2dbbaf0ca7e47eae7d20f4a2ec608a4837baa", "Url": "https://api.github.com/repos/reidisaki/pholocation", "Date": "2016-09-13T01:28:00Z"},
{"Line": "=>443", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!isDuplicate) { if (!(cleanedResults.contains(res, null))) { cleanedResults.add(results.listStatements(res, null, ((com.hp.hpl.jena.rdf.model.RDFNode) (null)))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/8657/buggy-version/src.main.java.org.topbraid.shacl.util.SHACLUtil.java", "BodyUseAPI": [], "Fixed commit": "9605f4123683511109b815a8572ecbca4808eea1", "Url": "https://api.github.com/repos/simonstey/shacl-1", "Date": "2015-08-31T06:43:49Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (file == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/6805/buggy-version/ImgurHolo.src.main.java.com.krayzk9s.imgurholo.services.DownloadService.java", "BodyUseAPI": [], "Fixed commit": "b25a8f430a862eaa00aedc8dcb3624f98c5dd160", "Url": "https://api.github.com/repos/Krayzk9s/imgur-holo", "Date": "2014-02-11T17:15:53Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (flags == (javax.transaction.xa.XAResource.TMNOFLAGS)) { try { localAutoCommitMode = conn.getAutoCommit(); conn.setAutoCommit(false); } catch (java.sql.SQLException ex) { throw new org.postgresql.xa.PGXAException(org.postgresql.util.GT.tr(\"Error disabling autocommit\"), ex, javax.transaction.xa.XAException.XAER_RMERR); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/359/buggy-version/org.postgresql.xa.PGXAConnection.java", "BodyUseAPI": [], "Fixed commit": "df09e2bee35e49238d883cc6881deb5d8dea6401", "Url": "https://api.github.com/repos/vlsi/pgjdbc", "Date": "2015-11-27T00:58:59Z"},
{"Line": "=>375", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSwipeState) == (com.notriddle.budget.DeleteView.STATE_PRESSED)) { cancelPressed(); mSwipeState = com.notriddle.budget.DeleteView.STATE_READY; }else if ((mSwipeState) != (com.notriddle.budget.DeleteView.STATE_READY)) { cancelSwipe(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/6839/buggy-version/src.com.notriddle.budget.DeleteView.java", "BodyUseAPI": [], "Fixed commit": "f7cb5e0552a8158f578e01e4124482b7503326bc", "Url": "https://api.github.com/repos/notriddle/budget-envelopes", "Date": "2013-12-18T15:08:03Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((member.receiverType()) != null) { returnType = member.receiverType().qualifiedTypeName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/3387/buggy-version/src.main.java.org.toradocu.extractor.JavadocExtractor.java", "BodyUseAPI": ["com.sun.javadoc.ExecutableMemberDoc.receiverType()", "com.sun.javadoc.Type.qualifiedTypeName()"], "Fixed commit": "bc1c618d4d851ebd68bb48a2c6af97f2f9940f0d", "Url": "https://api.github.com/repos/albertogoffi/toradocu", "Date": "2016-08-11T22:22:12Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type == 0) { sSelectAgency.setText(R.string.select_agency); currentAgencyId = -1; bMakeWidget.setEnabled(false); new com.shyamu.translocwidget.WidgetConfigurationActivity.PopulateAgenciesTask().execute(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/6789/buggy-version/TransLocWidget.TransLocWidget.src.main.java.com.shyamu.translocwidget.WidgetConfigurationActivity.java", "BodyUseAPI": [], "Fixed commit": "31cbafc8192b71b5824f0018d80c04a687514010", "Url": "https://api.github.com/repos/shyamu/TransLoc-Android-Widget", "Date": "2014-04-11T21:12:22Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type <= 2) { sSelectStop.setText(R.string.select_stop); currentStopId = -1; stopName = null; sSelectStop.setEnabled(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/6789/buggy-version/TransLocWidget.TransLocWidget.src.main.java.com.shyamu.translocwidget.WidgetConfigurationActivity.java", "BodyUseAPI": [], "Fixed commit": "31cbafc8192b71b5824f0018d80c04a687514010", "Url": "https://api.github.com/repos/shyamu/TransLoc-Android-Widget", "Date": "2014-04-11T21:12:22Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type <= 1) { sSelectRoute.setText(R.string.select_route); currentRouteId = -1; routeShortName = null; routeLongName = null; sSelectRoute.setEnabled(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/6789/buggy-version/TransLocWidget.TransLocWidget.src.main.java.com.shyamu.translocwidget.WidgetConfigurationActivity.java", "BodyUseAPI": [], "Fixed commit": "31cbafc8192b71b5824f0018d80c04a687514010", "Url": "https://api.github.com/repos/shyamu/TransLoc-Android-Widget", "Date": "2014-04-11T21:12:22Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.neemann.digital.draw.elements.Circuit.getElementsToMove(de.neemann.digital.draw.graphics.Vector,de.neemann.digital.draw.graphics.Vector)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (list != null) { for (de.neemann.digital.draw.elements.Movable m : list) m.move(accumulatedDelta); for (int i = 0; i < (accumulatedRotate); i++) de.neemann.digital.gui.components.modification.ModifyMoveSelected.rotateElements(list, center); circuit.elementsMoved(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/8346/buggy-version/src.main.java.de.neemann.digital.gui.components.modification.ModifyMoveSelected.java", "BodyUseAPI": ["de.neemann.digital.gui.components.modification.ModifyMoveSelected.rotateElements(java.util.ArrayList<de.neemann.digital.draw.elements.Movable>,de.neemann.digital.draw.graphics.Vector)"], "Fixed commit": "adec19bc5ced913a13dfc43c6f9be51039153dd7", "Url": "https://api.github.com/repos/hneemann/Digital", "Date": "2017-09-11T14:42:50Z"},
{"Line": "=>483", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.code.vimsztool.debug.eval.ExpEval.evalTreeNode(result.getTree())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (value instanceof com.sun.jdi.ArrayReference) { try { com.sun.jdi.ArrayReference array = ((com.sun.jdi.ArrayReference) (value)); int loopCount = ((array.length()) > 20) ? 20 : array.length(); for (int i = 0; i < loopCount; i++) { com.sun.jdi.Value cellValue = array.getValue(i); com.google.code.vimsztool.debug.eval.VarNode varNode = createVarNode(java.lang.String.valueOf(i), cellValue); varNodes.add(varNode); } } catch (java.lang.Exception e) { e.printStackTrace(); } }else if (value instanceof com.sun.jdi.ObjectReference) { com.sun.jdi.ObjectReference objRef = ((com.sun.jdi.ObjectReference) (value)); java.util.Map<com.sun.jdi.Field, com.sun.jdi.Value> values = objRef.getValues(objRef.referenceType().visibleFields()); java.util.List<java.lang.String> fieldNames = new java.util.ArrayList<java.lang.String>(); for (com.sun.jdi.Field field : values.keySet()) { if (!(field.isStatic())) { fieldNames.add(field.name()); } } int maxLen = (getMaxLength(fieldNames)) + 2; for (com.sun.jdi.Field field : values.keySet()) { if (!(field.isStatic())) { java.lang.String varNodeName = padStr(maxLen, field.name()); com.sun.jdi.Value fieldValue = values.get(field); com.google.code.vimsztool.debug.eval.VarNode varNode = createVarNode(varNodeName, fieldValue); varNodes.add(varNode); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/5873/buggy-version/sztools.java.com.google.code.vimsztool.debug.eval.ExpEval.java", "BodyUseAPI": [], "Fixed commit": "d68d5f36e47bc31163d4fe7caf1c3fc7016f071d", "Url": "https://api.github.com/repos/shrekwang/vim-sztool", "Date": "2013-10-15T11:01:35Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["quicksplit.core.Season.getSeasonFromDate(java.util.Date)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (currentSeason == null) { currentSeason = quicksplit.core.QuickSplit.getSeasonList().get(((quicksplit.core.QuickSplit.getSeasonList().size()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/8897/buggy-version/src.quicksplit.core.Season.java", "BodyUseAPI": [], "Fixed commit": "0f732e759a561704564c6e3a2a96ad9db66e236b", "Url": "https://api.github.com/repos/andywarren86/quicksplit", "Date": "2015-11-08T23:18:53Z"},
{"Line": "=>925", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((progressStatus.getError()) != null) { exceptionHolder.set(progressStatus.getError()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/1598/buggy-version/plugin-docker.che-plugin-docker-client.src.main.java.org.eclipse.che.plugin.docker.client.DockerConnector.java", "BodyUseAPI": ["org.eclipse.che.api.core.util.ValueHolder<java.lang.String>.set(progressStatus.getError())", "org.eclipse.che.plugin.docker.client.json.ProgressStatus.getError()"], "Fixed commit": "60a8133a10fe414ff8f89ee7f276f65174177b75", "Url": "https://api.github.com/repos/codenvy-legacy/che-plugins", "Date": "2015-12-22T14:47:58Z"},
{"Line": "=>942", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((exceptionHolder.get()) != null) { throw new org.eclipse.che.plugin.docker.client.DockerException(exceptionHolder.get(), 500); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/1598/buggy-version/plugin-docker.che-plugin-docker-client.src.main.java.org.eclipse.che.plugin.docker.client.DockerConnector.java", "BodyUseAPI": ["org.eclipse.che.api.core.util.ValueHolder<java.lang.String>.get()"], "Fixed commit": "60a8133a10fe414ff8f89ee7f276f65174177b75", "Url": "https://api.github.com/repos/codenvy-legacy/che-plugins", "Date": "2015-12-22T14:47:58Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (totalSec != 0) startTimer(totalSec); else { android.support.design.widget.Snackbar.make(view, \"Select something more than zero. \", Snackbar.LENGTH_LONG).setAction(\"\", null).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/7958/buggy-version/app.src.main.java.mnf.android.mibandtimer.ScrollingActivity.java", "BodyUseAPI": ["mnf.android.mibandtimer.ScrollingActivity.1.startTimer(int)"], "Fixed commit": "fe0eb65a284289cbf6d108558b61efd814d4e710", "Url": "https://api.github.com/repos/Muneefm/Mi-band-count-down-timer", "Date": "2017-09-16T13:13:47Z"},
{"Line": "=>402", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.emc.storageos.systemservices.impl.vdc.SiteInfo.getTargetSoftwareVersion()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(org.apache.commons.lang.StringUtils.isEmpty(targetSoftwareVersion))) { localRepository.setCurrentVersion(new com.emc.storageos.systemservices.impl.vdc.SoftwareVersion(targetSoftwareVersion)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/3098/buggy-version/syssvc.src.main.java.com.emc.storageos.systemservices.impl.vdc.VdcOpHandler.java", "BodyUseAPI": ["com.emc.storageos.systemservices.impl.upgrade.LocalRepository.setCurrentVersion(com.emc.storageos.systemservices.impl.vdc.SoftwareVersion)"], "Fixed commit": "64de5022716f75914d6200f0dbee40ec679aaadc", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2017-07-12T08:01:54Z"},
{"Line": "=>411", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.emc.storageos.systemservices.impl.vdc.SiteInfo.getTargetSoftwareVersion()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(org.apache.commons.lang.StringUtils.isEmpty(targetSoftwareVersion))) { localRepository.setCurrentVersion(new com.emc.storageos.systemservices.impl.vdc.SoftwareVersion(currentSoftwareVersion)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/3098/buggy-version/syssvc.src.main.java.com.emc.storageos.systemservices.impl.vdc.VdcOpHandler.java", "BodyUseAPI": [], "Fixed commit": "64de5022716f75914d6200f0dbee40ec679aaadc", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2017-07-12T08:01:54Z"},
{"Line": "=>370", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.softtanck.imageloader.imageloader.utils.LruCacheUtils.getInstance().get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (null != bitmap) android.util.Log.d(\"Tanck\", (\"\u4ece\u5185\u5b58\u4e2d\u62ff:\" + path));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/2841/buggy-version/app.src.main.java.com.softtanck.imageloader.imageloader.ImageLoader.java", "BodyUseAPI": [], "Fixed commit": "060eae5e1e3e541d4cf745e96c87febac14c5451", "Url": "https://api.github.com/repos/q422013/ImageLoader", "Date": "2015-10-22T06:39:27Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isChecked) displayInstallWarningToast();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/903/buggy-version/app.src.main.java.com.jmstudios.redmoon.activity.ShadesActivity.java", "BodyUseAPI": [], "Fixed commit": "dc995e036fe243e44541641e7e1d3617b80fc672", "Url": "https://api.github.com/repos/Zoraver/red-moon", "Date": "2016-03-25T17:59:01Z"},
{"Line": "=>1479", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (mYtHack)) mYtHack.forceCancel();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/2172/buggy-version/src.free.yhc.netmbuddy.model.YTPlayer.java", "BodyUseAPI": [], "Fixed commit": "8c315b4a9e03c7086c6af67ca4e4a4482e4313d8", "Url": "https://api.github.com/repos/yhcting/netmbuddy", "Date": "2013-10-02T12:25:23Z"},
{"Line": "=>2045", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (mYtHack)) mYtHack.forceCancel();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/2172/buggy-version/src.free.yhc.netmbuddy.model.YTPlayer.java", "BodyUseAPI": [], "Fixed commit": "8c315b4a9e03c7086c6af67ca4e4a4482e4313d8", "Url": "https://api.github.com/repos/yhcting/netmbuddy", "Date": "2013-10-02T12:25:23Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (controller == null) controller = cache.get(uri);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/998/buggy-version/jcseg-server.src.main.java.org.lionsoul.jcseg.server.core.ContextRouter.java", "BodyUseAPI": [], "Fixed commit": "ecaac133e732524c444812ebc37c8a31201bad75", "Url": "https://api.github.com/repos/lionsoul2014/jcseg", "Date": "2016-04-12T09:43:47Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((((null != lastToken) && ((com.dangdang.ddframe.rdb.sharding.parsing.lexer.token.Literals.IDENTIFIER) == (lastToken.getType()))) && (!(isSQLPropertyExpression(expression, lastToken)))) && (!(expression.toString().equals(lastToken.getLiterals())))) { return new com.dangdang.ddframe.rdb.sharding.parsing.parser.context.selectitem.CommonSelectItem(com.dangdang.ddframe.rdb.sharding.util.SQLUtil.getExactlyValue(expression.substring(0, expression.lastIndexOf(lastToken.getLiterals()))), com.google.common.base.Optional.of(lastToken.getLiterals()), false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/6600/buggy-version/sharding-jdbc-core.src.main.java.com.dangdang.ddframe.rdb.sharding.parsing.parser.statement.select.AbstractSelectParser.java", "BodyUseAPI": ["com.dangdang.ddframe.rdb.sharding.parsing.lexer.token.Token.getLiterals()", "com.google.common.base.Optional.of(lastToken.getLiterals())", "java.lang.StringBuilder.lastIndexOf(lastToken.getLiterals())", "com.dangdang.ddframe.rdb.sharding.parsing.lexer.token.Token.getLiterals()", "java.lang.StringBuilder.substring(int,int)", "com.dangdang.ddframe.rdb.sharding.util.SQLUtil.getExactlyValue(java.lang.String)"], "Fixed commit": "5f9b8bce123ef4cf408048841c92ec7d19ef5230", "Url": "https://api.github.com/repos/sharding-sphere/sharding-sphere", "Date": "2017-07-12T14:23:58Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((model.getSize()) != 0) model.clear();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/5795/buggy-version/docsync.docsync-app.src.main.java.pl.edu.agh.two.gui.actions.GetFilesListAction.java", "BodyUseAPI": ["pl.edu.agh.two.gui.SelectFilesListModel.clear()"], "Fixed commit": "57170c81e554ede7c59ba38b0b3b12d57c87ab8d", "Url": "https://api.github.com/repos/noname-agh/DocSync", "Date": "2011-12-13T23:01:22Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["now.dayOfMonth().getMaximumValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((preferences.getDay()) >= lastDayInMonth) { begginingDate = lastDayInMonth - 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/1498/buggy-version/app.src.main.java.info.minutesgone.shared.CallLogsManager.java", "BodyUseAPI": [], "Fixed commit": "36e62f6b3a0424c08a2a11c701abb504f649dee3", "Url": "https://api.github.com/repos/branislav-lungulovic/minutes-gone", "Date": "2017-11-06T17:44:02Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((msAverageTransactionDeltaTime) == 0) { msAverageTransactionDeltaTime = msSinceLastTransaction; }else { msAverageTransactionDeltaTime = (((msAverageTransactionDeltaTime) * ((numberOfAllTransactions) - 1)) + (msSinceLastTransaction)) / (numberOfAllTransactions); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/8416/buggy-version/src.main.java.com.iota.iri.network.Neighbor.java", "BodyUseAPI": [], "Fixed commit": "2e8858359114668c9846160ffe956f1ca739ba0d", "Url": "https://api.github.com/repos/SanderEliteEngineering/iri", "Date": "2017-08-01T07:50:24Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((getMapsReq.getStartAfter()) != null) request.setStartAfter((((getMapsReq.getUserId()) + \"/\") + (getMapsReq.getStartAfter())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/5784/buggy-version/src.main.java.com.exorath.service.map.impl.S3Service.java", "BodyUseAPI": ["com.exorath.service.map.impl.ListObjectsV2Request.setStartAfter((((getMapsReq.getUserId()) + \"/\") + (getMapsReq.getStartAfter())))", "com.exorath.service.map.impl.GetMapsReq.getStartAfter()", "com.exorath.service.map.impl.GetMapsReq.getUserId()"], "Fixed commit": "d5077361b4fdeb4cc81c09a6f04a2a5c4c2cb08b", "Url": "https://api.github.com/repos/Exorath/MapService", "Date": "2017-01-08T13:27:12Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.timer) != null) { this.timer.schedule(new com.example.dahlem.RGBAdjustment.RGBAdjustment.MyTimerTask(), this.changingRate); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/5147/buggy-version/src.com.example.dahlem.RGBAdjustment.RGBAdjustment.java", "BodyUseAPI": [], "Fixed commit": "412b73beb7f999685c57d39ed3429601f7db9209", "Url": "https://api.github.com/repos/MarcDahlem/RGB-CAT", "Date": "2014-04-24T10:05:07Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.timer) != null) { increaseColor(); this.refreshBackground(display.getActiveShell(), r, g, b); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/5147/buggy-version/src.com.example.dahlem.RGBAdjustment.RGBAdjustment.java", "BodyUseAPI": [], "Fixed commit": "412b73beb7f999685c57d39ed3429601f7db9209", "Url": "https://api.github.com/repos/MarcDahlem/RGB-CAT", "Date": "2014-04-24T10:05:07Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tagsTextfield) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/4888/buggy-version/editor.core.src.main.java.es.eucm.ead.editor.view.widgets.engine.wrappers.EditorGameLoop.java", "BodyUseAPI": [], "Fixed commit": "41c7642c6e5d69dd1fff54436643e9b047bbc593", "Url": "https://api.github.com/repos/RotaruDan/ead", "Date": "2014-03-16T23:17:04Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (principal == null) name = null; else name = principal.getName();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/7503/buggy-version/d2g-webapi.src.main.java.com.logicify.d2g.web.controllers.UserController.java", "BodyUseAPI": ["java.security.Principal.getName()"], "Fixed commit": "fc51f2cd9966ae0a73de62ae143cfe36a676d209", "Url": "https://api.github.com/repos/Logicify/d2g-api", "Date": "2017-04-21T14:25:41Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (principal == null) name = null; else name = principal.getName();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/7503/buggy-version/d2g-webapi.src.main.java.com.logicify.d2g.web.controllers.UserController.java", "BodyUseAPI": ["java.security.Principal.getName()"], "Fixed commit": "fc51f2cd9966ae0a73de62ae143cfe36a676d209", "Url": "https://api.github.com/repos/Logicify/d2g-api", "Date": "2017-04-21T14:25:41Z"},
{"Line": "=>326", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.api.services.calendar.model.Event.getId()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (eventId != null) { try { main.googlecalendar.GoogleCalendar.googleCalendarClient.events().patch(main.googlecalendar.GoogleCalendar.googleId, eventId, event).execute(); } catch (java.io.IOException e) { try { main.googlecalendar.GoogleCalendar.googleCalendarClient.events().patch(main.googlecalendar.GoogleCalendar.googleId, eventId, event).queue(main.googlecalendar.GoogleCalendar.updateEventBatch, new com.google.api.client.googleapis.batch.json.JsonBatchCallback<com.google.api.services.calendar.model.Event>() { @java.lang.Override public void onSuccess(com.google.api.services.calendar.model.Event event, com.google.api.client.http.HttpHeaders arg1) throws java.io.IOException { } @java.lang.Override public void onFailure(com.google.api.client.googleapis.json.GoogleJsonError arg0, com.google.api.client.http.HttpHeaders arg1) throws java.io.IOException { java.lang.System.out.println(main.googlecalendar.GoogleCalendar.MESSAGE_SYNC_UPDATE_FAIL); } }); } catch (java.io.IOException e1) { java.lang.System.out.println(main.googlecalendar.GoogleCalendar.MESSAGE_SYNC_UPDATE_FAIL); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/8376/buggy-version/src.main.googlecalendar.GoogleCalendar.java", "BodyUseAPI": ["main.googlecalendar.GoogleCalendar.googleCalendarClient.events().patch(java.lang.String,java.lang.String,com.google.api.services.calendar.model.Event)", "main.googlecalendar.GoogleCalendar.googleCalendarClient.events().patch(java.lang.String,java.lang.String,com.google.api.services.calendar.model.Event)", "main.googlecalendar.GoogleCalendar.googleCalendarClient.events().patch(main.googlecalendar.GoogleCalendar.googleId, eventId, event).queue(com.google.api.client.googleapis.batch.BatchRequest,com.google.api.client.googleapis.batch.json.JsonBatchCallback<com.google.api.services.calendar.model.Event>)", "main.googlecalendar.GoogleCalendar.googleCalendarClient.events().patch(main.googlecalendar.GoogleCalendar.googleId, eventId, event).execute()"], "Fixed commit": "be1ea039c5955880e272ca585c2e228d373f7a9f", "Url": "https://api.github.com/repos/cs2103aug2014-T13-2J/main", "Date": "2014-11-06T02:34:13Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.catrobat.catroid.ui.fragment.BackPackSoundFragment.getActivity()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (bpSoundActivityFragmentActivity == null) { android.util.Log.d(\"TAG\", \"Activity is null!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/5693/buggy-version/catroid.src.org.catrobat.catroid.ui.fragment.BackPackSoundFragment.java", "BodyUseAPI": [], "Fixed commit": "8706e424fe4772980374c221d3c75ecf1a45b056", "Url": "https://api.github.com/repos/krellsebastian/Catroid", "Date": "2013-09-06T15:44:44Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) == null) { android.util.Log.d(\"TAG\", \"Activity is null!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/5693/buggy-version/catroid.src.org.catrobat.catroid.ui.fragment.BackPackSoundFragment.java", "BodyUseAPI": [], "Fixed commit": "8706e424fe4772980374c221d3c75ecf1a45b056", "Url": "https://api.github.com/repos/krellsebastian/Catroid", "Date": "2013-09-06T15:44:44Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isComplete()) { org.xnio.ChannelListeners.invokeChannelListener(this, completionListener); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/6631/buggy-version/core.src.main.java.io.undertow.protocols.http2.Http2StreamSourceChannel.java", "BodyUseAPI": [], "Fixed commit": "ec9c0a6beb2a3083e41d9e95c818d9183c35e4e6", "Url": "https://api.github.com/repos/knrc/undertow", "Date": "2015-02-17T06:08:32Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Configuration.instance.getSelectedProfile()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (p != null) { org.openstreetmap.OSMZmiany.MapFilter mf = p.getMapFilter(); if (mf instanceof org.openstreetmap.OSMZmiany.DrawerOverlay) { org.openstreetmap.OSMZmiany.DrawerOverlay dov = ((org.openstreetmap.OSMZmiany.DrawerOverlay) (mf)); dov.draw(g, this); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/2246/buggy-version/src.org.openstreetmap.OSMZmiany.ZMapWidget.java", "BodyUseAPI": ["org.openstreetmap.OSMZmiany.Configuration.Profile.getMapFilter()"], "Fixed commit": "441a07166cbfe20bdc99bf5de529d1ed11e5e62a", "Url": "https://api.github.com/repos/dotevo/OSMZmiany", "Date": "2011-04-03T22:53:13Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((parameters.writePartial) != null) java.lang.System.err.println((\"'-p' option is deprecated and will be removed in 2.2. \" + \"Use '-d' option to drop not-overlapped partial reads.\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/3495/buggy-version/src.main.java.com.milaboratory.mixcr.cli.ActionAssemblePartialAlignments.java", "BodyUseAPI": [], "Fixed commit": "aec354f3c9fceccb93b1b812e1de28282c28c42b", "Url": "https://api.github.com/repos/milaboratory/mixcr", "Date": "2017-02-28T20:53:33Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((extensions) != null) { java.util.Map<java.lang.String, java.lang.String> customProps = org.openlmis.stockmanagement.util.StockManagementUtils.getKeyValueAggregate(extensions, strategy); return customProps.isEmpty() ? null : customProps; }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/1013/buggy-version/modules.stock-management.src.main.java.org.openlmis.stockmanagement.domain.LotOnHand.java", "BodyUseAPI": [], "Fixed commit": "e13d12a6b92fd9dc8195aefb884f5295573f9144", "Url": "https://api.github.com/repos/SIGLUS/open-lmis", "Date": "2016-08-30T14:49:37Z"},
{"Line": "=>329", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["railo.transformer.bytecode.statement.tag.TagLoop.getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (coll == null) coll = getAttribute(\"collection\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/2536/buggy-version/railo-java.railo-core.src.railo.transformer.bytecode.statement.tag.TagLoop.java", "BodyUseAPI": [], "Fixed commit": "0a72d7c9404117ee690d20378e6fe5c11f8df6f6", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2014-03-24T14:33:22Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (tag.containsAttribute(\"struct\")) { if ((!(tag.containsAttribute(\"index\"))) && (!(tag.containsAttribute(\"item\")))) throw new railo.transformer.cfml.evaluator.EvaluatorException(\"Wrong Context, when you use attribute struct,you must define attribute index and/or item\"); loop.setType(TagLoop.TYPE_STRUCT); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/2536/buggy-version/railo-java.railo-core.src.railo.transformer.cfml.evaluator.impl.Loop.java", "BodyUseAPI": ["railo.transformer.bytecode.statement.tag.Tag.containsAttribute(java.lang.String)", "railo.transformer.bytecode.statement.tag.Tag.containsAttribute(java.lang.String)"], "Fixed commit": "0a72d7c9404117ee690d20378e6fe5c11f8df6f6", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2014-03-24T14:33:22Z"},
{"Line": "=>509", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (type == (org.quantumbadger.redreader.cache.RequestFailureType.CACHE_MISS)) { final org.quantumbadger.redreader.fragments.RRError error = new org.quantumbadger.redreader.fragments.RRError(context.getString(R.string.error_postlist_cache_title), context.getString(R.string.error_postlist_cache_message), t, status, url.toString()); notificationHandler.sendMessage(org.quantumbadger.redreader.fragments.General.handlerMessage(org.quantumbadger.redreader.fragments.PostListingFragment.NOTIF_ERROR_FOOTER, error)); }else { final org.quantumbadger.redreader.fragments.RRError error = org.quantumbadger.redreader.fragments.General.getGeneralErrorForFailure(context, type, t, status, url.toString()); notificationHandler.sendMessage(org.quantumbadger.redreader.fragments.General.handlerMessage(org.quantumbadger.redreader.fragments.PostListingFragment.NOTIF_ERROR, error)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/1041/buggy-version/src.main.java.org.quantumbadger.redreader.fragments.PostListingFragment.java", "BodyUseAPI": ["org.quantumbadger.redreader.fragments.General.getGeneralErrorForFailure(org.quantumbadger.redreader.fragments.PostListingFragment.PostListingRequest,org.quantumbadger.redreader.cache.RequestFailureType,java.lang.Throwable,org.apache.http.StatusLine,url.toString())"], "Fixed commit": "0808fcc95c882990f2d3f02b048184954dc208f6", "Url": "https://api.github.com/repos/daentech/RedReader", "Date": "2015-01-25T10:42:55Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hivemall.math.matrix.sparse.DoKFloatMatrix.index(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((value == 0.0F) && ((elements.containsKey(index)) == false)) { return 0.0F; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/7514/buggy-version/core.src.main.java.hivemall.math.matrix.sparse.DoKFloatMatrix.java", "BodyUseAPI": [], "Fixed commit": "0a326610f0e9b1b5c93d9edbe92ef83868156716", "Url": "https://api.github.com/repos/myui/incubator-hivemall", "Date": "2017-09-27T16:46:07Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hivemall.math.matrix.sparse.DoKMatrix.index(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((value == 0.0) && ((elements.containsKey(index)) == false)) { return 0.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/7514/buggy-version/core.src.main.java.hivemall.math.matrix.sparse.DoKMatrix.java", "BodyUseAPI": [], "Fixed commit": "0a326610f0e9b1b5c93d9edbe92ef83868156716", "Url": "https://api.github.com/repos/myui/incubator-hivemall", "Date": "2017-09-27T16:46:07Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.agmip.ace.AceComponent.getValueOr(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(val.equals(\"\"))) { nodeName += val + \"-\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/4861/buggy-version/src.main.java.org.agmip.ui.acebviewer.AcebViewerTreeView.java", "BodyUseAPI": [], "Fixed commit": "ae94d6791f9a8977df0b2a47d72b5e7d672f1fa8", "Url": "https://api.github.com/repos/agmip/AcebViewer", "Date": "2015-05-12T18:32:49Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((course.description.length()) > 100) { course.description = course.description.substring(0, 100); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/8074/buggy-version/app.src.main.java.de.xikolo.controllers.main.CourseListFragment.java", "BodyUseAPI": ["course.description.substring(int,int)"], "Fixed commit": "527a41fa82b02cc9f255ef34b63c757ff146f714", "Url": "https://api.github.com/repos/openHPI/xikolo-android", "Date": "2016-11-30T12:13:21Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (o == null) { child.onNext(null); }else { rx.internal.util.RxRingBuffer.on.accept(child, o); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/2202/buggy-version/rxjava-core.src.main.java.rx.internal.util.RxRingBuffer.java", "BodyUseAPI": ["rx.internal.operators.NotificationLite<java.lang.Object>.accept(rx.Observer,java.lang.Object)"], "Fixed commit": "bcbe80f627f7fd489cd2724f2b99b6015fc4275a", "Url": "https://api.github.com/repos/benjchristensen/RxJava", "Date": "2014-06-18T23:32:37Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.cattle.platform.core.model.PhysicalHost.getExternalId()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (uuid == null) { uuid = io.cattle.platform.object.util.DataAccessor.fields(host).withKey(HostConstants.FIELD_REPORTED_UUID).as(java.lang.String.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/2822/buggy-version/code.iaas.agent-server.src.main.java.io.cattle.platform.agent.server.ping.dao.impl.PingDaoImpl.java", "BodyUseAPI": [], "Fixed commit": "f6b9b616e8dd4360b8436c82d7dea18585a66dbc", "Url": "https://api.github.com/repos/cjellick/cattle", "Date": "2015-02-18T02:32:46Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (industryInvest > 0) { carbonIncrease = energyUsageHandler.calculateCarbonIndustryGrowth(industryInvest); }else { carbonIncrease = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/6487/buggy-version/kyoto.src.main.java.uk.ac.ic.kyoto.annex1reduce.AnnexOneReduce.java", "BodyUseAPI": ["uk.ac.ic.kyoto.annex1reduce.AnnexOneReduce.calculateCarbonIndustryGrowth(double)"], "Fixed commit": "fab838408d7c47e988ce64831fe8b5be4b292a4e", "Url": "https://api.github.com/repos/farhanrahman/kyoto", "Date": "2012-06-24T21:43:12Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(creatorRights.allowedToCreate(toCheck))) { throw new pl.allegro.tech.hermes.management.domain.PermissionDeniedException(\"You are not allowed to create subscriptions for this topic.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/3410/buggy-version/hermes-management.src.main.java.pl.allegro.tech.hermes.management.domain.subscription.validator.SubscriptionValidator.java", "BodyUseAPI": [], "Fixed commit": "98353f985edba95c1203444a9d5a35a2125f4b20", "Url": "https://api.github.com/repos/allegro/hermes", "Date": "2017-07-10T09:04:25Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mViewPager.getCurrentItem()) != (tab.getPosition())) mViewPager.setCurrentItem(tab.getPosition());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/7047/buggy-version/src.org.qii.weiciyuan.ui.browser.BrowserWeiboMsgActivity.java", "BodyUseAPI": ["android.support.v4.view.ViewPager.setCurrentItem(tab.getPosition())", "ActionBar.Tab.getPosition()"], "Fixed commit": "ecd82c7995c85db778fb4ca119f81f21f58bbb47", "Url": "https://api.github.com/repos/qii/weiciyuan", "Date": "2012-09-12T07:15:31Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mViewPager.getCurrentItem()) != (tab.getPosition())) mViewPager.setCurrentItem(tab.getPosition());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/7047/buggy-version/src.org.qii.weiciyuan.ui.userinfo.MyInfoActivity.java", "BodyUseAPI": ["ActionBar.Tab.getPosition()", "android.support.v4.view.ViewPager.setCurrentItem(tab.getPosition())"], "Fixed commit": "ecd82c7995c85db778fb4ca119f81f21f58bbb47", "Url": "https://api.github.com/repos/qii/weiciyuan", "Date": "2012-09-12T07:15:31Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mViewPager.getCurrentItem()) != (tab.getPosition())) mViewPager.setCurrentItem(tab.getPosition());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/7047/buggy-version/src.org.qii.weiciyuan.ui.userinfo.UserInfoActivity.java", "BodyUseAPI": ["android.support.v4.view.ViewPager.setCurrentItem(tab.getPosition())", "ActionBar.Tab.getPosition()"], "Fixed commit": "ecd82c7995c85db778fb4ca119f81f21f58bbb47", "Url": "https://api.github.com/repos/qii/weiciyuan", "Date": "2012-09-12T07:15:31Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (result.isWorseThan(build.getResult())) { build.setResult(result); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/7744/buggy-version/src.main.java.hudson.plugins.performance.PerformancePublisher.java", "BodyUseAPI": ["hudson.model.AbstractBuild<?, ?>.setResult(hudson.model.Result)"], "Fixed commit": "653beb874721aa2408031486e571401a0fa1acbc", "Url": "https://api.github.com/repos/jenkinsci/performance-plugin", "Date": "2011-05-16T07:21:09Z"},
{"Line": "=>307", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) != null) { android.util.Log.d(pub.devrel.easygoogle.gac.GacFragment.TAG, \"enableModule: rebuilding GoogleApiClient\"); buildGoogleApiClient(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/4525/buggy-version/easygoogle.src.main.java.pub.devrel.easygoogle.gac.GacFragment.java", "BodyUseAPI": [], "Fixed commit": "d5defbbd0ca67140650cb87b88c314423c6367f6", "Url": "https://api.github.com/repos/googlearchive/easygoogle", "Date": "2016-02-05T19:06:01Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(output.equals(\"\"))) output += Main.powersOfThousand(power);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/906/buggy-version/NumberParsing.src.Main.java", "BodyUseAPI": [], "Fixed commit": "ad999920b4237cba5977ab24dfda84539f85dfe5", "Url": "https://api.github.com/repos/AmadeusMop/NumberParsing", "Date": "2013-09-17T16:49:48Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.client) == null) { this.client = new client.business.Client(jAddress.getText(), java.lang.Integer.parseInt(this.jPort.getText())); }else { javax.swing.JOptionPane.showMessageDialog(this, \"Connection already established!\", \"Error\", javax.swing.JOptionPane.ERROR_MESSAGE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/5176/buggy-version/Client.src.client.gui.ClientUI.java", "BodyUseAPI": [], "Fixed commit": "4d546170ddb2d63e38d8b575d3a132a853ece0db", "Url": "https://api.github.com/repos/pedromaxado/JavaThings", "Date": "2014-08-18T14:55:52Z"},
{"Line": "=>1572", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lackBankerNotifyPop) != null) lackBankerNotifyPop.dismiss();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/6607/buggy-version/app.src.main.java.com.bai.chesscard.activity.GamingActivityNew.java", "BodyUseAPI": [], "Fixed commit": "b0a7fd92b0399c6270a49ce25d6375fd0c75f8e5", "Url": "https://api.github.com/repos/WhiteorBlack/ChessCard", "Date": "2017-02-23T03:52:55Z"},
{"Line": "=>708", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pts == null) || (pts.isEmpty())) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/2253/buggy-version/core.JavaRendererServer.src.main.java.RenderMultipoints.clsClipQuad.java", "BodyUseAPI": [], "Fixed commit": "3f0cbd1bcaf66d5dac6bf62031de25e0faa23a29", "Url": "https://api.github.com/repos/missioncommand/mil-sym-java", "Date": "2014-11-13T22:40:05Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((Node.getUserObject()) instanceof org.jhotdraw.draw.Figure) { org.jhotdraw.draw.Figure f = ((org.jhotdraw.draw.Figure) (Node.getUserObject())); if (f instanceof org.jhotdraw.draw.EntidadeFigure) { Ret = new javax.swing.ImageIcon(this.getClass().getResource(\"/org/jhotdraw/draw/action/images/createEntidade.png\")); }else if (f instanceof org.jhotdraw.draw.EntidadeFracaFigure) { Ret = new javax.swing.ImageIcon(this.getClass().getResource(\"/org/jhotdraw/draw/action/images/createEntidadeFraca.png\")); }else if (f instanceof org.jhotdraw.draw.RelacionamentoFigure) { Ret = new javax.swing.ImageIcon(this.getClass().getResource(\"/org/jhotdraw/draw/action/images/createRelacionamento.png\")); }else if (f instanceof org.jhotdraw.draw.EntidadeRelacionamentoFigure) { Ret = new javax.swing.ImageIcon(this.getClass().getResource(\"/org/jhotdraw/draw/action/images/createEntidadeRelacionamento.png\")); }else if (f instanceof org.jhotdraw.draw.AtributoFigure) { Ret = new javax.swing.ImageIcon(this.getClass().getResource(\"/org/jhotdraw/draw/action/images/createAtributo.png\")); }else if (f instanceof org.jhotdraw.draw.AtributoChaveFigure) { Ret = new javax.swing.ImageIcon(this.getClass().getResource(\"/org/jhotdraw/draw/action/images/createAtributoChave.png\")); }else if (f instanceof org.jhotdraw.draw.AtributoDerivadoFigure) { Ret = new javax.swing.ImageIcon(this.getClass().getResource(\"/org/jhotdraw/draw/action/images/createAtributoDerivado.png\")); }else if (f instanceof org.jhotdraw.draw.AtributoMultivaloradoFigure) { Ret = new javax.swing.ImageIcon(this.getClass().getResource(\"/org/jhotdraw/draw/action/images/createAtributoMultivalorado.png\")); }else if (f instanceof org.jhotdraw.draw.LineConnectionGeneralizacaoFigure) { Ret = new javax.swing.ImageIcon(this.getClass().getResource(\"/org/jhotdraw/draw/action/images/createElbowConnectionSmall.png\")); }else if (f instanceof org.jhotdraw.draw.DoubleLineConnectionGeneralizacaoFigure) { Ret = new javax.swing.ImageIcon(this.getClass().getResource(\"/org/jhotdraw/draw/action/images/createElbowDoubleConnectionSmall.png\")); }else if (f instanceof org.jhotdraw.draw.GeneralizacaoLineConnectionFigure) { Ret = new javax.swing.ImageIcon(this.getClass().getResource(\"/org/jhotdraw/draw/action/images/createGeneralizacaoConnectionSmall.png\")); }else if (f instanceof org.jhotdraw.draw.LabeledDoubleLineConnectionMuitosFigure) { Ret = new javax.swing.ImageIcon(this.getClass().getResource(\"/org/jhotdraw/draw/action/images/createElbowDoubleMuitosConnectionSmall.png\")); }else if (f instanceof org.jhotdraw.draw.LabeledDoubleLineConnectionUmFigure) { Ret = new javax.swing.ImageIcon(this.getClass().getResource(\"/org/jhotdraw/draw/action/images/createElbowDoubleUmConnectionSmall.png\")); }else if (f instanceof org.jhotdraw.draw.LabeledLineConnectionUmFigure) { Ret = new javax.swing.ImageIcon(this.getClass().getResource(\"/org/jhotdraw/draw/action/images/createElbowUmConnectionSmall.png\")); }else if (f instanceof org.jhotdraw.draw.LabeledLineConnectionMuitosFigure) { Ret = new javax.swing.ImageIcon(this.getClass().getResource(\"/org/jhotdraw/draw/action/images/createElbowMuitosConnectionSmall.png\")); }else if (f instanceof org.jhotdraw.draw.SobreposicaoFigure) { org.jhotdraw.util.ResourceBundleUtil labels = org.jhotdraw.util.ResourceBundleUtil.getLAFBundle(\"org.jhotdraw.draw.Labels\"); Ret = labels.getImageIcon(\"createSobreposicaoSmall\", org.jhotdraw.draw.SobreposicaoFigure.class); }else if (f instanceof org.jhotdraw.draw.DisjuncaoFigure) { Ret = new javax.swing.ImageIcon(this.getClass().getResource(\"/org/jhotdraw/draw/action/images/createDisjuncaoSmall.png\")); }else if (f instanceof org.jhotdraw.draw.TextItalicoFigure) { Ret = new javax.swing.ImageIcon(this.getClass().getResource(\"/org/jhotdraw/draw/action/images/createPapelSmall.png\")); }else if (f instanceof org.jhotdraw.draw.LineConnectionFigure) { Ret = new javax.swing.ImageIcon(this.getClass().getResource(\"/org/jhotdraw/draw/action/images/createElbowConnectionAtributoSmall.png\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/1757/buggy-version/terraer_project.src.main.java.org.jhotdraw.draw.TerraFigureTree.java", "BodyUseAPI": ["javax.swing.tree.DefaultMutableTreeNode.getUserObject()"], "Fixed commit": "ecbcedd4c2274a144096fa4b841e7ab11a55cb8c", "Url": "https://api.github.com/repos/rterrabh/TerraER", "Date": "2015-04-23T11:46:45Z"},
{"Line": "=>359", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lotError) { existingLotMovementAdapter.notifyDataSetChanged(); newLotMovementAdapter.notifyDataSetChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/5025/buggy-version/app.src.main.java.org.openlmis.core.view.activity.StockCardNewMovementActivity.java", "BodyUseAPI": [], "Fixed commit": "0f79faf86d76fe4098739992604cb31b4fc6b147", "Url": "https://api.github.com/repos/SIGLUS/lmis-moz-mobile", "Date": "2016-08-23T07:40:39Z"},
{"Line": "=>12", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((character.Player.getPlayer().getGold()) >= cost) { character.Player.getPlayer().addHp(maxHp); character.Player.getPlayer().changeMp((-mpRegen)); character.Player.getPlayer().changeGold((-cost)); java.lang.System.out.println(\"Hp and Mp restored.\"); }else { java.lang.System.out.println(\"Player does not have enough gold!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/3831/buggy-version/src.town.Inn.java", "BodyUseAPI": ["character.Player.getPlayer().changeGold(int)"], "Fixed commit": "4ca0720d1ad61b96b5f4efb48f627073dbbe9f44", "Url": "https://api.github.com/repos/19506jk/CC3K-new", "Date": "2014-07-13T01:44:13Z"},
{"Line": "=>478", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tmp == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/8262/buggy-version/core.src.main.java.com.graphhopper.routing.AlternativeRoute.java", "BodyUseAPI": [], "Fixed commit": "d79232db5189e70c7881f482269d35eaaddaa76f", "Url": "https://api.github.com/repos/graphhopper/graphhopper", "Date": "2015-09-27T12:47:38Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (collectionName.equals(\"povuceni\")) id = akt.getSporedniDeo().getAktUProceduri().getMetaPodaci().getOznaka().getValue(); else id = akt.getSporedniDeo().getDonetAkt().getMetaPodaci().getOznaka().getValue();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/2250/buggy-version/XMLproj.src.rest.ActREST.java", "BodyUseAPI": [], "Fixed commit": "a5ec37c5250051e93444d7924cc331e5a61d4c06", "Url": "https://api.github.com/repos/alien93/xml", "Date": "2016-06-17T15:47:10Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sender instanceof org.bukkit.entity.Player) cgtoggled.remove(((org.bukkit.entity.Player) (sender)).getUniqueId());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/205/buggy-version/src.com.redstoner.modules.chatgroups.Chatgroups.java", "BodyUseAPI": [], "Fixed commit": "bfa6d6fa0760131ac0180925deaafccdce5a4076", "Url": "https://api.github.com/repos/RedstonerServer/ModuleLoader", "Date": "2017-03-02T18:29:33Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["info.getTechnology().getId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (techId.equals(TechnologyTypes.ANDROID_HYBRID)) { com.photon.phresco.framework.pom.AndroidTestPOMUpdater.updatePOM(path); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/5575/buggy-version/framework.phresco-framework-impl.src.main.java.com.photon.phresco.framework.impl.ProjectAdministratorImpl.java", "BodyUseAPI": [], "Fixed commit": "6388ef773b10c80be7d2d651c04deb9a96e8b121", "Url": "https://api.github.com/repos/phresco/phresco", "Date": "2012-10-15T13:47:01Z"},
{"Line": "=>270", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["delta.getTechnology().getId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (techId.equals(TechnologyTypes.ANDROID_HYBRID)) { com.photon.phresco.framework.pom.AndroidTestPOMUpdater.updatePOM(path); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/5575/buggy-version/framework.phresco-framework-impl.src.main.java.com.photon.phresco.framework.impl.ProjectAdministratorImpl.java", "BodyUseAPI": [], "Fixed commit": "6388ef773b10c80be7d2d651c04deb9a96e8b121", "Url": "https://api.github.com/repos/phresco/phresco", "Date": "2012-10-15T13:47:01Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isReady)) { changePanel = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/2941/buggy-version/src.core.Processo.java", "BodyUseAPI": [], "Fixed commit": "6589d056e3af70adb01d0445f5255caca02810e9", "Url": "https://api.github.com/repos/gustavotr/P2P", "Date": "2014-05-23T19:33:35Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((response != null) && ((response.getPayload()) != null)) { gov.hhs.fha.nhinc.corex12.docsubmission.utils.CORE_X12DSLargePayloadUtils.convertDataToFileLocationIfEnabled(response); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/844/buggy-version/Product.Production.Services.CORE_X12DocumentSubmissionCore.src.main.java.gov.hhs.fha.nhinc.corex12.docsubmission.genericbatch.request.nhin.proxy.NhinCORE_X12DSGenericBatchRequestProxyWebServiceSecuredImpl.java", "BodyUseAPI": ["gov.hhs.fha.nhinc.corex12.docsubmission.utils.CORE_X12DSLargePayloadUtils.convertDataToFileLocationIfEnabled(org.caqh.soap.wsdl.corerule2_2_0.COREEnvelopeBatchSubmissionResponse)"], "Fixed commit": "e5980811c43e3b9efee381b6af829dc3dd924b7e", "Url": "https://api.github.com/repos/vsaibabu/CONNECT", "Date": "2014-09-23T18:14:16Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((response != null) && ((response.getPayload()) != null)) { gov.hhs.fha.nhinc.corex12.docsubmission.utils.CORE_X12DSLargePayloadUtils.convertDataToFileLocationIfEnabled(response); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/844/buggy-version/Product.Production.Services.CORE_X12DocumentSubmissionCore.src.main.java.gov.hhs.fha.nhinc.corex12.docsubmission.genericbatch.response.nhin.proxy.NhinCORE_X12DSGenericBatchResponseProxyWebServiceSecuredImpl.java", "BodyUseAPI": ["gov.hhs.fha.nhinc.corex12.docsubmission.utils.CORE_X12DSLargePayloadUtils.convertDataToFileLocationIfEnabled(org.caqh.soap.wsdl.corerule2_2_0.COREEnvelopeBatchSubmissionResponse)"], "Fixed commit": "e5980811c43e3b9efee381b6af829dc3dd924b7e", "Url": "https://api.github.com/repos/vsaibabu/CONNECT", "Date": "2014-09-23T18:14:16Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (url == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/2659/buggy-version/var.sitemap-plugin.src.main.java.org.phpmaven.sitemap.SitemapIndexMojo.java", "BodyUseAPI": [], "Fixed commit": "1ed417e347537a7e923deac31a6d58937e7ae1f3", "Url": "https://api.github.com/repos/php-maven/maven-php-plugin", "Date": "2012-03-30T22:43:56Z"},
{"Line": "=>513", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((startDateTimeArray[1]) != null) && ((endDateTimeArray[1]) != null)) { if ((startDateTimeArray[1].compareTo(endDateTimeArray[1])) > 0) { throw new cs2103_w09_1j.esther.InvalidInputException(Parser.ERROR_DATETIMEFORMAT); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/3338/buggy-version/src.Parser.java", "BodyUseAPI": ["java.lang.String.compareTo(java.lang.String)"], "Fixed commit": "31bff9b7f7725d01c7e50561307c58c2ae5ee751", "Url": "https://api.github.com/repos/cs2103jan2016-w09-1j/main", "Date": "2016-03-29T02:48:28Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.security.oauth2.provider.token.TokenStore.getAccessToken(org.springframework.security.oauth2.provider.OAuth2Authentication)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (token == null) { return org.egov.api.controller.core.ApiResponse.newInstance().error(getMessage(\"msg.logout.unknown\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/2700/buggy-version/egov.egov-api.src.main.java.org.egov.api.controller.EmployeeController.java", "BodyUseAPI": [], "Fixed commit": "bdef9655b6ec0eb8b739485ce4cd86bff1e5a9e8", "Url": "https://api.github.com/repos/egovernments/egov-smartcity-suite", "Date": "2016-02-12T11:23:18Z"},
{"Line": "=>276", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pl.edu.icm.cermine.structure.TextRenderInfo.getText()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((text == null) || (text.isEmpty())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/5105/buggy-version/cermine-impl.src.main.java.pl.edu.icm.cermine.structure.ITextCharacterExtractor.java", "BodyUseAPI": [], "Fixed commit": "4b6f00d9a8cb7c5035aa4a42147e5d4c814c610d", "Url": "https://api.github.com/repos/CeON/CERMINE", "Date": "2016-09-28T17:06:09Z"},
{"Line": "=>628", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((classForClass) == null) classForClass = new java.util.HashMap();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/5294/buggy-version/src.com.winterwell.gson.GsonBuilder.java", "BodyUseAPI": [], "Fixed commit": "d9f61049c2a04ec4eab9bb60fb99e1e60780ac39", "Url": "https://api.github.com/repos/winterstein/flexi-gson", "Date": "2017-12-01T11:18:12Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.topsun.posclient.common.ui.utils.FormatUtils.checkWeightG(tableViewer.getControl(),java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!flag) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/6687/buggy-version/com.topsun.posclient.sales.ui.src.com.topsun.posclient.sales.ui.table.ReturnedCellModify.java", "BodyUseAPI": [], "Fixed commit": "8540c71919b1ebdae3ad965dd4d4042404559698", "Url": "https://api.github.com/repos/tandong8888/topsun", "Date": "2013-12-07T07:43:53Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((common.event.TaskEvent.Type.TASK_FINISHED) == (event.getType())) || ((common.event.TaskEvent.Type.TASK_DUE) == (event.getType()))) { synchronized(tasks) { common.task.Task task = tasks.remove(event.getTaskThread().getTaskId()); common.task.TaskMonitor.logger.info(((((\"Task: \" + (task.getClass())) + \" has finished, \") + (event.getType())) + \" removed from TaskMonitor.\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/6908/buggy-version/src.common.task.TaskMonitor.java", "BodyUseAPI": ["common.event.TaskEvent.getTaskThread()", "common.event.TaskEvent.getType()", "event.getTaskThread().getTaskId()", "common.util.Logger.info(((((\"Task: \" + (task.getClass())) + \" has finished, \") + (event.getType())) + \" removed from TaskMonitor.\"))", "java.util.Map<java.lang.Long, common.task.Task>.remove(event.getTaskThread().getTaskId())"], "Fixed commit": "64d33bf10fb65b8a41292c0b63d46f926a22de7c", "Url": "https://api.github.com/repos/dshnightmare/DistributedFileSystem", "Date": "2014-07-05T16:49:02Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((receivedMsg) == (-1)) { keepReading = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/3384/buggy-version/src.ar.edu.it.itba.pdc.v2.implementations.proxy.AnalyzerImp.java", "BodyUseAPI": [], "Fixed commit": "45191b4f4c1d40bcab1e295dd335f99c552962a4", "Url": "https://api.github.com/repos/mdesanti/TPE-Protos", "Date": "2012-06-01T23:40:18Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ar.edu.it.itba.pdc.v2.interfaces.HTTPHeaders.getHeader(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (length != null) { length = length.replaceAll(\" \", \"\"); if (length.equals(\"0\")) { keepReading = false; }else keepReading = decoder.keepReading(); }else keepReading = decoder.keepReading();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/3384/buggy-version/src.ar.edu.it.itba.pdc.v2.implementations.proxy.AnalyzerImp.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "45191b4f4c1d40bcab1e295dd335f99c552962a4", "Url": "https://api.github.com/repos/mdesanti/TPE-Protos", "Date": "2012-06-01T23:40:18Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mage.game.Game.getPlayer(java.util.UUID)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (player == null) { mage.server.game.GameController.logger.fatal((\"Player not found - playerId: \" + playerId)); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/8889/buggy-version/Mage.Server.src.main.java.mage.server.game.GameController.java", "BodyUseAPI": [], "Fixed commit": "bdde1bd45fa0072777fd1c079bb9eda63b82f3b9", "Url": "https://api.github.com/repos/magefree/mage", "Date": "2014-08-27T20:24:42Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.concurrent.ConcurrentHashMap<java.util.UUID, java.util.UUID>.get(java.util.UUID)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((userId == null) || (playerId == null)) { mage.server.game.GameController.logger.fatal(\"Join game failed!\"); mage.server.game.GameController.logger.fatal((\"- gameId: \" + (game.getId()))); mage.server.game.GameController.logger.fatal((\"- userId: \" + userId)); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/8889/buggy-version/Mage.Server.src.main.java.mage.server.game.GameController.java", "BodyUseAPI": ["org.apache.log4j.Logger.fatal(java.lang.String)"], "Fixed commit": "bdde1bd45fa0072777fd1c079bb9eda63b82f3b9", "Url": "https://api.github.com/repos/magefree/mage", "Date": "2014-08-27T20:24:42Z"},
{"Line": "=>285", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.concurrent.ConcurrentHashMap<java.util.UUID, mage.server.game.GameSession>.get(java.util.UUID)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (gameSession == null) { gameSession = new mage.server.game.GameSession(game, userId, playerId, useTimeout); gameSessions.put(playerId, gameSession); gameSession.setUserData(user.getUserData()); joinType = \"joined\"; }else { joinType = \"rejoined\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/8889/buggy-version/Mage.Server.src.main.java.mage.server.game.GameController.java", "BodyUseAPI": [], "Fixed commit": "bdde1bd45fa0072777fd1c079bb9eda63b82f3b9", "Url": "https://api.github.com/repos/magefree/mage", "Date": "2014-08-27T20:24:42Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((_text) != null) { _load(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/6300/buggy-version/eb4j-core.src.main.java.fuku.eb4j.SubBook.java", "BodyUseAPI": [], "Fixed commit": "28a903bf28c7f9aa9a65f5d3881a39c629176bf7", "Url": "https://api.github.com/repos/amake/eb4j", "Date": "2016-05-22T13:20:10Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (dataDir != null) { _text = new fuku.eb4j.io.EBFile(dataDir, fname[0], format[0]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/6300/buggy-version/eb4j-core.src.main.java.fuku.eb4j.SubBook.java", "BodyUseAPI": [], "Fixed commit": "28a903bf28c7f9aa9a65f5d3881a39c629176bf7", "Url": "https://api.github.com/repos/amake/eb4j", "Date": "2016-05-22T13:20:10Z"},
{"Line": "=>453", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((peerReview.getCompletionDate()) != null) { peerReview.getCompletionDate().setErrors(new java.util.ArrayList<java.lang.String>()); if ((!(org.orcid.pojo.ajaxForm.PojoUtil.isEmpty(peerReview.getCompletionDate().getMonth()))) && (org.orcid.pojo.ajaxForm.PojoUtil.isEmpty(peerReview.getCompletionDate().getYear()))) { setError(peerReview.getCompletionDate(), \"common.dates.invalid\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/6633/buggy-version/orcid-web.src.main.java.org.orcid.frontend.web.controllers.PeerReviewsController.java", "BodyUseAPI": ["org.orcid.pojo.ajaxForm.PeerReviewForm.getCompletionDate()", "peerReview.getCompletionDate().getYear()", "org.orcid.pojo.ajaxForm.PojoUtil.isEmpty(peerReview.getCompletionDate().getYear())", "org.orcid.pojo.ajaxForm.PojoUtil.isEmpty(peerReview.getCompletionDate().getMonth())", "org.orcid.pojo.ajaxForm.PeerReviewForm.getCompletionDate()", "org.orcid.frontend.web.controllers.PeerReviewsController.setError(peerReview.getCompletionDate(),java.lang.String)", "peerReview.getCompletionDate().setErrors(java.util.ArrayList<java.lang.String>)", "org.orcid.pojo.ajaxForm.PeerReviewForm.getCompletionDate()", "org.orcid.pojo.ajaxForm.PeerReviewForm.getCompletionDate()", "peerReview.getCompletionDate().getMonth()"], "Fixed commit": "6e9502902044f7a782d89b3e7740c19124dac104", "Url": "https://api.github.com/repos/ORCID/ORCID-Source", "Date": "2015-04-20T20:03:34Z"},
{"Line": "=>422", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((model.getOrWhereList()) != null) && ((model.getOrWhereList().size()) == 1)) { wf1 = model.getOrWhereList().iterator().next(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/4828/buggy-version/rameses-osiris3-core2.src.com.rameses.osiris3.sql.AbstractSqlDialect.java", "BodyUseAPI": ["com.rameses.osiris3.sql.SqlDialectModel.getOrWhereList()", "model.getOrWhereList().iterator().next()", "model.getOrWhereList().iterator()"], "Fixed commit": "8d7c169c150a3a993c96bf320f33514f377e1923", "Url": "https://api.github.com/repos/ramesesinc/incubation", "Date": "2017-01-23T09:27:34Z"},
{"Line": "=>297", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<Library.Book>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((tempBook.getLastRented()) == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/8906/buggy-version/src.Library.Library.java", "BodyUseAPI": [], "Fixed commit": "de01ef6e412f5dd1105b1ad5bfa241dc78fbe39d", "Url": "https://api.github.com/repos/l0huan08/Library", "Date": "2014-08-15T14:27:36Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((MY_ID) == null) || (MY_ID.equals(\"\"))) { android.widget.Toast.makeText(getApplicationContext(), \"Unable to use service - Please try to re-configure\", Toast.LENGTH_SHORT).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/5219/buggy-version/iBeaconSocializer.src.com.spartanapps.ibeaconsocializer.UpdateActivity.java", "BodyUseAPI": [], "Fixed commit": "22532436d9f18cd430c08e986c0dd36d76d57928", "Url": "https://api.github.com/repos/guts2014/BufferOverflowCyprus", "Date": "2014-10-11T21:58:16Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isInInterval(log.getEndTime(), intervalStartTime, intervalEndTime)) { timeLogInInterval.setEndTime(log.getEndTime()); }else { timeLogInInterval.setEndTime(getLogEndtimeReplacement(intervalEndTime)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/4359/buggy-version/trambu-core.src.main.java.be.doji.productivity.trambucore.model.tracker.ActivityLog.java", "BodyUseAPI": ["be.doji.productivity.trambucore.model.tracker.TimeLog.getEndTime()", "be.doji.productivity.trambucore.model.tracker.TimeLog.setEndTime(log.getEndTime())", "be.doji.productivity.trambucore.model.tracker.TimeLog.setEndTime(java.util.Date)", "be.doji.productivity.trambucore.model.tracker.ActivityLog.getLogEndtimeReplacement(java.util.Date)"], "Fixed commit": "11a6f1f4cf8e915dd8b2c95e60b71eb7055317b8", "Url": "https://api.github.com/repos/justDoji/TrackMeUp", "Date": "2017-11-27T21:48:57Z"},
{"Line": "=>1869", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ofbiz.entity.Delegator.findByAnd(java.lang.String,org.ofbiz.base.util.UtilMisc.toMap(\"productCategoryId\", seasonGroup.get(\"productCategoryId\")))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (index == (seasonDSProductList.size())) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/2287/buggy-version/hot-deploy.zuczugcommon.src.com.zuczug.product.ZuczugProductUtils.java", "BodyUseAPI": [], "Fixed commit": "820739245184dcf3d858ff64e6d04e99cff36d72", "Url": "https://api.github.com/repos/zuczug/bluemountain", "Date": "2016-12-08T07:47:36Z"},
{"Line": "=>1847", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ofbiz.entity.util.EntityUtil.getFirst(delegator.findByAnd(\"ProductAssoc\", org.ofbiz.base.util.UtilMisc.toMap(\"productId\", seasonDSProductList.get(index).get(\"productId\"), \"productAssocTypeId\", \"UNIQUE_ITEM\")))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (org.ofbiz.base.util.UtilValidate.isNotEmpty(realProduct)) { releaseDate = ((java.sql.Timestamp) (realProduct.get(\"releaseDate\"))); }else { releaseDate = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/2287/buggy-version/hot-deploy.zuczugcommon.src.com.zuczug.product.ZuczugProductUtils.java", "BodyUseAPI": ["org.ofbiz.entity.GenericValue.get(java.lang.String)"], "Fixed commit": "820739245184dcf3d858ff64e6d04e99cff36d72", "Url": "https://api.github.com/repos/zuczug/bluemountain", "Date": "2016-12-08T07:47:36Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((currentFrame) - 1) >= (logo.Timer.FRAME_COUNT)) { currentFrame %= logo.Timer.FRAME_COUNT; if ((currentFrame) == 0) currentFrame = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/8963/buggy-version/PUG.src.logo.Timer.java", "BodyUseAPI": [], "Fixed commit": "7dbd75ee8e09405ed3d11c1542315195c5fbc6dd", "Url": "https://api.github.com/repos/vitorfabreeltermann/PUG", "Date": "2017-05-06T14:54:50Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (main.util.Controller.rects.get(index).hasChildren()) { for (int r : main.util.Controller.rects.get(index).childrenIDs) { if (r != 0) { main.util.Controller.getRectByID(r).parentID = 0; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/5783/buggy-version/GUI.src.main.util.Controller.java", "BodyUseAPI": ["java.util.ArrayList<main.block.DraggableRect>.get(int)"], "Fixed commit": "76fefca2789fde6ec5e10d89228df9777e179a99", "Url": "https://api.github.com/repos/MLAQTS/Java-Interface", "Date": "2015-11-23T01:15:57Z"},
{"Line": "=>296", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (main.util.Controller.getRectByID(r.parentID).hasChildren()) { main.util.Controller.getRectByID(r.parentID).deleteChild(r.id); main.util.Controller.getRectByID(r.parentID).update(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/5783/buggy-version/GUI.src.main.util.Controller.java", "BodyUseAPI": ["main.block.DraggableRect.deleteChild(r.id)", "main.util.Controller.getRectByID(r.parentID)", "main.util.Controller.getRectByID(r.parentID)", "main.block.DraggableRect.update()"], "Fixed commit": "76fefca2789fde6ec5e10d89228df9777e179a99", "Url": "https://api.github.com/repos/MLAQTS/Java-Interface", "Date": "2015-11-23T01:15:57Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.alibaba.fastjson.parser.DefaultJSONParser.getLexer()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((lexer.token()) == (com.alibaba.fastjson.parser.JSONToken.RBRACE)) { lexer.nextToken(); return map; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/4434/buggy-version/src.main.java.com.alibaba.fastjson.parser.deserializer.DefaultObjectDeserializer.java", "BodyUseAPI": ["com.alibaba.fastjson.parser.JSONScanner.nextToken()"], "Fixed commit": "f9f862357372a400c441a5974e4987e3d649dca9", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2013-04-25T13:25:36Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((getFarm()) >= (b.getFarmPer())) { return canUpgrade(b); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/894/buggy-version/src.frame.logic.GameResource.java", "BodyUseAPI": ["frame.logic.GameResource.canUpgrade(object.structure.Base)"], "Fixed commit": "e9c5fca42b24e468991f810703fafce605318ac3", "Url": "https://api.github.com/repos/neungkl/last-wish", "Date": "2015-12-15T21:02:19Z"},
{"Line": "=>451", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Enumeration.nextElement()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((entry.getName().startsWith(\".\")) || (entry.getName().startsWith(\"__\"))) && skipHiddenFiles) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/8387/buggy-version/src.java.org.infoglue.cms.io.FileHelper.java", "BodyUseAPI": [], "Fixed commit": "c7d887588ca28b81b08b0f42fd2cd242109fb81a", "Url": "https://api.github.com/repos/bogeblad/infoglue", "Date": "2011-08-25T21:03:08Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((manager.getLoader(123)) == null) { mLoader = manager.restartLoader(123, bundle, loader); }else { manager.getLoader(123).forceLoad(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/5769/buggy-version/src.net.getatraci.atraci.activities.PlayerFragment.java", "BodyUseAPI": ["android.app.LoaderManager.getLoader(int)", "manager.getLoader(123).forceLoad()", "android.app.LoaderManager.restartLoader(int,android.os.Bundle,net.getatraci.atraci.loaders.PlayerLoader)"], "Fixed commit": "498f29abd738b4138959bbb53351521e9e62eb97", "Url": "https://api.github.com/repos/SyNtheticNightmar3/Atraci-Android", "Date": "2014-10-26T18:27:07Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((ui.getInstanceFont()) == null) { txtQuery.addStyleName(\"default-query-font\"); }else { txtQuery.addStyleName(Helper.CORPUS_FONT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/3064/buggy-version/annis-gui.src.main.java.annis.gui.controlpanel.QueryPanel.java", "BodyUseAPI": [], "Fixed commit": "b45fa31f7ddd735497a44cbeb5d57f3e2671cc66", "Url": "https://api.github.com/repos/amir-zeldes/ANNIS", "Date": "2015-03-10T15:32:19Z"},
{"Line": "=>1746", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((dumpSource.indexOf(\"\\\" target=\\\"\")) > 0) { dumpSource = dumpSource.replaceAll(\"<a href=\\\"\", \"\"); dumpSource = dumpSource.substring(0, dumpSource.indexOf(\"\\\" target=\\\"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/5285/buggy-version/src.main.java.ohbot.OhBotController.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "06363deda7ce22bbd420d26128088fd494bbd3b8", "Url": "https://api.github.com/repos/ChonPiggy/OhBot", "Date": "2017-12-25T04:08:24Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (_latestPsiData != null) m_latestPsiData = new java.util.TreeMap(_latestPsiData); else m_latestPsiData = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/7554/buggy-version/app.src.main.java.com.stevenkester.psi_sg.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "332019d5ab373ddf130057dcb029ffc1ba062626", "Url": "https://api.github.com/repos/yulonglong/PSI-SG", "Date": "2016-09-06T16:23:04Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(pathToSrc.containsKey(javaPath))) { if (!(jd.core.FileSystem.isCaseSensitive())) { if (caseInsensitiveSet.containsIgnoreCase(javaPath)) { javaPath = caseInsensitiveSet.getNumberedName(javaPath); } } caseInsensitiveSet.add(javaPath); pathToSrc.put(javaPath, decompiler.decompile(jarPath, classPath)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/42/buggy-version/src.main.java.jd.core.Decompiler.java", "BodyUseAPI": ["jd.core.CaseInsensitiveFilePathSet.containsIgnoreCase(java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,decompiler.decompile(jarPath, classPath))", "jd.core.CaseInsensitiveFilePathSet.getNumberedName(java.lang.String)"], "Fixed commit": "98f6c31ec06828fa2c3c521bb1dd964794e27b5a", "Url": "https://api.github.com/repos/thorikawa/jd-core-java", "Date": "2013-12-10T01:41:01Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (text.getText().trim().equals(\"\")) { text.setText(\"0\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/5534/buggy-version/Calculator.java", "BodyUseAPI": ["javax.swing.JTextArea.setText(java.lang.String)"], "Fixed commit": "d889755cf14651dc9cbe1bdceca60b471a881866", "Url": "https://api.github.com/repos/dinesh333/Calculator", "Date": "2016-09-11T02:47:12Z"},
{"Line": "=>2523", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (invoiceMoney > 0) { dao.add(invoice, DBBean.SC_INVOICE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/2964/buggy-version/service.src.main.java.com.pms.service.service.impl.SalesContractServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "53d75aaefb4c2e5b4c1d2fdedb3e4b2dd0fc9b39", "Url": "https://api.github.com/repos/antme/pms", "Date": "2014-05-12T04:00:12Z"},
{"Line": "=>2304", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.pms.service.util.ApiUtil.isEmpty(scCode)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/2964/buggy-version/service.src.main.java.com.pms.service.service.impl.SalesContractServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "53d75aaefb4c2e5b4c1d2fdedb3e4b2dd0fc9b39", "Url": "https://api.github.com/repos/antme/pms", "Date": "2014-05-12T04:00:12Z"},
{"Line": "=>2534", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (payMoney > 0) { saveGetMoneyForSC(moneyObj); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/2964/buggy-version/service.src.main.java.com.pms.service.service.impl.SalesContractServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "53d75aaefb4c2e5b4c1d2fdedb3e4b2dd0fc9b39", "Url": "https://api.github.com/repos/antme/pms", "Date": "2014-05-12T04:00:12Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (question.contains(\"plus\")) { out = doAddition(question); }else if (question.contains(\"multiplied by\")) { out = doMultiplication(question); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/3746/buggy-version/extreme-startup-servers.java.src.main.java.QuestionAnswerer.java", "BodyUseAPI": ["java.lang.String.contains(java.lang.String)", "QuestionAnswerer.doAddition(java.lang.String)", "QuestionAnswerer.doMultiplication(java.lang.String)"], "Fixed commit": "addd219fc814cf6db9b206b85ebefea8ff354865", "Url": "https://api.github.com/repos/melonhead901/extreme-startup", "Date": "2016-11-04T23:23:32Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (filename.isEmpty()) { javafx.stage.FileChooser fileChooser = new javafx.stage.FileChooser(); fileChooser.setTitle(\"TODO\"); fileChooser.getExtensionFilters().addAll(new ExtensionFilter(\"Text Files\", \"*.txt\"), new ExtensionFilter(\"Image Files\", \"*.png\", \"*.jpg\", \"*.gif\"), new ExtensionFilter(\"Audio Files\", \"*.wav\", \"*.mp3\", \"*.aac\"), new ExtensionFilter(\"All Files\", \"*.*\")); java.io.File selectedFile = fileChooser.showSaveDialog(Main.primaryStage); }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/7923/buggy-version/src.Main.java", "BodyUseAPI": [], "Fixed commit": "aa61cf683950be2cb07f648050bb32a976372879", "Url": "https://api.github.com/repos/DanielChurch/RosenbrockFunctionApproximator", "Date": "2017-10-11T05:20:14Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(list.isEmpty())) { lastItem = list.remove(((list.size()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/6562/buggy-version/src.main.java.burrito.services.SearchEntry.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.remove(int)", "java.util.ArrayList<java.lang.String>.size()"], "Fixed commit": "e6a5f5d6254d4421187efd805db9025ea0ccce20", "Url": "https://api.github.com/repos/henricpersson/Burrito", "Date": "2012-05-02T11:51:08Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(lastItem.equals(\"\"))) { query.filter(\"tokens >=\", lastItem); query.filter(\"tokens <\", (lastItem + (java.lang.Character.MAX_VALUE))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/6562/buggy-version/src.main.java.burrito.services.SearchEntry.java", "BodyUseAPI": ["siena.Query<burrito.services.SearchEntry>.filter(java.lang.String,java.lang.String)", "siena.Query<burrito.services.SearchEntry>.filter(java.lang.String,java.lang.String)"], "Fixed commit": "e6a5f5d6254d4421187efd805db9025ea0ccce20", "Url": "https://api.github.com/repos/henricpersson/Burrito", "Date": "2012-05-02T11:51:08Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((players.playersLeft().size()) > 0) { players.playersLeft().get(0).giveCash(players.getPot()); winners.add(new poker.arturka.SendWinnerListCommand.Tuple(players.playersLeft().get(0).getId(), players.getPot())); }else { java.lang.Thread.currentThread().interrupt(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/4647/buggy-version/Poker.src.poker.arturka.Game.java", "BodyUseAPI": ["players.playersLeft().get(0).getId()", "players.playersLeft().get(int)", "players.playersLeft().get(0).giveCash(players.getPot())", "poker.arturka.Players.getPot()", "poker.arturka.Players.getPot()", "poker.arturka.Players.playersLeft()", "java.util.List<SendWinnerListCommand.Tuple>.add(poker.arturka.SendWinnerListCommand.Tuple)", "poker.arturka.Players.playersLeft()", "players.playersLeft().get(int)"], "Fixed commit": "75a1d8f4911ae3b9fbfa947bb42e74791cebbb66", "Url": "https://api.github.com/repos/Alekseylv/Poker-game", "Date": "2013-07-19T11:49:48Z"},
{"Line": "=>485", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getErrorCode()) == 45) { mpnStatusRetrieved = true; }else { android.util.Log.d(com.lightstreamer.demo.stocklistdemo_advanced.LightstreamerClient.TAG, (((\"Request refused: \" + (e.getErrorCode())) + \": \") + (e.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/8335/buggy-version/src.com.lightstreamer.demo.stocklistdemo_advanced.LightstreamerClient.java", "BodyUseAPI": ["android.util.Log.d(java.lang.String,(((\"Request refused: \" + (e.getErrorCode())) + \": \") + (e.getMessage())))", "com.lightstreamer.ls_client.PushUserException.getErrorCode()", "com.lightstreamer.ls_client.PushUserException.getMessage()"], "Fixed commit": "63e0111d5d57701a2dc68f92d65cae54189462c2", "Url": "https://api.github.com/repos/Weswit/Lightstreamer-example-MPNStockList-client-android", "Date": "2014-08-05T13:56:00Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (sd != null) { sd.setAdapter(adapter); sd.setCallback(new com.daprlabs.aaron.swipedeck.SwipeDeck.SwipeDeckCallback() { @java.lang.Override public void cardSwipedLeft(long positionInAdapter) { cardLeftSwipe(); android.util.Log.i(\"MainActivity\", (\"card was swiped left, position in adapter: \" + positionInAdapter)); } @java.lang.Override public void cardSwipedRight(long positionInAdapter) { cardRightSwipe(); android.util.Log.i(\"MainActivity\", (\"card was swiped right, position in adapter: \" + positionInAdapter)); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/5786/buggy-version/app.src.main.java.com.kardiga.nicolas.vinditindi.first_screen.presenter.FirstScreenPresenter.java", "BodyUseAPI": ["com.daprlabs.aaron.swipedeck.SwipeDeck.setAdapter(com.kardiga.nicolas.vinditindi.first_screen.adapters.SwipeDeckAdapter)", "com.daprlabs.aaron.swipedeck.SwipeDeck.setCallback(com.daprlabs.aaron.swipedeck.SwipeDeck.SwipeDeckCallback)"], "Fixed commit": "79cc791d28ccdb249b548f9a5ce32f49d113d0bf", "Url": "https://api.github.com/repos/mikola1122/VindiTindi", "Date": "2017-11-24T14:09:41Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((numberRooms) != null) { return numberRooms; }else return 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/1255/buggy-version/src.main.java.ch.unibe.ese.team1.controller.pojos.forms.PlaceAdForm.java", "BodyUseAPI": [], "Fixed commit": "aeff2d68dda2b541e2ad969c533a4affa041fda3", "Url": "https://api.github.com/repos/scg-unibe-ch/ese2016-team7", "Date": "2016-11-30T12:42:12Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((name) == null) { totalMicros += java.util.concurrent.TimeUnit.NANOSECONDS.toMicros(timer.getTotal()); count += timer.getCount(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/8158/buggy-version/core.src.main.java.org.glowroot.collector.AggregateTimer.java", "BodyUseAPI": [], "Fixed commit": "61b925c6bfc68acf0066546feef1b8e9e711a636", "Url": "https://api.github.com/repos/trask/glowroot", "Date": "2015-06-20T19:02:40Z"},
{"Line": "=>610", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openlcb.cdi.impl.ConfigRepresentation.EventEntry.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (v != null) { lastVisibleValue = org.openlcb.Utilities.toHexDotsString(v.getContents()); }else { lastVisibleValue = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/6075/buggy-version/src.org.openlcb.cdi.impl.ConfigRepresentation.java", "BodyUseAPI": ["org.openlcb.Utilities.toHexDotsString(v.getContents())", "org.openlcb.EventID.getContents()"], "Fixed commit": "551550be09d7efd80db4dedb3cce857266632918", "Url": "https://api.github.com/repos/openlcb/OpenLCB_Java", "Date": "2016-11-21T21:54:46Z"},
{"Line": "=>1255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.matrix.androidsdk.MXDataHandler.getStore()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (null == store) { android.util.Log.e(org.matrix.androidsdk.MXSession.LOG_TAG, \"## getDirectChatRoomIdsList() : null store\"); return directChatRoomIdsList; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/8501/buggy-version/matrix-sdk.src.main.java.org.matrix.androidsdk.MXSession.java", "BodyUseAPI": [], "Fixed commit": "010b2de69e5322d5f2501b3371b4ef3ba36a04fc", "Url": "https://api.github.com/repos/matrix-org/matrix-android-sdk", "Date": "2016-11-23T12:15:51Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((converter) == null) { converter = storeMgr.getNucleusContext().getTypeManager().getAutoApplyTypeConverterForType(fieldType); if ((converter) == null) { throw new org.datanucleus.exceptions.NucleusUserException((\"Unable to find TypeConverter for converting \" + fieldType)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/8092/buggy-version/src.main.java.org.datanucleus.store.rdbms.mapping.java.TypeConverterMapping.java", "BodyUseAPI": [], "Fixed commit": "c0aee5d98a1b090b498e693dee8d12b246e625b4", "Url": "https://api.github.com/repos/datanucleus/datanucleus-rdbms", "Date": "2017-09-06T12:52:26Z"},
{"Line": "=>863", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (mcd == null) { if (!serialised) { org.datanucleus.store.types.converters.TypeConverter converter = storeMgr.getNucleusContext().getTypeManager().getAutoApplyTypeConverterForType(javaType); if (converter != null) { return new org.datanucleus.store.rdbms.mapping.MappingManagerImpl.MappingConverterDetails(org.datanucleus.store.rdbms.mapping.java.TypeConverterMapping.class, converter); } } NucleusLogger.PERSISTENCE.warn(((\"Trying to find mapping for type \" + (javaType.getName())) + \" but none found, and only serialised available! Falling back to SerialisedMapping\")); return new org.datanucleus.store.rdbms.mapping.MappingManagerImpl.MappingConverterDetails(org.datanucleus.store.rdbms.mapping.java.SerialisedMapping.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/8092/buggy-version/src.main.java.org.datanucleus.store.rdbms.mapping.MappingManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "c0aee5d98a1b090b498e693dee8d12b246e625b4", "Url": "https://api.github.com/repos/datanucleus/datanucleus-rdbms", "Date": "2017-09-06T12:52:26Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((projection.epsgCode) == 0) { if (isLocalsystem) projection.epsgCode = projection.getEpsgcode(epsg_localsystem); else projection.epsgCode = epsg_localsystem; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/5159/buggy-version/src.CacheWolf.navi.ProjectedPoint.java", "BodyUseAPI": [], "Fixed commit": "c7cb8ba872b01ccad0d7a3c3cbe163f31f30b54c", "Url": "https://api.github.com/repos/cachewolf/cachewolf", "Date": "2012-04-01T17:06:51Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["br.com.webgoal.sharedshoppinglist.actions.ItemRemoveAction.itemFromList(java.util.ArrayList<br.com.webgoal.sharedshoppinglist.Item>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (index > 0) items.remove(index);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/3063/buggy-version/app.src.main.java.br.com.webgoal.sharedshoppinglist.actions.ItemRemoveAction.java", "BodyUseAPI": ["java.util.ArrayList<br.com.webgoal.sharedshoppinglist.Item>.remove(int)"], "Fixed commit": "674a4410bfcad9aceba51f3b20f044e56875855f", "Url": "https://api.github.com/repos/webgoal/SharedShoppingList", "Date": "2016-10-05T18:26:29Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.odoo.followup.orm.OModel.selectRowId(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (rel_id != (com.odoo.followup.orm.OModel.INVALID_ROW_ID)) recordValues.put(columnName, relModel.selectServerId(getInt(key))); else recordValues.put(columnName, false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/8722/buggy-version/app.src.main.java.com.odoo.followup.orm.data.ListRow.java", "BodyUseAPI": [], "Fixed commit": "a2778066c042d683e6eab8322d9ae8347cd6e7b6", "Url": "https://api.github.com/repos/odoo-mobile-intern/odoo-follow-up", "Date": "2017-03-02T09:07:51Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result != null) { com.amap.api.maps.model.LatLngBounds.Builder builer = new com.amap.api.maps.model.LatLngBounds.Builder(); markers = result; for (com.airAd.yaqinghui.business.model.LocMarker locMarker : result) { com.amap.api.maps.model.LatLng ll = new com.amap.api.maps.model.LatLng(locMarker.getLat(), locMarker.getLon()); builer.include(ll); aMap.addMarker(new com.amap.api.maps.model.MarkerOptions().position(ll).snippet(locMarker.getId()).title(locMarker.getName()).icon(com.amap.api.maps.model.BitmapDescriptorFactory.fromResource(R.drawable.surrounding_map_mark))); } aMap.moveCamera(com.amap.api.maps.CameraUpdateFactory.newLatLngBounds(builer.build(), 20)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/1534/buggy-version/src.com.airAd.yaqinghui.SurroundingActivity.java", "BodyUseAPI": [], "Fixed commit": "ac6cc01410ff1ba571cf537acba81512edcc7fe6", "Url": "https://api.github.com/repos/toby941/yaqing", "Date": "2013-07-23T22:21:19Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (savedInstanceState != null) { sort = savedInstanceState.getString(com.enthusiast94.reddit_reader.app.fragments.PostsFragment.SORT_BUNDLE_KEY); }else { sort = bundle.getString(com.enthusiast94.reddit_reader.app.fragments.PostsFragment.SORT_BUNDLE_KEY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/9096/buggy-version/frontend_android.app.src.main.java.com.enthusiast94.reddit_reader.app.fragments.PostsFragment.java", "BodyUseAPI": ["android.os.Bundle.getString(java.lang.String)"], "Fixed commit": "64ad7971ace255cb35cfd3378170cbe40a038472", "Url": "https://api.github.com/repos/enthusiast94/reddit-reader", "Date": "2015-09-11T03:29:33Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((aRuleTokens[(i + 1)].indexOf(':')) > 0) { m_srcPortFirst = java.lang.Integer.parseInt(aRuleTokens[(i + 1)].split(\":\")[0]); m_srcPortLast = java.lang.Integer.parseInt(aRuleTokens[(++i)].split(\":\")[1]); }else { m_srcPortFirst = java.lang.Integer.parseInt(aRuleTokens[(++i)]); m_srcPortLast = m_srcPortFirst; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/1444/buggy-version/kura.org.eclipse.kura.linux.net.src.main.java.org.eclipse.kura.linux.net.iptables.NatPreroutingChainRule.java", "BodyUseAPI": [], "Fixed commit": "7c52f41a87706e47676525b17831aa7d6ef45c16", "Url": "https://api.github.com/repos/eclipse/kura", "Date": "2016-01-15T23:00:12Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.kura.linux.net.iptables.NatPreroutingChainRule.getPermittedNetwork()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (permittedNetwork == null) { permittedNetwork = \"0.0.0.0\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/1444/buggy-version/kura.org.eclipse.kura.linux.net.src.main.java.org.eclipse.kura.linux.net.iptables.LinuxFirewall.java", "BodyUseAPI": [], "Fixed commit": "7c52f41a87706e47676525b17831aa7d6ef45c16", "Url": "https://api.github.com/repos/eclipse/kura", "Date": "2016-01-15T23:00:12Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((natPreroutingChainRule.getSrcPortFirst()) > 0) && ((natPreroutingChainRule.getSrcPortFirst()) <= (natPreroutingChainRule.getSrcPortLast()))) { java.lang.StringBuilder sbSport = new java.lang.StringBuilder().append(natPreroutingChainRule.getSrcPortFirst()).append(':').append(natPreroutingChainRule.getSrcPortLast()); sport = sbSport.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/1444/buggy-version/kura.org.eclipse.kura.linux.net.src.main.java.org.eclipse.kura.linux.net.iptables.LinuxFirewall.java", "BodyUseAPI": ["org.eclipse.kura.linux.net.iptables.NatPreroutingChainRule.getSrcPortFirst()", "java.lang.StringBuilder.append(natPreroutingChainRule.getSrcPortFirst())", "org.eclipse.kura.linux.net.iptables.NatPreroutingChainRule.getSrcPortLast()", "new java.lang.StringBuilder().append(natPreroutingChainRule.getSrcPortFirst()).append(':').append(natPreroutingChainRule.getSrcPortLast())", "java.lang.StringBuilder.append(char)"], "Fixed commit": "7c52f41a87706e47676525b17831aa7d6ef45c16", "Url": "https://api.github.com/repos/eclipse/kura", "Date": "2016-01-15T23:00:12Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getIntent().getSerializableExtra(com.indragie.cmput301as1.EXTRA_EXPENSE_ITEM)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((item.getReceipt()) != null) { receiptFileUri = android.net.Uri.parse(item.getReceipt()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/9092/buggy-version/Team9Project.src.com.indragie.cmput301as1.ExpenseItemEditActivity.java", "BodyUseAPI": ["com.indragie.cmput301as1.ExpenseItem.getReceipt()", "android.net.Uri.parse(item.getReceipt())"], "Fixed commit": "edc440f6aacb02ac4eb22b3eb6b9ebf2692c4cc9", "Url": "https://api.github.com/repos/CMPUT301W15T09/Team9Project", "Date": "2015-03-16T05:46:51Z"},
{"Line": "=>950", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((roleInstance.container) != null) { roleHistory.onFailedContainer(roleInstance.container, shortLived); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/708/buggy-version/hoya-core.src.main.java.org.apache.hadoop.hoya.yarn.appmaster.state.AppState.java", "BodyUseAPI": ["org.apache.hadoop.hoya.yarn.appmaster.state.RoleHistory.onFailedContainer(roleInstance.container,boolean)"], "Fixed commit": "e6a4c9317da885a41726cbc1523bd7c63fbceebd", "Url": "https://api.github.com/repos/hortonworks/hoya", "Date": "2014-01-03T22:55:45Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (removeRealm.equals(\"true\")) { user = getUser(remoteuser.split(\"@\")[0]); anguswarren.jira.RemoteUserJiraAuth.log.debug(\"Removing realm from username\"); }else if (removeRealm.equals(\"false\")) { user = getUser(remoteuser); anguswarren.jira.RemoteUserJiraAuth.log.debug(\"Keep realm in username\"); }else { anguswarren.jira.RemoteUserJiraAuth.log.warn(\"Invalid value for property removeRealm, using true as default\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/6516/buggy-version/RemoteUserJiraAuth.src.main.java.anguswarren.jira.RemoteUserJiraAuth.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "00b5bb2279f47c2591703f19bde78c495b0d911d", "Url": "https://api.github.com/repos/petr-klemsinsky/remoteuserauth", "Date": "2017-02-21T08:15:19Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((entry.getValue().getId()) == 0) { int versionId = versionDao.insertRequisitionVersion(entry.getValue()); lineItemDao.insertVersionLineItems(entry.getValue(), versionId); requisitionId = saveRequisitionInfo(requisition, versionId); historyDao.insertRequisitionHistory(requisitionId, versionId, entry.getKey()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/8001/buggy-version/ess-supply.src.main.java.gov.nysenate.ess.supply.requisition.dao.SqlRequisitionDao.java", "BodyUseAPI": ["gov.nysenate.ess.supply.requisition.dao.SqlRequisitionVersionDao.insertRequisitionVersion(entry.getValue())", "java.util.Map.Entry<java.time.LocalDateTime, gov.nysenate.ess.supply.requisition.RequisitionVersion>.getValue()", "java.util.Map.Entry<java.time.LocalDateTime, gov.nysenate.ess.supply.requisition.RequisitionVersion>.getValue()", "gov.nysenate.ess.supply.requisition.dao.SqlRequisitionHistoryDao.insertRequisitionHistory(int,int,entry.getKey())", "gov.nysenate.ess.supply.requisition.dao.SqlLineItemDao.insertVersionLineItems(entry.getValue(),int)", "java.util.Map.Entry<java.time.LocalDateTime, gov.nysenate.ess.supply.requisition.RequisitionVersion>.getKey()"], "Fixed commit": "2c5c9172e7c049c089d4622ae14f7c90b3161858", "Url": "https://api.github.com/repos/nysenate/Employee-Self-Service", "Date": "2016-06-06T19:14:41Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(newFile.exists())) { newFile.createNewFile(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/7048/buggy-version/src.main.java.net.umar.chat.server.Client.java", "BodyUseAPI": ["java.io.File.createNewFile()"], "Fixed commit": "c9bd69ac1a3ac21f803bb05e40a8d0a2891d9cdc", "Url": "https://api.github.com/repos/umarazhar/Chat-Program", "Date": "2014-04-13T14:17:46Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((((extension.equalsIgnoreCase(\"jpg\")) || (extension.equalsIgnoreCase(\"jpeg\"))) || (extension.equalsIgnoreCase(\"png\"))) || (extension.equalsIgnoreCase(\"bmp\")))) { request.setAttribute(\"fileMessage\", \"File image not supported. JPG, JPEG, PNG, BMP only.\"); model.setViewName(\"hotelAdd\"); return model; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/2994/buggy-version/src.java.com.hotelrating.controller.HotelController.java", "BodyUseAPI": [], "Fixed commit": "a4dd06ee72628fc7c0dc6226ebcca7b2757d3afe", "Url": "https://api.github.com/repos/MuhammadZabir/HotelRating", "Date": "2017-06-25T15:30:08Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(querySuffix.isEmpty())) { querySuffix = querySuffix.replaceFirst(OR_OPERATOR, \"\"); querySuffix = (\" AND (\" + querySuffix) + \")\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/875/buggy-version/components.device-mgt.org.wso2.carbon.device.mgt.core.src.main.java.org.wso2.carbon.device.mgt.core.search.mgt.impl.QueryBuilderImpl.java", "BodyUseAPI": ["java.lang.String.replaceFirst(java.lang.String,java.lang.String)"], "Fixed commit": "9e4d84dfb2bf60666c5a6740eaca90ddd7018f42", "Url": "https://api.github.com/repos/Savidude/carbon-device-mgt", "Date": "2017-03-28T07:07:28Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (lastChest.getBlock().getRelative(BlockFace.DOWN).getType().equals(Material.AIR)) { lastChest.getBlock().getRelative(BlockFace.DOWN).setType(Material.GRASS); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/7490/buggy-version/src.net.komputerking.java.tendotjava.Main.java", "BodyUseAPI": ["lastChest.getBlock().getRelative(BlockFace.DOWN).setType(Material.GRASS)", "lastChest.getBlock().getRelative(BlockFace.DOWN)", "org.bukkit.Location.getBlock()"], "Fixed commit": "23bc0e49d590bb8da52ef627961b388f90e7b8b2", "Url": "https://api.github.com/repos/tenjavacontest/TheKomputerKing", "Date": "2013-12-07T19:24:12Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.lockingOverride) != lockingOverride) { if ((autoRotate()) && lockingOverride) { state.user.set(Orientation.NATURAL); device = Orientation.NATURAL; } this.lockingOverride = lockingOverride; reportChange(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/578/buggy-version/app.src.main.java.samuelpalmer.sensorautorotation.processes.service.OrientationCalculator.java", "BodyUseAPI": [], "Fixed commit": "7f9a5191ae38ab70b6346e5408dcd907a7735a51", "Url": "https://api.github.com/repos/sampalmer/sideways-mode", "Date": "2015-09-21T22:20:16Z"},
{"Line": "=>533", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.taobao.tmts.framework.utils.ViewUtils.mCurrentapiVersion) < 17) { instanceField = com.taobao.tmts.framework.utils.ViewUtils.windowManager.getDeclaredField(\"mWindowManager\"); }else { instanceField = com.taobao.tmts.framework.utils.ViewUtils.windowManager.getDeclaredField(\"sDefaultWindowManager\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/8982/buggy-version/Tmts_Java.src.com.taobao.tmts.framework.utils.ViewUtils.java", "BodyUseAPI": [], "Fixed commit": "741981479d11166535c2175967d786f7981e79cc", "Url": "https://api.github.com/repos/xinmeng2011/Android-automation", "Date": "2013-12-18T07:23:42Z"},
{"Line": "=>507", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((com.taobao.tmts.framework.utils.ViewUtils.mCurrentapiVersion) < 17) { com.taobao.tmts.framework.utils.ViewUtils.windowManager = java.lang.Class.forName(\"android.view.WindowManagerImpl\"); }else { com.taobao.tmts.framework.utils.ViewUtils.windowManager = java.lang.Class.forName(\"android.view.WindowManagerGlobal\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/8982/buggy-version/Tmts_Java.src.com.taobao.tmts.framework.utils.ViewUtils.java", "BodyUseAPI": [], "Fixed commit": "741981479d11166535c2175967d786f7981e79cc", "Url": "https://api.github.com/repos/xinmeng2011/Android-automation", "Date": "2013-12-18T07:23:42Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((controlUnit.getPc()) < (lastPc)) { lastPc = (controlUnit.getPc()) - 1; runUntilNextBreakpoint(); break; }else { lastPc = controlUnit.getPc(); step(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/3462/buggy-version/NoBeardProject.src.main.java.machine.NoBeardMachine.java", "BodyUseAPI": ["machine.ControlUnit.getPc()", "machine.ControlUnit.getPc()"], "Fixed commit": "8f6ba1b70e0aecb85cef43864dcd7afe3a0c7ef5", "Url": "https://api.github.com/repos/Bauepete/no-beard", "Date": "2017-08-05T12:46:34Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((controlUnit.getPc()) < (lastPc)) { lastPc = (controlUnit.getPc()) - 1; runUntilNextBreakpoint(); break; }else { lastPc = controlUnit.getPc(); step(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/3462/buggy-version/NoBeardProject.src.main.java.machine.NoBeardMachine.java", "BodyUseAPI": ["machine.ControlUnit.getPc()", "machine.ControlUnit.getPc()"], "Fixed commit": "8f6ba1b70e0aecb85cef43864dcd7afe3a0c7ef5", "Url": "https://api.github.com/repos/Bauepete/no-beard", "Date": "2017-08-05T12:46:34Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(this.perfReportDataHolder.getValue(symbol, this.performanceEventsHolder.getInstructionCountEvent()).equalsIgnoreCase(\"0.0\"))) { out.append(new java.math.BigDecimal((((java.lang.Float.parseFloat(this.perfReportDataHolder.getValue(symbol, event))) * (java.lang.Math.pow(10, 9))) / (java.lang.Float.parseFloat(this.perfReportDataHolder.getValue(symbol, this.performanceEventsHolder.getInstructionCountEvent()))))).setScale(4, java.math.RoundingMode.CEILING).toPlainString()); }else { out.append(org.vimarsha.utils.impl.PropertiesLoader.getInstance().getMissingValueIndicator()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/3872/buggy-version/src.main.java.org.vimarsha.formatter.impl.PerfReportArffDataWriter.java", "BodyUseAPI": ["java.lang.Float.parseFloat(this.perfReportDataHolder.getValue(symbol, event))", "java.math.BigDecimal.toPlainString()", "java.lang.Float.parseFloat(this.perfReportDataHolder.getValue(symbol, this.performanceEventsHolder.getInstructionCountEvent()))", "org.vimarsha.utils.impl.PerfReportDataHolder.getValue(java.lang.String,this.performanceEventsHolder.getInstructionCountEvent())", "this.performanceEventsHolder.getInstructionCountEvent()", "java.math.BigDecimal.setScale(int,java.math.RoundingMode)", "org.vimarsha.utils.impl.PerfReportDataHolder.getValue(java.lang.String,java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "0168e74995235d0ebfc1944861beaf68c0c291a7", "Url": "https://api.github.com/repos/sunimalr/vimarsha", "Date": "2013-12-06T09:53:42Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(url.contains(\"http://\"))) || (!(url.contains(\"https://\")))) { url = \"https://\" + url; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/4424/buggy-version/app.src.main.java.me.ccrama.redditslide.util.TitleExtractor.java", "BodyUseAPI": [], "Fixed commit": "0bc1a82da3c10b76c229f52851e3cb6af42f377e", "Url": "https://api.github.com/repos/Nxt3/Slide", "Date": "2016-04-10T21:40:36Z"},
{"Line": "=>332", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((p2.getHP()) <= 0) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/6541/buggy-version/Stuyablo.java", "BodyUseAPI": [], "Fixed commit": "e5a16f56dbe5b2afd6ee3a28c23c5451b6de34ad", "Url": "https://api.github.com/repos/Weihwu/Stuyablo", "Date": "2014-11-15T04:45:11Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((valueDistribution) == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/499/buggy-version/src.main.java.com.github.TKnudsen.ComplexDataObject.data.uncertainty.string.LabelUncertainty.java", "BodyUseAPI": [], "Fixed commit": "142f968d52e6b6d0e12b5ea3aaec562b52c5059a", "Url": "https://api.github.com/repos/TKnudsen/ComplexDataObject", "Date": "2017-09-07T16:37:17Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getRoom().findItem(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (inventory.addItem(item)) { getRoom().removeItem(item); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/8738/buggy-version/src.com.ioopm.Player.java", "BodyUseAPI": ["getRoom().removeItem(com.ioopm.Item)"], "Fixed commit": "31c980df2d1e401f572edeb7e75dbcdf08514467", "Url": "https://api.github.com/repos/OskarPersson/mud", "Date": "2014-11-13T22:05:38Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((MainGUI.uiSettings) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/7253/buggy-version/src.us.plxhack.MEH.UI.PermissionTilePanel.java", "BodyUseAPI": [], "Fixed commit": "f5c829047528e107f3aeb4fa4ec98fa5ffec66d6", "Url": "https://api.github.com/repos/shinyquagsire23/MEH", "Date": "2014-02-22T10:21:21Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(chunks.isEmpty())) { try { java.util.Map<com.hazelcast.nio.serialization.Data, java.lang.Object> chunkedKeys; final java.util.concurrent.atomic.AtomicInteger checkIfMapLoaded = new java.util.concurrent.atomic.AtomicInteger(chunks.size()); while ((chunkedKeys = chunks.poll()) != null) { nodeEngine.getExecutionService().submit(\"hz:map-load\", new com.hazelcast.map.DefaultRecordStore.MapLoadAllTask(chunkedKeys, checkIfMapLoaded)); } } catch (java.lang.Throwable t) { throw com.hazelcast.util.ExceptionUtil.rethrow(t); } }else { loaded.set(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/2136/buggy-version/hazelcast.src.main.java.com.hazelcast.map.DefaultRecordStore.java", "BodyUseAPI": [], "Fixed commit": "aa1241454b68a46707fd203f40ff57cc286ba4b3", "Url": "https://api.github.com/repos/lburgazzoli/hazelcast", "Date": "2013-11-07T19:36:54Z"},
{"Line": "=>285", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["br.edu.ifce.swappers.swappers.miscellaneous.utils.AndroidUtils.loadCoverPictureBase64(br.edu.ifce.swappers.swappers.activities.MainActivity)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((coverPhotoBase64 != null) & (!(coverPhotoBase64.isEmpty()))) { this.userAccount.setBackground(br.edu.ifce.swappers.swappers.miscellaneous.utils.ImageUtil.stringToBitMap(coverPhotoBase64)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/6605/buggy-version/app.src.main.java.br.edu.ifce.swappers.swappers.activities.MainActivity.java", "BodyUseAPI": ["it.neokree.materialnavigationdrawer.elements.MaterialAccount.setBackground(br.edu.ifce.swappers.swappers.miscellaneous.utils.ImageUtil.stringToBitMap(coverPhotoBase64))", "br.edu.ifce.swappers.swappers.miscellaneous.utils.ImageUtil.stringToBitMap(java.lang.String)"], "Fixed commit": "0935c8ddaf3ae6c30e3e198d60ac0289b12d6e4b", "Url": "https://api.github.com/repos/francisceioseph/Swappers", "Date": "2015-11-14T17:54:02Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fm.jiecao.jcvideoplayer_lib.JCMediaManager.intance().listener) == (this)) { fm.jiecao.jcvideoplayer_lib.JCMediaManager.intance().mediaPlayer.stop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/5909/buggy-version/jcvideoplayer-lib.src.main.java.fm.jiecao.jcvideoplayer_lib.JCAbstractVideoPlayer.java", "BodyUseAPI": [], "Fixed commit": "e68560c688b1a5b39d0ac5b5647da13cbbc3584c", "Url": "https://api.github.com/repos/lipangit/JiaoZiVideoPlayer", "Date": "2016-04-24T09:36:09Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((light.name) == null) return 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/1807/buggy-version/hue2.src.main.java.nl.q42.huelimitededition.Util.java", "BodyUseAPI": [], "Fixed commit": "b8f081087f99d19a7880f2219ef4c64a682ba1e5", "Url": "https://api.github.com/repos/Q42/hue2", "Date": "2014-01-27T17:05:25Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(pluginLoader.unloadPlugin(p.getInstance()))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/6897/buggy-version/source.cordwood-plugin.src.main.java.ren.hankai.cordwood.plugin.support.DefaultPluginManager.java", "BodyUseAPI": [], "Fixed commit": "8f499b3f60c9c8a128d2a0fedd37ad182c18409d", "Url": "https://api.github.com/repos/hankai520/cordwood", "Date": "2017-01-07T07:58:15Z"},
{"Line": "=>276", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (letter.isSelected()) { button.setBackground(getResources().getDrawable(R.drawable.letter_button_selected)); button.setTextColor(getResources().getColor(R.color.beige)); }else { button.setBackground(getResources().getDrawable(R.drawable.letter_button_unselected)); button.setTextColor(getResources().getColor(R.color.red)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/6208/buggy-version/app.src.main.java.anabalica.github.io.meowletters.GameActivity.java", "BodyUseAPI": [], "Fixed commit": "3477a7b97c117bbc7a88c1c84748fca83ac45ff3", "Url": "https://api.github.com/repos/ana-balica/meow_letters", "Date": "2015-01-20T09:16:45Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((in.getNodeType()) != (value.getNodeType())) || ((in.isBoolean()) && ((in.asBoolean()) != (value.asBoolean())))) { throw net.thisptr.jackson.jq.exception.JsonQueryTypeException.format(\"%s (%s) and %s (%s) cannot have their containment checked\", in.getNodeType(), in, value.getNodeType(), value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/2799/buggy-version/jackson-jq.src.main.java.net.thisptr.jackson.jq.internal.functions.ContainsFunction.java", "BodyUseAPI": ["com.fasterxml.jackson.databind.JsonNode.getNodeType()", "com.fasterxml.jackson.databind.JsonNode.getNodeType()", "net.thisptr.jackson.jq.exception.JsonQueryTypeException.format(java.lang.String,in.getNodeType(),com.fasterxml.jackson.databind.JsonNode,value.getNodeType(),com.fasterxml.jackson.databind.JsonNode)"], "Fixed commit": "c5ba59a2ebe76bc5372e4005a343c80f67378449", "Url": "https://api.github.com/repos/eiiches/jackson-jq", "Date": "2016-10-22T14:46:23Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.server.management.PlayerChunkMap.getEntry(c.xPosition,c.zPosition)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (playerInstance != null) { playerInstance.sendPacket(PacketHandler.INSTANCE.getPacketFrom(message)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/2879/buggy-version/src.main.java.lumien.randomthings.network.MessageUtil.java", "BodyUseAPI": ["net.minecraft.server.management.PlayerChunkMapEntry.sendPacket(PacketHandler.INSTANCE.getPacketFrom(message))"], "Fixed commit": "4ad522bd993af59887d55b49d2a99f2515dbd52c", "Url": "https://api.github.com/repos/lumien231/Random-Things", "Date": "2016-07-19T12:12:23Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (permission_received_from_quorum.equals(obNode.qset)) { actualEnterCS(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/8562/buggy-version/Quorum.src.Application.ServerBase.java", "BodyUseAPI": [], "Fixed commit": "db6848e1887607f69d37fe95b2e0e3e6b686c007", "Url": "https://api.github.com/repos/xzb/adv_operating_system", "Date": "2016-10-21T16:31:51Z"},
{"Line": "=>1384", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.getAbsolutePath()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(mBrokenDecks.contains(path))) { mBrokenDecks.add(path); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/3947/buggy-version/src.com.ichi2.anki.DeckPicker.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "dc40c8eeae7a439d78275c4fce6520d060059e6e", "Url": "https://api.github.com/repos/nobnago/Anki-Android", "Date": "2011-10-10T21:11:22Z"},
{"Line": "=>725", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (f.getName().endsWith(\".js\")) lmodified = java.lang.Math.max(f.lastModified(), lmodified);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/9166/buggy-version/ew.levr.core.src.main.java.com.eduworks.levr.servlet.impl.LevrResolverServlet.java", "BodyUseAPI": ["java.lang.Math.max(long,long)", "java.io.File.lastModified()"], "Fixed commit": "f5dcd44a20659d6ffe016123e8ae8e14a7f65783", "Url": "https://api.github.com/repos/Eduworks/ew", "Date": "2017-05-10T00:00:58Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isChecked) answers.add(arg0.getText().toString()); else answers.remove(arg0.getText().toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/1469/buggy-version/QULQuestionnaire.src.de.tel.questionnaire.layout.CheckboxLayout.java", "BodyUseAPI": [], "Fixed commit": "7159de2d8e49a2990693d35a283510ec2da7ce53", "Url": "https://api.github.com/repos/QULab/QULQuestionnaire-Android", "Date": "2015-03-24T13:55:04Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((answers.size()) > 0) next.setVisibility(View.VISIBLE); else next.setVisibility(View.GONE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/1469/buggy-version/QULQuestionnaire.src.de.tel.questionnaire.layout.CheckboxLayout.java", "BodyUseAPI": [], "Fixed commit": "7159de2d8e49a2990693d35a283510ec2da7ce53", "Url": "https://api.github.com/repos/QULab/QULQuestionnaire-Android", "Date": "2015-03-24T13:55:04Z"},
{"Line": "=>336", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fieldAccess.getName().getIdentifier()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(name.equals(\"value\"))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/7855/buggy-version/WebParsers.src.edu.iastate.analysis.references.detection.JavascriptVisitor.java", "BodyUseAPI": [], "Fixed commit": "aec12133ddade68737a7e4f4cd35cd9c8a2e5e54", "Url": "https://api.github.com/repos/git1997/VarAnalysis", "Date": "2014-08-04T13:44:36Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((playerName) == null) { return \"\"; }else { return playerName; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/2212/buggy-version/AdvancedCore.src.com.Ben12345rocks.AdvancedCore.Objects.User.java", "BodyUseAPI": [], "Fixed commit": "ea7455d79b6c6858d3d3e56b94362e3e5515a421", "Url": "https://api.github.com/repos/Ben12345rocks/AdvancedCore", "Date": "2017-01-04T13:27:25Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.block.BlockBreakEvent.getBlock()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.newliberty.enderchests.PlayerListener.plugin.getOwnerName(block.getLocation(), event.getPlayer()).equalsIgnoreCase(\"null\")) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/4902/buggy-version/src.com.newliberty.enderchests.PlayerListener.java", "BodyUseAPI": [], "Fixed commit": "94aa66bfc5c6acdc09d65a56fa6530f1927a0d24", "Url": "https://api.github.com/repos/MrGorillaLogic/EnderChests", "Date": "2012-08-18T15:32:40Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (connDef instanceof org.jboss.jca.common.api.metadata.common.v12.CommonConnDef) { setAttribute(model, org.jboss.as.connector.subsystems.resourceadapters.Constants.CONNECTABLE, ((org.jboss.jca.common.api.metadata.common.v12.CommonConnDef) (connDef)).isConnectable()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/3652/buggy-version/connector.src.main.java.org.jboss.as.connector.subsystems.resourceadapters.IronJacamarResourceCreator.java", "BodyUseAPI": [], "Fixed commit": "ad5aaae95492e8ad597875128a791353eeec2d6b", "Url": "https://api.github.com/repos/kabir/wildfly", "Date": "2014-03-20T13:52:55Z"},
{"Line": "=>1497", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["se.krka.kahlua.stdlib.StringLib.MatchState.getCapture(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (o == null) { throw new se.krka.kahlua.stdlib.KahluaException(\"invalid capture index\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/3301/buggy-version/core.src.se.krka.kahlua.stdlib.StringLib.java", "BodyUseAPI": [], "Fixed commit": "0e6637e3de3c8c8c2ebc2648ff4ea15d14c8b272", "Url": "https://api.github.com/repos/krka/kahlua2", "Date": "2011-09-11T19:49:11Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((userChoice[valueIndex]) == 0) { userChoice[0] = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/6814/buggy-version/src.ErrorSimulatorThread.java", "BodyUseAPI": [], "Fixed commit": "dd81b9955e41237a2f4c3a4b265fd77a869d0ff8", "Url": "https://api.github.com/repos/severhussein/sysc3303", "Date": "2017-05-29T04:10:43Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((deltaX == 0) && (deltaY >= 0)) return java.lang.Double.POSITIVE_INFINITY;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/5875/buggy-version/src.Point.java", "BodyUseAPI": [], "Fixed commit": "c7aa2aefcff640b66e86ca399bf5160479b48cbd", "Url": "https://api.github.com/repos/vamdt/algorithms-programming", "Date": "2014-09-24T07:51:08Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((deltaX == 0) && (deltaY < 0)) return java.lang.Double.NEGATIVE_INFINITY;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/5875/buggy-version/src.Point.java", "BodyUseAPI": [], "Fixed commit": "c7aa2aefcff640b66e86ca399bf5160479b48cbd", "Url": "https://api.github.com/repos/vamdt/algorithms-programming", "Date": "2014-09-24T07:51:08Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((deltaY == 0) && (deltaX < 0)) return -0.0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/5875/buggy-version/src.Point.java", "BodyUseAPI": [], "Fixed commit": "c7aa2aefcff640b66e86ca399bf5160479b48cbd", "Url": "https://api.github.com/repos/vamdt/algorithms-programming", "Date": "2014-09-24T07:51:08Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((titleComponent) != null) { titleComponent.remove(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/3888/buggy-version/CodenameOne.src.com.codename1.ui.Toolbar.java", "BodyUseAPI": [], "Fixed commit": "9da13be8a2db90de09f0f46a12324c2408356efd", "Url": "https://api.github.com/repos/codenameone/CodenameOne", "Date": "2016-10-10T08:31:55Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (selectedKey.equals(\"end\")) s = init.endServ; else s = init.serviceMap.get(selectedKey);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/3796/buggy-version/src.wsc.WSCMutationPipeline.java", "BodyUseAPI": ["init.serviceMap.get(java.lang.String)"], "Fixed commit": "138d56c344969f8025af275482f93d4896e673c7", "Url": "https://api.github.com/repos/silvalex/MultiObjectiveFragmentedTreeNoClean", "Date": "2017-03-16T08:41:07Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSocket) != null) { try { mSocket.close(); } catch (java.io.IOException ex) { android.util.Slog.e(com.android.server.usb.UsbDebuggingManager.TAG, (\"Failed closing socket: \" + ex)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/8732/buggy-version/services.java.com.android.server.usb.UsbDebuggingManager.java", "BodyUseAPI": [], "Fixed commit": "c1f77c927247c1536ef642002540d8027920ceab", "Url": "https://api.github.com/repos/TEAM-Gummy/android_frameworks_base", "Date": "2014-05-02T02:36:59Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mOutputStream) != null) { try { mOutputStream.close(); } catch (java.io.IOException e) { android.util.Slog.e(com.android.server.usb.UsbDebuggingManager.TAG, (\"Failed closing output stream: \" + e)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/8732/buggy-version/services.java.com.android.server.usb.UsbDebuggingManager.java", "BodyUseAPI": [], "Fixed commit": "c1f77c927247c1536ef642002540d8027920ceab", "Url": "https://api.github.com/repos/TEAM-Gummy/android_frameworks_base", "Date": "2014-05-02T02:36:59Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.getAbsoluteFile()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(snapFile.exists())) { snapFile.mkdirs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/8035/buggy-version/metamorphosis-server.src.main.java.com.taobao.metamorphosis.server.assembly.EmbedZookeeperServer.java", "BodyUseAPI": ["java.io.File.mkdirs()"], "Fixed commit": "cf499f848ae429987d4a0e300cdf2344d872fb31", "Url": "https://api.github.com/repos/killme2008/Metamorphosis", "Date": "2013-03-12T13:46:49Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.getAbsoluteFile()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(logFile.exists())) { logFile.mkdirs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/8035/buggy-version/metamorphosis-server.src.main.java.com.taobao.metamorphosis.server.assembly.EmbedZookeeperServer.java", "BodyUseAPI": ["java.io.File.mkdirs()"], "Fixed commit": "cf499f848ae429987d4a0e300cdf2344d872fb31", "Url": "https://api.github.com/repos/killme2008/Metamorphosis", "Date": "2013-03-12T13:46:49Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.uci.ics.asterix.optimizer.rules.am.OptimizableOperatorSubTree.initFromSubTree(join.getInputs().get(0))", "edu.uci.ics.asterix.optimizer.rules.am.OptimizableOperatorSubTree.initFromSubTree(join.getInputs().get(1))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!leftSubTreeMatched) || (!rightSubTreeMatched)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/2484/buggy-version/asterix-algebra.src.main.java.edu.uci.ics.asterix.optimizer.rules.am.IntroduceJoinAccessMethodRule.java", "BodyUseAPI": [], "Fixed commit": "e90b893d20d51c426091a198483f036deadba889", "Url": "https://api.github.com/repos/sjaco002/incubator-asterixdb", "Date": "2015-07-09T23:05:16Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.hadoop.hdfs.DistributedFileSystem.getErasureCodingZoneInfo(item.path)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (ecZoneInfo != null) { out.println(ecZoneInfo.toString()); }else { out.println(((\"Path \" + (item.path)) + \" is not in EC zone\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/3152/buggy-version/hadoop-hdfs-project.hadoop-hdfs.src.main.java.org.apache.hadoop.hdfs.tools.erasurecode.ECCommand.java", "BodyUseAPI": ["org.apache.hadoop.hdfs.tools.erasurecode.ECCommand.GetECZoneInfoCommand.println(ecZoneInfo.toString())", "org.apache.hadoop.hdfs.protocol.ErasureCodingZoneInfo.toString()"], "Fixed commit": "bba15e06d29d79ab1c379f258e5efb13a1ea39ae", "Url": "https://api.github.com/repos/rahelehh/hadoop", "Date": "2015-05-13T07:13:39Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((children) != null) { children.remove(visitorIndex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/9095/buggy-version/avro-to-xml.src.main.java.mpigott.avro.xml.XmlSchemaDocumentNode.java", "BodyUseAPI": [], "Fixed commit": "678be2c16a1f6ad06be61ba7ef4e236c65c92036", "Url": "https://api.github.com/repos/mikepigott/xml-to-avro", "Date": "2014-08-01T14:48:07Z"},
{"Line": "=>552", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getResources()) != null) { mImageView.setBackgroundColor(getResources().getColor(R.color.black)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/8743/buggy-version/src.com.owncloud.android.ui.preview.PreviewImageFragment.java", "BodyUseAPI": [], "Fixed commit": "2d02e2bfc6dc389a89e43e26bfa8b5bae1b7c3a4", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2017-01-30T14:22:42Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((convertedFile) != null) { result.append(\", convertedFile: \"); result.append(convertedFile.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/1445/buggy-version/src.main.java.net.pms.dlna.DLNAMediaSubtitle.java", "BodyUseAPI": [], "Fixed commit": "3ac457c226246f376bf66ac19881c781a5b58f69", "Url": "https://api.github.com/repos/DigitalMediaServer/DigitalMediaServer", "Date": "2016-05-14T11:13:30Z"},
{"Line": "=>329", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(parser.isComplete())) { buffer.compact(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/2560/buggy-version/api.src.main.java.org.xnio.http.HttpUpgrade.java", "BodyUseAPI": [], "Fixed commit": "dfae3e965b2a68e09278967b89ab55f1d2d6c441", "Url": "https://api.github.com/repos/xnio/xnio", "Date": "2014-09-15T04:14:35Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tr.select(\"td.deck-col-card\").text()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (cardName.contains(\"//\")) cardName = cardName.substring(0, cardName.indexOf(\"//\")).trim();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/6930/buggy-version/src.org.magic.api.decksniffer.impl.MTGoldFishDeck.java", "BodyUseAPI": ["java.lang.String.indexOf(java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.String.trim()"], "Fixed commit": "896474a754cddd2b451319f92b68a1220a874704", "Url": "https://api.github.com/repos/nicho92/MtgDesktopCompanion", "Date": "2017-04-24T11:38:06Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tr.select(\"td.deck-col-card\").text()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((((cardName.trim().equalsIgnoreCase(\"Plains\")) || (cardName.trim().equalsIgnoreCase(\"Island\"))) || (cardName.trim().equalsIgnoreCase(\"Swamp\"))) || (cardName.trim().equalsIgnoreCase(\"Mountain\"))) || (cardName.trim().equalsIgnoreCase(\"Forest\"))) { ed = new org.magic.api.beans.MagicEdition(); ed.setId(org.magic.services.MTGControler.getInstance().get(\"default-land-deck\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/6930/buggy-version/src.org.magic.api.decksniffer.impl.MTGoldFishDeck.java", "BodyUseAPI": [], "Fixed commit": "896474a754cddd2b451319f92b68a1220a874704", "Url": "https://api.github.com/repos/nicho92/MtgDesktopCompanion", "Date": "2017-04-24T11:38:06Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((response.body().getText().get(i)) != \"\") && ((values.get(i)) != \"\")) { com.example.tesla.yandextranslator.Data.HistoryTranslate historyTranslate = new com.example.tesla.yandextranslator.Data.HistoryTranslate(values.get(i), response.body().getText().get(i), langs[0], langs[1], java.util.Calendar.getInstance().getTime(), false); historyTranslate.save(); ids.add(historyTranslate.getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/4253/buggy-version/app.src.main.java.com.example.tesla.yandextranslator.TranslateIntentService.java", "BodyUseAPI": ["response.body().getText().get(int)", "java.util.List<java.lang.String>.get(int)", "response.body().getText()", "retrofit2.Response<com.example.tesla.yandextranslator.ResponseTranslate>.body()"], "Fixed commit": "21fa0538a6a9126d447f8efe0753bfb02e973647", "Url": "https://api.github.com/repos/SuhanovDima/yandextranslator", "Date": "2017-04-24T12:06:40Z"},
{"Line": "=>276", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.xml.sax.Attributes.getLocalName(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((name.length()) == 0) { name = attributes.getQName(i); java.lang.System.out.println((\"+=*=+ Diagnostics: getLocalName is empty, getQName = \" + name)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/7658/buggy-version/daisy-engine.src.org.androiddaisyreader.model.NccSpecification.java", "BodyUseAPI": [], "Fixed commit": "dad196ec82f6b01cd021611c010fb0b81e76cfd9", "Url": "https://api.github.com/repos/julianharty/new-android-daisy-reader", "Date": "2013-09-11T08:45:43Z"},
{"Line": "=>871", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((lexer.token()) == (com.alibaba.druid.sql.parser.Token.CHECK)) { lexer.nextToken(); com.alibaba.druid.sql.ast.statement.SQLCheck check = new com.alibaba.druid.sql.ast.statement.SQLCheck(); check.setName(name); com.alibaba.druid.sql.ast.SQLExpr expr = this.exprParser.expr(); check.setExpr(expr); return check; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/7685/buggy-version/src.main.java.com.alibaba.druid.sql.dialect.mysql.parser.MySqlCreateTableParser.java", "BodyUseAPI": ["com.alibaba.druid.sql.dialect.mysql.parser.MySqlCreateTableParser.nextToken()"], "Fixed commit": "29adf584fb53110f42cfc8bc32d200dc7d3e3f49", "Url": "https://api.github.com/repos/FlakyTestDetection/druid", "Date": "2017-10-26T13:24:38Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(player.capabilities.isCreativeMode)) { if ((is.stackSize) > 1) { if (player.inventory.addItemStackToInventory(filled)) { player.inventory.setInventorySlotContents(player.inventory.currentItem, emasher.modules.ModTankDisplay.consumeItem(is)); } }else { player.inventory.setInventorySlotContents(player.inventory.currentItem, emasher.modules.ModTankDisplay.consumeItem(is)); player.inventory.setInventorySlotContents(player.inventory.currentItem, filled); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/6342/buggy-version/src.main.scala.emasher.modules.ModTankDisplay.java", "BodyUseAPI": ["player.inventory.setInventorySlotContents(player.inventory.currentItem,net.minecraft.item.ItemStack)", "player.inventory.setInventorySlotContents(player.inventory.currentItem,net.minecraft.item.ItemStack)", "player.inventory.addItemStackToInventory(net.minecraft.item.ItemStack)", "player.inventory.setInventorySlotContents(player.inventory.currentItem,net.minecraft.item.ItemStack)"], "Fixed commit": "d5e0019052dff74544fdb8ae90ca1b75a6bce414", "Url": "https://api.github.com/repos/Emasher/EmashersMods", "Date": "2015-07-31T23:55:21Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((recyclerView) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/6724/buggy-version/app.src.main.java.de.mytfg.apps.mytfg.logic.ExamLogic.java", "BodyUseAPI": [], "Fixed commit": "65a83297884acaa2f4b841081eb9efedda835443", "Url": "https://api.github.com/repos/MyTFG/mytfg-vplan-app", "Date": "2017-06-23T10:32:33Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (file.getName().isEmpty()) { throw new java.lang.IllegalArgumentException(\"name of file is empty\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/7541/buggy-version/app.src.main.java.at.aspg.muscletraining.util.IOUtil.java", "BodyUseAPI": [], "Fixed commit": "a5e9bc80e676c5c8e133a9dce4a94495dff1941d", "Url": "https://api.github.com/repos/verde1987/MuscleTraining", "Date": "2017-10-26T19:53:09Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.getParentFile()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (parentFile != null) { parentFile.mkdirs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/7541/buggy-version/app.src.main.java.at.aspg.muscletraining.util.IOUtil.java", "BodyUseAPI": ["java.io.File.mkdirs()"], "Fixed commit": "a5e9bc80e676c5c8e133a9dce4a94495dff1941d", "Url": "https://api.github.com/repos/verde1987/MuscleTraining", "Date": "2017-10-26T19:53:09Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState == null) new android.os.Handler().postDelayed(new java.lang.Runnable() { @java.lang.Override public void run() { android.content.Intent intent = new android.content.Intent(mdev.master_j.secondapp.SplashActivity.this, mdev.master_j.secondapp.HomeActivity.class); startActivity(intent); } }, mdev.master_j.secondapp.SplashActivity.SPLASH_RUNNING_TIME);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/6252/buggy-version/SecondApp.src.mdev.master_j.secondapp.SplashActivity.java", "BodyUseAPI": [], "Fixed commit": "ce4768597f7ce99299b1df2cd75d91b50698df96", "Url": "https://api.github.com/repos/masterj63/SecondApp", "Date": "2014-03-11T09:29:43Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(ss.isQueen())) list.add(ss);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/5593/buggy-version/src.oving5.Board.java", "BodyUseAPI": ["java.util.PriorityQueue<oving5.Square>.add(oving5.Square)"], "Fixed commit": "29a49525f029eb25d1fe2f6d331640ec5ceccf4b", "Url": "https://api.github.com/repos/kyrrelm/LogRes", "Date": "2013-11-04T14:33:21Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ConfigBoolValues.SHOW_NEED_BOOKLET_FOR_KEYBIND_INFO.isEnabled()) { event.toolTip.add(((net.minecraft.util.EnumChatFormatting.GOLD) + (ellpeck.actuallyadditions.util.StringUtil.localizeFormatted(((\"booklet.\" + (ellpeck.actuallyadditions.util.ModUtil.MOD_ID_LOWER)) + \".keyToSeeRecipe\"), ((keyCode > 0) && (keyCode < (org.lwjgl.input.Keyboard.KEYBOARD_SIZE)) ? (\"'\" + (org.lwjgl.input.Keyboard.getKeyName(keyCode))) + \"'\" : \"[NONE]\"))))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/6807/buggy-version/src.main.java.ellpeck.actuallyadditions.event.TooltipEvent.java", "BodyUseAPI": [], "Fixed commit": "c20a7b969e765a80b89d6ec4eb32d1a795ba23f2", "Url": "https://api.github.com/repos/Ellpeck/ActuallyAdditions", "Date": "2015-09-22T21:48:27Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (methodSignature.equals(\"La/a/b/c/b/s;: I e(\")) java.lang.System.out.println(\"x\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/2680/buggy-version/src.soot.dexpler.DexBody.java", "BodyUseAPI": [], "Fixed commit": "6e07fbe08e0633bc41c67e0b1c4efae4958e998a", "Url": "https://api.github.com/repos/Sable/soot", "Date": "2014-05-14T12:00:54Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (ins == null) { soot.dexpler.Debug.printDbg((\"Line number tag pointing to invalid offset: \" + (ln.getCodeAddress()))); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/2680/buggy-version/src.soot.dexpler.DexBody.java", "BodyUseAPI": [], "Fixed commit": "6e07fbe08e0633bc41c67e0b1c4efae4958e998a", "Url": "https://api.github.com/repos/Sable/soot", "Date": "2014-05-14T12:00:54Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (data != null) { final net.minecraft.nbt.NBTTagCompound idCompound = new net.minecraft.nbt.NBTTagCompound(); idCompound.setInteger(com.minecolonies.coremod.colony.buildings.AbstractBuildingWorker.TAG_ID, data.getId()); workersTagList.appendTag(idCompound); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/6277/buggy-version/src.main.java.com.minecolonies.coremod.colony.buildings.AbstractBuildingWorker.java", "BodyUseAPI": ["com.minecolonies.coremod.colony.CitizenData.getId()", "net.minecraft.nbt.NBTTagCompound.setInteger(java.lang.String,data.getId())"], "Fixed commit": "17f57f7e9c556f1d1a9b38c366f8da0d1669a41f", "Url": "https://api.github.com/repos/ldtteam/minecolonies", "Date": "2017-10-28T00:47:40Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!nodeFound) { throw new com.qspin.qtaste.testsuite.QTasteTestFailException((\"Unabled to find node named \" + (nodeNames[i]))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/9238/buggy-version/plugins_src.javagui.src.main.java.com.qspin.qtaste.javagui.server.TreeNodeSelector.java", "BodyUseAPI": [], "Fixed commit": "7a0a2ce3edbbbfa88ea892d8caa5476f07338d17", "Url": "https://api.github.com/repos/qspin/qtaste", "Date": "2013-10-25T09:21:19Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((outputImage.getColorModel()) instanceof java.awt.image.IndexColorModel) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/3880/buggy-version/modules.library.render.src.main.java.org.geotools.renderer.lite.gridcoverage2d.RasterSymbolizerHelper.java", "BodyUseAPI": [], "Fixed commit": "29c0f47ec7389c27c0907ee3af387193db81fea6", "Url": "https://api.github.com/repos/geomajas/geotools", "Date": "2014-03-18T12:23:42Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((source.getStartDateAndTime()) != null) { startDateAndTime = formatter.format(source.getStartDateAndTime().getTime()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/3891/buggy-version/src.main.java.seedu.multitasky.storage.XmlAdaptedEntry.java", "BodyUseAPI": [], "Fixed commit": "8463edb74252380bc591231ca667ab856df5acb6", "Url": "https://api.github.com/repos/CS2103JUN2017-T2/main", "Date": "2017-07-10T19:10:12Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((source.getStartDateAndTime()) != null) { endDateAndTime = formatter.format(source.getEndDateAndTime().getTime()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/3891/buggy-version/src.main.java.seedu.multitasky.storage.XmlAdaptedEntry.java", "BodyUseAPI": [], "Fixed commit": "8463edb74252380bc591231ca667ab856df5acb6", "Url": "https://api.github.com/repos/CS2103JUN2017-T2/main", "Date": "2017-07-10T19:10:12Z"},
{"Line": "=>467", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (upper != null) { if (upper.getTypeArguments().contains(type)) { return maker.Wildcard(maker.TypeBoundKind(com.sun.tools.javac.code.BoundKind.UNBOUND), null); } return lombok.javac.JavacResolution.typeToJCTree(upper, ast, allowCompound, allowVoid); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/6220/buggy-version/src.core.lombok.javac.JavacResolution.java", "BodyUseAPI": ["lombok.javac.JavacResolution.typeToJCTree(com.sun.tools.javac.code.Type,lombok.javac.JavacAST,boolean,boolean)", "com.sun.tools.javac.code.Type.getTypeArguments()", "com.sun.tools.javac.util.List<com.sun.tools.javac.code.Type>.contains(com.sun.tools.javac.code.Type)"], "Fixed commit": "02446794b09682fc5e07bbaa298c9908772cbf42", "Url": "https://api.github.com/repos/jlahoda/lombok", "Date": "2012-07-13T10:48:55Z"},
{"Line": "=>459", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (upper.getTypeArguments().contains(type)) { return maker.Wildcard(maker.TypeBoundKind(com.sun.tools.javac.code.BoundKind.UNBOUND), null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/6220/buggy-version/src.core.lombok.javac.JavacResolution.java", "BodyUseAPI": [], "Fixed commit": "02446794b09682fc5e07bbaa298c9908772cbf42", "Url": "https://api.github.com/repos/jlahoda/lombok", "Date": "2012-07-13T10:48:55Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (essInstances > 1) { com.example.emusavessynchronizer.utils.ProcessFinder.EMUSAVESSYNCHRONIZER_RUNNING = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/8307/buggy-version/src.main.java.com.example.emusavessynchronizer.utils.ProcessFinder.java", "BodyUseAPI": [], "Fixed commit": "baee037ece969490b7000d28983eb1a52e31b11b", "Url": "https://api.github.com/repos/stenman/EmuSavesSynchronizer", "Date": "2014-07-17T23:13:54Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (page == 0) { tweets.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/3732/buggy-version/SimpleTweets.app.src.main.java.com.codepath.apps.simpleTweeter.TimelineActivity.java", "BodyUseAPI": [], "Fixed commit": "e369b96c30b28c83565c8fe5a94a8652750c3746", "Url": "https://api.github.com/repos/rakheegupta/CodePath", "Date": "2016-02-21T21:12:50Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.BufferedReader.readLine()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (clientMessage == null) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/2856/buggy-version/chromage.server.PlayerThread.java", "BodyUseAPI": [], "Fixed commit": "3169e13b24282266b83035e75883b7ef130dc487", "Url": "https://api.github.com/repos/ChroMage/ChroMage", "Date": "2015-03-13T05:04:07Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (parentFolder == null) { response.setStatus(HttpServletResponse.SC_NOT_FOUND); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/5997/buggy-version/webapp.src.main.java.fi.foyt.fni.view.forge.FolderBrowserServlet.java", "BodyUseAPI": [], "Fixed commit": "2346698b4a628fdda42bb308b9b899bf3f35c1e0", "Url": "https://api.github.com/repos/foyt/fni", "Date": "2015-07-04T10:06:51Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (g instanceof java.awt.Graphics2D) { if ((getImage()) != null) { ((java.awt.Graphics2D) (g)).drawImage(getImage(), at, this); } if ((getImage2()) != null) { ((java.awt.Graphics2D) (g)).drawImage(getImage2(), at, this); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/7927/buggy-version/ImageConvert.src.absolut.conv.ImagePanel.java", "BodyUseAPI": [], "Fixed commit": "539d3d5c20c9a6b5fd303ac3bc69181ac42bd64b", "Url": "https://api.github.com/repos/DAT255-SoftwareEngineeringProject/DAT255-Project", "Date": "2017-10-18T06:42:31Z"},
{"Line": "=>411", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (group.isDefault(null)) { groupNode.setProperty(\"default\", true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/8550/buggy-version/src.main.java.ru.tehkode.permissions.backends.FileBackend.java", "BodyUseAPI": [], "Fixed commit": "d48a5a84c9f476a8a35140060fb75ee01ffb91d3", "Url": "https://api.github.com/repos/lycano/PermissionsEx", "Date": "2011-10-01T16:14:40Z"},
{"Line": "=>406", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (group.isDefault(worldName)) { groupNode.setProperty((worldPath + \"default\"), true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/8550/buggy-version/src.main.java.ru.tehkode.permissions.backends.FileBackend.java", "BodyUseAPI": [], "Fixed commit": "d48a5a84c9f476a8a35140060fb75ee01ffb91d3", "Url": "https://api.github.com/repos/lycano/PermissionsEx", "Date": "2011-10-01T16:14:40Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (client.connected()) return new command.AlreadyConnected(clientGui);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/1684/buggy-version/src.command.ClientCommandFactory.java", "BodyUseAPI": [], "Fixed commit": "07a6648876093c5469bb6c8489ca70159b6dc93e", "Url": "https://api.github.com/repos/velixo/BitchTalk", "Date": "2014-12-09T00:43:51Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (callback != null) { callback.onFailure(error); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/8577/buggy-version/app.src.main.java.org.esn.mobilit.services.CountriesService.java", "BodyUseAPI": ["org.esn.mobilit.NetworkCallback<org.esn.mobilit.models.Countries>.onFailure(retrofit.RetrofitError)"], "Fixed commit": "f0ef09e2f3b86887fa47f3a49d31697da31f66d0", "Url": "https://api.github.com/repos/donatienthorez/ESN_Mobil-IT", "Date": "2015-10-26T20:04:02Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (callback != null) { callback.onSuccess(org.esn.mobilit.services.CountriesService.countries); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/8577/buggy-version/app.src.main.java.org.esn.mobilit.services.CountriesService.java", "BodyUseAPI": ["org.esn.mobilit.NetworkCallback<org.esn.mobilit.models.Countries>.onSuccess(org.esn.mobilit.models.Countries)"], "Fixed commit": "f0ef09e2f3b86887fa47f3a49d31697da31f66d0", "Url": "https://api.github.com/repos/donatienthorez/ESN_Mobil-IT", "Date": "2015-10-26T20:04:02Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Init.KI) Paul.kiThread.interrupt();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/7662/buggy-version/src.Movement.java", "BodyUseAPI": [], "Fixed commit": "99d33d59da19aee25fb93c4c5787cf6aed655bce", "Url": "https://api.github.com/repos/propra12-orga/gruppe22", "Date": "2012-07-06T15:31:25Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Init.KI) Paul.kiThread.interrupt();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/7662/buggy-version/src.Movement.java", "BodyUseAPI": [], "Fixed commit": "99d33d59da19aee25fb93c4c5787cf6aed655bce", "Url": "https://api.github.com/repos/propra12-orga/gruppe22", "Date": "2012-07-06T15:31:25Z"},
{"Line": "=>821", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["teamStatsReport.teamMatchData.matches.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (numMatchesPlayed > (teamStatsReport.numMatchesPlayed)) teamStatsReport.numMatchesPlayed = numMatchesPlayed;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/4022/buggy-version/Scouting.src.main.java.ca.team2706.scouting.mcmergemanager.steamworks2017.StatsEngine.java", "BodyUseAPI": [], "Fixed commit": "87a8693bd38c864a89ecec2bb6e339d52edc8516", "Url": "https://api.github.com/repos/FRC2706/MCMergeManager", "Date": "2017-02-20T20:44:57Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((obs.getFieldType().equals(\"concept\")) && (obs.getFormSubmissionField().equals(\"Birth_Facility_Name\"))) && ((obs.getValue()) != null)) { org.opensrp.api.domain.Location location = openmrsLocationService.getLocation(obs.getValue().toString()); if ((location != null) && ((location.getName()) != null)) { obs.setValue(location.getName()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/2855/buggy-version/opensrp-connector.src.main.java.org.opensrp.connector.openmrs.service.EncounterService.java", "BodyUseAPI": ["obs.getValue().toString()", "org.opensrp.connector.openmrs.service.OpenmrsLocationService.getLocation(obs.getValue().toString())", "org.opensrp.domain.Obs.getValue()", "org.opensrp.domain.Obs.setValue(location.getName())"], "Fixed commit": "6ab9b354e36cf147b134290367a0005b576924d3", "Url": "https://api.github.com/repos/OpenSRP/opensrp-server", "Date": "2017-10-10T11:47:23Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.world.IBlockAccess.getBlock(int,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((((((block instanceof club.nsdn.nyasamarailway.TileEntities.TileEntitySignalBox) || (block instanceof club.nsdn.nyasamarailway.TileEntities.TileEntitySignalBoxSender)) || (block instanceof club.nsdn.nyasamarailway.TileEntities.TileEntityTriStateSignalBox)) || (block instanceof club.nsdn.nyasamarailway.TileEntities.TileEntitySignalLight)) || (block instanceof club.nsdn.nyasamarailway.TileEntities.TileEntityBiSignalLight)) || (block instanceof club.nsdn.nyasamarailway.TileEntities.TileEntityTriSignalLight)) { if ((world.getBlock(x, (y - 1), z)) == (this)) return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/3540/buggy-version/src.main.java.club.nsdn.nyasamarailway.TileEntities.TileEntityPillar.java", "BodyUseAPI": [], "Fixed commit": "616aba38ee6561d0dd70698dbba3bf6890acad16", "Url": "https://api.github.com/repos/NSDN/NyaSamaRailway", "Date": "2017-10-05T16:17:35Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (f.getName().equals(\"studentGroupLeaderId\")) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/4429/buggy-version/src.obj.annualTable.Region.java", "BodyUseAPI": [], "Fixed commit": "ad60aefab711b2a14fcb06b50801fcb6333e38f0", "Url": "https://api.github.com/repos/LionCherry/EPMS", "Date": "2017-11-24T16:00:47Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["quanti.QuantiShapeCalculator.isIntersectedWCA(java.awt.Polygon,java.awt.Polygon)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((points.size()) > 2) { result = true; }else { result = false; for (java.awt.Point p : points) { if (!((quanti.QuantiShapeCalculator.testCornerPoint(p1, p.x, p.y)) || (quanti.QuantiShapeCalculator.testCornerPoint(p2, p.x, p.y)))) result = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/188/buggy-version/src.quanti.QuantiShapeCalculator.java", "BodyUseAPI": [], "Fixed commit": "86745df3b93bfeefbede52e4b27c3ba9ba6a63f9", "Url": "https://api.github.com/repos/fantastdd/GRNReasoner", "Date": "2013-04-17T04:31:23Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((end) != null ? !(end.equals(that.end)) : (that.end) != null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/90/buggy-version/mindmaps-graql.src.main.java.io.mindmaps.graql.internal.gremlin.fragment.AbstractFragment.java", "BodyUseAPI": [], "Fixed commit": "792158d62f8065049ebbb5b97b4a6597f2be38d1", "Url": "https://api.github.com/repos/aelred/grakn", "Date": "2016-11-08T11:39:32Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.developmentontheedge.be5.api.services.Meta.getEntity(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (entity == null) throw com.developmentontheedge.be5.api.exceptions.Be5Exception.unknownEntity(entityName);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/2660/buggy-version/server.src.main.java.com.developmentontheedge.be5.databasemodel.impl.DatabaseModel.java", "BodyUseAPI": [], "Fixed commit": "008484aa4c883edc140417d5952bded20a156ba6", "Url": "https://api.github.com/repos/DevelopmentOnTheEdge/be5", "Date": "2017-09-28T06:40:28Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (from instanceof wyil.lang.Constant.Null) { to = null; }else { wycc.lang.SyntaxError.internalFailure(\"Not implemented!\", \"Converter.java\", null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/3613/buggy-version/modules.wyopcl.src.wyopcl.interpreter.Converter.java", "BodyUseAPI": [], "Fixed commit": "8376a962209d627423064054a59bededa8c729ec", "Url": "https://api.github.com/repos/samminweng/WhileyOpenCL", "Date": "2014-08-14T17:25:31Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((name.length()) >= (maxColumnWidth)) { columnWidth = maxColumnWidth; }else { columnWidth = ((int) ((java.lang.Math.ceil(((maxColumnWidth) / (name.length())))) * 256)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/6502/buggy-version/src.main.java.com.dx.ss.data.doc.ExcelDocument.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.Math.ceil(int)"], "Fixed commit": "f1b12d39ef1113fc50e2b641d242b83e7cf5af34", "Url": "https://api.github.com/repos/liu-weihao/docx", "Date": "2017-09-11T09:53:21Z"},
{"Line": "=>284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isBlank(name)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/6502/buggy-version/src.main.java.com.dx.ss.data.doc.ExcelDocument.java", "BodyUseAPI": [], "Fixed commit": "f1b12d39ef1113fc50e2b641d242b83e7cf5af34", "Url": "https://api.github.com/repos/liu-weihao/docx", "Date": "2017-09-11T09:53:21Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["wyscript.Interpreter.execute(stmt.getBody(),java.util.HashMap<java.lang.String, java.lang.Object>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (ret != null) { return ret; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/8379/buggy-version/src.wyscript.Interpreter.java", "BodyUseAPI": [], "Fixed commit": "7080b9879920681b6788ca4e91e33ea9594f3398", "Url": "https://api.github.com/repos/DavePearce/Wyscript", "Date": "2013-11-28T04:48:59Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (maxDownloads > 0) { dk.kb.elivagar.Elivagar.log.debug(((\"[ARG3] Maximum packages the metadata for '\" + maxDownloads) + \"' books.\")); }else { maxDownloads = java.lang.Long.MAX_VALUE; dk.kb.elivagar.Elivagar.log.debug(\"[ARG3] Downloading and packaging the metadata of as many books as possible.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/54/buggy-version/src.main.java.dk.kb.elivagar.Elivagar.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String)"], "Fixed commit": "296d51c77392e4899f221c6d08acac8fb34a4088", "Url": "https://api.github.com/repos/Det-Kongelige-Bibliotek/elivagar", "Date": "2016-12-07T13:50:13Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((nMin > nMax) || (nMin == nMax)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/3307/buggy-version/algorithms.src.exercises.BinarySearchQuantities_1_1_139.java", "BodyUseAPI": [], "Fixed commit": "76af54fe45ee4929db7349c32e1985d821eff20d", "Url": "https://api.github.com/repos/bastronaut/algorithms", "Date": "2016-06-28T18:44:43Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (text.isAttached()) { text.removeFromParent(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/8737/buggy-version/gwtbootstrap3.src.main.java.org.gwtbootstrap3.client.ui.base.mixin.IconTextMixin.java", "BodyUseAPI": ["org.gwtbootstrap3.client.ui.Text.removeFromParent()"], "Fixed commit": "25dc55be73595f48f3a175b79c51a43df6ff5e3c", "Url": "https://api.github.com/repos/gwtbootstrap3/gwtbootstrap3", "Date": "2014-02-19T20:41:35Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((text.getText()) != null) && ((text.getText().length()) > 0)) { widget.add(text); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/8737/buggy-version/gwtbootstrap3.src.main.java.org.gwtbootstrap3.client.ui.base.mixin.IconTextMixin.java", "BodyUseAPI": ["T.add(org.gwtbootstrap3.client.ui.Text)"], "Fixed commit": "25dc55be73595f48f3a175b79c51a43df6ff5e3c", "Url": "https://api.github.com/repos/gwtbootstrap3/gwtbootstrap3", "Date": "2014-02-19T20:41:35Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (separator.isAttached()) { separator.removeFromParent(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/8737/buggy-version/gwtbootstrap3.src.main.java.org.gwtbootstrap3.client.ui.base.mixin.IconTextMixin.java", "BodyUseAPI": ["org.gwtbootstrap3.client.ui.Text.removeFromParent()"], "Fixed commit": "25dc55be73595f48f3a175b79c51a43df6ff5e3c", "Url": "https://api.github.com/repos/gwtbootstrap3/gwtbootstrap3", "Date": "2014-02-19T20:41:35Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toLowerCase()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((input2.length()) < 1) { java.lang.System.out.println(\"(enroll *course name*)\"); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/4674/buggy-version/src.com.ioopm.Main.java", "BodyUseAPI": [], "Fixed commit": "07b91482d002f6c65e620fb488a9d32799102ec9", "Url": "https://api.github.com/repos/MartinJohaa/MUD", "Date": "2014-11-24T15:14:29Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["name.getCurrentLocation().ifTeacherPresentGetIndex()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (teacherIndex < 0) { java.lang.System.out.println(\"Invalid input!\"); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/4674/buggy-version/src.com.ioopm.Main.java", "BodyUseAPI": [], "Fixed commit": "07b91482d002f6c65e620fb488a9d32799102ec9", "Url": "https://api.github.com/repos/MartinJohaa/MUD", "Date": "2014-11-24T15:14:29Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.opencps.api.service.impl.ApiServiceServiceImpl._log.isDebugEnabled()) { org.opencps.api.service.ApiServiceLocalServiceUtil.addLog(userId, APIServiceConstants.CODE_02, serviceContext.getRemoteAddr(), \"\", inputObj.toString(), APIServiceConstants.IN, serviceContext); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/455/buggy-version/portlets.opencps-portlet.docroot.WEB-INF.src.org.opencps.api.service.impl.ApiServiceServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "ce1ed0b03bdfc85310acf26aae3d02ff27dc8aee", "Url": "https://api.github.com/repos/VietOpenCPS/opencps", "Date": "2016-09-06T07:08:50Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.opencps.api.service.impl.ApiServiceServiceImpl._log.isDebugEnabled()) { org.opencps.api.service.ApiServiceLocalServiceUtil.addLog(userId, APIServiceConstants.CODE_02, serviceContext.getRemoteAddr(), \"\", resultObj.toString(), APIServiceConstants.OUT, serviceContext); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/455/buggy-version/portlets.opencps-portlet.docroot.WEB-INF.src.org.opencps.api.service.impl.ApiServiceServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "ce1ed0b03bdfc85310acf26aae3d02ff27dc8aee", "Url": "https://api.github.com/repos/VietOpenCPS/opencps", "Date": "2016-09-06T07:08:50Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((int) (message.getInfo(\"RequesterID\"))) != (node.getIndex())) return; else { if (dona.util.Statistic.LOG) dona.util.Log.write((((((\"Node \" + (node.getIndex())) + \" receive source \") + (message.getInfo(\"SourceID\"))) + \" for file \") + (message.getDataName()))); boolean flag = inf.connectionManager.addSource(message.getDataName(), ((int) (message.getInfo(\"SourceID\"))), ((int) (message.getInfo(\"ChunkNum\")))); if (flag) { if ((inf.connectionManager.getActiveNum(message.getDataName())) < (inf.path_num)) { inf.connectionManager.activate(message.getDataName()); int nextIndex = inf.connectionManager.getNextIndex(message.getDataName()); if (nextIndex == (-1)) { }else { dona.entity.Message req_message = new dona.entity.Message(\"REQ\", node.getIndex(), message.getDataName()); req_message.insertInfo(\"ChunkNo\", nextIndex); req_message.insertInfo(\"SourceID\", message.getInfo(\"SourceID\")); req_message.insertInfo(\"RequesterID\", node.getIndex()); ((peersim.transport.Transport) (node.getProtocol(peersim.config.FastConfig.getTransport(protocolID)))).send(node, peersim.core.Network.get(message.getRequester()), req_message, protocolID); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/7908/buggy-version/src.dona.handler.ACKhandler.java", "BodyUseAPI": ["inf.connectionManager.getNextIndex(message.getDataName())", "dona.entity.Message.getInfo(java.lang.String)", "dona.entity.Message.getInfo(java.lang.String)", "dona.util.Log.write((((((\"Node \" + (node.getIndex())) + \" receive source \") + (message.getInfo(\"SourceID\"))) + \" for file \") + (message.getDataName())))", "peersim.core.Node.getIndex()", "dona.entity.Message.insertInfo(java.lang.String,node.getIndex())", "dona.entity.Message.getDataName()", "peersim.core.Node.getIndex()", "inf.connectionManager.getActiveNum(message.getDataName())", "dona.entity.Message.getInfo(java.lang.String)", "peersim.core.Network.get(message.getRequester())", "dona.entity.Message.getDataName()", "dona.entity.Message.getDataName()", "peersim.core.Node.getProtocol(peersim.config.FastConfig.getTransport(protocolID))", "inf.connectionManager.activate(message.getDataName())", "dona.entity.Message.insertInfo(java.lang.String,message.getInfo(\"SourceID\"))", "inf.connectionManager.addSource(message.getDataName(),((int) (message.getInfo(\"SourceID\"))),((int) (message.getInfo(\"ChunkNum\"))))", "dona.entity.Message.getRequester()", "dona.entity.Message.getDataName()", "dona.entity.Message.getDataName()", "dona.entity.Message.getDataName()", "dona.entity.Message.getInfo(java.lang.String)", "peersim.core.Node.getIndex()", "((peersim.transport.Transport) (node.getProtocol(peersim.config.FastConfig.getTransport(protocolID)))).send(peersim.core.Node,peersim.core.Network.get(message.getRequester()),dona.entity.Message,int)"], "Fixed commit": "b25b058667aac3bd0d1441412b9230478eb77b73", "Url": "https://api.github.com/repos/Viscount/DONA-in-PeerSim", "Date": "2015-02-04T07:48:27Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["exchange.getIn().getBody(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (body == null) { request.setEntity(null); }else { request.setEntity(body, mediaType); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/1681/buggy-version/components.camel-restlet.src.main.java.org.apache.camel.component.restlet.DefaultRestletBinding.java", "BodyUseAPI": ["org.restlet.Request.setEntity(java.lang.String,org.restlet.data.MediaType)"], "Fixed commit": "89c2cbbc649efceb1a6ae6b144ab3b724ff1f9e8", "Url": "https://api.github.com/repos/apache/camel", "Date": "2014-10-08T14:16:39Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dayName == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/6145/buggy-version/app.src.main.java.com.example.ravi_gupta.slider.Models.Retailer.java", "BodyUseAPI": [], "Fixed commit": "3f0d021d923c70c8d85fb32cf4f4f999c9337d06", "Url": "https://api.github.com/repos/ravigupta9363/CustomerApp", "Date": "2015-09-26T05:19:00Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraftforge.fml.common.FMLCommonHandler.instance().getMinecraftServerInstance()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (server.getCommandManager().getPossibleCommands(event.getEntityLiving()).contains(server.getCommandManager().getCommands().get(\"tpx\"))) { posText.setStyle(new net.minecraft.util.text.Style().setItalic(true).setHoverEvent(new net.minecraft.util.text.event.HoverEvent(HoverEvent.Action.SHOW_TEXT, new net.minecraft.util.text.TextComponentString(\"Click to teleport!\"))).setClickEvent(new net.minecraft.util.text.event.ClickEvent(ClickEvent.Action.RUN_COMMAND, (((((((\"/tp \" + (((net.minecraft.entity.player.EntityPlayer) (event.getEntityLiving())).dimension)) + \" \") + (net.minecraft.util.math.MathHelper.floor_double(event.getEntityLiving().posX))) + \" \") + (net.minecraft.util.math.MathHelper.floor_double(((event.getEntityLiving().posY) + 0.5)))) + \" \") + (net.minecraft.util.math.MathHelper.floor_double(event.getEntityLiving().posZ)))))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/6462/buggy-version/src.main.java.net.doubledoordev.d3core.util.EventHandler.java", "BodyUseAPI": ["net.minecraftforge.event.entity.living.LivingDeathEvent.getEntityLiving()", "net.minecraft.util.math.MathHelper.floor_double(event.getEntityLiving().posZ)", "net.minecraft.util.math.MathHelper.floor_double(((event.getEntityLiving().posY) + 0.5))", "net.minecraft.util.math.MathHelper.floor_double(event.getEntityLiving().posX)", "new net.minecraft.util.text.Style().setItalic(true).setHoverEvent(new net.minecraft.util.text.event.HoverEvent(HoverEvent.Action.SHOW_TEXT, new net.minecraft.util.text.TextComponentString(\"Click to teleport!\"))).setClickEvent(net.minecraft.util.text.event.ClickEvent)", "net.minecraftforge.event.entity.living.LivingDeathEvent.getEntityLiving()", "net.minecraft.util.text.TextComponentString.setStyle(new net.minecraft.util.text.Style().setItalic(true).setHoverEvent(new net.minecraft.util.text.event.HoverEvent(HoverEvent.Action.SHOW_TEXT, new net.minecraft.util.text.TextComponentString(\"Click to teleport!\"))).setClickEvent(new net.minecraft.util.text.event.ClickEvent(ClickEvent.Action.RUN_COMMAND, (((((((\"/tp \" + (((net.minecraft.entity.player.EntityPlayer) (event.getEntityLiving())).dimension)) + \" \") + (net.minecraft.util.math.MathHelper.floor_double(event.getEntityLiving().posX))) + \" \") + (net.minecraft.util.math.MathHelper.floor_double(((event.getEntityLiving().posY) + 0.5)))) + \" \") + (net.minecraft.util.math.MathHelper.floor_double(event.getEntityLiving().posZ))))))", "net.minecraftforge.event.entity.living.LivingDeathEvent.getEntityLiving()", "net.minecraftforge.event.entity.living.LivingDeathEvent.getEntityLiving()"], "Fixed commit": "66bf57018556a7105f9055c49fb56f353f77254b", "Url": "https://api.github.com/repos/DoubleDoorDevelopment/D3Core", "Date": "2017-08-01T20:21:25Z"},
{"Line": "=>951", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (null == name) { name = part.getContentId(); if (null == name) { return com.google.android.mms.pdu.PduComposer.PDU_COMPOSE_CONTENT_ERROR; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/743/buggy-version/src.java.com.google.android.mms.pdu.PduComposer.java", "BodyUseAPI": [], "Fixed commit": "0c000a5fdb7b2133b5d933606b3100cd280641ad", "Url": "https://api.github.com/repos/AOSParadox/android_frameworks_opt_telephony", "Date": "2014-11-20T09:52:10Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.sqLiteDatabase) == null) { this.sqLiteDatabase = getReadableDatabase(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/6192/buggy-version/app.src.main.java.com.wonhwee.empmgr.dao.DatabaseHelper.java", "BodyUseAPI": [], "Fixed commit": "8b15e4b59cb9691faf3549c51154d2faa6660778", "Url": "https://api.github.com/repos/wonhweeloh/empmanager", "Date": "2017-06-18T00:54:27Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((connection1 == (net.minecraftforge.common.util.ForgeDirection.SOUTH)) && (connection2 == (net.minecraftforge.common.util.ForgeDirection.UP))) || ((connection2 == (net.minecraftforge.common.util.ForgeDirection.SOUTH)) && (connection1 == (net.minecraftforge.common.util.ForgeDirection.UP)))) { org.lwjgl.opengl.GL11.glRotated(180, 0, 1, 0); }else if (((connection1 == (net.minecraftforge.common.util.ForgeDirection.NORTH)) && (connection2 == (net.minecraftforge.common.util.ForgeDirection.UP))) || ((connection2 == (net.minecraftforge.common.util.ForgeDirection.NORTH)) && (connection1 == (net.minecraftforge.common.util.ForgeDirection.UP)))) { org.lwjgl.opengl.GL11.glRotated(180, 0, 1, 0); }else if (((connection1 == (net.minecraftforge.common.util.ForgeDirection.SOUTH)) && (connection2 == (net.minecraftforge.common.util.ForgeDirection.DOWN))) || ((connection2 == (net.minecraftforge.common.util.ForgeDirection.SOUTH)) && (connection1 == (net.minecraftforge.common.util.ForgeDirection.DOWN)))) { org.lwjgl.opengl.GL11.glRotated(180, 0, 1, 0); }else if (((connection1 == (net.minecraftforge.common.util.ForgeDirection.NORTH)) && (connection2 == (net.minecraftforge.common.util.ForgeDirection.DOWN))) || ((connection2 == (net.minecraftforge.common.util.ForgeDirection.NORTH)) && (connection1 == (net.minecraftforge.common.util.ForgeDirection.DOWN)))) { org.lwjgl.opengl.GL11.glRotated(180, 0, 1, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/5706/buggy-version/src.main.java.com.thefjong.factorialautomation.client.render.RenderPipe.java", "BodyUseAPI": [], "Fixed commit": "ca6ac01a4053711779770a8d3e2d27d94bef356c", "Url": "https://api.github.com/repos/TheFjonG/Factorial-Automation", "Date": "2014-10-21T21:37:07Z"},
{"Line": "=>929", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.player.getUserId()) != 0) { updateLeaderboard(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/9066/buggy-version/Arithimagicians.app.src.main.java.ics499.arithimagicians.FightActivity.java", "BodyUseAPI": [], "Fixed commit": "105204bad53c2c8b944653a4b758eb8a624415c1", "Url": "https://api.github.com/repos/mroien/Arithimagicians", "Date": "2015-12-01T19:26:50Z"},
{"Line": "=>934", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.player.getUserId()) != 0) { updateLeaderboard(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/9066/buggy-version/Arithimagicians.app.src.main.java.ics499.arithimagicians.FightActivity.java", "BodyUseAPI": [], "Fixed commit": "105204bad53c2c8b944653a4b758eb8a624415c1", "Url": "https://api.github.com/repos/mroien/Arithimagicians", "Date": "2015-12-01T19:26:50Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (arg1.equals(\"temp\")) { out.write(\"D = A\"); out.newLine(); }else { out.write(\"D = M\"); out.newLine(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/1954/buggy-version/CodeWriter.java", "BodyUseAPI": [], "Fixed commit": "fbca73077179678f1b00cf33c67a93832351344e", "Url": "https://api.github.com/repos/VipinindKumar/vmtranslator", "Date": "2017-08-22T07:34:15Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((player.getBloodie()) || (mItem.getBloodie())) { if (!(mItem.getBloodie())) { mItem.makeBloodie(); } if (!(player.getBloodie())) { player.makeBloodie(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/3365/buggy-version/src.evidence.gameworld.actions.PickUp.java", "BodyUseAPI": ["evidence.gameworld.items.MovableItem.getBloodie()", "evidence.gameworld.Player.getBloodie()", "evidence.gameworld.Player.makeBloodie()", "evidence.gameworld.items.MovableItem.makeBloodie()"], "Fixed commit": "dbc5b8453d730331ee152da0b0a45e1318e27aef", "Url": "https://api.github.com/repos/georginamurphy/Evidence", "Date": "2016-10-10T10:34:48Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.fr.general.GeneralUtils.objectToString(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (com.fr.stable.StringUtils.isBlank(text)) { java.lang.System.out.println(text); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/278/buggy-version/src.com.fr.plugin.fractional.fun.FractionalPresent.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "49a918477f14c0bc433ad7dd42cb7134d9205c79", "Url": "https://api.github.com/repos/fanruanopen/plugin-present-fractional", "Date": "2017-05-17T07:12:43Z"},
{"Line": "=>490", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (common.Config.isWindowsOs()) { common.Config.useDDEforFreq = cbUseDDEFreq.isSelected(); common.Config.useDDEforAzEl = cbUseDDEAzEl.isSelected(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/335/buggy-version/src.gui.SettingsFrame.java", "BodyUseAPI": [], "Fixed commit": "a761fff3d8242a9ae2fac89ef3214fb3844b36e1", "Url": "https://api.github.com/repos/ac2cz/FoxTelem", "Date": "2017-07-30T14:25:45Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((request.getSession(true)) != null) { out.println(\" <li><a href=\\\"/bookstore/logout.do\\\">Logout</a></li>\\n\"); }else { out.println(\" <li><a href=\\\"/bookstore/login.do\\\">Login</a></li>\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/830/buggy-version/bookstore.src.java.main.browse.java", "BodyUseAPI": [], "Fixed commit": "a41b1d61018043cd478f7dd5fa083998ac80b11f", "Url": "https://api.github.com/repos/robertcinca/bookstore", "Date": "2017-04-14T11:03:24Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Player.getToken()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((board.findCharacter(currentToken).getType()) == 'R') { winner = announcement(winner, currentPlayer, finishLocation); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/3671/buggy-version/src.Main.java", "BodyUseAPI": [], "Fixed commit": "665478d06c4b5a9885bea0236d643e4824263856", "Url": "https://api.github.com/repos/Ciaran5933/clue", "Date": "2013-08-12T07:29:27Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.sk89q.worldguard.bukkit.WorldGuardPlugin.getRegionContainer()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (container == null) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/7813/buggy-version/src.me.Qball.Wild.Utils.ClaimChecks.java", "BodyUseAPI": [], "Fixed commit": "747160778a3aeb52f8ceed34a1678e868bb222a3", "Url": "https://api.github.com/repos/Qballl/WildernessTp", "Date": "2017-06-27T22:05:58Z"},
{"Line": "=>346", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(de.k3b.android.androFotoFinder.Global.apmEnabled)) { menuItem = popup.getMenu().findItem(R.id.cmd_apm_edit); if (menuItem != null) { menuItem.setVisible(false); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/264/buggy-version/app.src.main.java.de.k3b.android.androFotoFinder.directory.DirectoryPickerFragment.java", "BodyUseAPI": [], "Fixed commit": "25a6f2984ffdaae5f5095a2bd35733dc39171269", "Url": "https://api.github.com/repos/k3b/APhotoManager", "Date": "2017-11-13T20:10:20Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tinf11bc.kbs.yavalath.logic.Yavalath.playGame(int[][],tinf11bc.kbs.yavalath.logic.Player[])"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (result == 10) { java.lang.System.out.println(\"It's a draw!\"); }else { java.lang.System.out.println(((\"Player \" + result) + \" won!\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/2518/buggy-version/src.tinf11bc.kbs.yavalath.logic.Yavalath.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "75b08a5c66df3f9fe337b749e441cc390687b290", "Url": "https://api.github.com/repos/belafarinrod91/KBSYavalath", "Date": "2013-09-11T17:04:58Z"},
{"Line": "=>332", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((com.walrusone.skywars.SkyWarsReloaded.getPC().getPlayer(e.getPlayer().getUniqueId())) != null) { if (com.walrusone.skywars.SkyWarsReloaded.getPC().getPlayer(e.getPlayer().getUniqueId()).isSpectating()) { e.setCancelled(true); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/4170/buggy-version/SkyWarsReloadedPlugin.src.main.java.com.walrusone.skywars.listeners.SpectatorListener.java", "BodyUseAPI": ["com.walrusone.skywars.SkyWarsReloaded.getPC().getPlayer(e.getPlayer().getUniqueId())", "org.bukkit.event.player.PlayerInteractEvent.getPlayer()", "e.getPlayer().getUniqueId()", "com.walrusone.skywars.SkyWarsReloaded.getPC().getPlayer(e.getPlayer().getUniqueId()).isSpectating()", "org.bukkit.event.player.PlayerInteractEvent.setCancelled(boolean)"], "Fixed commit": "3947f40b97f39081ddacb492657f557f46175515", "Url": "https://api.github.com/repos/RobiRami/SkyWarsReloaded", "Date": "2015-10-04T11:48:51Z"},
{"Line": "=>620", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.voltdb.VoltTableRow.getTimestampAsLong(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (timestamp >= 0) { result = new java.sql.Timestamp((timestamp / 1000)); result.setNanos((((int) (timestamp % 1000000)) * 1000)); }else { result = new java.sql.Timestamp((((timestamp / 1000000) - 1) * 1000)); int remaining = ((int) (timestamp % 1000000)); result.setNanos(((remaining + 1000000) * 1000)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/7549/buggy-version/src.frontend.org.voltdb.VoltTableRow.java", "BodyUseAPI": ["java.sql.Timestamp.setNanos(int)"], "Fixed commit": "819ef3c18ab3e621274126810e9f7ce7b3ded78a", "Url": "https://api.github.com/repos/VoltDB/voltdb", "Date": "2014-04-30T21:48:03Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((arr[left]) < (arr[index])) { int t = arr[index]; arr[index] = arr[left]; arr[left] = t; sorting.HeapSort.heapify(arr, left); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/4283/buggy-version/src.sorting.HeapSort.java", "BodyUseAPI": ["sorting.HeapSort.heapify(int[],int)"], "Fixed commit": "5caf05d6786c93133b542c30eb566fc886a1dd9d", "Url": "https://api.github.com/repos/akjs90/Algorithms", "Date": "2016-09-30T05:35:19Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.mozilla.javascript.ast.FunctionCall.getTarget()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((((mdType) == (MD_TYPE_AMD)) || ((mdType) == (MD_TYPE_UMD))) && (java.util.regex.Pattern.matches(defineKeyWord, nameNode.toSource().trim()))) { java.lang.Module module = null; java.util.List<org.mozilla.javascript.ast.AstNode> args = fc.getArguments(); if (((args.size()) == 3) && (((moduleType) == (MODULE_TYPE_ALL)) || ((moduleType) == (MODULE_TYPE_NORMAL)))) { org.mozilla.javascript.ast.AstNode stringNode = args.get(0); org.mozilla.javascript.ast.AstNode arrayNode = args.get(1); org.mozilla.javascript.ast.AstNode funNode = args.get(2); if (((stringNode instanceof org.mozilla.javascript.ast.StringLiteral) && (arrayNode instanceof org.mozilla.javascript.ast.ArrayLiteral)) && (funNode instanceof org.mozilla.javascript.ast.FunctionNode)) { module = new java.lang.Module(); module.setAnonymous(false); module.setName(((org.mozilla.javascript.ast.StringLiteral) (stringNode)).getValue(false)); module.getRequiredModuleNames().addAll(getRequiredModules(((org.mozilla.javascript.ast.ArrayLiteral) (arrayNode)))); module.setFilePath(absPath); updateAlias(module, this.getAliasList()); moduleList.add(module); match = true; } }else if ((args.size()) == 2) { org.mozilla.javascript.ast.AstNode node1 = args.get(0); org.mozilla.javascript.ast.AstNode node2 = args.get(1); if (((((moduleType) == (MODULE_TYPE_ALL)) || ((moduleType) == (MODULE_TYPE_NORMAL))) && (node1 instanceof org.mozilla.javascript.ast.StringLiteral)) && (node2 instanceof org.mozilla.javascript.ast.FunctionNode)) { module = new java.lang.Module(); module.setAnonymous(false); module.setName(((org.mozilla.javascript.ast.StringLiteral) (node1)).getValue(false)); module.setFilePath(absPath); updateAlias(module, this.getAliasList()); moduleList.add(module); match = true; } if (((((moduleType) == (MODULE_TYPE_ALL)) || ((moduleType) == (MODULE_TYPE_ANONYMOUS))) && (node1 instanceof org.mozilla.javascript.ast.ArrayLiteral)) && (node2 instanceof org.mozilla.javascript.ast.FunctionNode)) { module = new java.lang.Module(); module.setAnonymous(true); module.getRequiredModuleNames().addAll(getRequiredModules(((org.mozilla.javascript.ast.ArrayLiteral) (node1)))); module.setFilePath(absPath); moduleList.add(module); match = true; } }else if (((args.size()) == 1) && (((moduleType) == (MODULE_TYPE_ALL)) || ((moduleType) == (MODULE_TYPE_ANONYMOUS)))) { org.mozilla.javascript.ast.AstNode node1 = args.get(0); if (node1 instanceof org.mozilla.javascript.ast.FunctionNode) { module = new java.lang.Module(); module.setAnonymous(true); module.setFilePath(absPath); moduleList.add(module); match = true; } } if (module != null) { cmdModule = module; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/8843/buggy-version/com.alibaba.just.src.com.alibaba.just.api.parser.RhinoModuleParser.java", "BodyUseAPI": [], "Fixed commit": "ab74371b5cfc64c284b1b95318ce395034154881", "Url": "https://api.github.com/repos/bruce007lee/just-eclipse", "Date": "2014-10-29T05:39:08Z"},
{"Line": "=>305", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.View.getParent()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (parent instanceof android.view.ViewGroup) { final android.view.ViewGroup vg = ((android.view.ViewGroup) (parent)); final boolean relative = (vg.getLayoutParams()) instanceof android.widget.RelativeLayout.LayoutParams; if (((tw.fatminmin.xposed.minminguard.Main.convertPixelsToDp(vg.getHeight())) > 55) && relative) { return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/771/buggy-version/src.tw.fatminmin.xposed.minminguard.Main.java", "BodyUseAPI": [], "Fixed commit": "5b2dbfe81164382bac0fc018516f0c520e8754bf", "Url": "https://api.github.com/repos/OhSoGood/MinMinGuard", "Date": "2014-09-02T13:51:13Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.widget.SeekBar.getProgress()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (prog < 15) { com.example.rs.projectpriority.ProjectActivity.seekBarProgress.setText(\"Not Started\"); }else if (prog < 35) { com.example.rs.projectpriority.ProjectActivity.seekBarProgress.setText(\"25% Done\"); }else if (prog < 65) { com.example.rs.projectpriority.ProjectActivity.seekBarProgress.setText(\"50% Done\"); }else if (prog < 90) { com.example.rs.projectpriority.ProjectActivity.seekBarProgress.setText(\"75% Done\"); }else { com.example.rs.projectpriority.ProjectActivity.seekBarProgress.setText(\"Complete!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/196/buggy-version/app.src.main.java.com.example.rs.projectpriority.ProjectActivity.java", "BodyUseAPI": [], "Fixed commit": "e925c8c7de0a68da0df3411f155758d11df14035", "Url": "https://api.github.com/repos/rSterling319/Project_Priority", "Date": "2017-12-25T00:10:14Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (state == (jsat.io.LIBSVMLoader.STATE.NEWLINE)) { break; }else throw new java.lang.RuntimeException();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/2716/buggy-version/JSAT.src.jsat.io.LIBSVMLoader.java", "BodyUseAPI": [], "Fixed commit": "296985f7e883ed6aabf65e539cd06311699a3bb4", "Url": "https://api.github.com/repos/TKlerx/JSAT", "Date": "2015-04-09T14:17:23Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.Ben12345rocks.VotingPlugin.Events.VotingPluginUpdateEvent.plugin.getDescription().getVersion().equals(\"4.5.2\")) { if ((!(event.getOldVersion().equals(\"4.5.1\"))) && (!(event.getOldVersion().equals(\"4.5\")))) { convertToVoteSites(); } updateToNewConfigs(); }else if (com.Ben12345rocks.VotingPlugin.Events.VotingPluginUpdateEvent.plugin.getDescription().getVersion().equals(\"4.5.3\")) { if ((!(event.getOldVersion().equals(\"4.5.1\"))) && (!(event.getOldVersion().equals(\"4.5\")))) { convertToVoteSites(); } if (!(event.getOldVersion().equals(\"4.5.2\"))) { updateToNewConfigs(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/674/buggy-version/VotingPlugin.src.com.Ben12345rocks.VotingPlugin.Events.VotingPluginUpdateEvent.java", "BodyUseAPI": ["com.Ben12345rocks.VotingPlugin.Events.VotingPluginUpdateEvent.plugin.getDescription().getVersion().equals(java.lang.String)", "com.Ben12345rocks.VotingPlugin.Events.VotingPluginUpdateEvent.plugin.getDescription().getVersion()", "com.Ben12345rocks.VotingPlugin.Main.getDescription()"], "Fixed commit": "3ede586ba007ad956ef25e384c793aea38cb912a", "Url": "https://api.github.com/repos/Ben12345rocks/VotingPlugin", "Date": "2016-10-23T17:21:43Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["play.data.Form.form(models.SignatureModel.class).bindFromRequest()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((signatureForm.get()) != null) { java.lang.System.out.println(((models.SignatureModel) (signatureForm.get()))); controllers.Application.save(signatureForm.get()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/4684/buggy-version/app.controllers.Application.java", "BodyUseAPI": ["play.data.Form<models.SignatureModel>.get()", "play.data.Form<models.SignatureModel>.get()", "java.io.PrintStream.println(((models.SignatureModel) (signatureForm.get())))", "controllers.Application.save(signatureForm.get())"], "Fixed commit": "b35f517ab575fea61ed4efe701ebb692b8623646", "Url": "https://api.github.com/repos/johasaa/stoppoverty2030", "Date": "2013-08-02T17:39:52Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (index == 0) index = str.length();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/5305/buggy-version/src.main.java.net.malisis.core.renderer.font.StringWalker.java", "BodyUseAPI": [], "Fixed commit": "12a76fd7de6feba8b5232332976643ff4b377618", "Url": "https://api.github.com/repos/Ordinastie/MalisisCore", "Date": "2015-06-27T06:46:06Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (name.startsWith(\"_\")) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/822/buggy-version/sql.src.main.java.io.crate.metadata.TableIdent.java", "BodyUseAPI": [], "Fixed commit": "39e636b60eea0376317acebf001e9a93eaf776d7", "Url": "https://api.github.com/repos/EvilMcJerkface/crate", "Date": "2016-12-27T15:28:18Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((operator == (com.alibaba.druid.sql.ast.expr.SQLBinaryOperator.LessThanOrEqual)) || (operator == (com.alibaba.druid.sql.ast.expr.SQLBinaryOperator.GreaterThan))) { return org.apache.hadoop.hbase.util.Bytes.add(value, FConstants.DATA_ROW_SEP_QUERY); }else { return value; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/6548/buggy-version/src.main.java.com.alibaba.wasp.meta.RowBuilder.java", "BodyUseAPI": [], "Fixed commit": "e6aa3c567c6d95df55aba9a621f9b857821baa53", "Url": "https://api.github.com/repos/haosdent/wasp", "Date": "2013-07-30T13:26:55Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.eteks.jeks.JeksTable.getCellEditor()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (editor != null) { editor.cancelCellEditing(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/4645/buggy-version/src.simplexer.LPFrame.java", "BodyUseAPI": ["javax.swing.CellEditor.cancelCellEditing()"], "Fixed commit": "2e328b0a073510e45187a5a07e0dc1fcfbb27fdc", "Url": "https://api.github.com/repos/iamboorrito/Simplex-Method", "Date": "2017-09-02T04:17:06Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (opened.get(downPosition)) { deltaX += (openedRight.get(downPosition)) ? (viewWidth) - (rightOffset) : (-(viewWidth)) + (leftOffset); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/1269/buggy-version/src.main.java.com.fortysevendeg.android.swipelistview.SwipeListViewTouchListener.java", "BodyUseAPI": ["java.util.List<java.lang.Boolean>.get(int)"], "Fixed commit": "39a07f77fb27fb6e951b16e5123c1b897597062d", "Url": "https://api.github.com/repos/streetsofboston/android-swipelistview", "Date": "2013-04-12T19:14:20Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!found) { consequences.add(VariantConsequence.OTHER); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/1190/buggy-version/hmftools-common.src.main.java.com.hartwig.hmftools.common.variant.VariantAnnotationFactory.java", "BodyUseAPI": [], "Fixed commit": "451cda78bbe4784a5da7c18bd337fb2615eff3c6", "Url": "https://api.github.com/repos/hartwigmedical/hmftools", "Date": "2017-01-19T14:42:15Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fileSystemController.exceedsAllowedSpace()) { return \"LIMIT_REACHED=5Gb\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/7826/buggy-version/CTNAI.src.main.java.ctnai.Controllers.TaskController.java", "BodyUseAPI": [], "Fixed commit": "a2b11597b3619ccc412ed37843414f86cb6d41e9", "Url": "https://api.github.com/repos/sybila/CommonThomasNetworkAnalysisInterface", "Date": "2013-04-18T15:08:52Z"},
{"Line": "=>316", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (anItem instanceof lisong_mechlab.model.item.ECM) { return lisong_mechlab.view.render.StyleManager.COLOR_BG_ECM; }else if (anItem.getName().contains(\"TAG\")) { return lisong_mechlab.view.render.StyleManager.COLOR_BG_ENERGY_ALT; }else if ((anItem instanceof lisong_mechlab.model.item.Weapon) || (anItem == (lisong_mechlab.model.item.ItemDB.ECM))) { return lisong_mechlab.view.render.StyleManager.getBgColorFor(anItem.getHardpointType()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/5941/buggy-version/src.lisong_mechlab.view.render.StyleManager.java", "BodyUseAPI": ["lisong_mechlab.model.item.Item.getName()", "anItem.getName().contains(java.lang.String)", "lisong_mechlab.model.item.Item.getHardpointType()", "lisong_mechlab.view.render.StyleManager.getBgColorFor(anItem.getHardpointType())"], "Fixed commit": "3d483d12676720c60c4715efd7a83fb41a98c14d", "Url": "https://api.github.com/repos/EmilyBjoerk/lsml", "Date": "2014-09-20T16:02:33Z"},
{"Line": "=>378", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (anItem instanceof lisong_mechlab.model.item.ECM) { return lisong_mechlab.view.render.StyleManager.COLOR_FG_ECM; }else if (anItem.getName().contains(\"TAG\")) { return lisong_mechlab.view.render.StyleManager.COLOR_FG_ENERGY_ALT; }else if ((anItem instanceof lisong_mechlab.model.item.Weapon) || (anItem == (lisong_mechlab.model.item.ItemDB.ECM))) { return lisong_mechlab.view.render.StyleManager.getFgColorFor(anItem.getHardpointType()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/5941/buggy-version/src.lisong_mechlab.view.render.StyleManager.java", "BodyUseAPI": ["lisong_mechlab.model.item.Item.getHardpointType()", "anItem.getName().contains(java.lang.String)", "lisong_mechlab.model.item.Item.getName()", "lisong_mechlab.view.render.StyleManager.getFgColorFor(anItem.getHardpointType())"], "Fixed commit": "3d483d12676720c60c4715efd7a83fb41a98c14d", "Url": "https://api.github.com/repos/EmilyBjoerk/lsml", "Date": "2014-09-20T16:02:33Z"},
{"Line": "=>339", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (fs.exists(path)) { fs.delete(path, isDirectory); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/98/buggy-version/exec.java-exec.src.main.java.org.apache.drill.exec.planner.sql.handlers.CreateFunctionHandler.java", "BodyUseAPI": ["org.apache.hadoop.fs.FileSystem.delete(org.apache.hadoop.fs.Path,boolean)"], "Fixed commit": "69a1e41c8d1016a3e4c02764f67a87b88dc27a81", "Url": "https://api.github.com/repos/arina-ielchiieva/drill", "Date": "2017-03-06T11:34:56Z"},
{"Line": "=>477", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((bulkOperations) > 0) && (((state.writeOpsDone) % (bulkOperations)) == 0)) { db.initBulkOperations(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/9167/buggy-version/core.src.main.java.com.yahoo.ycsb.workloads.CoreWorkload.java", "BodyUseAPI": [], "Fixed commit": "e7d4cb4aea8b76542642d6da266a3d1e182b8bc4", "Url": "https://api.github.com/repos/RicardoLorenzo/YCSB", "Date": "2014-07-16T14:02:53Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (obj instanceof java.lang.Boolean) { arrayBuilder.add(((java.lang.Boolean) (obj))); }else if (obj instanceof java.lang.Class<?>) { arrayBuilder.add(((java.lang.Class<?>) (obj)).getName()); }else { arrayBuilder.add(java.lang.String.valueOf(obj)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/8255/buggy-version/microservices.util.xcolab-utils.src.main.java.org.xcolab.util.json.JsonUtil.java", "BodyUseAPI": ["java.lang.String.valueOf(java.lang.Object)", "javax.json.JsonArrayBuilder.add(java.lang.String)"], "Fixed commit": "d88097b86e143b35a173a1a9267553f6036c927f", "Url": "https://api.github.com/repos/CCI-MIT/XCoLab", "Date": "2016-12-15T11:07:18Z"},
{"Line": "=>462", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (score > 19999) this.score = 19999; else if (score < 0) this.score = 0; else this.score = score;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/1285/buggy-version/src.com.kry.brickgame.games.Game.java", "BodyUseAPI": [], "Fixed commit": "0fdaa65b6c0ddd5fcdcde6fa81ae802d3232113e", "Url": "https://api.github.com/repos/n0Live/BrickGame", "Date": "2014-11-07T10:56:13Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.eighthlight.jhttpsrv.parser.RequestParser.parseInputStream(java.io.InputStream)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (request.isEmpty()) { mySocket.close(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/1308/buggy-version/src.main.java.com.eighthlight.jhttpsrv.server.Jhttpsrv.java", "BodyUseAPI": [], "Fixed commit": "7f5cf215ba62ab169d9f89c261deb577ea28deb0", "Url": "https://api.github.com/repos/j8th/jhttpsrv", "Date": "2014-12-19T17:27:34Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mResponseTimeout) == 0) { mWindowCommand.setActive(true); try { client.stop(); } catch (java.lang.InterruptedException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/816/buggy-version/Application.src.main.java.io.github.antijava.marjio.scene.JoinScene.java", "BodyUseAPI": [], "Fixed commit": "3435ad7ad617c56255c59e4d355e0ff5dd40c482", "Url": "https://api.github.com/repos/NCU-Anti-Java/Marjio", "Date": "2016-01-03T18:10:05Z"},
{"Line": "=>908", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((m_sSoundFile) != null) { props.setProperty(\"SoundFile\", m_sSoundFile); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/6543/buggy-version/src.pkgImageViewer.ImageViewer.java", "BodyUseAPI": [], "Fixed commit": "967d6a17e15890bed94ec27a7cdfd6049447d4c7", "Url": "https://api.github.com/repos/adw0022/Slide-Show-Creator", "Date": "2016-04-16T15:12:40Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isOrientationPortrait()) { item.setOnMenuItemClickListener(new net.osmand.plus.activities.MenuItem.OnMenuItemClickListener() { @java.lang.Override public boolean onMenuItemClick(net.osmand.plus.activities.MenuItem menuItem) { onOptionsItemSelected(item); return true; } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/5621/buggy-version/OsmAnd.src.net.osmand.plus.activities.AvailableGPXFragment.java", "BodyUseAPI": [], "Fixed commit": "537b9374dc351a90b417d2d35f8bd8a08f6dde0b", "Url": "https://api.github.com/repos/Bars107/Osmand", "Date": "2015-01-28T16:30:27Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((progressDialog) != null) { if (progressDialog.isShowing()) { progressDialog.cancel(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/7161/buggy-version/app.src.main.java.com.novel.reader.NovelContentsActivity.java", "BodyUseAPI": [], "Fixed commit": "a9bed6c439b8d007e0872202bbc4b973bd52923f", "Url": "https://api.github.com/repos/StevenKo/NovelReaderAndroidStudio", "Date": "2014-09-21T09:15:08Z"},
{"Line": "=>380", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (group13.ecobuddy2.UserNavigation.stopMarkers.isEmpty()) { group13.ecobuddy2.UserNavigation.makeALongToast(\"Cleaning up...\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/7534/buggy-version/EcoBuddy2.app.src.main.java.group13.ecobuddy2.UserNavigation.java", "BodyUseAPI": [], "Fixed commit": "3ccd438e9f212f3e792fe769ed49ed85e79b3f10", "Url": "https://api.github.com/repos/ariffia/Workspace-Cglotr", "Date": "2015-04-26T15:00:38Z"},
{"Line": "=>414", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((gac.coolteamname.fundnominal.FundListFragment.mWeightCheck) != (mFund.getWeight())) { gac.coolteamname.fundnominal.FundListFragment.mAutoUpdateFlag = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/7668/buggy-version/app.src.main.java.gac.coolteamname.fundnominal.FundListFragment.java", "BodyUseAPI": [], "Fixed commit": "5b589cb00ef79956e21c1c832844b2e9df2b8262", "Url": "https://api.github.com/repos/Fund-nominal/FundNominal", "Date": "2016-04-28T20:30:41Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.transitionPoints) == null) { return new java.awt.geom.Point2D[]{ }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/3597/buggy-version/violet-framework.src.main.java.com.horstmann.violet.product.diagram.abstracts.edge.AbstractEdge.java", "BodyUseAPI": [], "Fixed commit": "8bd6b6efca1f31f97e0eb409dcd4d8a7ba587b4b", "Url": "https://api.github.com/repos/violetumleditor/code", "Date": "2013-06-14T23:33:23Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (getFragmentManager())) { super.dismissAllowingStateLoss(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/5194/buggy-version/vector.src.main.java.im.vector.fragments.VectorUnknownDevicesFragment.java", "BodyUseAPI": [], "Fixed commit": "8e59d91df35c9c7b622b52c9677dcb8543fafbb7", "Url": "https://api.github.com/repos/vector-im/riot-android", "Date": "2017-07-10T13:14:59Z"},
{"Line": "=>547", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.musicroom.database.MainDBHandler.selectWithParameters(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (avg_rating.getJSONObject(0).has(\"avg_rating\")) { currentStudio.put(\"avg_rating\", avg_rating.getJSONObject(0).getDouble(\"avg_rating\")); }else { currentStudio.put(\"avg_rating\", \"no reviews\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/8999/buggy-version/MusicRoom.src.com.musicroom.resources.StudiosResource.java", "BodyUseAPI": ["avg_rating.getJSONObject(0).getDouble(java.lang.String)", "org.json.JSONArray.getJSONObject(int)", "org.json.JSONObject.put(java.lang.String,avg_rating.getJSONObject(0).getDouble(\"avg_rating\"))"], "Fixed commit": "17aca190863f12147548302d4f714d1400ebecaa", "Url": "https://api.github.com/repos/eyaldar/WebDevelopment", "Date": "2014-12-24T11:56:21Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (quantity < 1) { javax.swing.JOptionPane.showMessageDialog(new javax.swing.JFrame(), \"Amount must be positive\"); }else { model.getCurrentPurchaseTableModel().addItem(new ee.ut.math.tvt.vapradjailusad.domain.data.SoldItem(stockItem, quantity)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/2502/buggy-version/POS.src.ee.ut.math.tvt.vapradjailusad.ui.panels.PurchaseItemPanel.java", "BodyUseAPI": ["model.getCurrentPurchaseTableModel().addItem(ee.ut.math.tvt.vapradjailusad.domain.data.SoldItem)"], "Fixed commit": "f67a81871fe07214dbb04b6c89b2060183720211", "Url": "https://api.github.com/repos/AndreasGP/BestPOS", "Date": "2014-11-11T17:12:50Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (form != null) { deleteRnrFormItems(form.getRnrFormItemListWrapper()); deleteRegimenItems(form.getRegimenItemListWrapper()); deleteBaseInfoItems(form.getBaseInfoItemListWrapper()); genericDao.delete(form); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/546/buggy-version/app.src.main.java.org.openlmis.core.model.repository.RnrFormRepository.java", "BodyUseAPI": ["org.openlmis.core.model.RnRForm.getBaseInfoItemListWrapper()", "org.openlmis.core.model.repository.RnrFormRepository.deleteRegimenItems(form.getRegimenItemListWrapper())", "org.openlmis.core.model.RnRForm.getRegimenItemListWrapper()", "org.openlmis.core.model.repository.RnrFormRepository.deleteBaseInfoItems(form.getBaseInfoItemListWrapper())", "org.openlmis.core.model.RnRForm.getRnrFormItemListWrapper()", "org.openlmis.core.model.repository.RnrFormRepository.deleteRnrFormItems(form.getRnrFormItemListWrapper())", "org.openlmis.core.persistence.GenericDao<org.openlmis.core.model.RnRForm>.delete(org.openlmis.core.model.RnRForm)"], "Fixed commit": "f5fce51a8e7f751f70dc0ac067ddf5f2c5e50e51", "Url": "https://api.github.com/repos/SIGLUS/lmis-moz-mobile", "Date": "2015-09-11T02:50:26Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (configuration != null) { configurationBuilder.answer(configuration.defaultAnswer()).resetMode(configuration.resetMode()).extraInterfaces(configuration.extraInterfaces()).serializableMode(configuration.serializableMode()).verboseLogging(configuration.verbose()).stubOnly(configuration.stub()).invocationListeners(configuration.invocationListeners()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/6266/buggy-version/mockito.src.main.java.com.pchudzik.springmock.mockito.configuration.MockitoDoubleConfigurationParser.java", "BodyUseAPI": ["configurationBuilder.answer(configuration.defaultAnswer()).resetMode(configuration.resetMode()).extraInterfaces(configuration.extraInterfaces())", "configurationBuilder.answer(configuration.defaultAnswer()).resetMode(configuration.resetMode()).extraInterfaces(configuration.extraInterfaces()).serializableMode(configuration.serializableMode()).verboseLogging(configuration.verbose())", "com.pchudzik.springmock.mockito.configuration.MockitoDouble.defaultAnswer()", "configurationBuilder.answer(configuration.defaultAnswer()).resetMode(configuration.resetMode()).extraInterfaces(configuration.extraInterfaces()).serializableMode(configuration.serializableMode()).verboseLogging(configuration.verbose()).stubOnly(configuration.stub())", "com.pchudzik.springmock.mockito.configuration.MockitoDouble.verbose()", "com.pchudzik.springmock.mockito.configuration.MockitoDouble.extraInterfaces()", "com.pchudzik.springmock.mockito.configuration.MockitoDouble.stub()", "configurationBuilder.answer(configuration.defaultAnswer()).resetMode(configuration.resetMode()).extraInterfaces(configuration.extraInterfaces()).serializableMode(configuration.serializableMode())", "com.pchudzik.springmock.mockito.configuration.MockitoDouble.serializableMode()", "com.pchudzik.springmock.mockito.configuration.MockitoDouble.invocationListeners()", "configurationBuilder.answer(configuration.defaultAnswer()).resetMode(configuration.resetMode()).extraInterfaces(configuration.extraInterfaces()).serializableMode(configuration.serializableMode()).verboseLogging(configuration.verbose()).stubOnly(configuration.stub()).invocationListeners(configuration.invocationListeners())", "com.pchudzik.springmock.mockito.configuration.MockitoDouble.resetMode()", "configurationBuilder.answer(configuration.defaultAnswer()).resetMode(configuration.resetMode())", "com.pchudzik.springmock.mockito.configuration.MockitoDoubleConfiguration.MockitoDoubleConfigurationBuilder.answer(configuration.defaultAnswer())"], "Fixed commit": "41d429b939f085b5d5fd359662c96772bd93593e", "Url": "https://api.github.com/repos/pchudzik/springmock", "Date": "2017-08-04T06:14:59Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (configuration != null) { builder.answer(configuration.defaultAnswer()).resetMode(configuration.resetMode()).extraInterfaces(configuration.extraInterfaces()).serializableMode(configuration.serializableMode()).verboseLogging(configuration.verbose()).stubOnly(configuration.stub()).invocationListeners(configuration.invocationListeners()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/6266/buggy-version/mockito.src.main.java.com.pchudzik.springmock.mockito.configuration.MockitoDoubleConfigurationParser.java", "BodyUseAPI": ["builder.answer(configuration.defaultAnswer()).resetMode(configuration.resetMode()).extraInterfaces(configuration.extraInterfaces()).serializableMode(configuration.serializableMode()).verboseLogging(configuration.verbose())", "com.pchudzik.springmock.mockito.configuration.MockitoDouble.resetMode()", "com.pchudzik.springmock.mockito.configuration.MockitoDouble.stub()", "com.pchudzik.springmock.mockito.configuration.MockitoDouble.verbose()", "com.pchudzik.springmock.mockito.configuration.MockitoDouble.invocationListeners()", "builder.answer(configuration.defaultAnswer()).resetMode(configuration.resetMode()).extraInterfaces(configuration.extraInterfaces()).serializableMode(configuration.serializableMode())", "com.pchudzik.springmock.mockito.configuration.MockitoDoubleConfiguration.MockitoDoubleConfigurationBuilder.answer(configuration.defaultAnswer())", "com.pchudzik.springmock.mockito.configuration.MockitoDouble.serializableMode()", "builder.answer(configuration.defaultAnswer()).resetMode(configuration.resetMode()).extraInterfaces(configuration.extraInterfaces())", "com.pchudzik.springmock.mockito.configuration.MockitoDouble.defaultAnswer()", "com.pchudzik.springmock.mockito.configuration.MockitoDouble.extraInterfaces()", "builder.answer(configuration.defaultAnswer()).resetMode(configuration.resetMode()).extraInterfaces(configuration.extraInterfaces()).serializableMode(configuration.serializableMode()).verboseLogging(configuration.verbose()).stubOnly(configuration.stub()).invocationListeners(configuration.invocationListeners())", "builder.answer(configuration.defaultAnswer()).resetMode(configuration.resetMode()).extraInterfaces(configuration.extraInterfaces()).serializableMode(configuration.serializableMode()).verboseLogging(configuration.verbose()).stubOnly(configuration.stub())", "builder.answer(configuration.defaultAnswer()).resetMode(configuration.resetMode())"], "Fixed commit": "41d429b939f085b5d5fd359662c96772bd93593e", "Url": "https://api.github.com/repos/pchudzik/springmock", "Date": "2017-08-04T06:14:59Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cmput301f17t09.goalsandhabits.Follow_Activity.UsersArrayAdapter.getItem(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((p.getHabitIds()) != null) { countNum.setText(java.lang.Integer.toString(p.getHabitIds().size())); }else { countNum.setText(\"0\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/2784/buggy-version/GoalsAndHabits.app.src.main.java.cmput301f17t09.goalsandhabits.Follow_Activity.UsersArrayAdapter.java", "BodyUseAPI": ["java.lang.Integer.toString(p.getHabitIds().size())", "p.getHabitIds().size()", "cmput301f17t09.goalsandhabits.Profiles.Profile.getHabitIds()", "android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "ad013c37ba50eab49d4f39826c28e56c64e07fd1", "Url": "https://api.github.com/repos/CMPUT301F17T09/GoalsAndHabits", "Date": "2017-12-05T04:48:27Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState == null) { startUp(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/4644/buggy-version/BitcoinDashboard.app.src.main.java.com.example.hai.bitcoindashboard.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "2cccad49b12974e2bf30476cf4dd914d97e436df", "Url": "https://api.github.com/repos/hdang-Git/Android", "Date": "2016-12-12T12:00:29Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == tstate) { return us.dot.its.jpo.ode.j2735.dsrc.TransmissionState.unavailable; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/3859/buggy-version/jpo-ode-plugins.src.main.java.us.dot.its.jpo.ode.plugin.j2735.oss.OssVehicleSituationRecord.java", "BodyUseAPI": [], "Fixed commit": "e21e4291c57a1f6f0cdd7234c47dfcd4d8079606", "Url": "https://api.github.com/repos/usdot-jpo-ode/jpo-ode", "Date": "2017-07-11T16:50:46Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mPlayer) != null) { mPlayer.release(); mPlayer = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/750/buggy-version/app.src.main.java.com.fyf.parkinglot.activity.groupChat.GroupChatListAdapter.java", "BodyUseAPI": [], "Fixed commit": "d14a3297b3c3d004508d2ff051175fc810027c7e", "Url": "https://api.github.com/repos/617218557/ParkingLot", "Date": "2016-05-06T09:18:23Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mPlayer) != null) { mPlayer.release(); mPlayer = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/750/buggy-version/app.src.main.java.com.fyf.parkinglot.activity.singleChat.SingleChatListAdapter.java", "BodyUseAPI": [], "Fixed commit": "d14a3297b3c3d004508d2ff051175fc810027c7e", "Url": "https://api.github.com/repos/617218557/ParkingLot", "Date": "2016-05-06T09:18:23Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (model.getCurrentTab().equals(MainWindow.TAB_TASK_COMPLETE)) { lastShownList = model.getFilteredCompleteTaskList(); }else { lastShownList = model.getFilteredIncompleteTaskList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/1739/buggy-version/src.main.java.seedu.todolist.logic.commands.EditCommand.java", "BodyUseAPI": ["seedu.todolist.logic.commands.EditCommand.getFilteredIncompleteTaskList()", "seedu.todolist.logic.commands.EditCommand.getFilteredCompleteTaskList()"], "Fixed commit": "993a4d89a0499496eca895df26eb4f6fb2a25045", "Url": "https://api.github.com/repos/CS2103AUG2016-T15-C3/main", "Date": "2016-10-27T02:41:47Z"},
{"Line": "=>385", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((files.size()) == 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/5323/buggy-version/components.formats-common.src.loci.common.Location.java", "BodyUseAPI": [], "Fixed commit": "38c3cfd85453e412acf3e1b7ec4fda9f4212b549", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2014-04-24T08:04:13Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.csv.CSVParser.parse(line, CSVFormat.RFC4180).getRecords()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((records == null) || ((records.size()) == 0)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/4829/buggy-version/src.org.mtransit.parser.gtfs.GReader.java", "BodyUseAPI": [], "Fixed commit": "03f7e872fc721b429070c12c7d8feda4c490f971", "Url": "https://api.github.com/repos/mtransitapps/parser", "Date": "2015-01-05T07:47:03Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((height == 0) || (width == 0)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/4379/buggy-version/picasso.src.main.java.com.squareup.picasso.VectorResourceRequestHandler.java", "BodyUseAPI": [], "Fixed commit": "53e6a578583b8870520e0f761d24d66cf375c84d", "Url": "https://api.github.com/repos/gazeing/picasso", "Date": "2017-09-18T01:07:19Z"},
{"Line": "=>425", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.redhat.ceylon.compiler.java.codegen.CodegenUtil.getTopmostRefinedDeclaration(param.getModel())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.redhat.ceylon.compiler.java.codegen.CodegenUtil.isRaw(refinedParameter)) { flags |= AbstractTransformer.JT_RAW; }else if (!(refinedParameterType.getTypeArgumentList().isEmpty())) { flags |= AbstractTransformer.JT_TYPE_ARGUMENT; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/8896/buggy-version/src.com.redhat.ceylon.compiler.java.codegen.MethodDefinitionBuilder.java", "BodyUseAPI": [], "Fixed commit": "33d1bfe7ab601a907b0e482510d4c1606fe45c4c", "Url": "https://api.github.com/repos/ceylon/ceylon-compiler", "Date": "2015-02-26T23:30:58Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((r.getProperty(VariantRec.VAR_DEPTH)) == null) || ((r.getProperty(VariantRec.DEPTH)) == null)) { row.put(\"AlleleFrequency\", (-99.9)); }else { double varFreq = (r.getProperty(VariantRec.VAR_DEPTH)) / (r.getProperty(VariantRec.DEPTH)); row.put(\"AlleleFrequency\", varFreq); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/587/buggy-version/src.main.java.operator.variant.VariantUploader.java", "BodyUseAPI": ["buffer.variant.VariantRec.getProperty(VariantRec.VAR_DEPTH)", "buffer.variant.VariantRec.getProperty(VariantRec.DEPTH)"], "Fixed commit": "5af1b0ffb6cef4a0f8b2bb57a8297df74c58ed40", "Url": "https://api.github.com/repos/ARUP-NGS/Pipeline", "Date": "2016-04-27T15:19:05Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) != null) { getActivity().getSupportFragmentManager().popBackStack(null, FragmentManager.POP_BACK_STACK_INCLUSIVE); getActivity().getSupportFragmentManager().beginTransaction().replace(((android.view.ViewGroup) (getView().getParent())).getId(), frag).addToBackStack(null).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/1962/buggy-version/source-code.app.src.main.java.org.buildmlearn.toolkit.comprehensiontemplate.fragment.MainFragment.java", "BodyUseAPI": [], "Fixed commit": "9d1382ac47a1657bf76b6a7f7f743258e298acc4", "Url": "https://api.github.com/repos/codingblazer/BuildmLearn-Toolkit-Android", "Date": "2016-12-13T14:25:22Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (net.anei.cadpage.parsers.PA.PAChesterCountyNParser.DATE_PTN.matcher(data.strCross).find()) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/1699/buggy-version/cadpage-parsers.src.main.java.net.anei.cadpage.parsers.PA.PAChesterCountyNParser.java", "BodyUseAPI": [], "Fixed commit": "203e93d1b6be35b75c758b9ce802e5745e1d854a", "Url": "https://api.github.com/repos/cadpage/cadpage-parsers", "Date": "2017-12-31T18:11:57Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (collection.isEmpty()) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/2227/buggy-version/src.main.java.ilarkesto.core.base.Utl.java", "BodyUseAPI": [], "Fixed commit": "590a6cd64f84bb0b2b7f559dd20b869de9c3971e", "Url": "https://api.github.com/repos/Kunagi/ilarkesto", "Date": "2014-08-02T15:11:41Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((geometry.get(\"lat\")) == null) { return null; }else { return geometry.get(\"lat\").toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/270/buggy-version/src.com.example.thebarapp.LocationParser.java", "BodyUseAPI": ["geometry.get(\"lat\").toString()", "org.json.JSONObject.get(java.lang.String)"], "Fixed commit": "bdf900d24ddd313e69107f7615a8a69317cf2b99", "Url": "https://api.github.com/repos/mziemer21/TheBarApp", "Date": "2014-07-02T02:52:00Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((geometry.get(\"lng\")) == null) { return null; }else { return geometry.get(\"lng\").toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/270/buggy-version/src.com.example.thebarapp.LocationParser.java", "BodyUseAPI": ["org.json.JSONObject.get(java.lang.String)", "geometry.get(\"lng\").toString()"], "Fixed commit": "bdf900d24ddd313e69107f7615a8a69317cf2b99", "Url": "https://api.github.com/repos/mziemer21/TheBarApp", "Date": "2014-07-02T02:52:00Z"},
{"Line": "=>1686", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.biglybt.plugin.magnet.AENetworkClassifier.categoriseAddress(source)) == (AENetworkClassifier.AT_PUBLIC)) { contactFound(db.importContact(sources[i])); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/3002/buggy-version/core.src.com.biglybt.plugin.magnet.MagnetPlugin.java", "BodyUseAPI": [], "Fixed commit": "2e2de882cb2cc41013e4806d7dedda2bfcf997b8", "Url": "https://api.github.com/repos/BiglySoftware/BiglyBT", "Date": "2017-11-07T20:26:50Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (PublicTadpoleDefine.DBOperationType.PRODUCTION.toString().equals(userDB.getOperation_type())) { return java.lang.String.format(\"[%s]%s\", org.apache.commons.lang.StringUtils.substring(userDB.getOperation_type(), 0, 1), userDB.getDisplay_name()); }else { return userDB.getDisplay_name(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/2882/buggy-version/com.hangum.tadpole.rdb.core.src.com.hangum.tadpole.rdb.core.editors.main.MainEditorInput.java", "BodyUseAPI": ["com.hangum.tadpole.engine.query.dao.system.UserDBDAO.getDisplay_name()", "com.hangum.tadpole.engine.query.dao.system.UserDBDAO.getOperation_type()", "java.lang.String.format(java.lang.String,org.apache.commons.lang.StringUtils.substring(userDB.getOperation_type(), 0, 1),userDB.getDisplay_name())", "com.hangum.tadpole.engine.query.dao.system.UserDBDAO.getDisplay_name()", "org.apache.commons.lang.StringUtils.substring(userDB.getOperation_type(),int,int)"], "Fixed commit": "07cffb81f25ae1a3d266548ff800e8484ab6ab5e", "Url": "https://api.github.com/repos/sunhanintech/TadpoleForDBTools", "Date": "2017-09-13T17:08:37Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (savedInstanceState != null) { time = savedInstanceState.getInt(\"Time\"); courseFaults = savedInstanceState.getInt(\"CourseFaults\"); timeFaults = savedInstanceState.getInt(\"TimeFaults\"); if ((time) < 0) sctTextView.setTextColor(android.support.v4.content.ContextCompat.getColor(com.example.android.agilityscorecounter.Counter.context, R.color.red)); displayFaults(courseFaults); displayTimeFaults(timeFaults); displayTime(time); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/8654/buggy-version/app.src.main.java.com.example.android.agilityscorecounter.Counter.java", "BodyUseAPI": ["android.os.Bundle.getInt(java.lang.String)", "android.os.Bundle.getInt(java.lang.String)", "android.os.Bundle.getInt(java.lang.String)"], "Fixed commit": "5d11c70ca8b4af6b3aefee6c86b99bb7c87e0f22", "Url": "https://api.github.com/repos/ldori0309/AgilityScoreCounter", "Date": "2017-03-31T11:03:00Z"},
{"Line": "=>320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tmpDiffSize < 0) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/4764/buggy-version/src.ch.hsr.eyecam.EyeCamActivity.java", "BodyUseAPI": [], "Fixed commit": "b79bafa658841c351beed9fa5ca31bc442f5b602", "Url": "https://api.github.com/repos/tom-and-jerry/eyeCam", "Date": "2012-03-12T14:20:29Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getClass().getClassLoader()) instanceof org.n52.wps.algorithm.util.CustomClassLoader) { java.lang.String baseDir = ((org.n52.wps.algorithm.util.CustomClassLoader) (this.getClass().getClassLoader())).getBaseDir(); xmlDesc = org.n52.wps.server.UploadedAlgorithmRepository.class.getClassLoader().getResourceAsStream((((baseDir + (java.io.File.separator)) + className) + \".xml\")); }else { xmlDesc = this.getClass().getResourceAsStream(((\"/\" + className) + \".xml\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/2476/buggy-version/52n-wps-algorithm.src.main.java.org.n52.wps.server.AbstractAlgorithm.java", "BodyUseAPI": [], "Fixed commit": "9b6233474c12860b3285e92f68dbe59853f416d0", "Url": "https://api.github.com/repos/bpross-52n/WPS", "Date": "2016-06-06T15:27:27Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sb.indexOf(s.toString())) <= 0) { if ((s.toString().length()) >= 8) { sb.append((((s + \" | \") + (count(s))) + \" \\n\")); }else { sb.append((((s + \" | \") + (count(s))) + \" \\n\")); } total += count(s); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/4903/buggy-version/Programmieren2Uebungen.src.uebung3.WordColl.java", "BodyUseAPI": ["java.lang.String.length()", "uebung3.WordColl.count(java.lang.Object)", "java.lang.StringBuffer.append(java.lang.String)", "uebung3.WordColl.count(java.lang.Object)", "java.lang.StringBuffer.append(java.lang.String)", "uebung3.WordColl.count(java.lang.Object)", "java.lang.Object.toString()"], "Fixed commit": "8259c37dbdb9f7339e7f842acdc8c410fcce8c57", "Url": "https://api.github.com/repos/Mal2012/Programmieren2Uebungen", "Date": "2013-04-04T10:17:10Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.jl.ratatouille.service.DataService.getSharedOptions(com.example.jl.ratatouille.activity.FilterActivity)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (options != null) { mEditStart.setText(options.get(\"date_start\")); mEditEnd.setText(options.get(\"date_end\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/3428/buggy-version/Ratatouille_Project.app.src.main.java.com.example.jl.ratatouille.activity.FilterActivity.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)", "android.widget.EditText.setText(java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)", "android.widget.EditText.setText(java.lang.String)"], "Fixed commit": "6c4faab90ff615505c1ca9f9fda15926ad1ab302", "Url": "https://api.github.com/repos/Jason27chan/Ratatouille", "Date": "2017-11-06T00:51:46Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gson.Gson.fromJson(java.lang.String,java.lang.reflect.Type)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (optionsTree != null) { for (java.lang.String k : optionsTree.keySet()) { options.put(k, optionsTree.get(k)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/3428/buggy-version/Ratatouille_Project.app.src.main.java.com.example.jl.ratatouille.service.DataService.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.keySet()", "java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)"], "Fixed commit": "6c4faab90ff615505c1ca9f9fda15926ad1ab302", "Url": "https://api.github.com/repos/Jason27chan/Ratatouille", "Date": "2017-11-06T00:51:46Z"},
{"Line": "=>331", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.common.collect.ImmutableSet.copyOf(com.google.common.collect.FluentIterable.from(data.getPhenotypes()).transformAndConcat(getOntologies).filter(com.google.common.base.Predicates.notNull()))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((ontologies == null) || (ontologies.isEmpty())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/9237/buggy-version/genophenbrowser-client.src.main.java.com.gmi.nordborglab.browser.client.mvp.presenter.diversity.phenotype.PhenotypeUploadWizardPresenterWidget.java", "BodyUseAPI": [], "Fixed commit": "2b8d1c37588771e28c8b5f107b9ab9adbdf363fe", "Url": "https://api.github.com/repos/timeu/GWA-Portal", "Date": "2015-01-26T17:39:30Z"},
{"Line": "=>336", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (response == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/9237/buggy-version/genophenbrowser-client.src.main.java.com.gmi.nordborglab.browser.client.mvp.presenter.diversity.phenotype.PhenotypeUploadWizardPresenterWidget.java", "BodyUseAPI": [], "Fixed commit": "2b8d1c37588771e28c8b5f107b9ab9adbdf363fe", "Url": "https://api.github.com/repos/timeu/GWA-Portal", "Date": "2015-01-26T17:39:30Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((accs == null) || (accs.isEmpty())) return com.google.common.collect.Sets.newHashSet();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/9237/buggy-version/genophenbrowser-server.src.main.java.com.gmi.nordborglab.browser.server.service.impl.OntologyServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "2b8d1c37588771e28c8b5f107b9ab9adbdf363fe", "Url": "https://api.github.com/repos/timeu/GWA-Portal", "Date": "2015-01-26T17:39:30Z"},
{"Line": "=>653", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((remoteRequest.getPriority().getPriority()) == 20) { asks.get(order).remove(remoteRequest); asks.get(order).add(remoteRequest); }else { for (java.util.Set<org.apache.hadoop.yarn.api.records.ResourceRequest> ask : asks) { ask.remove(remoteRequest); ask.add(remoteRequest); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/7793/buggy-version/hadoop-mapreduce-project.hadoop-mapreduce-client.hadoop-mapreduce-client-app.src.main.java.org.apache.hadoop.mapreduce.v2.app.rm.RMContainerRequestor.java", "BodyUseAPI": ["asks.get(order).add(org.apache.hadoop.yarn.api.records.ResourceRequest)", "asks.get(order).remove(org.apache.hadoop.yarn.api.records.ResourceRequest)", "java.util.Set<org.apache.hadoop.yarn.api.records.ResourceRequest>.remove(org.apache.hadoop.yarn.api.records.ResourceRequest)", "java.util.Set<org.apache.hadoop.yarn.api.records.ResourceRequest>.add(org.apache.hadoop.yarn.api.records.ResourceRequest)"], "Fixed commit": "28841795d5cff40412cf347517db3cf879b6cdd9", "Url": "https://api.github.com/repos/timmyyao/hadoop", "Date": "2016-09-29T02:03:47Z"},
{"Line": "=>743", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.lostagain.nl.GWTish.Management.GWTishModelManagement.cancelCurrentTouchEvent) { com.lostagain.nl.GWTish.Management.GWTishModelManagement.cancelCurrentTouchEvent = false; return onesHit; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/5467/buggy-version/core.src.com.lostagain.nl.GWTish.Management.GWTishModelManagement.java", "BodyUseAPI": [], "Fixed commit": "6f184193c12b37681e94d9a4696105e73c6fd2be", "Url": "https://api.github.com/repos/ThomasWrobel/MeshExplorerGDX", "Date": "2016-11-02T17:22:13Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (doCheckPath) { absolutePath = new java.lang.String[(elements.length) - 1]; for (int i = 1; i < (elements.length); i++) absolutePath[(i - 1)] = elements[i]; }else { if (fullPath.startsWith(\"/\")) { absolutePath = new java.lang.String[(elements.length) - 1]; for (int i = 1; i < (elements.length); i++) absolutePath[(i - 1)] = elements[i]; }else { relativePath = new java.lang.String[elements.length]; for (int i = 0; i < (elements.length); i++) relativePath[i] = elements[i]; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/7099/buggy-version/src.Path.java", "BodyUseAPI": [], "Fixed commit": "3cd0f76c7963dc04ae79543462406b92ea9802ba", "Url": "https://api.github.com/repos/qingPATHng-jia/TLS_client_server", "Date": "2015-03-30T03:30:22Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((qef) != null) { out += java.lang.String.format(\"%-15s %-25s%n\", \"URL:\", qef.getId()); }else { out += java.lang.String.format(\"%-15s %-25s%n\", \"URL:\", \"null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/1575/buggy-version/components-core.src.main.java.org.dllearner.kb.SparqlEndpointKS.java", "BodyUseAPI": [], "Fixed commit": "53f75cd08d603fe77aa854f06b019a114c8ab376", "Url": "https://api.github.com/repos/SmartDataAnalytics/DL-Learner", "Date": "2015-07-08T13:30:03Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.jgit.treewalk.TreeWalk.forPath(org.eclipse.jgit.lib.Repository,java.lang.String,_tree.getId())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (pathWalk == null) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/6040/buggy-version/src.java.org.thiesen.ant.git.GitInfoExtractor.java", "BodyUseAPI": [], "Fixed commit": "3ac458fa4c8bbce84cc135aa9e37b6c1f8fb44b0", "Url": "https://api.github.com/repos/1stone/gitant", "Date": "2015-06-02T10:29:57Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.smi.travel.datalayer.service.PaymentTourHotelService.getPaymentWendyFromID(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((paymentWendyId.getTourOperationDesc()) != null) { request.setAttribute(\"tourDescId\", paymentWendyId.getTourOperationDesc().getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/8124/buggy-version/src.java.com.smi.travel.controller.PaymentTourHotelController.java", "BodyUseAPI": ["com.smi.travel.datalayer.entity.PaymentWendy.getTourOperationDesc()", "javax.servlet.http.HttpServletRequest.setAttribute(java.lang.String,paymentWendyId.getTourOperationDesc().getId())", "paymentWendyId.getTourOperationDesc().getId()"], "Fixed commit": "bc4d52bc1178afa97c0bed3a07b9067a45c4e82c", "Url": "https://api.github.com/repos/iCONEXT/SMI_Travel", "Date": "2015-08-11T02:52:29Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (name.equals(\"args\")) type = ast.newArrayType(type);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/6860/buggy-version/compiler.src.aeminium.compiler.task.Task.java", "BodyUseAPI": [], "Fixed commit": "b4a3e86c849a794d6002ff7fb3aff1da6db8b234", "Url": "https://api.github.com/repos/AEminium/java2aeminium", "Date": "2012-12-14T15:50:00Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (doc.hasItem(propertyName)) { if (org.openntf.domino.big.impl.NoteList.class.equals(type)) { byte[] edges = doc.readBinary(propertyName); org.openntf.domino.big.impl.NoteList list = new org.openntf.domino.big.impl.NoteList(); list.loadByteArray(edges); result = list; }else { result = doc.getItemValue(propertyName, type); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/8909/buggy-version/domino.core.src.main.java.org.openntf.domino.graph2.impl.DElement.java", "BodyUseAPI": ["org.openntf.domino.Document.readBinary(java.lang.String)", "org.openntf.domino.Document.getItemValue(java.lang.String,java.lang.Class<T>)"], "Fixed commit": "5185d1991c45f420b45e5695eb9e8f04db322e60", "Url": "https://api.github.com/repos/OpenNTF/org.openntf.domino", "Date": "2016-02-18T22:57:20Z"},
{"Line": "=>742", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<java.lang.Integer>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(res.containsKey(valor))) p.expande(((int) (pos.getFirst())), ((int) (pos.getSecond())), valor, resaux, true); else p.expande(((int) (pos.getFirst())), ((int) (pos.getSecond())), valor, res.get(valor), true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/5866/buggy-version/UPCity.src.controladors.CtrlDomBarrios.java", "BodyUseAPI": ["mapa.Plano.expande(((int) (pos.getFirst())),((int) (pos.getSecond())),java.lang.Integer,res.get(valor),boolean)", "mapa.Plano.expande(((int) (pos.getFirst())),((int) (pos.getSecond())),java.lang.Integer,java.util.ArrayList<controladors.Restriccion_ubicacion>,boolean)", "java.util.HashMap<java.lang.Integer, java.util.ArrayList<controladors.Restriccion_ubicacion>>.get(java.lang.Integer)"], "Fixed commit": "0e786240bb5f04607ebcdb6d3131ab2a2b866831", "Url": "https://api.github.com/repos/Ivanmartinezperez/UPCity", "Date": "2013-04-30T16:06:56Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((recording.getTranscript()) != null) { org.lp20.aikuma.audio.TranscriptPlayer player = new org.lp20.aikuma.audio.TranscriptPlayer(recording, this); setPlayer(player); }else { setPlayer(new org.lp20.aikuma.audio.SimplePlayer(recording, true)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/4940/buggy-version/Aikuma.src.org.lp20.aikuma.ui.ListenActivity.java", "BodyUseAPI": ["org.lp20.aikuma.ui.ListenActivity.setPlayer(org.lp20.aikuma.audio.SimplePlayer)"], "Fixed commit": "d63d3a8ab228c128f2feafae4a331ec59a821351", "Url": "https://api.github.com/repos/lisaslyis/aikuma", "Date": "2014-07-13T11:02:54Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["strToWrite.get(i).getTranslatorComments().split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((i == 0) && (transCommLines[j].contains(\"FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.\"))) { }else { outputLines.add((\"# \" + (transCommLines[j]))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/8875/buggy-version/src.eu.pryds.ve.TranslatableStringCollection.java", "BodyUseAPI": ["java.util.Vector<java.lang.String>.add(java.lang.String)"], "Fixed commit": "98bd4659635742c929edeb8cf6ec1de40f10369f", "Url": "https://api.github.com/repos/pryds/ve", "Date": "2014-01-15T11:50:19Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (state == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/4925/buggy-version/CardGames.CardGames.src.main.java.com.worthwhilegames.cardgames.crazyeights.CrazyEightsGame.java", "BodyUseAPI": [], "Fixed commit": "05be2388f3a89cee7cb746c59b95af8536a6ea06", "Url": "https://api.github.com/repos/breber/cardgames", "Date": "2014-02-28T02:54:47Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((context.getSupportActionBar()) != null) context.getSupportActionBar().setTitle(R.string.App__name);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/1850/buggy-version/app.src.main.java.com.doplgangr.secrecy.Views.VaultsListFragment.java", "BodyUseAPI": ["context.getSupportActionBar().setTitle(R.string.App__name)", "android.support.v7.app.ActionBarActivity.getSupportActionBar()"], "Fixed commit": "8715edc728c1942c2e2d66263bd764e41bb1b798", "Url": "https://api.github.com/repos/L-Henke/secrecy", "Date": "2014-11-05T09:22:49Z"},
{"Line": "=>9", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (index != (-1)) return shapes.get(index); else return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/5295/buggy-version/app.src.main.java.log350.example.example6.ShapeContainer.java", "BodyUseAPI": ["java.util.ArrayList<log350.example.example6.Shape>.get(int)"], "Fixed commit": "cad6c6f39ca2e8340aba9fea655efd127b6c1729", "Url": "https://api.github.com/repos/GTI350-01/famingflamingo", "Date": "2017-10-19T16:25:46Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(permissionGranted)) { android.support.v4.app.ActivityCompat.requestPermissions(this, new java.lang.String[]{ Manifest.permission.CAMERA, Manifest.permission.WRITE_EXTERNAL_STORAGE }, com.fonsecakarsten.audiobooky.newCapureActivity.RequestPermissionCode); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/6887/buggy-version/app.src.main.java.com.fonsecakarsten.audiobooky.newCapureActivity.java", "BodyUseAPI": [], "Fixed commit": "f640ae654f8a9127958ee22686db4ec5e1241b80", "Url": "https://api.github.com/repos/Karsten12/Listen", "Date": "2017-06-12T06:27:05Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (jdbcTypeName != null) { result = this.datatypeManager.getBuiltInDatatype(jdbcTypeName); if (result == null) { java.lang.Integer typeCode = org.teiid.designer.metamodels.relational.util.RelationalTypeMappingImpl.SQL_TYPE_MAPPING.get(jdbcTypeName.toUpperCase()); if (typeCode != null) { result = getDatatype(typeCode); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/4299/buggy-version/plugins.org.teiid.designer.metamodels.relational.src.org.teiid.designer.metamodels.relational.util.RelationalTypeMappingImpl.java", "BodyUseAPI": ["java.lang.String.toUpperCase()", "java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)", "org.teiid.designer.core.types.DatatypeManager.getBuiltInDatatype(java.lang.String)"], "Fixed commit": "87a990efe5f2a52175a438b0a8450a35e3135cdc", "Url": "https://api.github.com/repos/mdrillin/teiid-designer", "Date": "2013-11-15T18:35:48Z"},
{"Line": "=>728", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<java.lang.String>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((eventProperties != null) && (eventProperties.has(next))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/1450/buggy-version/src.main.java.io.rakam.api.RakamClient.java", "BodyUseAPI": [], "Fixed commit": "93fdeb07424a805e7422ca36d468217c93b6106d", "Url": "https://api.github.com/repos/buremba/rakam-android", "Date": "2017-12-14T20:14:35Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((filter instanceof org.gephi.filters.spi.AttributableFilter) && ((((org.gephi.filters.spi.AttributableFilter) (filter)).getType()) == (AttributableFilter.Type.NODE))) && (((org.gephi.filters.spi.AttributableFilter) (filter)).init(hgraph))) { java.util.List<org.gephi.graph.api.Node> nodeToRemove = new java.util.ArrayList<org.gephi.graph.api.Node>(); org.gephi.filters.spi.AttributableFilter attributableFilter = ((org.gephi.filters.spi.AttributableFilter) (filter)); for (org.gephi.graph.api.Node n : hgraph.getNodes().toArray()) { if (attributableFilter.evaluate(hgraph, n)) { nodeToRemove.add(n); } } for (org.gephi.graph.api.Node n : nodeToRemove) { hgraph.removeNode(n); } attributableFilter.finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/6710/buggy-version/modules.FiltersPlugin.src.main.java.org.gephi.filters.plugin.operator.NOTBuilderNode.java", "BodyUseAPI": ["org.gephi.graph.api.HierarchicalGraph.removeNode(org.gephi.graph.api.Node)", "org.gephi.graph.api.HierarchicalGraph.getNodes()", "org.gephi.filters.spi.AttributableFilter.evaluate(org.gephi.graph.api.HierarchicalGraph,org.gephi.graph.api.Node)", "hgraph.getNodes().toArray()"], "Fixed commit": "07d67961b895666f52ddaba76c6268f9817372f3", "Url": "https://api.github.com/repos/mbastian/gephi", "Date": "2013-04-24T19:26:05Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (material != null) { data = material.getData(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/9180/buggy-version/src.main.java.org.spout.vanilla.command.AdministrationCommands.java", "BodyUseAPI": ["org.spout.api.material.Material.getData()"], "Fixed commit": "7d3b53564b2c2e0c4a20bbad8ca4a403f068f9a3", "Url": "https://api.github.com/repos/SpoutDev/Vanilla", "Date": "2012-05-10T16:53:47Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["((java.util.Map<java.lang.String, java.lang.String>) (event.getEventProperties().get(\"USER_CLAIMS\"))).get(AccountLockConstants.ACCOUNT_LOCKED_CLAIM)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.apache.commons.lang.StringUtils.isNotBlank(newStateString)) { boolean newState = java.lang.Boolean.parseBoolean(((java.util.Map<java.lang.String, java.lang.String>) (((java.util.Map<java.lang.String, java.lang.Object>) (event.getEventProperties())).get(\"USER_CLAIMS\"))).get(AccountLockConstants.ACCOUNT_LOCKED_CLAIM)); if (currentState != newState) { if (currentState) { org.wso2.carbon.identity.account.lock.handler.AccountLockHandler.lockedState.set(org.wso2.carbon.identity.account.lock.handler.AccountLockHandler.lockedStates.UNLOCKED.toString()); }else { org.wso2.carbon.identity.account.lock.handler.AccountLockHandler.lockedState.set(org.wso2.carbon.identity.account.lock.handler.AccountLockHandler.lockedStates.LOCKED.toString()); } }else { org.wso2.carbon.identity.account.lock.handler.AccountLockHandler.lockedState.set(org.wso2.carbon.identity.account.lock.handler.AccountLockHandler.lockedStates.NO_CHANGE.toString()); } }else { org.wso2.carbon.identity.account.lock.handler.AccountLockHandler.lockedState.set(org.wso2.carbon.identity.account.lock.handler.AccountLockHandler.lockedStates.NO_CHANGE.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/481/buggy-version/components.org.wso2.carbon.identity.account.lock.src.main.java.org.wso2.carbon.identity.account.lock.handler.AccountLockHandler.java", "BodyUseAPI": [], "Fixed commit": "a03b58b1a805b36f7e330279b11555c99fcfe64e", "Url": "https://api.github.com/repos/IsuraD/identity-event-handler-account-lock", "Date": "2016-07-04T12:51:15Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this) == self) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/7212/buggy-version/src.main.scala.edu.berkeley.dj.jit.SimpleJIT.java", "BodyUseAPI": [], "Fixed commit": "18de69325099429f14719f281e0d28288eb3717e", "Url": "https://api.github.com/repos/matthewfl/dj", "Date": "2015-10-10T09:52:19Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.searchbox.client.JestClient.execute(io.searchbox.action.Action<T>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (result.isSucceeded()) { throw new java.lang.RuntimeException((\"Jest request failed with \" + (result.getErrorMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/4085/buggy-version/src.main.java.nebula.plugin.metrics.dispatcher.HttpESMetricsDispatcher.java", "BodyUseAPI": ["T.getErrorMessage()"], "Fixed commit": "ba1508493987e2099a2d3eea3520e5668e728c19", "Url": "https://api.github.com/repos/nebula-plugins/gradle-metrics-plugin", "Date": "2015-06-22T20:36:01Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((goTo(currState, inputStringBuffer)) != null) { try { if ((inputStringBuffer.length()) == 2) { prepareOutput(currState.getNextStateCollection().get(bufferStr0), lineNumberCounter, columnNumberCounter); } } catch (java.lang.Exception e) { } currState = goTo(currState, inputStringBuffer); try { prepareOutput(currState, lineNumberCounter, columnNumberCounter); } catch (java.lang.Exception e) { } }else if (((goTo(currState, inputStringBuffer)) == null) && (currState.equals(root))) { try { currState = goTo(currState, bufferStr1); prepareOutput(currState, lineNumberCounter, columnNumberCounter); } catch (java.lang.Exception e) { currState = root; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/3160/buggy-version/src.timothyyudi.ahocorasickmulticharacter.controller.AhoCorasick.java", "BodyUseAPI": ["currState.getNextStateCollection().get(java.lang.String)", "java.lang.String.length()", "timothyyudi.ahocorasickmulticharacter.controller.AhoCorasick.goTo(timothyyudi.ahocorasickmulticharacter.model.State,java.lang.String)", "timothyyudi.ahocorasickmulticharacter.controller.AhoCorasick.goTo(timothyyudi.ahocorasickmulticharacter.model.State,java.lang.String)", "timothyyudi.ahocorasickmulticharacter.controller.AhoCorasick.prepareOutput(currState.getNextStateCollection().get(bufferStr0),int,int)", "timothyyudi.ahocorasickmulticharacter.controller.AhoCorasick.goTo(timothyyudi.ahocorasickmulticharacter.model.State,java.lang.String)", "timothyyudi.ahocorasickmulticharacter.model.State.equals(timothyyudi.ahocorasickmulticharacter.model.State)", "timothyyudi.ahocorasickmulticharacter.model.State.getNextStateCollection()"], "Fixed commit": "20b318b29c77b5e568239702050003540ab58837", "Url": "https://api.github.com/repos/TimothyY/ahocorasick-multicharacter", "Date": "2015-06-24T10:57:49Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((inputStringBuffer.length()) == 2) { prepareOutput(currState.getNextStateCollection().get(bufferStr0), lineNumberCounter, columnNumberCounter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/3160/buggy-version/src.timothyyudi.ahocorasickmulticharacter.controller.AhoCorasick.java", "BodyUseAPI": [], "Fixed commit": "20b318b29c77b5e568239702050003540ab58837", "Url": "https://api.github.com/repos/TimothyY/ahocorasick-multicharacter", "Date": "2015-06-24T10:57:49Z"},
{"Line": "=>1183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((bioSaxsDataCollection.getReductionStatus().getStatus()) == null) { bioSaxsDataCollection.getReductionStatus().setStatus(ISpyBStatus.NOT_STARTED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/8903/buggy-version/plugins.uk.ac.gda.devices.bssc.src.uk.ac.gda.devices.bssc.ispyb.BioSAXSISPyBviaOracle.java", "BodyUseAPI": ["bioSaxsDataCollection.getReductionStatus().setStatus(ISpyBStatus.NOT_STARTED)", "uk.ac.gda.devices.bssc.ispyb.ISAXSDataCollection.getReductionStatus()"], "Fixed commit": "73319cfdc93516bbeb9924e8b2d292cce1d08c58", "Url": "https://api.github.com/repos/openGDA/gda-scm", "Date": "2014-02-17T16:02:31Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.maxifier.mxcache.legacy.layered.MxLayeredStrategy.isInList()) { manager.moveToEnd(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/5434/buggy-version/mxcache-legacy.src.main.java.com.maxifier.mxcache.legacy.layered.MxLayeredStrategy.java", "BodyUseAPI": [], "Fixed commit": "c63477c5d3912eb9e02415a2c4655e2b9802fa77", "Url": "https://api.github.com/repos/maxifier/mxcache", "Date": "2011-11-02T12:01:31Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (files.get(d).getName().endsWith(\"xml\")) { java.lang.String path = com.automic.utils.XMLUtils.getFolderFromXMLFile(files.get(d)); if ((path != null) && (!(path.trim().equals(\"\")))) { if (!(UniquePaths.contains(path))) { UniquePaths.add(path); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/6699/buggy-version/src.com.automic.actions.ImportObjects.java", "BodyUseAPI": [], "Fixed commit": "4485d67fd78ee24b682bd3c072d1b6222fd2669a", "Url": "https://api.github.com/repos/brendanSapience/UC4-Automic-AE-CLI-OBJECTS-Import", "Date": "2017-07-15T02:12:13Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Properties.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (org.apache.commons.lang.StringUtils.isNotEmpty(value)) { boolean toEncloseInDoubleQuotes = (value.indexOf(' ')) >= 0; if (((value.charAt(0)) == '\\\"') && ((value.charAt(((value.length()) - 1))) == '\\\"')) { value = value.substring(1, ((value.length()) - 1)); toEncloseInDoubleQuotes = true; } value = value.replace(\"\\\"\", \"\\\\\\\"\"); if (toEncloseInDoubleQuotes) { value = (\"\\\"\" + value) + \"\\\"\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/7920/buggy-version/modules.server.src.main.java.org.sapia.corus.processor.task.PerformExecProcessTask.java", "BodyUseAPI": ["java.lang.String.charAt(int)", "java.lang.String.charAt(int)", "java.lang.String.length()", "java.lang.String.indexOf(char)", "java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "f82f55c5a928a516ef25a25d9c3921f680b78cc3", "Url": "https://api.github.com/repos/sapia-oss/corus", "Date": "2015-01-23T01:46:03Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((docValue == null) && (defaultValue == null)) { field = new org.apache.avro.Schema.Field(element.getName(), schemaForField, null, null); }else { field = new org.apache.avro.Schema.Field(element.getName(), schemaForField, docValue, defaultValueNode, orderValue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/922/buggy-version/datamapper-tool.org.wso2.developerstudio.visualdatamapper.diagram.src.org.wso2.developerstudio.datamapper.diagram.custom.persistence.AvroSchemaTransformer.java", "BodyUseAPI": [], "Fixed commit": "ad049f92bc6cf16752d1debb914941ea558b5bd3", "Url": "https://api.github.com/repos/wso2/developer-studio", "Date": "2016-02-27T04:50:17Z"},
{"Line": "=>323", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.structr.web.entity.dom.DOMNode.getAncestors()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(ancestors.isEmpty())) { final org.structr.web.entity.dom.DOMNode rootNode = ((org.structr.web.entity.dom.DOMNode) (ancestors.get(((ancestors.size()) - 1)))); if (rootNode instanceof org.structr.web.entity.dom.Page) { page = ((org.structr.web.entity.dom.Page) (rootNode)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/5314/buggy-version/structr-ui.src.main.java.org.structr.web.entity.dom.DOMNode.java", "BodyUseAPI": ["java.util.List<org.w3c.dom.Node>.get(int)", "java.util.List<org.w3c.dom.Node>.size()"], "Fixed commit": "2ae103f3eefdcaddedbabee949b37c6e855b7da2", "Url": "https://api.github.com/repos/structr/structr", "Date": "2014-08-03T10:40:33Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["asteroids.model.Ship.getCollisionPosition(asteroids.model.Ship)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (collision == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/7186/buggy-version/src.asteroids.facade.Facade.java", "BodyUseAPI": [], "Fixed commit": "de9e02d8947f842bf4274257a65778436ba450d0", "Url": "https://api.github.com/repos/R1D1CUL0US/Asteroids", "Date": "2017-03-11T11:34:17Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (colIndex >= (columns.length)) { (exceptionCount)++; return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/5154/buggy-version/src.main.java.com.github.bartekdobija.omniture.row.DenormalizedDataRowParser.java", "BodyUseAPI": [], "Fixed commit": "4de9f12d8e9835607466df3c3966834496a463a4", "Url": "https://api.github.com/repos/bartekdobija/omniture-clickstream", "Date": "2016-09-08T18:18:56Z"},
{"Line": "=>652", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (obj instanceof double[]) { return ((double[]) (obj)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/383/buggy-version/src.DAN.DAN.java", "BodyUseAPI": [], "Fixed commit": "c7b027bce31320c3fa3d09d450182e2751974564", "Url": "https://api.github.com/repos/IoTtalk/DAN", "Date": "2016-04-24T13:33:03Z"},
{"Line": "=>570", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (B.SkipTask) { if (((LDS.Parameters.TaskCount)++) == ((TaskList.size()) - 1)) { LDS.Parameters.ExperimentDone = true; }else { SwitchToTetris(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/310/buggy-version/src.LDS.Parameters.java", "BodyUseAPI": [], "Fixed commit": "f25b27ebc3b4c520516d3807a5735f9afc7b4c53", "Url": "https://api.github.com/repos/koneill1994/FlowTetris", "Date": "2017-06-12T20:34:50Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (Cmd.equals(\"SKIP_TASK\")) { B.SkipTask = true; }else if (Cmd.equals(\"TETRIS_PARAMETER_FILE\")) { TetrisCode.Tetris.NameParameters(GetString(2)); }else if (Cmd.equals(\"NO_OF_SYMBOLS\")) { B.NoOfSymbols = GetInteger(2); }else if (Cmd.equals(\"FIRST_LETTERS\")) { Task.FirstLettersUsed = GetString(2); }else if (Cmd.equals(\"SECOND_LETTERS\")) { Task.SecondLettersUsed = GetString(2); }else if (Cmd.equals(\"LETTER_INDEX\")) { Task.LetterIndex[0] = GetInteger(2); Task.LetterIndex[1] = GetInteger(3); }else if (Cmd.equals(\"SYMBOL_DISPLAY_TIME\")) { Task.SymbolDisplayTime = GetInteger(2); Task.OriginalSymbolDisplayTime = Task.SymbolDisplayTime; }else if (Cmd.equals(\"SHOW_ACCURACY\")) { if (!(InsideTask)) { LDS.Parameters.ErrorCode = (\"LINE \" + (LineNo)) + \" MISSING TASK STATEMENT\"; return; } if (GetString(2).equals(\"TRUE\")) B.ShowAccuracy = true; }else if (Cmd.equals(\"CRITERION_TO_PERCENT\")) { if (!(InsideTask)) { LDS.Parameters.ErrorCode = (\"LINE \" + (LineNo)) + \" MISSING TASK STATEMENT\"; return; } B.TrialsToCriterion = true; B.CriterionPercent = GetInteger(2); B.TasksToSkipBackwards = GetInteger(3); W((\"CriterionPercent == \" + (B.CriterionPercent))); if ((B.TaskCounter) <= (B.TasksToSkipBackwards)) LDS.Parameters.ErrorCode = (\"LINE \" + (LineNo)) + \" SKIPPING BACK BEFORE BEGINING\"; }else if (Cmd.equals(\"CRITERION_TO_TRIALS\")) { if (!(InsideTask)) { LDS.Parameters.ErrorCode = (\"LINE \" + (LineNo)) + \" MISSING TASK STATEMENT\"; return; } B.TrialsLimited = true; B.CriterionToTrials = GetInteger(2); }else if (Cmd.equals(\"HOW_MUCH_TO_DECREASE_THE_DELAY\")) { FocusTask.IsTetrisTask = true; FocusTask.HowMuchToDecreaseTheDelay = GetInteger(2); }else if (Cmd.equals(\"THRESHHOLD_IN_ACCURACY_TO_DECREASE_THE_DELAY\")) { FocusTask.ThreshHoldInAccuracyToDecreaseTheDelay = GetInteger(2); }else if (Cmd.equals(\"THRESHHOLD_FOR_SWITCHING_TO_TETRIS\")) { FocusTask.ThreshHoldForSwitchingToTetris = GetInteger(2); }else if (Cmd.equals(\"TAKE_SURVEY\")) { LDS.Survey tmp = new LDS.Survey(GetString(2), GetString(3), GetInteger(4)); if (GetString(5).equals(\"FALSE\")) tmp.SetRandomization(false); LDS.Parameters.SurveyArrayList.add(tmp); }else if ((Cmd.charAt(0)) == '/') { continue; }else if ((Cmd.length()) == 0) { LDS.Parameters.ErrorCode = (\"LINE \" + (LineNo)) + \" BLANK LINES NOT ALLOWED\"; return; }else { LDS.Parameters.ErrorCode = (((\"DO NOT RECOGNIZE PARAMETER FILE LINE \" + (LineNo)) + \" LINE = '\") + (Arg)) + \"'\"; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/310/buggy-version/src.LDS.Parameters.java", "BodyUseAPI": [], "Fixed commit": "f25b27ebc3b4c520516d3807a5735f9afc7b4c53", "Url": "https://api.github.com/repos/koneill1994/FlowTetris", "Date": "2017-06-12T20:34:50Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (position == (-1)) { view.setTranslationX(((view.getWidth()) * (-1))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/5635/buggy-version/ViewPagerTransformsLibrary.src.com.ToxicBakery.viewpager.transforms.ZoomOutTranformer.java", "BodyUseAPI": [], "Fixed commit": "3d52a6feeeae3371b70d917357312c1857bb6353", "Url": "https://api.github.com/repos/ToxicBakery/ViewPagerTransforms", "Date": "2014-05-29T12:48:43Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((gameLoopThread.getState()) == (java.lang.Thread.State.NEW)) { gameLoopThread.setRunning(true); gameLoopThread.start(); }else { goHome(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/8997/buggy-version/app.src.main.java.com.omkarmoghe.androidgamedev.GameView.java", "BodyUseAPI": ["com.omkarmoghe.androidgamedev.GameLoopThread.setRunning(boolean)", "com.omkarmoghe.androidgamedev.GameLoopThread.start()"], "Fixed commit": "1fb11bd0c5e65fa22a8e5a3da1a0d52ebfb46047", "Url": "https://api.github.com/repos/anksh/AndroidGameDev", "Date": "2015-03-01T10:39:17Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((resultObj.getInt(\"status\")) == 210) { java.lang.System.out.println(\"\u6ca1\u6709\u4fe1\u606f\"); pw.println(\"\u6ca1\u6709\u4fe1\u606f\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/4147/buggy-version/src.main.java.verify_service.credit_check.java", "BodyUseAPI": [], "Fixed commit": "fa533c83085e52aceeb4e81a791a0fd253b753c4", "Url": "https://api.github.com/repos/fanfannnmn/aliyun-id-verify", "Date": "2017-11-03T03:37:14Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((currentSentence.length()) > 0) { sentences.add(currentSentence.toString().trim()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/4747/buggy-version/nlp.src.main.java.smile.nlp.tokenizer.SimpleSentenceSplitter.java", "BodyUseAPI": ["java.lang.String.trim()", "java.util.ArrayList<java.lang.String>.add(java.lang.String)", "java.lang.StringBuilder.toString()"], "Fixed commit": "ef2f82a7252c02868d02784ac6bba5dbb525c598", "Url": "https://api.github.com/repos/haifengl/smile", "Date": "2017-08-19T03:11:08Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<com.smart.location.CellProb>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (cp != null) { cellNumber = cp.getId(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/9202/buggy-version/SmartLocation.src.com.smart.location.HomeActivity.java", "BodyUseAPI": ["com.smart.location.CellProb.getId()"], "Fixed commit": "6a3028ac763c831e30e26da7ac5fa4b7880b27f3", "Url": "https://api.github.com/repos/navyon/RFLocalization", "Date": "2014-06-19T20:38:51Z"},
{"Line": "=>1042", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((eventsCalendar.get(java.util.Calendar.MONTH)) != (currentWeekToDrawCalender.get(java.util.Calendar.MONTH))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/1187/buggy-version/library.src.main.java.com.github.sundeepk.compactcalendarview.CompactCalendarController.java", "BodyUseAPI": [], "Fixed commit": "18ce986e9da67783916f379a48ef09a0137beb9f", "Url": "https://api.github.com/repos/italki/CompactCalendarView", "Date": "2017-03-31T03:53:17Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["controller.PasswordField.getText()", "controller.TextField.getText()", "model.AuthorizationLevel.match(this.auth.getSelectionModel().getSelectedItem().toString())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(database.DatabaseFactory.getDatabase().addUser(username, password.hashCode(), auth, profile))) { sendAlert(\"Username already exists. Please select a new username\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/1623/buggy-version/src.controller.RegistrationController.java", "BodyUseAPI": [], "Fixed commit": "4ed86e7e65c44ad52e3926e72fe960ab9789860e", "Url": "https://api.github.com/repos/JerAguilon/TheCleanWaterProject", "Date": "2016-10-10T03:58:42Z"},
{"Line": "=>346", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (aircraft.get(i).getFlightPlan().getDestination().equals(my_outgoing_hand_over_point)) { handOver(aircraft.get(i)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/7714/buggy-version/PlanePeril.src.scn.Multiplayer.java", "BodyUseAPI": ["java.util.ArrayList<cls.Aircraft>.get(int)", "scn.Multiplayer.handOver(aircraft.get(i))"], "Fixed commit": "a50a161133712d649a7d98949ca4f680ed0e36e1", "Url": "https://api.github.com/repos/liam-m/PlanePeril", "Date": "2014-05-05T15:08:54Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (specialData != null) sign.setRawData(specialData);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/7961/buggy-version/src.main.java.se.laeffe.mcbob.AreaHandler.java", "BodyUseAPI": ["org.bukkit.block.Sign.setRawData(java.lang.Byte)"], "Fixed commit": "afaa6fd3b725cc409c67ae75c8e7a926e15b1110", "Url": "https://api.github.com/repos/Laeffe/McBob", "Date": "2012-03-11T22:09:11Z"},
{"Line": "=>482", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (((peerReview != null) && ((peerReview.getSubjectForm()) != null)) && ((peerReview.getSubjectForm().getUrl()) != null)) { peerReview.getSubjectForm().getUrl().setErrors(new java.util.ArrayList<java.lang.String>()); validateUrl(peerReview.getSubjectForm().getUrl()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/3865/buggy-version/orcid-web.src.main.java.org.orcid.frontend.web.controllers.PeerReviewsController.java", "BodyUseAPI": ["peerReview.getSubjectForm().getUrl()", "peerReview.getSubjectForm().getUrl()", "peerReview.getSubjectForm().getUrl().setErrors(java.util.ArrayList<java.lang.String>)", "org.orcid.frontend.web.controllers.PeerReviewsController.validateUrl(peerReview.getSubjectForm().getUrl())", "org.orcid.pojo.ajaxForm.PeerReviewForm.getSubjectForm()", "org.orcid.pojo.ajaxForm.PeerReviewForm.getSubjectForm()"], "Fixed commit": "0414d79029a818dced1335bac75087b9c572fc79", "Url": "https://api.github.com/repos/ORCID/ORCID-Source", "Date": "2015-04-20T17:28:32Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((values) != null) return new me.tuke.sktuke.util.EvalFunction(f, parameters).getParemetersValues(e);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/979/buggy-version/TuSKe.src.me.tuke.sktuke.util.EvalFunction.java", "BodyUseAPI": [], "Fixed commit": "576490a79d4eecf0be4a27f47664b9ddaba5df20", "Url": "https://api.github.com/repos/Tuke-Nuke/TuSKe", "Date": "2017-02-24T15:02:14Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type instanceof org.apache.cassandra.db.marshal.ReversedType) { org.apache.cassandra.db.marshal.ReversedType reversedType = ((org.apache.cassandra.db.marshal.ReversedType) (type)); checkedType = reversedType.baseType; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/649/buggy-version/src.java.com.stratio.cassandra.index.schema.mapping.ColumnMapper.java", "BodyUseAPI": [], "Fixed commit": "83f7580eef867756d18072aec2595cc428a48639", "Url": "https://api.github.com/repos/Stratio/stratio-cassandra", "Date": "2015-03-28T19:06:51Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.defaultUri) != null) { webServiceTemplate.setDefaultUri(this.defaultUri); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/6841/buggy-version/shared.src.main.java.com.alliander.osgp.shared.infra.ws.WebServiceTemplateFactory.java", "BodyUseAPI": [], "Fixed commit": "5483a8e374d623112ca584a638ac19ef10aea3e8", "Url": "https://api.github.com/repos/OSGP/Shared", "Date": "2017-01-23T15:07:39Z"},
{"Line": "=>700", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getServiceManager().getArtifactInfo(obj.getVersionID())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (artifactInfo != null) { artifactGroup.setVersions(java.util.Collections.singletonList(artifactInfo)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/3154/buggy-version/phresco-framework-web.src.main.java.com.photon.phresco.framework.actions.applications.Applications.java", "BodyUseAPI": ["java.util.Collections.singletonList(com.photon.phresco.commons.model.ArtifactInfo)", "com.photon.phresco.commons.model.ArtifactGroup.setVersions(java.util.List)"], "Fixed commit": "88dd68f2a5bf107fa9921f17d94a1d519f23e392", "Url": "https://api.github.com/repos/phresco/framework", "Date": "2013-01-03T10:12:10Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((deadline) == null) { if ((date) == null) return false; else return today.after(date); }else return today.after(deadline);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/3833/buggy-version/src.taskList.Task.java", "BodyUseAPI": [], "Fixed commit": "04680d3c3947d7e07d2f48853b11af00fbda9842", "Url": "https://api.github.com/repos/CS2103jan2015-w13-2j/main", "Date": "2015-04-07T12:40:35Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((date) == null) { if ((deadline) == null) return false; else return taskList.Task.dateFormat.format(date).equals(taskList.Task.dateFormat.format(today)); }else return taskList.Task.dateFormat.format(date).equals(taskList.Task.dateFormat.format(today));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/3833/buggy-version/src.taskList.Task.java", "BodyUseAPI": [], "Fixed commit": "04680d3c3947d7e07d2f48853b11af00fbda9842", "Url": "https://api.github.com/repos/CS2103jan2015-w13-2j/main", "Date": "2015-04-07T12:40:35Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (poisonpath) { poisonedlkcost[i] = this.INFINITY; for (int j = 0; j < lkcostLength; j++) { poisonedmcpaths[i][j] = -1; } }else { poisonedlkcost[i] = this.lkcost[i]; for (int j = 0; j < lkcostLength; j++) { poisonedmcpaths[i][j] = this.minCostPaths[i][j]; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/784/buggy-version/Node.java", "BodyUseAPI": [], "Fixed commit": "3c73836756cf3c0d23e5a1cb596247a4dd34f856", "Url": "https://api.github.com/repos/saacg/routing-protocols", "Date": "2016-11-21T22:38:51Z"},
{"Line": "=>1145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.vmware.bdd.manager.ClusterEntityManager.findByName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (cluster == null) { com.vmware.bdd.manager.ClusterManager.logger.error(((\"cluster \" + clusterName) + \" does not exist\")); throw com.vmware.bdd.exception.BddException.NOT_FOUND(\"cluster\", clusterName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/8196/buggy-version/server.cluster-mgmt.src.main.java.com.vmware.bdd.manager.ClusterManager.java", "BodyUseAPI": [], "Fixed commit": "985f215fdb6035ad9fb6ec6a4ce948249cd65142", "Url": "https://api.github.com/repos/vmware-serengeti/serengeti-ws", "Date": "2013-05-28T12:37:15Z"},
{"Line": "=>1159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (groupName != null) { com.vmware.bdd.entity.NodeGroupEntity nodeGroup = clusterEntityMgr.findByName(clusterName, groupName); if (nodeGroup == null) { com.vmware.bdd.manager.ClusterManager.logger.error(((\"node group \" + groupName) + \" does not exist\")); throw com.vmware.bdd.exception.BddException.NOT_FOUND(\"group\", groupName); } nodeGroups = new java.util.ArrayList<com.vmware.bdd.entity.NodeGroupEntity>(1); nodeGroups.add(nodeGroup); }else { nodeGroups = clusterEntityMgr.findAllGroups(clusterName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/8196/buggy-version/server.cluster-mgmt.src.main.java.com.vmware.bdd.manager.ClusterManager.java", "BodyUseAPI": ["com.vmware.bdd.exception.BddException.NOT_FOUND(java.lang.String,java.lang.String)", "org.apache.log4j.Logger.error(java.lang.String)", "com.vmware.bdd.manager.ClusterEntityManager.findByName(java.lang.String,java.lang.String)"], "Fixed commit": "985f215fdb6035ad9fb6ec6a4ce948249cd65142", "Url": "https://api.github.com/repos/vmware-serengeti/serengeti-ws", "Date": "2013-05-28T12:37:15Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (frame != null) (remoteImageCount)++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/3425/buggy-version/glassgap.GlassGap.src.main.java.com.dappervision.openglass.glassgap.BackgroundService.java", "BodyUseAPI": [], "Fixed commit": "3d2c513a5c9efc5d3d34ef9634f1b6fb72abeadc", "Url": "https://api.github.com/repos/bwhite/openglass", "Date": "2013-10-03T03:02:13Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ua.getBrowser().getGroup().equals(Browser.UNKNOWN)) { insertStatistics.setString(3, \"Unknown\"); }else { insertStatistics.setString(3, ua.getBrowserVersion().getMajorVersion()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/7095/buggy-version/src.DAOs.StatisticsDAO.java", "BodyUseAPI": ["eu.bitwalker.useragentutils.UserAgent.getBrowserVersion()", "java.sql.PreparedStatement.setString(int,ua.getBrowserVersion().getMajorVersion())", "ua.getBrowserVersion().getMajorVersion()"], "Fixed commit": "62485d21bdaeb4e3c17df106d5a2478547bc2310", "Url": "https://api.github.com/repos/CryptoCubik/browserprint", "Date": "2015-11-09T04:31:45Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (numberOfSubdivisions > 1) { widthForLastSubdivision = blockWidth % widthPerSubdivision; particlesInLastSubdivision = widthForLastSubdivision * (totalTransversalCells); }else { widthForLastSubdivision = blockWidth; particlesInLastSubdivision = blockWidth * (totalTransversalCells); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/6257/buggy-version/pixi.src.main.java.org.openpixi.pixi.physics.initial.CGC.LightConeNGPSuperParticleCreator.java", "BodyUseAPI": [], "Fixed commit": "19b0dfedc797a1fef3e00e61f5dcbf38060314a5", "Url": "https://api.github.com/repos/d-mueller/openpixi", "Date": "2016-08-19T21:23:43Z"},
{"Line": "=>350", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((indexesToTest.size()) == 0) { throw new com.joliciel.talismane.tokeniser.patterns.InvalidTokenPatternException((\"No indexes to test in pattern: \" + (this.getName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/912/buggy-version/talismane_core.src.main.java.com.joliciel.talismane.tokeniser.patterns.TokenPattern.java", "BodyUseAPI": [], "Fixed commit": "22b9b0095798f042f40e3301be220f5f8bb2ac40", "Url": "https://api.github.com/repos/joliciel-informatique/talismane", "Date": "2017-03-24T13:25:33Z"},
{"Line": "=>412", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pcgen.base.graph.inst.DirectionalSetMapGraph<pcgen.base.formula.base.VariableID<?>, pcgen.base.graph.inst.DefaultDirectionalGraphEdge<pcgen.base.formula.base.VariableID<?>>>.getAdjacentEdges(pcgen.base.formula.base.VariableID<?>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (adjacentEdges != null) { for (pcgen.base.graph.inst.DefaultDirectionalGraphEdge<pcgen.base.formula.base.VariableID<?>> edge : adjacentEdges) { if (edge.getNodeAt(0).equals(varID)) { solveFromNode(edge.getNodeAt(1)); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/8931/buggy-version/PCGen-Formula.code.src.java.pcgen.base.solver.AggressiveSolverManager.java", "BodyUseAPI": [], "Fixed commit": "105b790c8e9bee128c74ea37ed709346313e9fbf", "Url": "https://api.github.com/repos/PCGen/pcgen-formula", "Date": "2016-10-03T02:23:21Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.util.concurrent.ThreadLocalRandom.current().nextInt(10)) == 0) { com.teamwizardry.wizardry.client.fx.particle.trails.SparkleTrailHelix helix = Wizardry.proxy.spawnParticleSparkleTrailHelix(caster.worldObj, origin, center, 0.2, theta, 50, true); helix.setRandomizedSizes(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/2976/buggy-version/src.main.java.com.teamwizardry.wizardry.common.spell.module.shapes.ModuleBeam.java", "BodyUseAPI": [], "Fixed commit": "7f138151b320ff012a8d53242d1ec78a562ca627", "Url": "https://api.github.com/repos/TeamWizardry/Wizardry", "Date": "2016-07-21T19:45:57Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (operator == null) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/274/buggy-version/app.src.main.java.com.apptech.android.bushero.TextHelper.java", "BodyUseAPI": [], "Fixed commit": "d56d034d027aec4ba8d9e226d18ba86fa1b6242c", "Url": "https://api.github.com/repos/alexmcbride/bushero", "Date": "2017-01-29T17:50:51Z"},
{"Line": "=>1253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.apptech.android.bushero.MainActivity.BusAdapter.getItem(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((bus.getOperator()) == null) { imageBus.setImageResource(R.drawable.ic_bus_black); }else { if (((mLastColor) == null) || (!(mLastColor.getName().equals(bus.getOperator())))) { mLastColor = getOperatorColor(bus.getOperator()); mLastResource = getResources().getIdentifier(mLastColor.getColor(), \"drawable\", getPackageName()); } imageBus.setImageResource(mLastResource); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/274/buggy-version/app.src.main.java.com.apptech.android.bushero.MainActivity.java", "BodyUseAPI": ["mLastColor.getName().equals(bus.getOperator())", "com.apptech.android.bushero.MainActivity.BusAdapter.getOperatorColor(bus.getOperator())", "com.apptech.android.bushero.Bus.getOperator()", "com.apptech.android.bushero.Bus.getOperator()"], "Fixed commit": "d56d034d027aec4ba8d9e226d18ba86fa1b6242c", "Url": "https://api.github.com/repos/alexmcbride/bushero", "Date": "2017-01-29T17:50:51Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((reader.peek()) == (android.util.JsonToken.NULL)) { reader.skipValue(); }else { bus.setOperator(reader.nextString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/274/buggy-version/app.src.main.java.com.apptech.android.bushero.TransportClient.java", "BodyUseAPI": ["android.util.JsonReader.skipValue()", "com.apptech.android.bushero.Bus.setOperator(reader.nextString())", "android.util.JsonReader.nextString()"], "Fixed commit": "d56d034d027aec4ba8d9e226d18ba86fa1b6242c", "Url": "https://api.github.com/repos/alexmcbride/bushero", "Date": "2017-01-29T17:50:51Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((reader.peek()) == (android.util.JsonToken.NULL)) { reader.skipValue(); }else { bus.setDirection(reader.nextString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/274/buggy-version/app.src.main.java.com.apptech.android.bushero.TransportClient.java", "BodyUseAPI": ["android.util.JsonReader.skipValue()", "android.util.JsonReader.nextString()", "com.apptech.android.bushero.Bus.setDirection(reader.nextString())"], "Fixed commit": "d56d034d027aec4ba8d9e226d18ba86fa1b6242c", "Url": "https://api.github.com/repos/alexmcbride/bushero", "Date": "2017-01-29T17:50:51Z"},
{"Line": "=>582", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((item.getIntent()) != null) { startActivity(item.getIntent()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/6105/buggy-version/android-client.src.com.benweissmann.zmobile.ZephyrgramActivity.java", "BodyUseAPI": ["android.view.MenuItem.getIntent()", "com.benweissmann.zmobile.ZephyrgramActivity.startActivity(item.getIntent())"], "Fixed commit": "a78f4540420d883cfe79e78a15d02c9704ed3388", "Url": "https://api.github.com/repos/benweissmann/zephyr-mobile", "Date": "2012-04-27T18:11:10Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Pattern.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((java.lang.Integer.parseInt(parts[4])) == 0) { mask = 0 << 32; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/9212/buggy-version/core.src.main.java.org.elasticsearch.search.aggregations.bucket.range.ipv4.IPv4RangeBuilder.java", "BodyUseAPI": [], "Fixed commit": "3be98927a03fc7bd13b0792baddf1b7492f8855c", "Url": "https://api.github.com/repos/imotov/elasticsearch", "Date": "2015-07-21T11:53:16Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((args.length) == 0) || (args[0].equals(player.getName()))) { if (BuildOffContestants.contains(player.getName())) { tpToPlot(player.getName(), player); }else { sender.sendMessage((((PreFix) + (org.bukkit.ChatColor.RED)) + \"You are not enrolled for the Build Off. So you cannot be teleported to your plot.\")); } return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/1145/buggy-version/src.me.flexo.buildoffmanager.BuildOffManager.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.contains(player.getName())", "org.bukkit.entity.Player.getName()", "me.flexo.buildoffmanager.BuildOffManager.tpToPlot(player.getName(),org.bukkit.entity.Player)", "org.bukkit.entity.Player.getName()"], "Fixed commit": "69b2d5b721f3dec67d625b56ebe1ea88a58b6943", "Url": "https://api.github.com/repos/Flexo013/BuildOffManager", "Date": "2015-03-23T10:25:27Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cn.edu.jxnu.awesome_campus.MainActivity.presenter.getCurrentSelectedID()) == (DrawerItem.HOME.getId())) { updateMenu(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/8563/buggy-version/app.src.main.java.cn.edu.jxnu.awesome_campus.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "ecf27c728e2bc9099d3cc75a3f50c984ba0d961b", "Url": "https://api.github.com/repos/MummyDing/Awesome-Campus", "Date": "2016-04-29T08:04:40Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mPlayerCell) != null) { ((com.jinjunhang.onlineclass.ui.cell.player.LivePlayerCell) (mPlayerCell)).setAdvTextViewSelected(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/3609/buggy-version/app.src.main.java.com.jinjunhang.onlineclass.ui.cell.LiveSongListViewCellAdapter.java", "BodyUseAPI": [], "Fixed commit": "3fb56989677c8efeec925ecff157bad449339535", "Url": "https://api.github.com/repos/jjhlzn/OnlineClassAndroid", "Date": "2016-09-30T14:38:20Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isManager instanceof java.lang.Boolean) { comment.setManager(((java.lang.Boolean) (isManager))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/3609/buggy-version/app.src.main.java.com.jinjunhang.onlineclass.ui.fragment.album.LiveSongFragment.java", "BodyUseAPI": [], "Fixed commit": "3fb56989677c8efeec925ecff157bad449339535", "Url": "https://api.github.com/repos/jjhlzn/OnlineClassAndroid", "Date": "2016-09-30T14:38:20Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["FastPipe.receive()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (n != 0) { if ((next) != null) next.send(n); else next = new FastPipe(n); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/618/buggy-version/FastPipe.src.FastPipe.java", "BodyUseAPI": ["FastPipe.send(int)"], "Fixed commit": "b135b3b43c63d133b9eb3d5fa929e7f3f822cd9f", "Url": "https://api.github.com/repos/philongtran/kprog", "Date": "2016-03-17T13:33:42Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((this.getLocation()) == null) && ((appointment.getLocation()) == null)) { locationIsEqual = true; }else if (((this.getLocation()) != null) && ((appointment.getLocation()) != null)) { locationIsEqual = this.getLocation().equals(appointment.getLocation()); }else { locationIsEqual = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/4646/buggy-version/src.model.Appointment.java", "BodyUseAPI": ["model.Appointment.getLocation()", "model.Appointment.getLocation()", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "ab150aeecef1745572dd1706eeebae7a5c1aef2a", "Url": "https://api.github.com/repos/thomahan/calendar", "Date": "2015-03-15T21:22:10Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isKeywordMatchingTaglist())) { return new seedu.address.logic.commands.CommandResult(seedu.address.logic.commands.ListCommand.MESSAGE_LIST_DOES_NOT_EXIST); }else { model.updateFilteredTaskListGivenListName(keywords); return new seedu.address.logic.commands.CommandResult(formatter(keywords)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/6915/buggy-version/src.main.java.seedu.address.logic.commands.ListCommand.java", "BodyUseAPI": [], "Fixed commit": "a402a6213e75ba16a34dbdf16268f7a64e5b49ff", "Url": "https://api.github.com/repos/CS2103JAN2017-W10-B1/main", "Date": "2017-03-26T02:01:19Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) == (Build.VERSION_CODES.LOLLIPOP)) findPreference(Utils.KEY_L_SYSUI).setEnabled((!(prefs.getString(Utils.KEY_CHOOSE_PLAT, null).equals(\"2\"))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/2380/buggy-version/src.com.dvd.android.updatechecker.SettingsActivity.java", "BodyUseAPI": [], "Fixed commit": "38c0ead7bd2bd2ae65ea2a4e8bbdf74e1df2e8ee", "Url": "https://api.github.com/repos/DVDAndroid/UpdateChecker", "Date": "2014-11-09T14:34:44Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) == (Build.VERSION_CODES.LOLLIPOP)) findPreference(Utils.KEY_L_SYSUI).setEnabled((!(prefs.getString(Utils.KEY_CHOOSE_PLAT, null).equals(\"2\"))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/2380/buggy-version/src.com.dvd.android.updatechecker.SettingsActivity.java", "BodyUseAPI": [], "Fixed commit": "38c0ead7bd2bd2ae65ea2a4e8bbdf74e1df2e8ee", "Url": "https://api.github.com/repos/DVDAndroid/UpdateChecker", "Date": "2014-11-09T14:34:44Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (object != null) { if (((object.getStock()) > 0) && ((object.getStock()) <= 5)) { imageLoader.displayImage(restMin.getUrl(), holder.ivRest); }else if (((object.getStock()) > 5) && ((object.getStock()) <= 30)) { imageLoader.displayImage(restAverage.getUrl(), holder.ivRest); }else if ((object.getStock()) > 30) { imageLoader.displayImage(restMax.getUrl(), holder.ivRest); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/1734/buggy-version/app.src.main.java.com.radioline.master.basic.ParseItemsViewAdapter.java", "BodyUseAPI": ["com.radioline.master.basic.ParseItems.getStock()", "com.radioline.master.basic.ParseItems.getStock()", "com.radioline.master.basic.ParseItems.getStock()", "com.radioline.master.basic.ParseItems.getStock()", "com.radioline.master.basic.ParseItems.getStock()"], "Fixed commit": "638767d3eadd554c67474e38f1c326928a4088ec", "Url": "https://api.github.com/repos/NikeDyachok/RLJobs", "Date": "2015-01-05T22:56:35Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i > 0) i--;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/6767/buggy-version/src.main.java.eu.siacs.conversations.utils.DNSHelper.java", "BodyUseAPI": [], "Fixed commit": "c4daa08170f0e468c0407d9db91a0de0415b6bf2", "Url": "https://api.github.com/repos/siacs/Conversations", "Date": "2015-04-16T19:55:52Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (wr == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/2292/buggy-version/sources.org.apache.batik.ext.awt.image.rendered.PadRed.java", "BodyUseAPI": [], "Fixed commit": "22da1acccf0093c43509456a0936fa1d7514da30", "Url": "https://api.github.com/repos/iconfinder/batik", "Date": "2013-11-07T17:52:06Z"},
{"Line": "=>336", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Field.get(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (((obj != null) && (!(obj instanceof java.util.Map))) && (!(obj instanceof java.util.List))) { value = java.lang.String.valueOf(obj); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/2760/buggy-version/atlas-gradle-plugin.atlas-plugin.src.main.java.com.taobao.android.builder.tools.guide.AtlasConfigHelper.java", "BodyUseAPI": ["java.lang.String.valueOf(java.lang.Object)"], "Fixed commit": "fb9f4e3eb624e208d1b86ab337646fc52c5abae9", "Url": "https://api.github.com/repos/alibaba/atlas", "Date": "2017-05-07T12:24:05Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dir.exists()) { dir.delete(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/8283/buggy-version/src.main.java.com.lousama.generator.exec.ProcessFile.java", "BodyUseAPI": ["java.io.File.delete()"], "Fixed commit": "fd9a54a1f96449f4c6cb2e0e2d05148acf1fa5d4", "Url": "https://api.github.com/repos/lousama/free_generator", "Date": "2016-05-17T11:42:46Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (commentwritten) { if (space) { commentValue.append(' '); space = false; } }else { commentwritten = true; space = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/2544/buggy-version/whois-client.src.main.java.net.ripe.db.whois.common.rpsl.RpslAttribute.java", "BodyUseAPI": [], "Fixed commit": "c993906bb0f4dc69ed713233eded6365ed3a97a8", "Url": "https://api.github.com/repos/RIPE-NCC/whois", "Date": "2014-01-14T23:14:29Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mLoaded.size()) != 0) { counter = 1; publishProgress(); wait(); mLoaded.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/3205/buggy-version/app.src.main.java.net.razysoft.production.BalanceFragment.java", "BodyUseAPI": ["java.util.ArrayList<Contract.Balance.Wrapper>.clear()"], "Fixed commit": "e360c102f37b0a949262649727ba738c80ec3d8b", "Url": "https://api.github.com/repos/Gr3Kidd3r/production-android", "Date": "2016-12-12T13:13:48Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (lastChest.getBlock().getType().equals(Material.CHEST)) { lastChest.getBlock().setType(Material.AIR); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/1694/buggy-version/src.net.komputerking.java.tendotjava.Main.java", "BodyUseAPI": ["lastChest.getBlock().setType(Material.AIR)", "org.bukkit.Location.getBlock()"], "Fixed commit": "134e96d12177280a35d847c8eba4507ee71d26ae", "Url": "https://api.github.com/repos/tenjavacontest/TheKomputerKing", "Date": "2013-12-07T21:41:25Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["interpreter.parser.SExpression.getData()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (data.isList()) { return new interpreter.parser.SExpression(evalAddr, interpreter.parser.prim.ListFuncs.list(new interpreter.parser.SExpression(data))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/7118/buggy-version/src.interpreter.parser.prim.ListFuncs.java", "BodyUseAPI": ["interpreter.parser.prim.ListFuncs.list(interpreter.parser.SExpression)"], "Fixed commit": "753cbce3a0e5efc495b66bdcef9a5e7080d6641c", "Url": "https://api.github.com/repos/AoHRuthless/Lispreter", "Date": "2017-11-23T16:08:51Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!storeText) { tree.addAttribute(_encoding, \"base64\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/9268/buggy-version/src.com.xmlcalabash.extensions.Unzip.java", "BodyUseAPI": [], "Fixed commit": "5a71ee7995d7b62e6dce052fe9c0eefa11094223", "Url": "https://api.github.com/repos/MenteaXML/xmlcalabash1", "Date": "2012-05-19T10:25:46Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((view.getWidth()) != 0) && ((view.getHeight()) != 0)) { back.setLayoutParams(new net.brach.android.stackview.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, view.getHeight())); android.graphics.Bitmap bitmap = android.graphics.Bitmap.createBitmap(view.getWidth(), view.getHeight(), Bitmap.Config.ARGB_8888); android.graphics.Canvas canvas = new android.graphics.Canvas(bitmap); view.draw(canvas); back.setImageBitmap(bitmap); back.requestLayout(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/3181/buggy-version/stackview.src.main.java.net.brach.android.stackview.StackView.java", "BodyUseAPI": ["android.widget.ImageView.setLayoutParams(net.brach.android.stackview.LayoutParams)", "android.view.View.getHeight()", "android.graphics.Bitmap.createBitmap(view.getWidth(),view.getHeight(),Bitmap.Config.ARGB_8888)", "android.view.View.draw(android.graphics.Canvas)", "android.view.View.getHeight()", "android.view.View.getWidth()"], "Fixed commit": "c6b1a827ef6c8ae977b0c2f3f55572ddaf1d3896", "Url": "https://api.github.com/repos/brachior/android-stackview", "Date": "2017-05-23T13:38:28Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((i.getType().allStateMachines().size()) > 0) { builder.append(((i.getName()) + \"._stop();\\n\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/7157/buggy-version/org.thingml.compilers.src.main.java.org.thingml.compilers.main.JSMainGenerator.java", "BodyUseAPI": ["java.lang.StringBuilder.append(((i.getName()) + \"._stop();\\n\"))", "org.thingml.compilers.main.Instance.getName()"], "Fixed commit": "5f5ebd0c84374548373e71c97ed5831c33a1cbaf", "Url": "https://api.github.com/repos/TelluIoT/ThingML", "Date": "2015-04-21T07:16:39Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (simulate_empty) { return java.util.Optional.of(com.vsct.dt.hesperides.templating.platform.InstanceData.withInstanceName(instanceName).withKeyValue(new java.util.HashSet()).build()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/4478/buggy-version/src.main.java.com.vsct.dt.hesperides.templating.platform.ApplicationModuleData.java", "BodyUseAPI": [], "Fixed commit": "45951579425fa0f73ddc4d5ced812578a986bb8e", "Url": "https://api.github.com/repos/JordanKergoat/hesperides", "Date": "2016-12-26T16:16:41Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mAdapter.mImageViews[pos]) != null) { mAdapter.mImageViews[pos].setImageDrawable(newD); mAdapter.updateResource(newD, pos); mAdapter.notifyDataSetChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/4484/buggy-version/app.src.main.java.azzaoui.sociadee.PictureActivity.java", "BodyUseAPI": ["azzaoui.sociadee.PicturePagerAdapter.notifyDataSetChanged()", "mAdapter.mImageViews[pos].setImageDrawable(android.graphics.drawable.Drawable)", "azzaoui.sociadee.PicturePagerAdapter.updateResource(android.graphics.drawable.Drawable,int)"], "Fixed commit": "e60e37fe6909ddd0dac8e986e3d88653ce8be2e2", "Url": "https://api.github.com/repos/yazzaoui/Sociadee", "Date": "2016-03-01T11:48:20Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((multidaye.size()) == 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/3022/buggy-version/Calendar.src.edu.wpi.cs.wpisuitetng.modules.calendar.view.calendarview.day.MultidayEventView.java", "BodyUseAPI": [], "Fixed commit": "0f014030e89e006461c08f32d70d89e8c59abfe8", "Url": "https://api.github.com/repos/CS3733Team1/wpi-suite", "Date": "2013-12-02T23:51:39Z"},
{"Line": "=>473", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (from instanceof org.overture.ast.types.AVoidReturnType) { if ((to instanceof org.overture.ast.types.AVoidType) || (to instanceof org.overture.ast.types.AVoidReturnType)) { return org.overture.typechecker.TypeComparator.Result.Yes; }else { return org.overture.typechecker.TypeComparator.Result.No; } }else if (to instanceof org.overture.ast.types.AVoidReturnType) { if ((from instanceof org.overture.ast.types.AVoidType) || (from instanceof org.overture.ast.types.AVoidReturnType)) { return org.overture.typechecker.TypeComparator.Result.Yes; }else { return org.overture.typechecker.TypeComparator.Result.No; } }else if (to instanceof org.overture.ast.types.AParameterType) { java.lang.String fstr = from.toString(); java.lang.String tstr = to.toString(); if ((fstr.indexOf(tstr)) >= 0) { return to.equals(from) ? org.overture.typechecker.TypeComparator.Result.Yes : org.overture.typechecker.TypeComparator.Result.No; }else { return org.overture.typechecker.TypeComparator.Result.Yes; } }else { return assistantFactory.createPTypeAssistant().equals(to, from) ? org.overture.typechecker.TypeComparator.Result.Yes : org.overture.typechecker.TypeComparator.Result.No; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/2465/buggy-version/core.typechecker.src.main.java.org.overture.typechecker.TypeComparator.java", "BodyUseAPI": ["org.overture.ast.types.PType.equals(org.overture.ast.types.PType)", "assistantFactory.createPTypeAssistant().equals(org.overture.ast.types.PType,org.overture.ast.types.PType)", "org.overture.ast.types.PType.toString()"], "Fixed commit": "523fc7331a835971b90c53353d7df131fa7304ff", "Url": "https://api.github.com/repos/overturetool/overture", "Date": "2016-05-26T07:30:53Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((lineParts.name) != null) { this.parts.addLast(lineParts.name); this.depth = lineParts.depth; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/9116/buggy-version/differ-common.src.main.java.cz.nkp.differ.compare.metadata.external.ImagemagickTransformer.java", "BodyUseAPI": ["java.util.ArrayDeque<java.lang.String>.addLast(java.lang.String)"], "Fixed commit": "665a268f4141b53a76e53a202ce1ce4bdcac07c0", "Url": "https://api.github.com/repos/jstavel/differ", "Date": "2013-02-17T07:40:32Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((majorAtThreeCount >= 3) && (majorClose >= 1)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/7809/buggy-version/src.tree_check.TreeChecker.java", "BodyUseAPI": [], "Fixed commit": "3b1e63bd7552ae88866010a24cd52267a37d4f34", "Url": "https://api.github.com/repos/chris-wood/L21-Labeling", "Date": "2013-04-05T17:12:21Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jetbrains.mps.openapi.language.SLanguage.getLanguageVersion()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (currentVersion == (-1)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/5370/buggy-version/plugins.migrationAssistant.solutions.component.source_gen.jetbrains.mps.migration.component.util.MigrationsUtil.java", "BodyUseAPI": [], "Fixed commit": "5630ad9bd4dfe065c38ee94bb393b14951f09461", "Url": "https://api.github.com/repos/JetBrains/MPS", "Date": "2014-12-03T20:10:48Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.reactnativenavigation.controllers.NavigationCommandsHandler.canParseActivityParams(getIntent())) { activityParams = com.reactnativenavigation.controllers.NavigationCommandsHandler.parseActivityParams(getIntent()); }else { if (NavigationApplication.instance.isReactContextInitialized()) { getReactGateway().onDestroyApp(this); NavigationApplication.instance.getActivityCallbacks().onActivityDestroyed(this); } NavigationApplication.instance.startReactContextOnceInBackgroundAndExecuteJS(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/1795/buggy-version/android.app.src.main.java.com.reactnativenavigation.controllers.NavigationActivity.java", "BodyUseAPI": [], "Fixed commit": "96786657f4768ee32a61c5484d91eb5828e81d4c", "Url": "https://api.github.com/repos/BrendonSled/react-native-navigation", "Date": "2017-07-27T19:35:30Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (world.isRemote) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/6625/buggy-version/src.main.java.gogofo.minecraft.awesome.tileentity.TileEntityPerimeterMarker.java", "BodyUseAPI": [], "Fixed commit": "d94877682a5c657c971e9a1631e1142bd6ab7708", "Url": "https://api.github.com/repos/tomerorian/minecraft-awesome", "Date": "2017-10-25T13:05:36Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((channel) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/1180/buggy-version/core.src.main.java.com.orientechnologies.orient.core.storage.fs.OAbstractFile.java", "BodyUseAPI": [], "Fixed commit": "72e36fa9b9291584facdfa9219ee814183146888", "Url": "https://api.github.com/repos/nuvolabase/orientdb", "Date": "2013-05-16T15:03:24Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (found) { appManagerAdd.setType(type); }else { com.vmware.bdd.cli.commands.CommandsUtils.printCmdFailure(Constants.OUTPUT_OBJECT_APPMANAGER, name, Constants.OUTPUT_OP_ADD, Constants.OUTPUT_OP_RESULT_FAIL, ((((\"Invalid type \" + type) + \". Valid types are \") + (java.util.Arrays.asList(types))) + \".\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/8347/buggy-version/cli.src.main.java.com.vmware.bdd.cli.commands.AppManagerCommands.java", "BodyUseAPI": [], "Fixed commit": "f0a98ceebaa41dc219226328df4e140cba8c9068", "Url": "https://api.github.com/repos/vmware-serengeti/serengeti-ws", "Date": "2014-08-20T03:29:01Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.quadrillenschule.azocamsynca.History.getHistory(de.quadrillenschule.azocamsynca.History.Fields,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((history.size()) < (de.quadrillenschule.azocamsynca.History.SIZE)) { size = history.size(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/8816/buggy-version/AzoCamSyncTriggerService.src.de.quadrillenschule.azocamsynca.History.java", "BodyUseAPI": ["java.util.LinkedList<java.lang.String>.size()"], "Fixed commit": "af8a95f8e6fed953909dcf941376e9de7029ed82", "Url": "https://api.github.com/repos/andizottmann/AZoCamSync", "Date": "2015-03-05T00:09:21Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (item != null) { if ((item.getType()) == (org.bukkit.Material.BOW)) { containsBow = true; break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/3832/buggy-version/WaywardSkills.src.main.java.net.wayward_realms.waywardskills.skill.ArrowSkill.java", "BodyUseAPI": ["org.bukkit.inventory.ItemStack.getType()"], "Fixed commit": "500a2d8813bf964e7cc4f40bec04e424d94a87ed", "Url": "https://api.github.com/repos/WaywardRealms/Wayward", "Date": "2014-06-14T09:37:26Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mc)) { char a = buffer.charAt(0); char b = buffer.charAt(1); content.append(b); for (int i = 0; i < ((buffer.length()) - 1); i++ , a = b , b = buffer.charAt(i)) { if (a == ' ') continue; if (a == '/') { if (b == '/') j = i + 2; break; if (b == '*') { j = i + 2; mc = true; }else { return true; } }else return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/1755/buggy-version/Indexer.CommentChunk.java", "BodyUseAPI": [], "Fixed commit": "2dba3ba528caed24d4f9080c8a91de1a50a72452", "Url": "https://api.github.com/repos/rw507/Traceability", "Date": "2012-10-06T02:41:47Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mc) { char x = buffer.charAt(((j) - 1)); char y = buffer.charAt(j); for (; (j) < ((buffer.length()) - 1); x = y , y = buffer.charAt(j)) { if (mc) { content.append(y); if ((x == '*') && (y == '/')) mc = false; }else newBuffer.append(y); } buffer = newBuffer; if (!(mc)) return true; }else { for (int i = (j) - 1; i < (buffer.length()); i++) { content.append(buffer.charAt(i)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/1755/buggy-version/Indexer.CommentChunk.java", "BodyUseAPI": [], "Fixed commit": "2dba3ba528caed24d4f9080c8a91de1a50a72452", "Url": "https://api.github.com/repos/rw507/Traceability", "Date": "2012-10-06T02:41:47Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.metawatch.manager.apps.AppManager.getApp(ActionsApp.APP_ID)) == null) org.metawatch.manager.apps.AppManager.addApp(new org.metawatch.manager.apps.ActionsApp());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/3282/buggy-version/src.org.metawatch.manager.apps.AppManager.java", "BodyUseAPI": [], "Fixed commit": "a1dd36bb19a984b8814a41ebc0a432cd841255a8", "Url": "https://api.github.com/repos/w-shackleton/MWM-for-Android", "Date": "2012-08-18T08:14:15Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["flightNameField.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (flightName.equals(\"\")) flightName = \"Vol\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/3518/buggy-version/src.fr.unice.miage.icarus.activities.ConfigurationActivity.java", "BodyUseAPI": [], "Fixed commit": "71d0e91ff3aac06366f643d8979487a6eefbbea5", "Url": "https://api.github.com/repos/m3phistos/icarus_android", "Date": "2013-06-07T16:20:09Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (attr == \"\") { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/6666/buggy-version/src.queries.Selection.java", "BodyUseAPI": [], "Fixed commit": "e7beb1d97ae9f0a0d267fb972111565585013608", "Url": "https://api.github.com/repos/danialcheung/cpsc304nsa", "Date": "2016-03-30T08:42:02Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (val == \"\") { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/6666/buggy-version/src.queries.Selection.java", "BodyUseAPI": [], "Fixed commit": "e7beb1d97ae9f0a0d267fb972111565585013608", "Url": "https://api.github.com/repos/danialcheung/cpsc304nsa", "Date": "2016-03-30T08:42:02Z"},
{"Line": "=>871", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (net.sf.jabref.logic.util.OS.WINDOWS) { defaults.put(net.sf.jabref.JabRefPreferences.CONSOLE_COMMAND, \"C:\\\\Program Files\\\\ConEmu\\\\ConEmu64.exe /single /dir \\\"%DIR\\\"\"); }else { defaults.put(net.sf.jabref.JabRefPreferences.CONSOLE_COMMAND, \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/656/buggy-version/src.main.java.net.sf.jabref.JabRefPreferences.java", "BodyUseAPI": [], "Fixed commit": "56d79c5718ff592b96020543fdce30d5c9df9b08", "Url": "https://api.github.com/repos/obraliar/jabref", "Date": "2016-07-17T21:52:18Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.glaf.core.todo.mapper.TodoMapper.getTodoById(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (todo != null) { com.glaf.core.cache.CacheFactory.put(cacheKey, todo.toJsonObject().toJSONString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/7498/buggy-version/workspace.glaf-core.src.main.java.com.glaf.core.todo.service.SysTodoServiceImpl.java", "BodyUseAPI": ["com.glaf.core.cache.CacheFactory.put(java.lang.String,todo.toJsonObject().toJSONString())", "com.glaf.core.todo.Todo.toJsonObject()", "todo.toJsonObject().toJSONString()"], "Fixed commit": "63248ec4dfe4a9cd1e0712a14bd4d3dc06dff2df", "Url": "https://api.github.com/repos/jior/glaf", "Date": "2013-03-13T02:55:54Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.glaf.core.todo.mapper.TodoMapper.getTodoByCode(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (todo != null) { com.glaf.core.cache.CacheFactory.put(cacheKey, todo.toJsonObject().toJSONString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/7498/buggy-version/workspace.glaf-core.src.main.java.com.glaf.core.todo.service.SysTodoServiceImpl.java", "BodyUseAPI": ["com.glaf.core.todo.Todo.toJsonObject()", "com.glaf.core.cache.CacheFactory.put(java.lang.String,todo.toJsonObject().toJSONString())", "todo.toJsonObject().toJSONString()"], "Fixed commit": "63248ec4dfe4a9cd1e0712a14bd4d3dc06dff2df", "Url": "https://api.github.com/repos/jior/glaf", "Date": "2013-03-13T02:55:54Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.glaf.base.utils.RequestUtil.getLoginUser(javax.servlet.http.HttpServletRequest)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (user != null) { account = user.getAccount(); if (org.apache.commons.lang.StringUtils.equals(user.getAdminFlag(), \"1\")) { authorized = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/7498/buggy-version/workspace.glaf-base.src.main.java.com.glaf.base.modules.sys.interceptor.AuthorizeInterceptor.java", "BodyUseAPI": ["com.glaf.base.modules.sys.model.SysUser.getAccount()", "org.apache.commons.lang.StringUtils.equals(user.getAdminFlag(),java.lang.String)", "com.glaf.base.modules.sys.model.SysUser.getAdminFlag()"], "Fixed commit": "63248ec4dfe4a9cd1e0712a14bd4d3dc06dff2df", "Url": "https://api.github.com/repos/jior/glaf", "Date": "2013-03-13T02:55:54Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isFollowed) fButton.setText(R.string.followed); else fButton.setText(R.string.follow);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/3406/buggy-version/android-app.OpenChallenge.app.src.main.java.com.gnufsociety.openchallenge.UserActivity.java", "BodyUseAPI": [], "Fixed commit": "40a70eee2e4dc73d443645bea73468dc45f9af8b", "Url": "https://api.github.com/repos/gnufsociety/openchallenge", "Date": "2017-04-20T20:53:50Z"},
{"Line": "=>555", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isValid) { for (ChronoTimer.Racer racer : this.finishedRacers) { if ((racer.getNumber()) == racerNumber) { isValid = false; break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/7462/buggy-version/src.ChronoTimer.Run.java", "BodyUseAPI": [], "Fixed commit": "ec46e03fff2a664c59f548e6e215ab9c51d30e97", "Url": "https://api.github.com/repos/heath11100/SE_Project", "Date": "2017-04-23T20:03:23Z"},
{"Line": "=>544", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isValid) { for (java.util.Queue<ChronoTimer.Racer> runningLane : this.runningLanes) { for (ChronoTimer.Racer racer : runningLane) { if ((racer.getNumber()) == racerNumber) { isValid = false; break; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/7462/buggy-version/src.ChronoTimer.Run.java", "BodyUseAPI": [], "Fixed commit": "ec46e03fff2a664c59f548e6e215ab9c51d30e97", "Url": "https://api.github.com/repos/heath11100/SE_Project", "Date": "2017-04-23T20:03:23Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["input_validation.IntegerTextField.getText()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((currentText == null) || (currentText.isEmpty())) { final java.lang.String ZERO = \"0\"; currentText = ZERO; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/4101/buggy-version/RealPomodoro.src.settings_card_view.IntegerInputPanel.java", "BodyUseAPI": [], "Fixed commit": "bb53abce17d3ed10549d5381213b13649cf7a573", "Url": "https://api.github.com/repos/marlonbymendes/realpomodoro", "Date": "2017-02-07T00:19:46Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.qwazr.search.index.IndexServiceInterface.replicationUpdate(java.lang.String,java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (streamingOutput == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/7986/buggy-version/qwazr-search.src.main.java.com.qwazr.search.index.IndexReplicator.java", "BodyUseAPI": [], "Fixed commit": "0938a87d0c6a30a44da097d755013610cfe28877", "Url": "https://api.github.com/repos/qwazr/QWAZR", "Date": "2016-10-18T15:16:42Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.qwazr.utils.json.AbstractStreamingOutput.getInputStream()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (inputStream == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/7986/buggy-version/qwazr-search.src.main.java.com.qwazr.search.index.IndexReplicator.java", "BodyUseAPI": [], "Fixed commit": "0938a87d0c6a30a44da097d755013610cfe28877", "Url": "https://api.github.com/repos/qwazr/QWAZR", "Date": "2016-10-18T15:16:42Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (android.text.TextUtils.isEmpty(hexString)) { hexString = \"ffa9deef\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/3807/buggy-version/Kwala.app.src.main.java.com.kwala.app.helpers.Tools.java", "BodyUseAPI": [], "Fixed commit": "9b7d239e1683744a14fe9734ac6588dba40caa1b", "Url": "https://api.github.com/repos/KwalaGroup/Android-Client", "Date": "2017-05-01T20:24:04Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.preference.PreferenceManager.getDefaultSharedPreferences(android.content.Context)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(prefs.contains(\"autoscan_interval\"))) { android.content.SharedPreferences.Editor editor = prefs.edit(); editor.putInt(\"autoscan_interval\", 5); editor.commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/6618/buggy-version/WLANAudit.src.es.glasspixel.wlanaudit.actions.AutoScanAction.java", "BodyUseAPI": ["android.content.SharedPreferences.edit()"], "Fixed commit": "622c31f3d34d8945703948645aad2969e9147910", "Url": "https://api.github.com/repos/RobertoEstrada/WLANAudit-Android", "Date": "2011-08-24T21:55:40Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((iterator.getKey()) != key) { iterator.setNext(new StringNode(key, name)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/7396/buggy-version/Maps.SimpleMapImpl.java", "BodyUseAPI": ["StringNode.setNext(StringNode)"], "Fixed commit": "3d6eaf40012a32271b93b3f6a12feaa8217e2218", "Url": "https://api.github.com/repos/BBK-PiJ-2014-23/D8", "Date": "2015-01-09T15:17:59Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(isEmpty())) && ((first.getKey()) == key)) { first = first.getNext(); }else if (!(isEmpty())) { StringNode iterator = first; while (((iterator.getNext()) != null) && ((iterator.getNext().getKey()) != key)) { iterator = iterator.getNext(); } if (((iterator.getNext()) != null) && ((iterator.getNext().getKey()) == key)) { iterator.setNext(iterator.getNext().getNext()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/7396/buggy-version/Maps.SimpleMapImpl.java", "BodyUseAPI": ["StringNode.getNext()"], "Fixed commit": "3d6eaf40012a32271b93b3f6a12feaa8217e2218", "Url": "https://api.github.com/repos/BBK-PiJ-2014-23/D8", "Date": "2015-01-09T15:17:59Z"},
{"Line": "=>346", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.Keyle.MyPet.repository.MyPetList.getInactiveMyPetFromMyPet(de.Keyle.MyPet.entity.types.MyPet)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (inactiveMyPet != null) { de.Keyle.MyPet.repository.types.NbtRepository.myPets.remove(myPet.getOwner(), pet); de.Keyle.MyPet.repository.types.NbtRepository.myPets.put(myPet.getOwner(), inactiveMyPet); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/7123/buggy-version/src.main.java.de.Keyle.MyPet.repository.types.NbtRepository.java", "BodyUseAPI": ["com.google.common.collect.ArrayListMultimap<de.Keyle.MyPet.api.player.MyPetPlayer, de.Keyle.MyPet.entity.types.InactiveMyPet>.put(myPet.getOwner(),de.Keyle.MyPet.entity.types.InactiveMyPet)"], "Fixed commit": "1b81b4bb93e10e1dbb3dceebf25f04b4fd944fee", "Url": "https://api.github.com/repos/xXKeyleXx/MyPet", "Date": "2016-02-03T13:50:34Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.canAccept)) { return this; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/6635/buggy-version/modules.core.src.main.java.org.scribble.visit.env.ExplicitCorrelationEnv.java", "BodyUseAPI": [], "Fixed commit": "e021273bd62a0a87fff08f4105c3ef26c53f12cd", "Url": "https://api.github.com/repos/rhu1/scribble-java", "Date": "2016-11-18T14:34:10Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (registry == null) { registry = java.lang.System.getProperty(\"docker.registry\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/2809/buggy-version/generator.java-exec.src.main.java.io.fabric8.maven.generator.javaexec.JavaExecGenerator.java", "BodyUseAPI": [], "Fixed commit": "d07b908a55bde98c4be325bc02895db1d3e5d326", "Url": "https://api.github.com/repos/davidkuster/fabric8-maven-plugin", "Date": "2017-03-15T23:39:10Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.codehaus.plexus.util.StringUtils.isNotBlank(registry)) { java.lang.System.out.println(((\"HACK: in JavaExecGenerator.customize(), setting registry value to [\" + registry) + \"]\")); try { java.lang.reflect.Field registryField = imageConfiguration.getClass().getDeclaredField(\"registry\"); registryField.setAccessible(true); registryField.set(imageConfiguration, registry); } catch (java.lang.NoSuchFieldException | java.lang.IllegalAccessException e) { log.error(\"Unable to set registry value [{}]\", registry, e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/2809/buggy-version/generator.java-exec.src.main.java.io.fabric8.maven.generator.javaexec.JavaExecGenerator.java", "BodyUseAPI": ["java.lang.reflect.Field.set(io.fabric8.maven.docker.config.ImageConfiguration,java.lang.String)", "java.io.PrintStream.println(java.lang.String)", "io.fabric8.maven.generator.javaexec.JavaExecGenerator.error(java.lang.String,java.lang.String,java.lang.ReflectiveOperationException)"], "Fixed commit": "d07b908a55bde98c4be325bc02895db1d3e5d326", "Url": "https://api.github.com/repos/davidkuster/fabric8-maven-plugin", "Date": "2017-03-15T23:39:10Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.fabric8.maven.docker.config.ImageConfiguration.getRegistry()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (org.codehaus.plexus.util.StringUtils.isNotBlank(registry)) { java.lang.System.out.println((((((((((\"HACK: in ContainerHandler.getContainers(), registry = [\" + registry) + \"], updating \") + \"image name from [\") + imageName) + \"] to [\") + registry) + \"/\") + imageName) + \"]\")); imageName = (registry + \"/\") + imageName; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/2809/buggy-version/core.src.main.java.io.fabric8.maven.core.handler.ContainerHandler.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "d07b908a55bde98c4be325bc02895db1d3e5d326", "Url": "https://api.github.com/repos/davidkuster/fabric8-maven-plugin", "Date": "2017-03-15T23:39:10Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this) instanceof net.analogyc.wordiary.EntryActivity) { ((net.analogyc.wordiary.EntryActivity) (this)).setView(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/893/buggy-version/src.net.analogyc.wordiary.BaseActivity.java", "BodyUseAPI": [], "Fixed commit": "4323c4cd1f1f89b4d6e6f4c788d459f68def20f3", "Url": "https://api.github.com/repos/analogyc/wordiary", "Date": "2013-07-02T14:10:23Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isEmpty()) { last = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/8393/buggy-version/src.RandomizedQueue.java", "BodyUseAPI": [], "Fixed commit": "cf3706b7c201c116779d1211285b1a86bdf2c17f", "Url": "https://api.github.com/repos/AlexeyKutepov/RandomizedQueuesAndDeques", "Date": "2015-02-02T08:43:23Z"},
{"Line": "=>661", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.psi.util.PsiTreeUtil.getParentOfType(com.intellij.psi.PsiElement,java.lang.Class)", "com.intellij.psi.util.PsiTreeUtil.getParentOfType(com.intellij.psi.PsiElement,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((statementNode.getTextOffset()) > (variableDefinitionNode.getTextOffset())) { results.add(variableDefinition); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/2494/buggy-version/src.main.java.org.ballerinalang.plugins.idea.psi.impl.BallerinaPsiImplUtil.java", "BodyUseAPI": [], "Fixed commit": "11ad3e3563673e7d742bac860ac65c7dc56a2a87", "Url": "https://api.github.com/repos/Shan1024/plugin-intellij", "Date": "2017-05-04T15:21:03Z"},
{"Line": "=>637", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((variableDefinition.getParent().getTextOffset()) < (element.getTextOffset())) { results.add(variableDefinition); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/2494/buggy-version/src.main.java.org.ballerinalang.plugins.idea.psi.impl.BallerinaPsiImplUtil.java", "BodyUseAPI": ["java.util.List<com.intellij.psi.PsiElement>.add(com.intellij.psi.PsiElement)"], "Fixed commit": "11ad3e3563673e7d742bac860ac65c7dc56a2a87", "Url": "https://api.github.com/repos/Shan1024/plugin-intellij", "Date": "2017-05-04T15:21:03Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.nevermindsoft.kiln.KilnPublisher.escapeJSON(org.apache.commons.lang.StringUtils.join(event.getThrowableStrRep(), \"\\n\"))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (stackTrace != null) { me.append(\"\\\"stack_trace\\\":\\\"\").append(stackTrace).append(\"\\\",\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/8447/buggy-version/src.main.java.com.nevermindsoft.kiln.KilnPublisher.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "d0d75d2b07db346cf1e1192eb56cd76452ee2edf", "Url": "https://api.github.com/repos/rcracel/kiln-java-adaptor", "Date": "2012-12-31T23:40:53Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newForm instanceof org.geo2tag.geohandbook.TagsList) m_tagsList.startTagsListUpdate();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/5372/buggy-version/src.org.geo2tag.geochat.MainMidlet.java", "BodyUseAPI": [], "Fixed commit": "f18181200ef0e11c610434ae7791d4d47a48e404", "Url": "https://api.github.com/repos/zmm/geochatj2me", "Date": "2013-06-25T19:35:53Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["objects.HomePage.getConversation(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (existing_convo != null) { java.lang.System.out.println(((\"Conversation: \" + convoID) + \" already exists!\")); resp.sendRedirect(\"messages.jsp\"); }else { objects.Conversation convo = new objects.Conversation(reqPost, temp_flip_user); HomePage.conversations.add(convo); java.lang.System.out.println((\"Message sent to user: \" + (req.getParameter(\"message_seller\")))); resp.sendRedirect(\"messages.jsp\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/6654/buggy-version/src.servlets.MessageUserServlet.java", "BodyUseAPI": [], "Fixed commit": "a95b4a8b56252de6d32ba4547f5a429e1c872cb8", "Url": "https://api.github.com/repos/stormymauldin/flipabook", "Date": "2016-05-01T19:16:22Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fab) != null) fab.setVisibility(View.INVISIBLE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/5281/buggy-version/app.src.main.java.com.calaxar.weatherapp.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "e6aa55e70fcf48b387ef2acbe61f62c159e1cb90", "Url": "https://api.github.com/repos/Calaxar/android_weather", "Date": "2017-12-03T01:18:56Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((findViewById(R.id.fragment)) != null) { if (savedInstanceState != null) { return; } com.calaxar.weatherapp.LocationListFragment locationListFragment = new com.calaxar.weatherapp.LocationListFragment(); locationListFragment.setArguments(getIntent().getExtras()); getFragmentManager().beginTransaction().add(R.id.fragment, locationListFragment).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/5281/buggy-version/app.src.main.java.com.calaxar.weatherapp.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "e6aa55e70fcf48b387ef2acbe61f62c159e1cb90", "Url": "https://api.github.com/repos/Calaxar/android_weather", "Date": "2017-12-03T01:18:56Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((expression) instanceof base.Abstraction) && needAbstraction) { return expression; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/4003/buggy-version/HW8.src.base.Memorize.java", "BodyUseAPI": [], "Fixed commit": "230ef02d214bb7cc1f885cef70c2aa6151c425f7", "Url": "https://api.github.com/repos/javlon/TypeTheory", "Date": "2015-12-16T13:18:52Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(name.equals(\"sphinx\"))) { student = getRoom().findStudent(name); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/1023/buggy-version/src.com.ioopm.Player.java", "BodyUseAPI": ["getRoom().findStudent(java.lang.String)"], "Fixed commit": "cd80027691cd7d1ac2b783d4f1ddb209377b758f", "Url": "https://api.github.com/repos/OskarPersson/mud", "Date": "2014-11-14T00:19:42Z"},
{"Line": "=>417", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (offset != null) memcacheId = (memcacheId + \"&offset=\") + offset;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/3625/buggy-version/src.main.java.com.pratilipi.data.util.PratilipiDataUtil.java", "BodyUseAPI": [], "Fixed commit": "0eaac0c55ac17c4261be963a245891005b020b72", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2016-01-25T18:51:33Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currentWorkbook != null) { suffix = (((\" in workbook '\" + currentWorkbook) + \"', sheet '\") + currentSheet) + \"'\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/8908/buggy-version/STUDIO.org.openl.extension.xmlrules.src.org.openl.extension.xmlrules.utils.CellReference.java", "BodyUseAPI": [], "Fixed commit": "9573805c0f62e754727951af772927302148ea36", "Url": "https://api.github.com/repos/openl-tablets/openl-tablets", "Date": "2015-10-21T17:51:42Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.jface.text.rules.ICharacterScanner.read()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (before != ' ') { return org.eclipse.jface.text.rules.Token.UNDEFINED; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/2245/buggy-version/basheditor-plugin.src.main.java-eclipse.de.jcup.basheditor.document.CommandParameterRule.java", "BodyUseAPI": [], "Fixed commit": "0b95927f6c964c343b1e4453b00828b952aa029d", "Url": "https://api.github.com/repos/de-jcup/eclipse-bash-editor", "Date": "2017-08-03T21:22:22Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dialog.getManageToolsComposite().getNewTools()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(newTools.get(id).isPlugin())) sysDB.update(newTools.get(id));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/5466/buggy-version/src.fr.inria.soctrace.framesoc.ui.src.fr.inria.soctrace.framesoc.ui.handlers.ConfigurationHandler.java", "BodyUseAPI": ["fr.inria.soctrace.lib.storage.SystemDBObject.update(newTools.get(id))", "java.util.Map<java.lang.Integer, fr.inria.soctrace.lib.model.Tool>.get(java.lang.Integer)"], "Fixed commit": "b49b73dc8e9b712a1fb6fd9358fa5ab680b94213", "Url": "https://api.github.com/repos/soctrace-inria/framesoc", "Date": "2015-07-10T14:19:37Z"},
{"Line": "=>350", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (positionOffset == 0.0) { for (int i = 0; i < tabStripChildCount; i++) { mTabStrip.setTextViewColor(i, (i == position)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/231/buggy-version/app.src.main.java.com.development.jaba.view.SlidingTabLayout.java", "BodyUseAPI": [], "Fixed commit": "a15273805447d1459aa62ac272b21373d56442db", "Url": "https://api.github.com/repos/jcbaar/MoneyPit", "Date": "2015-01-28T14:48:19Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((response.getList().size()) == 0) { android.util.Log.d(com.awoisoak.visor.presentation.postgallery.PostGalleryPresenterImpl.MARKER, \"onPostReceived | response.size = 0\"); mView.hideSnackbar(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/5389/buggy-version/app.src.main.java.com.awoisoak.visor.presentation.postgallery.PostGalleryPresenterImpl.java", "BodyUseAPI": [], "Fixed commit": "aeff4530e0047ade39025294f4d033616846dcba", "Url": "https://api.github.com/repos/awoisoak/Visor", "Date": "2017-12-11T07:37:00Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((packageNode.children.containsKey(\"<default>\")) && (\"\".equals(name))) { packageNode = packageNode.children.get(\"<default>\"); }else { info.persistent.dex.Node childPackageNode = new info.persistent.dex.Node(); if ((name.length()) == 0) { name = \"<default>\"; } packageNode.children.put(name, childPackageNode); packageNode = childPackageNode; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/6015/buggy-version/src.info.persistent.dex.DexMethodCounts.java", "BodyUseAPI": ["java.lang.String.length()", "packageNode.children.put(java.lang.String,info.persistent.dex.Node)", "packageNode.children.get(java.lang.String)"], "Fixed commit": "89f7048a03f2a533c62cc7961b7d185a760bf5e0", "Url": "https://api.github.com/repos/Tao93/dex-method-counts", "Date": "2017-04-04T08:33:04Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Scanner.nextInt()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((bookArrayList.get((returnIndex - 1)).getlibraryCard()) == libraryCard) { Checkout.returnBook(bookArrayList, libraryCard, returnIndex); java.lang.System.out.println(\"Would you like to return another book? (Y/N) \"); input.nextLine(); java.lang.String anotherBook = input.nextLine(); if (anotherBook.equalsIgnoreCase(\"y\")) { Checkout.displayBook(bookArrayList, libraryCard, input); } }else { java.lang.System.out.println(\"Invalid Entry!\"); Checkout.displayBook(bookArrayList, libraryCard, input); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/6536/buggy-version/src.Checkout.java", "BodyUseAPI": ["Checkout.returnBook(java.util.ArrayList<Book>,int,int)", "Checkout.displayBook(java.util.ArrayList<Book>,int,java.util.Scanner)", "Checkout.displayBook(java.util.ArrayList<Book>,int,java.util.Scanner)"], "Fixed commit": "91e2e9dfab2dc3f7dd31adbf29b9b7862037fa8f", "Url": "https://api.github.com/repos/erjos/LibraryTerminal", "Date": "2016-06-22T14:37:50Z"},
{"Line": "=>362", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (null != (tempBinaryValues.get(\"parameterName\"))) { parametersName.add(tempBinaryValues.get(\"parameterName\").toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/8031/buggy-version/src.com.dotmarketing.cms.content.submit.action.SubmitContentAction.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)", "java.lang.Object.toString()", "java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Fixed commit": "9b5198c4ff1aedd3d3c258f435253d77bb81411a", "Url": "https://api.github.com/repos/Gynnad/dotCMS", "Date": "2013-08-19T10:51:15Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (errMsg.contains(\"unique\")) { java.lang.System.out.println(\"\u0238\ufffd\ufffd\ufffd\ufffd\u0223 \ufffd\u07fa\ufffd \ufffd\u04b0\ufffd!\"); }else { java.lang.System.out.println(\"\u0238\ufffd\ufffd\ufffd\ufffd\u0223 \ufffd\u0338\ufffd \ufffd\ufffd\u022d\ufffd\ufffd\u0223\ufffd\ufffd \ufffd\u02bc\ufffd \ufffd\u0537\ufffd!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/6160/buggy-version/BMS.src.DAO_DB.java", "BodyUseAPI": [], "Fixed commit": "bda00e2e346ab984fdf0939822e44d927bbd775b", "Url": "https://api.github.com/repos/pit4nya/BookManagementSystem", "Date": "2016-07-22T02:27:41Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState.getBoolean(com.owenlarosa.popularmovies.MovieActivityFragment.SHOWS_FAVORITES_KEY)) { showsFavorites = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/9154/buggy-version/app.src.main.java.com.owenlarosa.popularmovies.MovieActivityFragment.java", "BodyUseAPI": [], "Fixed commit": "17a782aaffef73ab3a466cb4ab80f34b373729b8", "Url": "https://api.github.com/repos/OwenLaRosa/popular-movies-android", "Date": "2016-08-13T13:35:27Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (aContainer instanceof java.util.Map) { @java.lang.SuppressWarnings(\"unchecked\") java.util.Map<java.lang.String, java.lang.Object> tempMap = ((java.util.Map<java.lang.String, java.lang.Object>) (aContainer)); for (java.util.Map.Entry<java.lang.String, java.lang.Object> tempEntry : tempMap.entrySet()) { tempResultMap.put(tempEntry.getKey(), tempEntry.getValue()); } }else { for (java.beans.PropertyDescriptor tempDescriptor : java.beans.Introspector.getBeanInfo(aContainer.getClass()).getPropertyDescriptors()) { java.lang.reflect.Method tempReadMethod = tempDescriptor.getReadMethod(); if (tempReadMethod != null) { if (java.util.Map.class.isAssignableFrom(tempDescriptor.getPropertyType())) { @java.lang.SuppressWarnings(\"unchecked\") java.util.Map<java.lang.String, java.lang.Object> tempMap = ((java.util.Map<java.lang.String, java.lang.Object>) (tempReadMethod.invoke(aContainer))); for (java.util.Map.Entry<java.lang.String, java.lang.Object> tempEntry : tempMap.entrySet()) { tempResultMap.put(tempEntry.getKey(), tempEntry.getValue()); } }else { tempResultMap.put(tempDescriptor.getName(), tempReadMethod.invoke(aContainer)); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/2956/buggy-version/de.gebit.integrity.dsl.src.de.gebit.integrity.utils.ParameterUtil.java", "BodyUseAPI": ["java.lang.reflect.Method.invoke(java.lang.Object)", "java.beans.BeanInfo.getPropertyDescriptors()", "java.lang.reflect.Method.invoke(java.lang.Object)", "java.beans.Introspector.getBeanInfo(java.lang.Class<? extends java.lang.Object>)", "java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,java.lang.Object)", "java.lang.Object.getClass()"], "Fixed commit": "90228554516d81e6a906bff72e526679a84ef265", "Url": "https://api.github.com/repos/integrity-tf/integrity", "Date": "2015-06-18T14:34:02Z"},
{"Line": "=>579", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (candidates.isEmpty()) { candidates.add(possessed); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/4690/buggy-version/src.org.aiwolf.sample.player.SampleWerewolf.java", "BodyUseAPI": ["java.util.List<org.aiwolf.common.data.Agent>.add(org.aiwolf.common.data.Agent)"], "Fixed commit": "5dfe080359c847098cb5a789417b6588b3214e22", "Url": "https://api.github.com/repos/aiwolf/AIWolfClient", "Date": "2017-01-06T20:28:27Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((certificateChainDescription.size()) % 2) != 0) { throw new org.italiangrid.voms.VOMSError((\"LSC file parsing error: \" + ((\"Malformed LSC file. It should contain an even number of \" + \"distinguished name entries expressed in OpenSSL slash-separated\") + \"format.\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/3778/buggy-version/src.main.java.org.italiangrid.voms.store.impl.DefaultLSCFileParser.java", "BodyUseAPI": [], "Fixed commit": "8a7393f5ce67ee6410442a825c13ad8c5e665acd", "Url": "https://api.github.com/repos/italiangrid/voms-api-java", "Date": "2014-05-15T11:54:32Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((certificateChainDescription.size()) == 0) { throw new org.italiangrid.voms.VOMSError((\"LSC file parsing error: \" + \"Malformed LSC file. No distinguished name entries found.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/3778/buggy-version/src.main.java.org.italiangrid.voms.store.impl.DefaultLSCFileParser.java", "BodyUseAPI": [], "Fixed commit": "8a7393f5ce67ee6410442a825c13ad8c5e665acd", "Url": "https://api.github.com/repos/italiangrid/voms-api-java", "Date": "2014-05-15T11:54:32Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Controllers.Database.getIssues(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((issues.size()) == 0) { request.getSession().setAttribute(\"error\", \"Issue not found\"); Controllers.RequestDispatcher dispatcher = getServletContext().getRequestDispatcher(\"/HomePage\"); dispatcher.forward(request, response); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/1161/buggy-version/WEB-INF.classes.Controllers.GetIssue.java", "BodyUseAPI": [], "Fixed commit": "62897aca73aa09ecce846c37b9d9b4f3189ceab2", "Url": "https://api.github.com/repos/theMiniTitan/Knowledge-base-ticketing", "Date": "2016-11-06T02:49:31Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((string.length()) == 1) return string.toUpperCase();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/619/buggy-version/src.main.java.CodingUtils.FormatUtils.java", "BodyUseAPI": ["java.lang.String.toUpperCase()"], "Fixed commit": "739ec16b0767c55b71483ab89560fbe372783fb3", "Url": "https://api.github.com/repos/AlexBolot/CodingUtils", "Date": "2017-10-13T13:17:31Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (string.isEmpty()) return string;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/619/buggy-version/src.main.java.CodingUtils.FormatUtils.java", "BodyUseAPI": [], "Fixed commit": "739ec16b0767c55b71483ab89560fbe372783fb3", "Url": "https://api.github.com/repos/AlexBolot/CodingUtils", "Date": "2017-10-13T13:17:31Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(CodingUtils.FormatUtils.isInteger(string))) throw new java.lang.IllegalArgumentException((string + \" can't be parsed into an int\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/619/buggy-version/src.main.java.CodingUtils.FormatUtils.java", "BodyUseAPI": [], "Fixed commit": "739ec16b0767c55b71483ab89560fbe372783fb3", "Url": "https://api.github.com/repos/AlexBolot/CodingUtils", "Date": "2017-10-13T13:17:31Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mainTutorialWrapper != null) && ((mainTutorialWrapper.getVisibility()) == (android.view.View.VISIBLE))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/2798/buggy-version/business.src.main.java.com.dnocode.lib.business.utility.Teacher.java", "BodyUseAPI": [], "Fixed commit": "29a6b61f845ba3e2e752d2618920a169150b7094", "Url": "https://api.github.com/repos/dnocode/DnoLib", "Date": "2015-04-19T16:35:48Z"},
{"Line": "=>402", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.current) == 0) { this.pcSupport.firePropertyChange(org.fenix.llanfair.Run.ATTEMPT_COUNT_PROPERTY, attemptCount, (--(attemptCount))); this.reset(); }else if ((this.current) == (this.segments.size())) { this.pcSupport.firePropertyChange(org.fenix.llanfair.Run.ATTEMPT_COUNT_PROPERTY, attemptCompletedCount, (--(attemptCompletedCount))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/1641/buggy-version/org.fenix.llanfair.Run.java", "BodyUseAPI": [], "Fixed commit": "52ab17c350b2305e767de99b2e98e098a3692b51", "Url": "https://api.github.com/repos/jbzdarkid/Llanfair_decompile", "Date": "2015-11-11T07:41:12Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.wilddog.client.DataSnapshot.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (value != null) { boolean send = ((boolean) (value)); if (send) { android.util.Log.d(\"lk\", \"onDataChange:send\"); keyDownUp(KeyEvent.KEYCODE_ENTER); ref_send.setValue(false); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/1957/buggy-version/app.src.main.java.demo.ime.ImeService.java", "BodyUseAPI": [], "Fixed commit": "ff9085963d26f9bc8c976fc9c0dbb891a2b3df7f", "Url": "https://api.github.com/repos/petchat/senz.inputmethod.android", "Date": "2016-02-22T09:35:39Z"},
{"Line": "=>4666", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((writeObj) != null) cctx.validateKeyAndValue(entry.key, ((org.apache.ignite.internal.processors.cache.CacheObject) (writeObj)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/1215/buggy-version/modules.core.src.main.java.org.apache.ignite.internal.processors.cache.GridCacheMapEntry.java", "BodyUseAPI": [], "Fixed commit": "9ab8c40940d42abb7e150fac928a0b1f8e0b0cbd", "Url": "https://api.github.com/repos/gridgain/apache-ignite", "Date": "2017-07-25T14:36:11Z"},
{"Line": "=>428", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (val != null) cacheCtx.validateKeyAndValue(key, val);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/1215/buggy-version/modules.core.src.main.java.org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtTxPrepareFuture.java", "BodyUseAPI": ["org.apache.ignite.internal.processors.cache.GridCacheContext.validateKeyAndValue(org.apache.ignite.internal.processors.cache.KeyCacheObject,org.apache.ignite.internal.processors.cache.CacheObject)"], "Fixed commit": "9ab8c40940d42abb7e150fac928a0b1f8e0b0cbd", "Url": "https://api.github.com/repos/gridgain/apache-ignite", "Date": "2017-07-25T14:36:11Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fv.name.toString().startsWith(\"aug-\")) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/6112/buggy-version/src.edu.stanford.nlp.mt.decoder.feat.FeatureExtractor.java", "BodyUseAPI": [], "Fixed commit": "8f658a0e574aa727144b3491bda4831ea345003f", "Url": "https://api.github.com/repos/stanfordnlp/phrasal", "Date": "2015-11-20T16:38:56Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (parseUrl(url)) { return true; }else { android.util.Log.d(Constants.LOG_TAG, java.lang.String.format(\"Could not find oauth_verifier in callback url, %s , are you sure you set a callback url in your service?\", url)); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/8937/buggy-version/library.src.main.java.com.whiterabbit.postman.oauth.OAuthFragment.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,java.lang.String)", "android.util.Log.d(Constants.LOG_TAG,java.lang.String)"], "Fixed commit": "5295f844ce1fe86fdaeb6d7e9eaad3cba0602c6a", "Url": "https://api.github.com/repos/fedepaol/PostmanLib--Rings-Twice--Android", "Date": "2013-03-15T03:32:03Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(thread.isPaused())) { this.currentStage.onTap(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/3480/buggy-version/OneButtonLarry.src.org.scbio.onebuttonlarry.game.GameView.java", "BodyUseAPI": [], "Fixed commit": "e5712cb076387c189a9fed70984aba4dd2813f8e", "Url": "https://api.github.com/repos/LNSD002/SCBIO-OneButtonLarry", "Date": "2014-03-03T21:08:05Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(fr.neamar.cinetime.fragments.TheatersFragment.query.equalsIgnoreCase(\"\"))) { searchForTheater(fr.neamar.cinetime.fragments.TheatersFragment.query); }else { onLoadOver(fr.neamar.cinetime.db.DBHelper.getFavorites(fr.neamar.cinetime.fragments.TheatersFragment.ctx)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/5581/buggy-version/src.fr.neamar.cinetime.fragments.TheatersFragment.java", "BodyUseAPI": ["fr.neamar.cinetime.fragments.TheatersFragment.3.searchForTheater(java.lang.String)"], "Fixed commit": "ada1d3624fc139b77893df6550cdf457d7a651cb", "Url": "https://api.github.com/repos/Neamar/CineTime", "Date": "2013-02-24T17:30:32Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(fr.neamar.cinetime.fragments.TheatersFragment.previousQuery.equalsIgnoreCase(query))) { fr.neamar.cinetime.fragments.TheatersFragment.previousQuery = query; new fr.neamar.cinetime.fragments.TheatersFragment.LoadTheatersTask(fr.neamar.cinetime.fragments.TheatersFragment.ctx).execute(query); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/5581/buggy-version/src.fr.neamar.cinetime.fragments.TheatersFragment.java", "BodyUseAPI": ["fr.neamar.cinetime.fragments.TheatersFragment.LoadTheatersTask.execute(java.lang.String)"], "Fixed commit": "ada1d3624fc139b77893df6550cdf457d7a651cb", "Url": "https://api.github.com/repos/Neamar/CineTime", "Date": "2013-02-24T17:30:32Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (updatedBalance < 0) { updatedBalance = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/4410/buggy-version/spilSDK.src.main.java.com.spilgames.spilsdk.playerdata.PlayerDataUtil.java", "BodyUseAPI": [], "Fixed commit": "ab12c71c1ad9b010e2ff4bcd377bd9ad376459fc", "Url": "https://api.github.com/repos/spilgames/spil-android-sdk", "Date": "2016-06-14T14:28:49Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (responseEvent instanceof com.spilgames.spilsdk.events.response.NotificationResponseEvent) { if (responseEvent.getAction().toLowerCase().trim().equals(\"show\")) { com.spilgames.spilsdk.pushnotifications.NotificationManager.processNotificationForShowing(context, ((com.spilgames.spilsdk.events.response.NotificationResponseEvent) (responseEvent)).data); } }else if (responseEvent instanceof com.spilgames.spilsdk.events.response.PackageResponseEvent) { java.lang.String packageJSON = ((com.spilgames.spilsdk.events.response.PackageResponseEvent) (responseEvent)).getPackageJSON(); com.spilgames.spilsdk.gamedata.packages.PackageUtil.processPackageJSON(packageJSON, context); }else if (responseEvent instanceof com.spilgames.spilsdk.events.response.GameObjectsResponseEvent) { com.spilgames.spilsdk.gamedata.SpilGameDataUtil.processGameData(context, ((com.spilgames.spilsdk.events.response.GameObjectsResponseEvent) (responseEvent)).getCurrencies(), ((com.spilgames.spilsdk.events.response.GameObjectsResponseEvent) (responseEvent)).getItems(), ((com.spilgames.spilsdk.events.response.GameObjectsResponseEvent) (responseEvent)).getBundles(), ((com.spilgames.spilsdk.events.response.GameObjectsResponseEvent) (responseEvent)).getShop(), ((com.spilgames.spilsdk.events.response.GameObjectsResponseEvent) (responseEvent)).getPromotions()); }else if (responseEvent instanceof com.spilgames.spilsdk.events.response.PlayerDataResponseEvent) { com.spilgames.spilsdk.playerdata.PlayerDataUtil.processPlayerData(context, ((com.spilgames.spilsdk.events.response.PlayerDataResponseEvent) (responseEvent)).getWalletObject(), ((com.spilgames.spilsdk.events.response.PlayerDataResponseEvent) (responseEvent)).getInventoryObject()); }else { if (actionListener != null) { actionListener.onResponse(responseEvent); } if ((globalEventActionListener) != null) { globalEventActionListener.onResponse(responseEvent); } actionListenerList.remove(listenerId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/4410/buggy-version/spilSDK.src.forUnityAdvanced.java.com.spilgames.spilsdk.SpilSdk.java", "BodyUseAPI": ["com.spilgames.spilsdk.events.response.ResponseEvent.getAction()", "com.spilgames.spilsdk.events.EventActionListener.onResponse(com.spilgames.spilsdk.events.response.ResponseEvent)", "com.spilgames.spilsdk.SpilSdk.onResponse(com.spilgames.spilsdk.events.response.ResponseEvent)", "responseEvent.getAction().toLowerCase()", "responseEvent.getAction().toLowerCase().trim()", "responseEvent.getAction().toLowerCase().trim().equals(java.lang.String)"], "Fixed commit": "ab12c71c1ad9b010e2ff4bcd377bd9ad376459fc", "Url": "https://api.github.com/repos/spilgames/spil-android-sdk", "Date": "2016-06-14T14:28:49Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((conn) != null) { conn.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/3775/buggy-version/phoenix-core.src.main.java.org.apache.phoenix.mapreduce.FormatToKeyValueMapper.java", "BodyUseAPI": [], "Fixed commit": "f244feb4261d0edd19992f0d7f04a3a58615e479", "Url": "https://api.github.com/repos/apache/phoenix", "Date": "2015-12-10T00:51:18Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((conn) == null) { throw new java.lang.RuntimeException(\"Connection not initialized.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/3775/buggy-version/phoenix-core.src.main.java.org.apache.phoenix.mapreduce.FormatToKeyValueMapper.java", "BodyUseAPI": [], "Fixed commit": "f244feb4261d0edd19992f0d7f04a3a58615e479", "Url": "https://api.github.com/repos/apache/phoenix", "Date": "2015-12-10T00:51:18Z"},
{"Line": "=>4021", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lb.isArg) lb.idx -= 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/6389/buggy-version/src.jvm.clojure.lang.Compiler.java", "BodyUseAPI": [], "Fixed commit": "b50ff75a158113905fa875747ae8ca0c8d048ae7", "Url": "https://api.github.com/repos/MichaelBlume/clojure", "Date": "2015-08-31T04:27:39Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.istic.synthlab.core.services.Register.retrieve(org.istic.synthlab.core.modules.io.IInput)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (unitIn == null) { throw new java.lang.ExceptionInInitializerError((out + \" has not been declared properly\")); }else if (unitOut == null) { throw new java.lang.ExceptionInInitializerError((in + \" has not been declared properly\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/3524/buggy-version/src.main.java.org.istic.synthlab.core.services.Register.java", "BodyUseAPI": [], "Fixed commit": "121da58664ebd7eff238c17a8ab1bc16c609e7a4", "Url": "https://api.github.com/repos/thibhul/Synth", "Date": "2016-03-01T16:03:16Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cn.wehack.spurious.support.utils.StringUtils.isNullOrEmpty(db.getUserIcon())) { com.avos.avoscloud.AVFile.withObjectIdInBackground(\"566190d500b0d1dba28640b3\", new com.avos.avoscloud.GetFileCallback<com.avos.avoscloud.AVFile>() { @java.lang.Override public void done(final com.avos.avoscloud.AVFile avFile, com.avos.avoscloud.AVException e) { if (e == null) { avUser.put(LC.table.User.nickname, db.getUserName()); avUser.put(LC.table.User.thumb, avFile); avUser.put(LC.table.User.sex, db.getUserGender()); avUser.saveInBackground(new com.avos.avoscloud.SaveCallback() { @java.lang.Override public void done(com.avos.avoscloud.AVException e) { if (e == null) { android.util.Log.e(cn.wehack.spurious.model.user.UserManager.TAG, \"saveThirdPartyUserInfo-success\"); saveUserInfoAsResource(db.getUserName(), avFile, lis); }else { cn.wehack.spurious.support.helper.LogHelper.e(cn.wehack.spurious.model.user.UserManager.TAG, \"saveThirdPartyUserInfo-fail \", e); lis.onError(new cn.wehack.spurious.framework.exception.WXException(\"\u767b\u5f55\u5931\u8d25\")); } } }); }else { cn.wehack.spurious.support.helper.LogHelper.e(cn.wehack.spurious.model.user.UserManager.TAG, \"\u4e0a\u4f20\u5934\u50cf-fail \", e); lis.onError(new cn.wehack.spurious.framework.exception.WXException(\"\u767b\u5f55\u5931\u8d25\")); } } }); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/994/buggy-version/app.src.free.java.cn.wehack.spurious.model.user.UserManager.java", "BodyUseAPI": ["com.avos.avoscloud.AVUser.put(LC.table.User.nickname,db.getUserName())", "1.saveUserInfoAsResource(db.getUserName(),com.avos.avoscloud.AVFile,cn.wehack.spurious.model.user.UserManager.OnThirdPartyLoginListener)", "cn.sharesdk.framework.PlatformDb.getUserName()", "com.avos.avoscloud.AVUser.saveInBackground(com.avos.avoscloud.SaveCallback)", "com.avos.avoscloud.AVUser.put(LC.table.User.sex,db.getUserGender())", "cn.sharesdk.framework.PlatformDb.getUserGender()", "cn.sharesdk.framework.PlatformDb.getUserName()", "com.avos.avoscloud.AVFile.withObjectIdInBackground(java.lang.String,com.avos.avoscloud.GetFileCallback<com.avos.avoscloud.AVFile>)"], "Fixed commit": "08e31872ed2b8d5ef3f885275e2e3d2b106f3e27", "Url": "https://api.github.com/repos/zhichangterry/almost-true-android", "Date": "2015-12-04T13:35:55Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mView.onLoadDataListener) != null) mView.onLoadDataListener.onDataListEmpty();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/994/buggy-version/app.src.free.java.cn.wehack.spurious.vp.resource.resource_list.ResourceListPresenter.java", "BodyUseAPI": [], "Fixed commit": "08e31872ed2b8d5ef3f885275e2e3d2b106f3e27", "Url": "https://api.github.com/repos/zhichangterry/almost-true-android", "Date": "2015-12-04T13:35:55Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (url == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/3725/buggy-version/src.co.uk.gauntface.android.libs.utils.ImageCacheUtils.java", "BodyUseAPI": [], "Fixed commit": "4a9252cf678453f91ee7ee77ff95d73075226ecd", "Url": "https://api.github.com/repos/gauntface/gauntface-android-libs", "Date": "2012-06-15T10:25:23Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (directory.exists()) { return getNextTempDirectory(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/5019/buggy-version/dependency-check-core.src.main.java.org.owasp.dependencycheck.analyzer.ArchiveAnalyzer.java", "BodyUseAPI": [], "Fixed commit": "18825833b1bbaaffbd3dc8ad85769db456b2b085", "Url": "https://api.github.com/repos/jeremylong/DependencyCheck", "Date": "2013-10-26T21:19:55Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(d.exists())) { if (!(d.mkdirs())) { throw new org.owasp.dependencycheck.analyzer.AnalysisException(((\"Unable to create '\" + (d.getAbsolutePath())) + \"'.\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/5019/buggy-version/dependency-check-core.src.main.java.org.owasp.dependencycheck.analyzer.ArchiveAnalyzer.java", "BodyUseAPI": ["java.io.File.getAbsolutePath()", "java.io.File.mkdirs()"], "Fixed commit": "18825833b1bbaaffbd3dc8ad85769db456b2b085", "Url": "https://api.github.com/repos/jeremylong/DependencyCheck", "Date": "2013-10-26T21:19:55Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sonar.api.batch.fs.FileSystem.inputFile(fs.predicates().hasRelativePath(otherFileRelativePath))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (otherFile == null) { throw new java.lang.IllegalStateException((\"Unable to find file \" + otherFileRelativePath)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/1811/buggy-version/plugins.sonar-xoo-plugin.src.main.java.org.sonar.xoo.lang.DependencySensor.java", "BodyUseAPI": [], "Fixed commit": "ffa03bd7809651a132e77fd74f79fc3eb1636e5c", "Url": "https://api.github.com/repos/SonarSource/sonarqube", "Date": "2014-10-16T07:09:34Z"},
{"Line": "=>706", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((buffer.length()) == 1) { buffer = \"0\"; }else if (((buffer.length()) == 2) && ((buffer.charAt(0)) == '-')) { buffer = \"0\"; }else { buffer = buffer.substring(0, ((buffer.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/8493/buggy-version/src.Calculator.java", "BodyUseAPI": ["java.lang.String.charAt(int)", "java.lang.String.length()"], "Fixed commit": "21bd4adcfba19d379cddf11eb803b3fdbfa1bf0f", "Url": "https://api.github.com/repos/weruder/CS2336-Calculator", "Date": "2017-07-22T20:07:25Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (name == null) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/5010/buggy-version/src.main.java.com.inari.firefly.system.component.SystemComponentMap.java", "BodyUseAPI": [], "Fixed commit": "c1137c7f0d56e7af1bbe7fa68ee95e1d81046189", "Url": "https://api.github.com/repos/Inari-Soft/inari-firefly", "Date": "2017-09-18T10:10:31Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.inari.commons.lang.list.DynArray<C>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (name.equals(component.getName())) { return component.index(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/5010/buggy-version/src.main.java.com.inari.firefly.system.component.SystemComponentMap.java", "BodyUseAPI": ["C.index()"], "Fixed commit": "c1137c7f0d56e7af1bbe7fa68ee95e1d81046189", "Url": "https://api.github.com/repos/Inari-Soft/inari-firefly", "Date": "2017-09-18T10:10:31Z"},
{"Line": "=>517", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((extraDataReporting) == null) { extraDataReporting = new java.util.HashMap<>(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/485/buggy-version/wibmo-iap-sdk.src.main.java.com.enstage.wibmo.sdk.inapp.InAppInitActivity.java", "BodyUseAPI": [], "Fixed commit": "ffa51914a59fff77c177704e7bb9c64cb8089d1c", "Url": "https://api.github.com/repos/wibmo/wibmo-iap-sdk-android", "Date": "2016-12-05T10:58:35Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((inAppShellHepler.getWebView()) != null) { inAppShellHepler.getWebView().loadUrl(stringBuilder.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/485/buggy-version/wibmo-iap-sdk.src.main.java.com.enstage.wibmo.sdk.inapp.InAppShellJavaScriptInterface.java", "BodyUseAPI": ["com.enstage.wibmo.sdk.inapp.InAppShellHepler.getWebView()", "inAppShellHepler.getWebView().loadUrl(java.lang.String)"], "Fixed commit": "ffa51914a59fff77c177704e7bb9c64cb8089d1c", "Url": "https://api.github.com/repos/wibmo/wibmo-iap-sdk-android", "Date": "2016-12-05T10:58:35Z"},
{"Line": "=>409", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (out != null) { out.flush(); out.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/8745/buggy-version/Exo2.java", "BodyUseAPI": ["java.io.BufferedOutputStream.close()", "java.io.BufferedOutputStream.flush()"], "Fixed commit": "866e3d892cc47815f881579aef5019bc049a1158", "Url": "https://api.github.com/repos/raphaelauv/Algorithms", "Date": "2017-10-11T16:10:26Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((accessor.getTileEntity()) instanceof crazypants.enderio.conduit.IConduitBundle) && (crazypants.enderio.conduit.ConduitUtil.isFacadeHidden(((crazypants.enderio.conduit.IConduitBundle) (accessor.getTileEntity())), accessor.getPlayer()))) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/8075/buggy-version/src.main.java.crazypants.enderio.waila.WailaCompat.java", "BodyUseAPI": [], "Fixed commit": "558f382543549f0af98ec6db20f4b024e39ca09d", "Url": "https://api.github.com/repos/SleepyTrousers/EnderIO", "Date": "2015-03-01T14:34:38Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!res) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/8228/buggy-version/src.main.java.name.kazennikov.morph.aot.MorphData.java", "BodyUseAPI": [], "Fixed commit": "2290d5d752c0528240dfd43b92ce52a62f5fd81c", "Url": "https://api.github.com/repos/kzn/jaot", "Date": "2012-07-04T19:53:53Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!res) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/8228/buggy-version/src.main.java.name.kazennikov.morph.aot.MorphData.java", "BodyUseAPI": [], "Fixed commit": "2290d5d752c0528240dfd43b92ce52a62f5fd81c", "Url": "https://api.github.com/repos/kzn/jaot", "Date": "2012-07-04T19:53:53Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["name.kazennikov.morph.aot.MorphData.walkIterative(name.kazennikov.dafsa.IntNFSA,java.lang.CharSequence,java.lang.StringBuilder,int,int,int,int,name.kazennikov.morph.aot.MorphData.ParseProcessor)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!res) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/8228/buggy-version/src.main.java.name.kazennikov.morph.aot.MorphData.java", "BodyUseAPI": [], "Fixed commit": "2290d5d752c0528240dfd43b92ce52a62f5fd81c", "Url": "https://api.github.com/repos/kzn/jaot", "Date": "2012-07-04T19:53:53Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["name.kazennikov.dafsa.IntNFSA.getFinals(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((fin != null) && (!(fin.isEmpty()))) { java.lang.System.out.printf(\"state %d: \", state); boolean res = parseProcessor.process(s, sb, startIndex, currentIndex, fin); if (!res) return res; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/8228/buggy-version/src.main.java.name.kazennikov.morph.aot.MorphData.java", "BodyUseAPI": ["name.kazennikov.morph.aot.MorphData.ParseProcessor.process(java.lang.CharSequence,java.lang.StringBuilder,int,int,gnu.trove.set.TIntSet)"], "Fixed commit": "2290d5d752c0528240dfd43b92ce52a62f5fd81c", "Url": "https://api.github.com/repos/kzn/jaot", "Date": "2012-07-04T19:53:53Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ch != 0) { nextIndex = (currentIndex != endIndex) ? currentIndex + 1 : endIndex; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/8228/buggy-version/src.main.java.name.kazennikov.morph.aot.MorphData.java", "BodyUseAPI": [], "Fixed commit": "2290d5d752c0528240dfd43b92ce52a62f5fd81c", "Url": "https://api.github.com/repos/kzn/jaot", "Date": "2012-07-04T19:53:53Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!res) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/8228/buggy-version/src.main.java.name.kazennikov.morph.aot.MorphData.java", "BodyUseAPI": [], "Fixed commit": "2290d5d752c0528240dfd43b92ce52a62f5fd81c", "Url": "https://api.github.com/repos/kzn/jaot", "Date": "2012-07-04T19:53:53Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pillClassifier) == null) pillClassifier = new msu.ece.PATHozeng.mpf3.classifier.PillClassifier(this);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/8170/buggy-version/MPF3.app.src.main.java.msu.ece.PATHozeng.mpf3.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "d5930b1bc5666405249562cb32d4916957558b26", "Url": "https://api.github.com/repos/zengPATHo1028/MobileDeepPill", "Date": "2017-03-01T15:22:06Z"},
{"Line": "=>783", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (exp.contains(\"\\'\")) { exp = exp.replace(\"\\\\\\'\", \"'\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/4027/buggy-version/json-path.src.main.java.com.jayway.jsonpath.Criteria.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "9837c72aaf5c7d0d8c80615f0a255e6c5c449c63", "Url": "https://api.github.com/repos/Agathia/JsonPath", "Date": "2015-03-12T12:16:16Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((io.github.sporklibrary.Spork.binder) == null) { io.github.sporklibrary.Spork.initialize(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/2009/buggy-version/spork.src.main.java.io.github.sporklibrary.Spork.java", "BodyUseAPI": [], "Fixed commit": "323e86510a4f555ac30ef66c0cbd7b834dc14e2e", "Url": "https://api.github.com/repos/ByteWelder/Spork", "Date": "2016-09-19T21:08:17Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((io.github.sporklibrary.Spork.binder) == null) { io.github.sporklibrary.Spork.initialize(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/2009/buggy-version/spork.src.main.java.io.github.sporklibrary.Spork.java", "BodyUseAPI": [], "Fixed commit": "323e86510a4f555ac30ef66c0cbd7b834dc14e2e", "Url": "https://api.github.com/repos/ByteWelder/Spork", "Date": "2016-09-19T21:08:17Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (render == null) render = html.getRender();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/722/buggy-version/juneau-core.src.main.java.org.apache.juneau.html.HtmlSerializer.java", "BodyUseAPI": [], "Fixed commit": "addeb00edf4b12d69324512601c17773271abea5", "Url": "https://api.github.com/repos/apache/juneau", "Date": "2017-06-21T21:28:15Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (render != null) { java.lang.Object o2 = render.getContent(session, o); if (o2 != o) return serializeAnything(session, out, o2, null, typeName, 2, null, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/722/buggy-version/juneau-core.src.main.java.org.apache.juneau.html.HtmlSerializer.java", "BodyUseAPI": ["org.apache.juneau.html.HtmlRender.getContent(org.apache.juneau.html.HtmlSerializerSession,java.lang.Object)"], "Fixed commit": "addeb00edf4b12d69324512601c17773271abea5", "Url": "https://api.github.com/repos/apache/juneau", "Date": "2017-06-21T21:28:15Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (solution != null) { Solutions.add(solution); ViewList.add(view); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/3270/buggy-version/src.dlx.DLX.java", "BodyUseAPI": ["java.util.List<java.util.List<java.util.List<java.lang.Integer>>>.add(java.util.List<java.util.List<java.lang.Integer>>)"], "Fixed commit": "19c4ef17c038419414658ec219ccf6263d0aa1e2", "Url": "https://api.github.com/repos/Deyuan/TilingPuzzle", "Date": "2014-12-01T05:23:42Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (books.isEmpty()) { adapter.clear(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/4895/buggy-version/app.src.main.java.com.example.android.booklisting.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "53a37b775f94cb50e5a73a89c87b5be1f620098b", "Url": "https://api.github.com/repos/solens/BookListing", "Date": "2017-06-24T00:10:29Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["currentParameter.getField().getType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (parameterType.equals(boolean.class)) { currentParameter.getField().setBoolean(target, true); }else { currentParameter.getField().set(target, java.lang.Boolean.TRUE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/5165/buggy-version/src.main.java.com.alexrnl.commons.arguments.Arguments.java", "BodyUseAPI": [], "Fixed commit": "7ba30783c9d2d9acf86611ff5714448871e97af6", "Url": "https://api.github.com/repos/AlexRNL/Commons", "Date": "2013-12-26T01:13:32Z"},
{"Line": "=>721", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((configMap.get(\"-agent\")) != null) { return dIP; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/2258/buggy-version/src.lia.util.net.common.Config.java", "BodyUseAPI": [], "Fixed commit": "067bfb20fde75f9b98d862955bd519667192830d", "Url": "https://api.github.com/repos/fast-data-transfer/fdt", "Date": "2017-09-02T08:49:08Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<io.github.celestialphineas.sanxing.sxObject.Habit>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((temp.getState()) == 0) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/2318/buggy-version/app.src.main.java.io.github.celestialphineas.sanxing.UICalendarViews.HabitCalendarFragment.java", "BodyUseAPI": [], "Fixed commit": "2414f620505322b58b023a36e8792a0623eb430d", "Url": "https://api.github.com/repos/AndroidNewbies/Sanxing", "Date": "2017-12-23T15:46:33Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<io.github.celestialphineas.sanxing.sxObject.Task>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((temp.getState()) == 0) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/2318/buggy-version/app.src.main.java.io.github.celestialphineas.sanxing.UICalendarViews.TaskCalendarFragment.java", "BodyUseAPI": [], "Fixed commit": "2414f620505322b58b023a36e8792a0623eb430d", "Url": "https://api.github.com/repos/AndroidNewbies/Sanxing", "Date": "2017-12-23T15:46:33Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.list(java.io.FilenameFilter)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (fileList1 != null) { for (java.lang.String file : fileList1) { r.add(file); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/3557/buggy-version/app.src.main.java.com.comicviewer.cedric.comicviewer.FileDialog.java", "BodyUseAPI": [], "Fixed commit": "fbfecb95794d37ec365472a5b211fa3a6bb42bf1", "Url": "https://api.github.com/repos/CedricVandelaer/Material-Comic-Viewer", "Date": "2016-07-03T23:42:58Z"},
{"Line": "=>598", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(entries.contains(org.eclipse.jdt.launching.JavaRuntime.getDefaultJREContainerEntry()))) entries.add(org.eclipse.jdt.launching.JavaRuntime.getDefaultJREContainerEntry());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/1370/buggy-version/ASCoDTKernel.src.de.tum.ascodt.plugin.project.Project.java", "BodyUseAPI": ["java.util.Set<org.eclipse.jdt.core.IClasspathEntry>.add(org.eclipse.jdt.launching.JavaRuntime.getDefaultJREContainerEntry())"], "Fixed commit": "e9db22b8c6abbd130d6ce054ccae8e6dbd98d9b9", "Url": "https://api.github.com/repos/ascodt-users/ascodt-nightly", "Date": "2013-06-19T19:01:34Z"},
{"Line": "=>626", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(new org.eclipse.core.runtime.Path(classElement.getPath().toFile().toURI().toURL().toString()).lastSegment().contains(this.getEclipseProjectHandle().getName()))) entries.add(classElement);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/1370/buggy-version/ASCoDTKernel.src.de.tum.ascodt.plugin.project.Project.java", "BodyUseAPI": ["java.util.Set<org.eclipse.jdt.core.IClasspathEntry>.add(org.eclipse.jdt.core.IClasspathEntry)"], "Fixed commit": "e9db22b8c6abbd130d6ce054ccae8e6dbd98d9b9", "Url": "https://api.github.com/repos/ascodt-users/ascodt-nightly", "Date": "2013-06-19T19:01:34Z"},
{"Line": "=>596", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(entries.contains(org.eclipse.jdt.core.JavaCore.newLibraryEntry(new org.eclipse.core.runtime.Path(de.tum.ascodt.resources.ResourceManager.getResourceAsPath(\"swt.jar\", ASCoDTKernel.ID).getPath()), null, null, false)))) entries.add(org.eclipse.jdt.core.JavaCore.newLibraryEntry(new org.eclipse.core.runtime.Path(de.tum.ascodt.resources.ResourceManager.getResourceAsPath(\"swt.jar\", ASCoDTKernel.ID).getPath()), null, null, false));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/1370/buggy-version/ASCoDTKernel.src.de.tum.ascodt.plugin.project.Project.java", "BodyUseAPI": ["java.util.Set<org.eclipse.jdt.core.IClasspathEntry>.add(org.eclipse.jdt.core.JavaCore.newLibraryEntry(new org.eclipse.core.runtime.Path(de.tum.ascodt.resources.ResourceManager.getResourceAsPath(\"swt.jar\", ASCoDTKernel.ID).getPath()), null, null, false))"], "Fixed commit": "e9db22b8c6abbd130d6ce054ccae8e6dbd98d9b9", "Url": "https://api.github.com/repos/ascodt-users/ascodt-nightly", "Date": "2013-06-19T19:01:34Z"},
{"Line": "=>594", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(entries.contains(org.eclipse.jdt.core.JavaCore.newLibraryEntry(new org.eclipse.core.runtime.Path(de.tum.ascodt.resources.ResourceManager.getResourceAsPath(\"\", ASCoDTKernel.ID).getPath()), null, null, false)))) entries.add(org.eclipse.jdt.core.JavaCore.newLibraryEntry(new org.eclipse.core.runtime.Path(de.tum.ascodt.resources.ResourceManager.getResourceAsPath(\"\", ASCoDTKernel.ID).getPath()), null, null, false));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/1370/buggy-version/ASCoDTKernel.src.de.tum.ascodt.plugin.project.Project.java", "BodyUseAPI": ["java.util.Set<org.eclipse.jdt.core.IClasspathEntry>.add(org.eclipse.jdt.core.JavaCore.newLibraryEntry(new org.eclipse.core.runtime.Path(de.tum.ascodt.resources.ResourceManager.getResourceAsPath(\"\", ASCoDTKernel.ID).getPath()), null, null, false))"], "Fixed commit": "e9db22b8c6abbd130d6ce054ccae8e6dbd98d9b9", "Url": "https://api.github.com/repos/ascodt-users/ascodt-nightly", "Date": "2013-06-19T19:01:34Z"},
{"Line": "=>1081", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((\"null\".equals(u.parsedName.getSpecificEpithet())) || (\"null\".equals(u.parsedName.getInfraSpecificEpithet()))) { throw new org.gbif.checklistbank.nub.IgnoreSourceUsageException(\"Ignore names with null epithets\", u.scientificName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/1970/buggy-version/checklistbank-cli.src.main.java.org.gbif.checklistbank.nub.NubBuilder.java", "BodyUseAPI": [], "Fixed commit": "65d98d1878df1a1276cbcc343cb2bbbfa008f881", "Url": "https://api.github.com/repos/gbif/checklistbank", "Date": "2016-04-11T10:43:45Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getJSONObject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (volumeInfo.has(\"authors\")) { author = volumeInfo.getJSONArray(\"authors\").get(0).toString(); }else { author = \"No Author\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/7208/buggy-version/app.src.main.java.com.example.android.booklistingapp.QueryUtils.java", "BodyUseAPI": ["org.json.JSONObject.getJSONArray(java.lang.String)", "volumeInfo.getJSONArray(\"authors\").get(int)", "volumeInfo.getJSONArray(\"authors\").get(0).toString()"], "Fixed commit": "dcbad71f56e689be202fee60a3f8d76bfda3a6d2", "Url": "https://api.github.com/repos/spagetthicoder/BookListingApp", "Date": "2017-06-28T16:32:21Z"},
{"Line": "=>1297", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((gameMode) == 0) { playerTypes[turn] = ((turn) < ((numPlayers) - (numAI))) ? 0 : 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/477/buggy-version/common.risk.game.Game.java", "BodyUseAPI": [], "Fixed commit": "3ebc0478b9bc8cc101bd9ba6e39008a9557c7e59", "Url": "https://api.github.com/repos/iburinoc/risk", "Date": "2013-11-20T20:25:03Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((command) == (utilities.COMMANDS.SEARCH)) { return parser.Parser.EMPTY; }else { return indexPiece[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/6338/buggy-version/src.parser.Parser.java", "BodyUseAPI": [], "Fixed commit": "fe3a7e43703f6e0a26fca81218207e2efc155399", "Url": "https://api.github.com/repos/cs2103aug2015-w14-4j/main", "Date": "2015-11-10T06:12:47Z"},
{"Line": "=>313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((color == null) || ((color.trim().length()) == 0)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/4444/buggy-version/src.org.rapla.plugin.abstractcalendar.RaplaBuilder.java", "BodyUseAPI": [], "Fixed commit": "2d861ef96a334fc84f74e479c0c5b220d1c3f3c6", "Url": "https://api.github.com/repos/rapla/rapla", "Date": "2014-05-14T15:36:09Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.ovgu.featureide.ui.statistics.core.composite.lazyimplementations.StatisticsProgramSizeNew.countChildrenLOC(de.ovgu.featureide.core.fstmodel.preprocessor.FSTDirective)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((locOfDirectiveBody - childrenLOC) >= 0) locOfDirectiveBody -= childrenLOC;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/1971/buggy-version/plugins.de.ovgu.featureide.ui.src.de.ovgu.featureide.ui.statistics.core.composite.lazyimplementations.StatisticsProgramSizeNew.java", "BodyUseAPI": [], "Fixed commit": "ebdfa5b893d4d01545a6267aa487765f9f691018", "Url": "https://api.github.com/repos/FeatureIDE/FeatureIDE", "Date": "2016-10-07T12:41:56Z"},
{"Line": "=>340", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pocketLists.get(type).get(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (pocket == null) { com.zixiken.dimdoors.DimDoors.warn(com.zixiken.dimdoors.shared.PocketRegistry.class, \"pocket was null in isPlayerAllowedToBeHere!\"); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/486/buggy-version/src.main.java.com.zixiken.dimdoors.shared.PocketRegistry.java", "BodyUseAPI": [], "Fixed commit": "7eb2fca0e15cc6119a194e29383ba1e1f22ab461", "Url": "https://api.github.com/repos/Runemoro/DimDoors", "Date": "2017-12-06T05:53:10Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((file.getParentFile()) == null) { edu.pse.beast.toolbox.ErrorLogger.log(\"Can't find a parent to your file!\"); }else if (!(file.getParentFile().exists())) { file.getParentFile().mkdirs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/3043/buggy-version/beast.src.main.java.edu.pse.beast.propertychecker.CBMCProcessFactory.java", "BodyUseAPI": ["java.io.File.getParentFile()", "java.io.File.getParentFile()", "java.io.File.exists()", "java.io.File.mkdirs()"], "Fixed commit": "2a84320d9be49c8ccc3f93a52ad986d3756cab38", "Url": "https://api.github.com/repos/Skypr/BEAST", "Date": "2017-02-06T04:05:50Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["repositoryContainer.getCurationRepository().findOne(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (curation != null) { org.nmdp.hfcus.model.Cohort cohort = curation.getCohortData(); if (cohort != null) { responseEntity = org.springframework.http.ResponseEntity.ok(cohort.toSwaggerObject()); }else { responseEntity = new org.springframework.http.ResponseEntity(org.springframework.http.HttpStatus.NOT_FOUND); } }else { responseEntity = new org.springframework.http.ResponseEntity(org.springframework.http.HttpStatus.NOT_FOUND); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/1584/buggy-version/src.main.java.org.nmdp.hfcus.controller.HFCurationApiController.java", "BodyUseAPI": ["org.nmdp.hfcus.model.HFCuration.getCohortData()"], "Fixed commit": "e705a809a0c0d719101e96e979c68106e371bd22", "Url": "https://api.github.com/repos/sauter/service-haplotype-frequency-curation", "Date": "2017-11-13T12:55:17Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (app.Utils.isEmpty(strNum)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/5290/buggy-version/src.main.java.app.Utils.java", "BodyUseAPI": [], "Fixed commit": "f73bd783cc926a0d03c7fd3793c749fc02902276", "Url": "https://api.github.com/repos/maxtat3/fmps", "Date": "2017-05-11T13:04:34Z"},
{"Line": "=>467", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.rapidoid.buffer.MultiBuf.writePart(java.nio.ByteBuffer,int,int,int,byte[],java.nio.channels.WritableByteChannel,java.nio.ByteBuffer,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (wrote == 0) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/3255/buggy-version/rapidoid-buffer.src.main.java.org.rapidoid.buffer.MultiBuf.java", "BodyUseAPI": [], "Fixed commit": "b4a7ae0269c46f96dd7326392857367ce84de692", "Url": "https://api.github.com/repos/rapidoid/rapidoid", "Date": "2014-10-01T09:18:15Z"},
{"Line": "=>331", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mFragmentClickable)) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/4350/buggy-version/fragmentation.src.main.java.me.yokeyword.fragmentation.SupportActivity.java", "BodyUseAPI": [], "Fixed commit": "fd2a916738faa514c95a906f3b8f18d37f4063a1", "Url": "https://api.github.com/repos/YoKeyword/Fragmentation", "Date": "2016-12-19T03:03:32Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(corsa.getFermate().isEmpty())) { java.sql.Time lastTime = corsa.getFermataArrivo().getTime(); java.util.Calendar cal = new java.util.GregorianCalendar(); cal.setTimeInMillis(lastTime.getTime()); timeSpinner.setTime(cal.get(java.util.Calendar.HOUR_OF_DAY), cal.get(java.util.Calendar.MINUTE), 0); }else { timeSpinner.setSeconds(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/7493/buggy-version/ArabicaExpress.src.interfaccia.DialogAggiungiFermate.java", "BodyUseAPI": ["modelloTreni.Corsa.getFermataArrivo()", "corsa.getFermataArrivo().getTime()"], "Fixed commit": "9d1749d591946edd76d7490cdd61809d70b09a16", "Url": "https://api.github.com/repos/GiulioGx/ArabicaExpress", "Date": "2013-01-26T14:29:54Z"},
{"Line": "=>331", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (clearList) { results.clear(); adapterToNotify.notifyDataSetChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/6243/buggy-version/ShopWithFriends.app.src.main.java.com.theratio.utilities.Post.java", "BodyUseAPI": [], "Fixed commit": "e3772d4590bfafe0788e3e78a92b47ecdbc97e09", "Url": "https://api.github.com/repos/GodTamIt/shop_with_friends", "Date": "2015-03-10T12:46:49Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.asgj.android.appusage.Utility.UsageSharedPrefernceHelper.isNeedToServiceOnReboot(context)) { java.util.Calendar datePref = java.util.Calendar.getInstance(); datePref.setTimeInMillis(com.asgj.android.appusage.Utility.UsageSharedPrefernceHelper.getDateStoredInPref(context)); if ((com.asgj.android.appusage.Utility.Utils.compareDates(java.util.Calendar.getInstance(), datePref)) == 1) { com.asgj.android.appusage.Utility.UsageSharedPrefernceHelper.clearPreference(context); } android.content.Intent startServiceIntent = new android.content.Intent(); startServiceIntent.setClass(context, com.asgj.android.appusage.service.UsageTrackingService.class); startServiceIntent.setComponent(new android.content.ComponentName(context, com.asgj.android.appusage.service.UsageTrackingService.class)); startServiceIntent.putExtra(\"isStartingAfterReboot\", true); context.startService(startServiceIntent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/8846/buggy-version/src.com.asgj.android.appusage.receivers.DeviceRebootReceiver.java", "BodyUseAPI": ["com.asgj.android.appusage.Utility.UsageSharedPrefernceHelper.getDateStoredInPref(android.content.Context)", "android.content.Intent.setClass(android.content.Context,java.lang.Class)", "java.util.Calendar.setTimeInMillis(com.asgj.android.appusage.Utility.UsageSharedPrefernceHelper.getDateStoredInPref(context))", "android.content.Intent.setComponent(android.content.ComponentName)", "com.asgj.android.appusage.Utility.UsageSharedPrefernceHelper.clearPreference(android.content.Context)", "android.content.Context.startService(android.content.Intent)"], "Fixed commit": "a75e2470d668939112b06c37c796b0af9f1ed690", "Url": "https://api.github.com/repos/gaurav133/PhoneUse", "Date": "2015-07-02T16:06:28Z"},
{"Line": "=>721", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((user.getPassword()) == null) { user.setPassword(\"xxx\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/4824/buggy-version/DataCommons.src.main.java.au.edu.anu.datacommons.services.UserResource.java", "BodyUseAPI": ["au.edu.anu.datacommons.data.db.model.Users.setPassword(java.lang.String)"], "Fixed commit": "25c2ea5c7b173442ae8e8bce5bf0fd85f7251aa1", "Url": "https://api.github.com/repos/anu-doi/anudc", "Date": "2012-11-14T04:20:36Z"},
{"Line": "=>391", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.sensorberg.sdk.internal.FileHelper.getContentsOfFileOrNull(platform.getFile(com.sensorberg.sdk.SensorbergService.SERVICE_CONFIGURATION))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((diskConf.resolverConfiguration.getResolverLayoutURL()) != null) { com.sensorberg.sdk.internal.URLFactory.setLayoutURL(diskConf.resolverConfiguration.getResolverLayoutURL().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/6395/buggy-version/android-sdk.src.main.java.com.sensorberg.sdk.SensorbergService.java", "BodyUseAPI": ["diskConf.resolverConfiguration.getResolverLayoutURL()", "com.sensorberg.sdk.internal.URLFactory.setLayoutURL(diskConf.resolverConfiguration.getResolverLayoutURL().toString())", "diskConf.resolverConfiguration.getResolverLayoutURL().toString()"], "Fixed commit": "12d5470718d25472d717bd23eb725beea9564174", "Url": "https://api.github.com/repos/sensorberg-dev/android-sdk", "Date": "2015-04-22T11:40:47Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (intent.hasExtra(com.sensorberg.sdk.SensorbergService.EXTRA_MESSENGER)) { android.os.Messenger messenger = intent.getParcelableExtra(com.sensorberg.sdk.SensorbergService.EXTRA_MESSENGER); presentationDelegates.add(messenger); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/6395/buggy-version/android-sdk.src.main.java.com.sensorberg.sdk.SensorbergService.java", "BodyUseAPI": ["android.content.Intent.getParcelableExtra(java.lang.String)"], "Fixed commit": "12d5470718d25472d717bd23eb725beea9564174", "Url": "https://api.github.com/repos/sensorberg-dev/android-sdk", "Date": "2015-04-22T11:40:47Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == val) return andIsNull(name);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/4230/buggy-version/src.org.nutz.dao.util.cri.SqlExpressionGroup.java", "BodyUseAPI": [], "Fixed commit": "6a22a6188db7ddadaaed34c4123907190464f21c", "Url": "https://api.github.com/repos/nutzam/nutz", "Date": "2011-11-04T11:14:10Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == val) return andNotIsNull(name);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/4230/buggy-version/src.org.nutz.dao.util.cri.SqlExpressionGroup.java", "BodyUseAPI": [], "Fixed commit": "6a22a6188db7ddadaaed34c4123907190464f21c", "Url": "https://api.github.com/repos/nutzam/nutz", "Date": "2011-11-04T11:14:10Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((header) != null) && ((this.getLength()) > 0)) { java.lang.String[] contents = this.toString().split(\"\\\\t\"); for (int i = 0; i < (this.header.length); i++) { instance.put(header[i], contents[i]); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/8879/buggy-version/src.main.java.org.apache.hadoop.io.FieldWritable.java", "BodyUseAPI": [], "Fixed commit": "1dbf200e721c6711cd4ababf1729d2662844e8b5", "Url": "https://api.github.com/repos/dryman/hadoop-fieldformat", "Date": "2014-02-05T17:57:23Z"},
{"Line": "=>402", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(org.orcid.pojo.ajaxForm.PojoUtil.areAllEmtpy(contributor.getContributorRole(), contributor.getContributorSequence()))) { if (!(org.orcid.pojo.ajaxForm.PojoUtil.isEmpty(creditName))) contributor.setCreditName(org.orcid.pojo.ajaxForm.Text.valueOf(creditName)); if (creditNameVisibility != null) { contributor.setCreditNameVisibility(creditNameVisibility); }else { contributor.setCreditNameVisibility(org.orcid.pojo.ajaxForm.Visibility.valueOf(OrcidVisibilityDefaults.CREDIT_NAME_DEFAULT.getVisibility())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/2801/buggy-version/orcid-web.src.main.java.org.orcid.frontend.web.controllers.FundingsController.java", "BodyUseAPI": ["org.orcid.pojo.ajaxForm.Contributor.setCreditName(org.orcid.pojo.ajaxForm.Text.valueOf(creditName))", "org.orcid.pojo.ajaxForm.Contributor.setCreditNameVisibility(org.orcid.pojo.ajaxForm.Visibility)", "org.orcid.pojo.ajaxForm.Contributor.setCreditNameVisibility(org.orcid.pojo.ajaxForm.Visibility.valueOf(OrcidVisibilityDefaults.CREDIT_NAME_DEFAULT.getVisibility()))"], "Fixed commit": "5bce27e582fba9eb9bb76c7f5ec45419d63b2720", "Url": "https://api.github.com/repos/ORCID/ORCID-Source", "Date": "2014-01-07T23:11:49Z"},
{"Line": "=>695", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((lNode.getNextZNode()) != null) { lNode.getNextZNode().setPreviousZNode(lNode.getPreviousZNode()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/3077/buggy-version/src.com.earcutj.Earcut.java", "BodyUseAPI": ["com.earcutj.Node.getPreviousZNode()", "com.earcutj.Node.getNextZNode()", "lNode.getNextZNode().setPreviousZNode(lNode.getPreviousZNode())"], "Fixed commit": "ceeb08ed1876dd58bbb8ccc3931a22190dc27105", "Url": "https://api.github.com/repos/Cawfree/earcut-j", "Date": "2015-02-08T13:35:56Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["spoon.support.visitor.MethodTypingContext.getIndexOfTypeParam(scopeParam.getTypeParameterDeclarer(),spoon.reflect.reference.CtTypeReference<?>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (idxOfScopeBoundTypeParam >= 0) { int idxOfSuperBoundTypeParam = getIndexOfTypeParam(superParam.getTypeParameterDeclarer(), superBound); if (idxOfScopeBoundTypeParam >= 0) { return idxOfScopeBoundTypeParam == idxOfSuperBoundTypeParam; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/7001/buggy-version/src.main.java.spoon.support.visitor.MethodTypingContext.java", "BodyUseAPI": [], "Fixed commit": "87ef448e277ca081190c3a470bd82d0a742a56bd", "Url": "https://api.github.com/repos/pvojtechovsky/spoon", "Date": "2017-10-22T18:02:43Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (offset != 1) offset = (offset + pageOfAnimation) / (mFractionAdjustment);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/6/buggy-version/sparklemotion.src.main.java.com.ifttt.sparklemotion.Animation.java", "BodyUseAPI": [], "Fixed commit": "df46a005e60cd4ed4c986d7f65b768b5f6834049", "Url": "https://api.github.com/repos/k-misztal/SparkleMotion", "Date": "2016-08-08T08:02:54Z"},
{"Line": "=>362", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.ianhook.android.ocrmanga.ImagePagerActivity.ocr) != null) { com.googlecode.eyesfree.ocr.client.Ocr.CompletionCallback displayText = new com.ianhook.android.ocrmanga.ImagePagerActivity.ImageFragment.DisplayText(); com.ianhook.android.ocrmanga.ImagePagerActivity.ocr.setCompletionCallback(displayText); com.ianhook.android.ocrmanga.ImagePagerActivity.ocr.enqueue(mResizedBitmap); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/227/buggy-version/src.com.ianhook.android.ocrmanga.ImagePagerActivity.java", "BodyUseAPI": [], "Fixed commit": "72679e556f418b64260cf5e0ba03ff3dd7f903c5", "Url": "https://api.github.com/repos/ianhook/OCRManga", "Date": "2014-12-05T20:41:41Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mVariants) == variants) { com.mixpanel.android.mpmetrics.DecideMessages.mLoadedVariants.clear(); for (int i = 0; i < newVariantsLength; i++) { try { org.json.JSONObject variant = mVariants.getJSONObject(i); com.mixpanel.android.mpmetrics.DecideMessages.mLoadedVariants.add(variant.getInt(\"id\")); } catch (org.json.JSONException e) { android.util.Log.e(com.mixpanel.android.mpmetrics.DecideMessages.LOGTAG, ((\"Could not convert variants[\" + i) + \"] into a JSONObject while updating the map\"), e); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/5869/buggy-version/src.main.java.com.mixpanel.android.mpmetrics.DecideMessages.java", "BodyUseAPI": [], "Fixed commit": "b979c98d61b0bc42f9b3425f779ecedcf16d19b1", "Url": "https://api.github.com/repos/mixpanel/mixpanel-android", "Date": "2015-08-04T21:34:07Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(seedu.address.model.task.Priority.isValidPriority(trimmedPriority))) { throw new seedu.address.commons.exceptions.IllegalValueException((((seedu.address.model.task.Priority.MESSAGE_PRIORITY_CONSTRAINTS) + \" \") + trimmedPriority)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/199/buggy-version/src.main.java.seedu.address.model.task.Priority.java", "BodyUseAPI": [], "Fixed commit": "fb3a46865583c2cca546be5f800a3348a5b910eb", "Url": "https://api.github.com/repos/CS2103JAN2017-W10-B1/main", "Date": "2017-03-15T01:28:21Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.psi.PsiFile.findElementAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (element == null) { element = file.findElementAt((offset - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/325/buggy-version/idea.src.org.jetbrains.kotlin.idea.liveTemplates.JetTemplateContextType.java", "BodyUseAPI": [], "Fixed commit": "db539ee0091d8644eb130f0a94431b9c212de3bc", "Url": "https://api.github.com/repos/alexey-tsvetkov/kotlin", "Date": "2015-02-04T18:57:11Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (false) { addMouseWheelListener(new java.awt.event.MouseWheelListener() { public void mouseWheelMoved(java.awt.event.MouseWheelEvent e) { int steps = e.getWheelRotation(); mouseZoom((-steps)); } }); }else { addMouseWheelListener(new java.awt.event.MouseWheelListener() { public void mouseWheelMoved(java.awt.event.MouseWheelEvent e) { mouseZoom(0); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/5657/buggy-version/client.globe.Globe.java", "BodyUseAPI": [], "Fixed commit": "3c77fa10ac6534e2ce18e6c83cf3c628d9467195", "Url": "https://api.github.com/repos/lisa-lab/pings", "Date": "2013-03-20T15:42:34Z"},
{"Line": "=>405", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((it.polito.mad.insane.lab2.EditProfile.tempCoverPhoto) != null) saveImageOnStorage();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/397/buggy-version/app.src.main.java.it.polito.mad.insane.lab2.EditProfile.java", "BodyUseAPI": [], "Fixed commit": "036e157696fa58b1b90b261dc55eb59de3933ed4", "Url": "https://api.github.com/repos/Ricoblack/Lab2", "Date": "2016-04-15T10:08:13Z"},
{"Line": "=>323", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (index != (-1)) { updateCurrentResource(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/4780/buggy-version/iTopologyManager.topologyViewer.src.main.java.net.itransformers.topologyviewer.dialogs.discovery.DiscoveryResourcePanel.java", "BodyUseAPI": [], "Fixed commit": "7996fc56f9da70b1c44e52db8677ec3c194951b3", "Url": "https://api.github.com/repos/iTransformers/netTransformer", "Date": "2015-09-14T03:07:58Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jcabi.http.Request.fetch()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((response.status()) != 200) { throw new java.io.IOException(response.reason()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/2586/buggy-version/src.main.java.com.jcabi.w3c.DefaultHtmlValidator.java", "BodyUseAPI": ["com.jcabi.http.Response.reason()"], "Fixed commit": "9e611a17aa8bb6554cd17309c97686153197260c", "Url": "https://api.github.com/repos/simonjenga/jcabi-w3c", "Date": "2015-12-17T15:38:44Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((selectedTextField) != (-1)) { if (key == 200) { guiTextFields[selectedTextField].setFocused(false); selectedTextField = (((selectedTextField) - 1) < 0) ? 3 : (selectedTextField) - 1; guiTextFields[selectedTextField].setFocused(true); } if (((key == 208) || (key == 28)) || (key == 156)) { guiTextFields[selectedTextField].setFocused(false); selectedTextField = (((selectedTextField) + 1) > 3) ? 0 : (selectedTextField) + 1; guiTextFields[selectedTextField].setFocused(true); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/1439/buggy-version/src.main.java.gory_moon.moarsigns.client.interfaces.sign.GuiMoarSign.java", "BodyUseAPI": [], "Fixed commit": "00209c42e0febd1bf8f9458f54bcbb8b61824b47", "Url": "https://api.github.com/repos/GoryMoon/MoarSigns", "Date": "2016-09-25T19:18:06Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["it.peek().id()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.google.common.base.Strings.isNullOrEmpty(extId)) { it.next(); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/1065/buggy-version/src.main.java.org.gbif.dwc.text.Archive.java", "BodyUseAPI": [], "Fixed commit": "f76d98b5ffda2aac4f3e6e6bce3cc24e20eada5a", "Url": "https://api.github.com/repos/gbif/dwca-reader", "Date": "2014-09-24T15:58:34Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rightViewWidth) == 0) { rightView.measure(LayoutParams.WRAP_CONTENT, rightView.getMeasuredHeight()); rightViewWidth = rightView.getMeasuredWidth(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/7689/buggy-version/recycler-plugin.src.main.java.com.fancy.recycler_plugin.swipe.SwipeLayout.java", "BodyUseAPI": [], "Fixed commit": "aac57a0dd49fc7884c4e6e904e8f9c24058bdc99", "Url": "https://api.github.com/repos/sunflowerseat/ListRecyclerPlugin", "Date": "2016-09-18T03:18:14Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rightViewWidth) == 0) { rightView.measure(LayoutParams.WRAP_CONTENT, rightView.getMeasuredHeight()); rightViewWidth = rightView.getMeasuredWidth(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/7689/buggy-version/list-plugin.src.main.java.com.fancy.plugin_lib.swipe.SwipeLayout.java", "BodyUseAPI": [], "Fixed commit": "aac57a0dd49fc7884c4e6e904e8f9c24058bdc99", "Url": "https://api.github.com/repos/sunflowerseat/ListRecyclerPlugin", "Date": "2016-09-18T03:18:14Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (flag.equals(\"-n\")) { for (int ii = 0; ii < (db.DatabaseCommands.ids.length); ii++) { db.DatabaseCommands.s.execute(((((((((\"insert into USERS (AgentID, Name, Address, PhoneNo) values (\" + (db.DatabaseCommands.ids[ii])) + \", '\") + (db.DatabaseCommands.names[ii])) + \"', '\") + (db.DatabaseCommands.addresses[ii])) + \"', '\") + (db.DatabaseCommands.phoneNumbers[ii])) + \"')\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/4318/buggy-version/Code.src.db.DatabaseCommands.java", "BodyUseAPI": [], "Fixed commit": "d9e86e911946f9bbe90855c855bd2315a553baee", "Url": "https://api.github.com/repos/tim57282/CITS4401-Project", "Date": "2014-04-20T07:20:48Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (fileArray == null) return list;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/2510/buggy-version/app.src.main.java.com.howell.activity.fragment.MediaFragment.java", "BodyUseAPI": [], "Fixed commit": "f4e532556d91a321e10ba3d5d7d2b3baa22ec890", "Url": "https://api.github.com/repos/Bjelijah/EcamAS", "Date": "2017-01-26T11:14:17Z"},
{"Line": "=>421", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jp.primecloud.auto.service.dto.LoadBalancerPlatformDto.getPlatformAws()", "loadBalancerDto.getLoadBalancer().getType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((PCCConstant.LOAD_BALANCER_ELB.equals(type)) && (platformAws.getVpc())) { internalSelect.setContainerDataSource(getEnabledList()); internalSelect.select(\"\u7121\u52b9\"); if (loadBalancerDto.getAwsLoadBalancer().getInternal()) { internalSelect.select(\"\u6709\u52b9\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/2995/buggy-version/auto-project.auto-ui.src.main.java.jp.primecloud.auto.ui.WinLoadBalancerEdit.java", "BodyUseAPI": [], "Fixed commit": "482df9ffff9548f4dcaf2c0d63e7b4d57e02ba9f", "Url": "https://api.github.com/repos/y-asano/primecloud-controller", "Date": "2015-03-26T05:13:52Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.parabot.environment.api.utils.WebUtil.getConnection(java.net.URL)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((connection.getResponseCode()) == 200) { return org.parabot.environment.api.utils.WebUtil.getJsonParser().parse(org.parabot.environment.api.utils.WebUtil.getReader(connection)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/5403/buggy-version/src.main.java.org.parabot.core.bdn.api.APICaller.java", "BodyUseAPI": ["org.parabot.environment.api.utils.WebUtil.getJsonParser().parse(org.parabot.environment.api.utils.WebUtil.getReader(connection))", "org.parabot.environment.api.utils.WebUtil.getReader(java.net.HttpURLConnection)"], "Fixed commit": "97fd8fcfbee56de8a32d12931196e7624c998d33", "Url": "https://api.github.com/repos/Parabot/Parabot", "Date": "2017-02-21T10:14:59Z"},
{"Line": "=>375", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (index <= ((model.getObservableResultsList().size()) - 1)) { ch.hilbri.assist.datamodel.result.mapping.Result r = model.getObservableResultsList().get(index); java.text.DecimalFormat f = new java.text.DecimalFormat(\"#0.00\"); lblScore.setText(f.format(r.getEvaluation().getTotalScaledScore())); lblSolution.setText((((index + 1) + \" of \") + (model.getObservableResultsList().size()))); }else { setDeploymentNumberAndScore((-1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/6025/buggy-version/ch.hilbri.assist.mapping.src.ch.hilbri.assist.mapping.ui.infosheet.InfoSheetView.java", "BodyUseAPI": ["ch.hilbri.assist.mapping.ui.multipageeditor.resultsview.model.DetailedResultsViewUiModel.getObservableResultsList()", "ch.hilbri.assist.mapping.ui.multipageeditor.resultsview.model.DetailedResultsViewUiModel.getObservableResultsList()", "org.eclipse.swt.widgets.Label.setText((((index + 1) + \" of \") + (model.getObservableResultsList().size())))", "model.getObservableResultsList().get(int)", "model.getObservableResultsList().size()"], "Fixed commit": "aaa9396d7a841f9c87f4b880d61189c723278a57", "Url": "https://api.github.com/repos/RobertHilbrich/assist-public", "Date": "2015-03-05T16:07:50Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cmd.hasOption(\"k\")) { union = new com.yahoo.sketches.frequencies.ItemsSketch(java.lang.Integer.parseInt(cmd.getOptionValue(\"k\"))); }else { union = new com.yahoo.sketches.frequencies.ItemsSketch(com.yahoo.sketches.misc.cmd.FrequenciesCL.DEFAULT_SIZE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/2291/buggy-version/src.main.java.com.yahoo.sketches.misc.cmd.FrequenciesCL.java", "BodyUseAPI": ["java.lang.Integer.parseInt(cmd.getOptionValue(\"k\"))", "com.yahoo.sketches.misc.cmd.FrequenciesCL.getOptionValue(java.lang.String)"], "Fixed commit": "4f6baf6090cd0d96910514a3947ac2838b1acc7e", "Url": "https://api.github.com/repos/DataSketches/sketches-misc", "Date": "2017-11-18T02:51:20Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (partitionFiles != null) { if ((partitionFiles.length) == 0) { fs.delete(partitionPath); }else { throw new java.io.IOException((\"Temporary partition directory was not empty after moving its contents: \" + partitionPath)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/14/buggy-version/src.java.com.rapleaf.hank.hadoop.DomainBuilderDefaultOutputFormat.java", "BodyUseAPI": [], "Fixed commit": "058467c7f1e557052d244c1425baa253095f7ab9", "Url": "https://api.github.com/repos/bryanduxbury/hank", "Date": "2011-05-18T23:37:33Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cdata) != null) { if (offset > (cdata.length())) { throw new org.w3c.dom.DOMException(org.w3c.dom.DOMException.INDEX_SIZE_ERR, \"offset is out of bounds\"); } if ((offset + count) > (cdata.length())) { cdata.delete(offset, ((cdata.length()) - offset)); }else { cdata.delete(offset, count); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/2674/buggy-version/src.org.exist.dom.persistent.AbstractCharacterData.java", "BodyUseAPI": [], "Fixed commit": "e4abe04429e6e1f414d12699d0ef0c9ba8c08ebc", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2017-08-02T21:12:34Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (offset > length) { throw new org.w3c.dom.DOMException(org.w3c.dom.DOMException.INDEX_SIZE_ERR, \"offset is out of bounds\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/2674/buggy-version/src.org.exist.dom.memtree.AbstractCharacterData.java", "BodyUseAPI": [], "Fixed commit": "e4abe04429e6e1f414d12699d0ef0c9ba8c08ebc", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2017-08-02T21:12:34Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (offset > length) { throw new org.w3c.dom.DOMException(org.w3c.dom.DOMException.INDEX_SIZE_ERR, \"offset is out of bounds\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/2674/buggy-version/src.org.exist.dom.memtree.AbstractCharacterData.java", "BodyUseAPI": [], "Fixed commit": "e4abe04429e6e1f414d12699d0ef0c9ba8c08ebc", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2017-08-02T21:12:34Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((offset + count) > length) { document.alpha[nodeNumber] = inDocOffset + offset; document.alphaLen[nodeNumber] = length - offset; }else { document.alpha[nodeNumber] = inDocOffset + offset; document.alphaLen[nodeNumber] = count; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/2674/buggy-version/src.org.exist.dom.memtree.AbstractCharacterData.java", "BodyUseAPI": [], "Fixed commit": "e4abe04429e6e1f414d12699d0ef0c9ba8c08ebc", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2017-08-02T21:12:34Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (offset < 0) { throw new org.w3c.dom.DOMException(org.w3c.dom.DOMException.INDEX_SIZE_ERR, \"offset is out of bounds\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/2674/buggy-version/src.org.exist.dom.memtree.AbstractCharacterData.java", "BodyUseAPI": [], "Fixed commit": "e4abe04429e6e1f414d12699d0ef0c9ba8c08ebc", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2017-08-02T21:12:34Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.configuration.file.YamlConfiguration.getConfigurationSection(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (sec == null) return effects;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/1468/buggy-version/src.org.caliog.myRPG.Items.CustomItemInstance.java", "BodyUseAPI": [], "Fixed commit": "5613f53b6c20083c6aa3185370552c5a1819a15c", "Url": "https://api.github.com/repos/caliog/myRPG", "Date": "2016-03-20T22:39:04Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (inscrito) { java.lang.System.out.println(\"inscrito\"); }else { java.lang.System.out.println(\"n\u00e3o inscrito\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/1980/buggy-version/ProjetoEstagioJSF.src.main.java.br.edu.ifpb.sistemaestagio.bean.AlunoBean.java", "BodyUseAPI": [], "Fixed commit": "d779d8ed498d7a3d64dbd8ccf3b97865d425df0e", "Url": "https://api.github.com/repos/rafaelcruzpb/ProjetoEstagio", "Date": "2017-04-05T02:39:08Z"},
{"Line": "=>457", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (parentFile == null) { parentFile = new java.io.File(\".\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/1292/buggy-version/src.sagex.phoenix.standalone.PhoenixRenamer.java", "BodyUseAPI": [], "Fixed commit": "8fceabac6f06f1c6cd60dc393bb11c45b1e9ff10", "Url": "https://api.github.com/repos/stuckless/phoenix-renamer", "Date": "2015-10-03T20:38:47Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONArray.getJSONObject(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (board.getJSONObject(\"prefs\").getString(\"backgroundImage\").equals(\"null\")) { result.add(new ch.gianulli.trelloapi.Board(board.getString(\"id\"), board.getString(\"name\"), board.getJSONObject(\"prefs\").getString(\"backgroundColor\"))); }else { result.add(new ch.gianulli.trelloapi.Board(board.getString(\"id\"), board.getString(\"name\"), ch.gianulli.trelloapi.Board.STANDARD_COLOR)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/5753/buggy-version/trelloapi.src.main.java.ch.gianulli.trelloapi.Board.java", "BodyUseAPI": ["java.util.ArrayList<ch.gianulli.trelloapi.Board>.add(ch.gianulli.trelloapi.Board)", "org.json.JSONObject.getString(java.lang.String)", "org.json.JSONObject.getString(java.lang.String)", "org.json.JSONObject.getString(java.lang.String)", "org.json.JSONObject.getJSONObject(java.lang.String)", "org.json.JSONObject.getString(java.lang.String)", "board.getJSONObject(\"prefs\").getString(java.lang.String)", "java.util.ArrayList<ch.gianulli.trelloapi.Board>.add(ch.gianulli.trelloapi.Board)"], "Fixed commit": "71122eea43e0c208ea6c466238925ab371d423c1", "Url": "https://api.github.com/repos/GianUlli/Flashcards-for-Trello", "Date": "2016-02-13T11:29:25Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.onTransitionEndTimer) != null) { this.onTransitionEndTimer.cancel(); this.onTransitionEndTimer = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/5810/buggy-version/src.main.java.com.googlecode.mgwt.mvp.client.display.AnimatableDisplayTransistionImpl.java", "BodyUseAPI": [], "Fixed commit": "cfceec588c9af56d9b5abd68c22207c051732e27", "Url": "https://api.github.com/repos/Brainfuse/mgwt", "Date": "2017-09-05T23:59:52Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(bibleAndVerse.contains(\"#\"))) { return \"Symbol # between Bible and Verse is missing\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/3052/buggy-version/xwiki-rendering-macro-bible.src.main.java.org.xwiki.rendering.bible.BibleLibrary.java", "BodyUseAPI": [], "Fixed commit": "12291ea0c8e5fb951f0ab41412e319fb9d1008ee", "Url": "https://api.github.com/repos/matthiaw/xwiki-rendering-macro-bible", "Date": "2013-12-07T21:28:50Z"},
{"Line": "=>363", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.isReset) { return find(input); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/5227/buggy-version/src.main.java.com.bergerkiller.mountiplex.conversion.Conversion.java", "BodyUseAPI": [], "Fixed commit": "1c949a66ac5796f341e05bde465ec894918b01dc", "Url": "https://api.github.com/repos/bergerhealer/Mountiplex", "Date": "2017-05-27T21:51:56Z"},
{"Line": "=>250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((isCSList) && ((this.multiAssignVars.size()) == 0)) { this.multiAssignVars.add(((io.lambdacloud.node.VariableNode) (left))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/3483/buggy-version/src.io.lambdacloud.node.AssignNode.java", "BodyUseAPI": ["java.util.ArrayList<io.lambdacloud.node.VariableNode>.add(io.lambdacloud.node.AssignNode)"], "Fixed commit": "7ee86aabada70abb49d3b539c8fd02af7e37d952", "Url": "https://api.github.com/repos/yuemingl/ExprEngine", "Date": "2016-11-28T05:25:10Z"},
{"Line": "=>326", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (input.equals(\"main menu\")) { return; }else if ((input.startsWith(\"mod \")) && (client.CreatorClientImpl.isInteger(input.split(\" \")[1], 10))) { modifyAnswer(question.getAnswerFromList(java.lang.Integer.parseInt(input.split(\" \")[1])), question); }else if ((input.startsWith(\"del \")) && (client.CreatorClientImpl.isInteger(input.split(\" \")[1], 10))) { question.delAnswer(java.lang.Integer.parseInt(input.split(\" \")[1])); }else { java.lang.System.out.println(\"Please read the guidelines carefully, and try again!\"); modifyQuestion(question, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/3974/buggy-version/client.CreatorClientImpl.java", "BodyUseAPI": ["client.CreatorClientImpl.modifyAnswer(question.getAnswerFromList(java.lang.Integer.parseInt(input.split(\" \")[1])),interfaces.Question)", "interfaces.Question.delAnswer(int)", "java.lang.String.startsWith(java.lang.String)", "interfaces.Question.getAnswerFromList(int)", "java.lang.String.split(java.lang.String)", "java.lang.String.split(java.lang.String)", "java.lang.String.split(java.lang.String)", "client.CreatorClientImpl.isInteger(java.lang.String,int)", "java.lang.String.split(java.lang.String)", "java.lang.String.startsWith(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)", "client.CreatorClientImpl.isInteger(java.lang.String,int)", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "03afba18afdf6d5269eae32ea758ee466d4f948c", "Url": "https://api.github.com/repos/BBK-PiJ-2014-04/Quiz", "Date": "2015-05-04T12:19:54Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (t instanceof de.upb.lina.cfg.controlflow.GuardedTransition) { de.upb.lina.cfg.controlflow.GuardedTransition gt = ((de.upb.lina.cfg.controlflow.GuardedTransition) (t)); if (gt.getCondition().startsWith(\"[not\")) { java.lang.String dest = branch.getElseDestination().replace(\"%\", \"\"); java.util.ArrayList<de.upb.llvm_parser.llvm.Phi> list = blockLabelToPhiInstructions.get(dest); if (!(list.isEmpty())) { createPhiMapping(t, list, ((de.upb.llvm_parser.llvm.BasicBlock) (branch.eContainer())).getLabel()); } }else { java.lang.String dest = branch.getDestination().replace(\"%\", \"\"); java.util.ArrayList<de.upb.llvm_parser.llvm.Phi> list = blockLabelToPhiInstructions.get(dest); if (!(list.isEmpty())) { createPhiMapping(t, list, ((de.upb.llvm_parser.llvm.BasicBlock) (branch.eContainer())).getLabel()); } } }else { java.lang.String dest = branch.getDestination().replace(\"%\", \"\"); java.util.ArrayList<de.upb.llvm_parser.llvm.Phi> list = blockLabelToPhiInstructions.get(dest); if (!(list.isEmpty())) { createPhiMapping(t, list, ((de.upb.llvm_parser.llvm.BasicBlock) (branch.eContainer())).getLabel()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/9277/buggy-version/de.upb.lina.transformations.src.de.upb.lina.transformations.plugin.GendataPrecomputer.java", "BodyUseAPI": ["de.upb.lina.transformations.plugin.GendataPrecomputer.createPhiMapping(de.upb.lina.cfg.controlflow.Transition,java.util.ArrayList<de.upb.llvm_parser.llvm.Phi>,((de.upb.llvm_parser.llvm.BasicBlock) (branch.eContainer())).getLabel())", "de.upb.lina.transformations.plugin.GendataPrecomputer.createPhiMapping(de.upb.lina.cfg.controlflow.Transition,java.util.ArrayList<de.upb.llvm_parser.llvm.Phi>,((de.upb.llvm_parser.llvm.BasicBlock) (branch.eContainer())).getLabel())", "de.upb.lina.transformations.plugin.GendataPrecomputer.createPhiMapping(de.upb.lina.cfg.controlflow.Transition,java.util.ArrayList<de.upb.llvm_parser.llvm.Phi>,((de.upb.llvm_parser.llvm.BasicBlock) (branch.eContainer())).getLabel())"], "Fixed commit": "31002190d1f4559e95c79acaa593990cf20fbbb1", "Url": "https://api.github.com/repos/oleg82upb/lina4wm-tools", "Date": "2015-10-14T08:59:00Z"},
{"Line": "=>433", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((player.posY) >= 100) world.playSound(player, player.getPosition(), SoundHandler.glassworksOpening, SoundCategory.AMBIENT, 1.0F, 1.0F);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/2859/buggy-version/1.12.src.main.java.com.wynprice.Sound.SoundEventPlay.java", "BodyUseAPI": ["net.minecraft.world.World.playSound(net.minecraft.entity.player.EntityPlayer,player.getPosition(),SoundHandler.glassworksOpening,SoundCategory.AMBIENT,float,float)", "net.minecraft.entity.player.EntityPlayer.getPosition()"], "Fixed commit": "77f4bf890116350fb285aa23b9d834abf5d4340c", "Url": "https://api.github.com/repos/Wyn-Price/Sounds-Extended", "Date": "2017-06-19T17:38:25Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["freedays.controller.TimesheetUser.findTimesheetUserByUsername(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (user == null) { return \"timesheet/notimesheetuser\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/630/buggy-version/Sts.freeday.src.main.java.freedays.controller.TimesheetController.java", "BodyUseAPI": [], "Fixed commit": "49feb3326353f88f9b8f54616cf30dc9cdb67619", "Url": "https://api.github.com/repos/fmacicasan/FreeDaysIntern", "Date": "2012-09-13T11:36:13Z"},
{"Line": "=>323", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openrdf.repository.RepositoryConnection.getNamespace(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (defaultNSName == null) { return new org.openrdf.model.impl.NamespaceImpl(\"\", \"urn:sprind-data-semantic:\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/5836/buggy-version/src.main.java.org.springframework.data.semantic.core.PooledSemanticDatabase.java", "BodyUseAPI": [], "Fixed commit": "76fe9db2ed7ef489cdc92eea965a9b0acbe3e351", "Url": "https://api.github.com/repos/kpentchev/spring-data-semantic", "Date": "2014-06-27T11:03:01Z"},
{"Line": "=>1360", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mActionType) == (com.framgia.wsm.utils.ActionType.ACTION_CONFIRM_EDIT)) { mRequest.getCompensation().setToTime(compensationToTime); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/1144/buggy-version/app.src.main.java.com.framgia.wsm.screen.requestleave.RequestLeaveViewModel.java", "BodyUseAPI": [], "Fixed commit": "93e288efdcd880f9753d23e85574bbae6187acf0", "Url": "https://api.github.com/repos/ThuanPx/wsm_android", "Date": "2017-08-10T09:23:32Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mobaPayload instanceof org.mobadsl.semantic.model.moba.MobaMultiplicityAble) { _format(((org.mobadsl.semantic.model.moba.MobaMultiplicityAble) (mobaPayload)), document); return; }else if (mobaPayload instanceof org.mobadsl.semantic.model.moba.MobaPropertiesAble) { _format(((org.mobadsl.semantic.model.moba.MobaPropertiesAble) (mobaPayload)), document); return; }else if (mobaPayload instanceof org.eclipse.emf.ecore.EObject) { _format(((org.eclipse.emf.ecore.EObject) (mobaPayload)), document); return; }else if (mobaPayload == null) { _format(((java.lang.Void) (null)), document); return; }else if (mobaPayload != null) { _format(mobaPayload, document); return; }else { throw new java.lang.IllegalArgumentException((\"Unhandled parameter types: \" + (java.util.Arrays.<java.lang.Object>asList(mobaPayload, document).toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/2201/buggy-version/org.mobadsl.grammar.xtend-gen.org.mobadsl.grammar.formatting2.MobaFormatter.java", "BodyUseAPI": ["java.util.List<java.lang.Object>.toString()", "java.util.Arrays.asList(java.lang.Object,org.eclipse.xtext.formatting2.IFormattableDocument)", "org.mobadsl.grammar.formatting2.MobaFormatter._format(java.lang.Object,org.eclipse.xtext.formatting2.IFormattableDocument)"], "Fixed commit": "8d437f5552d74c441a035a664acb0ee8d020c01b", "Url": "https://api.github.com/repos/florianpirchner/mobadsl", "Date": "2015-12-28T13:13:40Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (offset > existingDataLen) { throw new org.w3c.dom.DOMException(org.w3c.dom.DOMException.INDEX_SIZE_ERR, \"offset is out of bounds\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/6667/buggy-version/src.org.exist.dom.memtree.AbstractCharacterData.java", "BodyUseAPI": [], "Fixed commit": "f51cdefa4ccd342f4d6b488a16911288c0e42276", "Url": "https://api.github.com/repos/eXist-db/exist", "Date": "2017-08-07T15:16:37Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (outFile.exists()) { if (!(outFile.delete())) { return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/2690/buggy-version/proj.src.main.java.com.example.globalInfoPacket.java", "BodyUseAPI": ["java.io.File.delete()"], "Fixed commit": "9141001dce22f9df35c5d2df5efab25b94a4fdeb", "Url": "https://api.github.com/repos/NoahRoseLedesma/DeadReckoning", "Date": "2015-11-14T19:57:50Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.MenuItem.getItemId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (id == (android.R.id.home)) { onBackPressed(); }else if (id == (R.id.action_test1)) { App.database.test(); }else if (id == (R.id.action_test2)) { App.car = App.database.getCars(App.driver).get(0); android.content.Intent i = new android.content.Intent(this, at.fhooe.mc.fahrtenbuch.TripsOverviewActivity.class); startActivity(i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/3568/buggy-version/app.src.main.java.at.fhooe.mc.fahrtenbuch.CarActivity.java", "BodyUseAPI": [], "Fixed commit": "48a662021defc099f913447ba6eba85b5186012e", "Url": "https://api.github.com/repos/Platti/Fahrtenbuch", "Date": "2016-01-27T18:31:51Z"},
{"Line": "=>481", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fieldName != null) { errorMessage += \", fieldName : \" + fieldName; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/8863/buggy-version/src.main.java.com.alibaba.fastjson.serializer.JavaBeanSerializer.java", "BodyUseAPI": [], "Fixed commit": "6336a62bf834eb6c88e0072e85ab82a31d10058d", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2016-04-16T06:12:32Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Pattern.matcher(org.apache.commons.lang.exception.ExceptionUtils.getStackTrace(synEx))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (wstxExMatcher.find()) { consumeInputOnOmException(synCtx); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/7982/buggy-version/modules.core.src.main.java.org.apache.synapse.mediators.AbstractListMediator.java", "BodyUseAPI": [], "Fixed commit": "12b7eb8a235746fa2794435ea95a02e051dc0f15", "Url": "https://api.github.com/repos/bsenduran/wso2-synapse", "Date": "2016-07-13T10:00:29Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Pattern.matcher(org.apache.commons.lang.exception.ExceptionUtils.getStackTrace(ex))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (wstxExMatcher.find()) { consumeInputOnOmException(synCtx); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/7982/buggy-version/modules.core.src.main.java.org.apache.synapse.mediators.AbstractListMediator.java", "BodyUseAPI": [], "Fixed commit": "12b7eb8a235746fa2794435ea95a02e051dc0f15", "Url": "https://api.github.com/repos/bsenduran/wso2-synapse", "Date": "2016-07-13T10:00:29Z"},
{"Line": "=>334", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (doc.containsKey(\"mi_allele_type\")) { miceStatus += parseAlleleType(doc, \"done\", \"A\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/5508/buggy-version/src.main.java.uk.ac.ebi.phenotype.web.controller.DataTableController.java", "BodyUseAPI": ["uk.ac.ebi.phenotype.web.controller.DataTableController.parseAlleleType(net.sf.json.JSONObject,java.lang.String,java.lang.String)"], "Fixed commit": "cf74894eefd6d42551cb31319aab5957a6db0035", "Url": "https://api.github.com/repos/mpi2/PhenotypeArchive", "Date": "2014-04-01T15:54:33Z"},
{"Line": "=>1335", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.rascalmpl.interpreter.load.RascalURIResolver.resolve(java.net.URI)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (resolved != null) { location = resolved; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/7555/buggy-version/src.org.rascalmpl.interpreter.Evaluator.java", "BodyUseAPI": [], "Fixed commit": "95ebe22d2414a9c67ba010c003da82d16c3746dc", "Url": "https://api.github.com/repos/cwi-swat/rascal", "Date": "2012-11-05T13:52:18Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (onlineServer == 1) { return 1; }else { return ret; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/1797/buggy-version/dslab13.src.main.java.proxy.ProxyCli.java", "BodyUseAPI": [], "Fixed commit": "e4de54c6b653c903a930ae0bda046134a811a459", "Url": "https://api.github.com/repos/MichiK91/VSLab1", "Date": "2013-12-30T15:28:09Z"},
{"Line": "=>1549", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (count > 1) { parent.removeChild(mapping); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/7814/buggy-version/core.src.main.java.lucee.runtime.config.XMLConfigAdmin.java", "BodyUseAPI": [], "Fixed commit": "6b519aa656c0c89d968dccf41afe81ab0a3a1d71", "Url": "https://api.github.com/repos/lucee/Lucee", "Date": "2017-05-31T11:12:24Z"},
{"Line": "=>1555", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (count > 0) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/7814/buggy-version/core.src.main.java.lucee.runtime.config.XMLConfigAdmin.java", "BodyUseAPI": [], "Fixed commit": "6b519aa656c0c89d968dccf41afe81ab0a3a1d71", "Url": "https://api.github.com/repos/lucee/Lucee", "Date": "2017-05-31T11:12:24Z"},
{"Line": "=>755", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["irecipe.getRecipeOutput().copy()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(output.isEmpty())) { int amount = (known.get(fluid)) / (output.getCount()); output.setCount(1); slimeknights.tconstruct.library.TinkerRegistry.registerMelting(new slimeknights.tconstruct.library.smeltery.MeltingRecipe(slimeknights.mantle.util.RecipeMatch.of(output, amount), fluid)); slimeknights.tconstruct.smeltery.TinkerSmeltery.log.trace(\"Added automatic melting recipe for {} ({} {})\", irecipe.getRecipeOutput().toString(), amount, fluid.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/845/buggy-version/src.main.java.slimeknights.tconstruct.smeltery.TinkerSmeltery.java", "BodyUseAPI": ["slimeknights.mantle.util.RecipeMatch.of(net.minecraft.item.ItemStack,int)", "net.minecraft.item.ItemStack.getCount()", "net.minecraft.item.ItemStack.setCount(int)", "slimeknights.tconstruct.library.TinkerRegistry.registerMelting(slimeknights.tconstruct.library.smeltery.MeltingRecipe)"], "Fixed commit": "53da004647bde30570a07ff8c13362cb31aa7e15", "Url": "https://api.github.com/repos/SlimeKnights/TinkersConstruct", "Date": "2017-07-18T06:41:24Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((responseThread) != null) { responseThread.interrupt(); responseThread = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/6606/buggy-version/distributed.src.main.java.com.orientechnologies.orient.server.hazelcast.OHazelcastDistributedMessageService.java", "BodyUseAPI": [], "Fixed commit": "5419222b03662fa9cb15792d4345a8c25d433998", "Url": "https://api.github.com/repos/w3aponx/orientdb", "Date": "2014-02-19T10:32:15Z"},
{"Line": "=>367", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (catalogItem instanceof brooklyn.catalog.internal.CatalogItemDo<?, ?>) { catalogItem = ((brooklyn.catalog.internal.CatalogItemDo<?, ?>) (catalogItem)).getDto(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/6010/buggy-version/core.src.main.java.brooklyn.entity.rebind.dto.MementosGenerators.java", "BodyUseAPI": [], "Fixed commit": "ef4cc4a61ab3b99aacb0a030f17a7847ca7b9a71", "Url": "https://api.github.com/repos/bostko/incubator-brooklyn", "Date": "2015-03-13T09:12:02Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cpw.mods.fml.common.Loader.isModLoaded(\"OpenComputers\")) crossOC = new shedar.mods.ic2.nuclearcontrol.crossmod.opencomputers.CrossOpenComputers();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/2844/buggy-version/src.main.java.shedar.mods.ic2.nuclearcontrol.IC2NuclearControl.java", "BodyUseAPI": [], "Fixed commit": "ce961dedd1ea3a3f3288f3c95dfbca68e9bfd2b8", "Url": "https://api.github.com/repos/xbony2/Nuclear-Control", "Date": "2015-01-17T14:22:19Z"},
{"Line": "=>339", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((beans.size()) >= (com.crtb.tunnelmonitor.common.Constant.TEST_LINE_MAX)) { showText(((\"\u6700\u591a\u53ea\u80fd\u6709\" + (com.crtb.tunnelmonitor.common.Constant.TEST_LINE_MAX)) + \"\u6761\u6d4b\u7ebf\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/3759/buggy-version/CRTBTunnelMonitor.src.com.crtb.tunnelmonitor.widget.CrtbExcavationLayout.java", "BodyUseAPI": ["com.crtb.tunnelmonitor.widget.CrtbExcavationLayout.showText(((\"\u6700\u591a\u53ea\u80fd\u6709\" + (com.crtb.tunnelmonitor.common.Constant.TEST_LINE_MAX)) + \"\u6761\u6d4b\u7ebf\"))"], "Fixed commit": "c72639186493bc59f15e152abb22c0c86056f8c4", "Url": "https://api.github.com/repos/2014-2/001", "Date": "2014-09-23T08:10:28Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.bionic.domain.Order.getPdfLink()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (link == null) return \"orders\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/6166/buggy-version/src.main.java.com.bionic.controller.OrderController.java", "BodyUseAPI": [], "Fixed commit": "142a803acc8878886b50e251cc4c68e2819b648a", "Url": "https://api.github.com/repos/BU-git/rp16_engines", "Date": "2016-05-13T22:56:15Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((punches.length) > 0) { net.gecosi.dataframe.SiPunch lastTimedPunch = punches[((nbTimedPunches(punches)) - 1)]; refTime = newRefTime(refTime, lastTimedPunch.timestamp()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/2909/buggy-version/src.net.gecosi.dataframe.Si5DataFrame.java", "BodyUseAPI": [], "Fixed commit": "55aaa1634a9e15df00c6cdbaffddff1a7a320f0c", "Url": "https://api.github.com/repos/sdenier/GecoSI", "Date": "2013-12-17T23:07:37Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((punches.length) > 0) { net.gecosi.dataframe.SiPunch lastPunch = punches[((punches.length) - 1)]; refTime = newRefTime(refTime, lastPunch.timestamp()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/2909/buggy-version/src.net.gecosi.dataframe.Si6PlusAbstractDataFrame.java", "BodyUseAPI": [], "Fixed commit": "55aaa1634a9e15df00c6cdbaffddff1a7a320f0c", "Url": "https://api.github.com/repos/sdenier/GecoSI", "Date": "2013-12-17T23:07:37Z"},
{"Line": "=>315", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((cursor.getParent()) != null) { cursor.getParent().removeChildObject(cursor); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/5514/buggy-version/gvr-controller.app.src.main.java.org.gearvrf.sample.controller.SampleMain.java", "BodyUseAPI": ["org.gearvrf.GVRSceneObject.getParent()", "cursor.getParent().removeChildObject(org.gearvrf.GVRSceneObject)"], "Fixed commit": "9f1dfc7f71cc1826075c5ec9c305fc39b7e9f52f", "Url": "https://api.github.com/repos/NolaDonato/GearVRf-Demos", "Date": "2017-10-05T06:33:15Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((android.support.v4.view.ViewCompat.getFitsSystemWindows(superNestedLayout)) && ((mBottomSheetHeader) != null)) && (!(android.support.v4.view.ViewCompat.getFitsSystemWindows(mBottomSheetHeader)))) { android.support.v4.view.ViewCompat.setFitsSystemWindows(mBottomSheetHeader, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/3381/buggy-version/nestedscrolllayout.src.main.java.com.ytjojo.viewlib.supernestedlayout.BottomSheetBehavior.java", "BodyUseAPI": ["android.support.v4.view.ViewCompat.setFitsSystemWindows(android.view.View,boolean)"], "Fixed commit": "63ec2b2aed020c5b528a3ea5212c752eaa349a50", "Url": "https://api.github.com/repos/ytjojo/SuperNeestedscrollLayout", "Date": "2017-07-10T05:10:03Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentEpochNumber) != (epochNumber)) { throw new java.util.ConcurrentModificationException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/7049/buggy-version/homework-g595-romanenko.src.main.java.ru.mipt.java2016.homework.g595.romanenko.task2.MyKeyValueStorage.java", "BodyUseAPI": [], "Fixed commit": "07695a16b33131f1c5333b7eecd8b10a4c702c93", "Url": "https://api.github.com/repos/fediq/mipt-java-2016", "Date": "2016-10-26T18:20:13Z"},
{"Line": "=>480", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (L.equals(L2)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/2910/buggy-version/src.com.workshop.set.control.TempEnvironment.java", "BodyUseAPI": [], "Fixed commit": "0c89c322e44113454386d56d3a1d1883fa5bd870", "Url": "https://api.github.com/repos/nicschumann/set", "Date": "2014-05-05T19:08:10Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((a) != (DfaRun.EOF)) || (((s.length()) == pos) && (dfa.matchesEmpty()))) { return out.length(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/5681/buggy-version/src.java.monq.jfa.Regexp.java", "BodyUseAPI": [], "Fixed commit": "646343d1de52200f229e7b6cd38570bd03840f43", "Url": "https://api.github.com/repos/HaraldKi/monqjfa", "Date": "2016-02-07T12:30:19Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((a) == null) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/5681/buggy-version/src.java.monq.jfa.Regexp.java", "BodyUseAPI": [], "Fixed commit": "646343d1de52200f229e7b6cd38570bd03840f43", "Url": "https://api.github.com/repos/HaraldKi/monqjfa", "Date": "2016-02-07T12:30:19Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((model.getSelectedNeuralNetId()) == null) && ((model.getNeuralNet()) != null)) { model.setSelectedNeuralNetId(model.getNeuralNet().getNeuralNetMetaData().getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/5622/buggy-version/src.main.java.de.baleipzig.iris.ui.presenter.neuralnetconfig.NeuralNetConfigPresenter.java", "BodyUseAPI": ["de.baleipzig.iris.ui.viewmodel.neuralnetconfig.NeuralNetConfigViewModel.getNeuralNet()", "model.getNeuralNet().getNeuralNetMetaData().getId()", "model.getNeuralNet().getNeuralNetMetaData()", "de.baleipzig.iris.ui.viewmodel.neuralnetconfig.NeuralNetConfigViewModel.setSelectedNeuralNetId(model.getNeuralNet().getNeuralNetMetaData().getId())"], "Fixed commit": "0bdc60403127b524156157aeacc16f09905e8375", "Url": "https://api.github.com/repos/fluoxa/Iris", "Date": "2016-11-14T20:29:19Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((size()) > 0) { this.cur = Head.next; }else this.cur = Tail;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/8459/buggy-version/Queue.Deque.java", "BodyUseAPI": [], "Fixed commit": "5cdc412eab2b846c0c7f350c8ca9c35ddcb2e4fb", "Url": "https://api.github.com/repos/drstarry/algs", "Date": "2015-02-20T14:27:33Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (deptList.isEmpty()) { vi = inflater.inflate(R.layout.fragment_empty_view, container, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/870/buggy-version/app.src.main.java.com.example.maulidevelopers.app.Fragment.GridImageViewFragment.java", "BodyUseAPI": [], "Fixed commit": "d61ab2f4b4d614b97ccc523b88f55bc042403012", "Url": "https://api.github.com/repos/akashshinde/MauliDevelopersAndroid", "Date": "2014-07-01T04:54:33Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lastVisitedPage) != null) { return lastVisitedPage; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/8551/buggy-version/main.src.main.java.com.bloatit.framework.webprocessor.context.Session.java", "BodyUseAPI": [], "Fixed commit": "bab7cb08f5232cf7551c50d7e9c23633a57072ed", "Url": "https://api.github.com/repos/BloatIt/bloatit", "Date": "2011-06-14T09:45:49Z"},
{"Line": "=>935", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (continueRequested) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/5230/buggy-version/oneSheeld.src.main.java.com.integreight.firmatabluetooth.ArduinoFirmata.java", "BodyUseAPI": [], "Fixed commit": "3a9bcc3ea5f4637b774ab790c78a4e103a8714ba", "Url": "https://api.github.com/repos/Integreight/1Sheeld-Android-App", "Date": "2015-10-29T13:33:17Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["stmt.getTableElementList().size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (tableElementSize == 1) { ddlCol.setIsKey(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/6976/buggy-version/parser.src.main.java.com.abc.carrygo.parser.common.util.ParserUtil.java", "BodyUseAPI": [], "Fixed commit": "a89e5457992b4cce83f4f3e7a844dded2e739248", "Url": "https://api.github.com/repos/linpelvis/carrygo", "Date": "2016-11-08T10:50:55Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.runelite.client.plugins.pricecommands.PriceCommands.retrieveFromList(result.getItems(),java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (tempItem == null) { net.runelite.client.plugins.pricecommands.PriceCommands.logger.warn(\"Unable to fetch item price for {}\", search); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/3956/buggy-version/runelite-client.src.main.java.net.runelite.client.plugins.pricecommands.PriceCommands.java", "BodyUseAPI": [], "Fixed commit": "011bd34b2b9777c31262b2c052d88c212a59984e", "Url": "https://api.github.com/repos/l2-/runelite", "Date": "2017-07-18T00:03:44Z"},
{"Line": "=>250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mClassResultLoaderManager.isCancelled()) message = \"Cancelled\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/1710/buggy-version/src.com.V4Creations.vtulife.view.fragments.ClassResultListFragment.java", "BodyUseAPI": [], "Fixed commit": "550ba0ab5ad0a9afb27261b8d6ff006bf8a40afe", "Url": "https://api.github.com/repos/vishalvijay/vtu-life-android", "Date": "2014-01-30T14:20:44Z"},
{"Line": "=>445", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (StaticContentSpecLoader.PROPERTY_LOCATION.getPropertyName().equals(propertyName)) { scriptable.put(StaticContentSpecLoader.PROPERTY_ANCHORS.getPropertyName(), null, java.lang.Integer.valueOf(IAnchorConstants.DEFAULT)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/7230/buggy-version/servoy_ngclient.src.com.servoy.j2db.server.ngclient.component.RuntimeLegacyComponent.java", "BodyUseAPI": [], "Fixed commit": "6d4eb87cc718c991de02b5986098f1e411a13f3f", "Url": "https://api.github.com/repos/Servoy/servoy-client", "Date": "2015-05-28T07:23:43Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentFragment) != null) currentFragment.setCurrency(currency);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/2246/buggy-version/app.src.main.java.com.coinport.odin.fragment.DepositWithdrawalFragment.java", "BodyUseAPI": [], "Fixed commit": "c428cf7baf3abf662f882170c5b875e9248aa3ad", "Url": "https://api.github.com/repos/hossx/Odin", "Date": "2015-01-12T13:20:07Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["at.fhhgb.auth.voice.VoiceAuthenticator.identify()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (tempResult == null) { android.util.Log.d(za.co.zebrav.smartdoor.IdentifyVoiceFragment.LOG_TAG, \"Error with identify! Check if ActiveFile is set\"); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/1041/buggy-version/Source.src.za.co.zebrav.smartdoor.IdentifyVoiceFragment.java", "BodyUseAPI": [], "Fixed commit": "bfc7cddf282eb7c8840a0a8b617e3ad8efbcde95", "Url": "https://api.github.com/repos/tinkie101/SmartDoor", "Date": "2014-09-17T10:01:08Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(voiceAuthenticator.train(activeKey))) { android.widget.Toast.makeText(context, \"Error with Training voice\", Toast.LENGTH_LONG).show(); android.util.Log.d(za.co.zebrav.smartdoor.AddVoiceFragment.LOG_TAG, \"Error with training voice, check if activeFile is set\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/1041/buggy-version/Source.src.za.co.zebrav.smartdoor.AddVoiceFragment.java", "BodyUseAPI": [], "Fixed commit": "bfc7cddf282eb7c8840a0a8b617e3ad8efbcde95", "Url": "https://api.github.com/repos/tinkie101/SmartDoor", "Date": "2014-09-17T10:01:08Z"},
{"Line": "=>554", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((editText) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/4861/buggy-version/app.src.main.java.org.telegram.android.fragments.ConversationFragment.java", "BodyUseAPI": [], "Fixed commit": "aee979e139f2d82cb7c8bab993f6b439e21d5f78", "Url": "https://api.github.com/repos/ex3ndr/telegram", "Date": "2013-12-29T16:31:23Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ast.getParent().getParent()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((parent.getFirstChild().getFirstChild()) != null) { final com.puppycrawl.tools.checkstyle.api.DetailAST annotation = parent.getFirstChild().getFirstChild(); if ((annotation.getType()) == (com.puppycrawl.tools.checkstyle.api.TokenTypes.ANNOTATION)) { final com.puppycrawl.tools.checkstyle.api.DetailAST overrideToken = annotation.findFirstToken(TokenTypes.IDENT); if (\"Override\".equals(overrideToken.getText())) { overridden = true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/8219/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.checks.naming.ParameterNameCheck.java", "BodyUseAPI": ["parent.getFirstChild().getFirstChild()", "com.puppycrawl.tools.checkstyle.api.DetailAST.getFirstChild()"], "Fixed commit": "8381754587bee0de49489e9bfb11e5912f664e87", "Url": "https://api.github.com/repos/Vladlis/checkstyle", "Date": "2015-11-05T20:21:56Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.sharesmile.share.utils.JsonHelper.StringToJsonArray(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (array == null) { com.crashlytics.android.Crashlytics.logException(new java.lang.Throwable((\"Login Response error. Server response : \" + responseString))); com.sharesmile.share.MainApplication.getInstance().getMainThreadHandler().post(new java.lang.Runnable() { @java.lang.Override public void run() { mListener.showHideProgress(false, null); } }); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/7768/buggy-version/app.src.main.java.com.sharesmile.share.core.LoginImpl.java", "BodyUseAPI": [], "Fixed commit": "1387d92f68829e75f8f822cea93628b3e9b277ec", "Url": "https://api.github.com/repos/anshulagarwal06/Share", "Date": "2017-02-05T14:20:41Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((httpServletResponse.getStatus()) >= 400) return httpServletResponse.getStatus();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/6931/buggy-version/src.main.java.com.soklet.web.response.DefaultResponseHandler.java", "BodyUseAPI": ["javax.servlet.http.HttpServletResponse.getStatus()"], "Fixed commit": "d80bd0ef8de97ebd778efdb7c3fe7e716a313ddd", "Url": "https://api.github.com/repos/soklet/soklet", "Date": "2015-06-02T16:14:28Z"},
{"Line": "=>335", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.juztoss.bpmplayer.presenters.BPMPlayerApp.getComposition(service.currentSongId())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (composition != null) { ((android.widget.TextView) (mActionBar.getCustomView().findViewById(R.id.actionbar_firstline))).setText(composition.name()); ((android.widget.TextView) (mActionBar.getCustomView().findViewById(R.id.actionbar_secondline))).setText(java.lang.String.format(\"%.1f\", composition.bpm())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/4698/buggy-version/app.src.main.java.com.juztoss.bpmplayer.views.PlayerActivity.java", "BodyUseAPI": ["com.juztoss.bpmplayer.models.Composition.name()", "((android.widget.TextView) (mActionBar.getCustomView().findViewById(R.id.actionbar_secondline))).setText(java.lang.String)", "com.juztoss.bpmplayer.models.Composition.bpm()", "java.lang.String.format(java.lang.String,composition.bpm())", "((android.widget.TextView) (mActionBar.getCustomView().findViewById(R.id.actionbar_firstline))).setText(composition.name())"], "Fixed commit": "9b19812a1b04f30972892f25b6825bffc721dc0c", "Url": "https://api.github.com/repos/JuzTosS/Rhythmo", "Date": "2016-06-12T20:42:20Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (i < ((ictx.length) - 1)) { setValueIntoContext(ctx, ictx[i]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/1523/buggy-version/kie-dmn.kie-dmn-feel.src.main.java.org.kie.dmn.feel.lang.ast.QuantifiedExpressionNode.java", "BodyUseAPI": ["org.kie.dmn.feel.lang.ast.QuantifiedExpressionNode.setValueIntoContext(org.kie.dmn.feel.lang.EvaluationContext,org.kie.dmn.feel.lang.ast.QuantifiedExpressionNode.QEIteration)"], "Fixed commit": "eeadc1e809b64f2ac6f42f6f814c20e90bb4d9f1", "Url": "https://api.github.com/repos/markcoble/drools", "Date": "2017-06-20T12:50:39Z"},
{"Line": "=>407", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (character.isDead()) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/4041/buggy-version/PTS3-Game.core.src.com.game.pts3.ScreenGame.java", "BodyUseAPI": [], "Fixed commit": "0ecff1694d12cdaaa914be1928af312098751168", "Url": "https://api.github.com/repos/Red-mar/PTS3Game", "Date": "2017-10-07T10:14:08Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getIntent().getStringExtra(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (caller.equalsIgnoreCase(\"JoinRide\")) tabView = tabProvider.getTabHost(MenuConstants.JOIN_RIDES); else tabView = tabProvider.getTabHost(MenuConstants.PAST_RIDES);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/1855/buggy-version/src.com.ncsu.edu.spinningwellness.activities.ViewParticipantsForARideActivity.java", "BodyUseAPI": [], "Fixed commit": "f6f3d0f595d8da88e9040f81de544de55a315fd8", "Url": "https://api.github.com/repos/NCSUMobiles/Spring13-2wheels", "Date": "2013-05-02T20:02:09Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.simple.JSONObject.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (value == null) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/2176/buggy-version/src.main.java.com.silicolife.textmining.processes.ir.patentpipeline.components.searchmodule.bing.entities.BingUtils.java", "BodyUseAPI": [], "Fixed commit": "3bb084a88da57ea07e517af46337dd722a30be72", "Url": "https://api.github.com/repos/biotextmining/processes", "Date": "2017-05-03T10:25:29Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (io.descoped.container.module.factory.DefaultInstanceFactory.INSTANCES.isEmpty()) { io.descoped.container.module.factory.DefaultInstanceFactory.init(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/2924/buggy-version/descoped-core.src.main.java.io.descoped.container.module.factory.DefaultInstanceFactory.java", "BodyUseAPI": [], "Fixed commit": "eb92fa989762dea3f5883de40aa08e5b3b5dbd9b", "Url": "https://api.github.com/repos/descoped/descoped-container", "Date": "2017-02-01T16:17:23Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getDoubleExtra(NotificationService.BROADCAST_LONGITUDE,int)", "android.content.Intent.getDoubleExtra(NotificationService.BROADCAST_LATITUDE,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((currentLongitude == 0) | (currentLatitude == 0)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/9133/buggy-version/src.de.andreasgiemza.ubicomproject.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "5eaff67d6ae70939996af9087ba9452dfe58abde", "Url": "https://api.github.com/repos/hurik/UbiComProject", "Date": "2014-06-03T18:17:06Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.String>.getLeft()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (\"\".equals(left)) { listPath = right; }else { listPath = (left + \".\") + right; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/4800/buggy-version/karate-core.src.main.java.com.intuit.karate.JsonUtils.java", "BodyUseAPI": [], "Fixed commit": "9e0c4259da468040285083753b3d6bbc712f7278", "Url": "https://api.github.com/repos/intuit/karate", "Date": "2017-07-06T14:22:42Z"},
{"Line": "=>418", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (dsNames != null) { sharedPattern = datastoreMgr.getSharedDatastoresByNames(dsNames); localPattern = datastoreMgr.getLocalDatastoresByNames(dsNames); }else { sharedPattern = datastoreMgr.getAllSharedDatastores(); localPattern = datastoreMgr.getAllLocalDatastores(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/4463/buggy-version/server.serengeti.src.main.java.com.vmware.bdd.manager.ClusterConfigManager.java", "BodyUseAPI": ["com.vmware.bdd.manager.VcDataStoreManager.getLocalDatastoresByNames(java.util.List<java.lang.String>)", "com.vmware.bdd.manager.VcDataStoreManager.getSharedDatastoresByNames(java.util.List<java.lang.String>)"], "Fixed commit": "cdc202fcfafe4de973894d980b848ed5e75332ec", "Url": "https://api.github.com/repos/vmware-serengeti/serengeti-ws", "Date": "2012-10-11T07:20:36Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((args.length) == 0) { return commandMap.get(\"help\").execute(plugin.wrapPlayer(((org.bukkit.entity.Player) (sender))), args); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/3730/buggy-version/src.bukkit.java.com.worldcretornica.plotme_core.bukkit.BukkitCommand.java", "BodyUseAPI": ["commandMap.get(\"help\").execute(plugin.wrapPlayer(((org.bukkit.entity.Player) (sender))),java.lang.String[])"], "Fixed commit": "ebc27cb189e38be713948ec92bc520cce5daa45f", "Url": "https://api.github.com/repos/WorldCretornica/PlotMe-Core", "Date": "2015-03-22T16:42:22Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getString(context.getString(R.string.pref_location_key),context.getString(R.string.pref_location_default))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((rVal == null) || (rVal.equalsIgnoreCase(\"\"))) { java.lang.String countyKey = context.getString(R.string.pref_county_key); java.lang.String county = prefs.getString(countyKey, context.getString(R.string.pref_county_dublin)); rVal = county; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/5193/buggy-version/app.src.main.java.com.alley.android.ppi.app.Utility.java", "BodyUseAPI": [], "Fixed commit": "df6425e87c6a87736c17ebaed3b7c25a524a5e9e", "Url": "https://api.github.com/repos/deskenny/ppi", "Date": "2015-04-22T20:17:01Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (initial == null) throw new java.lang.IllegalArgumentException();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/8262/buggy-version/src.Solver.java", "BodyUseAPI": [], "Fixed commit": "a536bc250f83bda34574538ec21ac0853fd31c3a", "Url": "https://api.github.com/repos/StephenHuge/Algorithms04", "Date": "2017-10-31T03:17:21Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (commitIndex > (lastCommitIndex)) { lastCommitIndex = commitIndex; setWaitCommit(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/1325/buggy-version/src.client.Client.java", "BodyUseAPI": [], "Fixed commit": "f102ad32d6ee6b762b7a10ac69635cff4d1967e5", "Url": "https://api.github.com/repos/kabik/kvs_raft", "Date": "2017-06-28T06:04:43Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.d2rq.db.types.DataType.value(java.sql.ResultSet,int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (value == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/466/buggy-version/src.org.d2rq.db.types.SQLCharacterString.java", "BodyUseAPI": [], "Fixed commit": "f5d3fcb13bac5f10bad26b2c41d91efec7a3c075", "Url": "https://api.github.com/repos/d2rq/d2rq", "Date": "2013-01-25T14:34:16Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (android.text.TextUtils.isEmpty(num)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/1034/buggy-version/src.org.qii.weiciyuan.ui.userinfo.UserInfoFragment.java", "BodyUseAPI": [], "Fixed commit": "b3dfd424d55cbb1d553d74faff8f725aef2f54de", "Url": "https://api.github.com/repos/qii/weiciyuan", "Date": "2012-08-20T11:12:04Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sample != 1) { GetDataTime(cal, frequency_ms, anzahlMesswerte); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/7220/buggy-version/app.src.main.java.biz.endotherm.NFC.HandleTag.java", "BodyUseAPI": [], "Fixed commit": "d6497804b4b3b9ea57a82662731861475c7a04f9", "Url": "https://api.github.com/repos/KoopCoop/Cyclino", "Date": "2017-10-21T14:35:57Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (commandType.equals(\"exit\")) { dispose(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/3079/buggy-version/src.com.GUI.HomeFrame.java", "BodyUseAPI": [], "Fixed commit": "46d20dbbef6199038572b93216b494f2849701d5", "Url": "https://api.github.com/repos/cs2103jan2016-W10-1J/main", "Date": "2016-04-09T09:20:01Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (userCommand.contains(\" \")) commandType = userCommand.substring(0, userCommand.indexOf(\" \")); else commandType = userCommand;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/3079/buggy-version/src.com.GUI.HomeFrame.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.indexOf(java.lang.String)"], "Fixed commit": "46d20dbbef6199038572b93216b494f2849701d5", "Url": "https://api.github.com/repos/cs2103jan2016-W10-1J/main", "Date": "2016-04-09T09:20:01Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getPackageManager().resolveActivity(chooseIntent, 0)) == null) { android.content.Intent samsungIntent = new android.content.Intent(\"com.sec.android.app.myfiles.PICK_DATA\"); samsungIntent.putExtra(\"CONTENT_TYPE\", StashConstants.TEXT_FILE); samsungIntent.addCategory(Intent.CATEGORY_DEFAULT); chooseIntent = samsungIntent; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/7377/buggy-version/StashCache.app.src.main.java.com.geekeclectic.android.stashcache.StashOverviewActivity.java", "BodyUseAPI": [], "Fixed commit": "66ae17d110382935848904cab2b8eb134f899132", "Url": "https://api.github.com/repos/sylkai/stash_cache", "Date": "2015-07-17T07:51:42Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (connectXP) setBiomeColors();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/5854/buggy-version/src.main.java.mods.betterfoliage.client.render.impl.RenderBlockBetterGrass.java", "BodyUseAPI": [], "Fixed commit": "882f689a946c38fb03bca03ede57fd7878b5aa35", "Url": "https://api.github.com/repos/octarine-noise/BetterFoliage", "Date": "2014-11-07T09:18:20Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (connectZN) setBiomeColors();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/5854/buggy-version/src.main.java.mods.betterfoliage.client.render.impl.RenderBlockBetterGrass.java", "BodyUseAPI": [], "Fixed commit": "882f689a946c38fb03bca03ede57fd7878b5aa35", "Url": "https://api.github.com/repos/octarine-noise/BetterFoliage", "Date": "2014-11-07T09:18:20Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (connectZP) setBiomeColors();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/5854/buggy-version/src.main.java.mods.betterfoliage.client.render.impl.RenderBlockBetterGrass.java", "BodyUseAPI": [], "Fixed commit": "882f689a946c38fb03bca03ede57fd7878b5aa35", "Url": "https://api.github.com/repos/octarine-noise/BetterFoliage", "Date": "2014-11-07T09:18:20Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (connectXN) setBiomeColors();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/5854/buggy-version/src.main.java.mods.betterfoliage.client.render.impl.RenderBlockBetterGrass.java", "BodyUseAPI": [], "Fixed commit": "882f689a946c38fb03bca03ede57fd7878b5aa35", "Url": "https://api.github.com/repos/octarine-noise/BetterFoliage", "Date": "2014-11-07T09:18:20Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((blockz[p1]) == '0') p1++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/8926/buggy-version/src.Board.java", "BodyUseAPI": [], "Fixed commit": "7b5a1c44f8cd9e451db4f34eb547e0622bc63aa9", "Url": "https://api.github.com/repos/StephenHuge/Algorithms04", "Date": "2017-10-31T03:08:26Z"},
{"Line": "=>470", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["se.sunet.ati.ladok.atom.AtomUtil.getNextArchiveLink(org.apache.abdera.model.Feed)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (nextArchiveLink == null) { clearFeedCache(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/3132/buggy-version/src.main.java.se.sunet.ati.ladok.atom.AtomClient.java", "BodyUseAPI": [], "Fixed commit": "175b885ed71319d6a471b6624b7547dbadb7e28f", "Url": "https://api.github.com/repos/uppsala-university/ati-ladok3-atom-client", "Date": "2017-07-03T07:47:18Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((repository.findByUsername(signupForm.getUsername())) == null) { repository.save(newUser); }else { bindingResult.rejectValue(\"username\", \"error.userexists\", \"Username already exists\"); return \"signup\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/7435/buggy-version/src.main.java.fi.haagahelia.course.web.UserController.java", "BodyUseAPI": ["fi.haagahelia.course.domain.UserRepository.save(fi.haagahelia.course.domain.User)"], "Fixed commit": "91beb27a941e566ec3a0e7c59227f8d9dd97bacc", "Url": "https://api.github.com/repos/juhahinkula/StudentListFinal", "Date": "2016-10-12T16:29:54Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == featureAttributeName) gov.usgs.cida.gdp.wps.algorithm.FeatureCategoricalGridCoverageAlgorithm.log.debug(\"WPS request process error: Feature Attribute Name was null. Can not process without the output column name.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/5024/buggy-version/gdp-process-wps.src.main.java.gov.usgs.cida.gdp.wps.algorithm.FeatureCategoricalGridCoverageAlgorithm.java", "BodyUseAPI": [], "Fixed commit": "71793fe4cec4a44669e681151366101959588893", "Url": "https://api.github.com/repos/USGS-CIDA/geo-data-portal", "Date": "2016-07-06T19:56:55Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((c.getCollectionId()) != null) { if (c.getCollectionId().equals(collectionId)) { mCurrentCollection = c; break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/2467/buggy-version/main.src.main.java.com.example.wduello.collectionmanager.ItemListFragment.java", "BodyUseAPI": ["c.getCollectionId().equals(java.util.UUID)", "com.example.wduello.collectionmanager.Collection.getCollectionId()"], "Fixed commit": "836cc928b7f2fbface06214a6a5e005eb17d240b", "Url": "https://api.github.com/repos/LeahK/CollectionsManager", "Date": "2016-04-13T16:17:18Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mAttributes) != null) { attributes = new java.util.ArrayList(mAttributes.values()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/2467/buggy-version/main.src.main.java.com.example.wduello.collectionmanager.Item.java", "BodyUseAPI": [], "Fixed commit": "836cc928b7f2fbface06214a6a5e005eb17d240b", "Url": "https://api.github.com/repos/LeahK/CollectionsManager", "Date": "2016-04-13T16:17:18Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mItems) != null) { items = new java.util.ArrayList(mItems.values()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/2467/buggy-version/main.src.main.java.com.example.wduello.collectionmanager.Collection.java", "BodyUseAPI": [], "Fixed commit": "836cc928b7f2fbface06214a6a5e005eb17d240b", "Url": "https://api.github.com/repos/LeahK/CollectionsManager", "Date": "2016-04-13T16:17:18Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (localSock != null) { try { localSock.close(); } catch (java.io.IOException ex) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/7630/buggy-version/core.src.main.java.mysh.jpipe.Pipe.java", "BodyUseAPI": [], "Fixed commit": "700a360aa8855e79be0a5f095e73b850f4a3b36d", "Url": "https://api.github.com/repos/myshzzx/mlib", "Date": "2015-04-21T03:58:17Z"},
{"Line": "=>1806", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (TeclaApp.persistence.isInverseScanningEnabled()) { TeclaApp.highlighter.pauseSelfScanning(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/1794/buggy-version/source.src.ca.idi.tekla.ime.TeclaIME.java", "BodyUseAPI": [], "Fixed commit": "d37a1a6d7f48eaf55af5c97eb8eed7ee4ddfe595", "Url": "https://api.github.com/repos/rishabhjain08/TeclaAccess", "Date": "2012-03-25T18:56:56Z"},
{"Line": "=>1812", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (TeclaApp.persistence.isInverseScanningEnabled()) { TeclaApp.highlighter.pauseSelfScanning(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/1794/buggy-version/source.src.ca.idi.tekla.ime.TeclaIME.java", "BodyUseAPI": [], "Fixed commit": "d37a1a6d7f48eaf55af5c97eb8eed7ee4ddfe595", "Url": "https://api.github.com/repos/rishabhjain08/TeclaAccess", "Date": "2012-03-25T18:56:56Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (io.soramitsu.iroha.util.NetworkUtil.isOnline(accountRegisterView.getContext())) { accountRegisterView.showError(io.soramitsu.iroha.exception.ErrorMessageFactory.create(context, throwable)); }else { accountRegisterView.showError(io.soramitsu.iroha.exception.ErrorMessageFactory.create(context, new io.soramitsu.iroha.exception.NetworkNotConnectedException())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/35/buggy-version/iroha-android-sample.src.main.java.io.soramitsu.iroha.presenter.AccountRegisterPresenter.java", "BodyUseAPI": ["io.soramitsu.iroha.view.AccountRegisterView.showError(io.soramitsu.iroha.exception.ErrorMessageFactory.create(context, throwable))", "io.soramitsu.iroha.view.AccountRegisterView.showError(io.soramitsu.iroha.exception.ErrorMessageFactory.create(context, new io.soramitsu.iroha.exception.NetworkNotConnectedException()))"], "Fixed commit": "4bb9079dd40d3b7d971f1bdbe4e260c5214f1781", "Url": "https://api.github.com/repos/hyperledger/iroha-android", "Date": "2016-12-10T19:02:25Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((counter_e) > (numDiffEnt)) { counter_e = 0; ++carry; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/6348/buggy-version/transaction_client.src.TransactionClient.java", "BodyUseAPI": [], "Fixed commit": "45a36f570419e6ad2cc5cdef7983c1e911527a2c", "Url": "https://api.github.com/repos/teodormacicas/ERS-testing-tool", "Date": "2013-08-02T12:21:42Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.appspot.yapkke.stanford.gindroid.WebGin.httpRequest(com.appspot.yapkke.stanford.gindroid.HttpGet)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (response == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/4558/buggy-version/src.com.appspot.yapkke.stanford.gindroid.WebGin.java", "BodyUseAPI": [], "Fixed commit": "c8615c23e36292cf63681ecf1b6bb98e424f2e20", "Url": "https://api.github.com/repos/yapkke/GINDroid", "Date": "2011-11-27T21:43:05Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type.equals(\"edit\")) { newTags = new seedu.address.model.tag.UniqueTagList(oldTask.getTags()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/4812/buggy-version/src.main.java.seedu.address.model.activity.ActivityManager.java", "BodyUseAPI": [], "Fixed commit": "9b0d46634cd56929244ba5b9c85675f61ce80c19", "Url": "https://api.github.com/repos/CS2103AUG2016-T13-C2/main", "Date": "2016-11-05T15:04:33Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((context != null) && ((context.getPackageName()) != null)) { return android.preference.PreferenceManager.getDefaultSharedPreferences(context).getString(com.example.pc.weatherapplication.utils.PreferenceUtils.PREFERRED_CITY_KEY, com.example.pc.weatherapplication.utils.PreferenceUtils.DEFAULT_CITY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/4722/buggy-version/app.src.main.java.com.example.pc.weatherapplication.utils.PreferenceUtils.java", "BodyUseAPI": ["android.preference.PreferenceManager.getDefaultSharedPreferences(context).getString(java.lang.String,java.lang.String)", "android.preference.PreferenceManager.getDefaultSharedPreferences(android.content.Context)"], "Fixed commit": "c46c62c7ba263851a8a702c821beeacd4f83f4bf", "Url": "https://api.github.com/repos/reinisseredzins/krisjanis_weather_app", "Date": "2017-02-07T14:37:09Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((uri) == null) { uri = ((params) != null) ? path.append(params).toString() : path.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/4538/buggy-version/org.ektorp.src.main.java.org.ektorp.http.URI.java", "BodyUseAPI": [], "Fixed commit": "814877111d24f171507291ec6e5553aabe28c7d7", "Url": "https://api.github.com/repos/helun/Ektorp", "Date": "2011-07-09T03:48:09Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getRequestURI()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (uri == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/7132/buggy-version/src.main.java.ilarkesto.webapp.Servlet.java", "BodyUseAPI": [], "Fixed commit": "1d0e6e500f06f9a780cef2bc0107a9a0a410095e", "Url": "https://api.github.com/repos/Kunagi/ilarkesto", "Date": "2013-04-09T22:38:39Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((player.getX()) < (b.getX())) { endgameMessage = \"You hit a building.\"; stopGame(); }else { player.setDY(0.0); player.setY((((b.getY()) - (player.getHeight())) + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/1892/buggy-version/Board.java", "BodyUseAPI": ["Player.setY((((b.getY()) - (player.getHeight())) + 1))", "Player.setDY(double)", "Player.getHeight()", "Building.getY()"], "Fixed commit": "850ff112ecd0ff25292565fa29071ca5c7ac14fd", "Url": "https://api.github.com/repos/Sopamo/Swingtest", "Date": "2013-01-15T11:44:08Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (from == till) { if (from < (values.length)) return values[from]; else return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/5555/buggy-version/app.src.main.java.de.tu.darmstadt.seemoo.ansian.tools.ArrayHelper.java", "BodyUseAPI": [], "Fixed commit": "66a10007de78269c10e310028d96d658fc98934a", "Url": "https://api.github.com/repos/demantz/AnSiAn", "Date": "2016-08-24T21:44:23Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.max(float,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((newLow < 0) || (newLow > newHigh)) newLow = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/5555/buggy-version/app.src.main.java.de.tu.darmstadt.seemoo.ansian.model.FFTSample.java", "BodyUseAPI": [], "Fixed commit": "66a10007de78269c10e310028d96d658fc98934a", "Url": "https://api.github.com/repos/demantz/AnSiAn", "Date": "2016-08-24T21:44:23Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.min(float,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (newHigh < 0) newHigh = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/5555/buggy-version/app.src.main.java.de.tu.darmstadt.seemoo.ansian.model.FFTSample.java", "BodyUseAPI": [], "Fixed commit": "66a10007de78269c10e310028d96d658fc98934a", "Url": "https://api.github.com/repos/demantz/AnSiAn", "Date": "2016-08-24T21:44:23Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(org.fenixedu.ulisboa.specifications.domain.studentCurriculum.CurriculumAggregatorServices.isCandidateForEvaluation(enrolment))) { throw new org.fenixedu.ulisboa.specifications.domain.exceptions.ULisboaSpecificationsDomainException(\"error.EnrolmentEvaluation.aggregation.member.not.configured.for.evaluation\", enrolment.getName().getContent()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/5310/buggy-version/src.main.java.org.fenixedu.ulisboa.specifications.domain.student.EnrolmentPredicateInitializer.java", "BodyUseAPI": ["enrolment.getName().getContent()", "org.fenixedu.academic.domain.Enrolment.getName()"], "Fixed commit": "0d5d57d92148788f29c74a5dfb0ba63b52e7d176", "Url": "https://api.github.com/repos/qub-it/fenixedu-ulisboa-specifications", "Date": "2016-05-12T10:47:54Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(org.fenixedu.ulisboa.specifications.domain.studentCurriculum.CurriculumAggregatorServices.isCandidateForEvaluation(enrolment))) { throw new org.fenixedu.ulisboa.specifications.domain.exceptions.ULisboaSpecificationsDomainException(\"error.EnrolmentEvaluation.aggregation.member.not.configured.for.evaluation\", enrolment.getName().getContent()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/5310/buggy-version/src.main.java.org.fenixedu.ulisboa.specifications.domain.student.EnrolmentPredicateInitializer.java", "BodyUseAPI": ["enrolment.getName().getContent()", "org.fenixedu.academic.domain.Enrolment.getName()"], "Fixed commit": "0d5d57d92148788f29c74a5dfb0ba63b52e7d176", "Url": "https://api.github.com/repos/qub-it/fenixedu-ulisboa-specifications", "Date": "2016-05-12T10:47:54Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.kwstudios.play.ragemode.gameLogic.PlayerList.isPlayerPlaying(event.getEntity().getUniqueId().toString())) { if (event.getCause().equals(DamageCause.PROJECTILE)) { org.bukkit.entity.Player victim = ((org.bukkit.entity.Player) (event.getEntity())); if (org.kwstudios.play.ragemode.gameLogic.PlayerList.isPlayerPlaying(victim.getUniqueId().toString())) { if ((event.getDamage()) == 0.0) { event.setDamage(28.34); }else { event.setDamage(27.114); } } } if (event.getCause().equals(DamageCause.FALL)) { event.setCancelled(true); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/1331/buggy-version/src.org.kwstudios.play.ragemode.events.EventListener.java", "BodyUseAPI": ["org.bukkit.event.entity.EntityDamageEvent.setCancelled(boolean)", "org.bukkit.event.entity.EntityDamageEvent.getCause()", "org.bukkit.event.entity.EntityDamageEvent.setDamage(double)", "org.bukkit.event.entity.EntityDamageEvent.getCause()", "event.getCause().equals(DamageCause.PROJECTILE)", "org.bukkit.event.entity.EntityDamageEvent.getDamage()", "org.bukkit.event.entity.EntityDamageEvent.setDamage(double)", "event.getCause().equals(DamageCause.FALL)", "org.bukkit.event.entity.EntityDamageEvent.getEntity()"], "Fixed commit": "e4f66d14b44851333f85be98f8bc276e411330f9", "Url": "https://api.github.com/repos/KWStudios/RageMode", "Date": "2015-08-09T12:45:34Z"},
{"Line": "=>483", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.multiphasicapps.util.dynbuffer.__Chunk__.__previous()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (prev == null) throw new java.lang.RuntimeException(\"OOPS\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/4007/buggy-version/src.util-dynbuffer.net.multiphasicapps.util.dynbuffer.__Chunk__.java", "BodyUseAPI": [], "Fixed commit": "1344b2c8a32459dd0b57b8e0e688cabf808c8d13", "Url": "https://api.github.com/repos/XerTheSquirrel/SquirrelJME", "Date": "2016-08-02T20:44:37Z"},
{"Line": "=>327", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (nodeDrive != null) { nodeDrive = nodeDrive.clone(); nodeDrive.getParameters().put(ManageDriveServiceImpl.DRIVE_PARAMATER_USER_ID, (((((((splitedPath[2]) + \"/\") + (splitedPath[3])) + \"/\") + (splitedPath[4])) + \"/\") + (splitedPath[5]))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/9136/buggy-version/core.services.src.main.java.org.exoplatform.services.cms.documents.impl.DocumentServiceImpl.java", "BodyUseAPI": ["org.exoplatform.services.cms.drives.DriveData.clone()"], "Fixed commit": "1e6587219e4cf51f9dd918df298a5ad15205e4ce", "Url": "https://api.github.com/repos/exodev/ecms", "Date": "2017-05-30T15:57:23Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((key != null) && (key.startsWith(\"is\"))) { return key.substring(2).toLowerCase(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/3064/buggy-version/treasure-compiler.src.main.java.com.baoyz.treasure.compiler.conveter.SimpleKeyConverter.java", "BodyUseAPI": ["java.lang.String.substring(int)", "java.lang.String.toLowerCase()"], "Fixed commit": "b3363d86f55c1f2b8450273b4aa84abb1f72d718", "Url": "https://api.github.com/repos/baoyongzhang/Treasure", "Date": "2015-11-14T09:13:51Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getInt(Constants.LAST_UPDATED_KEY,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (last <= 28) { changelog += \"Version 2.1.1:<br><ul><li>Bugfix</li></ul><p>\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/4486/buggy-version/src.de.maxgb.vertretungsplan.util.Updater.java", "BodyUseAPI": [], "Fixed commit": "7a13afbad1dcc96c0a8dd4c8d261b82ae7b9579d", "Url": "https://api.github.com/repos/maxanier/Vertretungsplan", "Date": "2014-01-27T18:58:37Z"},
{"Line": "=>677", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.owner) != null) com.orientechnologies.orient.core.record.ORecordInternal.track(this.owner, identifiable);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/7879/buggy-version/core.src.main.java.com.orientechnologies.orient.core.db.record.ridbag.sbtree.OSBTreeRidBag.java", "BodyUseAPI": [], "Fixed commit": "c270e5d2f3e2002b2e9e3ba65d9418d6f76a68d3", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2015-07-02T14:44:35Z"},
{"Line": "=>1261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ednovo.gooru.infrastructure.persistence.hibernate.resource.ResourceRepository.findResourceByresourceSourceId(java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (resourceSource == null) { throw new org.ednovo.gooru.core.exception.BadRequestException(generateErrorMessage(\"GLO003\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/7895/buggy-version/api.src.main.java.org.ednovo.gooru.domain.service.resource.ResourceServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "97c1dd837a931df81c10ad549a09eea7f08e3dd6", "Url": "https://api.github.com/repos/viji-m/Gooru-Core-API", "Date": "2015-04-06T14:43:34Z"},
{"Line": "=>319", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (duration < 50) duration = 50.0F;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/8268/buggy-version/com.tieorange.allosliderbutton.src.main.java.com.tieorange.allosliderbutton.draggableFAB.AlloDraggableButton.java", "BodyUseAPI": [], "Fixed commit": "188979cedff18e9a6957fb6a2e69e60049cec1c5", "Url": "https://api.github.com/repos/tieorange/AlloSliderButton", "Date": "2017-01-08T18:10:17Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.wso2telco.services.dep.sandbox.util.CommonUtil.getNullOrTrimmedValue(wrapperDTO.getMnc())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (mnc != null) { validationRulesList.add(new com.wso2telco.dep.oneapivalidation.util.ValidationRule(com.wso2telco.dep.oneapivalidation.util.ValidationRule.VALIDATION_TYPE_OPTIONAL_INT_GE_ZERO, \"mnc\", mnc)); validationRulesList.add(new com.wso2telco.dep.oneapivalidation.util.ValidationRule(com.wso2telco.dep.oneapivalidation.util.ValidationRule.VALIDATION_TYPE_MANDATORY_INT_GE_ZERO, \"mcc\", mcc)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/4394/buggy-version/dep-sandbox.src.main.java.com.wso2telco.services.dep.sandbox.servicefactory.customerinfo.GetAttributeRequestHandler.java", "BodyUseAPI": ["java.util.List<com.wso2telco.dep.oneapivalidation.util.ValidationRule>.add(com.wso2telco.dep.oneapivalidation.util.ValidationRule)"], "Fixed commit": "17d178af489adacff5aeb5292a3d2ae52db054d7", "Url": "https://api.github.com/repos/WSO2Telco/sandbox-service", "Date": "2017-01-18T07:04:17Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(logFile.canWrite())) { messages.Message.error(\"Cannot write to log file.Please change permissions\"); }else messages.Message.error((\"IOException :\" + (exc.getMessage())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/6388/buggy-version/src.utils.FileHandler.java", "BodyUseAPI": [], "Fixed commit": "61f5158011a20db1084cea48b89118a766e65459", "Url": "https://api.github.com/repos/kounelios13/File-Copy-Manager", "Date": "2016-10-24T21:03:03Z"},
{"Line": "=>366", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["it.unimi.dsi.fastutil.floats.FloatArrayList.getFloat(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (value != (tech.tablesaw.api.FloatColumn.MISSING_VALUE)) { return java.lang.String.valueOf(value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/5619/buggy-version/core.src.main.java.tech.tablesaw.api.FloatColumn.java", "BodyUseAPI": ["java.lang.String.valueOf(float)"], "Fixed commit": "560d5a49343da29ca41038b64741c62dcba53c14", "Url": "https://api.github.com/repos/jtablesaw/tablesaw", "Date": "2017-12-02T10:02:09Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["it.unimi.dsi.fastutil.longs.LongArrayList.getLong(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (value != (tech.tablesaw.api.LongColumn.MISSING_VALUE)) { return java.lang.String.valueOf(value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/5619/buggy-version/core.src.main.java.tech.tablesaw.api.LongColumn.java", "BodyUseAPI": ["java.lang.String.valueOf(long)"], "Fixed commit": "560d5a49343da29ca41038b64741c62dcba53c14", "Url": "https://api.github.com/repos/jtablesaw/tablesaw", "Date": "2017-12-02T10:02:09Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["it.unimi.dsi.fastutil.ints.IntArrayList.getInt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (value != (tech.tablesaw.api.IntColumn.MISSING_VALUE)) { return java.lang.String.valueOf(value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/5619/buggy-version/core.src.main.java.tech.tablesaw.api.IntColumn.java", "BodyUseAPI": ["java.lang.String.valueOf(int)"], "Fixed commit": "560d5a49343da29ca41038b64741c62dcba53c14", "Url": "https://api.github.com/repos/jtablesaw/tablesaw", "Date": "2017-12-02T10:02:09Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["it.unimi.dsi.fastutil.shorts.ShortArrayList.getShort(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (value != (tech.tablesaw.api.ShortColumn.MISSING_VALUE)) { return java.lang.String.valueOf(value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/5619/buggy-version/core.src.main.java.tech.tablesaw.api.ShortColumn.java", "BodyUseAPI": ["java.lang.String.valueOf(short)"], "Fixed commit": "560d5a49343da29ca41038b64741c62dcba53c14", "Url": "https://api.github.com/repos/jtablesaw/tablesaw", "Date": "2017-12-02T10:02:09Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((position.y) % 2) == 0) { return position.add(1, (i + 1)); }else { return position.add(0, (i + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/4932/buggy-version/src.main.java.com.golddigger.model.Direction.java", "BodyUseAPI": ["com.golddigger.model.Point2D.add(int,int)", "com.golddigger.model.Point2D.add(int,int)"], "Fixed commit": "f861f68b7a33e30b22a812a1b191176f972a036d", "Url": "https://api.github.com/repos/u4412045/GoldDigger", "Date": "2012-08-18T17:26:30Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((position.y) % 2) == 0) { return position.add(1, (i - 1)); }else { return position.add(0, (i - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/4932/buggy-version/src.main.java.com.golddigger.model.Direction.java", "BodyUseAPI": ["com.golddigger.model.Point2D.add(int,int)", "com.golddigger.model.Point2D.add(int,int)"], "Fixed commit": "f861f68b7a33e30b22a812a1b191176f972a036d", "Url": "https://api.github.com/repos/u4412045/GoldDigger", "Date": "2012-08-18T17:26:30Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (shouldLetGhostsThrough) { double rnd = java.lang.Math.random(); if (rnd < 0.1) { letGhostEnter(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/4437/buggy-version/src.serie07.ghosts.FriendDoor.java", "BodyUseAPI": [], "Fixed commit": "f75884030cc20f7eeb4978b7ef98c18efe44a5f9", "Url": "https://api.github.com/repos/panmari/concurrency_state_models_and_design_patterns", "Date": "2015-11-03T19:04:25Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["circuit.block.Site.getBlock()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (block1 != null) { block1.setSite(site2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/8363/buggy-version/src.placers.SAPlacer.Swap.java", "BodyUseAPI": ["circuit.block.GlobalBlock.setSite(circuit.block.Site)"], "Fixed commit": "fb30dfd0908ff45cafd3deacd8714f61c35ef476", "Url": "https://api.github.com/repos/EliasVansteenkiste/FPGA-CAD-Framework", "Date": "2016-01-11T20:00:28Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["circuit.block.Site.getBlock()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (block1 != null) { block1.removeSite(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/8363/buggy-version/src.placers.SAPlacer.Swap.java", "BodyUseAPI": ["circuit.block.GlobalBlock.removeSite()"], "Fixed commit": "fb30dfd0908ff45cafd3deacd8714f61c35ef476", "Url": "https://api.github.com/repos/EliasVansteenkiste/FPGA-CAD-Framework", "Date": "2016-01-11T20:00:28Z"},
{"Line": "=>307", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["placers.SAPlacer.Swap.getBlock1(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (block1 != null) { cost += this.calculateDeltaCost(block1, block2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/8363/buggy-version/src.circuit.block.TimingGraph.java", "BodyUseAPI": ["circuit.block.TimingGraph.calculateDeltaCost(circuit.block.GlobalBlock,circuit.block.GlobalBlock)"], "Fixed commit": "fb30dfd0908ff45cafd3deacd8714f61c35ef476", "Url": "https://api.github.com/repos/EliasVansteenkiste/FPGA-CAD-Framework", "Date": "2016-01-11T20:00:28Z"},
{"Line": "=>508", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.andrew.apollo.ui.activities.SearchActivity.findView(R.id.view_toolbar_header_subtitle)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (subtitle != null) { subtitle.setVisibility(View.VISIBLE); subtitle.setText(((\"\\\"\" + s) + \"\\\"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/8414/buggy-version/android.apollo.src.com.andrew.apollo.ui.activities.SearchActivity.java", "BodyUseAPI": ["android.widget.TextView.setText(java.lang.String)", "android.widget.TextView.setVisibility(View.VISIBLE)"], "Fixed commit": "e1a5f43f9a9fcb31fd6b420b6282b0b3706b7171", "Url": "https://api.github.com/repos/frostwire/frostwire", "Date": "2017-02-15T13:57:24Z"},
{"Line": "=>721", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.andrew.apollo.ui.activities.ProfileActivity.findView(R.id.view_toolbar_header_title)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (title != null) { title.setText(s); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/8414/buggy-version/android.apollo.src.com.andrew.apollo.ui.activities.ProfileActivity.java", "BodyUseAPI": ["android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "e1a5f43f9a9fcb31fd6b420b6282b0b3706b7171", "Url": "https://api.github.com/repos/frostwire/frostwire", "Date": "2017-02-15T13:57:24Z"},
{"Line": "=>730", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.andrew.apollo.ui.activities.ProfileActivity.findView(R.id.view_toolbar_header_subtitle)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (subtitle != null) { subtitle.setVisibility(View.VISIBLE); subtitle.setText(s); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/8414/buggy-version/android.apollo.src.com.andrew.apollo.ui.activities.ProfileActivity.java", "BodyUseAPI": ["android.widget.TextView.setText(java.lang.String)", "android.widget.TextView.setVisibility(View.VISIBLE)"], "Fixed commit": "e1a5f43f9a9fcb31fd6b420b6282b0b3706b7171", "Url": "https://api.github.com/repos/frostwire/frostwire", "Date": "2017-02-15T13:57:24Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((menuState) == 0) { menuState = R.id.home; displaySelectedItem(menuState); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/4516/buggy-version/app.src.main.java.com.example.renadoparia.sportjunkiem.HomeActivity.java", "BodyUseAPI": [], "Fixed commit": "ab471f71a4615edce12c280c3228d7c920c0e2cf", "Url": "https://api.github.com/repos/codeCtrlUWI/sportJunkieMobile", "Date": "2017-03-19T09:08:31Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ericfabreu.wearflashcards.data.FlashcardProvider.query(SetList.CONTENT_URI,java.lang.String[],((com.ericfabreu.wearflashcards.data.FlashcardContract.SetList.SET_TITLE) + \"=?\"),java.lang.String[],<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((cursor != null) && (cursor.moveToFirst())) { final java.lang.String setTitle = cursor.getString(cursor.getColumnIndex(SetList.SET_TITLE)); if ((java.lang.Character.isDigit(setTitle.charAt(0))) && (handle.newSetTable(title))) { handle.delete(SetList.CONTENT_URI, ((com.ericfabreu.wearflashcards.data.FlashcardContract.SetList.SET_TABLE_NAME) + \"=?\"), new java.lang.String[]{ tableName }); android.content.ContentValues contentValues = new android.content.ContentValues(); contentValues.put(SetList.SET_TABLE_NAME, tableName); handle.update(SetList.CONTENT_URI, contentValues, ((((com.ericfabreu.wearflashcards.data.FlashcardContract.SetList.SET_TITLE) + \"=\\\"\") + title) + \"\\\"\"), null); cursor.close(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/1763/buggy-version/Mobile.src.main.java.com.ericfabreu.wearflashcards.fragments.SetListFragment.java", "BodyUseAPI": ["android.database.Cursor.getString(cursor.getColumnIndex(SetList.SET_TITLE))", "android.database.Cursor.close()", "android.database.Cursor.getColumnIndex(SetList.SET_TITLE)"], "Fixed commit": "33281375057bff99aa1d37225f42a8368fdfa786", "Url": "https://api.github.com/repos/ericfabreu/WearFlashcards", "Date": "2016-06-11T03:51:30Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(item.equals(\"no\"))) { java.lang.System.out.println(item); dao.GroupMember member = new dao.GroupMember(); member.setGroupId(groupId); member.setUserName(item); service.createGroupMember(member); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/1942/buggy-version/calendar.src.controllers.GroupController.java", "BodyUseAPI": ["dao.GroupMember.setUserName(java.lang.String)", "java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "e1d5aaec44ee87634fa061990775b5bf3c5a4e26", "Url": "https://api.github.com/repos/eoinboylan/application", "Date": "2015-02-28T19:41:04Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((viewingComment) != null) { this.title.setVisibility(View.GONE); findViewById(R.id.textViewTitle).setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/6827/buggy-version/GeoTopicsActivity.src.ca.ualberta.cs.team5geotopics.EditCommentActivity.java", "BodyUseAPI": [], "Fixed commit": "2bab606c84daebe94f532e399c11fea5d44c5fb3", "Url": "https://api.github.com/repos/CMPUT301W14T05/Team5GeoTopics", "Date": "2014-03-10T01:27:12Z"},
{"Line": "=>521", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (source >= 0) { return binding[source]; }else { return source; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/2819/buggy-version/modules.wyone.src.wyautl.core.Automaton.java", "BodyUseAPI": [], "Fixed commit": "a1188abd3727406d8e896a24aee743537f090caf", "Url": "https://api.github.com/repos/DavePearce/Whiley", "Date": "2013-03-22T03:37:34Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gson.JsonParser.parse(com.google.gson.stream.JsonReader)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (jsonElement.isJsonNull()) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/4677/buggy-version/mule-extensions-api-persistence.src.main.java.org.mule.runtime.extension.internal.persistence.metadata.MetadataKeyTypeAdapter.java", "BodyUseAPI": [], "Fixed commit": "e44c2ca208eb9a1e56622615e2516eb81a6acde5", "Url": "https://api.github.com/repos/mulesoft/mule-extensions-api", "Date": "2017-03-09T20:03:07Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (step != null) { result = step.getTrans().getResult(); }else { for (org.pentaho.di.core.RowMetaAndData rowMetaAndData : transformation.getResult().getRows()) { kettleOutput.storeRow(rowMetaAndData.getData(), rowMetaAndData.getRowMeta()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/8017/buggy-version/src.pt.webdetails.cpk.elements.impl.KettleElementType.java", "BodyUseAPI": ["org.pentaho.di.trans.step.StepInterface.getTrans()", "step.getTrans().getResult()"], "Fixed commit": "58f1e62dfa2454632b6261b14fa55b94a2bde775", "Url": "https://api.github.com/repos/webdetails/cpf", "Date": "2013-05-30T11:27:09Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!foundMax) thiscr = 30.0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/292/buggy-version/src.dungen.ui.MonsterCalc.java", "BodyUseAPI": [], "Fixed commit": "ac0359ef034332ea0b5936533901f1fb27693188", "Url": "https://api.github.com/repos/JustinRisch/DunGen", "Date": "2016-09-02T19:39:54Z"},
{"Line": "=>341", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (layoutHelper == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/9096/buggy-version/vlayout.src.main.java.com.alibaba.android.vlayout.VirtualLayoutManager.java", "BodyUseAPI": [], "Fixed commit": "3097b4b4440db6f8aecca127f7efa528a93b8773", "Url": "https://api.github.com/repos/alibaba/vlayout", "Date": "2017-11-30T10:01:30Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.xml.bind.Unmarshaller.unmarshal(java.io.File)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (objResponse instanceof javax.xml.bind.JAXBElement) { response = ((no.imr.nmd.commons.dataset.jaxb.DatasetsType) (((javax.xml.bind.JAXBElement) (objResponse)).getValue())); }else { response = ((no.imr.nmd.commons.dataset.jaxb.DatasetsType) (jaxbMarshaller.unmarshal(file))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/1910/buggy-version/src.main.java.no.imr.nmdapi.dao.file.NMDDataDaoImpl.java", "BodyUseAPI": [], "Fixed commit": "3d3bef4a4b2b5a3db574ee6b5c9b96efaa983306", "Url": "https://api.github.com/repos/Institute-of-Marine-Research-NMD/nmdapi-file-dao", "Date": "2015-08-05T12:22:33Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.RandomAccessFile.readInt()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (count > 10) { throw new xingu.lang.NotImplementedYet((\"Frame Count Out of Range: \" + count)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/981/buggy-version/utils.src.main.java.xingu.utils.io.chunk.impl.FramedChunkReaderImpl.java", "BodyUseAPI": [], "Fixed commit": "6a5d776e70573bff04fce30b1908685e1f93477b", "Url": "https://api.github.com/repos/leandrocruz/xingu", "Date": "2015-07-15T15:25:10Z"},
{"Line": "=>460", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sonar.api.batch.bootstrap.ProjectDefinition.getTestDirs()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((testDirs.size()) == 1) && (isDirectory(testDirs.get(0)))) { resetTests(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/7112/buggy-version/sonar-plugin-api.src.main.java.org.sonar.api.batch.bootstrap.ProjectDefinition.java", "BodyUseAPI": [], "Fixed commit": "875f335cfa7c8bd07ca84de6b42d3bc57c85c71c", "Url": "https://api.github.com/repos/SonarSource/sonarqube", "Date": "2014-10-15T07:52:24Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (status == (org.apache.mina.core.session.IdleStatus.BOTH_IDLE)) try { com.bona.server.pop3.core.POP3ConnectionHandler.sendResponse(session, ((com.bona.server.pop3.util.Constants.POP_ERR) + \"Timeout waiting for data from client.\")); } finally { session.close(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/6646/buggy-version/src.main.java.com.bona.server.pop3.core.POP3ConnectionHandler.java", "BodyUseAPI": [], "Fixed commit": "af3c72edcff5bd8687fd8399c142715812cabdf8", "Url": "https://api.github.com/repos/bonashen/Pop3-Server-Mina", "Date": "2015-10-23T07:10:42Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((photo.getFilename()) == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/2263/buggy-version/ehreader.src.tw.skyarrow.ehreader.app.download.DownloadDeleteDialog.java", "BodyUseAPI": [], "Fixed commit": "c2346f109c3b0f297584185bdc2f9da26c7dce4d", "Url": "https://api.github.com/repos/Xefir/ehreader-android", "Date": "2015-09-05T17:08:16Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (expValue instanceof java.util.Date) { value = com.orientechnologies.orient.core.util.ODateHelper.getDateTimeFormatInstance().format(((java.util.Date) (expValue))); }else value = expValue.toString();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/3701/buggy-version/core.src.main.java.com.orientechnologies.orient.core.sql.OCommandExecutorSQLAlterProperty.java", "BodyUseAPI": ["java.lang.Object.toString()"], "Fixed commit": "fc62b9e2ad896783cae212f9ef0f23dd8a6cdb7f", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2016-12-14T15:26:42Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (syncPosition) { bodyDef.position.set(targetPosition); }else { bodyDef.position.set(positionComponent.getPosition()).scl(Physics.PIXELS_TO_METERS); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/4244/buggy-version/core.src.tiltadv.components.box2d.BodyComponent.java", "BodyUseAPI": [], "Fixed commit": "a7b2686980d6fad58a25cc4725bd00055d4d8e67", "Url": "https://api.github.com/repos/dhcoder/TiltAdventure", "Date": "2014-11-02T19:16:13Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sToBeUpdated) { mEmail.setTo(to); mEmail.setSubject(subj); mEmail.setBody(body); mEmail.setTime(mTime); mEmail.setDate(mDate); onSaveButtonClicked(mEmail, mToBeUpdatedPosition); }else onSaveButtonClicked(new com.abhishek.eventmanager.Model.Email(to, subj, body, mTime, mDate), mToBeUpdatedPosition);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/2615/buggy-version/app.src.main.java.com.abhishek.eventmanager.View.ManageEmailEventsFragment.java", "BodyUseAPI": [], "Fixed commit": "1278bfcaf1a7f11ad800fd069c3a8752b6001377", "Url": "https://api.github.com/repos/abhishek1508/EventManager", "Date": "2016-03-02T22:03:53Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((param.outputPath) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/3742/buggy-version/library.src.main.java.com.sw926.imagefileselector.ImageCompressHelper.java", "BodyUseAPI": [], "Fixed commit": "2f3bd9fe35123768c7d91b0bad9bd27051591e55", "Url": "https://api.github.com/repos/sw926/ImageFileSelector", "Date": "2017-08-23T06:52:58Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((portletRequest) instanceof javax.portlet.ClientDataRequest) { return ((javax.portlet.ClientDataRequest) (portletRequest)).getMethod(); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/5576/buggy-version/plugins.portlet.src.main.java.org.apache.struts2.portlet.servlet.PortletServletRequest.java", "BodyUseAPI": [], "Fixed commit": "853b446113c8c9ba382fcb8c9d04c6b16e6075d9", "Url": "https://api.github.com/repos/yasserzamani/struts", "Date": "2017-08-23T05:44:33Z"},
{"Line": "=>369", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.geoprism.data.etl.SourceContextIF.getFieldByName(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((field != null) && (field.getType().equals(ColumnType.IGNORE))) { headerModifierCommand = SpreadsheetImporterHeaderModifierIF.PROCESS_CELL_AS_IGNORE; }else { headerModifierCommand = headerModifier.processCell(cellReference, contentValue, formattedValue, cellType, rowNum, this.converter.getTargetContext().getType(this.context.getType(this.sheetName)), attributeName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/5664/buggy-version/geoprism-server.src.main.java.net.geoprism.data.etl.excel.SourceContentHandler.java", "BodyUseAPI": [], "Fixed commit": "bc99a37a72175292b63e7859f8f607d07e46cb31", "Url": "https://api.github.com/repos/terraframe/geoprism", "Date": "2017-10-10T19:22:34Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (has(file)) { throw new java.io.IOException((((\"Can't move file \" + file) + \" into \") + (target))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/8070/buggy-version/src.main.java.com.lx.jfile.FSDirectory.java", "BodyUseAPI": [], "Fixed commit": "8bef5e4488f16254ca843988c30551b94e0b2ad7", "Url": "https://api.github.com/repos/get-started/jFile", "Date": "2015-01-23T14:21:56Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((UserData.selected.getImage()) == null) { userImage.setImage(new javafx.scene.image.Image(new java.io.File(\"src/com/group8/resources/Images/defaultIcon.png\").toURI().toString())); }else { userImage.setImage(UserData.selected.getImage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/7164/buggy-version/src.com.group8.controllers.OtherUsers.java", "BodyUseAPI": [], "Fixed commit": "a01af3f49236d44a3cbef9e5631876416f59f927", "Url": "https://api.github.com/repos/SEMGroup8/BeerFinder", "Date": "2016-01-04T16:41:14Z"},
{"Line": "=>446", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.molgenis.data.DataService.findOne(ObservableFeature.ENTITY_NAME,java.lang.Integer,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((featureOfInterest.getDefinitions().size()) != 0) { java.lang.Iterable<org.molgenis.omx.observ.ObservableFeature> iterableObserableFeatures = dataService.findAll(ObservableFeature.ENTITY_NAME, new org.molgenis.data.support.QueryImpl().in(ObservableFeature.DEFINITIONS, featureOfInterest.getDefinitions()).and().in(ObservableFeature.ID, candidateFeatureIds), org.molgenis.omx.observ.ObservableFeature.class); for (org.molgenis.omx.observ.ObservableFeature observableFeature : iterableObserableFeatures) { java.util.List<org.molgenis.omx.observ.target.OntologyTerm> definitions = observableFeature.getDefinitions(); java.util.List<org.molgenis.omx.observ.target.OntologyTerm> definitions1 = featureOfInterest.getDefinitions(); if ((definitions.size()) == (definitions1.size())) { definitions.removeAll(definitions1); if ((definitions.size()) == 0) featureOfInterestIds.add(observableFeature.getId()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/4753/buggy-version/molgenis-omx-biobankconnect.src.main.java.org.molgenis.omx.biobankconnect.ontologymatcher.AsyncOntologyMatcher.java", "BodyUseAPI": ["org.molgenis.omx.observ.ObservableFeature.getDefinitions()", "org.molgenis.data.support.QueryImpl.in(ObservableFeature.DEFINITIONS,featureOfInterest.getDefinitions())", "org.molgenis.omx.observ.ObservableFeature.getDefinitions()", "new org.molgenis.data.support.QueryImpl().in(ObservableFeature.DEFINITIONS, featureOfInterest.getDefinitions()).and().in(ObservableFeature.ID,java.util.List<java.lang.Object>)", "org.molgenis.data.DataService.findAll(ObservableFeature.ENTITY_NAME,new org.molgenis.data.support.QueryImpl().in(ObservableFeature.DEFINITIONS, featureOfInterest.getDefinitions()).and().in(ObservableFeature.ID, candidateFeatureIds),java.lang.Class)", "new org.molgenis.data.support.QueryImpl().in(ObservableFeature.DEFINITIONS, featureOfInterest.getDefinitions()).and()"], "Fixed commit": "c543362f654808f07c9e85f1255e82d61ce15ef1", "Url": "https://api.github.com/repos/ChaoPang/molgenis", "Date": "2014-06-02T09:07:09Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.getBytes()", "com.orctom.rmq.QueueStore.iter(com.orctom.rmq.Queue)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (java.util.Arrays.equals(offsetBytes, iterator.key())) { iterator.next(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/5447/buggy-version/src.main.java.com.orctom.rmq.Queue.java", "BodyUseAPI": ["org.rocksdb.RocksIterator.next()"], "Fixed commit": "4d87a50bc379e485b63c2c16a5d3d233e6b81d3b", "Url": "https://api.github.com/repos/orctom/rmq", "Date": "2017-01-08T14:19:01Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.activejpa.util.PropertyUtil.isSimpleValueType(elementType)) { map.put(entry.getKey(), org.activejpa.util.ConvertUtil.convert(entry.getValue(), elementType)); }else { java.lang.Object value = map.get(entry.getKey()); if (value == null) { value = elementType.newInstance(); } org.activejpa.util.BeanUtil.load(value, ((java.util.Map) (entry.getValue()))); map.put(entry.getKey(), value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/4298/buggy-version/activejpa-core.src.main.java.org.activejpa.util.BeanUtil.java", "BodyUseAPI": ["org.activejpa.util.ConvertUtil.convert(java.lang.Object,java.lang.Class<?>)", "java.lang.Class<?>.newInstance()", "java.util.Map.put(java.lang.Object,org.activejpa.util.ConvertUtil.convert(entry.getValue(), elementType))"], "Fixed commit": "13c78d41db20fc2ee17c2caba8a1fb9012615b7a", "Url": "https://api.github.com/repos/ActiveJpa/activejpa", "Date": "2014-07-04T07:49:32Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(dir.exists())) dir.mkdir();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/2864/buggy-version/bot.net.pslice.bot.managers.FileManager.java", "BodyUseAPI": [], "Fixed commit": "49d9879080ab1c559fe7a254270212d398e7a1c3", "Url": "https://api.github.com/repos/p-slice/AMP-1001", "Date": "2014-02-09T21:17:42Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((f == b) || (equation.get((f - 1)).matches(net.pslice.bot.MathFunctions.ops))) { if (equation.get((f + 1)).startsWith(\"-\")) numbers.add(java.lang.Double.parseDouble(equation.get((f + 1)).substring(1))); else numbers.add(java.lang.Double.parseDouble((\"-\" + (equation.get((f + 1)))))); f++; }else operations.add(\"-\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/2864/buggy-version/bot.net.pslice.bot.MathFunctions.java", "BodyUseAPI": ["java.util.List<java.lang.String>.get(int)", "java.lang.String.substring(int)", "java.lang.Double.parseDouble(java.lang.String)", "java.util.List<java.lang.Double>.add(double)", "java.util.List<java.lang.String>.get(int)", "java.lang.String.startsWith(java.lang.String)", "java.util.List<java.lang.String>.get(int)", "java.lang.Double.parseDouble(java.lang.String)", "java.util.List<java.lang.Double>.add(double)"], "Fixed commit": "49d9879080ab1c559fe7a254270212d398e7a1c3", "Url": "https://api.github.com/repos/p-slice/AMP-1001", "Date": "2014-02-09T21:17:42Z"},
{"Line": "=>369", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.manageInstanceDialog) != null) this.manageInstanceDialog.dismiss();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/4982/buggy-version/src.org.stackdroid.activities.ServersActivity.java", "BodyUseAPI": [], "Fixed commit": "cefb0e2aa65e20b308d77ce9873a4f75ddd04c56", "Url": "https://api.github.com/repos/alvise72/DroidStack", "Date": "2015-06-11T18:53:03Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.auth.oauth2.DefaultCredentialsProvider.getWellKnownCredentialsFile()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (isFile(wellKnownFileLocation)) { credentialsStream = readStream(wellKnownFileLocation); credentials = com.google.auth.oauth2.GoogleCredentials.fromStream(credentialsStream, transport); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/5694/buggy-version/oauth2_http.java.com.google.auth.oauth2.DefaultCredentialsProvider.java", "BodyUseAPI": ["com.google.auth.oauth2.DefaultCredentialsProvider.readStream(java.io.File)"], "Fixed commit": "474bcc027ab2e6c9b3153c67c29582e4ffacdd66", "Url": "https://api.github.com/repos/anthmgoogle/google-auth-library-java", "Date": "2015-07-01T18:31:39Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (budgetreappropriations != null) for (org.egov.egf.budget.domain.model.BudgetReAppropriation budgetReAppropriation : budgetreappropriations) { if ((((budgetReAppropriation.getBudgetDetail()) != null) && ((budgetReAppropriation.getBudgetDetail().getId()) != null)) && ((budgetReAppropriation.getBudgetDetail().getTenantId()) != null)) { org.egov.egf.budget.domain.model.BudgetDetail budgetDetail = budgetDetailRepository.findById(budgetReAppropriation.getBudgetDetail()); if (budgetDetail == null) { throw new org.egov.common.domain.exception.InvalidDataException(\"budgetDetail\", \"budgetDetail.invalid\", \" Invalid budgetDetail\"); } budgetReAppropriation.setBudgetDetail(budgetDetail); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/7245/buggy-version/financials.egf-budget.src.main.java.org.egov.egf.budget.domain.service.BudgetReAppropriationService.java", "BodyUseAPI": [], "Fixed commit": "527789886dfd94d489b34b4afb3fed0cb0afd202", "Url": "https://api.github.com/repos/egovernments/egov-services", "Date": "2017-07-19T10:35:42Z"},
{"Line": "=>441", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (config.isQuotesEnabled(this.channel)) { fileIO.writeQuotesToDatabase(quotes); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/4401/buggy-version/src.com.afome.ChatBot.TwitchChatConnection.java", "BodyUseAPI": [], "Fixed commit": "ba867e0ef8980f6a3b6b4df30b80c583a80121e9", "Url": "https://api.github.com/repos/andyperfect/AndyPerfectBot", "Date": "2016-10-28T22:32:35Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (obj instanceof de.unibonn.iai.eis.luzzu.cache.JenaCacheObject) { _obj = ((de.unibonn.iai.eis.luzzu.cache.JenaCacheObject<?>) (obj)).deserialise(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/2860/buggy-version/luzzu-annotations.src.main.java.de.unibonn.iai.eis.luzzu.annotations.QualityReport.java", "BodyUseAPI": [], "Fixed commit": "3af56532541ba07681f8063d7345da2db1bae92c", "Url": "https://api.github.com/repos/EIS-Bonn/Luzzu", "Date": "2015-12-08T09:46:17Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (obj instanceof de.unibonn.iai.eis.luzzu.cache.JenaCacheObject) { _obj = ((de.unibonn.iai.eis.luzzu.cache.JenaCacheObject<?>) (obj)).deserialise(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/2860/buggy-version/luzzu-annotations.src.main.java.de.unibonn.iai.eis.luzzu.annotations.QualityReport.java", "BodyUseAPI": [], "Fixed commit": "3af56532541ba07681f8063d7345da2db1bae92c", "Url": "https://api.github.com/repos/EIS-Bonn/Luzzu", "Date": "2015-12-08T09:46:17Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (obj instanceof de.unibonn.iai.eis.luzzu.cache.JenaCacheObject) { _obj = ((de.unibonn.iai.eis.luzzu.cache.JenaCacheObject<?>) (obj)).deserialise(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/2860/buggy-version/luzzu-annotations.src.main.java.de.unibonn.iai.eis.luzzu.annotations.QualityReport.java", "BodyUseAPI": [], "Fixed commit": "3af56532541ba07681f8063d7345da2db1bae92c", "Url": "https://api.github.com/repos/EIS-Bonn/Luzzu", "Date": "2015-12-08T09:46:17Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["session.getNamedQuery(\"addWallMessage\").setParameter(\"sender\", sender).setParameter(\"wallPostId\", wallPostId).setParameter(\"message\", message).uniqueResult()", "org.hibernate.Session.load(java.lang.Class,long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(wp.getMessages().contains(newMessage))) { wp.addMessage(newMessage); session.saveOrUpdate(wp); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/4419/buggy-version/src.main.java.com.socialnet.dao.impl.HibernateMessageDao.java", "BodyUseAPI": ["org.hibernate.Session.saveOrUpdate(com.socialnet.model.WallPost)", "com.socialnet.model.WallPost.addMessage(com.socialnet.model.WallMessage)"], "Fixed commit": "66e1e734e9dbea9070e5a1116a1f9cf387b03cfd", "Url": "https://api.github.com/repos/wanderingivan/socialnet-example", "Date": "2017-05-11T21:05:41Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mellisuga.dao.VoteDAO.queryCountByAidVoteType(java.util.HashMap<java.lang.String, java.lang.Object>)", "com.mellisuga.dao.VoteDAO.queryCountByAidVoteType(java.util.HashMap<java.lang.String, java.lang.Object>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((voteUpCount == 0) && (voteDownCount == 0)) { answerWeight = 0.0; }else { answerWeight = com.mellisuga.function.WilsonScoreInterval.getWSI(voteUpCount, voteDownCount); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/6396/buggy-version/src.com.mellisuga.servlet.QuestionDetailsServlet.java", "BodyUseAPI": ["com.mellisuga.function.WilsonScoreInterval.getWSI(int,int)"], "Fixed commit": "bfa2426eca2ef4c32779d4058da42995d526ccc7", "Url": "https://api.github.com/repos/chromon/mellisuga", "Date": "2015-12-08T13:53:43Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(request.getParameter(\"itemId\"))", "java.lang.Integer.parseInt(request.getParameter(\"renterId\"))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (checkinItem(itemId, renterId)) { request.getSession().setAttribute(\"showMessage\", lis.MainMenu.createMessage(\"The item was checked in.\")); }else { request.getSession().setAttribute(\"showMessage\", lis.MainMenu.createError(\"The item was not checked out to that user.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/8995/buggy-version/src.java.lis.ItemCheckInController.java", "BodyUseAPI": [], "Fixed commit": "0e8837bbbc181b2c5c512b93b82b7ba0b5cba96c", "Url": "https://api.github.com/repos/kinchler/TI04_LIS", "Date": "2015-12-06T20:57:26Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Collection.items.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (renterID != (temp.getRenterId())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/8995/buggy-version/src.java.lis.ItemCheckInController.java", "BodyUseAPI": [], "Fixed commit": "0e8837bbbc181b2c5c512b93b82b7ba0b5cba96c", "Url": "https://api.github.com/repos/kinchler/TI04_LIS", "Date": "2015-12-06T20:57:26Z"},
{"Line": "=>674", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (optItemtoModify == 0) { java.lang.System.out.println(\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/3728/buggy-version/src.Client.java", "BodyUseAPI": [], "Fixed commit": "22ab84a478741ee87c178e818b84563743d0e31b", "Url": "https://api.github.com/repos/Stannisthemanis/ProjectoSd", "Date": "2014-10-26T20:34:45Z"},
{"Line": "=>574", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == 0) i = 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/6041/buggy-version/de.bund.bfr.knime.openkrise.db.src.de.bund.bfr.knime.openkrise.db.imports.custom.bfrnewformat.TraceGenerator.java", "BodyUseAPI": [], "Fixed commit": "a60a72418bdf59a728bd1881c7457443447af930", "Url": "https://api.github.com/repos/SiLeBAT/BfROpenLab", "Date": "2015-11-09T12:19:37Z"},
{"Line": "=>403", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (rotation != null) gotRotation = android.hardware.SensorManager.getRotationMatrix(rotation, identity, smoothedAccel, smoothedCompass);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/5927/buggy-version/app.src.main.java.plu.capstone.fragments.SensorsFragment.java", "BodyUseAPI": ["android.hardware.SensorManager.getRotationMatrix(float[],float[],float[],float[])"], "Fixed commit": "0f275bf5159a470d8551cc5684facbc628720f8f", "Url": "https://api.github.com/repos/Chris-Boe/ARCapstone", "Date": "2017-05-03T00:29:52Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["us.ihmc.commonWalkingControlModules.bipedSupportPolygons.BipedSupportPolygons.getFootPolygonInSoleFrame(us.ihmc.commonWalkingControlModules.controlModules.foot.OnToesState)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (footPolygonInSoleFrame.isPointInside(exitCMP2d)) rayOrigin = exitCMP2d; else rayOrigin = footPolygonInSoleFrame.getCentroid();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/8539/buggy-version/CommonWalkingControlModules.src.us.ihmc.commonWalkingControlModules.controlModules.foot.OnToesState.java", "BodyUseAPI": ["us.ihmc.robotics.geometry.FrameConvexPolygon2d.getCentroid()"], "Fixed commit": "c5f5849749277efbacccc9fd5a9ddaeaeba7da84", "Url": "https://api.github.com/repos/ihmcrobotics/ihmc-open-robotics-software", "Date": "2016-04-19T21:56:54Z"},
{"Line": "=>344", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.weasis.core.api.util.FileUtil.getValidFileName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((seriesName.length()) > 30) { buffer.append(seriesName, 0, 27); buffer.append(\"...\"); }else { buffer.append(seriesName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/2395/buggy-version/weasis-dicom.weasis-dicom-explorer.src.main.java.org.weasis.dicom.explorer.LocalExport.java", "BodyUseAPI": ["java.lang.StringBuffer.append(java.lang.String)", "java.lang.StringBuffer.append(java.lang.String,int,int)"], "Fixed commit": "e4ffe12678d711e4afe4fc66af2a5b19590997e3", "Url": "https://api.github.com/repos/nroduit/Weasis", "Date": "2013-05-14T06:56:45Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((open) && ((playersIn.get(i).amountToCall) == 0)) { cleanRound = true; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/2958/buggy-version/HandOfPoker.java", "BodyUseAPI": [], "Fixed commit": "af430f85d21bdc37bc27a061c1a38ac400f0496a", "Url": "https://api.github.com/repos/COMP30050DHK/PokerBot", "Date": "2017-04-30T21:18:34Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((m.get(cn)) instanceof java.util.List) { vals.add(getValueForSerializer(m.get(cn).toString(), serializer)); }else { vals.add(getValueForSerializer(m.get(cn), serializer)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/6208/buggy-version/plugin.jvm.src.main.java.com.twosigma.beaker.table.TableDisplay.java", "BodyUseAPI": [], "Fixed commit": "4fdb5f7a5e02e1d406cf982783ccb7891a96e1ec", "Url": "https://api.github.com/repos/twosigma/beakerx", "Date": "2016-10-21T12:50:19Z"},
{"Line": "=>511", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Common.src.length()) > 0) { com.squareup.picasso.Picasso.with(getBaseContext()).load(Common.src).into(view); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/1090/buggy-version/app.src.main.java.com.onelio.connectu.HomePage.java", "BodyUseAPI": [], "Fixed commit": "e1c0901ee5a507440f347c9bbb2d6702ed21ae6d", "Url": "https://api.github.com/repos/Onelio/ConnectU", "Date": "2017-03-05T20:36:36Z"},
{"Line": "=>456", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (s.equalsIgnoreCase(\"EntropyFVS\")) result.add(Preprocessing_Algorithm.FVS_Entropy); else if (s.equalsIgnoreCase(\"CorrelationFVS\")) result.add(Preprocessing_Algorithm.FVS_Correlation); else if (s.equalsIgnoreCase(\"cfs\")) result.add(Preprocessing_Algorithm.FS_CFS); else if (s.equalsIgnoreCase(\"consistency\")) result.add(Preprocessing_Algorithm.FS_Consistency); else if (s.equalsIgnoreCase(\"projection\")) result.add(Preprocessing_Algorithm.FS_RandomProjection); else if (s.equalsIgnoreCase(\"reservoir\")) result.add(Preprocessing_Algorithm.IS_Reservoir); else if (s.equalsIgnoreCase(\"misclassified\")) result.add(Preprocessing_Algorithm.IS_Misclassified);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/185/buggy-version/src.edu.nctu.lalala.util.FVSHelper.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)"], "Fixed commit": "a6422ad3501daee9c367bdf8b8a64fc1c7790db7", "Url": "https://api.github.com/repos/gunarto90/FVS", "Date": "2017-04-12T12:33:05Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((random.nextDouble()) <= chance) { e.getDrops().add(new org.bukkit.inventory.ItemStack(this.plugin.citem)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/3699/buggy-version/src.me.xinito.custommobdrops.events.EntityDeath.java", "BodyUseAPI": [], "Fixed commit": "b2ae5c5acd6bd64a0d73d7cf1d56e26988ff0b95", "Url": "https://api.github.com/repos/Xinito/CustomMobDrops", "Date": "2015-07-24T10:43:37Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (log.isDebugEnabled()) { log.debug(\"Error while parsing the integer\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/7/buggy-version/components.oauth.org.wso2.carbon.identity.oauth.src.main.java.org.wso2.carbon.identity.oauth2.dao.TokenMgtDAO.java", "BodyUseAPI": [], "Fixed commit": "f76802963f7798539c6a10f23bc87cc17f1f9c57", "Url": "https://api.github.com/repos/thanujalk/carbon-identity", "Date": "2015-06-14T12:26:34Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isDriver) this.setAuthRole(app.entity.Worker.DRIVER_ROLE); else this.setAuthRole(app.entity.Worker.DISPATCHER_ROLE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/5048/buggy-version/src.main.java.app.entity.Worker.java", "BodyUseAPI": [], "Fixed commit": "6d21ef50b11c737efac98c4d6a7751ef00579b9a", "Url": "https://api.github.com/repos/alexfrankiv/tataxi_proto", "Date": "2017-04-08T10:10:25Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((stack != null) && ((stack.getItem()) instanceof com.builtbroken.mc.api.items.weapons.IItemAmmo)) { if ((ammoType) == null) { return true; }else if ((((com.builtbroken.mc.api.items.weapons.IItemAmmo) (stack.getItem())).getAmmoData(stack)) != null) { return (ammoType) == (((com.builtbroken.mc.api.items.weapons.IItemAmmo) (stack.getItem())).getAmmoData(stack).getAmmoType()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/6956/buggy-version/src.main.scala.com.builtbroken.mc.prefab.gui.slot.SlotAmmo.java", "BodyUseAPI": ["((com.builtbroken.mc.api.items.weapons.IItemAmmo) (stack.getItem())).getAmmoData(net.minecraft.item.ItemStack)", "net.minecraft.item.ItemStack.getItem()", "((com.builtbroken.mc.api.items.weapons.IItemAmmo) (stack.getItem())).getAmmoData(net.minecraft.item.ItemStack)", "net.minecraft.item.ItemStack.getItem()", "((com.builtbroken.mc.api.items.weapons.IItemAmmo) (stack.getItem())).getAmmoData(stack).getAmmoType()"], "Fixed commit": "5c119449847ce849af1e78604002ae9380c88511", "Url": "https://api.github.com/repos/VoltzEngine-Project/Prefabs", "Date": "2017-05-06T20:50:24Z"},
{"Line": "=>348", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(sequence.movePrevious())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/377/buggy-version/src.ca.weblite.netbeans.mirah.lexer.DocumentQuery.java", "BodyUseAPI": [], "Fixed commit": "2dc0f687a93c2f18888462ade8f4cfb4ffba78bc", "Url": "https://api.github.com/repos/shannah/mirah-nbm", "Date": "2014-09-22T17:48:24Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isActiveInWorld(chunk.getWorld()))) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/9166/buggy-version/src.main.java.de.domisum.pistonjammer.PistonJammerListener.java", "BodyUseAPI": [], "Fixed commit": "f481f9bc4c8c3092e60e900542b7a15b319e4758", "Url": "https://api.github.com/repos/domisum/PistonJammer", "Date": "2017-08-12T11:17:21Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["context.getExternalContext().getSessionMap().get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (bean != null) { bean.setTheme(s); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/2777/buggy-version/sdmxsax-faces.src.java.sdmxsaxfaces.beans.GuestPreferences.java", "BodyUseAPI": ["sdmxsaxfaces.beans.GuestPreferences.setTheme(java.lang.String)"], "Fixed commit": "73ae0dc88ce0dc62038cb0827686642d8a237e54", "Url": "https://api.github.com/repos/kalessine/sdmxsax-faces", "Date": "2015-04-19T13:58:15Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["context.getExternalContext().getSessionMap().get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (bean != null) { return bean.getTheme(); }else { return \"redmond\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/2777/buggy-version/sdmxsax-faces.src.java.sdmxsaxfaces.beans.GuestPreferences.java", "BodyUseAPI": ["sdmxsaxfaces.beans.GuestPreferences.getTheme()"], "Fixed commit": "73ae0dc88ce0dc62038cb0827686642d8a237e54", "Url": "https://api.github.com/repos/kalessine/sdmxsax-faces", "Date": "2015-04-19T13:58:15Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (files != null) { for (java.io.File f : files) { io.cortex.cortexapi.models.user.CortexClassifier classifier; com.fasterxml.jackson.databind.ObjectMapper mapper = new com.fasterxml.jackson.databind.ObjectMapper(); try { classifier = mapper.readValue(new java.io.File(((f.getPath()) + \"/metadata\")), io.cortex.cortexapi.models.user.CortexClassifier.class); classifiers.add(classifier); } catch (java.io.IOException e) { e.printStackTrace(); return returnObject; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/1452/buggy-version/src.main.java.io.cortex.cortexapi.controller.UserController.java", "BodyUseAPI": [], "Fixed commit": "c97ec7b5352c26e256c274321ab50c85ce2699ae", "Url": "https://api.github.com/repos/quasarjohn/CortexAPI", "Date": "2017-10-16T11:54:47Z"},
{"Line": "=>309", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.redomar.game.Game.getDummy()) != null) { com.redomar.game.Game.getLevel().removeEntity(com.redomar.game.Game.getDummy()); com.redomar.game.Game.setNpc(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/8063/buggy-version/src.com.redomar.game.Game.java", "BodyUseAPI": [], "Fixed commit": "bb898faee198db2ab07b467cb6f9513e6424e0d2", "Url": "https://api.github.com/repos/redomar/JavaGame", "Date": "2014-09-01T01:14:26Z"},
{"Line": "=>895", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (heuristic == (org.dllearner.learningproblems.Heuristics.HeuristicType.AMEASURE)) { accuracyMethod = \"standard\"; }else if (heuristic == (org.dllearner.learningproblems.Heuristics.HeuristicType.FMEASURE)) { accuracyMethod = \"fmeasure\"; }else if (heuristic == (org.dllearner.learningproblems.Heuristics.HeuristicType.GEN_FMEASURE)) { accuracyMethod = \"generalised_fmeasure\"; }else if (heuristic == (org.dllearner.learningproblems.Heuristics.HeuristicType.JACCARD)) { accuracyMethod = \"jaccard\"; }else if (heuristic == (org.dllearner.learningproblems.Heuristics.HeuristicType.PRED_ACC)) { accuracyMethod = \"pred_acc\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/7855/buggy-version/components-core.src.main.java.org.dllearner.learningproblems.ClassLearningProblem.java", "BodyUseAPI": [], "Fixed commit": "a0165559452533f4c5c3ade8efa30a008d113608", "Url": "https://api.github.com/repos/AKSW/DL-Learner", "Date": "2014-12-19T15:40:15Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((src == null) || (tgt == null)) { busmod.getContainer().logger().fatal(\"bad format of mock descriptor string\"); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/3141/buggy-version/src.main.java.ch.rgw.vertx.mock.SyntheticHandler.java", "BodyUseAPI": [], "Fixed commit": "85b90348e9f784d0e85e56f9c81a5bbd129dcae3", "Url": "https://api.github.com/repos/rgwch/vertx-mod-mock", "Date": "2015-04-14T19:21:26Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((item.getType()) == (org.bukkit.Material.AIR)) { return false; }else { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/4070/buggy-version/WowSuchCleaner.src.main.java.io.github.Cnly.WowSuchCleaner.WowSuchCleaner.config.auction.DefaultItem.java", "BodyUseAPI": [], "Fixed commit": "41683ca09e1709ee4d9bb37f83b2757808331e27", "Url": "https://api.github.com/repos/Cnly/WowSuchCleaner", "Date": "2016-02-10T13:28:26Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.entity) instanceof net.minecraft.entity.player.EntityPlayer) { micdoodle8.mods.galacticraft.core.entities.player.GCPlayerStats stats = micdoodle8.mods.galacticraft.core.entities.player.GCPlayerStats.get(((net.minecraft.entity.player.EntityPlayerMP) (event.entity))); if (stats != null) stats.oxygenSetupValid = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/5451/buggy-version/src.main.java.zmaster587.advancedRocketry.integration.GalacticCraftHandler.java", "BodyUseAPI": ["micdoodle8.mods.galacticraft.core.entities.player.GCPlayerStats.get(((net.minecraft.entity.player.EntityPlayerMP) (event.entity)))"], "Fixed commit": "508eb666ee915935b8cdcd4488ad34b85a1c7130", "Url": "https://api.github.com/repos/zmaster587/AdvancedRocketry", "Date": "2016-01-01T04:33:20Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (request.getSession().getAttribute(\"validationstring\").equals(\"error\")) { request.getRequestDispatcher(\"WEB-INF/jsp/register/register.jspx\").forward(request, response); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/1229/buggy-version/Frontend.src.main.java.com.web.bokningstjanst.UtilServlet.java", "BodyUseAPI": ["javax.servlet.http.HttpServletRequest.getRequestDispatcher(java.lang.String)", "request.getRequestDispatcher(\"WEB-INF/jsp/register/register.jspx\").forward(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"], "Fixed commit": "973a2cac442e50e255111aa73298a593fbd7b107", "Url": "https://api.github.com/repos/philipbodell/Bokningstjanst", "Date": "2014-01-22T14:48:26Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (response.equals(\"invalid_password\")) { error_message.setText(R.string.invalid_password); login_username.requestFocus(); }else if (response instanceof com.example.andy.api_model.User) { this.user = ((com.example.andy.api_model.User) (response)); android.util.Log.d(com.example.andy.saints_xctf_android.LoginDialogFragment.LOG_TAG, (\"The User Object Received: \" + (response.toString()))); if (username.equals(user.getUsername())) { com.fasterxml.jackson.databind.ObjectMapper mapper = new com.fasterxml.jackson.databind.ObjectMapper(); java.lang.String userJsonString = \"\"; try { userJsonString = mapper.writeValueAsString(user); } catch (com.fasterxml.jackson.core.JsonProcessingException e) { android.util.Log.e(com.example.andy.saints_xctf_android.LoginDialogFragment.LOG_TAG, \"Unable to store user data in preferences.\"); android.util.Log.e(com.example.andy.saints_xctf_android.LoginDialogFragment.LOG_TAG, e.getMessage()); } android.content.SharedPreferences sp = getActivity().getSharedPreferences(com.example.andy.saints_xctf_android.LoginDialogFragment.PREFS_NAME, 0); android.content.SharedPreferences.Editor editor = sp.edit(); editor.putString(\"user\", userJsonString); editor.putString(\"username\", username); editor.putString(\"first\", user.getFirst()); editor.putString(\"last\", user.getLast()); editor.apply(); d.dismiss(); ((com.example.andy.saints_xctf_android.MainActivity) (getActivity())).signIn(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/685/buggy-version/app.src.main.java.com.example.andy.saints_xctf_android.LoginDialogFragment.java", "BodyUseAPI": ["java.lang.Object.toString()", "android.util.Log.d(java.lang.String,java.lang.String)"], "Fixed commit": "c858666aa7c48ed5f268a2a59c1a58a1b167321a", "Url": "https://api.github.com/repos/AJarombek/saints-xctf-android", "Date": "2017-01-21T03:27:53Z"},
{"Line": "=>434", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.min(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (messageRead < messageToRead) { com.alibaba.rocketmq.common.message.StashableMessage[] result = new com.alibaba.rocketmq.common.message.StashableMessage[messageRead]; java.lang.System.arraycopy(messages, 0, result, 0, messageRead); return result; }else { return messages; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/4018/buggy-version/rocketmq-client.src.main.java.com.alibaba.rocketmq.client.producer.concurrent.DefaultLocalMessageStore.java", "BodyUseAPI": ["java.lang.System.arraycopy(com.alibaba.rocketmq.common.message.StashableMessage[],int,com.alibaba.rocketmq.common.message.StashableMessage[],int,int)"], "Fixed commit": "26af5146376cc9045d80c38cc55b956c539738f1", "Url": "https://api.github.com/repos/lizhanhui/Alibaba_RocketMQ", "Date": "2014-12-29T06:20:28Z"},
{"Line": "=>362", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isHead) { setupRender(itemStack, x, y, z, 0.125, 0.1875, 0.0, 0.875, 0.875, 0.125); setupRender(itemStack, x, y, z, 0.0, 0.1875, 0.125, 1.0, 0.3125, 1.0); }else { setupRender(itemStack, x, y, z, 0.0, 0.1875, 0.0, 1.0, 0.3125, 1.0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/3197/buggy-version/src.main.java.carpentersblocks.renderer.BlockHandlerCarpentersBed.java", "BodyUseAPI": [], "Fixed commit": "35e4ed074cad3fdf3181162ad8beffdf80890a4d", "Url": "https://api.github.com/repos/Mineshopper/carpentersblocks", "Date": "2014-07-19T06:28:18Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.mpg.imeji.presentation.util.UrlHelper.getParameterValue(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (q != null) { setQuery(java.net.URLEncoder.encode(q, \"UTF-8\")); setSearchQuery(de.mpg.imeji.presentation.search.URLQueryTransformer.parseStringQuery(query)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/6163/buggy-version/imeji_presentation.src.main.java.de.mpg.imeji.presentation.image.ImagesBean.java", "BodyUseAPI": ["de.mpg.imeji.presentation.image.ImagesBean.setQuery(java.lang.String)", "java.net.URLEncoder.encode(java.lang.String,java.lang.String)"], "Fixed commit": "5a567122378c50ad9a4e41d23d0a51ef28c9b7b2", "Url": "https://api.github.com/repos/imeji-community/imeji", "Date": "2013-02-07T16:30:56Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((columnDefinition.containerKeyName) != null) { containerKeyName = columnDefinition.containerKeyName; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/1035/buggy-version/compiler.src.main.java.com.raizlabs.android.dbflow.processor.writer.LoadCursorWriter.java", "BodyUseAPI": [], "Fixed commit": "c0902a95428dda7c66b6ffa25f192e24b6790aca", "Url": "https://api.github.com/repos/Raizlabs/DBFlow", "Date": "2015-02-10T01:49:35Z"},
{"Line": "=>346", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.redhat.lightblue.mediator.Mediator.newCtx(com.redhat.lightblue.crud.FindRequest,Operation.FIND)", "com.redhat.lightblue.mediator.OperationContext.getOutputDocumentsWithoutErrors()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((foundDocuments != null) && ((foundDocuments.size()) == (ctx.getDocuments().size()))) { ctx.setStatus(OperationStatus.COMPLETE); }else if ((foundDocuments != null) && (!(foundDocuments.isEmpty()))) { ctx.setStatus(OperationStatus.PARTIAL); }else { ctx.setStatus(OperationStatus.ERROR); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/4262/buggy-version/crud.src.main.java.com.redhat.lightblue.mediator.Mediator.java", "BodyUseAPI": ["com.redhat.lightblue.mediator.OperationContext.setStatus(OperationStatus.PARTIAL)", "com.redhat.lightblue.mediator.OperationContext.setStatus(OperationStatus.COMPLETE)", "com.redhat.lightblue.mediator.OperationContext.setStatus(OperationStatus.ERROR)", "java.util.List<com.redhat.lightblue.util.JsonDoc>.isEmpty()"], "Fixed commit": "4a24cdfa3274d237252fbcbcaf4174db70cacb7e", "Url": "https://api.github.com/repos/lightblue-platform/lightblue-core", "Date": "2015-01-27T19:23:09Z"},
{"Line": "=>318", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (wn != null) { this.minOverlappingViews = wn.getMinOverlappingViews(); this.avgOverlappingViews = wn.getAvgOverlappingViews(); mpicbg.spim.io.IOFunctions.println((((((\"(\" + (new java.util.Date(java.lang.System.currentTimeMillis()))) + \"): Minimal number of overlapping views: \") + (getMinOverlappingViews())) + \", using \") + (this.minOverlappingViews = java.lang.Math.max(1, this.minOverlappingViews)))); mpicbg.spim.io.IOFunctions.println((((((\"(\" + (new java.util.Date(java.lang.System.currentTimeMillis()))) + \"): Average number of overlapping views: \") + (getAvgOverlappingViews())) + \", using \") + (this.avgOverlappingViews = java.lang.Math.max(1, this.avgOverlappingViews)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/4877/buggy-version/src.main.java.spim.process.fusion.deconvolution.ProcessForDeconvolution.java", "BodyUseAPI": ["spim.process.fusion.deconvolution.WeightNormalizer.getAvgOverlappingViews()", "spim.process.fusion.deconvolution.WeightNormalizer.getMinOverlappingViews()"], "Fixed commit": "16134c13b03f9cdc136dc13231c27a857fc8fb93", "Url": "https://api.github.com/repos/Intelligent-Imaging/SPIM_Registration", "Date": "2015-09-28T10:38:51Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((upper + lower) < (java.lang.Math.abs(b[i]))) { throw new java.lang.RuntimeException(\"what the dick man\"); }else if (upper == (b[i])) { for (int j = 0; j < (a[0].length); j++) { gui.MineButton temp = borderTiles.get(j); if ((a[i][j]) == 1) flag(temp.x(), temp.y()); else if ((a[i][j]) == (-1)) { borderTiles.get(j).click(true); for (int k = 0; k < (a.length); k++) { a[i][k] = 0; } } } }else if ((-lower) == (b[i])) { for (int j = 0; j < (a[0].length); j++) { gui.MineButton temp = borderTiles.get(j); if ((a[i][j]) == (-1)) flag(temp.x(), temp.y()); else if ((a[i][j]) == 1) { borderTiles.get(j).click(true); for (int k = 0; k < (a.length); k++) { a[i][k] = 0; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/3214/buggy-version/src.gui.Solver.java", "BodyUseAPI": [], "Fixed commit": "f887bbd1091c73ecfddb96b7f9d797c7548c1914", "Url": "https://api.github.com/repos/digli/minesweeper", "Date": "2014-09-03T16:19:34Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (availableSlots.isEmpty()) { availableSlots = new java.util.ArrayList<java.lang.Integer>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/2273/buggy-version/src.main.java.redis.clients.util.ClusterNodeInformationParser.java", "BodyUseAPI": [], "Fixed commit": "dbc0b85e337f549540896081294312d459d64ac9", "Url": "https://api.github.com/repos/carlvine500/jedis", "Date": "2015-08-21T07:55:41Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.LOLLIPOP)) { fab.setImageResource(R.drawable.icon_next); }else { fab.setImageResource(R.drawable.image_next); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/2993/buggy-version/app.src.main.java.com.pedrodavidlp.footballmanager.view.activity.JoinGroupActivity.java", "BodyUseAPI": [], "Fixed commit": "8c47a7ee00243a2184c04cd22affddd1241fdee4", "Url": "https://api.github.com/repos/pedrodavidmcr/PlayFootbalManager", "Date": "2016-10-20T08:35:31Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class<?>.getName()", "java.lang.Class<? extends java.lang.Object>.getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(referencedValueClassName.equals(javaClassName))) { result.addConstraint(referencedValueClassName, javaClassName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/755/buggy-version/generator.src.main.java.knorxx.framework.generator.order.StaticUsageOrderSorter.java", "BodyUseAPI": ["knorxx.framework.generator.order.OrderingResult.addConstraint(java.lang.String,java.lang.String)"], "Fixed commit": "becf5e7cd9ee9e17a3afb12dd1ad5b0021d4be59", "Url": "https://api.github.com/repos/janScheible/knorxx", "Date": "2014-08-30T08:30:19Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (count != 0) { player.sendMessage(((((\"[jaoPost] \" + (org.bukkit.ChatColor.GREEN)) + \"jaotan\u304b\u3089\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\") + count) + \"\u4ef6\u3042\u308a\u307e\u3059\uff01\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/7685/buggy-version/src.main.java.com.jaoafa.jaoPost.Event.AdminMessageJoin.java", "BodyUseAPI": ["org.bukkit.entity.Player.sendMessage(((((\"[jaoPost] \" + (org.bukkit.ChatColor.GREEN)) + \"jaotan\u304b\u3089\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\") + count) + \"\u4ef6\u3042\u308a\u307e\u3059\uff01\"))"], "Fixed commit": "5782ead05156a40c97c8652f9f66f960f63ce567", "Url": "https://api.github.com/repos/jaoafa/jaoPost", "Date": "2017-01-09T08:08:38Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((imageRaw != null) && ((imageRaw.length) > 0)) android.util.Base64.encodeToString(imageRaw, Base64.DEFAULT);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/9049/buggy-version/src.dynamix_framework.dynamix-framework.src.eu.smartsantander.androidExperimentation.tabs.statsTab.java", "BodyUseAPI": ["android.util.Base64.encodeToString(byte[],Base64.DEFAULT)"], "Fixed commit": "da6dd361cec330f6c09035e075bd0b649244440e", "Url": "https://api.github.com/repos/theodori/AndroidExperimentation", "Date": "2013-11-24T13:44:01Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.ServletConfig.getInitParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(com.bugull.mongo.utils.StringUtil.isEmpty(md5))) { contentMD5 = java.lang.Boolean.getBoolean(md5); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/5395/buggy-version/bugu-mongo-fs.src.main.java.com.bugull.mongo.fs.UploadedFileServlet.java", "BodyUseAPI": ["java.lang.Boolean.getBoolean(java.lang.String)"], "Fixed commit": "a9fec0fa6d1425a4e9030063a48079f2eccdf190", "Url": "https://api.github.com/repos/xbwen/bugu-mongo", "Date": "2016-08-01T03:11:44Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["business.workTime.getTimeWorkCloseWebservice()", "business.workTime.getTimeWorkOpenWebservice()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!(open.equals(\"\"))) && (!(close.equals(\"\")))) ((ir.rasen.charsoo.view.widgets.TextViewFont) (findViewById(R.id.info_workTime))).setText(workTime); else findViewById(R.id.info_workTimeView).setVisibility(View.GONE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/8142/buggy-version/app.src.main.java.ir.rasen.charsoo.view.activity.business.ActivityBusinessContactInfo.java", "BodyUseAPI": [], "Fixed commit": "bb30f309b378ccf44d9bdf7835258ffb2230e397", "Url": "https://api.github.com/repos/rasenir/charsoo", "Date": "2015-08-09T10:01:40Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((getBitmapFromCache(key)) == null) && (bitmap == null)) { com.mannmade.newsreadersearch.JSONParser.getInstance().getImageCache().put(key, android.graphics.BitmapFactory.decodeResource(context.getResources(), R.drawable.ic_business, null)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/9219/buggy-version/app.src.main.java.com.mannmade.newsreadersearch.ArticleAdapter.java", "BodyUseAPI": ["com.mannmade.newsreadersearch.JSONParser.getInstance().getImageCache().put(java.lang.String,android.graphics.BitmapFactory.decodeResource(context.getResources(), R.drawable.ic_business, null))"], "Fixed commit": "29d75753a4b8fa3c8f628f086a8d04556870bf95", "Url": "https://api.github.com/repos/Eg0Jemima/NewsReaderSearch", "Date": "2016-06-08T14:29:58Z"},
{"Line": "=>625", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (retryCount >= 5) { throw e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/3797/buggy-version/blur-store.src.main.java.org.apache.blur.store.hdfs.HdfsDirectory.java", "BodyUseAPI": [], "Fixed commit": "9623f67ac1e3e94b330b9564070540ecc04c9d23", "Url": "https://api.github.com/repos/apache/incubator-blur", "Date": "2015-04-27T12:09:39Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (compare < 0) { return -1; }else if (compare > 0) { return 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/983/buggy-version/src.org.algorithms.part1.week4.assignment.Solver.java", "BodyUseAPI": [], "Fixed commit": "e6511d4d241a25ce7d14fee65897cf31e5c06506", "Url": "https://api.github.com/repos/dredasty/studying", "Date": "2016-11-10T04:23:03Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isVisible()) { game.tick(delta, total, slow); game.draw(delta, total, slow, game.gameScreen.getImage(), game.gameScreen.getGraphics()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/2210/buggy-version/src.io.github.quackmatic.gloop.GameFrame.java", "BodyUseAPI": [], "Fixed commit": "bb95377212d5a5a601167a48b398d721efa7e8ce", "Url": "https://api.github.com/repos/Quackmatic/gloop", "Date": "2014-08-23T09:06:01Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cookies == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/3566/buggy-version/herald-session.herald-session-jee-api.src.main.java.cn.edu.seu.herald.session.jee.SessionServiceClient.java", "BodyUseAPI": [], "Fixed commit": "091a263d30b5c96b7dc1e70857cef5785250b9ec", "Url": "https://api.github.com/repos/HeraldStudio/herald-base-platform", "Date": "2012-10-25T12:19:54Z"},
{"Line": "=>1286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((res.resourceName) != null) && ((res.resourceName.length()) > 0)) { soot.jimple.infoflow.android.resources.ARSCFileParser.AbstractResource r = resType.getResourceByName(res.resourceName); if (r != null) { res.resourceID = r.resourceID; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/8218/buggy-version/src.soot.jimple.infoflow.android.resources.ARSCFileParser.java", "BodyUseAPI": ["soot.jimple.infoflow.android.resources.ARSCFileParser.ResType.getResourceByName(java.lang.String)"], "Fixed commit": "d5ef335a0eed433db9c4772fd986b49e34c0fd65", "Url": "https://api.github.com/repos/jpstotz/soot-infoflow-android", "Date": "2017-03-13T12:32:10Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Input.getText().toString().trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((ed_text.isEmpty()) || ((ed_text.length()) == 0)) || (ed_text.equals(\"\"))) { }else { java.lang.String msg = (\"{ \\\"type\\\": \\\"message\\\", \\\"data\\\": { \\\"messageBody\\\": \\\"\" + ed_text) + \"\\\" } }\"; ws.send(msg); Input.setText(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/8213/buggy-version/app.src.main.java.me.edgeconsult.chat.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "77b88883743abffdbfda8fcce4125f1449860c01", "Url": "https://api.github.com/repos/iunanton/android-chat", "Date": "2017-09-17T23:26:42Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mRoot) != null) { for (int i = 0; i < (mColumnCount); i++) { org.gdg.frisbee.android.view.ListView lv = ((org.gdg.frisbee.android.view.ListView) (mRoot.getChildAt(i))); if ((lv.getFirstVisiblePosition()) > val) val = lv.getFirstVisiblePosition(); } timber.log.Timber.d((\"Visible: \" + val)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/2728/buggy-version/app.src.main.java.org.gdg.frisbee.android.view.MyView.java", "BodyUseAPI": [], "Fixed commit": "c1fcf9d72642b842016a1db2c278a83c38006ecd", "Url": "https://api.github.com/repos/gdg-x/frisbee", "Date": "2014-06-21T13:54:28Z"},
{"Line": "=>938", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ge.research.sadl.jena.JenaBasedSadlModelValidator.subjHasPropIsDeclaration(org.eclipse.emf.ecore.EObject)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (subjHasPropInDeclaration != null) { return getType(subjHasPropInDeclaration); }else { issueAcceptor.addError(\"This appears to be a declaration isn't fully supported; should it be nested (in parentheses)\", expression); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/5015/buggy-version/sadl3.com.ge.research.sadl.parent.com.ge.research.sadl.jena.src.com.ge.research.sadl.jena.JenaBasedSadlModelValidator.java", "BodyUseAPI": ["com.ge.research.sadl.jena.JenaBasedSadlModelValidator.getType(com.ge.research.sadl.sADL.Declaration)"], "Fixed commit": "9fb4a9906596801e7215913b17d0e8e0fd662b54", "Url": "https://api.github.com/repos/crapo/sadlos2", "Date": "2017-04-10T20:18:37Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.System.getProperty(\"java.vm.name\")) == \"Dalvik\") { javax.crypto.Cipher cipher = javax.crypto.Cipher.getInstance(\"RSA/ECB/PKCS1Padding\"); }else { javax.crypto.Cipher cipher = javax.crypto.Cipher.getInstance(key.getAlgorithm()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/3884/buggy-version/src.main.java.ch.spacebase.mcprotocol.standard.packet.PacketKeyRequest.java", "BodyUseAPI": [], "Fixed commit": "621ffee0d3908e961a88adbfc816df13734127f4", "Url": "https://api.github.com/repos/Steveice10/mc-protocol-lib", "Date": "2013-08-07T11:58:52Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.System.getProperty(\"java.vm.name\")) == \"Dalvik\") { javax.crypto.Cipher cipher = javax.crypto.Cipher.getInstance(\"RSA/ECB/PKCS1Padding\"); }else { javax.crypto.Cipher cipher = javax.crypto.Cipher.getInstance(key.getAlgorithm()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/3884/buggy-version/src.main.java.ch.spacebase.mcprotocol.standard.packet.PacketKeyResponse.java", "BodyUseAPI": [], "Fixed commit": "621ffee0d3908e961a88adbfc816df13734127f4", "Url": "https://api.github.com/repos/Steveice10/mc-protocol-lib", "Date": "2013-08-07T11:58:52Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((finalMarking.size()) > 0) { for (org.processmining.models.graphbased.directed.petrinet.elements.Place place : finalMarking) { org.processmining.models.semantics.petrinet.Marking m = new org.processmining.models.semantics.petrinet.Marking(); m.add(place); fM.add(m); } return fM.toArray(new org.processmining.models.semantics.petrinet.Marking[finalMarking.size()]); }else return new org.processmining.models.semantics.petrinet.Marking[]{ new org.processmining.models.semantics.petrinet.Marking() };", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/7407/buggy-version/RapidProM.src.org.rapidprom.ioobjects.PetriNetIOObject.java", "BodyUseAPI": ["org.processmining.models.semantics.petrinet.Marking.size()", "java.util.List<org.processmining.models.semantics.petrinet.Marking>.toArray(org.processmining.models.semantics.petrinet.Marking[])"], "Fixed commit": "7aee6f152b96acd854a08d2901cec7747db387ee", "Url": "https://api.github.com/repos/rapidprom/source", "Date": "2016-05-13T15:20:11Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((list.size()) != 0) { tbData.setRowSelectionInterval(0, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/409/buggy-version/src.main.java.quiz.view.ManageDialog.java", "BodyUseAPI": [], "Fixed commit": "2e74357a9f2bfc4ea458ad76cf260334b7f956dd", "Url": "https://api.github.com/repos/budougumi0617/EnglishWordQuizApp", "Date": "2016-12-27T05:54:04Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((list.size()) != 0) { tbData.setRowSelectionInterval(0, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/409/buggy-version/src.main.java.quiz.view.ManageDialog.java", "BodyUseAPI": [], "Fixed commit": "2e74357a9f2bfc4ea458ad76cf260334b7f956dd", "Url": "https://api.github.com/repos/budougumi0617/EnglishWordQuizApp", "Date": "2016-12-27T05:54:04Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bioEnt instanceof org.intermine.model.bio.Polypeptide) { org.intermine.model.bio.Polypeptide polypeptide = ((org.intermine.model.bio.Polypeptide) (bioEnt)); if (((polypeptide.getSequence()) == null) || ((polypeptide.getSequence().getResidues()) == null)) { return null; }else { java.lang.String residues = polypeptide.getSequence().getResidues().toString(); return new org.intermine.bio.web.biojava.BioSequence(org.biojava.bio.seq.ProteinTools.createProtein(residues), polypeptide); } }else if (bioEnt instanceof org.intermine.model.bio.SequenceFeature) { org.intermine.model.bio.SequenceFeature feature = ((org.intermine.model.bio.SequenceFeature) (bioEnt)); if (((feature.getSequence()) == null) || ((feature.getSequence().getResidues()) == null)) { return null; }else { java.lang.String residues = feature.getSequence().getResidues().toString(); return new org.intermine.bio.web.biojava.BioSequence(org.biojava.bio.seq.DNATools.createDNA(residues), feature); } }else { throw new java.lang.RuntimeException(\"Sequence type not defined.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/4744/buggy-version/bio.webapp.src.org.intermine.bio.web.biojava.BioSequenceFactory.java", "BodyUseAPI": [], "Fixed commit": "a40a87a33e01787b714439d88b42953b6a726f4d", "Url": "https://api.github.com/repos/elsiklab/bovinemine", "Date": "2015-12-09T20:08:36Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((bioEntity instanceof org.intermine.model.bio.Polypeptide) || (bioEntity instanceof org.intermine.model.bio.Protein)) { bioSequence = org.intermine.bio.web.biojava.BioSequenceFactory.make(bioEntity, SequenceType.PROTEIN); }else { bioSequence = org.intermine.bio.web.biojava.BioSequenceFactory.make(bioEntity, SequenceType.DNA); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/4744/buggy-version/bio.webapp.src.org.intermine.bio.web.struts.SequenceExportAction.java", "BodyUseAPI": ["org.intermine.bio.web.biojava.BioSequenceFactory.make(org.intermine.model.bio.BioEntity,SequenceType.PROTEIN)", "org.intermine.bio.web.biojava.BioSequenceFactory.make(org.intermine.model.bio.BioEntity,SequenceType.DNA)"], "Fixed commit": "a40a87a33e01787b714439d88b42953b6a726f4d", "Url": "https://api.github.com/repos/elsiklab/bovinemine", "Date": "2015-12-09T20:08:36Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (chunk.last) iManager.setDatabaseStatus(databaseName, ODistributedServerManager.DB_STATUS.ONLINE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/7873/buggy-version/server.src.main.java.com.orientechnologies.orient.server.distributed.task.ODeployDatabaseTask.java", "BodyUseAPI": [], "Fixed commit": "7063a0da049275f635583e02dc6605e6d4cf5c96", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2014-05-21T13:40:47Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result.last) iManager.setDatabaseStatus(database.getName(), ODistributedServerManager.DB_STATUS.ONLINE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/7873/buggy-version/server.src.main.java.com.orientechnologies.orient.server.distributed.task.OCopyDatabaseChunkTask.java", "BodyUseAPI": [], "Fixed commit": "7063a0da049275f635583e02dc6605e6d4cf5c96", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2014-05-21T13:40:47Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (indexNull == 0) { return new java.util.ArrayList<>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/188/buggy-version/backend.src.main.java.eu.chessdata.backend.taskqueue.push.Worker.java", "BodyUseAPI": [], "Fixed commit": "95d6c97b801b46822df0bfaa774473c383eb4ddc", "Url": "https://api.github.com/repos/bogdan-marian/chess-data-02", "Date": "2016-09-14T20:48:15Z"},
{"Line": "=>302", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, com.jstakun.gms.android.landmarks.Layer>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (layer != null) { if (type == (com.jstakun.gms.android.landmarks.LayerManager.LAYER_ICON_LARGE)) { icon = layer.getLargeIconResource(); }else { icon = layer.getSmallIconResource(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/7043/buggy-version/GMSLib.src.com.jstakun.gms.android.landmarks.LayerManager.java", "BodyUseAPI": ["com.jstakun.gms.android.landmarks.Layer.getLargeIconResource()", "com.jstakun.gms.android.landmarks.Layer.getSmallIconResource()"], "Fixed commit": "5d6151f5ecf23b811b0ae9b861a0e6ceb004a996", "Url": "https://api.github.com/repos/jstakun/gms-world-client", "Date": "2016-08-12T06:29:12Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(p.isOnline())) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/2305/buggy-version/src.main.java.com.gamerking195.dev.thirst.listeners.UpdateListener.java", "BodyUseAPI": [], "Fixed commit": "a11873e55d7a4367609423738009c06133a56d4d", "Url": "https://api.github.com/repos/fl0gic/Thirst", "Date": "2016-10-13T12:35:34Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(p.isOnline())) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/2305/buggy-version/src.main.java.com.gamerking195.dev.thirst.listeners.UpdateListener.java", "BodyUseAPI": [], "Fixed commit": "a11873e55d7a4367609423738009c06133a56d4d", "Url": "https://api.github.com/repos/fl0gic/Thirst", "Date": "2016-10-13T12:35:34Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.Bukkit.getServer().getPlayer(java.util.UUID)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(p.isOnline())) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/2305/buggy-version/src.main.java.com.gamerking195.dev.thirst.listeners.UpdateListener.java", "BodyUseAPI": [], "Fixed commit": "a11873e55d7a4367609423738009c06133a56d4d", "Url": "https://api.github.com/repos/fl0gic/Thirst", "Date": "2016-10-13T12:35:34Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((row < 0) || (row >= (data.getRowCount()))) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/4576/buggy-version/src.org.jfree.data.DataUtilities.java", "BodyUseAPI": [], "Fixed commit": "d5ca5e85b74563ddf19ce742fc79915a0f9575ca", "Url": "https://api.github.com/repos/beaesguerra/SENG437Asmt4", "Date": "2016-03-09T01:50:41Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((column < 0) || (column >= (data.getColumnCount()))) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/4576/buggy-version/src.org.jfree.data.DataUtilities.java", "BodyUseAPI": [], "Fixed commit": "d5ca5e85b74563ddf19ce742fc79915a0f9575ca", "Url": "https://api.github.com/repos/beaesguerra/SENG437Asmt4", "Date": "2016-03-09T01:50:41Z"},
{"Line": "=>548", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((loading) != null) { loading.setSize(((getWidth()) / 3), ((getHeight()) / 3)); loading.setLocation(((getWidth()) / 3), ((getHeight()) / 3)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/5862/buggy-version/PaintNotes.src.main.java.view.View.java", "BodyUseAPI": [], "Fixed commit": "dd7d132575fb17ad656a59114c8152d62aadc15f", "Url": "https://api.github.com/repos/juliusHuelsmann/paint", "Date": "2015-04-03T12:54:22Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (savedInstanceState.containsKey(\"latitude\")) { mLastLocation = new android.location.Location(\"\"); mLastLocation.setLatitude(savedInstanceState.getDouble(\"latitude\")); mLastLocation.setLongitude(savedInstanceState.getDouble(\"longitude\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/6154/buggy-version/app.src.main.java.com.udacity.jeremywright.virtualtraveler.MapsActivity.java", "BodyUseAPI": ["android.location.Location.setLongitude(savedInstanceState.getDouble(\"longitude\"))", "android.location.Location.setLatitude(savedInstanceState.getDouble(\"latitude\"))", "android.os.Bundle.getDouble(java.lang.String)", "android.os.Bundle.getDouble(java.lang.String)"], "Fixed commit": "87fde8000f0bcbbfcc48b92d8cba971875c79c37", "Url": "https://api.github.com/repos/jwright798/Test_VT_App", "Date": "2016-12-18T20:57:09Z"},
{"Line": "=>462", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((vdctx.variableInitializer()) != null) { java.lang.System.out.println(\"vinit\"); java.lang.String types = this.expressionCheck(vdctx.variableInitializer().expression()); if (!(this.regexComparison(varType, types))) { java.lang.System.out.println((\"fault \" + types)); if (vdctx.variableInitializer().expression()) if (!(this.regexComparison(varType.replace(\"*\", \"\"), types))) com.interpreter.SemanticErrors.throwError(SemanticErrors.VAR_ASSIGN_MISMATCH, vdctx.getStart().getLine(), vdctx.getStart().getCharPositionInLine(), varName, types); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/2888/buggy-version/src.com.interpreter.BaseListener.java", "BodyUseAPI": ["vdctx.variableInitializer().expression()", "com.parser.ManuScriptParser.VariableDeclaratorContext.getStart()", "vdctx.getStart().getLine()", "com.interpreter.BaseListener.expressionCheck(vdctx.variableInitializer().expression())", "com.parser.ManuScriptParser.VariableDeclaratorContext.variableInitializer()", "com.parser.ManuScriptParser.VariableDeclaratorContext.getStart()", "com.interpreter.SemanticErrors.throwError(SemanticErrors.VAR_ASSIGN_MISMATCH,vdctx.getStart().getLine(),vdctx.getStart().getCharPositionInLine(),java.lang.String,java.lang.String)", "vdctx.variableInitializer().expression()", "vdctx.getStart().getCharPositionInLine()", "com.parser.ManuScriptParser.VariableDeclaratorContext.variableInitializer()"], "Fixed commit": "c6e66e509fa08ca4119de8721a3fb6f3050941bd", "Url": "https://api.github.com/repos/luis-madrigal/PROGLAN_MP", "Date": "2017-11-28T04:26:17Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (main.enableJack) { if (p.hasPermission(\"sm.jack.showhelp\")) { if (e.getMessage().equalsIgnoreCase(\"Jack show help\")) { p.sendMessage(main.colors(\"<Jack> &bShowing help..\")); e.setCancelled(true); methods.showHelp(p); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/6712/buggy-version/ServerManager.src.com.gmail.jamesbehan198.servermanager.jackirc.Help.java", "BodyUseAPI": ["com.gmail.jamesbehan198.servermanager.ServerManager.colors(java.lang.String)", "org.bukkit.entity.Player.sendMessage(main.colors(\"<Jack> &bShowing help..\"))"], "Fixed commit": "25ede1ac2dd84686175a162397d6f1bb7761a3bb", "Url": "https://api.github.com/repos/MrBlackIsBack/ServerManager", "Date": "2015-04-28T11:29:20Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lotterySize == 0) { lotterySize = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/4480/buggy-version/FindingDeForester.src.main.java.edu.elon.ai.algorithms.GeneticAlgorithm.java", "BodyUseAPI": [], "Fixed commit": "8217645c9dfd09c4e1b8056d9660333a75f41240", "Url": "https://api.github.com/repos/caseodilla/FindingdeForester", "Date": "2017-12-04T15:00:07Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((woodBlockTargets.size()) > 0) { edu.elon.ai.datastructures.Population ts = new edu.elon.ai.datastructures.Population(woodBlockTargets); for (int i = 0; i < (GENERATIONS); i++) { ts = edu.elon.ai.algorithms.GeneticAlgorithm.evolvePopulation(ts); } addLumberjackTasks(ts.getFittest().getLocations()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/4480/buggy-version/FindingDeForester.src.main.java.edu.elon.ai.entities.EntityAIPlayer.java", "BodyUseAPI": [], "Fixed commit": "8217645c9dfd09c4e1b8056d9660333a75f41240", "Url": "https://api.github.com/repos/caseodilla/FindingdeForester", "Date": "2017-12-04T15:00:07Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isNotLogin(req)) { showLoginPage(req, resp); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/2761/buggy-version/src.main.java.com.bodejidi.hellojdbc.MemberServlet.java", "BodyUseAPI": ["com.bodejidi.hellojdbc.MemberServlet.showLoginPage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"], "Fixed commit": "d75e8e142420467ad813f59d7478a562fcd8c3d3", "Url": "https://api.github.com/repos/baldurtech/psychic-octo-ironman", "Date": "2014-03-26T02:19:27Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cs3205.subsystem3.health.data.source.local.StepsDB.getLastEntries(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((days.size()) != 0) { lastestTime = days.get(((days.size()) - 1)).first; }else { lastestTime = (cs3205.subsystem3.health.common.core.Timestamp.getEpochTimeMillis()) - (cs3205.subsystem3.health.common.core.Timestamp.EPOCH_DIFF); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/6026/buggy-version/Mobile.app.src.main.java.cs3205.subsystem3.health.ui.step.StepSensorFragment.java", "BodyUseAPI": ["java.util.List<android.util.Pair<java.lang.Long, java.lang.Integer>>.get(((days.size()) - 1))", "java.util.List<android.util.Pair<java.lang.Long, java.lang.Integer>>.size()"], "Fixed commit": "ef6eb90433418c7a8ad0bb3ae455a239dc64be18", "Url": "https://api.github.com/repos/yeejfe/CS3205-Team3-Android", "Date": "2017-11-06T14:01:29Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (progress <= 5) android.widget.Toast.makeText(this, \"\u6bcf\u9875\u65b0\u95fb\u4e0d\u5e94\u5c0f\u4e8e5\uff0c\u8bf7\u91cd\u8bbe\", Toast.LENGTH_SHORT).show(); else { const_data.setCur_pageSize(p); const_data.setSetChanged(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/9195/buggy-version/MakeBigNews.app.src.main.java.com.bignewsmaker.makebignews.activity.SetActivity.java", "BodyUseAPI": [], "Fixed commit": "23493a94266789d802a2c36755b9a7bc04f553b4", "Url": "https://api.github.com/repos/yanlm15/APP", "Date": "2017-09-14T14:10:51Z"},
{"Line": "=>631", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (f == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/8399/buggy-version/src.uecide.app.Base.java", "BodyUseAPI": [], "Fixed commit": "dd0d78aad965c422d8b4348aee9e734db4e35f87", "Url": "https://api.github.com/repos/UECIDE/UECIDE", "Date": "2014-08-15T10:34:19Z"},
{"Line": "=>639", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((uecide.app.Base.MRUList) == null) { uecide.app.Base.initMRU(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/8399/buggy-version/src.uecide.app.Base.java", "BodyUseAPI": [], "Fixed commit": "dd0d78aad965c422d8b4348aee9e734db4e35f87", "Url": "https://api.github.com/repos/UECIDE/UECIDE", "Date": "2014-08-15T10:34:19Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.jfrog.hudson.ArtifactoryServer.log.isLoggable(java.util.logging.Level.FINE)) { org.jfrog.hudson.ArtifactoryServer.log.log(java.util.logging.Level.WARNING, ((\"Could not obtain local repositories list from '\" + (url)) + \"'\"), e); }else { org.jfrog.hudson.ArtifactoryServer.log.log(java.util.logging.Level.WARNING, (((\"Could not obtain local repositories list from '\" + (url)) + \"': \") + (e.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/1753/buggy-version/src.main.java.org.jfrog.hudson.ArtifactoryServer.java", "BodyUseAPI": ["java.util.logging.Logger.log(java.util.logging.Level,java.lang.String)", "java.util.logging.Logger.log(java.util.logging.Level,java.lang.String,java.io.IOException)"], "Fixed commit": "f8e09a6b6612b263649f3cf3d8aa79a244590c14", "Url": "https://api.github.com/repos/jenkinsci/artifactory-plugin", "Date": "2012-02-29T07:33:51Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.emc.storageos.api.service.impl.resource.snapshot.BlockSnapshotSessionUtils.querySnapshotSessionSource(java.net.URI,javax.ws.rs.core.UriInfo,boolean,com.emc.storageos.db.client.DbClient)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (blockObject.hasConsistencyGroup()) { return createSnapshotSession(blockObject.getConsistencyGroup(), param, fcManager); }else { return createSnapshotSession(com.google.common.collect.Lists.newArrayList(blockObject), param, fcManager); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/4213/buggy-version/apisvc.src.main.java.com.emc.storageos.api.service.impl.resource.snapshot.BlockSnapshotSessionManager.java", "BodyUseAPI": ["com.google.common.collect.Lists.newArrayList(com.emc.storageos.db.client.model.BlockObject)", "com.emc.storageos.api.service.impl.resource.snapshot.BlockSnapshotSessionManager.createSnapshotSession(blockObject.getConsistencyGroup(),com.emc.storageos.model.block.SnapshotSessionCreateParam,com.emc.storageos.api.service.impl.resource.fullcopy.BlockFullCopyManager)", "com.emc.storageos.db.client.model.BlockObject.getConsistencyGroup()", "com.emc.storageos.api.service.impl.resource.snapshot.BlockSnapshotSessionManager.createSnapshotSession(com.google.common.collect.Lists.newArrayList(blockObject),com.emc.storageos.model.block.SnapshotSessionCreateParam,com.emc.storageos.api.service.impl.resource.fullcopy.BlockFullCopyManager)"], "Fixed commit": "c0dfe68d5b37992fe9b23ec9d1200eb14111321e", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-01-11T20:25:12Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (attributeBinding.getAttribute().isSingular()) { cascadeable = org.hibernate.metamodel.spi.binding.Cascadeable.class.cast(attributeBinding); }else { cascadeable = org.hibernate.metamodel.spi.binding.Cascadeable.class.cast(((org.hibernate.metamodel.spi.binding.PluralAttributeBinding) (attributeBinding)).getPluralAttributeElementBinding()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/8739/buggy-version/hibernate-core.src.main.java.org.hibernate.metamodel.spi.binding.CompositeAttributeBinding.java", "BodyUseAPI": ["java.lang.Class.cast(org.hibernate.metamodel.spi.binding.AttributeBinding)"], "Fixed commit": "29916adccb43a08ed3114a5eba9ee30fa46fe33e", "Url": "https://api.github.com/repos/hibernate/hibernate-orm", "Date": "2013-01-11T19:03:02Z"},
{"Line": "=>1662", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ab.getAttribute().isSingular()) { cascadeable = org.hibernate.metamodel.spi.binding.Cascadeable.class.cast(ab); }else { cascadeable = org.hibernate.metamodel.spi.binding.Cascadeable.class.cast(((org.hibernate.metamodel.spi.binding.PluralAttributeBinding) (ab)).getPluralAttributeElementBinding()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/8739/buggy-version/hibernate-core.src.main.java.org.hibernate.metamodel.internal.Binder.java", "BodyUseAPI": ["java.lang.Class.cast(org.hibernate.metamodel.spi.binding.AttributeBinding)"], "Fixed commit": "29916adccb43a08ed3114a5eba9ee30fa46fe33e", "Url": "https://api.github.com/repos/hibernate/hibernate-orm", "Date": "2013-01-11T19:03:02Z"},
{"Line": "=>386", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Field.getAnnotation(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((annotation != null) && (annotation.ignore())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/8055/buggy-version/litepal.src.main.java.org.litepal.LitePalBase.java", "BodyUseAPI": [], "Fixed commit": "1219d3a94eee8146df218beb3b8f6bd9302cfff8", "Url": "https://api.github.com/repos/LitePalFramework/LitePal", "Date": "2017-07-04T12:01:04Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (tmxResponse.startsWith(\"\\n\")) { tmxResponse = tmxResponse.substring(1, tmxResponse.length()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/4264/buggy-version/src.org.omegat.core.machinetranslators.MyMemoryMachineTranslate.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "c6dc98ba59a3c1ef75e99c3f23946da8529a0125", "Url": "https://api.github.com/repos/stsypanov/omegat", "Date": "2015-10-21T11:39:15Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (tmxResponse.startsWith(\"\\n\")) { tmxResponse = tmxResponse.substring(1, tmxResponse.length()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/4264/buggy-version/src.org.omegat.core.machinetranslators.MyMemoryHumanTranslate.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "c6dc98ba59a3c1ef75e99c3f23946da8529a0125", "Url": "https://api.github.com/repos/stsypanov/omegat", "Date": "2015-10-21T11:39:15Z"},
{"Line": "=>276", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getPreviousClause()) == null) { resultSequence = postEval(resultSequence); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/7128/buggy-version/src.org.exist.xquery.LetExpr.java", "BodyUseAPI": [], "Fixed commit": "b8786c9a5707eff32ae0d554251d5deb4d3d925b", "Url": "https://api.github.com/repos/wolfgangmm/exist", "Date": "2015-08-08T12:47:20Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.media.AudioManager.getParameters(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (parameterValue.equals(\"sys\")) { android.view.KeyEvent keyEventDown = new android.view.KeyEvent(android.view.KeyEvent.ACTION_DOWN, mKeyCode); audioManager.dispatchMediaKeyEvent(keyEventDown); android.view.KeyEvent keyEventUp = new android.view.KeyEvent(android.view.KeyEvent.ACTION_UP, mKeyCode); audioManager.dispatchMediaKeyEvent(keyEventUp); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/6878/buggy-version/app.src.main.java.com.f1x.mtcdtools.named.objects.actions.KeyAction.java", "BodyUseAPI": [], "Fixed commit": "24edc89b1364af359d77c27471afd8e7d78a78e4", "Url": "https://api.github.com/repos/f1xpl/MtcdTools", "Date": "2017-02-14T18:14:19Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.code44.finance.data.model.Transaction.from(android.database.Cursor)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((transaction.getAccountFrom()) == null) { transaction.setAccountFrom(systemAccount); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/38/buggy-version/financius.src.main.java.com.code44.finance.ui.transactions.TransactionFragment.java", "BodyUseAPI": ["com.code44.finance.data.model.Transaction.setAccountFrom(com.code44.finance.data.model.Account)"], "Fixed commit": "c9c9b811c3edf2d370137845128873330671880c", "Url": "https://api.github.com/repos/mvarnagiris/Financius", "Date": "2014-09-16T16:54:26Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.code44.finance.data.model.Transaction.from(android.database.Cursor)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((transaction.getAccountTo()) == null) { transaction.setAccountTo(systemAccount); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/38/buggy-version/financius.src.main.java.com.code44.finance.ui.transactions.TransactionFragment.java", "BodyUseAPI": ["com.code44.finance.data.model.Transaction.setAccountTo(com.code44.finance.data.model.Account)"], "Fixed commit": "c9c9b811c3edf2d370137845128873330671880c", "Url": "https://api.github.com/repos/mvarnagiris/Financius", "Date": "2014-09-16T16:54:26Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.code44.finance.data.model.Transaction.from(android.database.Cursor)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((transaction.getCategory()) == null) { transaction.setCategory(expenseCategory); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/38/buggy-version/financius.src.main.java.com.code44.finance.ui.transactions.TransactionFragment.java", "BodyUseAPI": ["com.code44.finance.data.model.Transaction.setCategory(com.code44.finance.data.model.Category)"], "Fixed commit": "c9c9b811c3edf2d370137845128873330671880c", "Url": "https://api.github.com/repos/mvarnagiris/Financius", "Date": "2014-09-16T16:54:26Z"},
{"Line": "=>778", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.gitblit.tickets.ITicketService.getTicket(com.gitblit.git.PatchsetReceivePack,long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (ticket == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/1952/buggy-version/src.main.java.com.gitblit.git.PatchsetReceivePack.java", "BodyUseAPI": [], "Fixed commit": "ee4ef4efef65c834f722381c012928df602ceff3", "Url": "https://api.github.com/repos/johannol/gitblit", "Date": "2014-03-28T23:58:48Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.xbmc.kore.utils.Utils.isLollipopOrLater()) { vh.dataHolder.setPosterTransitionName(vh.artView.getTransitionName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/710/buggy-version/app.src.main.java.org.xbmc.kore.ui.sections.addon.AddonsActivity.java", "BodyUseAPI": [], "Fixed commit": "fbe906e9374812d77b0dfaf9075bf3f47daae4fd", "Url": "https://api.github.com/repos/poisdeux/Kore", "Date": "2017-10-09T11:57:22Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (delayMillis > 0) { new java.lang.Thread() { @java.lang.Override public void run() { try { java.lang.Thread.sleep(delayMillis); runnable.run(); } catch (java.lang.InterruptedException e) { e.printStackTrace(); } } }.start(); }else { runnable.run(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/1405/buggy-version/BluetoothClassicLibrary.src.main.java.com.github.douglasjunior.bluetoothclassiclibrary.BluetoothService.java", "BodyUseAPI": ["java.lang.Thread.start()", "java.lang.Thread.sleep(long)"], "Fixed commit": "a1c8ebac2e494cc1c2ab45b2bc0fcbec25e52034", "Url": "https://api.github.com/repos/douglasjunior/AndroidBluetoothLibrary", "Date": "2017-05-25T13:20:39Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (connConfig.isSsl()) { connConfig.setSslConnectionConfig(new io.latent.storm.rabbitmq.config.ConnectionConfig.SslConnectionConfig(stormConfig)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/282/buggy-version/src.main.java.io.latent.storm.rabbitmq.config.ConnectionConfig.java", "BodyUseAPI": ["io.latent.storm.rabbitmq.config.ConnectionConfig.setSslConnectionConfig(io.latent.storm.rabbitmq.config.ConnectionConfig.SslConnectionConfig)"], "Fixed commit": "b9f5f827ae0410e2e0875bbd19f762a345cb2470", "Url": "https://api.github.com/repos/juicegit/storm-rabbitmq", "Date": "2016-02-22T18:54:50Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getCitizen()) != null) { if (getCitizen().hasTrait(net.aufdemrand.denizen.npc.traits.AssignmentTrait.class)) net.aufdemrand.denizen.utilities.DenizenAPI.getCurrentInstance().getNPCRegistry().getActionHandler().doAction(actionName, this, player, getAssignmentTrait().getAssignment()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/7590/buggy-version/src.main.java.net.aufdemrand.denizen.npc.dNPC.java", "BodyUseAPI": [], "Fixed commit": "c767cbb17776b1e2bc3895ed64e8c65a3fd207f4", "Url": "https://api.github.com/repos/aufdemrand/Denizen", "Date": "2013-02-17T11:13:36Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.text.SimpleDateFormat.format(java.util.Date)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((eventMap.get(currentDate)) != null) { eventText.setText(eventMap.get(currentDate)); }else { eventText.setText(\"\"); android.widget.Toast.makeText(getActivity().getApplicationContext(), currentDate, Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/1519/buggy-version/app.src.main.java.edu.ma.wa.nqueue.capstoneapp.Fragment.Logs.java", "BodyUseAPI": ["android.widget.Toast.makeText(getActivity().getApplicationContext(), currentDate, Toast.LENGTH_LONG).show()", "android.widget.TextView.setText(java.lang.CharSequence)", "java.util.HashMap<java.lang.String, java.lang.CharSequence>.get(java.lang.String)", "android.widget.Toast.makeText(getActivity().getApplicationContext(),java.lang.String,Toast.LENGTH_LONG)"], "Fixed commit": "7bffd1aec9fbede43c01195d21f77a63e881cc2f", "Url": "https://api.github.com/repos/zackhillman/CapstoneApp", "Date": "2017-05-16T01:37:38Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((selection.length) == 0) { permutations.add(selection); }else { for (java.lang.Object o : selection) { java.util.List<java.lang.Object> permutation = new java.util.ArrayList<>(); permutation.add(o); java.util.List<java.lang.Object> rest = new java.util.ArrayList<java.lang.Object>(java.util.Arrays.asList(selection)); rest.remove(o); permutation.addAll(rest); permutations.add(permutation.toArray()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/6046/buggy-version/sampleModel.src.samplemodel.EachElementVersusTheRest.java", "BodyUseAPI": ["java.util.List<java.lang.Object[]>.add(java.lang.Object[])", "java.util.Arrays.asList(java.lang.Object[])"], "Fixed commit": "d7e017e0cc3b408d1a3e5a13c79908bfb87f3314", "Url": "https://api.github.com/repos/debrief/limpet_ops", "Date": "2016-04-19T13:35:22Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mmmlibx.lib.FileManager.dirMods.isDirectory()) { files.addAll(scala.actors.threadpool.Arrays.asList(mmmlibx.lib.FileManager.dirMods.listFiles())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/8040/buggy-version/src.main.java.mmmlibx.lib.FileManager.java", "BodyUseAPI": ["scala.actors.threadpool.Arrays.asList(java.io.File[])", "java.io.File.listFiles()", "java.util.List<java.io.File>.addAll(scala.actors.threadpool.Arrays.asList(mmmlibx.lib.FileManager.dirMods.listFiles()))"], "Fixed commit": "b0ad26a872d2822bc006a2a1cd13b576be3da8e5", "Url": "https://api.github.com/repos/asiekierka/littleMaidMobX", "Date": "2015-07-02T12:02:09Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.lang.String, java.lang.String>.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((find.equals(\"<path>\")) && (value != null)) { try { value = java.net.URLEncoder.encode(value, \"utf-8\"); value = value.replace(\"%2F\", \"/\").replace(\"+\", \"%20\").replace(\"*\", \"%2A\"); } catch (java.io.UnsupportedEncodingException e) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/5641/buggy-version/src.cz.zcu.kiv.multicloud.filesystem.Operation.java", "BodyUseAPI": ["java.net.URLEncoder.encode(java.lang.String,java.lang.String)"], "Fixed commit": "587d9c1ef1726157205b45819db4ff831dfa6d03", "Url": "https://api.github.com/repos/stanek0j/MultiCloud", "Date": "2014-05-08T23:57:55Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(aStep.doAction())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/9002/buggy-version/Pladipus-core.src.main.java.com.compomics.pladipus.core.control.engine.impl.SessionProcessingEngine.java", "BodyUseAPI": [], "Fixed commit": "a34342ff99f70f510b7a79ca3815a96db1990202", "Url": "https://api.github.com/repos/compomics/pladipus", "Date": "2015-12-14T14:41:31Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (null == lan) { throw new java.lang.RuntimeException(\"Failed in parsing system language environment.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/8928/buggy-version/src.main.java.org.vintsie.jcobweb.config.SystemInfo.java", "BodyUseAPI": [], "Fixed commit": "44f40a389825e9a63c12787e22753ae519a22b81", "Url": "https://api.github.com/repos/vintsie/jcobweb", "Date": "2014-01-07T09:45:30Z"},
{"Line": "=>725", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((mbr != null) && ((mbr.length()) > 0)) { see.attribute(\"member\", mbr); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/8235/buggy-version/src.org.weborganic.xmldoclet.XMLDoclet.java", "BodyUseAPI": ["org.weborganic.xmldoclet.XMLNode.attribute(java.lang.String,java.lang.String)"], "Fixed commit": "6170b347aba5e08e0e5e6ff4c6273fbbc6a74046", "Url": "https://api.github.com/repos/bazooka/bazooka-wo-xmldoclet", "Date": "2014-03-07T09:55:21Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((shipNum) < (lengths.length)) { (shipNum)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/3163/buggy-version/Code.PlaceShipScreen.java", "BodyUseAPI": [], "Fixed commit": "09321e0b5cc60904c133f1ab9fa0f71e0eb7ec6a", "Url": "https://api.github.com/repos/pohltm/Battle", "Date": "2012-05-09T20:09:22Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((selectedEstilo) != null) { reloj.setCompas(selectedEstilo.getCompas()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/7324/buggy-version/src.main.java.org.jcompas.control.Controller.java", "BodyUseAPI": [], "Fixed commit": "72e0df6d7d7af1d4a65464cb374eb2ee75da6b31", "Url": "https://api.github.com/repos/tduberne/jcompas", "Date": "2013-04-21T12:58:17Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["es.us.isa.ppinot.evaluation.computers.DataMeasureComputer.getOrCreateMeasure(es.us.isa.ppinot.evaluation.logs.LogEntry,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((m.getValueAsObject()) == null) || (!(onlyFirst))) { m.setValue(value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/1068/buggy-version/ppinot-model.src.main.java.es.us.isa.ppinot.evaluation.computers.DataMeasureComputer.java", "BodyUseAPI": ["es.us.isa.ppinot.evaluation.MeasureInstance.setValue(java.lang.Object)"], "Fixed commit": "d1ebddbc64b9aca747ff4e0640c47d3ead1ee87c", "Url": "https://api.github.com/repos/isa-group/ppinot", "Date": "2016-07-08T08:24:14Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!secure) || (retstate == (com.earth2me.essentials.signs.SignProtection.SignProtectionState.NOSIGN))) { for (com.earth2me.essentials.signs.SignProtection.SignProtectionState state : signs.values()) { if (state == (com.earth2me.essentials.signs.SignProtection.SignProtectionState.OWNER)) { return state; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/9134/buggy-version/Essentials.src.com.earth2me.essentials.signs.SignProtection.java", "BodyUseAPI": [], "Fixed commit": "1d95f1c6d26df1d291268abbe222d58a55aab634", "Url": "https://api.github.com/repos/essentials/Essentials", "Date": "2011-11-04T00:23:50Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (notYetTargeted) r.run();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/5738/buggy-version/src.main.java.org.jtrfp.trcl.beh.CustomNAVTargetableBehavior.java", "BodyUseAPI": [], "Fixed commit": "03a2d592f821866aba29c5fdc8e5668915447dbf", "Url": "https://api.github.com/repos/jtrfp/terminal-recall", "Date": "2014-08-29T09:02:39Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.smilemeback.adapters.CategoryGridAdapter.getItem(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (selectedCategories.contains(target)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/1629/buggy-version/app.src.main.java.com.smilemeback.activities.CategoriesActivity.java", "BodyUseAPI": [], "Fixed commit": "27b55ff0f28647488f73a6a3618d012e3642a66e", "Url": "https://api.github.com/repos/SmileMeBack/smilemeback", "Date": "2015-04-29T15:04:07Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.smilemeback.adapters.IconGridAdapter.getItem(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (selectedImages.contains(target)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/1629/buggy-version/app.src.main.java.com.smilemeback.activities.IconsActivity.java", "BodyUseAPI": [], "Fixed commit": "27b55ff0f28647488f73a6a3618d012e3642a66e", "Url": "https://api.github.com/repos/SmileMeBack/smilemeback", "Date": "2015-04-29T15:04:07Z"},
{"Line": "=>710", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["m1.name.compareToIgnoreCase(m2.name)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (r == 0) { r = m1.key.compareToIgnoreCase(m2.key); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/6763/buggy-version/src.net.sourceforge.fidocadj.macropicker.model.MacroTreeModel.java", "BodyUseAPI": [], "Fixed commit": "38ca0e701dda7568b15c16672701c67e3e47a839", "Url": "https://api.github.com/repos/DarwinNE/FidoCadJ", "Date": "2017-02-05T14:32:06Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<org.societies.impl.ProviderElementNamespaceRegistrar.ElementNamespaceTuple, java.lang.Integer>.get(org.societies.impl.ProviderElementNamespaceRegistrar.ElementNamespaceTuple)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (count != null) { count--; if (count == 0) providersElementsAndNamespaces.remove(tuple); else providersElementsAndNamespaces.put(tuple, count); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/6301/buggy-version/platform-infrastructure.client-frwk.AndroidAgent.src.main.java.org.societies.impl.ProviderElementNamespaceRegistrar.java", "BodyUseAPI": [], "Fixed commit": "6013fa0f875b81f90823e104389fade0f9329e14", "Url": "https://api.github.com/repos/societies/SOCIETIES-Platform", "Date": "2012-11-21T19:01:36Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isLeaf()) { res.add(new HyperHuff.TableEntry(value, \"0\")); }else { if (left.isLeaf()) { res.add(new HyperHuff.TableEntry(left.getValue(), \"0\")); }else { java.util.ArrayList<HyperHuff.TableEntry> tmp = left.getTable(); for (HyperHuff.TableEntry entry : tmp) { res.add(new HyperHuff.TableEntry(entry.value, (\"0\" + (entry.code)))); } } if (right.isLeaf()) { res.add(new HyperHuff.TableEntry(right.getValue(), \"1\")); }else { java.util.ArrayList<HyperHuff.TableEntry> tmp = right.getTable(); for (HyperHuff.TableEntry entry : tmp) { res.add(new HyperHuff.TableEntry(entry.value, (\"1\" + (entry.code)))); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/5301/buggy-version/HyperHuff.src.HyperHuff.Node.java", "BodyUseAPI": [], "Fixed commit": "19be621769650b89be50261de9b14db2b914623e", "Url": "https://api.github.com/repos/vstebe/HyperHuff", "Date": "2014-03-22T18:51:51Z"},
{"Line": "=>641", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.charAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((c != '[') && (c != ']')) && (nb_brackets == 0)) { output.append(c); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/2952/buggy-version/src.main.java.com.diffbot.wikistatsextractor.util.Util.java", "BodyUseAPI": ["java.lang.StringBuilder.append(char)"], "Fixed commit": "450ff054541d7826604b609275e6893f26c6e7fa", "Url": "https://api.github.com/repos/rschwab68/wikistatsextractor", "Date": "2016-04-05T13:12:33Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mTouchView) == null) || (!(mTouchView.isActive()))) { if (((mFooterView.getBottomMargin()) > 0) || (deltaY < 0)) { updateFooterHeight(((-deltaY) / (cn.swu.pulltorefreshswipemenulistviewsample.PullToRefreshSwipeMenuListView.OFFSET_RADIO))); }else if (((getFirstVisiblePosition()) == 0) && (((mHeaderView.getVisiableHeight()) > 0) || (deltaY > 0))) { updateHeaderHeight((deltaY / (cn.swu.pulltorefreshswipemenulistviewsample.PullToRefreshSwipeMenuListView.OFFSET_RADIO))); invokeOnScrolling(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/3286/buggy-version/src.cn.swu.pulltorefreshswipemenulistviewsample.PullToRefreshSwipeMenuListView.java", "BodyUseAPI": [], "Fixed commit": "7481f574d6aaec9badad7f8fb0f74851418931cc", "Url": "https://api.github.com/repos/licaomeng/Android-PullToRefresh-SwipeMenuListView-Sample", "Date": "2015-09-16T09:17:08Z"},
{"Line": "=>745", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.sun.source.tree.ReturnTree.getExpression()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (expr instanceof com.sun.tools.javac.tree.JCTree.JCParens) { expr = ((com.sun.tools.javac.tree.JCTree.JCParens) (expr)).getExpression(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/7347/buggy-version/inference-framework.checker-framework.checkers.src.checkers.inference2.transform.TransformVisitor.java", "BodyUseAPI": [], "Fixed commit": "0f8f2c5394f4c74f46d1bb52a7f15f7d6be0db05", "Url": "https://api.github.com/repos/proganalysis/type-inference", "Date": "2015-09-11T01:22:24Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.sf.jabref.external.ExternalFileType.getOpenWith()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (\"\".equals(application)) { net.sf.jabref.gui.desktop.JabRefDesktop.NATIVE_DESKTOP.openFile(filePath, fileType.getExtension()); }else { net.sf.jabref.gui.desktop.JabRefDesktop.NATIVE_DESKTOP.openFileWithApplication(filePath, application); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/3131/buggy-version/src.main.java.net.sf.jabref.gui.desktop.JabRefDesktop.java", "BodyUseAPI": ["net.sf.jabref.gui.desktop.NativeDesktop.openFileWithApplication(java.lang.String,java.lang.String)"], "Fixed commit": "495a978166444acf165369eedda8ec47d020da07", "Url": "https://api.github.com/repos/JabRef/jabref", "Date": "2016-03-15T12:56:45Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (s.matches(\"\\\\W.+\")) s = s.substring(1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/6644/buggy-version/src.com.speed.irc.connection.ServerMessageParser.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "b21b92ecfb4702425cb8f32dbed4998624c374b9", "Url": "https://api.github.com/repos/speedismeh/speedsircapi", "Date": "2013-02-10T15:42:22Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nodeType.equals(ContentModel.TYPE_DELETED.toString())) { shouldBeAdded = java.lang.Boolean.TRUE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/4533/buggy-version/alfresco-indexer-webscripts.src.main.java.com.github.maoo.indexer.dao.IndexingDaoImpl.java", "BodyUseAPI": [], "Fixed commit": "11badb3ffc429cae23b1f7e2aaa8ed1f4d19669a", "Url": "https://api.github.com/repos/zaizi/alfresco-indexer", "Date": "2015-11-16T08:13:46Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (e instanceof java.io.FileNotFoundException) throw ((java.io.FileNotFoundException) (e));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/5446/buggy-version/wasp-core.src.main.java.edu.yu.einstein.wasp.grid.file.SshFileService.java", "BodyUseAPI": [], "Fixed commit": "5d02403aeaffdd6e2969661ef62cd5b81ff9cdac", "Url": "https://api.github.com/repos/WASP-System/central", "Date": "2014-06-05T15:30:23Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mDisplayedFragment) == null) onNavigationItemSelected(mNavigationView.getMenu().findItem(R.id.nav_profile));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/1285/buggy-version/app.src.main.java.com.usal.jorgeav.sportapp.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "a37fd3192d854858a4a5fe52e5818593ff31c363", "Url": "https://api.github.com/repos/jorgeavilae/SportApp", "Date": "2017-06-06T16:59:12Z"},
{"Line": "=>408", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((serviceNode.getState()) != (ControllerServiceState.ENABLED)) && ((serviceNode.getState()) != (ControllerServiceState.ENABLING))) { serviceNode.verifyCanEnable(new java.util.HashSet(recursiveReferences)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/285/buggy-version/nifi.nifi-nar-bundles.nifi-framework-bundle.nifi-framework.nifi-framework-core.src.main.java.org.apache.nifi.controller.service.StandardControllerServiceProvider.java", "BodyUseAPI": ["org.apache.nifi.controller.service.ControllerServiceNode.verifyCanEnable(java.util.HashSet)"], "Fixed commit": "a227fe46b542fdcd6dd6fe57f11d678da237bc98", "Url": "https://api.github.com/repos/apache/nifi", "Date": "2015-02-19T20:56:38Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (species == null) { species = speciesDefault; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/6950/buggy-version/OpenTreeMap.src.org.azavea.lists.NearbyList.java", "BodyUseAPI": [], "Fixed commit": "3979a21de02cd1e06fb37e95b025e420dc3692c9", "Url": "https://api.github.com/repos/maurizi/OpenTreeMap-Android", "Date": "2013-09-03T14:24:12Z"},
{"Line": "=>648", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (firstBidder) { BidderID = bidder.getid(); firstBidder = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/347/buggy-version/src.Model.Auction.java", "BodyUseAPI": [], "Fixed commit": "a06dd4814d549b2e5b682a6ae6f29f64322078a6", "Url": "https://api.github.com/repos/PointersAreRude/HighBid", "Date": "2015-06-06T19:48:20Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) < (Build.VERSION_CODES.LOLLIPOP)) { java.lang.reflect.Method method = android.app.Activity.class.getDeclaredMethod(\"convertToTranslucent\", translucentConversionListenerClazz); method.setAccessible(true); method.invoke(activity, new java.lang.Object[]{ null }); }else { java.lang.reflect.Method method = android.app.Activity.class.getDeclaredMethod(\"convertToTranslucent\", translucentConversionListenerClazz, android.app.ActivityOptions.class); method.setAccessible(true); method.invoke(activity, new java.lang.Object[]{ null, null }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/541/buggy-version/library.src.main.java.me.imid.swipebacklayout.lib.Utils.java", "BodyUseAPI": [], "Fixed commit": "aa735a7b8f0b8b0d38f62fcdd525cebbce3237ee", "Url": "https://api.github.com/repos/WonShaw/SwipeBackLayout", "Date": "2015-01-31T16:23:49Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((state == (me.imid.swipebacklayout.lib.SwipeBackLayout.STATE_IDLE)) && (scrollPercent == 0)) { me.imid.swipebacklayout.lib.Utils.convertActivityFromTranslucent(mActivity); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/541/buggy-version/library.src.main.java.me.imid.swipebacklayout.lib.app.SwipeBackActivityHelper.java", "BodyUseAPI": [], "Fixed commit": "aa735a7b8f0b8b0d38f62fcdd525cebbce3237ee", "Url": "https://api.github.com/repos/WonShaw/SwipeBackLayout", "Date": "2015-01-31T16:23:49Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (designErrors.isEmpty()) design.fillInUnusedPackages(designErrors);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/7981/buggy-version/trunk.ant-contrib.src.java.net.sf.antcontrib.design.VerifyDesignDelegate.java", "BodyUseAPI": ["net.sf.antcontrib.design.Design.fillInUnusedPackages(java.util.Vector)"], "Fixed commit": "b03f2e2ad6d5c0533d03ceb4aa55db25aad67cec", "Url": "https://api.github.com/repos/crazy-max/ant-contrib", "Date": "2006-10-25T21:22:43Z"},
{"Line": "=>477", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((al) == 0) a = 0; else a = java.lang.Float.parseFloat(sp);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/5741/buggy-version/calculator.src.calculator.home.java", "BodyUseAPI": [], "Fixed commit": "c35547eae749a5fb952438e07bbc2ad897e77080", "Url": "https://api.github.com/repos/thamshid/calculator", "Date": "2014-11-03T03:00:20Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (true) { settings.put(\"Width\", ((1920 * 4) / 5)); settings.put(\"Height\", ((1080 * 4) / 5)); settings.setFullscreen(false); }else { settings.put(\"Width\", 1920); settings.put(\"Height\", 1080); settings.setFullscreen(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/5946/buggy-version/GroupProject.src.julietgroupproject.LearnToBeAnAlien.java", "BodyUseAPI": [], "Fixed commit": "ac2f6e6ef047081f2741bd5d7c065794c039671e", "Url": "https://api.github.com/repos/gla23/Juliet-Group-Project-2017", "Date": "2017-03-04T18:01:35Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((org.apache.commons.lang.StringUtils.isNotEmpty(ref.getName())) && (!(ref.getName().contains(com.photon.phresco.framework.repository.HEAD_REVISION)))) { branchList.add(ref.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/2078/buggy-version/phresco-framework-impl.src.main.java.com.photon.phresco.framework.repository.GitRepositoryImpl.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(ref.getName())", "org.eclipse.jgit.lib.Ref.getName()"], "Fixed commit": "734818cab825bb41253983307258669719440571", "Url": "https://api.github.com/repos/photon-infotech/framework", "Date": "2014-04-21T11:52:31Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (innerView instanceof android.widget.EditText) { sv.setPadding(framePadding, paddingTop, framePadding, paddingBottom); }else { sv.setPadding(0, paddingTop, 0, paddingBottom); innerView.setPadding(framePadding, 0, framePadding, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/9106/buggy-version/library.src.main.java.com.afollestad.materialdialogs.MaterialDialog.java", "BodyUseAPI": [], "Fixed commit": "a459c829d4f339ac46d3267a0352aff06792e5d8", "Url": "https://api.github.com/repos/DanielClayton/material-dialogs", "Date": "2015-03-04T17:46:27Z"},
{"Line": "=>315", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((HomePage.profilePicture) != null) { HomePage.profilePicture.setImageBitmap(bm); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/2240/buggy-version/app.src.main.java.com.scu.tausch.Activities.SettingsFragment.java", "BodyUseAPI": [], "Fixed commit": "e078090a0931ed57cfd91dc671c3f1d78eb78f97", "Url": "https://api.github.com/repos/pratyusharam/Tausch", "Date": "2016-04-18T05:33:38Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((HomePage.profilePicture) != null) { HomePage.profilePicture.setImageBitmap(thumbnail); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/2240/buggy-version/app.src.main.java.com.scu.tausch.Activities.SettingsFragment.java", "BodyUseAPI": [], "Fixed commit": "e078090a0931ed57cfd91dc671c3f1d78eb78f97", "Url": "https://api.github.com/repos/pratyusharam/Tausch", "Date": "2016-04-18T05:33:38Z"},
{"Line": "=>1146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((preNode.nodeType()) == (NodeType.OPERATOR)) || ((preNode.nodeType()) == (NodeType.RANGE))) && (!(preNode.isTree()))) { if (((preNode.value) == (Operator.RP)) || ((preNode.value) == (Operator.OR))) { resultStack.push(preNode); resultStack.push(node); continue; } pers.PATH.jregexp.engine.GrammerTree.log.warning(\"Error: Have Operator after Operator\"); head = null; return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/72/buggy-version/src.pers.PATH.jregexp.engine.GrammerTree.java", "BodyUseAPI": ["java.util.Stack<pers.PATH.jregexp.engine.Node>.push(pers.PATH.jregexp.engine.Node)"], "Fixed commit": "0935f7e0345bae8640ecfce8d3c1e0bab615e296", "Url": "https://api.github.com/repos/PATH-st/J_RegExp", "Date": "2015-11-10T03:50:52Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (fragmentMapping != null) { fragmentMapping.getCore().addModification(modification); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/8281/buggy-version/src.main.java.jp.ac.osaka_u.ist.sdl.scanalyzer.metrics.ModificationAnalyzeHelper.java", "BodyUseAPI": ["fragmentMapping.getCore().addModification(jp.ac.osaka_u.ist.sdl.scanalyzer.data.db.DBCloneModification)", "jp.ac.osaka_u.ist.sdl.scanalyzer.data.CodeFragmentMapping<E>.getCore()"], "Fixed commit": "0d957dfca0bbd141e0fe2e20dac0330a2b346010", "Url": "https://api.github.com/repos/k-hotta/SCAnalyzer", "Date": "2014-12-09T19:09:25Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.marklogic.hub.DataHub.updateHub()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (result) { com.marklogic.quickstart.auth.ConnectionAuthenticationToken authenticationToken = ((com.marklogic.quickstart.auth.ConnectionAuthenticationToken) (org.springframework.security.core.context.SecurityContextHolder.getContext().getAuthentication())); if (authenticationToken != null) { com.marklogic.quickstart.model.EnvironmentConfig environmentConfig = authenticationToken.getEnvironmentConfig(); environmentConfig.checkIfInstalled(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/2561/buggy-version/quick-start.src.main.java.com.marklogic.quickstart.service.DataHubService.java", "BodyUseAPI": [], "Fixed commit": "1cbe7931360a3e7d5b33329398ef8d7dd2ca38d9", "Url": "https://api.github.com/repos/marklogic/marklogic-data-hub", "Date": "2016-12-15T20:15:06Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (listId >= (data.length)) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/6709/buggy-version/src.main.java.com.ociweb.pronghorn.util.MemberHolder.java", "BodyUseAPI": [], "Fixed commit": "f1f9e9e04205284953bf0e338e15b5743c816ff4", "Url": "https://api.github.com/repos/oci-pronghorn/Pronghorn", "Date": "2015-10-07T21:26:05Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portal.util.PortalUtil.getClassNameId(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (((repository != null) && ((repository.getClassNameId()) != liferayRepositoryClassNameId)) || (folder.isMountPoint())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/503/buggy-version/portal-impl.src.com.liferay.portlet.documentlibrary.lar.FolderStagedModelDataHandler.java", "BodyUseAPI": [], "Fixed commit": "77d61a873c7926d797916c3e9636c0b44c6e3249", "Url": "https://api.github.com/repos/matethurzo/liferay-portal", "Date": "2013-05-07T02:03:01Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portal.service.persistence.RepositoryUtil.findByPrimaryKey(fileEntry.getRepositoryId())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((repository.getClassNameId()) != (com.liferay.portal.util.PortalUtil.getClassNameId(com.liferay.portal.repository.liferayrepository.LiferayRepository.class.getName()))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/503/buggy-version/portal-impl.src.com.liferay.portlet.documentlibrary.lar.FileEntryStagedModelDataHandler.java", "BodyUseAPI": [], "Fixed commit": "77d61a873c7926d797916c3e9636c0b44c6e3249", "Url": "https://api.github.com/repos/matethurzo/liferay-portal", "Date": "2013-05-07T02:03:01Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (0 >= (list.size())) { return java.lang.Integer.MIN_VALUE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/1399/buggy-version/src.Utils.Helper.java", "BodyUseAPI": [], "Fixed commit": "10d30e76a119bcd52c1fc34dba954d6bf3a30b0b", "Url": "https://api.github.com/repos/linoor/RandomForest", "Date": "2015-01-25T15:53:16Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.lang3.StringUtils.split(java.lang.String,Constants.TAB)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((header.length) == (columns.length)) { java.util.Map<java.lang.String, java.lang.String> map = splitColumnsIntoKeyValuePairs(header, columns); eventBus.post(map); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/5481/buggy-version/src.main.java.com.graph.db.file.gene.GeneParser.java", "BodyUseAPI": ["com.graph.db.file.gene.GeneParser.splitColumnsIntoKeyValuePairs(java.lang.String[],java.lang.String[])"], "Fixed commit": "6ac0dd86845b27bf117eb0ca67a4a22b4d1b973d", "Url": "https://api.github.com/repos/phenopolis/pheno4j", "Date": "2016-11-27T14:59:03Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((position) < (numBuffers)) && ((position) > 1)) { for (int x = 0; x < (xtimes); x++) { hivemall.utils.lang.ArrayUtils.shuffle(slots[x], position, randoms[x]); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/3594/buggy-version/src.main.java.hivemall.common.RandomizedAmplifier.java", "BodyUseAPI": [], "Fixed commit": "5b798f1c277610d6d957db684932dd31e6cff936", "Url": "https://api.github.com/repos/myui/hivemall", "Date": "2014-12-26T12:44:25Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (detection.isStarted()) { while (detection.isComputing()) { mpicbg.imglib.multithreading.SimpleMultiThreading.threadWait(10); } detection.updatePreview(startValue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/5955/buggy-version/src.main.java.histogram.MouseListenerValue.java", "BodyUseAPI": [], "Fixed commit": "c1f02b5c50b85d2b0630d37a9fa1b9d13ec412a4", "Url": "https://api.github.com/repos/PreibischLab/RadialSymmetryLocalization", "Date": "2017-09-22T13:52:16Z"},
{"Line": "=>473", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["soot.Scene.v().getSootClass(originActivityParameterLocal.getType().toString())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (sc.isInterface()) { invoke = soot.jimple.Jimple.v().newInterfaceInvokeExpr(originActivityParameterLocal, method.makeRef(), args); }else { invoke = soot.jimple.Jimple.v().newVirtualInvokeExpr(originActivityParameterLocal, method.makeRef(), args); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/4317/buggy-version/src.soot.jimple.infoflow.android.iccta.ICCRedirectionCreator.java", "BodyUseAPI": [], "Fixed commit": "e2c75d212f0bbfc21d610f19fcb723e2830d8b79", "Url": "https://api.github.com/repos/chubbymaggie/soot-infoflow-android-iccta", "Date": "2015-03-07T15:53:03Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (noDefaultConstructMethod) { java.util.List<soot.SootMethod> sootMethods = compSootClass.getMethods(); for (soot.SootMethod sm : sootMethods) { if (sm.getName().equals(\"<init>\")) { if (((sm.getParameterCount()) == 1) && (sm.getParameterType(0).equals(soot.jimple.infoflow.android.iccta.ICCInstrumentDestination.INTENT_TYPE))) { continue; } java.util.List<soot.Value> args = new java.util.ArrayList<soot.Value>(); for (int i = 0; i < (sm.getParameterCount()); i++) { args.add(soot.jimple.NullConstant.v()); } superU = ((soot.Unit) (soot.jimple.Jimple.v().newInvokeStmt(soot.jimple.Jimple.v().newSpecialInvokeExpr(thisLocal, sm.makeRef(), args)))); break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/4317/buggy-version/src.soot.jimple.infoflow.android.iccta.ICCInstrumentDestination.java", "BodyUseAPI": [], "Fixed commit": "e2c75d212f0bbfc21d610f19fcb723e2830d8b79", "Url": "https://api.github.com/repos/chubbymaggie/soot-infoflow-android-iccta", "Date": "2015-03-07T15:53:03Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["soot.Scene.v().getSootClass(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (sc.getName().equals(\"com.ophone.MiniPlayer.MyPlayerService$CommandReceiver\")) { java.lang.System.out.println((\"DEBUG:\" + sc)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/4317/buggy-version/src.soot.jimple.infoflow.android.iccta.ICCInstrumentDestination.java", "BodyUseAPI": ["java.io.PrintStream.println((\"DEBUG:\" + sc))"], "Fixed commit": "e2c75d212f0bbfc21d610f19fcb723e2830d8b79", "Url": "https://api.github.com/repos/chubbymaggie/soot-infoflow-android-iccta", "Date": "2015-03-07T15:53:03Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((com.mcmoddev.lib.integration.plugins.NewTinkersConstruct.instance) == null) com.mcmoddev.lib.integration.plugins.NewTinkersConstruct.instance = this;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/8435/buggy-version/src.main.java.com.mcmoddev.lib.integration.plugins.NewTinkersConstruct.java", "BodyUseAPI": [], "Fixed commit": "3839346d87d68c57789a99444fda3fff6d70143a", "Url": "https://api.github.com/repos/dshadowwolf/BaseMetals", "Date": "2017-02-23T01:15:22Z"},
{"Line": "=>901", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((individualNameMap.size()) > 0) { for (org.opencb.opencga.catalog.managers.Individual individual : family.getMembers()) { if (((individual.getMother()) != null) && ((individual.getMother().getId()) > 0)) { java.lang.String motherName = individualNameMap.get(individual.getMother().getId()); if (org.apache.commons.lang3.StringUtils.isEmpty(motherName)) { throw new org.opencb.opencga.catalog.exceptions.CatalogException((\"Incomplete family. Mother name not found under id \" + (individual.getMother().getId()))); } } if (((individual.getFather()) != null) && ((individual.getFather().getId()) > 0)) { java.lang.String fatherName = individualNameMap.get(individual.getFather().getId()); if (org.apache.commons.lang3.StringUtils.isEmpty(fatherName)) { throw new org.opencb.opencga.catalog.exceptions.CatalogException((\"Incomplete family. Father name not found under id \" + (individual.getFather().getId()))); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/960/buggy-version/opencga-catalog.src.main.java.org.opencb.opencga.catalog.managers.FamilyManager.java", "BodyUseAPI": ["java.util.Map<java.lang.Long, java.lang.String>.get(individual.getMother().getId())", "java.util.Map<java.lang.Long, java.lang.String>.get(individual.getFather().getId())"], "Fixed commit": "d0c29f7e9016e23a86814981b43056a38542f7fb", "Url": "https://api.github.com/repos/eiathom/opencga", "Date": "2017-09-15T10:12:44Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mapEntry.getMapRelation()) != null) { if ((!(mapEntry.getTargetId().matches(\".[0-9].*\"))) || (mapEntry.getTargetId().contains(\"-\"))) { validationResult.addError(((((((\"Invalid target code \" + (mapEntry.getTargetId())) + \"! For ICD10, valid target codes must contain 3 digits and must not contain a dash.\") + \" Entry:\") + (mapProject.isGroupStructure() ? (\" group \" + (java.lang.Integer.toString(mapEntry.getMapGroup()))) + \",\" : \"\")) + \" map priority \") + (java.lang.Integer.toString(mapEntry.getMapPriority())))); } org.ihtsdo.otf.mapping.rf2.Concept concept = contentService.getConcept(mapEntry.getTargetId(), mapProject.getDestinationTerminology(), mapProject.getDestinationTerminologyVersion()); if (concept == null) { validationResult.addError(((((((\"Target code \" + (mapEntry.getTargetId())) + \" not found in database!\") + \" Entry:\") + (mapProject.isGroupStructure() ? (\" group \" + (java.lang.Integer.toString(mapEntry.getMapGroup()))) + \",\" : \"\")) + \" map priority \") + (java.lang.Integer.toString(mapEntry.getMapPriority())))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/2635/buggy-version/jpa-services.src.main.java.org.ihtsdo.otf.mapping.jpa.handlers.ICD10ProjectSpecificAlgorithmHandler.java", "BodyUseAPI": ["java.lang.Integer.toString(mapEntry.getMapPriority())", "java.lang.Integer.toString(mapEntry.getMapGroup())", "org.ihtsdo.otf.mapping.model.MapEntry.getMapGroup()", "java.lang.Integer.toString(mapEntry.getMapGroup())", "org.ihtsdo.otf.mapping.model.MapEntry.getTargetId()", "mapEntry.getTargetId().matches(java.lang.String)", "org.ihtsdo.otf.mapping.model.MapEntry.getTargetId()", "org.ihtsdo.otf.mapping.helpers.ValidationResult.addError(((((((\"Target code \" + (mapEntry.getTargetId())) + \" not found in database!\") + \" Entry:\") + (mapProject.isGroupStructure() ? (\" group \" + (java.lang.Integer.toString(mapEntry.getMapGroup()))) + \",\" : \"\")) + \" map  priority \") + (java.lang.Integer.toString(mapEntry.getMapPriority()))))", "java.lang.Integer.toString(mapEntry.getMapPriority())", "org.ihtsdo.otf.mapping.model.MapEntry.getTargetId()", "org.ihtsdo.otf.mapping.model.MapEntry.getMapPriority()", "org.ihtsdo.otf.mapping.model.MapEntry.getMapGroup()", "org.ihtsdo.otf.mapping.services.ContentService.getConcept(mapEntry.getTargetId(),mapProject.getDestinationTerminology(),mapProject.getDestinationTerminologyVersion())", "org.ihtsdo.otf.mapping.helpers.ValidationResult.addError(((((((\"Invalid target code \" + (mapEntry.getTargetId())) + \"!  For ICD10, valid target codes must contain 3 digits and must not contain a dash.\") + \" Entry:\") + (mapProject.isGroupStructure() ? (\" group \" + (java.lang.Integer.toString(mapEntry.getMapGroup()))) + \",\" : \"\")) + \" map priority \") + (java.lang.Integer.toString(mapEntry.getMapPriority()))))", "org.ihtsdo.otf.mapping.model.MapEntry.getTargetId()", "org.ihtsdo.otf.mapping.model.MapEntry.getMapPriority()", "org.ihtsdo.otf.mapping.model.MapEntry.getTargetId()", "mapEntry.getTargetId().contains(java.lang.String)"], "Fixed commit": "ea926c320db8e332ab9530cc169257891fef5dfe", "Url": "https://api.github.com/repos/WestCoastInformatics/OTF-Mapping-Service", "Date": "2014-05-19T16:46:09Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (oldIsCooking != (isCooking)) updateModBlock();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/8597/buggy-version/src.main.java.com.nik7.upgcraft.tileentities.UpgCtileentityClayFluidTank.java", "BodyUseAPI": [], "Fixed commit": "d19247e20c22d4e5c39a45cd48574101e436baf5", "Url": "https://api.github.com/repos/nik7007/UpgradeCraft", "Date": "2016-05-01T23:07:04Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tank.getFluidAmount()) > (tank.getCapacity())) { tank.getFluid().amount = tank.getCapacity(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/266/buggy-version/src.main.java.net.bymarcin.evenmoreutilities.mods.superconductor.SuperConductor.java", "BodyUseAPI": ["net.minecraftforge.fluids.FluidTank.getCapacity()", "net.minecraftforge.fluids.FluidTank.getFluid()"], "Fixed commit": "b74ffc82e33434f6153a1f1a8eab924d417e05f4", "Url": "https://api.github.com/repos/Kubuxu/EvenMoreUtilities", "Date": "2014-08-02T01:44:30Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tank.getFluidAmount()) > (tank.getCapacity())) { tank.getFluid().amount = tank.getCapacity(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/266/buggy-version/src.main.java.net.bymarcin.evenmoreutilities.mods.superconductor.SuperConductor.java", "BodyUseAPI": ["net.minecraftforge.fluids.FluidTank.getCapacity()", "net.minecraftforge.fluids.FluidTank.getFluid()"], "Fixed commit": "b74ffc82e33434f6153a1f1a8eab924d417e05f4", "Url": "https://api.github.com/repos/Kubuxu/EvenMoreUtilities", "Date": "2014-08-02T01:44:30Z"},
{"Line": "=>320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(polygonclicked)) { isDelete = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/5742/buggy-version/src.main.java.io.github.data4all.view.TouchView.java", "BodyUseAPI": [], "Fixed commit": "0c940f26863136c6ad2b8f944c78fd4f8e882038", "Url": "https://api.github.com/repos/Data4All/Data4All", "Date": "2015-04-08T09:41:46Z"},
{"Line": "=>328", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((type) == (de.game_coding.armypicker.model.UnitOptionGroup.GroupType.X_OF_EACH_PER_MODEL)) || (((options.size()) == 1) && (((type) == (de.game_coding.armypicker.model.UnitOptionGroup.GroupType.ONE_PER_MODEL)) || ((type) == (de.game_coding.armypicker.model.UnitOptionGroup.GroupType.ONE_PER_MODEL_EXEPT_ONE))))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/5838/buggy-version/ArmyPicker.src.de.game_coding.armypicker.model.UnitOptionGroup.java", "BodyUseAPI": [], "Fixed commit": "393495ca75474c74d9d7fc08dcc7c82cd61da3ca", "Url": "https://api.github.com/repos/BlueCobold/ArmyPicker", "Date": "2017-05-28T19:42:39Z"},
{"Line": "=>589", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (firstTime) revalidate(); else repaint();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/4233/buggy-version/cyni-impl.src.main.java.org.cytoscape.cyni.internal.CyniPanel.java", "BodyUseAPI": [], "Fixed commit": "86e70f96fd1fa322aaf8a3ec1de8e1014ba26819", "Url": "https://api.github.com/repos/schwikowskilab/cyniProject", "Date": "2014-04-22T16:11:38Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.bangyou.android.fragment.MessageFragment.MessageAdapter.getItem(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((info.getMessageType()) == (com.bangyou.android.dao.MessageInfo.MSG_TYPE_ROB)) { android.content.Intent intent = new android.content.Intent(mActivity, com.bangyou.android.activity.OrderDetailActivity.class); intent.putExtra(Constants.ORDER_IS_ROB, true); startActivity(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/4239/buggy-version/app.src.main.java.com.bangyou.android.fragment.MessageFragment.java", "BodyUseAPI": [], "Fixed commit": "4e65aad908db6373042bc6a898d7ea6ab1b7bb58", "Url": "https://api.github.com/repos/kasnihuang/BangYou", "Date": "2016-05-02T14:18:17Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((valueInfo.getRegisterLocation().charAt(0)) != 'R') { java.lang.String memToReg = \"R\" + (d.getCurrentRegister()); d.incrementRegister(); d.addInstructionToBuilder(locationInfo.getMoveCommand(), valLoc, memToReg); valLoc = memToReg; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/5454/buggy-version/slp.src.lir.LirVisitor.java", "BodyUseAPI": [], "Fixed commit": "b7083c01068f0864c229fe9321dcae9b229d53f4", "Url": "https://api.github.com/repos/liorgluskin/CompilationCourse", "Date": "2015-12-30T01:04:50Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((nextIndex) > (-1)) { if ((entries[nextIndex]) instanceof com.orientechnologies.orient.core.db.record.OIdentifiable) return true; nextIndex = nextIndex(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/4094/buggy-version/core.src.main.java.com.orientechnologies.orient.core.db.record.ridbag.embedded.OEmbeddedRidBag.java", "BodyUseAPI": [], "Fixed commit": "4c2fbc07f83b8b4972d1a0ea3bfe14ae9f685f42", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2016-04-04T11:22:17Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(nextValue instanceof com.orientechnologies.orient.core.db.record.OIdentifiable)) { nextIndex = nextIndex(); currentIndex = nextIndex; if ((currentIndex) == (-1)) throw new java.util.NoSuchElementException(); nextValue = entries[currentIndex]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/4094/buggy-version/core.src.main.java.com.orientechnologies.orient.core.db.record.ridbag.embedded.OEmbeddedRidBag.java", "BodyUseAPI": [], "Fixed commit": "4c2fbc07f83b8b4972d1a0ea3bfe14ae9f685f42", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2016-04-04T11:22:17Z"},
{"Line": "=>653", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (alternativeUrl == null) { return hudson.util.FormValidation.error(\"No Link URL given\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/4282/buggy-version/src.main.java.hudson.plugins.jira.JiraSite.java", "BodyUseAPI": [], "Fixed commit": "16b4d9e380b9653b09aa94ba0058746213c59370", "Url": "https://api.github.com/repos/tyrius02/jira-plugin", "Date": "2013-06-12T16:13:32Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (createIfNotExist) { cleanup(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/2874/buggy-version/cat-core.src.main.java.com.dianping.cat.service.DefaultReportManager.java", "BodyUseAPI": [], "Fixed commit": "bba42082ce72419926cef809d7ca43cbbbb8c617", "Url": "https://api.github.com/repos/dianping/cat", "Date": "2013-07-24T02:26:15Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((curEpo.getAddress()) == null) && (org.apache.commons.lang.StringUtils.isNotBlank(request.getAddress()))) || (((curEpo.getAddress()) != null) && (!(curEpo.getAddress().equals(request.getAddress()))))) { result.add(createChangeItem(creditCode, openId, FIConstants.EnterpriseField.Address.getName(), curEpo.getAddress(), request.getAddress())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/3545/buggy-version/src.main.java.com.changyi.fi.component.invoice.service.InvoiceServiceImpl.java", "BodyUseAPI": ["com.changyi.fi.component.invoice.service.InvoiceServiceImpl.createChangeItem(java.lang.String,java.lang.String,FIConstants.EnterpriseField.Address.getName(),curEpo.getAddress(),request.getAddress())", "com.changyi.fi.component.invoice.request.PutInvoiceRequest.getAddress()", "java.util.List<com.changyi.fi.model.EnterpriseHistoryPO>.add(com.changyi.fi.model.EnterpriseHistoryPO)", "com.changyi.fi.model.EnterprisePO.getAddress()"], "Fixed commit": "3eb20d0c044ca72bb02d6a2a14781893158da573", "Url": "https://api.github.com/repos/finley007/Suishoushu", "Date": "2017-10-09T15:11:32Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((curEpo.getBankAcct()) == null) && (org.apache.commons.lang.StringUtils.isNotBlank(request.getBankAcct()))) || (((curEpo.getBankAcct()) != null) && (!(curEpo.getBankAcct().equals(request.getBankAcct()))))) { result.add(createChangeItem(creditCode, openId, FIConstants.EnterpriseField.BankAcct.getName(), curEpo.getBankAcct(), request.getBankAcct())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/3545/buggy-version/src.main.java.com.changyi.fi.component.invoice.service.InvoiceServiceImpl.java", "BodyUseAPI": ["com.changyi.fi.model.EnterprisePO.getBankAcct()", "com.changyi.fi.component.invoice.request.PutInvoiceRequest.getBankAcct()", "java.util.List<com.changyi.fi.model.EnterpriseHistoryPO>.add(com.changyi.fi.model.EnterpriseHistoryPO)", "com.changyi.fi.component.invoice.service.InvoiceServiceImpl.createChangeItem(java.lang.String,java.lang.String,FIConstants.EnterpriseField.BankAcct.getName(),curEpo.getBankAcct(),request.getBankAcct())"], "Fixed commit": "3eb20d0c044ca72bb02d6a2a14781893158da573", "Url": "https://api.github.com/repos/finley007/Suishoushu", "Date": "2017-10-09T15:11:32Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(curEpo.getName().equals(request.getName()))) { result.add(createChangeItem(creditCode, openId, FIConstants.EnterpriseField.Name.getName(), curEpo.getName(), request.getName())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/3545/buggy-version/src.main.java.com.changyi.fi.component.invoice.service.InvoiceServiceImpl.java", "BodyUseAPI": ["java.util.List<com.changyi.fi.model.EnterpriseHistoryPO>.add(com.changyi.fi.model.EnterpriseHistoryPO)", "com.changyi.fi.component.invoice.request.PutInvoiceRequest.getName()", "com.changyi.fi.model.EnterprisePO.getName()", "com.changyi.fi.component.invoice.service.InvoiceServiceImpl.createChangeItem(java.lang.String,java.lang.String,FIConstants.EnterpriseField.Name.getName(),curEpo.getName(),request.getName())"], "Fixed commit": "3eb20d0c044ca72bb02d6a2a14781893158da573", "Url": "https://api.github.com/repos/finley007/Suishoushu", "Date": "2017-10-09T15:11:32Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((curEpo.getBank()) == null) && (org.apache.commons.lang.StringUtils.isNotBlank(request.getBank()))) || (((curEpo.getBank()) != null) && (!(curEpo.getBank().equals(request.getBank()))))) { result.add(createChangeItem(creditCode, openId, FIConstants.EnterpriseField.Bank.getName(), curEpo.getBank(), request.getBank())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/3545/buggy-version/src.main.java.com.changyi.fi.component.invoice.service.InvoiceServiceImpl.java", "BodyUseAPI": ["com.changyi.fi.component.invoice.service.InvoiceServiceImpl.createChangeItem(java.lang.String,java.lang.String,FIConstants.EnterpriseField.Bank.getName(),curEpo.getBank(),request.getBank())", "com.changyi.fi.model.EnterprisePO.getBank()", "java.util.List<com.changyi.fi.model.EnterpriseHistoryPO>.add(com.changyi.fi.model.EnterpriseHistoryPO)", "com.changyi.fi.component.invoice.request.PutInvoiceRequest.getBank()"], "Fixed commit": "3eb20d0c044ca72bb02d6a2a14781893158da573", "Url": "https://api.github.com/repos/finley007/Suishoushu", "Date": "2017-10-09T15:11:32Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (emailList.isEmpty()) { emailList.add(new seedu.address.model.person.Email()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/4343/buggy-version/src.main.java.seedu.address.storage.XmlUserPerson.java", "BodyUseAPI": [], "Fixed commit": "3f8593a2b92438727e91bcb7e903e6122f08a561", "Url": "https://api.github.com/repos/hansiang93/addressbook-level4", "Date": "2017-11-13T14:13:52Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.tealduck.game.DuckGame.getControllerName(com.badlogic.gdx.controllers.Controller)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(com.tealduck.game.input.ControlMapCreator.isControllerKnown(controllerName))) { controller = null; Gdx.app.log(\"Controller\", \"Controller not known\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/837/buggy-version/core.src.com.tealduck.game.DuckGame.java", "BodyUseAPI": [], "Fixed commit": "6ba20c0d434d002b44a1c3dbe39942cfef14656b", "Url": "https://api.github.com/repos/teal-duck/teal-duck", "Date": "2016-01-19T19:26:25Z"},
{"Line": "=>514", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.os.Build.VERSION.SDK_INT) < 11) needSetContentAgain = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/6979/buggy-version/src.com.darshancomputing.BatteryIndicatorPro.BatteryInfoService.java", "BodyUseAPI": [], "Fixed commit": "233f4416ea6dd256966698285e138c1dda455f99", "Url": "https://api.github.com/repos/darshan-/Battery-Indicator-Pro", "Date": "2016-07-25T08:04:59Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (needSetContentAgain) n.contentView = notificationRV;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/6979/buggy-version/src.com.darshancomputing.BatteryIndicatorPro.BatteryInfoService.java", "BodyUseAPI": [], "Fixed commit": "233f4416ea6dd256966698285e138c1dda455f99", "Url": "https://api.github.com/repos/darshan-/Battery-Indicator-Pro", "Date": "2016-07-25T08:04:59Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.securityconfirm.layout.model.SecurityContext.userList) == null) { com.securityconfirm.layout.model.SecurityContext.userList = new java.util.ArrayList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/7793/buggy-version/library.src.main.java.com.securityconfirm.layout.model.SecurityContext.java", "BodyUseAPI": [], "Fixed commit": "9f0832e2933b204c97755ff82a2b3f2491dc4629", "Url": "https://api.github.com/repos/AlexeyZatsepin/Keyboard-writing-authentication", "Date": "2017-03-13T12:13:25Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (volunteerId == null) { availableEvents.refreshNow(); }else { availableEvents.deleteItems(new com.tcts.common.CachedList.Filter<com.tcts.datamodel.Event>() { @java.lang.Override public boolean keep(com.tcts.datamodel.Event item) { return !(item.getEventId().equals(eventId)); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/7609/buggy-version/src.main.java.com.tcts.database.CachingDatabase.java", "BodyUseAPI": [], "Fixed commit": "40777d0558048e40c6164b2adf9c565f3b7a3839", "Url": "https://api.github.com/repos/mcherm/TeachChildrenToSave", "Date": "2016-01-17T18:28:41Z"},
{"Line": "=>643", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.box.androidsdk.browse.uidata.BoxListItem.getBoxItem()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (item != null) { if (((item.getModifiedAt()) != null) && ((item.getSize()) != null)) { description = java.lang.String.format(java.util.Locale.ENGLISH, \"%s \u2022 %s\", java.text.DateFormat.getDateInstance(java.text.DateFormat.MEDIUM).format(item.getModifiedAt()).toUpperCase(), localFileSizeToDisplay(item.getSize())); }else if ((item.getSize()) != null) { localFileSizeToDisplay(item.getSize()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/3520/buggy-version/box-browse-sdk.src.main.java.com.box.androidsdk.browse.fragments.BoxBrowseFragment.java", "BodyUseAPI": ["com.box.androidsdk.content.models.BoxItem.getSize()", "com.box.androidsdk.content.models.BoxItem.getModifiedAt()", "java.lang.String.format(java.util.Locale,java.lang.String,java.text.DateFormat.getDateInstance(java.text.DateFormat.MEDIUM).format(item.getModifiedAt()).toUpperCase(),java.lang.String)", "java.lang.String.toUpperCase()", "com.box.androidsdk.content.models.BoxItem.getSize()", "com.box.androidsdk.content.models.BoxItem.getSize()", "com.box.androidsdk.content.models.BoxItem.getModifiedAt()", "com.box.androidsdk.browse.fragments.BoxBrowseFragment.localFileSizeToDisplay(item.getSize())", "com.box.androidsdk.browse.fragments.BoxBrowseFragment.localFileSizeToDisplay(item.getSize())", "com.box.androidsdk.content.models.BoxItem.getSize()", "java.text.DateFormat.format(item.getModifiedAt())"], "Fixed commit": "b253a75bccf804661740a0a062ec0cfab05e994d", "Url": "https://api.github.com/repos/shikharmohan/box-android-browse-sdk", "Date": "2015-07-29T17:59:13Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getTank().getFluidAmount()) <= 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/5456/buggy-version/src.main.java.cyano.poweradvantage.machines.fluidmachines.FluidDrainTileEntity.java", "BodyUseAPI": [], "Fixed commit": "f4e94ba2c860fba2300ab079e70b5bf4721642fb", "Url": "https://api.github.com/repos/cyanobacterium/PowerAdvantageAPI", "Date": "2016-06-07T11:55:44Z"},
{"Line": "=>1459", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(kmelia.isTopicAdmin(id))) { return \"/admin/jsp/accessForbidden.jsp\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/3837/buggy-version/kmelia.kmelia-war.src.main.java.com.stratelia.webactiv.kmelia.servlets.KmeliaRequestRouter.java", "BodyUseAPI": [], "Fixed commit": "b5bfb7f99bdfef70ba2f07e45d4240c833e7f56a", "Url": "https://api.github.com/repos/SilverTeamWork/Silverpeas-Components", "Date": "2015-07-20T13:14:07Z"},
{"Line": "=>1509", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.silverpeas.servlet.HttpRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (kmelia.isTopicAdmin(nodeId)) { kmelia.updateTopicRole(role, nodeId, groupIds, userIds); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/3837/buggy-version/kmelia.kmelia-war.src.main.java.com.stratelia.webactiv.kmelia.servlets.KmeliaRequestRouter.java", "BodyUseAPI": ["com.stratelia.webactiv.kmelia.control.KmeliaSessionController.updateTopicRole(java.lang.String,java.lang.String,java.lang.String[],java.lang.String[])"], "Fixed commit": "b5bfb7f99bdfef70ba2f07e45d4240c833e7f56a", "Url": "https://api.github.com/repos/SilverTeamWork/Silverpeas-Components", "Date": "2015-07-20T13:14:07Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.pj.magic.gui.component.MagicTextField.getTextAsInteger()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (targetPage == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/5373/buggy-version/src.main.java.com.pj.magic.gui.dialog.PrintPreviewDialog.java", "BodyUseAPI": [], "Fixed commit": "9c4aef383b2b0801b9fc5e69911a26b7d0b01f46", "Url": "https://api.github.com/repos/pendelhaven3/magic", "Date": "2015-03-16T01:42:54Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.sun.cldc.i18n.uclc.DefaultCaseConverter.isLowerCase(ch)) { if (ch <= 'z') { return ((char) (ch - ('a' - 'A'))); }else { return ((char) (ch - 32)); } }else { return ch; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/29/buggy-version/java.cldc1.1.1.com.sun.cldc.i18n.uclc.DefaultCaseConverter.java", "BodyUseAPI": [], "Fixed commit": "9540097156aa4a301e414f2df6c9f3dbf674be92", "Url": "https://api.github.com/repos/marco-c/pluotsorbet", "Date": "2015-01-06T14:46:05Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.sun.cldc.i18n.uclc.DefaultCaseConverter.isUpperCase(ch)) { if (ch <= 'Z') { return ((char) (ch + ('a' - 'A'))); }else { return ((char) (ch + 32)); } }else { return ch; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/29/buggy-version/java.cldc1.1.1.com.sun.cldc.i18n.uclc.DefaultCaseConverter.java", "BodyUseAPI": [], "Fixed commit": "9540097156aa4a301e414f2df6c9f3dbf674be92", "Url": "https://api.github.com/repos/marco-c/pluotsorbet", "Date": "2015-01-06T14:46:05Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((user.getPhone()) != null) { userParse.put(com.stepout.main.DataExchange.PHONE_COL_NAME, user.getPhone()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/2169/buggy-version/app.src.main.java.com.stepout.main.DataExchange.java", "BodyUseAPI": ["com.stepout.main.models.User.getPhone()", "com.parse.ParseObject.put(java.lang.String,user.getPhone())"], "Fixed commit": "f967e8f5c457c33c4625c39a31fab756c2870b5f", "Url": "https://api.github.com/repos/chechulinYuri/stepout", "Date": "2014-08-14T07:17:51Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getResources().getConfiguration().orientation) == (android.content.res.Configuration.ORIENTATION_LANDSCAPE)) { finish(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/621/buggy-version/GeekHub_Proj02.src.com.kai.geekhub.geekhub_proj02.DetailsActionBarActivity.java", "BodyUseAPI": [], "Fixed commit": "2cecf9bf76e1107a9fff6f2a54d087da230ac83b", "Url": "https://api.github.com/repos/Alex-Kuroi-Folts/GeekHub_Proj02", "Date": "2013-11-11T11:13:39Z"},
{"Line": "=>444", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.util.Collection.class.isAssignableFrom(aTargetType)) { tempCollectionType = java.util.ArrayList.class; }else { tempTargetType = aTargetType; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/772/buggy-version/de.gebit.integrity.dsl.src.de.gebit.integrity.parameter.conversion.AbstractModularValueConverter.java", "BodyUseAPI": [], "Fixed commit": "feb906bc18bed5277cbb391ae76a069a9d1eb818", "Url": "https://api.github.com/repos/integrity-tf/integrity", "Date": "2013-05-09T17:37:33Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (method instanceof IC.Types.LibraryMethod) throw new IC.Types.TypeException(java.lang.String.format(\"Method %s has no return statement\", method.getName()), method.getLine());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/3179/buggy-version/src.IC.Types.ReturnValidator.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,method.getName())", "IC.Types.Method.getName()", "IC.Types.Method.getLine()"], "Fixed commit": "f519dbfc3fd33636c722c2ca1d666d2f8ad7b3af", "Url": "https://api.github.com/repos/Compiler2015a/PA03", "Date": "2014-12-16T20:28:40Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.todoroo.astrid.tags.TagService.getTagWithCase(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(addedTags.contains(tagWithCase))) tags.add(tagWithCase);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/679/buggy-version/astrid.src.com.todoroo.astrid.utility.TitleParser.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "c2058f8a7e71765712ddc94c888683e6145430eb", "Url": "https://api.github.com/repos/todoroo/astrid", "Date": "2012-09-13T17:42:34Z"},
{"Line": "=>3819", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((LOGGED_IN_USERNAME) == null) { android.util.Log.d(mobile.tiis.staging.base.BackboneApplication.TAG, \"username null\"); java.util.List<mobile.tiis.staging.entity.User> allUsers = databaseInstance.getAllUsers(); mobile.tiis.staging.entity.User user = allUsers.get(0); username = user.getUsername(); password = user.getPassword(); }else { username = LOGGED_IN_USERNAME; password = LOGGED_IN_USER_PASS; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/86/buggy-version/appV2.src.main.java.mobile.tiis.staging.base.BackboneApplication.java", "BodyUseAPI": [], "Fixed commit": "461579ac11a511bce24ece3d9a46c717ec955d20", "Url": "https://api.github.com/repos/BIDMOH/TIIS2-Android-Mobile-Client-Application", "Date": "2016-11-21T16:42:51Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (min.equals(max)) { return 1.0F; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/1057/buggy-version/modules.AppearanceAPI.src.main.java.org.gephi.appearance.RankingImpl.java", "BodyUseAPI": [], "Fixed commit": "d15052281e8450ab1ccdbc2ad283314719fcfc8e", "Url": "https://api.github.com/repos/gephi/gephi", "Date": "2015-12-22T10:06:45Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isJava8) { return org.aeonbits.owner.util.Java8SupportImpl.Lookup.in(declaringClass).unreflectSpecial(method, declaringClass).bindTo(proxy).invokeWithArguments(args); }else { java.lang.invoke.MethodType rt = java.lang.invoke.MethodType.methodType(method.getReturnType(), method.getParameterTypes()); return java.lang.invoke.MethodHandles.lookup().findSpecial(declaringClass, method.getName(), rt, declaringClass).bindTo(proxy).invokeWithArguments(args); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/6178/buggy-version/owner-java8.src.main.java.org.aeonbits.owner.util.Java8SupportImpl.java", "BodyUseAPI": [], "Fixed commit": "cba181cf426439f2c48b10ff76b783ecbe432d62", "Url": "https://api.github.com/repos/lviggiano/owner", "Date": "2017-11-07T10:19:12Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((points) >= 10) { com.bignerdranch.android.thegaps.sprites.Blocks.MOVEMENT = -400; if ((points) >= 15) { com.bignerdranch.android.thegaps.sprites.Blocks.MOVEMENT = -500; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/1749/buggy-version/core.src.com.bignerdranch.android.thegaps.States.PlayState.java", "BodyUseAPI": [], "Fixed commit": "ec1ed2abb8acc0d0c01278b3e4aa3ad22b8fd7dd", "Url": "https://api.github.com/repos/NafisFaisalKhan/DamnGaps", "Date": "2016-08-07T15:43:57Z"},
{"Line": "=>385", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((files.size()) == 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/6371/buggy-version/components.formats-common.src.loci.common.Location.java", "BodyUseAPI": [], "Fixed commit": "433c72c24fc68531361f80f290740f3af0e721d1", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2014-04-28T04:26:41Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((data.getByteSize()) > (maxCacheSize)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/9043/buggy-version/services.tools.descartes.petstore.image.src.main.java.tools.descartes.petstore.image.cache.AbstractCache.java", "BodyUseAPI": [], "Fixed commit": "66494be2ab6beec9b812c00dfe71998d9d8fdff0", "Url": "https://api.github.com/repos/DescartesResearch/TeaStore", "Date": "2017-08-19T17:30:48Z"},
{"Line": "=>400", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(questionDone)) { if ((question_type) == 2) { if (mGoogleApiClient.isConnected()) { if ((android.support.v4.content.ContextCompat.checkSelfPermission(this, android.Manifest.permission.ACCESS_FINE_LOCATION)) == (android.content.pm.PackageManager.PERMISSION_GRANTED)) { com.google.android.gms.common.api.PendingResult<com.google.android.gms.common.api.Status> pendingResult = LocationServices.FusedLocationApi.requestLocationUpdates(mGoogleApiClient, mLocationRequest, this); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/8451/buggy-version/ProjectAssignment.app.src.main.java.com.a0122554m.kohweilun.projectassignment.ChallengeQuizHintActivity.java", "BodyUseAPI": [], "Fixed commit": "a4783b86ea1b4370d7a7e5594030517cdfd6da3b", "Url": "https://api.github.com/repos/JailLance/IS3261-Project", "Date": "2017-11-11T07:16:37Z"},
{"Line": "=>380", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(questionDone)) { if ((question_type) == 2) { mGoogleApiClient.connect(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/8451/buggy-version/ProjectAssignment.app.src.main.java.com.a0122554m.kohweilun.projectassignment.ChallengeQuizHintActivity.java", "BodyUseAPI": [], "Fixed commit": "a4783b86ea1b4370d7a7e5594030517cdfd6da3b", "Url": "https://api.github.com/repos/JailLance/IS3261-Project", "Date": "2017-11-11T07:16:37Z"},
{"Line": "=>390", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(questionDone)) { if ((question_type) == 2) { mGoogleApiClient.disconnect(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/8451/buggy-version/ProjectAssignment.app.src.main.java.com.a0122554m.kohweilun.projectassignment.ChallengeQuizHintActivity.java", "BodyUseAPI": [], "Fixed commit": "a4783b86ea1b4370d7a7e5594030517cdfd6da3b", "Url": "https://api.github.com/repos/JailLance/IS3261-Project", "Date": "2017-11-11T07:16:37Z"},
{"Line": "=>2206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (caps.contains(Caps.OpenGL20)) { if (img.hasMipmaps()) { gl.glTexParameteri(target, GL2.GL_TEXTURE_MAX_LEVEL, ((img.getMipMapSizes().length) - 1)); }else { gl.glTexParameteri(target, GL2.GL_TEXTURE_MAX_LEVEL, 0); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/5345/buggy-version/jme3-core.src.main.java.com.jme3.renderer.opengl.GLRenderer.java", "BodyUseAPI": [], "Fixed commit": "1ca23adc6e524ce1b1ea77e9ef937a620e1750b7", "Url": "https://api.github.com/repos/jMonkeyEngine/jmonkeyengine", "Date": "2017-09-18T02:48:05Z"},
{"Line": "=>9355", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (addedPsList) lan[0] = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/4386/buggy-version/src.java.soc.server.SOCServer.java", "BodyUseAPI": [], "Fixed commit": "e4e083903b4378872b4199082cc61cd362675d8a", "Url": "https://api.github.com/repos/paulbilnoski/JSettlers2", "Date": "2012-10-30T22:52:02Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.lastIndexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (lastNewLine != (-1)) { line = line.substring((lastNewLine + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/500/buggy-version/src.exporters.radare.inputModule.RadareDisassemblyParser.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "5bb82780831c30bf399f72f562d9eb618c46a9a5", "Url": "https://api.github.com/repos/octopus-platform/bjoern", "Date": "2016-02-25T17:31:35Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.util.ArrayList<java.lang.String>>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (victim.isEmpty()) { byKey.remove(key); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/9180/buggy-version/src.main.java.com.brightcove.johnny.parts.MutableMultimapQuery.java", "BodyUseAPI": [], "Fixed commit": "8a7557c7549110999ab2c8321c1dd4b457e0f2b9", "Url": "https://api.github.com/repos/timmc/johnny", "Date": "2013-07-15T16:31:04Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((robotController.currentSpeechJob) == null) { ret = true; }else { ret = (robotController.currentSpeechJob.getStatus()) == (org.robokind.api.speech.utils.DefaultSpeechJob.COMPLETE); if (ret) { robotController.currentSpeechJob = null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/8489/buggy-version/src.main.java.uk.ac.shef.museum.MuseumUtils.java", "BodyUseAPI": ["robotController.currentSpeechJob.getStatus()"], "Fixed commit": "7b2bae1b42f76f232cdd23ab169890a7b0575823", "Url": "https://api.github.com/repos/samuelfernando/Museum", "Date": "2014-03-21T17:47:06Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tag.equals(tooltip)) || (tag.equals((tooltip + \" I\")))) return tooltip + \" II\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/8290/buggy-version/src.main.java.tconstruct.library.tools.ToolMod.java", "BodyUseAPI": [], "Fixed commit": "a0a6808edbc57d581691ae71681275fd3bd71f44", "Url": "https://api.github.com/repos/Glassmaker/TinkersConstruct", "Date": "2014-04-11T05:41:02Z"},
{"Line": "=>491", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(((getTableModel().getValues()) != null) && ((getTableModel().getValues().size()) > 0))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/3824/buggy-version/flexodesktop.GUI.flexointerfacebuilder.src.main.java.org.openflexo.fib.view.widget.FIBTableWidget.java", "BodyUseAPI": [], "Fixed commit": "8849a7dad3180aa0b27577c8b4a0f361afde3eeb", "Url": "https://api.github.com/repos/agilebirds/openflexo", "Date": "2013-09-18T14:06:15Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((net.vicp.lylab.utils.cache.LYCache.instance) == null) net.vicp.lylab.utils.cache.LYCache.instance = this; else return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/2641/buggy-version/src.net.vicp.lylab.utils.cache.LYCache.java", "BodyUseAPI": [], "Fixed commit": "682992b91663f5ae4e7ca2c8b27bda3cd05f10b1", "Url": "https://api.github.com/repos/liyang-bsy/LYLab", "Date": "2015-06-10T02:16:01Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((net.vicp.lylab.utils.cache.LYCache.instance) == null) net.vicp.lylab.utils.cache.LYCache.instance = this; else return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/2641/buggy-version/src.net.vicp.lylab.utils.cache.LYCache.java", "BodyUseAPI": [], "Fixed commit": "682992b91663f5ae4e7ca2c8b27bda3cd05f10b1", "Url": "https://api.github.com/repos/liyang-bsy/LYLab", "Date": "2015-06-10T02:16:01Z"},
{"Line": "=>608", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((profInfo.size()) < size) size = profInfo.size();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/310/buggy-version/src.coq.cqDataObject.java", "BodyUseAPI": ["java.util.ArrayList<coq.cqDataObject.OffsetTime>.size()"], "Fixed commit": "a663c072690a2f8ab9c9d4f593bf10962e8075ed", "Url": "https://api.github.com/repos/aa755/nbcoq", "Date": "2014-01-17T04:51:02Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ac.simons.biking2.persistence.repositories.BikeRepository.findOne(java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((bike.getDecommissionedOn()) != null) { throw new java.lang.IllegalArgumentException(\"Bike has already been decommissioned.\"); }else { final ac.simons.biking2.persistence.entities.Milage milage = bike.addMilage(cmd.recordedOnAsLocalDate(), cmd.getAmount()); this.bikeRepository.save(bike); rv = new org.springframework.http.ResponseEntity(milage, org.springframework.http.HttpStatus.OK); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/824/buggy-version/src.main.java.ac.simons.biking2.api.BikesController.java", "BodyUseAPI": ["ac.simons.biking2.persistence.entities.Bike.addMilage(cmd.recordedOnAsLocalDate(),cmd.getAmount())", "ac.simons.biking2.persistence.repositories.BikeRepository.save(ac.simons.biking2.persistence.entities.Bike)"], "Fixed commit": "97a1b6aeab90c3f1c2dbe3bd55699dd589cbb655", "Url": "https://api.github.com/repos/michael-simons/biking2", "Date": "2014-10-20T15:21:30Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.extensiblecatalog.ncip.v2.koha.util.KohaUtil.parseRequestedItem(org.json.simple.JSONObject)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (requestedItem != null) requestedItems.add(requestedItem);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/648/buggy-version/connectors.koha.3.xx.trunk.jar.src.main.java.org.extensiblecatalog.ncip.v2.koha.KohaLookupUserService.java", "BodyUseAPI": ["java.util.List<org.extensiblecatalog.ncip.v2.service.RequestedItem>.add(org.extensiblecatalog.ncip.v2.service.RequestedItem)"], "Fixed commit": "310623d9fa1cac24aea7763b44e26e43e228266a", "Url": "https://api.github.com/repos/moravianlibrary/xcncip2toolkit", "Date": "2015-06-20T17:42:44Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gsoc14.ctd2biopax.converter.IxnType.getActor()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((actors.size()) < 2) { com.google.gsoc14.ctd2biopax.converter.CTDInteractionConverter.log.warn(((\"Ixn #\" + (ixn.getId())) + \" has less than two actors. Skipping conversion for this reaction. \")); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/1886/buggy-version/src.main.java.com.google.gsoc14.ctd2biopax.converter.CTDInteractionConverter.java", "BodyUseAPI": [], "Fixed commit": "ab5c38d3293e6b6f2cfc3797701494b76890f9da", "Url": "https://api.github.com/repos/PathwayCommons/ctd-to-biopax", "Date": "2014-07-02T21:38:40Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.synapse.MessageContext.getSequenceTemplate(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (mediator instanceof org.apache.synapse.mediators.template.TemplateMediator) { org.apache.synapse.transport.customlogsetter.CustomLogSetter.getInstance().setLogAppender(((org.apache.synapse.mediators.template.TemplateMediator) (mediator)).getArtifactContainerName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/2470/buggy-version/modules.core.src.main.java.org.apache.synapse.mediators.template.InvokeMediator.java", "BodyUseAPI": [], "Fixed commit": "d1b18ba6bb771f7a21bdeff8d2618c4f90562fbf", "Url": "https://api.github.com/repos/ravindraranwala/wso2-synapse", "Date": "2016-05-31T14:42:59Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (co.uk.niadel.tenebrarummagia.common.block.BlockDarkFurnace.isItemAccepted(stack)) { if (!(this.darkFurnace.convertItem(stack))) { super.putStack(stack); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/3151/buggy-version/src.main.java.co.uk.niadel.tenebrarummagia.common.containers.slot.SlotDarkFurnace.java", "BodyUseAPI": ["net.minecraft.inventory.Slot.putStack(net.minecraft.item.ItemStack)", "co.uk.niadel.tenebrarummagia.common.entity.tileentity.TileEntityDarkFurnace.convertItem(net.minecraft.item.ItemStack)"], "Fixed commit": "2d4f534ac6eefe5aa57418f8dcc0867edba2dec2", "Url": "https://api.github.com/repos/Niadel/TenebrarumMagia", "Date": "2015-02-04T21:39:20Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(fired)) { fired = true; ma.setDate(getTag(), year, monthOfYear, dayOfMonth); timePickerFragment.show(getFragmentManager(), getTag()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/9202/buggy-version/src.it.skb.carsharing.ui.DatePickerFragment.java", "BodyUseAPI": [], "Fixed commit": "c75fd569af173e99d8714f21acb9e7fc700747cc", "Url": "https://api.github.com/repos/purusha/guidaMi", "Date": "2013-04-25T17:30:51Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (i == 0) { average[k] = java.lang.Double.parseDouble(tableAverage[k]); max[k] = java.lang.Double.parseDouble(tableMax[k]); min[k] = java.lang.Double.parseDouble(tableMin[k]); }else { average[k] = ((average[k]) + (java.lang.Double.parseDouble(tableAverage[k]))) / 2.0; max[k] = ((max[k]) + (java.lang.Double.parseDouble(tableMax[k]))) / 2.0; min[k] = ((min[k]) + (java.lang.Double.parseDouble(tableMin[k]))) / 2.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/864/buggy-version/src.ga.Plot.java", "BodyUseAPI": [], "Fixed commit": "77dc1a65acc5d3122e522c9bbdd3729fab6ebe02", "Url": "https://api.github.com/repos/helenetangen/GA", "Date": "2016-03-15T13:43:39Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["stream.getKey(ASAtom.LENGTH).get()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (number.isIndirect()) { number = number.getDirectBase(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/2270/buggy-version/validation-model.src.main.java.org.verapdf.model.impl.cos.GFCosStream.java", "BodyUseAPI": ["org.verapdf.model.impl.cos.COSBase.getDirectBase()"], "Fixed commit": "91f2ec5fe0eff12c672e1d026728826821c50360", "Url": "https://api.github.com/repos/timurkamalov/veraPDF-validation", "Date": "2016-09-07T13:37:39Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (socket.isOpen()) { socket.send(java.lang.String.format(\"player.leave=%s\", name)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/9060/buggy-version/src.net.voidteam.socketchat.events.MessageEvents.java", "BodyUseAPI": ["org.java_websocket.WebSocket.send(java.lang.String)"], "Fixed commit": "a4fae30dcc6243d99e44ada20fc8dc4e20ebcd91", "Url": "https://api.github.com/repos/VoidTeam/SocketChat", "Date": "2014-06-21T06:04:42Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((pdpModel.get().getVehicleState(vehicle.get())) != (com.github.rinde.rinsim.core.model.pdp.PDPModel.VehicleState.IDLE)) { final com.github.rinde.rinsim.core.model.pdp.Parcel servicingParcel = pdpModel.get().getVehicleActionInfo(vehicle.get()).getParcel(); if (!(route.peek().equals(servicingParcel))) { route.removeFirstOccurrence(servicingParcel); route.addFirst(servicingParcel); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/7581/buggy-version/src.main.java.com.github.rinde.logistics.pdptw.mas.route.RtSolverRoutePlanner.java", "BodyUseAPI": ["pdpModel.get().getVehicleActionInfo(vehicle.get()).getParcel()", "com.github.rinde.logistics.pdptw.mas.route.RtSolverRoutePlanner.get()", "com.github.rinde.logistics.pdptw.mas.route.RtSolverRoutePlanner.get()", "pdpModel.get().getVehicleActionInfo(vehicle.get())"], "Fixed commit": "d6dff8e814a74d9e5a1d57e9e4b2e8a02cbe0fc0", "Url": "https://api.github.com/repos/rinde/RinLog", "Date": "2015-12-03T13:24:18Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.collectionspace.chain.csp.schema.Spec.getRecord(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (restrictedmediaR != null) { addMethod(Operation.READ, new java.lang.String[]{ r.getWebURL(), restrictedmediaR.getWebURL() }, 1, new org.collectionspace.chain.csp.webui.record.RecordSearchList(restrictedmediaR, org.collectionspace.chain.csp.webui.record.RecordSearchList.MODE_SEARCH_RELATED)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/2324/buggy-version/cspi-webui.src.main.java.org.collectionspace.chain.csp.webui.main.WebUI.java", "BodyUseAPI": ["org.collectionspace.chain.csp.schema.Record.getWebURL()", "org.collectionspace.chain.csp.webui.main.WebUI.addMethod(Operation.READ,java.lang.String[],int,org.collectionspace.chain.csp.webui.record.RecordSearchList)"], "Fixed commit": "3549246c0294f2a80a8e1ff5ebb7f76f0c15ac38", "Url": "https://api.github.com/repos/OaklandMuseum/application", "Date": "2016-03-26T23:57:54Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.collectionspace.chain.csp.schema.Spec.getRecord(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (restrictedmediaR == null) org.collectionspace.chain.csp.webui.main.WebUI.log.error(\"No media record configured!!!\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/2324/buggy-version/cspi-webui.src.main.java.org.collectionspace.chain.csp.webui.main.WebUI.java", "BodyUseAPI": [], "Fixed commit": "3549246c0294f2a80a8e1ff5ebb7f76f0c15ac38", "Url": "https://api.github.com/repos/OaklandMuseum/application", "Date": "2016-03-26T23:57:54Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getGame().isGameOver()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/3865/buggy-version/src.base_attack.Base.java", "BodyUseAPI": [], "Fixed commit": "4567f628b7d51d620ebf42d15905742387d62504", "Url": "https://api.github.com/repos/scarboot/Base-Attack", "Date": "2015-07-20T17:03:08Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getGame().isGameOver()) getGame().onGameEnd();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/3865/buggy-version/src.base_attack.Base.java", "BodyUseAPI": [], "Fixed commit": "4567f628b7d51d620ebf42d15905742387d62504", "Url": "https://api.github.com/repos/scarboot/Base-Attack", "Date": "2015-07-20T17:03:08Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (target == null) target = gameState.getMe().getPos();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/8472/buggy-version/vindinium-client-1.0.0.src.main.java.com.brianstempin.vindiniumclient.bot.advanced.CHE2.CHEBot2.java", "BodyUseAPI": [], "Fixed commit": "4b02bc0cb44c33725b820dc89bf5f3aee6ea89d4", "Url": "https://api.github.com/repos/FillInNameHere/HAW-Hamburg-CHE", "Date": "2016-06-06T08:31:08Z"},
{"Line": "=>835", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((!(org.ednovo.gooru.client.mvp.gshelf.collectiondetails.CollectionInfoView.i18n.GL3367().equalsIgnoreCase(courseObj.getTitle()))) && (!(org.ednovo.gooru.client.mvp.gshelf.collectiondetails.CollectionInfoView.i18n.GL3396().equalsIgnoreCase(courseObj.getTitle())))) && (!(\"UntitledExternalAssessment\".equalsIgnoreCase(courseObj.getTitle())))) { java.lang.String idVal = org.ednovo.gooru.application.client.gin.AppClientFactory.getPlaceManager().getCurrentPlaceRequest().getParameter(\"id\", null); if (idVal != null) { collectionTitle.setText(courseObj.getTitle()); }else { ulSelectedItems.clear(); selectedValues.clear(); resetErrorMessages(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/3322/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.gshelf.collectiondetails.CollectionInfoView.java", "BodyUseAPI": ["org.ednovo.gooru.application.shared.model.folder.FolderDo.getTitle()", "com.google.gwt.user.client.ui.TextBox.setText(courseObj.getTitle())"], "Fixed commit": "e7b09f35e365eef37e07a816079a022b41c7d83f", "Url": "https://api.github.com/repos/chandrasekharv/Gooru-Web", "Date": "2015-10-08T14:09:24Z"},
{"Line": "=>949", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (index == 1) { java.lang.String idVal = org.ednovo.gooru.application.client.gin.AppClientFactory.getPlaceManager().getCurrentPlaceRequest().getParameter(\"id\", null); if ((idVal == null) && ((collectionType.equalsIgnoreCase(\"collection\")) || (collectionType.equalsIgnoreCase(\"assessment\")))) { getUiHandlers().createAndSaveCourseDetails(createOrUpDate, isCreate, currentShelfTreeWidget); }else { if (((courseObjG) != null) && ((courseObjG.getGooruOid()) != null)) { getUiHandlers().updateCourseDetails(createOrUpDate, courseObjG.getGooruOid(), isCreate, courseObjG, currentShelfTreeWidget); }else { getUiHandlers().createAndSaveCourseDetails(createOrUpDate, isCreate, currentShelfTreeWidget); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/3322/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.gshelf.collectiondetails.CollectionInfoView.java", "BodyUseAPI": [], "Fixed commit": "e7b09f35e365eef37e07a816079a022b41c7d83f", "Url": "https://api.github.com/repos/chandrasekharv/Gooru-Web", "Date": "2015-10-08T14:09:24Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((targetClass != null) && (targetClass.equals(byte[].class))) { return bytes; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/3667/buggy-version/kundera-core.src.main.java.com.impetus.kundera.property.accessor.ObjectAccessor.java", "BodyUseAPI": [], "Fixed commit": "0c6ee132161c1838f3f16f2ed2e7a118726a099f", "Url": "https://api.github.com/repos/impetus-opensource/Kundera", "Date": "2012-07-16T11:19:50Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSocketAcceptThread) != null) { mSocketAcceptThread.interrupt(); try { mSocketAcceptThread.join(); } catch (java.lang.Exception e) { } mSocketAcceptThread = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/4714/buggy-version/src.com.sonycsl.echo.protocol.EchoTCPProtocol.java", "BodyUseAPI": [], "Fixed commit": "450138d5bef0955503c2a8a503e728bd5bcd2b45", "Url": "https://api.github.com/repos/SonyCSL/OpenECHO", "Date": "2014-06-27T06:43:03Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.w3c.dom.NamedNodeMap.getNamedItem(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (srcAttribute != null) { imgId = srcAttribute.getNodeValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/7952/buggy-version/plugins.org.eclipse.osee.define.report.src.org.eclipse.osee.define.report.internal.wordupdate.WordImageArtifactElementExtractor.java", "BodyUseAPI": ["org.w3c.dom.Node.getNodeValue()"], "Fixed commit": "119d8f6184ee422741c6c01ed575069e224f2079", "Url": "https://api.github.com/repos/eclipse/osee", "Date": "2015-08-03T15:29:03Z"},
{"Line": "=>302", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.w3c.dom.NamedNodeMap.getNamedItem(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (srcAttribute != null) { guid = srcAttribute.getNodeValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/7952/buggy-version/plugins.org.eclipse.osee.define.report.src.org.eclipse.osee.define.report.internal.wordupdate.WordImageArtifactElementExtractor.java", "BodyUseAPI": ["org.w3c.dom.Node.getNodeValue()"], "Fixed commit": "119d8f6184ee422741c6c01ed575069e224f2079", "Url": "https://api.github.com/repos/eclipse/osee", "Date": "2015-08-03T15:29:03Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (sensorText != null) { if ((sensorFragInterface.getSensorConfig((finalPosition + 1)).getFreq()) == (SensorConst.RATE_OFF)) { sensorText.setText(((\"Sensor \" + (finalPosition + 1)) + \" - No Data\")); }else { sensorText.setText(sensorData.get(position)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/4669/buggy-version/Android_code.STEM-METER.app.src.main.java.com.stemmeter.stem_meter.SensorsFragment.java", "BodyUseAPI": ["android.widget.TextView.setText(java.lang.String)", "android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "1c8b6cf9432840802e0b9b70d8a4045f930d4ba8", "Url": "https://api.github.com/repos/jhansen3141/STEM_Meter", "Date": "2017-03-06T18:57:04Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(discussService.exists(replyId))) return cn.momia.common.core.http.MomiaHttpResponse.FAILED(\"\u65e0\u6548\u7684\u56de\u590d\uff0c\u4e0d\u80fd\u70b9\u8d5e\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/2071/buggy-version/discuss.service-discuss.src.main.java.cn.momia.service.discuss.web.ctrl.DiscussController.java", "BodyUseAPI": [], "Fixed commit": "f9eccbd2b650c4b025c4196bfc4fff7f3a3b4e86", "Url": "https://api.github.com/repos/lovemomia/service", "Date": "2016-02-19T09:51:28Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(discussService.exists(replyId))) return cn.momia.common.core.http.MomiaHttpResponse.FAILED(\"\u65e0\u6548\u7684\u56de\u590d\uff0c\u4e0d\u80fd\u53d6\u6d88\u8d5e\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/2071/buggy-version/discuss.service-discuss.src.main.java.cn.momia.service.discuss.web.ctrl.DiscussController.java", "BodyUseAPI": [], "Fixed commit": "f9eccbd2b650c4b025c4196bfc4fff7f3a3b4e86", "Url": "https://api.github.com/repos/lovemomia/service", "Date": "2016-02-19T09:51:28Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((filterList) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/8205/buggy-version/src.com.trade.tradeTraining.tradingModels.TM_MovingAverageIntersect.java", "BodyUseAPI": [], "Fixed commit": "b63b4423aea0c43f43d2997d56ae3af16adf563a", "Url": "https://api.github.com/repos/ruler88/ETradeOpt", "Date": "2014-03-24T00:53:39Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((post.getPublishedAt()) != null) { appendUrl(sb, baseDomain, ((\"/p/\" + (post.getSlugTitle())) + \".html\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/8042/buggy-version/src.main.java.com.rkaraujo.blog.controller.SitemapController.java", "BodyUseAPI": ["com.rkaraujo.blog.controller.SitemapController.appendUrl(java.lang.StringBuilder,java.lang.String,((\"/p/\" + (post.getSlugTitle())) + \".html\"))", "com.rkaraujo.blog.domain.Post.getSlugTitle()"], "Fixed commit": "7ac445d89059fe8673d8e1481a4a8eff67fe2c3f", "Url": "https://api.github.com/repos/rkaraujo/rkablog", "Date": "2015-04-02T03:34:17Z"},
{"Line": "=>359", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((seats[0].targetYaw) > 180) seats[0].targetYaw -= 360;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/5571/buggy-version/src.main.java.com.flansmod.common.driveables.EntityVehicle.java", "BodyUseAPI": [], "Fixed commit": "25722e6453f299761ae5e1ceb8c6ca2017180254", "Url": "https://api.github.com/repos/am-rex/Flan-s-Mod-Plus", "Date": "2017-07-09T14:25:27Z"},
{"Line": "=>353", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((seats[0].targetYaw) <= (-180)) seats[0].targetYaw += 360;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/5571/buggy-version/src.main.java.com.flansmod.common.driveables.EntityVehicle.java", "BodyUseAPI": [], "Fixed commit": "25722e6453f299761ae5e1ceb8c6ca2017180254", "Url": "https://api.github.com/repos/am-rex/Flan-s-Mod-Plus", "Date": "2017-07-09T14:25:27Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((message.getType()) == (utils.ObserverMessage.ADD_ACCOUNT_TYPE)) || ((message.getType()) == (utils.ObserverMessage.REMOVE_ACCOUNT_TYPE))) { this.fireTableDataChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/6226/buggy-version/Qora.src.gui.models.AccountsTableModel.java", "BodyUseAPI": [], "Fixed commit": "40bc917fa2b39fc17439905f9521361de1099c2f", "Url": "https://api.github.com/repos/agran/Qora", "Date": "2015-05-21T22:08:35Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["((android.app.ActivityManager.RunningTaskInfo) (taskInfo.get(0))).topActivity.getPackageName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((App.GS.isDontShowRadioToastWhenMainActivity) && (activeWnd.equalsIgnoreCase(\"ru.d51x.kaierutils\"))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/2122/buggy-version/app.src.main.java.ru.d51x.kaierutils.TWUtilBroadcastReceiver.java", "BodyUseAPI": [], "Fixed commit": "b13d4c7e13c95c17da74e34b4dac880f77246dc8", "Url": "https://api.github.com/repos/d51x/KaierUtils", "Date": "2015-03-16T22:20:42Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (key.equals(\"CAR_SETTINGS__RADIO_SHOW_INFO\")) { App.GS.isShowRadioInfo = sharedPreferences.getBoolean(key, false); }else if (key.equals(\"CAR_SETTINGS__RADIO_SHOW_TOAST_2\")) { App.GS.isDontShowRadioToastWhenMainActivity = sharedPreferences.getBoolean(key, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/2122/buggy-version/app.src.main.java.ru.d51x.kaierutils.SettingsRadioFragment.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "android.content.SharedPreferences.getBoolean(java.lang.String,boolean)", "android.content.SharedPreferences.getBoolean(java.lang.String,boolean)"], "Fixed commit": "b13d4c7e13c95c17da74e34b4dac880f77246dc8", "Url": "https://api.github.com/repos/d51x/KaierUtils", "Date": "2015-03-16T22:20:42Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((modifier) != null) modifier.start(gs);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/1834/buggy-version/Specular.src.com.tint.specular.game.entities.Wave.java", "BodyUseAPI": [], "Fixed commit": "e9066d6e5d26465434566dcddecaae0d196616b0", "Url": "https://api.github.com/repos/onoff97/Specular", "Date": "2014-03-27T13:39:07Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((modifier) != null) modifier.affect(gs, com.tint.specular.game.entities.Wave.spawnEnemy(gs, this)); else com.tint.specular.game.entities.Wave.spawnEnemy(gs, this);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/1834/buggy-version/Specular.src.com.tint.specular.game.entities.Wave.java", "BodyUseAPI": [], "Fixed commit": "e9066d6e5d26465434566dcddecaae0d196616b0", "Url": "https://api.github.com/repos/onoff97/Specular", "Date": "2014-03-27T13:39:07Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((modifier) != null) modifier.end(gs);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/1834/buggy-version/Specular.src.com.tint.specular.game.entities.Wave.java", "BodyUseAPI": [], "Fixed commit": "e9066d6e5d26465434566dcddecaae0d196616b0", "Url": "https://api.github.com/repos/onoff97/Specular", "Date": "2014-03-27T13:39:07Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!newRequest) { requestNode.setAttribute(\"canUpdateVisibility\", (this.getSecAdvisor().canUpdateVisibility(request.getIdLab(), request.getIdAppUser()) ? \"Y\" : \"N\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/1487/buggy-version/src.hci.gnomex.controller.GetRequest.java", "BodyUseAPI": [], "Fixed commit": "867e333e266219b83a06ef050ed55fe33a8665f9", "Url": "https://api.github.com/repos/hci-gnomex/gnomex", "Date": "2016-05-09T17:29:58Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currentState.equals(ButtonStates.SELECTED)) { javax.swing.JOptionPane.showMessageDialog(this, ((\"El asiento \" + (seatNumber)) + \" no esta disponible\")); }else { java.lang.System.out.println((\"Else \" + (currentState))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/6994/buggy-version/src.client.ui.buttons.SeatButton.java", "BodyUseAPI": [], "Fixed commit": "526f6c06980a89083e214197f9c3aca7f53f4887", "Url": "https://api.github.com/repos/LuisBurgos/real-time-seat-reservation", "Date": "2016-04-11T22:04:52Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.inventory.CraftItemEvent.getWhoClicked()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((e.isShiftClick()) && ((player.getInventory().firstEmpty()) == (-1))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/1734/buggy-version/src.main.java.com.gamingmesh.jobs.listeners.JobsPaymentListener.java", "BodyUseAPI": [], "Fixed commit": "e19c1feba77bd42941c5e6840db95e336f8858fd", "Url": "https://api.github.com/repos/amutas/Jobs", "Date": "2015-09-13T10:02:58Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((children) == null) { return children; }else { return java.util.Arrays.copyOf(children, children.length); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/4595/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocNodeImpl.java", "BodyUseAPI": [], "Fixed commit": "032faf4eb469f0fff2ae1bf1a28c95b9cf5effea", "Url": "https://api.github.com/repos/mkordas/checkstyle", "Date": "2015-04-13T06:45:56Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ret.endsWith(PGTUtil.jarArchiveName)) { ret = ret.replace(PGTUtil.jarArchiveName, \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/1512/buggy-version/src.PolyGlot.DictCore.java", "BodyUseAPI": ["java.lang.String.replace(PGTUtil.jarArchiveName,java.lang.String)"], "Fixed commit": "47e8d69c2d92b538daabd7fd5e2e7d520c399f3b", "Url": "https://api.github.com/repos/DraqueT/PolyGlot", "Date": "2015-07-22T15:20:35Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wso2.carbon.apimgt.webapp.publisher.internal.APIPublisherDataHolder.getInstance().getApiPublisherService()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (apiPublisherService == null) { throw new java.lang.IllegalStateException(\"API Publisher service is not initialized properly\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/567/buggy-version/components.apimgt-extensions.org.wso2.carbon.apimgt.webapp.publisher.src.main.java.org.wso2.carbon.apimgt.webapp.publisher.lifecycle.listener.APIPublisherLifecycleListener.java", "BodyUseAPI": [], "Fixed commit": "4334994b36e82fa96d24a14f5af01bd1aa9f689f", "Url": "https://api.github.com/repos/milanperera/carbon-device-mgt", "Date": "2015-09-02T14:55:52Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((playerEntity.getCurrentEquippedItem()) != null) { playerEntity.getCurrentEquippedItem().setTagCompound(originalIS.getTagCompound()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/3142/buggy-version/backpack.InventoryBackpack.java", "BodyUseAPI": ["net.minecraft.entity.player.EntityPlayer.getCurrentEquippedItem()", "playerEntity.getCurrentEquippedItem().setTagCompound(originalIS.getTagCompound())"], "Fixed commit": "60a9ce5515616bdab2dc2494a82bcf16675f5067", "Url": "https://api.github.com/repos/Eydamos/Minecraft-Backpack-Mod", "Date": "2013-02-12T13:18:21Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ccl.dao.AssignmentDao.findById(java.lang.Class,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (as != null) { result.add(new com.ccl.vo.StatisticsVO(as, e.getValue())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/4524/buggy-version/maven-web-demo.src.main.java.com.ccl.service.impl.StatisticsServiceImpl.java", "BodyUseAPI": ["java.util.List<com.ccl.vo.StatisticsVO>.add(com.ccl.vo.StatisticsVO)"], "Fixed commit": "aad4eca3e7334a2752c8e36ae2452dab3b9867d2", "Url": "https://api.github.com/repos/lfsoftware13/TestJenkins", "Date": "2016-11-17T11:38:08Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ccl.dao.AssignmentDao.findById(java.lang.Class,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (as != null) { result.add(new com.ccl.vo.StatisticsVO(as, e.getValue())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/4524/buggy-version/maven-web-demo.src.main.java.com.ccl.service.impl.StatisticsServiceImpl.java", "BodyUseAPI": ["java.util.List<com.ccl.vo.StatisticsVO>.add(com.ccl.vo.StatisticsVO)"], "Fixed commit": "aad4eca3e7334a2752c8e36ae2452dab3b9867d2", "Url": "https://api.github.com/repos/lfsoftware13/TestJenkins", "Date": "2016-11-17T11:38:08Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (net.pms.util.StringUtil.hasValue(tagInfo.year)) { if ((tagInfo.year.length()) > 4) { result.updateString(\"YEAR\", tagInfo.year.substring(0, 4)); }else { result.updateString(\"YEAR\", tagInfo.year); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/8484/buggy-version/src.main.java.net.pms.database.TableMusicBrainzReleases.java", "BodyUseAPI": ["tagInfo.year.length()", "java.sql.ResultSet.updateString(java.lang.String,tagInfo.year.substring(0, 4))", "tagInfo.year.substring(int,int)", "java.sql.ResultSet.updateString(java.lang.String,tagInfo.year)"], "Fixed commit": "83df5b65f4cb9f0e0e869ceb8442f93e30b9a0da", "Url": "https://api.github.com/repos/UniversalMediaServer/UniversalMediaServer", "Date": "2016-12-18T06:28:01Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.xml.stream.XMLEventReader.nextEvent()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((next.asCharacters().getData()) != null) { sb.append(next.asCharacters().getData()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/5499/buggy-version/src.main.java.edu.virginia.lib.findingaid.structure.Document.java", "BodyUseAPI": ["java.lang.StringBuffer.append(java.lang.String)", "javax.xml.stream.events.XMLEvent.asCharacters()", "javax.xml.stream.events.Characters.getData()"], "Fixed commit": "80f5af9a90facac75ced27682e65d57c39774d40", "Url": "https://api.github.com/repos/uvalib/transmog", "Date": "2015-06-02T15:46:03Z"},
{"Line": "=>340", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((fragments.size()) == 1) && (\"\".equals(f.getText()))) { response.append(((((\"<span id=\\\"\" + (f.getId())) + \"\\\" class=\\\"\") + (f.getStylesAsSpaceDelimitedString())) + \"\\\">[click to add text]</span>\")); }else { response.append(((((((\"<span id=\\\"\" + (f.getId())) + \"\\\" class=\\\"\") + (f.getStylesAsSpaceDelimitedString())) + \"\\\">\") + (f.getText())) + \"</span>\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/5499/buggy-version/src.main.java.edu.virginia.lib.findingaid.structure.Element.java", "BodyUseAPI": ["edu.virginia.lib.findingaid.structure.Fragment.getText()", "java.lang.StringBuffer.append(((((\"<span id=\\\"\" + (f.getId())) + \"\\\" class=\\\"\") + (f.getStylesAsSpaceDelimitedString())) + \"\\\">[click to add text]</span>\"))", "edu.virginia.lib.findingaid.structure.Fragment.getStylesAsSpaceDelimitedString()", "java.lang.StringBuffer.append(((((((\"<span id=\\\"\" + (f.getId())) + \"\\\" class=\\\"\") + (f.getStylesAsSpaceDelimitedString())) + \"\\\">\") + (f.getText())) + \"</span>\"))", "edu.virginia.lib.findingaid.structure.Fragment.getStylesAsSpaceDelimitedString()", "edu.virginia.lib.findingaid.structure.Fragment.getId()", "edu.virginia.lib.findingaid.structure.Fragment.getId()"], "Fixed commit": "80f5af9a90facac75ced27682e65d57c39774d40", "Url": "https://api.github.com/repos/uvalib/transmog", "Date": "2015-06-02T15:46:03Z"},
{"Line": "=>358", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (show_move_radius) { if (((current_i < max_dist) && ((pl.cur) == null)) && (!(pl.special.equals(\"NON-WALKABLE\")))) { working_p.add(pl); working_i.add(((working_i.get(0)) + 1)); } }else { if (((current_i < max_dist) && (((pl.cur) == null) || ((pl.cur.team) != (in_reach.get(0).cur.team)))) && (!(pl.special.equals(\"NON-WALKABLE\")))) { working_p.add(pl); working_i.add(((working_i.get(0)) + 1)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/2592/buggy-version/fight_handler.java", "BodyUseAPI": [], "Fixed commit": "d2c707b7697fa0259de595379eb4663cebfa184d", "Url": "https://api.github.com/repos/kpj/The-Forgotten", "Date": "2012-03-20T18:28:19Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["_parms._user_points.get()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((user_points.numRows()) != (_parms._k)) error(\"_user_points\", (\"The number of rows in the user-specified points is not equal to k = \" + (_parms._k)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/7567/buggy-version/h2o-algos.src.main.java.hex.kmeans.KMeans.java", "BodyUseAPI": ["hex.kmeans.KMeans.error(java.lang.String,(\"The number of rows in the user-specified points is not equal to k = \" + (_parms._k)))"], "Fixed commit": "231e33b42b5408ec4e664f7f614a8f37aabbab10", "Url": "https://api.github.com/repos/h2oai/h2o-3", "Date": "2015-07-09T21:29:49Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (xDir < 0) { if (yDir < 0) { radian += java.lang.Math.PI; }else { radian = (java.lang.Math.PI) - radian; } }else { if (yDir < 0) { radian *= -1; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/4013/buggy-version/FEM_SungYong.src.draw.Arrow.java", "BodyUseAPI": [], "Fixed commit": "36a6b4f7a2a071365765a127bcd5c1131794a360", "Url": "https://api.github.com/repos/saintdragon2/FEM2012SungYong", "Date": "2012-08-23T02:35:56Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.lambdaworks.redis.api.sync.RedisScriptingCommands<K, V>.evalsha(java.lang.String,com.lambdaworks.redis.ScriptOutputType,K[],V[])"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (evaled instanceof java.util.List<?>) { if (!(((java.util.Collection<?>) (evaled)).isEmpty())) { final java.lang.Object head = ((java.util.List<?>) (evaled)).get(0); if (head instanceof java.lang.RuntimeException) { throw ((java.lang.RuntimeException) (head)); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/8651/buggy-version/src.main.java.net.moznion.redis.script.manager.lettuce.LettuceScriptManager.java", "BodyUseAPI": [], "Fixed commit": "99ac5d5e081c18bbe8bb01cac0110c4442e55679", "Url": "https://api.github.com/repos/moznion/redis-script-manager-lettuce", "Date": "2016-06-03T03:54:50Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ch.elexis.core.data.extension.AbstractCoreOperationAdvisor.getInitialPerspective()", "org.eclipse.ui.PlatformUI.getWorkbench().getPerspectiveRegistry()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((perspectiveRegistry.findPerspectiveWithId(initPerspective)) == null) { initPerspective = ch.elexis.core.ui.constants.UiResourceConstants.PatientPerspektive_ID; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/9244/buggy-version/ch.elexis.core.application.src.ch.elexis.core.application.advisors.ApplicationWorkbenchAdvisor.java", "BodyUseAPI": [], "Fixed commit": "19e0da1965cb23598273398bb35b5d4224c4ff9e", "Url": "https://api.github.com/repos/elexis/elexis-3-core", "Date": "2014-06-24T08:56:35Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ph.equals(\"Testo\")) fa = \"Test\"; else if (ph.equals(\"Autopsia\")) fa = \"PostMortem\"; else if (ph.equals(\"Construir\")) fa = \"Build\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/6866/buggy-version/src.net.sf.memoranda.psp.PSP.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "e2b5df80eccee46d07d4947a1e6d52335cbfb366", "Url": "https://api.github.com/repos/ser316asu/Neukoelln_SER316", "Date": "2017-04-29T02:54:04Z"},
{"Line": "=>2305", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (t != h) { if (t.totalWeightedValue.containsKey(cid)) x = t.totalWeightedValue.get(cid); else x = 1.0; value = value * x; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/3329/buggy-version/Honours.src.project.Controller.java", "BodyUseAPI": ["t.totalWeightedValue.get(int)", "t.totalWeightedValue.containsKey(int)"], "Fixed commit": "6fa250562273b2e0decd680aa80e9ece9532435f", "Url": "https://api.github.com/repos/liuqiang1204/PolyarchyViewer", "Date": "2012-11-28T23:52:16Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((f.exists()) && (f.isFile())) { f.delete(); }else { com.erigir.wrench.sos.FileObjectStorageImplementation.LOG.warn(\"Tried to delete non-existing (or non-file) : {}\", f); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/5565/buggy-version/commons.src.main.java.com.erigir.wrench.sos.FileObjectStorageImplementation.java", "BodyUseAPI": ["org.slf4j.Logger.warn(java.lang.String,java.io.File)", "java.io.File.delete()"], "Fixed commit": "65073d765ecbe4fa4961f435e63f49de37304984", "Url": "https://api.github.com/repos/bitblit/wrench", "Date": "2015-06-11T22:12:27Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (factors.defenderStunty) { armorGoal--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/3335/buggy-version/src.org.sergut.diceroller.bloodbowl.BloodBowlSimulator.java", "BodyUseAPI": [], "Fixed commit": "4782ac3e7d5e6bd30e30d5e517dcfee95f89971e", "Url": "https://api.github.com/repos/sergutsan/dice-roller", "Date": "2016-08-12T10:20:56Z"},
{"Line": "=>958", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.Cursor.getString(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (accountName == null) { insert.bindString(16, mContext.getResources().getString(R.string.missing_account_name)); }else { insert.bindString(16, accountName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/7631/buggy-version/src.com.android.dialer.database.DialerDatabaseHelper.java", "BodyUseAPI": ["android.database.sqlite.SQLiteStatement.bindString(int,java.lang.String)"], "Fixed commit": "5e6eca1665f435dbad070856abde9757d57581c2", "Url": "https://api.github.com/repos/SudaMod/android_packages_apps_Dialer", "Date": "2016-10-11T15:32:01Z"},
{"Line": "=>1219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (compositeText[0].getSelectionText().endsWith(org.nschmidt.ldparteditor.text.StringHelper.getLineDelimiter())) { compositeText[0].setSelection(compositeText[0].getSelection().x, ((compositeText[0].getSelection().y) - (org.nschmidt.ldparteditor.text.StringHelper.getLineDelimiter().length()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/2378/buggy-version/src.org.nschmidt.ldparteditor.composites.compositetab.CompositeTab.java", "BodyUseAPI": ["compositeText[0].getSelection()", "compositeText[0].setSelection(compositeText[0].getSelection().x,((compositeText[0].getSelection().y) - (org.nschmidt.ldparteditor.text.StringHelper.getLineDelimiter().length())))", "compositeText[0].getSelection()"], "Fixed commit": "5792d7e09991a79141bf9b1b5a52e00eeaaf8896", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2016-07-01T09:29:30Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(kafkaAdmin.isTopicExists(tc.getName()))) { kafkaAdmin.createTopic(tc.getName(), tc.getPartitions(), tc.getReplicationFactor()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/7760/buggy-version/fdbench-kafka.src.main.java.org.pathirage.fdbench.kafka.perfmodeling.SyntheticWorkloadGenerator.java", "BodyUseAPI": ["org.pathirage.fdbench.kafka.KafkaAdmin.createTopic(tc.getName(),tc.getPartitions(),tc.getReplicationFactor())", "SyntheticWorkloadGeneratorConfig.TopicConfig.getPartitions()", "SyntheticWorkloadGeneratorConfig.TopicConfig.getName()", "SyntheticWorkloadGeneratorConfig.TopicConfig.getReplicationFactor()"], "Fixed commit": "8e04353747f6b79e35477054c8d156d3ea811f67", "Url": "https://api.github.com/repos/FreshetDMS/FDBench", "Date": "2017-02-27T14:51:21Z"},
{"Line": "=>479", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (player instanceof net.minecraft.entity.player.EntityPlayerMP) { net.minecraft.inventory.Container container = player.openContainer; if (container instanceof com.builtbroken.mc.prefab.gui.ContainerDummy) { return (((com.builtbroken.mc.prefab.gui.ContainerDummy) (container)).tile) == (this); }else if (container instanceof com.builtbroken.mc.prefab.gui.ContainerBase) { return (((com.builtbroken.mc.prefab.gui.ContainerBase) (container)).host) == (this); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/2261/buggy-version/src.main.scala.com.builtbroken.mc.framework.logic.TileNode.java", "BodyUseAPI": [], "Fixed commit": "50aa45a1100f8c21b84d02b1f1bc884c9c5c61dd", "Url": "https://api.github.com/repos/VoltzEngine-Project/Engine", "Date": "2017-10-04T00:20:11Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(world.isRemote)) { com.Da_Technomancer.crossroads.API.packets.StoreNBTToClient.syncNBTToClient(((net.minecraft.entity.player.EntityPlayerMP) (playerInv.player)), false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/8347/buggy-version/src.main.java.com.Da_Technomancer.crossroads.gui.container.DetailedCrafterContainer.java", "BodyUseAPI": [], "Fixed commit": "046c4e2f2de0ff740c1279abbf2e0cb7698db67b", "Url": "https://api.github.com/repos/Da-Technomancer/Crossroads", "Date": "2017-06-03T12:57:05Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<org.eclipse.emf.ecore.EObject>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (element instanceof com.archimatetool.model.IDiagramModelImage) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/4160/buggy-version/com.archimatetool.editor.src.com.archimatetool.editor.model.compatibility.handlers.FixDefaultSizesHandler.java", "BodyUseAPI": [], "Fixed commit": "b619102a93e36eeaae635b6e45ad14764c4849a4", "Url": "https://api.github.com/repos/Phillipus/archi", "Date": "2014-11-14T16:47:33Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(listFG.isSelectionEmpty())) { de.jattyv.jcapi.client.gui.cell.FG fg = ((de.jattyv.jcapi.client.gui.cell.FG) (listFG.getSelectedValue())); if ((fg.getType()) == (de.jattyv.jcapi.client.gui.cell.FG.FG_TYPE_GROUP)) { java.lang.String fname = javax.swing.JOptionPane.showInputDialog((\"Enter the UserName of you friend you want to add to \" + (fg.getTitle()))); if ((fname != null) && (!(fname.equals(\"\")))) { window.getHandler().getOutHandler().addUserToGroup(fg.getId(), fname); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/5077/buggy-version/src.main.java.de.jattyv.desktop.gui.cards.ChatCard.java", "BodyUseAPI": ["javax.swing.JList.getSelectedValue()"], "Fixed commit": "5aac64104652272e334665d9033ca9bb9494e23d", "Url": "https://api.github.com/repos/Lixja/jattyv-chat-desktop", "Date": "2017-03-01T12:35:25Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((data.length) <= (cacheConfig.getMaxObjectSize())) { cache.putByteArray(key, data); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/6611/buggy-version/src.main.java.com.ethlo.bucketstore.server.CachingStore.java", "BodyUseAPI": ["org.apache.directmemory.cache.CacheService<java.nio.ByteBuffer, byte[]>.putByteArray(java.nio.ByteBuffer,byte[])"], "Fixed commit": "2c34f80156515d9d4565530d29e45296b7139564", "Url": "https://api.github.com/repos/ethlo/ebs-server", "Date": "2013-09-22T11:35:11Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((req.getHeader(\"x-requested-with\")) != null) && (req.getHeader(\"x-requested-with\").equals(\"XMLHttpRequest\"))) { res.setStatus(0); }else { res.sendRedirect(((req.getContextPath()) + \"/login.jsp\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/5601/buggy-version/src.auth.AuthFilter.java", "BodyUseAPI": ["javax.servlet.http.HttpServletResponse.sendRedirect(((req.getContextPath()) + \"/login.jsp\"))", "javax.servlet.http.HttpServletRequest.getContextPath()"], "Fixed commit": "deb2e5ed76eb4b8d9d9eb009c101c22b2b7e82a1", "Url": "https://api.github.com/repos/RicoFung/paper", "Date": "2017-01-18T07:02:28Z"},
{"Line": "=>332", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["choco.cp.solver.variables.set.BitSetEnumeratedDomain.getLastVal()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (i == last) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/6308/buggy-version/choco-cp.src.main.java.choco.cp.solver.variables.set.SetDomainImpl.java", "BodyUseAPI": [], "Fixed commit": "e97f28132b362c46d8bcad95ab1fe6ab4a51937a", "Url": "https://api.github.com/repos/JLiangWaterloo/choco2", "Date": "2013-03-17T14:16:27Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type.isAssignableFrom(section.getClass())) { return section; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/3470/buggy-version/Yamler-Core.src.main.java.net.cubespace.Yamler.Config.Converter.Array.java", "BodyUseAPI": [], "Fixed commit": "91780c5f784ecf31228603eced13a616ad19b6c9", "Url": "https://api.github.com/repos/Cube-Space/Yamler", "Date": "2015-01-14T13:16:34Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isInEditMode()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/2355/buggy-version/speedviewlib.src.main.java.com.github.anastr.speedviewlib.RaySpeedometer.java", "BodyUseAPI": [], "Fixed commit": "f8fb094f43c39bc022bb9f19eb23192917ed508a", "Url": "https://api.github.com/repos/anastr/SpeedView", "Date": "2017-06-16T13:50:15Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isInEditMode()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/2355/buggy-version/speedviewlib.src.main.java.com.github.anastr.speedviewlib.DeluxeSpeedView.java", "BodyUseAPI": [], "Fixed commit": "f8fb094f43c39bc022bb9f19eb23192917ed508a", "Url": "https://api.github.com/repos/anastr/SpeedView", "Date": "2017-06-16T13:50:15Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getString(java.lang.String,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (prefix == null) { prefix = buildUriPrefix(); prefs.edit().putString(com.commonsware.cwac.provider.StreamProvider.PREF_URI_PREFIX, prefix).apply(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/4495/buggy-version/provider.src.main.java.com.commonsware.cwac.provider.StreamProvider.java", "BodyUseAPI": [], "Fixed commit": "b4c7b73ed7d695fcdb6943dded58cc17320aa4be", "Url": "https://api.github.com/repos/commonsguy/cwac-provider", "Date": "2016-04-06T21:00:26Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event.side) == (cpw.mods.fml.relauncher.Side.CLIENT)) { isJumping = net.minecraft.client.Minecraft.getMinecraft().gameSettings.keyBindJump.getIsKeyPressed(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/7986/buggy-version/src.main.java.flaxbeard.steamcraft.handler.PhobicCoatingHandler.java", "BodyUseAPI": [], "Fixed commit": "74c6712d5064c04b159b093aff689750e755fbb7", "Url": "https://api.github.com/repos/Esteemed-Innovation/Esteemed-Innovation", "Date": "2016-04-24T07:44:30Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((composantContainDragger) != null) composantContainDragger.setBackground(java.awt.Color.green);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/6499/buggy-version/src.solitaire.DnD.ADnD.java", "BodyUseAPI": [], "Fixed commit": "68b8146393d20c2cf71dc298fae2104bc9776113", "Url": "https://api.github.com/repos/vincentbodiou/solitaire", "Date": "2013-12-08T15:42:10Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((composantContainDragger) != null) composantContainDragger.setBackground(java.awt.Color.red);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/6499/buggy-version/src.solitaire.DnD.ADnD.java", "BodyUseAPI": [], "Fixed commit": "68b8146393d20c2cf71dc298fae2104bc9776113", "Url": "https://api.github.com/repos/vincentbodiou/solitaire", "Date": "2013-12-08T15:42:10Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((composantContainDragger) != null) composantContainDragger.setBackground(new java.awt.Color(13, 131, 53));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/6499/buggy-version/src.solitaire.DnD.ADnD.java", "BodyUseAPI": [], "Fixed commit": "68b8146393d20c2cf71dc298fae2104bc9776113", "Url": "https://api.github.com/repos/vincentbodiou/solitaire", "Date": "2013-12-08T15:42:10Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (fullChangeJSON) { owner_id = jsonObject.getJsonObject(\"owner\").getInt(\"_account_id\", (-1)); }else { owner_id = jsonObject.getInt(\"owner\", (-1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/3020/buggy-version/src.main.java.com.github.arucard21.msr.CodeReview.java", "BodyUseAPI": [], "Fixed commit": "6e00def83e2138be3ec068b44b5c056042873ea3", "Url": "https://api.github.com/repos/arucard21/msr-improved-revfinder", "Date": "2017-10-20T12:45:10Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((f.getDistance()) == null) { f.setDistance(\"0\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/667/buggy-version/com.runninghusky.spacetracker.src.com.runninghusky.spacetracker.DataHelper.java", "BodyUseAPI": ["com.runninghusky.spacetracker.Flight.setDistance(java.lang.String)"], "Fixed commit": "ef5247f44c507493691046e5525c3f508bd68bf9", "Url": "https://api.github.com/repos/craigisakson/SpaceTracker", "Date": "2011-11-29T11:00:36Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (trailer.isEarlyTerminated()) { ch.mimo.netty.handler.codec.icap.IcapChunkAggregator.LOG.debug(\"chunk trailer is early terminated, removing PREVIEW header\"); message.getIcapMessage().removeHeader(IcapHeaders.Names.PREVIEW); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/846/buggy-version/src.main.java.ch.mimo.netty.handler.codec.icap.IcapChunkAggregator.java", "BodyUseAPI": [], "Fixed commit": "ecac4a22ce9f87819c0eebfbc2135d839116fe24", "Url": "https://api.github.com/repos/GlobalVelocity/netty-icap", "Date": "2012-06-11T19:36:06Z"},
{"Line": "=>308", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((list.size()) < 4) { java.lang.System.err.println(\"LIST TOO SHORT. REJECTING SEARCH\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/3811/buggy-version/Paint.src.gestures.Gesturizer.java", "BodyUseAPI": [], "Fixed commit": "2754b0968a699ed1a5468ea76120c6eb0f98a36a", "Url": "https://api.github.com/repos/kimfk/KaavUIP", "Date": "2014-05-12T11:59:59Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (recipeActivity.getIngredientRowAdapter().isEmpty()) { de.anycook.einkaufszettel.tasks.LoadRecipeIngredientsTask loadRecipeIngredientsTask = new de.anycook.einkaufszettel.tasks.LoadRecipeIngredientsTask(recipeActivity.getIngredientRowAdapter(), view, recipeActivity); loadRecipeIngredientsTask.execute(recipe.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/988/buggy-version/app.src.main.java.de.anycook.einkaufszettel.activities.fragments.recipe.RecipeIngredientListFragment.java", "BodyUseAPI": ["de.anycook.einkaufszettel.activities.RecipeActivity.getIngredientRowAdapter()"], "Fixed commit": "0bc7d8a4263ed88acb7b84cbb8316cf8b0fa2ed8", "Url": "https://api.github.com/repos/anycook/anycook-einkaufszettel-android", "Date": "2016-06-12T19:18:21Z"},
{"Line": "=>354", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mage.server.tournament.TournamentManager.getInstance().getTournamentController(tournamentSession.getTournamentId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (tournamentController != null) { tournamentController.quit(userId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/6962/buggy-version/Mage.Server.src.main.java.mage.server.User.java", "BodyUseAPI": ["mage.server.tournament.TournamentController.quit(java.util.UUID)"], "Fixed commit": "f85f477b90419a7f91195e31f4d1c1874789a941", "Url": "https://api.github.com/repos/jlin14/mage", "Date": "2014-11-27T17:41:33Z"},
{"Line": "=>349", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bv == 0) { rslt = 0; }else { rslt = ((short) (av % bv)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/4977/buggy-version/src.dcpu.Dcpu.java", "BodyUseAPI": [], "Fixed commit": "f6211f365c2843a235f2f31767ef39da3481e184", "Url": "https://api.github.com/repos/aimozg/ja-dcpu", "Date": "2012-04-15T10:22:10Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((java.lang.Math.abs(((lastEqiupProgress) - (event.getEquipProgress())))) < 0.2F) { net.minecraft.client.renderer.GlStateManager.translate(0, (-((event.getEquipProgress()) / 2.0F)), 0); lastEqiupProgress = event.getEquipProgress(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/5505/buggy-version/src.main.java.com.mrcrayfish.guns.event.GuiOverlayEvent.java", "BodyUseAPI": ["net.minecraft.client.renderer.GlStateManager.translate(int,(-((event.getEquipProgress()) / 2.0F)),int)", "net.minecraftforge.client.event.RenderSpecificHandEvent.getEquipProgress()", "net.minecraftforge.client.event.RenderSpecificHandEvent.getEquipProgress()"], "Fixed commit": "af26c8573cd845f4fd4b014e723a97924e4efc61", "Url": "https://api.github.com/repos/MrCrayfish/MrCrayfishGunMod", "Date": "2017-08-22T16:00:03Z"},
{"Line": "=>402", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (checkValidState(1, 0)) { controlling.moveRight(); }else { controlling.rotateLeft(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/1419/buggy-version/src.gameBoard.GameBoard.java", "BodyUseAPI": [], "Fixed commit": "4b09a7f51326025084230625ad0b90fd291bb1e3", "Url": "https://api.github.com/repos/exal99/Tetris", "Date": "2016-09-23T10:20:04Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((d.profit) == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/9117/buggy-version/fxc.src.main.java.org.dyndns.bluefield.fxc.action.SettlementAction.java", "BodyUseAPI": [], "Fixed commit": "46ca7b5fe462ea3a189d50f72d65b14e4c9fcd4c", "Url": "https://api.github.com/repos/rami1942/fxc", "Date": "2012-11-27T05:53:35Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((localList.get()) == null) return org.candlepin.audit.ThreadLocalEventCache.EMPTY_ITERATOR;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/4161/buggy-version/server.src.main.java.org.candlepin.audit.ThreadLocalEventCache.java", "BodyUseAPI": [], "Fixed commit": "fa005e7c422047450203e557d3bbda7ca2191c77", "Url": "https://api.github.com/repos/candlepin/candlepin", "Date": "2016-03-21T12:14:46Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((localList.get()) != null) { localList.get().clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/4161/buggy-version/server.src.main.java.org.candlepin.audit.ThreadLocalEventCache.java", "BodyUseAPI": ["localList.get().clear()", "java.lang.ThreadLocal<java.util.LinkedList<org.candlepin.audit.Event>>.get()"], "Fixed commit": "fa005e7c422047450203e557d3bbda7ca2191c77", "Url": "https://api.github.com/repos/candlepin/candlepin", "Date": "2016-03-21T12:14:46Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(android.text.TextUtils.isEmpty(description))) && (!(description.toLowerCase().equals(\"not available.\")))) { return description; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/275/buggy-version/airmapsdk.src.main.java.com.airmap.airmapsdk.models.rules.AirMapRule.java", "BodyUseAPI": [], "Fixed commit": "edff7b6ab8d39cc51d7ecb84ef72e70a718fbad6", "Url": "https://api.github.com/repos/airmap/AirMapSDK-Android", "Date": "2017-07-19T00:33:45Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(android.text.TextUtils.isEmpty(shortText))) && (!(shortText.toLowerCase().equals(\"not available.\")))) { return shortText; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/275/buggy-version/airmapsdk.src.main.java.com.airmap.airmapsdk.models.rules.AirMapRule.java", "BodyUseAPI": [], "Fixed commit": "edff7b6ab8d39cc51d7ecb84ef72e70a718fbad6", "Url": "https://api.github.com/repos/airmap/AirMapSDK-Android", "Date": "2017-07-19T00:33:45Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(container.getClass().isAssignableFrom(restrictedContainerType))) { throw new java.lang.IllegalStateException((((((\"Cannot restrict container type to \" + (restrictedContainerType.getCanonicalName())) + \":\") + \" a container of type \") + (container.getClass().getCanonicalName())) + \" is currently attached\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/8638/buggy-version/field-binder.src.main.java.org.tylproject.vaadin.addon.datanav.BasicDataNavigation.java", "BodyUseAPI": ["java.lang.Class<? extends Container.Ordered>.getCanonicalName()", "container.getClass().getCanonicalName()", "Container.Ordered.getClass()"], "Fixed commit": "3f97a6ee84d90ed7fdfbde5d180e6014df14a13d", "Url": "https://api.github.com/repos/tyl/field-binder", "Date": "2015-01-16T11:10:32Z"},
{"Line": "=>725", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (min == null) min = metric.createMinInformationLoss();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/4831/buggy-version/src.main.org.deidentifier.arx.ARXLattice.java", "BodyUseAPI": [], "Fixed commit": "c930dfa5018739a1aaf884d676953baffcddc726", "Url": "https://api.github.com/repos/arx-deidentifier/arx", "Date": "2014-08-22T18:00:28Z"},
{"Line": "=>726", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (max == null) max = metric.createMaxInformationLoss();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/4831/buggy-version/src.main.org.deidentifier.arx.ARXLattice.java", "BodyUseAPI": [], "Fixed commit": "c930dfa5018739a1aaf884d676953baffcddc726", "Url": "https://api.github.com/repos/arx-deidentifier/arx", "Date": "2014-08-22T18:00:28Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ai.api.util.StringUtils.isEmpty(request.getLanguage())) { request.setLanguage(config.getApiAiLanguage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/6472/buggy-version/libai.src.main.java.ai.api.AIDataService.java", "BodyUseAPI": ["ai.api.model.AIRequest.setLanguage(config.getApiAiLanguage())"], "Fixed commit": "bb34f666ea3e4b34732d51cf5c5417bfd6bde110", "Url": "https://api.github.com/repos/dialogflow/dialogflow-java-client", "Date": "2017-07-18T07:18:14Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ai.api.util.StringUtils.isEmpty(request.getSessionId())) { request.setSessionId(getSessionId(serviceContext)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/6472/buggy-version/libai.src.main.java.ai.api.AIDataService.java", "BodyUseAPI": ["ai.api.model.AIRequest.setSessionId(java.lang.String)"], "Fixed commit": "bb34f666ea3e4b34732d51cf5c5417bfd6bde110", "Url": "https://api.github.com/repos/dialogflow/dialogflow-java-client", "Date": "2017-07-18T07:18:14Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((java.lang.System.currentTimeMillis()) - (lastSaveTime)) > 10000) { lastSaveTime = java.lang.System.currentTimeMillis(); game.save(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/8966/buggy-version/src.engine.Server.java", "BodyUseAPI": [], "Fixed commit": "dec839bce1808b75c59208c66106ad4233e0efd9", "Url": "https://api.github.com/repos/thekakester/BrandonShavedYesterday", "Date": "2017-01-16T01:05:35Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((children[0]) != null) && ((children[1]) != null)) { return 2; }else { return 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/1548/buggy-version/trees-binary.src.main.java.com.mattunderscore.trees.binary.mutable.MutableBinaryTreeNodeImpl.java", "BodyUseAPI": [], "Fixed commit": "faa807c87ea7c79f7082583baa93aa399687c37f", "Url": "https://api.github.com/repos/mattunderscorechampion/tree-root", "Date": "2015-05-04T16:14:07Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.jdt.core.dom.ParenthesizedExpression.getExpression()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (e instanceof org.eclipse.jdt.core.dom.InfixExpression) this.visit(((org.eclipse.jdt.core.dom.InfixExpression) (e)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/2033/buggy-version/src.main.java.com.github.mauricioaniche.ck.metric.NONC.java", "BodyUseAPI": [], "Fixed commit": "dc0306321ba7e8e05540c5ba16775c4ad0ce9bc3", "Url": "https://api.github.com/repos/hohler/ck", "Date": "2017-05-05T16:34:32Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.jdt.core.dom.Assignment.getLeftHandSide()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (left instanceof org.eclipse.jdt.core.dom.ParenthesizedExpression) { org.eclipse.jdt.core.dom.Expression e = ((org.eclipse.jdt.core.dom.ParenthesizedExpression) (left)).getExpression(); if (e instanceof org.eclipse.jdt.core.dom.ConditionalExpression) visit(((org.eclipse.jdt.core.dom.ConditionalExpression) (left))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/2033/buggy-version/src.main.java.com.github.mauricioaniche.ck.metric.NONA.java", "BodyUseAPI": [], "Fixed commit": "dc0306321ba7e8e05540c5ba16775c4ad0ce9bc3", "Url": "https://api.github.com/repos/hohler/ck", "Date": "2017-05-05T16:34:32Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.jdt.core.dom.Assignment.getRightHandSide()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (right instanceof org.eclipse.jdt.core.dom.ConditionalExpression) { visit(((org.eclipse.jdt.core.dom.ConditionalExpression) (right))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/2033/buggy-version/src.main.java.com.github.mauricioaniche.ck.metric.NONA.java", "BodyUseAPI": [], "Fixed commit": "dc0306321ba7e8e05540c5ba16775c4ad0ce9bc3", "Url": "https://api.github.com/repos/hohler/ck", "Date": "2017-05-05T16:34:32Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((prob_strategies[strategy_employed.get(((strategy_employed.size()) - 1))]) < 0) { prob_strategies[strategy_employed.get(((strategy_employed.size()) - 1))] = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/9137/buggy-version/src.player.MultiStrategy.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.Integer>.get(int)", "java.util.ArrayList<java.lang.Integer>.size()"], "Fixed commit": "eaab7cd33af2e48cd8bac66f8bf7dbe35196d318", "Url": "https://api.github.com/repos/jashper/zetebot", "Date": "2013-01-17T04:58:15Z"},
{"Line": "=>418", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getLayout()) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/8691/buggy-version/src.main.java.ayar.oktay.advancedtextview.AdvancedTextView.java", "BodyUseAPI": [], "Fixed commit": "76fe12b296ce5d05348de03664dd9021bc29cc28", "Url": "https://api.github.com/repos/oktayayr/advancedtextview", "Date": "2016-06-07T11:57:51Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(universalteam.spawnchests.content.SpawnChestInventories.isConverted())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/3625/buggy-version/src.main.java.universalteam.spawnchests.creative.CreativeTabSpawnChests.java", "BodyUseAPI": [], "Fixed commit": "28290adb71e3ef2e321e98035a403cdc4dc53bfc", "Url": "https://api.github.com/repos/UniversalTeam/SpawnChests", "Date": "2014-09-16T19:00:22Z"},
{"Line": "=>408", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mIsShowBorder)) { mFrameBorderWidth = 0; mHeaderBorderWidth = 0; mUnitBorderWidth = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/4316/buggy-version/app.src.main.java.com.zjy.tableviewdemo.TableView.java", "BodyUseAPI": [], "Fixed commit": "ea35893edc9ba32f3335f8493ff65ddbc58e8254", "Url": "https://api.github.com/repos/developerzjy/AndroidTableView", "Date": "2017-09-28T14:45:19Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.M)) { int hasWriteContactsPermission = checkSelfPermission(Manifest.permission.WRITE_EXTERNAL_STORAGE); if (hasWriteContactsPermission != (android.content.pm.PackageManager.PERMISSION_GRANTED)) { requestPermissions(new java.lang.String[]{ Manifest.permission.WRITE_EXTERNAL_STORAGE }, REQUEST_CODE_ASK_PERMISSIONS); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/5263/buggy-version/beecount.src.main.java.com.knirirr.beecount.WelcomeActivity.java", "BodyUseAPI": [], "Fixed commit": "df3f10e3300860ad4ecb1fa574bfbf1a7b7b0893", "Url": "https://api.github.com/repos/knirirr/BeeCount", "Date": "2016-05-08T11:35:49Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mPasswordView.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (android.text.TextUtils.isEmpty(password)) { mPasswordView.setError(getString(R.string.error_field_required)); focusView = mPasswordView; cancel = true; }else if (!(isPasswordValid(password))) { mPasswordView.setError(getString(R.string.error_invalid_password)); focusView = mPasswordView; cancel = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/6424/buggy-version/app.src.main.java.com.udp.appsproject.panoramapp.ui.login.java", "BodyUseAPI": ["com.udp.appsproject.panoramapp.ui.login.isPasswordValid(java.lang.String)"], "Fixed commit": "f3de5e22e9e1e2b2e685f1156860abe72d5b94a4", "Url": "https://api.github.com/repos/paulrieutord/PanoramApp", "Date": "2016-10-28T02:53:42Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (android.text.TextUtils.isEmpty(item.name)) { item.name = \"Part \" + (position + 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/6785/buggy-version/acvideo.src.tv.acfun.video.DetailsActivity.java", "BodyUseAPI": [], "Fixed commit": "f7a0d33a2443b7e4b21259616cca1b292a5aed4f", "Url": "https://api.github.com/repos/yrom/acfunm", "Date": "2014-01-27T14:06:38Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isEmpty(p.fieldList.getValue())) { vr.setStatus(Result.ERROR); vr.setMessage(org.talend.components.marketo.runtime.MarketoSource.messages.getMessage(\"error.validation.fieldlist\")); return vr; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/1538/buggy-version/components.components-marketo.src.main.java.org.talend.components.marketo.runtime.MarketoSource.java", "BodyUseAPI": [], "Fixed commit": "739489e03eb939f844796a205e8d00878a22f6a5", "Url": "https://api.github.com/repos/Talend/components", "Date": "2017-05-04T06:51:18Z"},
{"Line": "=>10", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (len == 0) return freditor.vector.IntVector.empty;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/6015/buggy-version/src.main.java.freditor.vector.IntVector.java", "BodyUseAPI": [], "Fixed commit": "752e75757537048d8b94fdb8078c8b6d574695a8", "Url": "https://api.github.com/repos/fredoverflow/freditor", "Date": "2017-08-07T21:18:22Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(a == i)) { tmp.add(new chess.Coords(a, j)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/8783/buggy-version/src.chess.Figurines.Rook.java", "BodyUseAPI": ["java.util.ArrayList<chess.Coords>.add(chess.Coords)"], "Fixed commit": "e805e000a76c52a6b15f28e5afb6a9a4349d198b", "Url": "https://api.github.com/repos/grimmdaniel/Chess", "Date": "2017-08-03T20:50:43Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(a == j)) { tmp.add(new chess.Coords(i, a)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/8783/buggy-version/src.chess.Figurines.Rook.java", "BodyUseAPI": ["java.util.ArrayList<chess.Coords>.add(chess.Coords)"], "Fixed commit": "e805e000a76c52a6b15f28e5afb6a9a4349d198b", "Url": "https://api.github.com/repos/grimmdaniel/Chess", "Date": "2017-08-03T20:50:43Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(a == i)) { tmp.add(new chess.Coords(a, j)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/8783/buggy-version/src.chess.Figurines.Rook.java", "BodyUseAPI": ["java.util.ArrayList<chess.Coords>.add(chess.Coords)"], "Fixed commit": "e805e000a76c52a6b15f28e5afb6a9a4349d198b", "Url": "https://api.github.com/repos/grimmdaniel/Chess", "Date": "2017-08-03T20:50:43Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(a == j)) { tmp.add(new chess.Coords(i, a)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/8783/buggy-version/src.chess.Figurines.Rook.java", "BodyUseAPI": ["java.util.ArrayList<chess.Coords>.add(chess.Coords)"], "Fixed commit": "e805e000a76c52a6b15f28e5afb6a9a4349d198b", "Url": "https://api.github.com/repos/grimmdaniel/Chess", "Date": "2017-08-03T20:50:43Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mc.player.isCollidedHorizontally) if ((mc.player.posY) > ((nextPos.getY()) + 0.2)) mc.gameSettings.keyBindSneak.pressed = true; else if ((mc.player.posY) < (nextPos.getY())) mc.gameSettings.keyBindJump.pressed = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/3791/buggy-version/src.tk.wurst_client.ai.FlyPathProcessor.java", "BodyUseAPI": [], "Fixed commit": "2b0d2ca89dc9b962c6e714bbf7704cf3efc4baa6", "Url": "https://api.github.com/repos/Wurst-Imperium/Wurst-MC-1.11", "Date": "2016-12-27T18:18:51Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (start == true) { for (com.appspot.Accent.model.Stage st : stages) { com.appspot.Accent.controller.StageOverzichtServlet.log.info(\"1\"); bericht = (((((((((((bericht) + \"['\") + (st.getDeLeerling())) + \"', \") + (st.getHetBedrijf())) + \", \") + (st.getDeBegeleider())) + \", \") + (st.getBegindatum())) + \", \") + (st.getEinddatum())) + \"],\"; com.appspot.Accent.controller.StageOverzichtServlet.log.info(bericht); } if (stages == null) { break; }else { succes = true; start = false; req.setAttribute(\"msgs\", bericht); } }else { req.setAttribute(\"msgs\", \"Er is nog geen stage bekend\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/5883/buggy-version/Themaopdracht5.src.com.appspot.Accent.controller.StageOverzichtServlet.java", "BodyUseAPI": [], "Fixed commit": "98c7a6ef6e10008280db84288a59fe25206d5b7c", "Url": "https://api.github.com/repos/colin-ch/ThemaOpdracht5", "Date": "2014-01-27T11:57:52Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (facing == 0) ej.facing = 2; else if (facing == 1) ej.facing = 5; else if (facing == 2) ej.facing = 3; else if (facing == 3) ej.facing = 4;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/2798/buggy-version/main.java.net.ixios.advancedthaumaturgy.blocks.BlockEtherealJar.java", "BodyUseAPI": [], "Fixed commit": "8826ef8e3ab4a19dd7d30eff2212d88ec5044272", "Url": "https://api.github.com/repos/Lycaonj/AdvancedThaumaturgy", "Date": "2014-01-25T04:27:30Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ej == null) ej = new net.ixios.advancedthaumaturgy.tileentities.TileEtherealJar();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/2798/buggy-version/main.java.net.ixios.advancedthaumaturgy.blocks.BlockEtherealJar.java", "BodyUseAPI": [], "Fixed commit": "8826ef8e3ab4a19dd7d30eff2212d88ec5044272", "Url": "https://api.github.com/repos/Lycaonj/AdvancedThaumaturgy", "Date": "2014-01-25T04:27:30Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang.StringUtils.isBlank(value)) { throw new java.lang.IllegalStateException(\"Guice injector name not available\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/4657/buggy-version/slice-core-api.src.main.java.com.cognifide.slice.api.tag.SliceTagUtils.java", "BodyUseAPI": [], "Fixed commit": "24d0dc089509e12f5b32ed3c59928b6466a2d72d", "Url": "https://api.github.com/repos/Cognifide/Slice", "Date": "2013-03-13T14:58:23Z"},
{"Line": "=>329", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, java.util.HashMap<java.lang.Integer, java.lang.Integer>>.get(_inColl.getInCollId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (authorC == null) { authorC = new java.util.HashMap<java.lang.Integer, java.lang.Integer>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/6223/buggy-version/src.main.java.dblpImporter.Parser.java", "BodyUseAPI": [], "Fixed commit": "d6debcd7794854184bd1f69c8dc04e87c7b54f4f", "Url": "https://api.github.com/repos/interesaaat/dblpImporter", "Date": "2014-03-27T18:34:37Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.sf.json.JSONObject.getJSONObject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (json.containsKey(\"portrait\")) { update.setPortrait(getValue(json.get(\"portrait\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/1606/buggy-version/src.main.java.com.game.core.action.bomb.CommonProcessor.java", "BodyUseAPI": ["net.sf.json.JSONObject.get(java.lang.String)", "com.game.core.action.bomb.CommonProcessor.getValue(json.get(\"portrait\"))", "com.game.bomb.domain.User.setPortrait(java.lang.Integer)"], "Fixed commit": "a9b03f78b0a119c4192dd5ad94f1539a4bf6c62d", "Url": "https://api.github.com/repos/Tassemble/520wenxiong", "Date": "2013-11-23T15:26:07Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.sf.json.JSONObject.getJSONObject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (json.containsKey(\"nickname\")) { java.lang.String nickName = json.getString(\"nickname\"); update.setNickName(nickName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/1606/buggy-version/src.main.java.com.game.core.action.bomb.CommonProcessor.java", "BodyUseAPI": ["net.sf.json.JSONObject.getString(java.lang.String)"], "Fixed commit": "a9b03f78b0a119c4192dd5ad94f1539a4bf6c62d", "Url": "https://api.github.com/repos/Tassemble/520wenxiong", "Date": "2013-11-23T15:26:07Z"},
{"Line": "=>313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (dataObj != null) { launchConfigItems.put(key, dataObj); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/7547/buggy-version/code.iaas.service-discovery.server.src.main.java.io.cattle.platform.servicediscovery.service.impl.ServiceDiscoveryServiceImpl.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,java.lang.Object)"], "Fixed commit": "767ce2a2b98176248cb8b68017f200613714cfc4", "Url": "https://api.github.com/repos/sonchang/cattle", "Date": "2015-06-02T06:29:14Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jerry.minidata.controller.AuthorizeController.decodeSignCode(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (token == null) { return \"authorize\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/5140/buggy-version/src.main.java.com.jerry.minidata.controller.AuthorizeController.java", "BodyUseAPI": [], "Fixed commit": "5976e416809fab47df8e5bfce3bf024c3c35b60e", "Url": "https://api.github.com/repos/jerry9355/minidata", "Date": "2013-02-17T11:10:04Z"},
{"Line": "=>370", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.entity.EntityDeathEvent.getEntity()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((lVictim.getKiller()) instanceof org.bukkit.entity.Player) if (lVictim.getKiller().hasMetadata(\"NPC\")) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/2737/buggy-version/Jobs.com.gamingmesh.jobs.listeners.JobsPaymentListener.java", "BodyUseAPI": ["lVictim.getKiller().hasMetadata(java.lang.String)", "org.bukkit.entity.LivingEntity.getKiller()"], "Fixed commit": "fe2086f3100dfd93c2f983c534e9ad0170f7db43", "Url": "https://api.github.com/repos/Zrips/Jobs", "Date": "2015-02-26T13:31:09Z"},
{"Line": "=>623", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((normal.lengthSquared()) > 0.0F) { normal.normalise(); }else { normal.setX(0.0F); normal.setY(0.0F); normal.setZ(1.0F); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/6478/buggy-version/src.org.nschmidt.ldparteditor.opengl.OpenGLRenderer.java", "BodyUseAPI": ["org.lwjgl.util.vector.Vector3f.normalise()", "org.lwjgl.util.vector.Vector3f.setY(float)", "org.lwjgl.util.vector.Vector3f.setZ(float)", "org.lwjgl.util.vector.Vector3f.setX(float)"], "Fixed commit": "b54ff29975c81a9fe0eb7faeeb5d1db25bcd4ed7", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2015-06-20T09:11:41Z"},
{"Line": "=>555", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((normal.lengthSquared()) > 0.0F) { normal.normalise(); normal.negate(); }else { normal.setX(0.0F); normal.setY(0.0F); normal.setZ(1.0F); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/6478/buggy-version/src.org.nschmidt.ldparteditor.opengl.OpenGLRenderer.java", "BodyUseAPI": ["org.lwjgl.util.vector.Vector3f.negate()", "org.lwjgl.util.vector.Vector3f.setZ(float)", "org.lwjgl.util.vector.Vector3f.normalise()", "org.lwjgl.util.vector.Vector3f.setX(float)", "org.lwjgl.util.vector.Vector3f.setY(float)"], "Fixed commit": "b54ff29975c81a9fe0eb7faeeb5d1db25bcd4ed7", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2015-06-20T09:11:41Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (intf.getName().startsWith(org.opendaylight.ovsdb.neutron.TenantNetworkManager.getManager().getExInfPrefix())) { this.handleInterfaceUpdate(node, uuid, intf); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/2168/buggy-version/neutron.src.main.java.org.opendaylight.ovsdb.neutron.SouthboundHandler.java", "BodyUseAPI": ["org.opendaylight.ovsdb.neutron.SouthboundHandler.handleInterfaceUpdate(org.opendaylight.controller.sal.core.Node,java.lang.String,org.opendaylight.ovsdb.lib.table.Interface)"], "Fixed commit": "59dd67fa92d08c9a810a4e4a46a99f7ed295942c", "Url": "https://api.github.com/repos/aryantaheri/ovsdb", "Date": "2014-04-03T10:50:02Z"},
{"Line": "=>3115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i > 0) { if (((decisionState.propProcessed[choice]) || (hintMoveProp == (decisionState.chooserMoves[choice].inputProposition))) || (preEnumerate && (!(terminatingMoveProps.contains(decisionState.chooserMoves[choice].inputProposition))))) { continue; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/2824/buggy-version/src.org.ggp.base.util.statemachine.implementation.propnet.forwardDeadReckon.ForwardDeadReckonPropnetStateMachine.java", "BodyUseAPI": [], "Fixed commit": "644e4021616c1402faf8a376bde3eca0665f60cc", "Url": "https://api.github.com/repos/SteveDraper/ggp-base", "Date": "2014-05-25T22:42:23Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["display.getLogText().getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((log.length()) > 500) { log = log.substring(0, 500); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/7119/buggy-version/android.onboard.src.se.purplescout.purplemow.onboard.MainActivity.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "d3f15826e56404eb55cd0ceca349877cb219402d", "Url": "https://api.github.com/repos/purplescout/PurpleMow", "Date": "2012-06-18T11:53:41Z"},
{"Line": "=>364", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.flyco.banner.widget.Banner.base.BaseBanner<E, T>.onCreateIndicator()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (indicatorViews != null) { ll_indicator_container.removeAllViews(); ll_indicator_container.addView(indicatorViews); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/1176/buggy-version/FlycoBanner_Lib.src.main.java.com.flyco.banner.widget.Banner.base.BaseBanner.java", "BodyUseAPI": ["android.widget.LinearLayout.addView(android.view.View)"], "Fixed commit": "40d241d7bd8afb6e6440873241b0a98949ba0d11", "Url": "https://api.github.com/repos/android12345/FlycoBanner_Master", "Date": "2015-09-22T08:28:54Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(new java.io.File(folder).mkdirs())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/8905/buggy-version/src.main.java.spaceinvaders.group_22.logger.Logger.java", "BodyUseAPI": [], "Fixed commit": "69b13b2eaebe4ca5fe7dc427fb5b4f7479fe68a7", "Url": "https://api.github.com/repos/doriandekoning/TI2206-SEM-Group-22", "Date": "2015-09-18T20:58:03Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (index > 0) { output.append(java.lang.System.getProperty(\"line.separator\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/4086/buggy-version/src.main.java.com.appdynamics.extensions.logmonitor.apache.processors.FilePointerProcessor.java", "BodyUseAPI": [], "Fixed commit": "2fd605a0a67c821af3dedd27ee2b411d7abca8b2", "Url": "https://api.github.com/repos/Appdynamics/apache-log-monitoring-extension", "Date": "2015-05-07T10:28:48Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, teammates.common.datatransfer.FeedbackQuestionAttributes>.get(response.feedbackQuestionId)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (question.giverType.isTeam()) { giverIdentifier = response.giverEmail.replace(Const.TEAM_OF_EMAIL_OWNER, \"\"); giverIdentifier = getTeamNameForEmail(giverIdentifier); }else { giverIdentifier = response.giverEmail; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/7676/buggy-version/src.main.java.teammates.common.datatransfer.FeedbackSessionResultsBundle.java", "BodyUseAPI": [], "Fixed commit": "3da200cf7e98d6b78ea0cfc370cd290e5defc29e", "Url": "https://api.github.com/repos/TEAMMATES/teammates", "Date": "2015-05-29T05:28:45Z"},
{"Line": "=>809", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (value > 1) { genMethodName = genMethodName + (value.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/8022/buggy-version/tools.wadlto.jaxrs.src.main.java.org.apache.cxf.tools.wadlto.jaxrs.SourceGenerator.java", "BodyUseAPI": ["java.lang.Integer.toString()"], "Fixed commit": "560dfbcacc40737186feda09ca27fefcac5f511a", "Url": "https://api.github.com/repos/apache/cxf", "Date": "2016-01-29T10:13:46Z"},
{"Line": "=>805", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (value == null) { value = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/8022/buggy-version/tools.wadlto.jaxrs.src.main.java.org.apache.cxf.tools.wadlto.jaxrs.SourceGenerator.java", "BodyUseAPI": [], "Fixed commit": "560dfbcacc40737186feda09ca27fefcac5f511a", "Url": "https://api.github.com/repos/apache/cxf", "Date": "2016-01-29T10:13:46Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((tokens.length) > 0) { if (tokens[0].equals(\"add\")) { ui.list.swing.UserInterface.isAdd = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/1647/buggy-version/src.ui.list.swing.UserInterface.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "836935f0a24982cc21aeed4eaa2742396acbb848", "Url": "https://api.github.com/repos/CS2103jan2015-w13-2j/main", "Date": "2015-03-31T09:11:05Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.camel.util.ObjectHelper.isEmpty(name)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/2454/buggy-version/components.camel-core-osgi.src.main.java.org.apache.camel.core.osgi.OsgiClassResolver.java", "BodyUseAPI": [], "Fixed commit": "5d183c82527299a256a6d4c5e3d26d6e37b76251", "Url": "https://api.github.com/repos/apache/camel", "Date": "2014-03-04T05:59:03Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((vulnerability.getDocuments()) != null) { for (com.denimgroup.threadfix.data.dao.hibernate.Document document : vulnerability.getDocuments()) { sessionFactory.getCurrentSession().delete(document); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/5010/buggy-version/threadfix-data-access.src.main.java.com.denimgroup.threadfix.data.dao.hibernate.HibernateVulnerabilityDao.java", "BodyUseAPI": ["com.denimgroup.threadfix.data.dao.hibernate.Vulnerability.getDocuments()"], "Fixed commit": "ef40d6d4db5baeb73288d1e60f9e288b643cdc43", "Url": "https://api.github.com/repos/denimgroup/threadfix", "Date": "2015-07-22T19:43:13Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((firstName) == null) && ((lastName) == null)) return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/8534/buggy-version/app.src.main.java.com.fbteam.hi.models.User.java", "BodyUseAPI": [], "Fixed commit": "2c84b189812ad9a858d7bf731cde05bf3acaf5e1", "Url": "https://api.github.com/repos/diegoalejogm/Hi", "Date": "2016-03-13T06:17:28Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((line.isBlank()) && (!(line.isWithinFilter))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/8075/buggy-version/src.main.java.com.cadrlife.jhaml.JHaml.java", "BodyUseAPI": [], "Fixed commit": "15e863ca9a70cf0e259b96735fa17decfdfcf049", "Url": "https://api.github.com/repos/raymyers/JHaml", "Date": "2011-05-04T21:39:15Z"},
{"Line": "=>856", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((userSetting.getGCMKeys()) != null) && (!(userSetting.getGCMKeys().isEmpty()))) mapper.insertGCMKeys(userSetting.getGCMKeys(), userID);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/4815/buggy-version/src.main.java.unicopa.copa.server.database.DatabaseService.java", "BodyUseAPI": ["unicopa.copa.server.database.data.persistence.UserSettingMapper.insertGCMKeys(userSetting.getGCMKeys(),int)", "unicopa.copa.base.UserSettings.getGCMKeys()"], "Fixed commit": "59d959c9057d4f1c16acdfd43c1f353658cdc8e9", "Url": "https://api.github.com/repos/UniCopa/CopaServer", "Date": "2013-06-18T12:36:53Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((SnowballerListener.lobbyspawnlocation) == null) { configOps.load(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/5830/buggy-version/src.co.networkery.uvbeenzaned.Snowballer.java", "BodyUseAPI": [], "Fixed commit": "38adb7acbb0a85cfc965aa3b960fe8d0d8e91938", "Url": "https://api.github.com/repos/uvbeenzaned/SnowballER", "Date": "2012-11-17T03:09:47Z"},
{"Line": "=>595", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (close) view.setFrontClipDistance(1.0E-4);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/7994/buggy-version/src.robot.WorldBranchGroup.java", "BodyUseAPI": [], "Fixed commit": "f34342a1e038544ce6b91d9b565fdf2c40e3baad", "Url": "https://api.github.com/repos/mllofriu/rat_simulator", "Date": "2014-01-13T19:01:46Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((meleeUse) == false) meleeUse = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/4004/buggy-version/Guns+.src.team.GunsPlus.GunsPlusListener.java", "BodyUseAPI": [], "Fixed commit": "c54a6a09e6c13101855b40912de57fb177bf1837", "Url": "https://api.github.com/repos/atlan1/Guns_plus", "Date": "2012-05-26T22:09:53Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((lexer.token()) == (com.alibaba.druid.sql.parser.Token.LITERAL_INT)) { top.setExpr(lexer.integerValue().intValue()); lexer.nextToken(); }else { top.setExpr(primary()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/6021/buggy-version/src.main.java.com.alibaba.druid.sql.dialect.sqlserver.parser.SQLServerExprParser.java", "BodyUseAPI": ["com.alibaba.druid.sql.dialect.sqlserver.parser.SQLServerExprParser.integerValue()", "com.alibaba.druid.sql.dialect.sqlserver.parser.SQLServerExprParser.nextToken()", "lexer.integerValue().intValue()", "com.alibaba.druid.sql.dialect.sqlserver.ast.SQLServerTop.setExpr(lexer.integerValue().intValue())"], "Fixed commit": "47c0082588f5c3f05afc6a4db5cf4d5132880bce", "Url": "https://api.github.com/repos/FlakyTestDetection/druid", "Date": "2017-10-03T08:24:57Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getPlayerCount()) > 0) { playerStr = \"Turn: player \" + (this.players.get(this.getTurn()).getId()); }else { playerStr = \"Waiting for calibration\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/1155/buggy-version/src.GameModel.java", "BodyUseAPI": [], "Fixed commit": "54d892495480890cbba8b36a30fcfee6a22a47ac", "Url": "https://api.github.com/repos/pyryk/3dpong", "Date": "2012-03-19T10:22:59Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((pipeline != null) && ((pipeline.getId()) != null)) { query += \" AND e.id <> :pid\"; jpql.setParameter(\"pid\", pipeline.getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/7236/buggy-version/commons-app.src.main.java.cz.cuni.mff.xrg.odcs.commons.app.pipeline.PipelineFacade.java", "BodyUseAPI": ["cz.cuni.mff.xrg.odcs.commons.app.dao.db.JPQLDbQuery<cz.cuni.mff.xrg.odcs.commons.app.pipeline.Pipeline>.setParameter(java.lang.String,pipeline.getId())", "cz.cuni.mff.xrg.odcs.commons.app.pipeline.Pipeline.getId()"], "Fixed commit": "c222b0ac8ade47c6df4f6805f8fc8f67dadf7d3a", "Url": "https://api.github.com/repos/mff-uk/ODCS", "Date": "2013-11-11T18:27:46Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mt.element()) == null) { }else { wyautl.core.Automaton macro_automaton = macro.automaton(); int root = automaton.addAll(macro_automaton.getMarker(0), macro_automaton); roots.put(name, root); return expand(root, automaton, visited, roots, macros); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/1031/buggy-version/modules.wyone.src.wyone.core.TypeExpansion.java", "BodyUseAPI": [], "Fixed commit": "787b8acea975093be8134e7b563a4a8051360245", "Url": "https://api.github.com/repos/DavePearce/Whiley", "Date": "2012-11-20T02:14:23Z"},
{"Line": "=>1005", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (n1.name().equals(n2.name())) { wyone.core.Type n1_element = n1.element(); wyone.core.Type n2_element = n2.element(); if ((n1_element == null) || (n2_element == null)) { return n1_element == n2_element; }else { return wyone.core.Type.isSubtype(n1_element, n2_element, count); } }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/1031/buggy-version/modules.wyone.src.wyone.core.Type.java", "BodyUseAPI": ["wyone.core.Type.Term.element()", "wyone.core.Type.Term.element()"], "Fixed commit": "787b8acea975093be8134e7b563a4a8051360245", "Url": "https://api.github.com/repos/DavePearce/Whiley", "Date": "2012-11-20T02:14:23Z"},
{"Line": "=>964", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((t1 == null) || (t2 == null)) { throw new java.lang.IllegalArgumentException(\"arguments cannot be null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/1031/buggy-version/modules.wyone.src.wyone.core.Type.java", "BodyUseAPI": [], "Fixed commit": "787b8acea975093be8134e7b563a4a8051360245", "Url": "https://api.github.com/repos/DavePearce/Whiley", "Date": "2012-11-20T02:14:23Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((leftHandSide instanceof org.kframework.backend.java.kil.Variable) && (rightHandSide.isNormal())) && (rightHandSide.variableSet().contains(leftHandSide))) { return true; }else if (((rightHandSide instanceof org.kframework.backend.java.kil.Variable) && (leftHandSide.isNormal())) && (leftHandSide.variableSet().contains(rightHandSide))) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/5938/buggy-version/java-backend.src.main.java.org.kframework.backend.java.symbolic.Equality.java", "BodyUseAPI": ["leftHandSide.variableSet().contains(org.kframework.backend.java.kil.Term)", "org.kframework.backend.java.kil.Term.variableSet()", "org.kframework.backend.java.kil.Term.isNormal()"], "Fixed commit": "37bebde0d52dd6b6039917b0d295c8f7bc665506", "Url": "https://api.github.com/repos/dwightguth/k", "Date": "2014-12-08T17:40:32Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.isInReading()) { org.waarp.ftp.filesystembased.FilesystemBasedFtpFile.logger.error(\"Should not be\", e); ((org.waarp.ftp.core.session.FtpSession) (session)).getDataConn().getFtpTransferControl().setTransferAbortedFromInternal(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/2991/buggy-version/src.main.java.org.waarp.ftp.filesystembased.FilesystemBasedFtpFile.java", "BodyUseAPI": [], "Fixed commit": "c910524842a90452b93a8d2fcd211d54a53f12fd", "Url": "https://api.github.com/repos/bcarlin/WaarpFtp", "Date": "2014-08-31T07:41:29Z"},
{"Line": "=>633", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((searchContext.getUserId()) == 0) { searchContext.setUserId(permissionChecker.getUserId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/5165/buggy-version/portal-service.src.com.liferay.portal.kernel.search.BaseIndexer.java", "BodyUseAPI": ["com.liferay.portal.kernel.search.SearchContext.setUserId(permissionChecker.getUserId())"], "Fixed commit": "e00fafb18862d97fb6f3d1bd52ca47cd6f70814c", "Url": "https://api.github.com/repos/shinnlok/liferay-portal", "Date": "2016-02-05T19:03:32Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.System.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (sSistemaOperativo.startsWith(\"Win\")) { file_path = \".\\\\Cache_Content\\\\\" + file; }else { file_path = \"./Cache_Content/\" + file; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/2513/buggy-version/src.cache.server.Cache_TransferRequestHandler.java", "BodyUseAPI": [], "Fixed commit": "a517a8e7be5042016f569c7ab29d5293ebf1e816", "Url": "https://api.github.com/repos/sinoscopis/Cache_Twitter", "Date": "2014-05-30T09:06:52Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.System.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (sSistemaOperativo.startsWith(\"Win\")) { file_path = \".\\\\Cache_Content\\\\\" + filename; }else { file_path = \"./Cache_Content/\" + filename; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/2513/buggy-version/src.cache.server.Cache_TransferRequestHandler.java", "BodyUseAPI": [], "Fixed commit": "a517a8e7be5042016f569c7ab29d5293ebf1e816", "Url": "https://api.github.com/repos/sinoscopis/Cache_Twitter", "Date": "2014-05-30T09:06:52Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (session.isHaveBatch()) { session.setSelectedCell(new client.model.Cell(1, 0)); }else { session.setSelectedCell(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/3873/buggy-version/src.client.panel.Table.java", "BodyUseAPI": ["client.Session.setSelectedCell(<nulltype>)", "client.Session.setSelectedCell(client.model.Cell)"], "Fixed commit": "3edd856a2795e7ca371e056d651ebaa7e7ed1466", "Url": "https://api.github.com/repos/zaphinath/record-indexer", "Date": "2013-08-06T20:45:07Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (session.isHaveBatch()) { session.setSelectedCell(new client.model.Cell(1, 0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/3873/buggy-version/src.client.panel.Table.java", "BodyUseAPI": [], "Fixed commit": "3edd856a2795e7ca371e056d651ebaa7e7ed1466", "Url": "https://api.github.com/repos/zaphinath/record-indexer", "Date": "2013-08-06T20:45:07Z"},
{"Line": "=>275", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (root >= 0) { roots[i] = map[root]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/566/buggy-version/modules.wyone.src.wyone.core.Automaton.java", "BodyUseAPI": [], "Fixed commit": "96a5ea2e71abba2e548792215947701a210716ea", "Url": "https://api.github.com/repos/DavePearce/Whiley", "Date": "2012-10-16T22:00:22Z"},
{"Line": "=>1090", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (img.requiresDrawImage()) { int iW = img.getWidth(); int iH = img.getHeight(); int clipX = getClipX(); int clipW = getClipWidth(); int clipY = getClipY(); int clipH = getClipHeight(); clipRect(x, y, w, h); for (int xPos = 0; xPos <= w; xPos += iW) { for (int yPos = 0; yPos < h; yPos += iH) { int actualX = xPos + x; int actualY = yPos + y; if (actualX > (clipX + clipW)) { continue; } if ((actualX + iW) < clipX) { continue; } if (actualY > (clipY + clipH)) { continue; } if ((actualY + iH) < clipY) { continue; } drawImage(img, actualX, actualY); } } setClip(clipX, clipY, clipW, clipH); }else { impl.tileImage(nativeGraphics, img.getImage(), (x + (xTranslate)), (y + (yTranslate)), w, h); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/151/buggy-version/CodenameOne.src.com.codename1.ui.Graphics.java", "BodyUseAPI": ["com.codename1.ui.Graphics.drawImage(com.codename1.ui.Image,int,int)", "com.codename1.ui.Image.getHeight()", "com.codename1.impl.CodenameOneImplementation.tileImage(java.lang.Object,img.getImage(),int,int,int,int)", "com.codename1.ui.Image.getImage()", "com.codename1.ui.Image.getWidth()"], "Fixed commit": "2e8a547d8ce40a2e5d829bf1bb175c1782b2db26", "Url": "https://api.github.com/repos/ForAnn/CodenameOne", "Date": "2016-02-19T19:36:29Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (function.equals(\"veriflow.VeriFlow.handleFlowMod\")) { cnt += 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/1167/buggy-version/src.main.java.veriflow.VeriFlow.java", "BodyUseAPI": [], "Fixed commit": "dd90ce2d1337fbeab819b86853d5debd0d41ef9d", "Url": "https://api.github.com/repos/Bootscat/floodlight", "Date": "2017-09-15T03:50:41Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pos < 0) { return java.util.Collections.emptyList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/4700/buggy-version/src.main.java.oakbot.chat.StackoverflowChat.java", "BodyUseAPI": [], "Fixed commit": "7f08295be94ab82fba0d468354caec3147ab9ace", "Url": "https://api.github.com/repos/mangstadt/OakBot", "Date": "2014-12-04T02:27:49Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cmri.etl.common.ResultItems.getResource()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (str.equals(\"null\")) { tax.chaoyang.DatePageProcessor.LOG.info(\"fail to get page data\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/5809/buggy-version/rob.src.main.java.tax.chaoyang.DatePageProcessor.java", "BodyUseAPI": [], "Fixed commit": "c5c3fdab37009e2bad12b7230e1eda19d758ef1a", "Url": "https://api.github.com/repos/chookin/cash-cow", "Date": "2015-06-29T11:16:00Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (fs.exists(target)) { log.info(java.lang.String.format(\"File %s already exists. Deleting first ...\", target)); if (!(fs.delete(target, false))) { log.error(java.lang.String.format(\"Unable to delete %s\", target)); throw new java.io.IOException(java.lang.String.format(\"Failed to move from %s to %s. Unable to delete target\", source, target)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/5964/buggy-version/camus-etl-kafka.src.main.java.com.linkedin.camus.etl.kafka.mapred.EtlMultiOutputCommitter.java", "BodyUseAPI": ["org.apache.log4j.Logger.error(java.lang.String)", "org.apache.log4j.Logger.info(java.lang.String)", "java.lang.String.format(java.lang.String,org.apache.hadoop.fs.Path)", "java.lang.String.format(java.lang.String,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)", "java.lang.String.format(java.lang.String,org.apache.hadoop.fs.Path)", "org.apache.hadoop.fs.FileSystem.delete(org.apache.hadoop.fs.Path,boolean)"], "Fixed commit": "f8021ea8ec7d86e4096fd4a7a502138cd0d2b5c5", "Url": "https://api.github.com/repos/relateiq/camus", "Date": "2015-07-29T02:13:07Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.eclipse.swt.widgets.Display.getCurrent()) != null) { runnable.run(); }else { display.syncExec(runnable); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/5247/buggy-version/src.jmockit.assist.Activator.java", "BodyUseAPI": [], "Fixed commit": "d5f9df22c8e510015dc084efdcaf5ac1f351c5d3", "Url": "https://api.github.com/repos/ajermakovics/eclipse-jmockit-assist", "Date": "2012-07-17T22:33:38Z"},
{"Line": "=>524", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getWidget().getNumberOfSeries()) == 0) { seriesAndDataLabelsRendered = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/8856/buggy-version/addon.src.main.java.com.vaadin.addon.charts.shared.ChartConnector.java", "BodyUseAPI": [], "Fixed commit": "9cef881ad495890887c3621921a2fb71c961602d", "Url": "https://api.github.com/repos/vaadin/charts", "Date": "2017-06-09T10:57:16Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((jsOverlay.getSeries()) != null) { return jsOverlay.getSeries().length(); }else { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/8856/buggy-version/addon.src.main.java.com.vaadin.addon.charts.client.ui.HighchartWidget.java", "BodyUseAPI": ["jsOverlay.getSeries().length()", "com.vaadin.addon.charts.client.ui.HighchartJsOverlay.getSeries()"], "Fixed commit": "9cef881ad495890887c3621921a2fb71c961602d", "Url": "https://api.github.com/repos/vaadin/charts", "Date": "2017-06-09T10:57:16Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((plainSelect.getDistinct()) != null) { unsupported = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/1204/buggy-version/obdalib-core.src.main.java.it.unibz.krdb.obda.parser.TableNameVisitor.java", "BodyUseAPI": [], "Fixed commit": "8454c39cacba90c68cb04fd19bec0ea4428933ed", "Url": "https://api.github.com/repos/ontop/ontop", "Date": "2015-04-23T15:47:49Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(com.google.common.base.Strings.isNullOrEmpty(error.getMessage()))) { out.println((\" \" + (error.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/4270/buggy-version/src.main.java.com.selesse.jxlint.report.DefaultReporter.java", "BodyUseAPI": ["com.selesse.jxlint.report.DefaultReporter.println((\"    \" + (error.getMessage())))", "com.selesse.jxlint.model.rules.LintError.getMessage()"], "Fixed commit": "aa3f3b1073bc7ce1540b2472573d5b47cf895555", "Url": "https://api.github.com/repos/selesse/jxlint", "Date": "2014-03-18T13:46:18Z"},
{"Line": "=>405", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((numVertices) <= 10) { java.lang.System.out.printf(\"%d %d weight = %d\\n\", a[i].getLeftVertex().getName(), a[i].getRightVertex().getName(), a[i].getWeight()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/7280/buggy-version/src.Graph.java", "BodyUseAPI": [], "Fixed commit": "d58b4fdf3ba094abdc9de6ededf07121a2a5221b", "Url": "https://api.github.com/repos/myeaple/MST", "Date": "2014-03-13T18:41:40Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (structureGraph.hasAnyResponses()) { logger.warn(\"StructureGraph contains responses that will be copied to all CohortGraphs\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/8780/buggy-version/src.edu.ithaca.dragonlab.ckc.conceptgraph.CohortConceptGraphs.java", "BodyUseAPI": [], "Fixed commit": "6557fdca1c868df47ec92cc06b2d243f372f829e", "Url": "https://api.github.com/repos/tobydragon/tecmap", "Date": "2017-08-14T19:12:30Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((1 <= c0) || (c0 <= 31)) { i++; continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/7661/buggy-version/src.org.rascalmpl.unicode.UnicodeDetector.java", "BodyUseAPI": [], "Fixed commit": "8a17f3be6f0d00e3b6f518c79df4998735dd7100", "Url": "https://api.github.com/repos/cwi-swat/rascal", "Date": "2012-11-27T12:41:40Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((arr.length()) == 0) { if (typeHint.equals(java.lang.Object.class)) { return ((T[]) (new java.lang.String[0])); }else { return ((T[]) (java.lang.reflect.Array.newInstance(typeHint, 0))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/6480/buggy-version/bundles.resource.src.main.java.org.sakaiproject.nakamura.api.resource.lite.LiteJsonImporter.java", "BodyUseAPI": [], "Fixed commit": "90b457e0881b919c3f568351e3bdc7f72dcc51eb", "Url": "https://api.github.com/repos/ctweney/nakamura", "Date": "2011-05-16T12:54:11Z"},
{"Line": "=>1795", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getOwner()) instanceof hudson.model.Hudson.MasterComputer) { env.put(\"NODE_NAME\", \"master\"); }else { env.put(\"NODE_NAME\", e.getOwner().getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/6375/buggy-version/core.src.main.java.hudson.model.Run.java", "BodyUseAPI": ["e.getOwner().getName()", "hudson.EnvVars.put(java.lang.String,e.getOwner().getName())", "hudson.model.Executor.getOwner()"], "Fixed commit": "1ae42b9730aa5185a8b3fbba62859754f7e16278", "Url": "https://api.github.com/repos/slide/jenkins", "Date": "2011-05-13T17:03:50Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (args[0].equalsIgnoreCase(\"give\")) { msg.severe(sender, \"You must specify a player to give a skull to.\"); }else if (args[0].equalsIgnoreCase(\"giveall\")) { for (org.bukkit.entity.Player p : org.bukkit.Bukkit.getServer().getOnlinePlayers()) { p.getInventory().setItem(skullSlot, getPlayerSkull(p)); } msg.good(sender, \"All online players have been given their skulls.\"); }else if (args[0].equalsIgnoreCase(\"help\")) { msg.good(sender, helpMessage()); }else { msg.severe(sender, \"Invalid command usage. Type /hotbarskull help for help.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/227/buggy-version/src.me.mattgd.hotbarskull.HotbarSkull.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)"], "Fixed commit": "b82a323977e927dddba59708e1531f2d4a0ca497", "Url": "https://api.github.com/repos/mattgd/HotbarSkull", "Date": "2017-03-11T18:57:19Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((args.length) > 1) { if (args[0].equalsIgnoreCase(\"give\")) { java.lang.String playerName = args[1]; org.bukkit.entity.Player p = org.bukkit.Bukkit.getPlayer(playerName); if (p == null) { msg.severe(sender, ((\"Invalid player \" + playerName) + \".\")); }else { p.getInventory().setItem(skullSlot, getPlayerSkull(p)); msg.good(sender, ((p.getName()) + \" has been given their skull.\")); } }else { msg.severe(sender, \"Invalid command usage. Type /hotbarskull help for help.\"); } }else { msg.good(sender, helpMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/227/buggy-version/src.me.mattgd.hotbarskull.HotbarSkull.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)"], "Fixed commit": "b82a323977e927dddba59708e1531f2d4a0ca497", "Url": "https://api.github.com/repos/mattgd/HotbarSkull", "Date": "2017-03-11T18:57:19Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.minecolonies.coremod.colony.CitizenData.getCitizenEntity()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (tempCitizen != null) { if ((!(tempCitizen.getLastJob().isEmpty())) && (!(tempCitizen.getLastJob().equals(getJobName())))) { citizen.resetExperienceAndLevel(); } tempCitizen.setLastJob(getJobName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/4347/buggy-version/src.main.java.com.minecolonies.coremod.colony.buildings.AbstractBuildingWorker.java", "BodyUseAPI": ["com.minecolonies.coremod.entity.EntityCitizen.getLastJob()", "tempCitizen.getLastJob().equals(java.lang.String)", "tempCitizen.getLastJob().isEmpty()", "com.minecolonies.coremod.entity.EntityCitizen.getLastJob()", "com.minecolonies.coremod.entity.EntityCitizen.setLastJob(java.lang.String)"], "Fixed commit": "2fd877ad561a6b315d32dee93c7012111cc8de71", "Url": "https://api.github.com/repos/ldtteam/minecolonies", "Date": "2017-11-23T11:54:12Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Runtime.exec(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(tshark.isAlive())) { java.io.BufferedReader errorStream = new java.io.BufferedReader(new java.io.InputStreamReader(tshark.getErrorStream())); java.lang.String errorLine = null; while ((errorLine = errorStream.readLine()) != null) { logger.severe(errorLine); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/8102/buggy-version/client.IoT-Analytics.src.main.java.io.pivotal.demo.ProbeCaptureRunner.java", "BodyUseAPI": ["java.lang.Process.getErrorStream()"], "Fixed commit": "2aff5f0911cafbd11976c35eaa42ece117af4df7", "Url": "https://api.github.com/repos/Pivotal-Open-Source-Hub/WifiAnalyticsIoT", "Date": "2015-06-19T01:00:06Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (c.getSimpleName().equals(\"SandRankingDomain\")) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/412/buggy-version/project.src.main.java.lu.uni.adtool.tree.DomainFactory.java", "BodyUseAPI": [], "Fixed commit": "b351c937764ba7c28887c42407ee3320fd292c6c", "Url": "https://api.github.com/repos/tahti/ADTool2", "Date": "2017-02-20T11:52:09Z"},
{"Line": "=>3", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (root == null) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/2480/buggy-version/src.LargestBSTSubtree.java", "BodyUseAPI": [], "Fixed commit": "72d78971397695b000636389e0cf59a84f478fa2", "Url": "https://api.github.com/repos/yao23/Java_Playground", "Date": "2017-08-03T04:26:30Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((res.get(\"car\")) == null) { car = \"\"; }else { car = res.get(\"car\").toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/1642/buggy-version/app.src.main.java.com.carsharing.antisergiu.main.MyProfile.java", "BodyUseAPI": ["res.get(\"car\").toString()", "com.parse.ParseObject.get(java.lang.String)"], "Fixed commit": "ec99fd0fdb47d544c0746132ac9d55551d6cdb4a", "Url": "https://api.github.com/repos/FlorescuAndreea/CarSharing", "Date": "2014-12-02T22:34:03Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((res.get(\"smoking\")) == null) { smoking = \"false\"; }else { smoking = res.get(\"smoking\").toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/1642/buggy-version/app.src.main.java.com.carsharing.antisergiu.main.MyProfile.java", "BodyUseAPI": ["res.get(\"smoking\").toString()", "com.parse.ParseObject.get(java.lang.String)"], "Fixed commit": "ec99fd0fdb47d544c0746132ac9d55551d6cdb4a", "Url": "https://api.github.com/repos/FlorescuAndreea/CarSharing", "Date": "2014-12-02T22:34:03Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((res.get(\"music\")) == null) { music = \"false\"; }else { music = res.get(\"music\").toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/1642/buggy-version/app.src.main.java.com.carsharing.antisergiu.main.MyProfile.java", "BodyUseAPI": ["res.get(\"music\").toString()", "com.parse.ParseObject.get(java.lang.String)"], "Fixed commit": "ec99fd0fdb47d544c0746132ac9d55551d6cdb4a", "Url": "https://api.github.com/repos/FlorescuAndreea/CarSharing", "Date": "2014-12-02T22:34:03Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((res.get(\"name\")) == null) { name = \"\"; }else { name = res.get(\"name\").toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/1642/buggy-version/app.src.main.java.com.carsharing.antisergiu.main.MyProfile.java", "BodyUseAPI": ["res.get(\"name\").toString()", "com.parse.ParseObject.get(java.lang.String)"], "Fixed commit": "ec99fd0fdb47d544c0746132ac9d55551d6cdb4a", "Url": "https://api.github.com/repos/FlorescuAndreea/CarSharing", "Date": "2014-12-02T22:34:03Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((res.get(\"telephone\")) == null) { telephone = \"\"; }else { telephone = res.get(\"telephone\").toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/1642/buggy-version/app.src.main.java.com.carsharing.antisergiu.main.MyProfile.java", "BodyUseAPI": ["res.get(\"telephone\").toString()", "com.parse.ParseObject.get(java.lang.String)"], "Fixed commit": "ec99fd0fdb47d544c0746132ac9d55551d6cdb4a", "Url": "https://api.github.com/repos/FlorescuAndreea/CarSharing", "Date": "2014-12-02T22:34:03Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["exprBinary.getRight().attrTyp()", "exprBinary.getLeft().attrTyp()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (leftType.isSubtypeOf(rightType, expr)) { return rightType; }else if (rightType.isSubtypeOf(leftType, expr)) { return leftType; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/2254/buggy-version/de.peeeq.wurstscript.src.de.peeeq.wurstscript.attributes.AttrExprExpectedType.java", "BodyUseAPI": ["de.peeeq.wurstscript.types.WurstType.isSubtypeOf(de.peeeq.wurstscript.types.WurstType,de.peeeq.wurstscript.ast.Expr)"], "Fixed commit": "f33e8fb77c441b2b138cacb6f3059ca8a8d136c6", "Url": "https://api.github.com/repos/peq/WurstScript", "Date": "2013-05-02T19:43:49Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((serviceProviderManager) != null) { serviceProviderManager.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/9146/buggy-version/src.dimitri.suls.allshare.activities.Main.java", "BodyUseAPI": [], "Fixed commit": "994557a8f5d669b17d1ee5a5ec35603d6257ac0e", "Url": "https://api.github.com/repos/madeentje/allshare_demo", "Date": "2013-03-25T14:55:06Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.construction.pm.models.ProjectPlanModel.getParentProjectPlanId()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (parentProjectPlanId != null) { if ((parentProjectPlanId == 0) || (parentProjectPlanId.equals(0))) parentProjectPlanId = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/1579/buggy-version/app.src.main.java.com.construction.pm.views.project_plan.ProjectPlanListView.java", "BodyUseAPI": ["java.lang.Integer.equals(int)"], "Fixed commit": "c9f0f7a4bd01fb1d5c6d9e2b583e8a86a30deace", "Url": "https://api.github.com/repos/firmandata/android-project_management", "Date": "2017-05-07T14:40:11Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((basePath != null) && ((basePath.length()) > 0)) { path = java.nio.file.Paths.get(basePath); if (!(path.toFile().exists())) path = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/7263/buggy-version/src.it.polimi.modaclouds.space4cloud.privatecloud.PrivateCloud.java", "BodyUseAPI": ["java.nio.file.Paths.get(java.lang.String)"], "Fixed commit": "db28f22423937c2ea6a1dddf36b84b9d95254679", "Url": "https://api.github.com/repos/deib-polimi/modaclouds-space4cloud-privatecloud", "Date": "2014-10-30T23:16:10Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (capacity < 0) { throw new java.lang.IllegalArgumentException(\"Capacity can not be negative!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/6987/buggy-version/src.main.java.shtykh.storage.cache.TwoLevelCache.java", "BodyUseAPI": [], "Fixed commit": "b385a84029ab4e845e5d2e98e41df634e63f8cfc", "Url": "https://api.github.com/repos/shtykh/cashtykh", "Date": "2015-02-09T14:17:49Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args.length) != 1) { throw new java.lang.IllegalArgumentException(\"need indexing_file_info.xml location info\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/9210/buggy-version/crescent_utils.src.main.java.com.tistory.devyongsik.utils.MakeJsonFormFileFromFiles.java", "BodyUseAPI": [], "Fixed commit": "bbf34d5d9d57a7c71dfb852b0af1810563f139c7", "Url": "https://api.github.com/repos/need4spd/crescent", "Date": "2013-02-15T06:38:49Z"},
{"Line": "=>323", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lang.equalsIgnoreCase(\"zh-rTW\")) { myLocale = java.util.Locale.TRADITIONAL_CHINESE; }else { myLocale = new java.util.Locale(lang); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/152/buggy-version/app.src.main.java.de.bitshares_munich.utils.Helper.java", "BodyUseAPI": [], "Fixed commit": "b9dc3d89390c819c0d9f04a164a7d9f021d129ef", "Url": "https://api.github.com/repos/yasir1brahim/smartcoins-wallet", "Date": "2016-07-29T07:08:05Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentSequenceLabel) == null) { getStreamDataProvider().consumeWhiteSpaceAndComments(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/8109/buggy-version/main.info.bioinfweb.jphyloio.core.src.info.bioinfweb.jphyloio.formats.nexus.commandreaders.characters.MatrixReader.java", "BodyUseAPI": [], "Fixed commit": "a2fa3dd7b0fdc54ca6aba1d493bbf3d57e0d6f96", "Url": "https://api.github.com/repos/bioinfweb/JPhyloIO", "Date": "2017-10-25T15:51:46Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.isAuto()) { e.getPlayer().move(((e.getOne()) + (e.getTwo()))); if ((e.getOne()) == (e.getTwo())) org.bukkit.Bukkit.broadcastMessage(\"Pasch\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/1960/buggy-version/src.de.wolfi.minopoly.components.GameListener.java", "BodyUseAPI": [], "Fixed commit": "8aef22e0d62d184254b14d00781c7491107ceb4c", "Url": "https://api.github.com/repos/WOLFI3654/Minopoly", "Date": "2017-08-29T13:37:39Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.simple.JSONObject.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (spwn == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/7733/buggy-version/src.main.java.me.mrkirby153.plugins.ThePlague.arena.ArenaUtils.java", "BodyUseAPI": [], "Fixed commit": "d2de57dec7ea9bb5c82ada86961e537b58ac1c4d", "Url": "https://api.github.com/repos/mrkirby153/The-Plague", "Date": "2014-06-29T22:34:37Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (inRowRange && inColRange) { return !(matrix.isSet(r, c)); }else if ((r < 0) && inColRange) { return true; }else return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/2512/buggy-version/src.tetris.Mino.java", "BodyUseAPI": [], "Fixed commit": "13998bfc96ea6d7dfeef140fefd55bfb1f7c2614", "Url": "https://api.github.com/repos/mdciotti/tetris", "Date": "2016-03-30T17:12:42Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((cc.getFreeCoords()) != null) { j2a.GraphicsCanvas gc = currentBoard.createGraphics(); gc.setColor(Factory.Color.getCYAN()); gc.drawRect(cc.getFreeCoords().getX(), cc.getFreeCoords().getY(), cc.getWidth(), cc.getHeight()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/76/buggy-version/pandemic-lib.src.pandemic.game.board.Board.java", "BodyUseAPI": ["pandemic.game.cards.Card.getHeight()", "cc.getFreeCoords().getY()", "pandemic.game.cards.Card.getWidth()", "j2a.GraphicsCanvas.drawRect(cc.getFreeCoords().getX(),cc.getFreeCoords().getY(),cc.getWidth(),cc.getHeight())", "cc.getFreeCoords().getX()", "pandemic.game.cards.Card.getFreeCoords()", "pandemic.game.cards.Card.getFreeCoords()"], "Fixed commit": "90f588b2ebd7a1ec65c10446043718c8fbd9e1d7", "Url": "https://api.github.com/repos/judovana/pandemic", "Date": "2016-12-23T11:09:56Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (needToSaveNewFile) { wallet.saveToFile(walletFile); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/1653/buggy-version/multibit.src.org.multibit.network.MultiBitService.java", "BodyUseAPI": [], "Fixed commit": "c23501ceba1a72580de446d50b9660bf15577b4c", "Url": "https://api.github.com/repos/Multibit-Legacy/multibit", "Date": "2011-08-28T16:12:35Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((clazz == (short.class)) || (clazz == (java.lang.Short.class))) { if ((val > (java.lang.Short.MAX_VALUE)) || (val < (java.lang.Short.MIN_VALUE))) { throw new com.alibaba.fastjson.JSONException((\"short overflow : \" + val)); } return ((T) (java.lang.Short.valueOf(((short) (val))))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/4588/buggy-version/src.main.java.com.alibaba.fastjson.parser.deserializer.NumberDeserializer.java", "BodyUseAPI": [], "Fixed commit": "e1614b5c29623a339d87a04a32e080fd0a198708", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2016-10-23T13:41:50Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((clazz == (byte.class)) || (clazz == (java.lang.Byte.class))) { if ((val > (java.lang.Byte.MAX_VALUE)) || (val < (java.lang.Byte.MIN_VALUE))) { throw new com.alibaba.fastjson.JSONException((\"short overflow : \" + val)); } return ((T) (java.lang.Byte.valueOf(((byte) (val))))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/4588/buggy-version/src.main.java.com.alibaba.fastjson.parser.deserializer.NumberDeserializer.java", "BodyUseAPI": [], "Fixed commit": "e1614b5c29623a339d87a04a32e080fd0a198708", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2016-10-23T13:41:50Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((turnbasedstrategy.Client.closed) == true) turnbasedstrategy.Client.closeClient();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/5361/buggy-version/TurnBasedStrategy.src.turnbasedstrategy.Client.java", "BodyUseAPI": [], "Fixed commit": "3c5a572f62515f1d9a428ab2e5f8db1bfa1567ae", "Url": "https://api.github.com/repos/ndb5136/Turn-Based-Strategy", "Date": "2017-03-31T17:40:30Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["columnReference.getMetadataObject().getSourceName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (org.teiid.core.util.StringUtil.endsWithIgnoreCase(name, \"id\")) { this.parentName = name.substring(0, ((name.length()) - 2)); }else if (name.endsWith(\"__c\")) { this.parentName = (name.substring(0, ((name.length()) - 1))) + \"r\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/7706/buggy-version/connectors.translator-salesforce.src.main.java.org.teiid.translator.salesforce.execution.visitors.JoinQueryVisitor.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)", "java.lang.String.endsWith(java.lang.String)", "java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "9c3805640574874592d8073533ba1247fe953eaf", "Url": "https://api.github.com/repos/teiid/teiid", "Date": "2017-06-08T18:45:22Z"},
{"Line": "=>563", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (robot.use_range_sensor) { telemetry.addData(\"4.2 range = \", \"%.2f cm\", robot.rangeSensor.getDistance(DistanceUnit.CM)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/3290/buggy-version/TeamCode.src.main.java.org.firstinspires.ftc.teamcode.SwerveUtilLOP.java", "BodyUseAPI": ["robot.rangeSensor.getDistance(DistanceUnit.CM)", "org.firstinspires.ftc.teamcode.SwerveUtilLOP.addData(java.lang.String,java.lang.String,robot.rangeSensor.getDistance(DistanceUnit.CM))"], "Fixed commit": "3883474b93e05abdcbfdc425ee4a81a5f71cda14", "Url": "https://api.github.com/repos/tobortechftc/swerve", "Date": "2017-10-15T01:16:14Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(event.getBlock().getType().equals(Material.WATER))) && (!(event.getBlock().getType().equals(Material.LAVA)))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/6304/buggy-version/src.net.sacredlabyrinth.Phaed.PreciousStones.listeners.PSBlockListener.java", "BodyUseAPI": [], "Fixed commit": "cd81c718199d8b5ab6040167b40168111ddce155", "Url": "https://api.github.com/repos/marcelo-mason/PreciousStones", "Date": "2011-06-01T06:42:58Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.atlassian.jira.issue.Issue.getResolutionDate()", "com.atlassian.jira.issue.Issue.getCreated()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((created != null) && (resolved != null)) { long diffMilliseconds = (resolved.getTime()) - (created.getTime()); long days = diffMilliseconds / (((1000 * 60) * 60) * 24); daysOpened += days; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/8144/buggy-version/src.main.java.org.catrobat.estimationplugin.calc.EstimationCalculator.java", "BodyUseAPI": ["java.sql.Timestamp.getTime()", "java.sql.Timestamp.getTime()"], "Fixed commit": "0a4940c1bb4385b0da7d510ecede163016c9c817", "Url": "https://api.github.com/repos/Catrobat/EstimationPlugin", "Date": "2016-02-24T12:13:02Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (code instanceof wyjc.io.ForAll) { freeSlot = translate(((wyjc.io.ForAll) (code)), freeSlot, bytecodes); }else if (code instanceof wyjc.io.Goto) { translate(((wyjc.io.Goto) (code)), freeSlot, bytecodes); }else if (code instanceof wyjc.io.IfGoto) { translate(((wyjc.io.IfGoto) (code)), stmt, freeSlot, bytecodes); }else if (code instanceof wyjc.io.IndirectInvoke) { translate(((wyjc.io.IndirectInvoke) (code)), freeSlot, bytecodes); }else if (code instanceof wyjc.io.IndirectSend) { translate(((wyjc.io.IndirectSend) (code)), freeSlot, bytecodes); }else if (code instanceof wyjc.io.Invoke) { translate(((wyjc.io.Invoke) (code)), freeSlot, bytecodes); }else if (code instanceof wyjc.io.Label) { translate(((wyjc.io.Label) (code)), freeSlot, bytecodes); }else if (code instanceof wyjc.io.ListLoad) { translate(((wyjc.io.ListLoad) (code)), freeSlot, bytecodes); }else if (code instanceof wyjc.io.Load) { translate(((wyjc.io.Load) (code)), freeSlot, bytecodes); }else if (code instanceof wyjc.io.Loop) { translate(((wyjc.io.Loop) (code)), freeSlot, bytecodes); }else if (code instanceof wyjc.io.MultiStore) { translate(((wyjc.io.MultiStore) (code)), freeSlot, bytecodes); }else if (code instanceof wyjc.io.NewDict) { translate(((wyjc.io.NewDict) (code)), freeSlot, bytecodes); }else if (code instanceof wyjc.io.NewList) { translate(((wyjc.io.NewList) (code)), freeSlot, bytecodes); }else if (code instanceof wyjc.io.NewRecord) { translate(((wyjc.io.NewRecord) (code)), freeSlot, bytecodes); }else if (code instanceof wyjc.io.NewSet) { translate(((wyjc.io.NewSet) (code)), freeSlot, bytecodes); }else if (code instanceof wyjc.io.Return) { translate(((wyjc.io.Return) (code)), freeSlot, bytecodes); }else if (code instanceof wyjc.io.Send) { translate(((wyjc.io.Send) (code)), freeSlot, bytecodes); }else if (code instanceof wyjc.io.Store) { translate(((wyjc.io.Store) (code)), freeSlot, bytecodes); }else if (code instanceof wyjc.io.UnOp) { translate(((wyjc.io.UnOp) (code)), freeSlot, bytecodes); }else { syntaxError(((\"need to finish class builder (\" + code) + \")\"), filename, stmt); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/424/buggy-version/src.wyjc.io.ClassFileBuilder.java", "BodyUseAPI": ["wyjc.io.ClassFileBuilder.syntaxError(((\"need to finish class builder (\" + code) + \")\"),java.lang.String,wyjc.io.Entry)"], "Fixed commit": "4951cdf52736308b5b6191b75c39fa02043f0b39", "Url": "https://api.github.com/repos/Whiley/WhileyCompiler", "Date": "2011-06-07T04:00:56Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (code instanceof wyjc.io.End) { translate(((wyjc.io.End) (code)), freeSlot, bytecodes); }else if (code instanceof wyjc.io.ExternJvm) { }else if (code instanceof wyjc.io.Fail) { translate(((wyjc.io.Fail) (code)), freeSlot, bytecodes); }else if (code instanceof wyjc.io.FieldLoad) { translate(((wyjc.io.FieldLoad) (code)), freeSlot, bytecodes); }else if (code instanceof wyjc.io.ForAll) { freeSlot = translate(((wyjc.io.ForAll) (code)), freeSlot, bytecodes); }else if (code instanceof wyjc.io.Goto) { translate(((wyjc.io.Goto) (code)), freeSlot, bytecodes); }else if (code instanceof wyjc.io.IfGoto) { translate(((wyjc.io.IfGoto) (code)), stmt, freeSlot, bytecodes); }else if (code instanceof wyjc.io.IndirectInvoke) { translate(((wyjc.io.IndirectInvoke) (code)), freeSlot, bytecodes); }else if (code instanceof wyjc.io.IndirectSend) { translate(((wyjc.io.IndirectSend) (code)), freeSlot, bytecodes); }else if (code instanceof wyjc.io.Invoke) { translate(((wyjc.io.Invoke) (code)), freeSlot, bytecodes); }else if (code instanceof wyjc.io.Label) { translate(((wyjc.io.Label) (code)), freeSlot, bytecodes); }else if (code instanceof wyjc.io.ListLoad) { translate(((wyjc.io.ListLoad) (code)), freeSlot, bytecodes); }else if (code instanceof wyjc.io.Load) { translate(((wyjc.io.Load) (code)), freeSlot, bytecodes); }else if (code instanceof wyjc.io.Loop) { translate(((wyjc.io.Loop) (code)), freeSlot, bytecodes); }else if (code instanceof wyjc.io.MultiStore) { translate(((wyjc.io.MultiStore) (code)), freeSlot, bytecodes); }else if (code instanceof wyjc.io.NewDict) { translate(((wyjc.io.NewDict) (code)), freeSlot, bytecodes); }else if (code instanceof wyjc.io.NewList) { translate(((wyjc.io.NewList) (code)), freeSlot, bytecodes); }else if (code instanceof wyjc.io.NewRecord) { translate(((wyjc.io.NewRecord) (code)), freeSlot, bytecodes); }else if (code instanceof wyjc.io.NewSet) { translate(((wyjc.io.NewSet) (code)), freeSlot, bytecodes); }else if (code instanceof wyjc.io.Return) { translate(((wyjc.io.Return) (code)), freeSlot, bytecodes); }else if (code instanceof wyjc.io.Send) { translate(((wyjc.io.Send) (code)), freeSlot, bytecodes); }else if (code instanceof wyjc.io.Store) { translate(((wyjc.io.Store) (code)), freeSlot, bytecodes); }else if (code instanceof wyjc.io.UnOp) { translate(((wyjc.io.UnOp) (code)), freeSlot, bytecodes); }else { syntaxError(((\"need to finish class builder (\" + code) + \")\"), filename, stmt); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/424/buggy-version/src.wyjc.io.ClassFileBuilder.java", "BodyUseAPI": ["wyjc.io.ClassFileBuilder.syntaxError(((\"need to finish class builder (\" + code) + \")\"),java.lang.String,wyjc.io.Entry)"], "Fixed commit": "4951cdf52736308b5b6191b75c39fa02043f0b39", "Url": "https://api.github.com/repos/Whiley/WhileyCompiler", "Date": "2011-06-07T04:00:56Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((intent) == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/3483/buggy-version/main.src.cgeo.geocaching.apps.AbstractApp.java", "BodyUseAPI": [], "Fixed commit": "7a6d90d0ce29acd65754947c9a94afb35637831f", "Url": "https://api.github.com/repos/rsudev/c-geo-opensource", "Date": "2015-02-26T20:33:41Z"},
{"Line": "=>1250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.larvalabs.svgandroid.SVGParser.Properties.getColor(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (stopColour == null) { colour = 0; }else { float alpha = (props.getFloat(\"stop-opacity\", 1)) * (currentLayerAttributes().opacity); int alphaInt = java.lang.Math.round((255 * alpha)); colour = (stopColour.intValue()) | (alphaInt << 24); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/1372/buggy-version/src.main.java.com.larvalabs.svgandroid.SVGParser.java", "BodyUseAPI": ["java.lang.Integer.intValue()"], "Fixed commit": "4015fbd06afcb37e0d08e714c8174cb4ac8781eb", "Url": "https://api.github.com/repos/japgolly/svg-android", "Date": "2013-04-22T23:50:35Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((de.Lathanael.SimpleCalc.SimpleCalc.SCPluginListener.spout) != null) { de.Lathanael.SimpleCalc.SimpleCalc.spoutSupportClass = new de.Lathanael.SimpleCalc.SpoutSupport.SCSpout(); try { de.Lathanael.SimpleCalc.SimpleCalc.spoutSupportClass.onEnable(this, de.Lathanael.SimpleCalc.SimpleCalc.pm, de.Lathanael.SimpleCalc.SimpleCalc.SCPluginListener, config); } catch (java.lang.Exception e) { } saveConfig(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/7755/buggy-version/src.main.java.de.Lathanael.SimpleCalc.SimpleCalc.java", "BodyUseAPI": ["de.Lathanael.SimpleCalc.SpoutSupport.SCSpout.onEnable(de.Lathanael.SimpleCalc.SimpleCalc,org.bukkit.plugin.PluginManager,de.Lathanael.SimpleCalc.Listeners.SCPluginListener,org.bukkit.configuration.file.YamlConfiguration)"], "Fixed commit": "823f2898e9f2cc2c990b786aace341a2a090e719", "Url": "https://api.github.com/repos/Lathanael/SimpleCalc", "Date": "2012-06-01T17:58:56Z"},
{"Line": "=>363", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (quantity.endsWith(\"g\")) { quantity = product.getString(\"quantity\").substring(0, ((product.getString(\"quantity\").length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/8640/buggy-version/app.src.main.java.eu.lynxworks.balancingact.FoodFragment.java", "BodyUseAPI": [], "Fixed commit": "0fc79fbff1920c4dcecc413561d6be23d8fda009", "Url": "https://api.github.com/repos/DougieWougie/BalancingAct", "Date": "2017-09-08T11:16:03Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isTomcat()) { joinPath = \"/\" + joinPath; to = \"/\" + to; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/856/buggy-version/oxJsfUtil.src.main.java.org.gluu.jsf2.customization.AccessRewriteConfiguration.java", "BodyUseAPI": [], "Fixed commit": "0beac8c74c67608e900fdf03ec4c483977848bce", "Url": "https://api.github.com/repos/GluuFederation/oxCore", "Date": "2017-07-01T08:51:10Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ids.sardine.TransferUtil.getString(java.lang.String,java.lang.Object[])"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (_String_.isNumber(s)) { java.math.BigDecimal decimal = new java.math.BigDecimal(s); if (((decimal.compareTo(java.math.BigDecimal.valueOf(java.lang.Integer.MAX_VALUE))) != (-1)) && ((decimal.compareTo(java.math.BigDecimal.valueOf(java.lang.Integer.MIN_VALUE))) != 1)) i = decimal.intValue(); else java.lang.System.out.println((((((\"number: \" + s) + \" is not between \") + (java.lang.Integer.MIN_VALUE)) + \" and \") + (java.lang.Integer.MAX_VALUE))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/4548/buggy-version/src.ids.sardine.TransferUtil.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "b010a732af56bdbf19fb4627ad5876a7bad632ae", "Url": "https://api.github.com/repos/sharklite/Sardine", "Date": "2017-01-16T08:22:45Z"},
{"Line": "=>1323", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((output.getBytesWritten()) > 0) { channelIDs.add(new org.apache.flink.runtime.operators.sort.UnilateralSortMerger.ChannelWithBlockCount(channel, output.getBlockCount())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/253/buggy-version/flink-runtime.src.main.java.org.apache.flink.runtime.operators.sort.UnilateralSortMerger.java", "BodyUseAPI": ["java.util.List<org.apache.flink.runtime.operators.sort.UnilateralSortMerger.ChannelWithBlockCount>.add(org.apache.flink.runtime.operators.sort.UnilateralSortMerger.ChannelWithBlockCount)", "org.apache.flink.runtime.io.disk.iomanager.ChannelWriterOutputView.getBlockCount()"], "Fixed commit": "5970e212b1beca29590dd138dc5e8eaf90bac498", "Url": "https://api.github.com/repos/stratosphere/flink", "Date": "2014-12-18T19:08:09Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((node) != null) { node.stop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/814/buggy-version/server.sonar-search.src.main.java.org.sonar.search.ElasticSearch.java", "BodyUseAPI": [], "Fixed commit": "dcad5e5686825dc8b37c343292be7a77bf03e16b", "Url": "https://api.github.com/repos/SonarSource/sonarqube", "Date": "2014-07-21T07:39:33Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((list.size()) == 1) { updateDegreeForStart(degrees, list.get(0)); }else { for (int i = 0; i < ((list.size()) - 1); i++) { int start = list.get(i); int end = list.get((i + 1)); if (updateGraph(graph, start, end)) { updateDegreeForStart(degrees, start); updateDegreeForEnd(degrees, end); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/4900/buggy-version/src.SequenceReconstruction.java", "BodyUseAPI": ["java.util.List<java.lang.Integer>.get(int)", "java.util.List<java.lang.Integer>.get(int)", "java.util.List<java.lang.Integer>.get(int)", "SequenceReconstruction.updateDegreeForStart(java.util.Map<java.lang.Integer, java.lang.Integer>,java.lang.Integer)", "java.util.List<java.lang.Integer>.size()"], "Fixed commit": "de941a24cabdc558260fd1ebf80f46ffd983d658", "Url": "https://api.github.com/repos/yao23/Java_Playground", "Date": "2017-08-06T03:16:59Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cpw.mods.fml.common.FMLCommonHandler.instance().getEffectiveSide()) == (cpw.mods.fml.relauncher.Side.CLIENT)) { if (buildcraft.BuildCraftCompat.enableNEI) { new buildcraft.compat.nei.NEIIntegrationBC().load(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/3973/buggy-version/common.buildcraft.BuildCraftCompat.java", "BodyUseAPI": [], "Fixed commit": "ec9218b1c7121fd6230e83aff9ac40eb6567c3c2", "Url": "https://api.github.com/repos/BuildCraft/BuildcraftCompat", "Date": "2014-12-24T18:18:13Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cpw.mods.fml.common.Loader.isModLoaded(\"MineTweaker3\")) { buildcraft.compat.minetweaker.MineTweakerInit.init(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/3973/buggy-version/common.buildcraft.BuildCraftCompat.java", "BodyUseAPI": [], "Fixed commit": "ec9218b1c7121fd6230e83aff9ac40eb6567c3c2", "Url": "https://api.github.com/repos/BuildCraft/BuildcraftCompat", "Date": "2014-12-24T18:18:13Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(smsNumber.equalsIgnoreCase(com.sklein.ubimo_pager.SMSReceiver.CABOT_NUMBER))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/5123/buggy-version/app.src.main.java.com.sklein.ubimo_pager.SMSReceiver.java", "BodyUseAPI": [], "Fixed commit": "ceee9fd603f572ed3ab801ff2d6b4905ec0f8550", "Url": "https://api.github.com/repos/shmulik-klein/OnDutyPager", "Date": "2017-10-03T19:32:16Z"},
{"Line": "=>1114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tareas.parser.TareasCommand.getPrimaryArgument()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((!(viewType.equals(\"dashboard\"))) && (!(viewType.equals(\"help\")))) { guiController.sendTaskstoView(tasksToShowToUser); guiController.sendSuccessToView((\"View has successfully been changed to \" + viewType)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/4500/buggy-version/src.tareas.controller.TareasController.java", "BodyUseAPI": ["tareas.gui.TareasGUIController.sendSuccessToView(java.lang.String)"], "Fixed commit": "d458fc1903b6db19fcfdd0be347a8773131b35da", "Url": "https://api.github.com/repos/cs2103aug2014-W09-3j/main", "Date": "2014-10-28T08:21:37Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Window.Navigator.getUserAgent().matches(\".*Firefox.*\")) { com.google.gwt.core.client.Scheduler.get().scheduleDeferred(new com.google.gwt.core.client.Scheduler.ScheduledCommand() { @java.lang.Override public void execute() { subbox.setFocus(true); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/6274/buggy-version/src.gui.src.main.java.cz.filmtit.client.subgestbox.SubgestHandler.java", "BodyUseAPI": [], "Fixed commit": "2f44daa3d1e0630dfe8075e62f4a16a05a74bb6c", "Url": "https://api.github.com/repos/runn1ng/FilmTit", "Date": "2012-08-10T19:44:38Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.w3c.dom.NodeList.item(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((organismNode.getNodeType()) == (org.w3c.dom.Node.ELEMENT_NODE)) { species.add(organismNode.getTextContent()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/6960/buggy-version/src.main.java.org.wikipathways.cytoscapeapp.impl.WPClientRESTImpl.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)", "org.w3c.dom.Node.getTextContent()"], "Fixed commit": "7f3a0894917b3d748370c80e21cc2c7cb0ed1a63", "Url": "https://api.github.com/repos/wikipathways/cytoscape-wikipathways-app", "Date": "2016-05-26T11:56:32Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.depaul.se491.resapp.actions.account.Create.getLoggedinAccount(javax.servlet.http.HttpServletRequest)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((loggedinAccount.getRole()) == (edu.depaul.se491.enums.AccountRole.MANAGER)) { account.setRole(AccountRole.EMPLOYEE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/6791/buggy-version/ResApp.src.edu.depaul.se491.resapp.actions.account.Create.java", "BodyUseAPI": [], "Fixed commit": "9f2dbb22c57f82a684a49039fcd300aa8fcb1319", "Url": "https://api.github.com/repos/malik491/ResApp", "Date": "2016-03-11T06:34:06Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((itemizedoverlay.size()) > 0) { mapOverlays.add(itemizedoverlay); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/1143/buggy-version/src.com.sweetiepiggy.raspberrybusmalaysia.RbmMapActivity.java", "BodyUseAPI": ["java.util.List<com.google.android.maps.Overlay>.add(com.sweetiepiggy.raspberrybusmalaysia.RbmItemizedOverlay)"], "Fixed commit": "dfdf0c862727003b9d204bf0d609ccea817262a4", "Url": "https://api.github.com/repos/sweetiepiggy/Raspberry-Bus-Malaysia", "Date": "2013-07-10T10:45:49Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (p1beforep2) { return -1; }else { return 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/1611/buggy-version/app.src.main.java.com.jtquang.raven.DateComparator.java", "BodyUseAPI": [], "Fixed commit": "2078f5c09da8e83391db1ecae0e5d71e4238d118", "Url": "https://api.github.com/repos/jquang/Raven2", "Date": "2017-02-09T09:22:26Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((checkpoints.size()) > 0) { recyclerView.smoothScrollToPosition(((checkpoints.size()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/7198/buggy-version/app.src.main.java.com.ak93.encryptedjsondatastorageexample.MainActivity.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.Object>.size()", "android.support.v7.widget.RecyclerView.smoothScrollToPosition(int)"], "Fixed commit": "eaba9e6409a26764c65323f0ae15d8127d7dd944", "Url": "https://api.github.com/repos/nzkozar/holocron", "Date": "2017-03-12T16:00:48Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((checkpoints.size()) > 0) { recyclerView.smoothScrollToPosition(((checkpoints.size()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/7198/buggy-version/app.src.main.java.com.ak93.encryptedjsondatastorageexample.MainActivity.java", "BodyUseAPI": ["android.support.v7.widget.RecyclerView.smoothScrollToPosition(int)", "java.util.ArrayList<java.lang.Object>.size()"], "Fixed commit": "eaba9e6409a26764c65323f0ae15d8127d7dd944", "Url": "https://api.github.com/repos/nzkozar/holocron", "Date": "2017-03-12T16:00:48Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Settings.Secure.getString(this.ctx.getContentResolver(),android.provider.Settings.Secure.ANDROID_ID)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (((\"9774d56d682e549c\".equals(uuid)) || (\"\".equals(uuid))) || (uuid == null)) { uuid = ((android.telephony.TelephonyManager) (ctx.getSystemService(Context.TELEPHONY_SERVICE))).getDeviceId(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/8341/buggy-version/framework.src.com.phonegap.Device.java", "BodyUseAPI": [], "Fixed commit": "92fed1154b121806b678bc4cc529c1fe7e6a24f7", "Url": "https://api.github.com/repos/macdonst/phonegap-android", "Date": "2011-08-15T20:17:59Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (org.jboss.tools.central.internal.dnd.LinuxURLTransfer.isLinuxGTK()) { transfers = new org.eclipse.swt.dnd.Transfer[]{ org.eclipse.swt.dnd.URLTransfer.getInstance(), org.jboss.tools.central.internal.dnd.LinuxURLTransfer.getInstance() }; }else { transfers = new org.eclipse.swt.dnd.Transfer[]{ org.eclipse.swt.dnd.URLTransfer.getInstance() }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/5873/buggy-version/central.plugins.org.jboss.tools.central.src.org.jboss.tools.central.internal.dnd.JBossCentralDropTarget.java", "BodyUseAPI": [], "Fixed commit": "d4fbc4adb9ec669bdcb73fb56c0ad6f2f1b95044", "Url": "https://api.github.com/repos/jbosstools/jbosstools-central", "Date": "2013-11-06T10:26:04Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.View.getLayoutParams()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (params instanceof android.widget.RelativeLayout.LayoutParams) { lp = ((android.widget.RelativeLayout.LayoutParams) (params)); }else { lp = new android.widget.RelativeLayout.LayoutParams(params); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/7625/buggy-version/AnKey.resource.src.main.java.net.qiujuer.powerback.ankey.ui.SuperActivity.java", "BodyUseAPI": [], "Fixed commit": "d6ba3f0fc9585e93f0b1996ac8234f8d949236bb", "Url": "https://api.github.com/repos/PowerBack/AnKey", "Date": "2015-10-25T08:02:17Z"},
{"Line": "=>415", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONArray.getJSONObject(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (singleService.getBoolean(\"is_active\")) { servicesArrayList.add(service); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/1797/buggy-version/app.src.main.java.com.byteshaft.medicosperuanos.doctors.DoctorsList.java", "BodyUseAPI": [], "Fixed commit": "3c4abe4a86b5f65ed52a0b0f15074105b57f548b", "Url": "https://api.github.com/repos/rb-shahid/Medicosperuanos", "Date": "2017-05-17T07:53:56Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (catchCornerTrap(x, y)) ans += 50;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/2496/buggy-version/GeniusBot.java", "BodyUseAPI": [], "Fixed commit": "b713ecdc6dcd81221ba0f0bee7a363bc0250cd0c", "Url": "https://api.github.com/repos/WillHaack/FinalProject", "Date": "2011-05-12T22:42:37Z"},
{"Line": "=>400", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((LoginButton.isEnabled()) == false) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/418/buggy-version/Project.PresentationLayer.LoginPanel.java", "BodyUseAPI": [], "Fixed commit": "1601ee1107d691c8ea6d394cbae8542bdc4f5590", "Url": "https://api.github.com/repos/t4kmode/CSE110FA14", "Date": "2014-12-08T08:34:21Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.exoplatform.wiki.resolver.PageResolver.resolve(java.lang.String,org.exoplatform.portal.webui.util.Util.getUIPortal().getSelectedUserNode())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (org.apache.commons.lang.StringUtils.isEmpty(page.getURL())) { page.setURL(org.exoplatform.wiki.commons.Utils.getURLFromParams(new org.exoplatform.wiki.service.WikiPageParams(page.getWiki().getType(), page.getWiki().getOwner(), page.getName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/3607/buggy-version/wiki-webapp.src.main.java.org.exoplatform.wiki.webui.UIWikiPortlet.java", "BodyUseAPI": ["org.exoplatform.wiki.mow.api.Page.getWiki()", "page.getWiki().getOwner()", "org.exoplatform.wiki.mow.api.Page.getName()", "org.exoplatform.wiki.commons.Utils.getURLFromParams(org.exoplatform.wiki.service.WikiPageParams)", "org.exoplatform.wiki.mow.api.Page.getWiki()", "page.getWiki().getType()", "org.exoplatform.wiki.mow.api.Page.setURL(org.exoplatform.wiki.commons.Utils.getURLFromParams(new org.exoplatform.wiki.service.WikiPageParams(page.getWiki().getType(), page.getWiki().getOwner(), page.getName())))"], "Fixed commit": "b393394e812d3cedbff45eae0b5e2f06e164ed1d", "Url": "https://api.github.com/repos/exodev/wiki", "Date": "2013-03-12T07:46:23Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.exoplatform.wiki.mow.core.api.wiki.PageImpl.getURL()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (url != null) { url = url.substring(url.indexOf(((\"/\" + portalContainerName) + \"/\"))); permalink.append(url); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/3607/buggy-version/wiki-service.src.main.java.org.exoplatform.wiki.service.impl.WikiSearchServiceConnector.java", "BodyUseAPI": ["java.lang.String.substring(int)", "java.lang.String.indexOf(java.lang.String)"], "Fixed commit": "b393394e812d3cedbff45eae0b5e2f06e164ed1d", "Url": "https://api.github.com/repos/exodev/wiki", "Date": "2013-03-12T07:46:23Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.norstc.asb.owner.OwnerService.findByUsername(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((ownerStocks.size()) >= (7 * (ownerEntity.getOwnerLevel()))) { result.rejectValue(\"stockCode\", \"error.stockEntity\", (\"\u5df2\u7ecf\u8d85\u51fa\u7528\u6237\u5f53\u524d\u53ef\u4ee5\u6dfb\u52a0\u7684\u76ee\u6807\u6570\u91cf\" + (7 * (ownerEntity.getOwnerLevel())))); log.info((\"stock quantity is up to owner level limit\" + (7 * (ownerEntity.getOwnerLevel())))); return com.norstc.asb.controller.StockController.VIEWS_TARGET_ADD_OR_UPDATE_FORM; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/2576/buggy-version/src.main.java.com.norstc.asb.controller.StockController.java", "BodyUseAPI": ["org.apache.log4j.Logger.info((\"stock quantity is up to owner level limit\" + (7 * (ownerEntity.getOwnerLevel()))))", "com.norstc.asb.owner.OwnerEntity.getOwnerLevel()", "com.norstc.asb.owner.OwnerEntity.getOwnerLevel()", "org.springframework.validation.BindingResult.rejectValue(java.lang.String,java.lang.String,(\"\u5df2\u7ecf\u8d85\u51fa\u7528\u6237\u5f53\u524d\u53ef\u4ee5\u6dfb\u52a0\u7684\u76ee\u6807\u6570\u91cf\" + (7 * (ownerEntity.getOwnerLevel()))))"], "Fixed commit": "e3c8727bf5472094f3d57753ae9ad633a2586ed2", "Url": "https://api.github.com/repos/norstc/asb", "Date": "2017-11-21T13:11:11Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.w3c.dom.Element.getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (name.equals(HttpHeader.CONTENT_TYPE.getHeaderName())) { serializationProperties.put(SerializationProperty.CONTENT_TYPE, value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/612/buggy-version/exquery-restxq.src.main.java.org.exquery.restxq.impl.serialization.RestResponseHandler.java", "BodyUseAPI": [], "Fixed commit": "46f73724a3e9e9ecff9efaa5d690b007ee3da193", "Url": "https://api.github.com/repos/exquery/exquery", "Date": "2013-01-21T22:23:37Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(myList.contains(plannedMilestoneInstance.id))) { portfolioMilestoneListView.add(new utils.table.PortfolioMilestoneListView(plannedMilestoneInstance)); myList.add(plannedMilestoneInstance.id); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/1490/buggy-version/app.services.plugins.system.widgetkit1.LatePlannedMilestonesController.java", "BodyUseAPI": ["java.util.List<utils.table.PortfolioMilestoneListView>.add(utils.table.PortfolioMilestoneListView)", "java.util.List<java.lang.Long>.add(plannedMilestoneInstance.id)"], "Fixed commit": "c58672978a68701a65648bab15fa81a326cdea90", "Url": "https://api.github.com/repos/theAgileFactory/maf-defaultplugins-extension", "Date": "2016-11-25T16:24:03Z"},
{"Line": "=>628", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.door43.translationstudio.projects.Project.getSourceLanguage(latestLanguage.getId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((latestLanguage.getDateModified()) > (currentLanguage.getDateModified())) { return true; }else { for (com.door43.translationstudio.projects.Resource r : latestLanguage.getResources()) { if ((r.getDateModified()) > (currentLanguage.getResource(r.getId()).getDateModified())) { return true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/9224/buggy-version/app.src.main.java.com.door43.translationstudio.projects.ProjectManager.java", "BodyUseAPI": ["com.door43.translationstudio.projects.SourceLanguage.getResource(r.getId())", "currentLanguage.getResource(r.getId()).getDateModified()", "com.door43.translationstudio.projects.SourceLanguage.getResources()"], "Fixed commit": "e8e95a1ef30bc10d6e6c3674563d9a405a43adb2", "Url": "https://api.github.com/repos/HannaJaicks/translationStudio2", "Date": "2015-04-07T19:53:42Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isCastServiceRunning()) { com.google.android.gms.cast.CastRemoteDisplayLocalService.stopService(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/4393/buggy-version/catroid.src.org.catrobat.catroid.cast.CastManager.java", "BodyUseAPI": [], "Fixed commit": "1d5cd9f854272a619b16cd6c69eba6bf548d3aac", "Url": "https://api.github.com/repos/catroid-chromecast/Catroid", "Date": "2015-08-17T09:07:05Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.carrotsearch.hppc.IntObjectOpenHashMap<io.crate.action.job.SharedShardContext>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (shardContext == null) { shardContext = sharedShardContexts.createContext(shardId, readerId); shardContexts.put(readerId, shardContext); if (tablesWithFetchRefs.contains(ident)) { try { searchers.put(readerId, shardContext.searcher()); } catch (org.elasticsearch.indices.IndexMissingException e) { if (!(io.crate.metadata.PartitionName.isPartition(index))) { throw new io.crate.exceptions.TableUnknownException(index, e); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/5979/buggy-version/sql.src.main.java.io.crate.operation.fetch.FetchContext.java", "BodyUseAPI": [], "Fixed commit": "c5a8326d14494600c9e15f3895ef09a421966e20", "Url": "https://api.github.com/repos/adrpar/crate", "Date": "2015-12-07T14:27:37Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.location.LocationManager.getLastKnownLocation(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (location != null) { java.lang.System.out.println(((\"Provider \" + provider) + \" has been selected.\")); onLocationChanged(location); }else { GPS_latituteField.setText(\"Location not available\"); GPS_longitudeField.setText(\"Location not available\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/976/buggy-version/app.src.main.java.com.pp2.starlords.pp2.OldAPIActivity.java", "BodyUseAPI": ["com.pp2.starlords.pp2.OldAPIActivity.onLocationChanged(android.location.Location)"], "Fixed commit": "dffc8498ca79e36c358e8fa09414118e92a24248", "Url": "https://api.github.com/repos/MortenBirk/PP2", "Date": "2014-10-04T11:05:50Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState == null) { getFragmentManager().beginTransaction().add(R.id.container, new com.pp2.starlords.pp2.NewAPIActivity.NewAPIViewFragment()).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/976/buggy-version/app.src.main.java.com.pp2.starlords.pp2.NewAPIActivity.java", "BodyUseAPI": [], "Fixed commit": "dffc8498ca79e36c358e8fa09414118e92a24248", "Url": "https://api.github.com/repos/MortenBirk/PP2", "Date": "2014-10-04T11:05:50Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.versatilemobitech.ourtour.utils.Utility.isValueNullOrEmpty(com.versatilemobitech.ourtour.fragments.VendorRegistrationFragment.et_phone_number.getText().toString().trim())) { com.versatilemobitech.ourtour.utils.Utility.setSnackBarEnglish(mParent, com.versatilemobitech.ourtour.fragments.VendorRegistrationFragment.et_phone_number, \"Please enter phone number\"); com.versatilemobitech.ourtour.fragments.VendorRegistrationFragment.et_phone_number.requestFocus(); }else if ((com.versatilemobitech.ourtour.fragments.VendorRegistrationFragment.et_phone_number.getText().toString().trim().length()) != 10) { com.versatilemobitech.ourtour.utils.Utility.setSnackBarEnglish(mParent, com.versatilemobitech.ourtour.fragments.VendorRegistrationFragment.et_phone_number, \"Phone number must me 10 characteristics\"); com.versatilemobitech.ourtour.fragments.VendorRegistrationFragment.et_phone_number.requestFocus(); }else if (((com.versatilemobitech.ourtour.fragments.VendorRegistrationFragment.et_registration_number.getVisibility()) == (android.view.View.VISIBLE)) && (com.versatilemobitech.ourtour.utils.Utility.isValueNullOrEmpty(com.versatilemobitech.ourtour.fragments.VendorRegistrationFragment.et_registration_number.getText().toString().trim()))) { com.versatilemobitech.ourtour.utils.Utility.setSnackBarEnglish(mParent, com.versatilemobitech.ourtour.fragments.VendorRegistrationFragment.et_registration_number, \"Please enter the registration number\"); com.versatilemobitech.ourtour.fragments.VendorRegistrationFragment.et_registration_number.requestFocus(); }else if (com.versatilemobitech.ourtour.utils.Utility.isValueNullOrEmpty(com.versatilemobitech.ourtour.fragments.VendorRegistrationFragment.et_bank.getText().toString().trim())) { com.versatilemobitech.ourtour.utils.Utility.setSnackBarEnglish(mParent, com.versatilemobitech.ourtour.fragments.VendorRegistrationFragment.et_bank, \"Please enter the bank name\"); com.versatilemobitech.ourtour.fragments.VendorRegistrationFragment.et_bank.requestFocus(); }else if (com.versatilemobitech.ourtour.utils.Utility.isValueNullOrEmpty(com.versatilemobitech.ourtour.fragments.VendorRegistrationFragment.et_bank_acc.getText().toString().trim())) { com.versatilemobitech.ourtour.utils.Utility.setSnackBarEnglish(mParent, com.versatilemobitech.ourtour.fragments.VendorRegistrationFragment.et_bank_acc, \"Please enter the bank account number\"); com.versatilemobitech.ourtour.fragments.VendorRegistrationFragment.et_bank_acc.requestFocus(); }else if (com.versatilemobitech.ourtour.utils.Utility.isValueNullOrEmpty(com.versatilemobitech.ourtour.fragments.VendorRegistrationFragment.et_branch.getText().toString().trim())) { com.versatilemobitech.ourtour.utils.Utility.setSnackBarEnglish(mParent, com.versatilemobitech.ourtour.fragments.VendorRegistrationFragment.et_branch, \"Please enter the branch\"); com.versatilemobitech.ourtour.fragments.VendorRegistrationFragment.et_branch.requestFocus(); }else if (com.versatilemobitech.ourtour.utils.Utility.isValueNullOrEmpty(com.versatilemobitech.ourtour.fragments.VendorRegistrationFragment.et_owner.getText().toString().trim())) { com.versatilemobitech.ourtour.utils.Utility.setSnackBarEnglish(mParent, com.versatilemobitech.ourtour.fragments.VendorRegistrationFragment.et_owner, \"Please enter the owner name\"); com.versatilemobitech.ourtour.fragments.VendorRegistrationFragment.et_owner.requestFocus(); }else if (com.versatilemobitech.ourtour.utils.Utility.isValueNullOrEmpty(com.versatilemobitech.ourtour.fragments.VendorRegistrationFragment.et_ifsc.getText().toString().trim())) { com.versatilemobitech.ourtour.utils.Utility.setSnackBarEnglish(mParent, com.versatilemobitech.ourtour.fragments.VendorRegistrationFragment.et_ifsc, \"Please enter the ifsc code\"); com.versatilemobitech.ourtour.fragments.VendorRegistrationFragment.et_ifsc.requestFocus(); }else if (com.versatilemobitech.ourtour.utils.Utility.isValueNullOrEmpty(com.versatilemobitech.ourtour.fragments.VendorRegistrationFragment.et_area_name.getText().toString().trim())) { com.versatilemobitech.ourtour.utils.Utility.setSnackBarEnglish(mParent, com.versatilemobitech.ourtour.fragments.VendorRegistrationFragment.et_area_name, \"Please enter the area name\"); com.versatilemobitech.ourtour.fragments.VendorRegistrationFragment.et_area_name.requestFocus(); }else if (com.versatilemobitech.ourtour.utils.Utility.isValueNullOrEmpty(com.versatilemobitech.ourtour.fragments.VendorRegistrationFragment.et_guarage.getText().toString().trim())) { com.versatilemobitech.ourtour.utils.Utility.setSnackBarEnglish(mParent, com.versatilemobitech.ourtour.fragments.VendorRegistrationFragment.et_guarage, \"Please enter the guarage name\"); com.versatilemobitech.ourtour.fragments.VendorRegistrationFragment.et_guarage.requestFocus(); }else if (com.versatilemobitech.ourtour.utils.Utility.isValueNullOrEmpty(com.versatilemobitech.ourtour.fragments.VendorRegistrationFragment.et_district.getText().toString().trim())) { com.versatilemobitech.ourtour.utils.Utility.setSnackBarEnglish(mParent, com.versatilemobitech.ourtour.fragments.VendorRegistrationFragment.et_district, \"Please enter the district\"); com.versatilemobitech.ourtour.fragments.VendorRegistrationFragment.et_district.requestFocus(); }else if (com.versatilemobitech.ourtour.utils.Utility.isValueNullOrEmpty(com.versatilemobitech.ourtour.fragments.VendorRegistrationFragment.et_state.getText().toString().trim())) { com.versatilemobitech.ourtour.utils.Utility.setSnackBarEnglish(mParent, com.versatilemobitech.ourtour.fragments.VendorRegistrationFragment.et_state, \"Please enter the state\"); com.versatilemobitech.ourtour.fragments.VendorRegistrationFragment.et_state.requestFocus(); }else { isValidated = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/7726/buggy-version/app.src.main.java.com.versatilemobitech.ourtour.fragments.VendorRegistrationFragment.java", "BodyUseAPI": ["com.versatilemobitech.ourtour.utils.Utility.setSnackBarEnglish(com.versatilemobitech.ourtour.activities.DashboardActivity,android.widget.EditText,java.lang.String)", "android.widget.EditText.requestFocus()", "com.versatilemobitech.ourtour.fragments.VendorRegistrationFragment.et_phone_number.getText().toString().trim().length()", "android.widget.EditText.requestFocus()", "com.versatilemobitech.ourtour.utils.Utility.setSnackBarEnglish(com.versatilemobitech.ourtour.activities.DashboardActivity,android.widget.EditText,java.lang.String)", "com.versatilemobitech.ourtour.fragments.VendorRegistrationFragment.et_phone_number.getText().toString()", "com.versatilemobitech.ourtour.fragments.VendorRegistrationFragment.et_phone_number.getText().toString().trim()", "android.widget.EditText.getText()"], "Fixed commit": "49d494ebaf0023b3baab6d6f9cc5e9135a985562", "Url": "https://api.github.com/repos/sixscorpions/OurTour", "Date": "2016-10-27T00:48:14Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.os.Looper.myLooper()) == (android.os.Looper.getMainLooper())) { updateCards(); }else { android.app.Activity activity = getActivity(); if (activity != null) { activity.runOnUiThread(new java.lang.Runnable() { @java.lang.Override public void run() { updateCards(); } }); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/4171/buggy-version/app.src.main.java.dat255.chalmers.stormystreet.controller.HighscoreFragment.java", "BodyUseAPI": [], "Fixed commit": "55e9890c2c936d70e5203ae51a268732260e591a", "Url": "https://api.github.com/repos/signal-unknown/stormy-street", "Date": "2015-10-26T11:12:58Z"},
{"Line": "=>576", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (failedFile.isFile()) { failedFile.delete(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/6885/buggy-version/dtgov-war.src.main.java.org.overlord.sramp.governance.services.DeploymentResource.java", "BodyUseAPI": ["java.io.File.delete()"], "Fixed commit": "42a417661e90c6d1a6a3f5369ee254e9de4e1ea4", "Url": "https://api.github.com/repos/Governance/dtgov", "Date": "2013-09-09T19:14:11Z"},
{"Line": "=>572", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (deployFile.isFile()) { deployFile.delete(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/6885/buggy-version/dtgov-war.src.main.java.org.overlord.sramp.governance.services.DeploymentResource.java", "BodyUseAPI": ["java.io.File.delete()"], "Fixed commit": "42a417661e90c6d1a6a3f5369ee254e9de4e1ea4", "Url": "https://api.github.com/repos/Governance/dtgov", "Date": "2013-09-09T19:14:11Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.overlord.sramp.common.SrampModelUtils.getCustomProperty(org.oasis_open.docs.s_ramp.ns.s_ramp_v1.BaseArtifactType,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (mavenId != null) { java.lang.StringBuilder nameBuilder = new java.lang.StringBuilder(); nameBuilder.append(mavenId); nameBuilder.append(\"-\"); nameBuilder.append(version); if (classifier != null) { nameBuilder.append(\"-\"); nameBuilder.append(classifier); } nameBuilder.append(\".\"); nameBuilder.append(type); deploymentName = nameBuilder.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/6885/buggy-version/dtgov-war.src.main.java.org.overlord.sramp.governance.services.DeploymentResource.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "42a417661e90c6d1a6a3f5369ee254e9de4e1ea4", "Url": "https://api.github.com/repos/Governance/dtgov", "Date": "2013-09-09T19:14:11Z"},
{"Line": "=>330", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((pageString.length) < 2) { output = \"\"; continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/6337/buggy-version/src.edu.upenn.cis455.indexer.Indexer.java", "BodyUseAPI": [], "Fixed commit": "9bf29f9da6812d75536d69d03a50713c6fa94088", "Url": "https://api.github.com/repos/aharelick/cis555-project", "Date": "2015-05-05T06:25:12Z"},
{"Line": "=>338", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((versionArray.size()) > 0) { fieldObject.add(de.micromata.jira.rest.parser.ELEM_VERSIONS, versionArray); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/870/buggy-version/src.main.java.de.micromata.jira.rest.parser.IssueParser.java", "BodyUseAPI": ["de.micromata.jira.rest.parser.JsonObject.add(de.micromata.jira.rest.parser.ELEM_VERSIONS,de.micromata.jira.rest.parser.JsonArray)"], "Fixed commit": "a5a1d4a03951618bc2f7023352eba086dc9cf5fd", "Url": "https://api.github.com/repos/micromata/jiraRestClient", "Date": "2014-07-30T12:53:22Z"},
{"Line": "=>327", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((componentArray.size()) > 0) { fieldObject.add(de.micromata.jira.rest.parser.ELEM_COMPONENTS, componentArray); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/870/buggy-version/src.main.java.de.micromata.jira.rest.parser.IssueParser.java", "BodyUseAPI": ["de.micromata.jira.rest.parser.JsonObject.add(de.micromata.jira.rest.parser.ELEM_COMPONENTS,de.micromata.jira.rest.parser.JsonArray)"], "Fixed commit": "a5a1d4a03951618bc2f7023352eba086dc9cf5fd", "Url": "https://api.github.com/repos/micromata/jiraRestClient", "Date": "2014-07-30T12:53:22Z"},
{"Line": "=>351", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((fixVersionArray.size()) > 0) { fieldObject.add(de.micromata.jira.rest.parser.ELEM_FIX_VERSIONS, fixVersionArray); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/870/buggy-version/src.main.java.de.micromata.jira.rest.parser.IssueParser.java", "BodyUseAPI": ["de.micromata.jira.rest.parser.JsonObject.add(de.micromata.jira.rest.parser.ELEM_FIX_VERSIONS,de.micromata.jira.rest.parser.JsonArray)"], "Fixed commit": "a5a1d4a03951618bc2f7023352eba086dc9cf5fd", "Url": "https://api.github.com/repos/micromata/jiraRestClient", "Date": "2014-07-30T12:53:22Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.checkerframework.checker.initialization.InitializationVisitor.getAnnotatedType(com.sun.source.tree.ExpressionTree)", "org.checkerframework.checker.initialization.InitializationVisitor.getAnnotatedType(com.sun.source.tree.ExpressionTree)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((var.getKind()) != (var2.getKind())) && ((var2.getKind()) == (javax.lang.model.type.TypeKind.DECLARED))) { switch (var.getKind()) { case WILDCARD : var = ((org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType) (var)).getExtendsBound(); break; default : org.checkerframework.javacutil.ErrorReporter.errorAbort((((\"Unexpected comparison between \" + var) + \" and \") + var2)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/5631/buggy-version/checker.src.org.checkerframework.checker.initialization.InitializationVisitor.java", "BodyUseAPI": ["org.checkerframework.framework.type.AnnotatedTypeMirror.getKind()", "org.checkerframework.javacutil.ErrorReporter.errorAbort((((\"Unexpected comparison between \" + var) + \" and \") + var2))"], "Fixed commit": "de4176e3f25f3580d3bc7a2e8a50477e10030211", "Url": "https://api.github.com/repos/typetools/checker-framework", "Date": "2015-12-30T21:50:47Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((result) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/5230/buggy-version/src.org.gaeproxy.Utils.java", "BodyUseAPI": [], "Fixed commit": "352be87df17dcf426887892e92c57ea160f40e38", "Url": "https://api.github.com/repos/madeye/gaeproxy", "Date": "2012-12-19T10:28:56Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["simpledb.LockManager.getAllPagesByTid(simpledb.TransactionId)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (pids == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/8990/buggy-version/src.java.simpledb.LockManager.java", "BodyUseAPI": [], "Fixed commit": "5e1b1b42f95f008ba35d63e1ef71325471137939", "Url": "https://api.github.com/repos/doggeral/simpleDB", "Date": "2016-07-22T10:45:39Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (help) { jc.usage(); java.lang.System.exit(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/6165/buggy-version/src.org.ccfls.counter.CVCounter.java", "BodyUseAPI": [], "Fixed commit": "df60b3d15b33b8f1729190ebfb396b8d0ea2d6fd", "Url": "https://api.github.com/repos/kinneerc/cv-counter", "Date": "2016-02-08T17:14:35Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nextStackValue < value) { value = value - nextStackValue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/8468/buggy-version/scouter.client.src.scouter.client.views.AbstractServiceGroupTPSView.java", "BodyUseAPI": [], "Fixed commit": "e0d3582dbcf36d6cc4f1ad325f165f960cbe5ceb", "Url": "https://api.github.com/repos/scouter-project/scouter", "Date": "2016-12-15T01:02:26Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((entity.getExtendedClass()) != null) { tableName = org.motechproject.mds.helper.ClassTableName.getTableName(entity.getSuperClass(), entity.getModule(), entity.getNamespace(), entity.getTableName(), type); }else { tableName = org.motechproject.mds.helper.ClassTableName.getTableName(entity.getClassName(), entity.getModule(), entity.getNamespace(), entity.getTableName(), type); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/718/buggy-version/platform.mds.mds.src.main.java.org.motechproject.mds.helper.ClassTableName.java", "BodyUseAPI": ["org.motechproject.mds.domain.Entity.getTableName()", "org.motechproject.mds.domain.Entity.getSuperClass()", "org.motechproject.mds.domain.Entity.getClassName()", "org.motechproject.mds.domain.Entity.getModule()", "org.motechproject.mds.helper.ClassTableName.getTableName(entity.getSuperClass(),entity.getModule(),entity.getNamespace(),entity.getTableName(),org.motechproject.mds.domain.EntityType)", "org.motechproject.mds.helper.ClassTableName.getTableName(entity.getClassName(),entity.getModule(),entity.getNamespace(),entity.getTableName(),org.motechproject.mds.domain.EntityType)", "org.motechproject.mds.domain.Entity.getModule()", "org.motechproject.mds.domain.Entity.getNamespace()", "org.motechproject.mds.domain.Entity.getTableName()", "org.motechproject.mds.domain.Entity.getNamespace()"], "Fixed commit": "6c97f4b1f623b129d3f9470332aceb03c7c47219", "Url": "https://api.github.com/repos/smalecki/motech", "Date": "2015-12-16T09:35:02Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((entityMap.containsKey(entity.getClassName())) && ((entityMap.get(entity.getClassName()).getEntity().getExtensionClass()) != null)) { entity.setExtensionClass(entityMap.get(entity.getClassName()).getEntity().getExtensionClass()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/718/buggy-version/platform.mds.mds.src.main.java.org.motechproject.mds.dto.SchemaHolder.java", "BodyUseAPI": ["org.motechproject.mds.dto.EntityDto.setExtensionClass(entityMap.get(entity.getClassName()).getEntity().getExtensionClass())", "entityMap.get(entity.getClassName()).getEntity().getExtensionClass()", "java.util.Map<java.lang.String, org.motechproject.mds.dto.SchemaHolder.EntityHolder>.get(entity.getClassName())", "org.motechproject.mds.dto.EntityDto.getClassName()", "org.motechproject.mds.dto.SchemaHolder.EntityHolder.getEntity()"], "Fixed commit": "6c97f4b1f623b129d3f9470332aceb03c7c47219", "Url": "https://api.github.com/repos/smalecki/motech", "Date": "2015-12-16T09:35:02Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((entity.getExtensionClass()) != null) { tableName = org.motechproject.mds.helper.ClassTableName.getTableName(entity.getSuperClass(), entity.getModule(), entity.getNamespace(), entity.getTableName(), null); }else { tableName = org.motechproject.mds.helper.ClassTableName.getTableName(entity.getClassName(), entity.getModule(), entity.getNamespace(), entity.getTableName(), null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/718/buggy-version/platform.mds.mds.src.main.java.org.motechproject.mds.builder.impl.EntityMetadataBuilderImpl.java", "BodyUseAPI": ["org.motechproject.mds.dto.EntityDto.getClassName()", "org.motechproject.mds.helper.ClassTableName.getTableName(entity.getClassName(),entity.getModule(),entity.getNamespace(),entity.getTableName(),<nulltype>)", "org.motechproject.mds.dto.EntityDto.getModule()", "org.motechproject.mds.dto.EntityDto.getTableName()", "org.motechproject.mds.helper.ClassTableName.getTableName(entity.getSuperClass(),entity.getModule(),entity.getNamespace(),entity.getTableName(),<nulltype>)", "org.motechproject.mds.dto.EntityDto.getNamespace()", "org.motechproject.mds.dto.EntityDto.getModule()", "org.motechproject.mds.dto.EntityDto.getSuperClass()", "org.motechproject.mds.dto.EntityDto.getTableName()", "org.motechproject.mds.dto.EntityDto.getNamespace()"], "Fixed commit": "6c97f4b1f623b129d3f9470332aceb03c7c47219", "Url": "https://api.github.com/repos/smalecki/motech", "Date": "2015-12-16T09:35:02Z"},
{"Line": "=>367", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((info.decoder) != null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/6907/buggy-version/ion.src.com.koushikdutta.ion.IonDrawable.java", "BodyUseAPI": [], "Fixed commit": "7d2ccd5ae35e77b2dba82f09d678d171b62a0dac", "Url": "https://api.github.com/repos/bearprada/ion", "Date": "2015-03-06T09:03:20Z"},
{"Line": "=>365", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((info.gifDecoder) != null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/6907/buggy-version/ion.src.com.koushikdutta.ion.IonDrawable.java", "BodyUseAPI": [], "Fixed commit": "7d2ccd5ae35e77b2dba82f09d678d171b62a0dac", "Url": "https://api.github.com/repos/bearprada/ion", "Date": "2015-03-06T09:03:20Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eweb4j.orm.Page<org.entity.Article>.getList()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (arts != null) { for (org.entity.Article art : arts) { org.entity.User u = org.eweb4j.orm.Db.ar(org.entity.User.class).dao().select(\"name\", \"email\").where().field(\"id\").equal(art.getUser().getId()).queryOne(); art.getUser().setEmail(u.getEmail()); art.getUser().setName(u.getName()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/1766/buggy-version/src.main.java.org.service.ArticleService.java", "BodyUseAPI": [], "Fixed commit": "0a9e9bd0824c34fa0e783913aa9512c4aedfedcc", "Url": "https://api.github.com/repos/zerxon/eweb4j-campo", "Date": "2013-05-23T04:20:06Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["NFAtoDFA.moveAlphabet(java.lang.Character,java.util.ArrayList<java.lang.Integer>,java.util.ArrayList<java.util.HashMap<java.lang.Character, java.util.ArrayList<java.lang.Integer>>>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((tempmove.size()) > 0) { java.util.ArrayList<java.lang.Integer> tempclosure = closeAlphabet(tempmove, nfa.mapStates); boolean unique = true; for (java.util.ArrayList<java.lang.Integer> i : tempDFA) { for (java.util.ArrayList<java.lang.Integer> j : finalDFA) { if (!(isUniqueState(j, tempclosure))) { unique = false; } } if ((isUniqueState(i, tempclosure)) && unique) { }else { unique = false; } } if (unique) { tempDFA.offer(tempclosure); java.lang.System.out.println(((\"Unique state, adding \" + tempclosure) + \" to tempDFA\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/5716/buggy-version/NFAtoDFA.java", "BodyUseAPI": ["NFAtoDFA.closeAlphabet(java.util.ArrayList<java.lang.Integer>,java.util.ArrayList<java.util.HashMap<java.lang.Character, java.util.ArrayList<java.lang.Integer>>>)"], "Fixed commit": "e9ed1c7902c09a96ff56c980d7b8c60d6193b229", "Url": "https://api.github.com/repos/AlecSKlein/NFAtoDFA", "Date": "2015-04-20T07:48:01Z"},
{"Line": "=>475", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["context.getInput(transform).getAll()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (allInputs.isEmpty()) { org.apache.flink.api.java.operators.DataSource<java.lang.String> dummySource = context.getExecutionEnvironment().fromElements(\"dummy\"); result = dummySource.flatMap(new org.apache.flink.api.common.functions.FlatMapFunction<java.lang.String, T>() { @java.lang.Override public void flatMap(java.lang.String s, org.apache.flink.util.Collector<T> collector) throws java.lang.Exception { } }).returns(new org.apache.beam.runners.flink.translation.types.CoderTypeInformation(((org.apache.beam.sdk.coders.Coder<T>) (org.apache.beam.sdk.coders.VoidCoder.of())))); }else { for (org.apache.beam.sdk.values.PCollection<T> collection : allInputs) { org.apache.flink.api.java.DataSet<T> current = context.getInputDataSet(collection); if (result == null) { result = current; }else { result = result.union(current); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/7199/buggy-version/runners.flink.runner.src.main.java.org.apache.beam.runners.flink.translation.FlinkBatchTransformTranslators.java", "BodyUseAPI": [], "Fixed commit": "19d4e564dba1a595c164393dc525496485632e28", "Url": "https://api.github.com/repos/aljoscha/beam", "Date": "2016-05-13T12:17:50Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(mc.thePlayer.getActivePotionEffects().isEmpty())) && (!(lain.mods.cos.client.GuiEvents.isNeiHidden()))) offset -= 60;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/6905/buggy-version/src.main.java.lain.mods.cos.client.GuiCosArmorInventory.java", "BodyUseAPI": [], "Fixed commit": "a6d738dadb9476df94b98cc28f149cb6ecf5cd7d", "Url": "https://api.github.com/repos/zlainsama/CosmeticArmorReworked", "Date": "2015-10-25T03:04:57Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.wallet.utils.misc.ApiUtils.getUserIDFromCookie(javax.ws.rs.core.Cookie)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (((com.wallet.login.dao.SessionDAOConnector.instance().verifySessionCookie(cookie)) == false) || (user_id == null)) { return javax.ws.rs.core.Response.seeOther(java.net.URI.create(SessionResource.PATH_RESTORE_SESSION)).build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/1288/buggy-version/src.main.java.com.wallet.books.resource.BooksEntryResource.java", "BodyUseAPI": [], "Fixed commit": "90c08b32a870462f933c829830bc81c2b027f4fe", "Url": "https://api.github.com/repos/zxqiu/wallet", "Date": "2017-03-12T21:57:20Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.monplan.abstraction_layer.MonPlanRepository<T>.getByCode(modelInstance.fetchCode())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(modelsWithCode.get(0).getId().equals(modelInstance.getId()))) { throw new org.monplan.exceptions.FailedOperationException(java.lang.String.format(\"UPDATE operation failed: code %s is already in use.\", modelInstance.fetchCode())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/3894/buggy-version/src.main.java.org.monplan.abstraction_layer.MonPlanService.java", "BodyUseAPI": ["T.fetchCode()", "java.lang.String.format(java.lang.String,modelInstance.fetchCode())"], "Fixed commit": "14a0352c72b5afbd61e5aeb76dadbff091684815", "Url": "https://api.github.com/repos/MonashStudentInnovation/AppleSeed", "Date": "2017-11-28T23:51:58Z"},
{"Line": "=>543", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (userUuids == null) { userUuids = dao.getConfirmedConnectionUserIdsForUser(userUuid); if (userUuids != null) { org.sakaiproject.profile2.logic.ProfileConnectionsLogicImpl.log.debug((\"Adding connections to cache for: \" + userUuid)); cache.put(userUuid, userUuids); }else { userUuids = new java.util.ArrayList<java.lang.String>(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/7126/buggy-version/profile2.impl.src.java.org.sakaiproject.profile2.logic.ProfileConnectionsLogicImpl.java", "BodyUseAPI": [], "Fixed commit": "4b69c19ad777418f6362a018eff074cb793afae7", "Url": "https://api.github.com/repos/NoodlePartners/sakai_work", "Date": "2016-08-04T18:50:05Z"},
{"Line": "=>587", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cmp > 0) throw new java.lang.IllegalArgumentException(((((\"Min (\" + min) + \") must be lower than max (\") + max) + \")\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/8386/buggy-version/src.main.org.deidentifier.arx.aggregates.HierarchyBuilderIntervalBased.java", "BodyUseAPI": [], "Fixed commit": "9b3971b000853e94b4ead54572c0c8c8b28dc867", "Url": "https://api.github.com/repos/johnpatcher/arx", "Date": "2014-04-15T14:46:04Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.geni.aggregate.services.core.InterfaceContents.getComponentId()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (urn != null) { int last = -1; int index = 0; while (index != (-1)) { index = urn.indexOf(\":\", (index + 1)); if (index != (-1)) last = index; } if (last != (-1)) { deviceName = urn.substring((last + 1)); }else { throw new net.geni.aggregate.services.core.AggregateException((\"malformed network interface field in component_id urn: \" + urn)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/2375/buggy-version/AggregateWS.src.net.geni.aggregate.services.core.RspecHandler_GENIv3.java", "BodyUseAPI": ["java.lang.String.substring(int)", "java.lang.String.indexOf(java.lang.String,int)"], "Fixed commit": "53bea2f6c0edb5f3e61508c10215d0e7a38224b1", "Url": "https://api.github.com/repos/xi-yang/GENI-DCN-AM", "Date": "2016-02-11T19:47:50Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (validWord.isEmpty()) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/315/buggy-version/src.com.tallbluehat.Main.java", "BodyUseAPI": [], "Fixed commit": "7e5d9e1435db62bd76ec62f31fcdc1de9cfd73c1", "Url": "https://api.github.com/repos/DevinKott/WordsWithFriends", "Date": "2017-01-19T22:46:04Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fieldName.equalsIgnoreCase(\"id\")) if (obj instanceof java.lang.Integer) id = ((java.lang.Integer) (obj)); else throw new java.lang.IllegalArgumentException(\"id must be integer\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/1857/buggy-version/src.com.mozzandroidutils.sqlite.Model.java", "BodyUseAPI": [], "Fixed commit": "5e2fe2c73b449a63fe3af2ae61f3b6e98c07523e", "Url": "https://api.github.com/repos/hsllany/MozzAndroid", "Date": "2015-02-17T14:18:55Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((data.gameId) != null) { for (mage.client.game.PlayAreaPanel pa : mage.client.MageFrame.getGame(data.gameId).getPlayers().values()) { mage.client.game.PlayerPanelExt playAreaPanel = pa.getPlayerPanel(); if (((playAreaPanel != null) && ((playAreaPanel.getPlayer()) != null)) && (playAreaPanel.getPlayer().hasAttachments())) { java.awt.Point me = new java.awt.Point(data.locationOnScreen); me.translate((-(parentPoint.x)), (-(parentPoint.y))); for (java.util.UUID attachmentId : playAreaPanel.getPlayer().getAttachments()) { if (attachmentId.equals(data.card.getId())) { java.awt.Point player = pa.getLocationOnScreen(); player.translate((-(parentPoint.x)), (-(parentPoint.y))); mage.client.util.gui.ArrowBuilder.getBuilder().addArrow(data.gameId, (((int) (me.getX())) + 35), ((int) (me.getY())), (((int) (player.getX())) + 40), (((int) (player.getY())) - 40), java.awt.Color.magenta, ArrowBuilder.Type.ENCHANT_PLAYERS); } } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/975/buggy-version/Mage.Client.src.main.java.mage.client.plugins.adapters.MageActionCallback.java", "BodyUseAPI": ["mage.client.MageFrame.getGame(data.gameId)", "mage.client.MageFrame.getGame(data.gameId).getPlayers().values()", "java.util.UUID.equals(data.card.getId())", "data.card.getId()", "mage.client.MageFrame.getGame(data.gameId).getPlayers()", "mage.client.util.gui.ArrowBuilder.getBuilder().addArrow(data.gameId,int,double,int,int,java.awt.Color,ArrowBuilder.Type.ENCHANT_PLAYERS)"], "Fixed commit": "6a138740ba414da60f5253cff8a3f71cf6d2f635", "Url": "https://api.github.com/repos/magefree/mage", "Date": "2013-01-14T16:11:16Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.opennms.netmgt.dao.NodeDao.get(agent.getNodeId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((node.getLabel()) != null) url = url.replace(\"{nodeLabel}\", node.getLabel());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/3053/buggy-version/protocols.xml.src.main.java.org.opennms.protocols.xml.collector.AbstractXmlCollectionHandler.java", "BodyUseAPI": ["org.opennms.netmgt.model.OnmsNode.getLabel()", "java.lang.String.replace(java.lang.String,node.getLabel())"], "Fixed commit": "f124761888f801406135ce5573cdfd3df5dc36ef", "Url": "https://api.github.com/repos/peternixon/opennms-mirror", "Date": "2012-06-15T20:24:57Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.opennms.netmgt.dao.NodeDao.get(agent.getNodeId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((node.getForeignSource()) != null) url = url.replace(\"{foreignSource}\", node.getForeignSource());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/3053/buggy-version/protocols.xml.src.main.java.org.opennms.protocols.xml.collector.AbstractXmlCollectionHandler.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,node.getForeignSource())", "org.opennms.netmgt.model.OnmsNode.getForeignSource()"], "Fixed commit": "f124761888f801406135ce5573cdfd3df5dc36ef", "Url": "https://api.github.com/repos/peternixon/opennms-mirror", "Date": "2012-06-15T20:24:57Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.opennms.netmgt.dao.NodeDao.get(agent.getNodeId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((node.getForeignId()) != null) url = url.replace(\"{foreignId}\", node.getForeignId());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/3053/buggy-version/protocols.xml.src.main.java.org.opennms.protocols.xml.collector.AbstractXmlCollectionHandler.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,node.getForeignId())", "org.opennms.netmgt.model.OnmsNode.getForeignId()"], "Fixed commit": "f124761888f801406135ce5573cdfd3df5dc36ef", "Url": "https://api.github.com/repos/peternixon/opennms-mirror", "Date": "2012-06-15T20:24:57Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(wavsepSheet.toString().equals(\"total\"))) { writeFailedListInSheet(wavsepSheet.getSheetName(), crawledFilePath, scannedFilePath); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/4254/buggy-version/src.main.java.org.poi.WavsepPOI.WavsepWriter.java", "BodyUseAPI": ["Constant.WavsepSheets.getSheetName()", "org.poi.WavsepPOI.WavsepWriter.writeFailedListInSheet(wavsepSheet.getSheetName(),java.lang.String,java.lang.String)"], "Fixed commit": "6a554d99b49b6a02215a32228389f0cd4b77c18f", "Url": "https://api.github.com/repos/ImJongHwan/testPOI", "Date": "2016-06-22T05:38:26Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(benchmarkSheet.toString().equals(\"total\"))) { writeFailedListInSheet(benchmarkSheet.getSheetName(), crawledFilePath, scannedFilePath); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/4254/buggy-version/src.main.java.org.poi.BenchmarkPOI.BenchmarkWriter.java", "BodyUseAPI": ["org.poi.BenchmarkPOI.BenchmarkWriter.writeFailedListInSheet(benchmarkSheet.getSheetName(),java.lang.String,java.lang.String)", "Constant.BenchmarkSheets.getSheetName()"], "Fixed commit": "6a554d99b49b6a02215a32228389f0cd4b77c18f", "Url": "https://api.github.com/repos/ImJongHwan/testPOI", "Date": "2016-06-22T05:38:26Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["simulator.Constituent.step()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (a == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/4280/buggy-version/src.main.java.simulator.Simulator.java", "BodyUseAPI": [], "Fixed commit": "34cf0ac379a12e6882157e3f7afd636fcd6b0f76", "Url": "https://api.github.com/repos/SESoS/SIMVA-SoS", "Date": "2016-08-24T00:40:31Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.twistlet.falcon.model.repository.FalconUserRepository.findOne(user.getUsername())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (registeredUser == null) { newUser = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/7404/buggy-version/src.main.java.com.twistlet.falcon.model.service.PatronServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "f0efa49a69042e2ab89f5ac718c2fd179d1e5d01", "Url": "https://api.github.com/repos/blacksnow666/falcon", "Date": "2013-06-09T05:40:47Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (mfStream != null) { mfStream.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/7728/buggy-version/bennu-core.src.main.java.pt.ist.bennu.core.annotation.BennuCoreAnnotationInitializer.java", "BodyUseAPI": ["java.io.InputStream.close()"], "Fixed commit": "890104e8675bd1dd1f8ba25831538819eed0207c", "Url": "https://api.github.com/repos/pedrosan7os/bennu", "Date": "2013-03-04T16:13:51Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (propStream != null) { propStream.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/7728/buggy-version/bennu-core.src.main.java.pt.ist.bennu.core.annotation.BennuCoreAnnotationInitializer.java", "BodyUseAPI": ["java.io.InputStream.close()"], "Fixed commit": "890104e8675bd1dd1f8ba25831538819eed0207c", "Url": "https://api.github.com/repos/pedrosan7os/bennu", "Date": "2013-03-04T16:13:51Z"},
{"Line": "=>349", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["argumentWords.get(0).get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (wordOfFirstCase.isDataTable()) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/2328/buggy-version/jgiven-core.src.main.java.com.tngtech.jgiven.report.analysis.CaseArgumentAnalyser.java", "BodyUseAPI": [], "Fixed commit": "1b15b8ffecba4950b21fec8a9e0042ec3c4bc33d", "Url": "https://api.github.com/repos/ahus1/JGiven", "Date": "2015-11-08T20:31:38Z"},
{"Line": "=>304", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.tngtech.jgiven.report.analysis.StepModel.getWord(int)", "com.tngtech.jgiven.report.analysis.StepModel.getWord(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((firstWord.isArg()) && (firstWord.isDataTable())) && (!(firstWord.getArgumentInfo().getDataTable().equals(word.getArgumentInfo().getDataTable())))) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/2328/buggy-version/jgiven-core.src.main.java.com.tngtech.jgiven.report.analysis.CaseArgumentAnalyser.java", "BodyUseAPI": [], "Fixed commit": "1b15b8ffecba4950b21fec8a9e0042ec3c4bc33d", "Url": "https://api.github.com/repos/ahus1/JGiven", "Date": "2015-11-08T20:31:38Z"},
{"Line": "=>414", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.camel.util.ExchangeHelper.getContentType(org.apache.camel.Exchange)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (contentTypeString != null) { if ((contentTypeString.indexOf(\"charset\")) > 0) { contentType = org.apache.http.entity.ContentType.parse(contentTypeString); }else { contentType = org.apache.http.entity.ContentType.create(contentTypeString); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/6258/buggy-version/components.camel-http4.src.main.java.org.apache.camel.component.http4.HttpProducer.java", "BodyUseAPI": ["org.apache.http.entity.ContentType.create(java.lang.String)", "java.lang.String.indexOf(java.lang.String)", "org.apache.http.entity.ContentType.parse(java.lang.String)"], "Fixed commit": "4ff0ee9f0d3779205c3f5839e7627f3161ae28ae", "Url": "https://api.github.com/repos/apache/camel", "Date": "2014-10-09T08:11:17Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (duration == 0) mTweenManager.killTarget(cardNode);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/5492/buggy-version/app.src.main.java.com.yan.durak.layouting.pile.impl.BottomPlayerPileLayouter.java", "BodyUseAPI": [], "Fixed commit": "95e058022bbc7becdf953fef6af5523eba559d38", "Url": "https://api.github.com/repos/ivelius/DurakGameClient", "Date": "2015-04-30T13:41:27Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["am_utils.DefaultCategories.getDefaultCategories()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((mCat[i].children()[j]) == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/2659/buggy-version/ArticleManagerClient.app.src.main.java.list_builder.Public.java", "BodyUseAPI": [], "Fixed commit": "bdde126eb311fd4909ed1644d2dcbf154d6a441c", "Url": "https://api.github.com/repos/NThering/UCF-COP4331C-17Fall-0001-T15", "Date": "2017-11-29T03:38:14Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["am_utils.DefaultCategories.getDefaultCategories()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((mCat[targetCategory]) == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/2659/buggy-version/ArticleManagerClient.app.src.main.java.list_builder.Public.java", "BodyUseAPI": [], "Fixed commit": "bdde126eb311fd4909ed1644d2dcbf154d6a441c", "Url": "https://api.github.com/repos/NThering/UCF-COP4331C-17Fall-0001-T15", "Date": "2017-11-29T03:38:14Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.telephony.SmsManager.divideMessage(message.getMessage())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((messageList.size()) > 0) { com.tinfoil.sms.utility.SMSUtility.sms.sendMultipartTextMessage(message.getNumber(), null, messageList, sentPIList, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/4604/buggy-version/src.com.tinfoil.sms.utility.SMSUtility.java", "BodyUseAPI": ["android.telephony.SmsManager.sendMultipartTextMessage(message.getNumber(),<nulltype>,java.util.ArrayList<java.lang.String>,java.util.ArrayList<android.app.PendingIntent>,<nulltype>)"], "Fixed commit": "68d3a34cba9533a81706972081d1a92903644797", "Url": "https://api.github.com/repos/tinfoilhat/tinfoil-sms", "Date": "2014-05-02T14:44:05Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (loadingSession) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/7679/buggy-version/swing-application-impl.src.main.java.org.cytoscape.internal.view.NetworkViewMediator.java", "BodyUseAPI": [], "Fixed commit": "1e87d1d1ef27325d74094be60a89ca59be888598", "Url": "https://api.github.com/repos/cytoscape/cytoscape-impl", "Date": "2016-02-01T22:57:54Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.jimple.planner.ui.UiFormatter.timeDifference(item.getToTime())) < 0) { this.setId(\"overdue\"); }else { this.setId(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/3899/buggy-version/JimplePlanner.src.org.jimple.planner.ui.UiListCellDefault.java", "BodyUseAPI": [], "Fixed commit": "57a0853a3a78b46917f4484f63d30ac4f4141fb8", "Url": "https://api.github.com/repos/cs2103jan2016-f14-2j/main", "Date": "2016-04-11T14:42:45Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.Bukkit.getScoreboardManager().getMainScoreboard().getEntryTeam(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (playerTeam != null) player.setDisplayName(((((playerTeam.getPrefix()) + playerName) + (playerTeam.getSuffix())) + (org.bukkit.ChatColor.RESET))); else player.setDisplayName(playerName);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/3683/buggy-version/src.main.java.net.ddns.templex.vanillamode.chat.ScoreboardChatIntegration.java", "BodyUseAPI": ["org.bukkit.entity.Player.setDisplayName(((((playerTeam.getPrefix()) + playerName) + (playerTeam.getSuffix())) + (org.bukkit.ChatColor.RESET)))", "org.bukkit.scoreboard.Team.getSuffix()", "org.bukkit.scoreboard.Team.getPrefix()"], "Fixed commit": "88af4b76204e4f4a6f0a127eb8ee7a8c851fcce2", "Url": "https://api.github.com/repos/TemplexMC/VanillaMode", "Date": "2016-12-18T15:04:11Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.Bukkit.getScoreboardManager().getMainScoreboard().getEntryTeam(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (playerTeam != null) player.setDisplayName((((playerTeam.getPrefix()) + playerName) + (playerTeam.getSuffix()))); else player.setDisplayName(playerName);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/3683/buggy-version/src.main.java.net.ddns.templex.vanillamode.chat.ScoreboardChatIntegration.java", "BodyUseAPI": ["org.bukkit.scoreboard.Team.getPrefix()", "org.bukkit.entity.Player.setDisplayName((((playerTeam.getPrefix()) + playerName) + (playerTeam.getSuffix())))", "org.bukkit.scoreboard.Team.getSuffix()"], "Fixed commit": "88af4b76204e4f4a6f0a127eb8ee7a8c851fcce2", "Url": "https://api.github.com/repos/TemplexMC/VanillaMode", "Date": "2016-12-18T15:04:11Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasChildren) { currentLine += '\\n' + (additionalSpaces.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/8432/buggy-version/src.main.java.app.utils.ds.BinaryHeap.java", "BodyUseAPI": [], "Fixed commit": "102715b14ac1d92d4cd6e6da16581b965d937b73", "Url": "https://api.github.com/repos/seanballais/binary-heaps", "Date": "2017-04-16T11:11:16Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["clojure.lang.Var.invoke(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(java.util.Objects.equals(oldLookVec, lookVec))) { containerMutator.setValue(componentDataCache.getLookVecIndex(), lookVec); lookVectors_.set(changedComponentUid.intValue(), lookVec); lookVectorGenerated(changedComponentUid, lookVec); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/7947/buggy-version/src.java.flatgui.core.engine.ui.FGClojureResultCollector.java", "BodyUseAPI": ["java.util.List<java.util.List<java.lang.Object>>.set(int,java.util.List<java.lang.Object>)", "containerMutator.setValue(componentDataCache.getLookVecIndex(),java.util.List<java.lang.Object>)", "flatgui.core.engine.ui.FGClojureResultCollector.lookVectorGenerated(java.lang.Integer,java.util.List<java.lang.Object>)"], "Fixed commit": "a0cbab8e70f8a11b341cdbb3bb6be7e6c51eded3", "Url": "https://api.github.com/repos/FlatGUI/flatguicore", "Date": "2017-05-26T00:10:34Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.IP) == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/1164/buggy-version/8VGVPN.src.sdxess.Website.java", "BodyUseAPI": [], "Fixed commit": "ccaf2b1bc7d3ad1cff630afc5ca67b7b97bb72ad", "Url": "https://api.github.com/repos/kotaro44/sdxess", "Date": "2017-05-10T08:51:42Z"},
{"Line": "=>341", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(frameBox.isInitialized())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/7860/buggy-version/common.buildcraft.builders.tile.TileQuarry.java", "BodyUseAPI": [], "Fixed commit": "5d1eabbe60f5e2baccafce00e4c16790b963304d", "Url": "https://api.github.com/repos/BuildCraft/BuildCraft", "Date": "2016-12-31T21:37:33Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getWeapon()) != null) { dropWeapon(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/6728/buggy-version/src.org.dungeon.core.creatures.Hero.java", "BodyUseAPI": [], "Fixed commit": "04aa7c216f1b82b321bfdcc27990322dc075d62d", "Url": "https://api.github.com/repos/mafagafogigante/dungeon", "Date": "2014-09-16T20:53:58Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getWeapon()) != null) { org.dungeon.io.IO.writeString((((getHeroStatusString()) + \"\\n\") + (getWeaponStatusString()))); }else { printHeroStatus(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/6728/buggy-version/src.org.dungeon.core.creatures.Hero.java", "BodyUseAPI": [], "Fixed commit": "04aa7c216f1b82b321bfdcc27990322dc075d62d", "Url": "https://api.github.com/repos/mafagafogigante/dungeon", "Date": "2014-09-16T20:53:58Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isCompletelyHealed()) { org.dungeon.io.IO.writeString(\"You are already completely healed.\"); }else { org.dungeon.io.IO.writeString(\"Resting...\"); setCurHealth(getMaxHealth()); org.dungeon.io.IO.writeString(\"You are completely rested.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/6728/buggy-version/src.org.dungeon.core.creatures.Hero.java", "BodyUseAPI": [], "Fixed commit": "04aa7c216f1b82b321bfdcc27990322dc075d62d", "Url": "https://api.github.com/repos/mafagafogigante/dungeon", "Date": "2014-09-16T20:53:58Z"},
{"Line": "=>312", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(getCachedSortedTransactionList().contains(tran))) { getCachedSortedTransactionList().add(tran); java.util.Collections.sort(getCachedSortedTransactionList()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/4939/buggy-version/jgnash-core.src.main.java.jgnash.engine.Account.java", "BodyUseAPI": ["java.util.List<jgnash.engine.Transaction>.add(jgnash.engine.Transaction)"], "Fixed commit": "0a74beb854d0a8ec9784910abc36d47d4617cc68", "Url": "https://api.github.com/repos/ccavanaugh/jgnash", "Date": "2013-11-17T15:27:05Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(mDrawable.isRunning())) { mDrawable.start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/7506/buggy-version/app.src.main.java.com.aspsine.swipetoloadlayout.demo.view.header.YalantisPhoenixRefreshHeaderView.java", "BodyUseAPI": ["com.aspsine.swipetoloadlayout.demo.view.drawable.yalantis.BaseRefreshDrawable.start()"], "Fixed commit": "404ac459085a11f75a0015b05438c55c3510921e", "Url": "https://api.github.com/repos/Aspsine/SwipeToLoadLayout", "Date": "2015-11-06T06:38:15Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(mDrawable.isRunning())) { mDrawable.start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/7506/buggy-version/app.src.main.java.com.aspsine.swipetoloadlayout.demo.view.header.YalantisPhoenixRefreshHeaderView.java", "BodyUseAPI": ["com.aspsine.swipetoloadlayout.demo.view.drawable.yalantis.BaseRefreshDrawable.start()"], "Fixed commit": "404ac459085a11f75a0015b05438c55c3510921e", "Url": "https://api.github.com/repos/Aspsine/SwipeToLoadLayout", "Date": "2015-11-06T06:38:15Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["project.getBaseDir().findFileByRelativePath(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (virtualFile == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/5195/buggy-version/src.de.kontext_e.idea.plugins.jqa.JqaRelativePathFile.java", "BodyUseAPI": [], "Fixed commit": "d8f99d3e0f884e7a2956acd35cfd59b21b0398c5", "Url": "https://api.github.com/repos/kontext-e/idea-jqa-plugin", "Date": "2014-11-28T12:17:06Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.kontext_e.idea.plugins.jqa.JqaClassFqnResult.toUsageInfo(com.intellij.openapi.project.Project)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (info != null) { usages.add(new com.intellij.usages.UsageInfo2UsageAdapter(info)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/5195/buggy-version/src.de.kontext_e.idea.plugins.jqa.FindInNeo4jDatabaseAction.java", "BodyUseAPI": ["java.util.List<com.intellij.usages.Usage>.add(com.intellij.usages.UsageInfo2UsageAdapter)"], "Fixed commit": "d8f99d3e0f884e7a2956acd35cfd59b21b0398c5", "Url": "https://api.github.com/repos/kontext-e/idea-jqa-plugin", "Date": "2014-11-28T12:17:06Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((dates.size()) == 2) { return addEvent(result, dates); }else { return addTask(input); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/8782/buggy-version/src.todolist.parser.FlexiCommandParser.java", "BodyUseAPI": ["todolist.parser.FlexiCommandParser.addEvent(java.lang.String,java.util.List<java.util.Date>)"], "Fixed commit": "4d51f89479df37876efacd6c024f5e5ec0c082e3", "Url": "https://api.github.com/repos/cs2103jan2016-w13-2j/ToDoList", "Date": "2016-04-11T16:28:44Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<com.example.maurax.todoqueue.Task>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((t.getDescription().equals(\"\")) || (t.getName().equals(\"\"))) viewHolder.line.setVisibility(View.GONE); else viewHolder.line.setVisibility(View.VISIBLE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/5556/buggy-version/app.src.main.java.com.example.maurax.todoqueue.ListAllAdapter.java", "BodyUseAPI": [], "Fixed commit": "68004739189a655ef271ff2e33453314ef48e8e7", "Url": "https://api.github.com/repos/MKindberg/TodoQueue", "Date": "2017-05-03T20:34:49Z"},
{"Line": "=>494", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.comicDir) == null) { android.widget.Toast.makeText(this, R.string.please_select_directory, Toast.LENGTH_LONG); }else { collections.setAdapter(new com.juanvvc.comicviewer.GalleryExplorer.CollectionListAdapter(this, new java.io.File(this.comicDir))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/3082/buggy-version/ComicViewer.src.com.juanvvc.comicviewer.GalleryExplorer.java", "BodyUseAPI": [], "Fixed commit": "d4724d701d3beca0733adde6b81bbc8f48aa35bd", "Url": "https://api.github.com/repos/Juanvvc/ComicViewer", "Date": "2012-04-24T20:50:58Z"},
{"Line": "=>898", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((timerTimeout) != null) timerTimeout.cancel();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/2541/buggy-version/app.src.main.java.it.unina.is2project.sensorgames.pong.GamePongTwoPlayer.java", "BodyUseAPI": [], "Fixed commit": "5b6dd926a734131fa2eab761f6291316e7e54509", "Url": "https://api.github.com/repos/Androidiani/Sensor-Ball", "Date": "2015-04-25T16:12:04Z"},
{"Line": "=>897", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((taskTimeout) != null) taskTimeout.cancel();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/2541/buggy-version/app.src.main.java.it.unina.is2project.sensorgames.pong.GamePongTwoPlayer.java", "BodyUseAPI": [], "Fixed commit": "5b6dd926a734131fa2eab761f6291316e7e54509", "Url": "https://api.github.com/repos/Androidiani/Sensor-Ball", "Date": "2015-04-25T16:12:04Z"},
{"Line": "=>398", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((fsmGame.getState()) == (it.unina.is2project.sensorgames.FSMGame.STATE_GAME_PAUSE_STOP)) && (receivedStop)) { it.unina.is2project.sensorgames.bluetooth.messages.AppMessage suspendMessage = new it.unina.is2project.sensorgames.bluetooth.messages.AppMessage(it.unina.is2project.sensorgames.bluetooth.Constants.MSG_TYPE_SUSPEND_REQUEST); sendBluetoothMessage(suspendMessage); fsmGame.setState(FSMGame.STATE_GAME_SUSPENDED); if ((timerTimeout) != null) timerTimeout.cancel(); if ((taskTimeout) != null) taskTimeout.cancel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/2541/buggy-version/app.src.main.java.it.unina.is2project.sensorgames.pong.GamePongTwoPlayer.java", "BodyUseAPI": ["it.unina.is2project.sensorgames.FSMGame.setState(FSMGame.STATE_GAME_SUSPENDED)"], "Fixed commit": "5b6dd926a734131fa2eab761f6291316e7e54509", "Url": "https://api.github.com/repos/Androidiani/Sensor-Ball", "Date": "2015-04-25T16:12:04Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (list == null) { au.edu.uq.cmm.paul.grabber.AbstractFileGrabber.LOG.debug(((\"Cannot get a file list for '\" + directory) + \"': permissions problem?\")); return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/1404/buggy-version/paul.src.main.java.au.edu.uq.cmm.paul.grabber.AbstractFileGrabber.java", "BodyUseAPI": [], "Fixed commit": "e55a512717e0d19fd5f5a23ac4d0630b2ab2fb7b", "Url": "https://api.github.com/repos/crawley/CMM-data-grabber", "Date": "2013-07-26T07:32:10Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (firstVisibleItem < 0) { header = null; currentHeaderId = null; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/3455/buggy-version/library.src.com.emilsjolander.components.stickylistheaders.StickyListHeadersListView.java", "BodyUseAPI": [], "Fixed commit": "2d720566d179170b8aa43e90060cf9993b679a50", "Url": "https://api.github.com/repos/sheimi/StickyListHeaders", "Date": "2013-01-16T14:41:12Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((toastTask) != null) toastTask.cancel();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/7121/buggy-version/VirginMobileMinutesChecker.src.com.drfloob.VirginMobileMinutesChecker.call_trigger.MinutesService.java", "BodyUseAPI": [], "Fixed commit": "3c6979555f4371d402cede0c777718d4749c50aa", "Url": "https://api.github.com/repos/drfloob/VirginMobileMinutesChecker", "Date": "2011-02-17T23:33:18Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((theToast) != null) theToast.cancel();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/7121/buggy-version/VirginMobileMinutesChecker.src.com.drfloob.VirginMobileMinutesChecker.call_trigger.MinutesService.java", "BodyUseAPI": [], "Fixed commit": "3c6979555f4371d402cede0c777718d4749c50aa", "Url": "https://api.github.com/repos/drfloob/VirginMobileMinutesChecker", "Date": "2011-02-17T23:33:18Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rootView) != null) { return rootView; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/2357/buggy-version/app.src.main.java.com.versatilemobitech.ourtour.fragments.AddCarFragment.java", "BodyUseAPI": [], "Fixed commit": "0410fd1ca44c5d538963a5cb7bad27dc7b518ad7", "Url": "https://api.github.com/repos/sixscorpions/OurTour", "Date": "2016-10-26T17:24:41Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((read) != null) { return read; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/8708/buggy-version/source.library.com.restfb.types.webhook.messaging.MessagingItem.java", "BodyUseAPI": [], "Fixed commit": "0651f12f0507e9d520b57303d01b61cf6e248171", "Url": "https://api.github.com/repos/restfb/restfb", "Date": "2016-09-22T09:48:55Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((contents.get(i)) > 0) { singlePermutation = currency.getAsMap(); singlePermutation.put(i, 1); permutationsOfValue.add(singlePermutation); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/5696/buggy-version/src.main.java.services.ChangeCalculationService.java", "BodyUseAPI": ["java.util.Map<java.lang.Integer, java.lang.Integer>.put(int,int)"], "Fixed commit": "71975bfc7c53e03311b808ca18a0a00583dac89b", "Url": "https://api.github.com/repos/DavidJDanaher/cash-register", "Date": "2017-10-30T03:01:45Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((requestStateListener) != null) { requestStateListener.onConnectionError(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/5769/buggy-version/httpclient.src.main.java.com.zanjou.http.request.Request.java", "BodyUseAPI": [], "Fixed commit": "8cea5a2acef601284677de8c6dbaa4a34e564f7a", "Url": "https://api.github.com/repos/ander7agar/android-http-client", "Date": "2017-01-19T14:27:41Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (potential_ancestor >= 0) ancestor = potential_ancestor;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/1779/buggy-version/src.lv.pipe.MateTools.java", "BodyUseAPI": [], "Fixed commit": "9500f9eec6011c67634bc03d828a75119b2d1294", "Url": "https://api.github.com/repos/aznotins/Coref", "Date": "2015-03-19T19:52:37Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ACIS.OnExecutionListener.onGetBestResult(de.bensoft.acis.core.MatchResult[])"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (matchResult != null) matchScore = matchResult.getScore(); else matchScore = 0.0F;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/7438/buggy-version/de.bensoft.acis.server.contexts.SampleRequestHandler.java", "BodyUseAPI": ["de.bensoft.acis.core.MatchResult.getScore()"], "Fixed commit": "7b7bc238850640c8b565ac2761e31076d6f70626", "Url": "https://api.github.com/repos/bensoftde/acis", "Date": "2017-09-11T13:45:24Z"},
{"Line": "=>833", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mOnDrawerSlideListener) != null) { mOnDrawerSlideListener.OnDrawerSlide(mDragOffset); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/7837/buggy-version/duo-navigation-drawer.src.main.java.nl.psdcompany.duonavigationdrawer.views.DuoDrawerLayout.java", "BodyUseAPI": [], "Fixed commit": "bb31f7449a5ed3ae524f90dc856e3755b932b21b", "Url": "https://api.github.com/repos/PSD-Company/duo-navigation-drawer", "Date": "2017-05-19T09:21:49Z"},
{"Line": "=>336", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gson.Gson.fromJson(note.getNoteTodoCheckedPositions(),java.lang.reflect.Type)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (checkedItemsArray != null) { oldSelectedItemsCount = checkedItemsArray.size(); for (java.lang.String s : checkedItemsArray) { mChecklist.setItemChecked(java.lang.Integer.parseInt(s), true); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/4295/buggy-version/app.src.main.java.com.pd.noteonthego.fragments.ChecklistFragment.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.size()"], "Fixed commit": "62202c946faae658ff9e505fa2c36cc706a3e871", "Url": "https://api.github.com/repos/prasanjitdeyiaai/Note-on-the-go", "Date": "2015-09-08T18:52:44Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((cleanFragment.startsWith(\"{\")) && (cleanFragment.endsWith(\"}\"))) return il.org.spartan.spartanizer.cmdline.GuessedContext.BLOCK_LOOK_ALIKE;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/5906/buggy-version/src.main.java.il.org.spartan.spartanizer.cmdline.GuessedContext.java", "BodyUseAPI": [], "Fixed commit": "475f4dddc354ff2a1875398ecd8b15783e09b749", "Url": "https://api.github.com/repos/SpartanRefactoring/Main", "Date": "2016-11-14T16:54:43Z"},
{"Line": "=>1022", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!rerun) { if (config.PlayersStoreInventory) inventorySave.restoreInventories(); if ((!(config.PluginModeServerExclusive)) && (!(config.PluginModeWorldExclusive))) { players.clear(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/4438/buggy-version/src.graindcafe.tribu.Tribu.java", "BodyUseAPI": [], "Fixed commit": "59d96d6019f8a07f248e7fbf1ef8aee63e1d6f6e", "Url": "https://api.github.com/repos/graindcafe/Tribu", "Date": "2012-07-17T08:54:24Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fi.muikku.plugins.workspace.WorkspaceMaterialFieldAnswerController.findWorkspaceMaterialFileFieldAnswerFileByFileId(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (fieldAnswerFile != null) { workspaceMaterialFieldAnswerController.deleteWorkspaceMaterialFileFieldAnswerFile(fieldAnswerFile); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/4577/buggy-version/muikku-core-plugins.src.main.java.fi.muikku.plugins.workspace.fieldio.WorkspaceFileFieldIOHandler.java", "BodyUseAPI": ["fi.muikku.plugins.workspace.WorkspaceMaterialFieldAnswerController.deleteWorkspaceMaterialFileFieldAnswerFile(fi.muikku.plugins.workspace.model.WorkspaceMaterialFileFieldAnswerFile)"], "Fixed commit": "40b452f5df61ca5b4de8dec95b757de14cf33daa", "Url": "https://api.github.com/repos/otavanopisto/muikku", "Date": "2015-11-05T12:41:52Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (on >= (maxOn)) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/7192/buggy-version/src.main.java.com.sk89q.craftbook.circuits.gates.logic.RandomBit.java", "BodyUseAPI": [], "Fixed commit": "1de88787ec81e91845bd6757c73ef525f9b6a6cd", "Url": "https://api.github.com/repos/sk89q/craftbook", "Date": "2013-11-29T23:06:03Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (name.equals(\"profile_list\")) { name = profileData.profile.getTitle(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/1763/buggy-version/src-plugins.Reconstruct_Reader.src.main.java.edu.utexas.clm.reconstructreader.trakem2.Trakem2Translator.java", "BodyUseAPI": [], "Fixed commit": "096bf8b6640c5d9f72893d7404ba1fda44a0c879", "Url": "https://api.github.com/repos/larrylindsey/fiji", "Date": "2014-03-11T22:07:04Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(toClose)) { repaint(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/8263/buggy-version/src.core.runner.GameVisualisation.java", "BodyUseAPI": [], "Fixed commit": "19c01d28cd2e03a39e1087c6e4533266cf9479c0", "Url": "https://api.github.com/repos/aioc/phais", "Date": "2013-12-18T05:05:08Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((board[0][1]) == 'x') && ((board[1][1]) == 'x')) && ((board[2][1]) == 'x')) { return 'x'; }else if ((((board[0][1]) == 'o') && ((board[1][1]) == 'o')) && ((board[2][1]) == 'o')) { return 'o'; }else { return '\\u0000'; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/5786/buggy-version/TTTBoard.java", "BodyUseAPI": [], "Fixed commit": "04aeef5dfc700e767ca49953414bf6818d7ee5f2", "Url": "https://api.github.com/repos/lynnliu626/github-issues-activity", "Date": "2017-09-18T18:22:21Z"},
{"Line": "=>857", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.restlet.engine.header.Header.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((base64hash.length()) == 22) { base64hash += \"==\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/3123/buggy-version/modules.org.restlet.src.org.restlet.engine.header.HeaderUtils.java", "BodyUseAPI": [], "Fixed commit": "6d64d46ca59966eaf4b4e5deb20993e6585c0077", "Url": "https://api.github.com/repos/restlet/restlet-framework-java", "Date": "2013-11-18T16:56:11Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mage.game.Game.getPermanent(card.getId())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((permanent != null) && (permanent instanceof mage.game.permanent.PermanentCard)) { ((mage.game.permanent.PermanentCard) (permanent)).getCard().getCardType().add(CardType.CREATURE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/7273/buggy-version/Mage.src.mage.game.stack.Spell.java", "BodyUseAPI": [], "Fixed commit": "64e0b4d1b968be9c239773857e7a6ac138b2abc9", "Url": "https://api.github.com/repos/magefree/mage", "Date": "2014-04-23T22:26:27Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((current.get(edge)) != null) && ((attrValue.length()) > 0)) res.add(tmp);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/5936/buggy-version/pssif.psiff.viz.src.main.java.graph.model2.MyEdge2.java", "BodyUseAPI": [], "Fixed commit": "77c1354435753457180da72b226cb442968beff3", "Url": "https://api.github.com/repos/radke-tum/idp", "Date": "2014-01-27T18:38:46Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((current.get(edge)) != null) && (current.get(edge).isOne())) value = current.get(edge).getOne();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/5936/buggy-version/pssif.psiff.viz.src.main.java.graph.model2.MyEdge2.java", "BodyUseAPI": ["de.tum.pssif.core.metamodel.Attribute.get(de.tum.pssif.core.model.Edge)", "current.get(edge).getOne()"], "Fixed commit": "77c1354435753457180da72b226cb442968beff3", "Url": "https://api.github.com/repos/radke-tum/idp", "Date": "2014-01-27T18:38:46Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.acme.ecommerce.service.ProductService.findById(long)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (addProduct != null) { stockQuantity = addProduct.getQuantity(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/4905/buggy-version/src.main.java.com.acme.ecommerce.controller.CartController.java", "BodyUseAPI": ["com.acme.ecommerce.domain.Product.getQuantity()"], "Fixed commit": "a48be5e312a000fd80eb3e357248754f2decb740", "Url": "https://api.github.com/repos/floriantoenjes/Project8", "Date": "2016-08-15T17:38:32Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.acme.ecommerce.service.ProductService.findById(long)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (updateProduct != null) { stockQuantity = updateProduct.getQuantity(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/4905/buggy-version/src.main.java.com.acme.ecommerce.controller.CartController.java", "BodyUseAPI": ["com.acme.ecommerce.domain.Product.getQuantity()"], "Fixed commit": "a48be5e312a000fd80eb3e357248754f2decb740", "Url": "https://api.github.com/repos/floriantoenjes/Project8", "Date": "2016-08-15T17:38:32Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.acme.ecommerce.service.ProductService.findById(long)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (updateProduct != null) { stockQuantity = updateProduct.getQuantity(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/4905/buggy-version/src.main.java.com.acme.ecommerce.controller.CartController.java", "BodyUseAPI": ["com.acme.ecommerce.domain.Product.getQuantity()"], "Fixed commit": "a48be5e312a000fd80eb3e357248754f2decb740", "Url": "https://api.github.com/repos/floriantoenjes/Project8", "Date": "2016-08-15T17:38:32Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((aiFlag) && ((turn) == false)) && (!(isWon))) { int aimove = ttt.aiRandMove(); buttray[aimove].setO(); ttt.boardUpdate(aimove, \"O\"); if (ttt.winTestX()) { winBox(\"X is the winner!\", \"A winrar is you!\"); isWon = true; } if (ttt.winTestO()) { winBox(\"O is the winner!\", \"A winrar is you!\"); isWon = true; } if (ttt.tieTest()) { winBox(\"Draw!\", \"Tie!\"); isWon = true; } turn = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/8776/buggy-version/GUI.java", "BodyUseAPI": [], "Fixed commit": "d740de377f5ffeaa61e0397e07ab7405a93d73a6", "Url": "https://api.github.com/repos/kgeeknerdsley/TicTacToe_Game", "Date": "2015-06-12T03:15:45Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (followType == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/5678/buggy-version/Android.src.org.droidplanner.android.fragments.mode.ModeFollowFragment.java", "BodyUseAPI": [], "Fixed commit": "3e203dcbecd0f65275f5fcfa5a849218064eccc1", "Url": "https://api.github.com/repos/peterhinson/droidplanner", "Date": "2015-02-24T02:16:16Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (markerInfo == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/5678/buggy-version/Android.src.org.droidplanner.android.fragments.FlightMapFragment.java", "BodyUseAPI": [], "Fixed commit": "3e203dcbecd0f65275f5fcfa5a849218064eccc1", "Url": "https://api.github.com/repos/peterhinson/droidplanner", "Date": "2015-02-24T02:16:16Z"},
{"Line": "=>654", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((protocol.equals(NetUtils.GRE_PROTO)) || (protocol.equals(NetUtils.ESP_PROTO))) || (protocol.equals(NetUtils.AH_PROTO))) { startPortOrType = 0; endPortOrCode = 0; }else { if ((startPort == null) || (endPort == null)) { throw new com.cloud.exception.InvalidParameterValueException((((\"Invalid port range specified, startPort = \" + startPort) + \", endPort = \") + endPort)); } if ((startPort == 0) && (endPort == 0)) { endPort = 65535; } if (startPort > endPort) { throw new com.cloud.exception.InvalidParameterValueException((((\"Invalid port range \" + startPort) + \":\") + endPort)); } if ((((startPort > 65535) || (endPort > 65535)) || (startPort < (-1))) || (endPort < (-1))) { throw new com.cloud.exception.InvalidParameterValueException((((\"Invalid port numbers \" + startPort) + \":\") + endPort)); } if ((startPort < 0) || (endPort < 0)) { throw new com.cloud.exception.InvalidParameterValueException((((\"Invalid port range \" + startPort) + \":\") + endPort)); } startPortOrType = startPort; endPortOrCode = endPort; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/261/buggy-version/server.src.com.cloud.network.security.SecurityGroupManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "6728695d8efcc5ec902d58ace847ec0a5b0ca0fb", "Url": "https://api.github.com/repos/exoscale/cloudstack", "Date": "2014-12-18T13:59:04Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((1 > pn) && (org.nutz.dao.pager.Pager.log.isInfoEnabled())) org.nutz.dao.pager.Pager.log.infof(\"PageNumber shall start at 1 ,but input is %d, that mean pager is disable\", pn);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/5233/buggy-version/src.org.nutz.dao.pager.Pager.java", "BodyUseAPI": ["org.nutz.log.Log.infof(java.lang.String,int)"], "Fixed commit": "0cfcbe9ec58e21519cc2433bdaad24d2b51d1eb8", "Url": "https://api.github.com/repos/elkan1788/nutz", "Date": "2013-03-26T10:43:47Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dialogShow) dia.dismiss();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/708/buggy-version/Android.Data_Collector.src.edu.uml.cs.isense.collector.shared.QueueUploader.java", "BodyUseAPI": [], "Fixed commit": "2bd6ed19b9058c8f6a80bef1b8eabaf5420c4045", "Url": "https://api.github.com/repos/isenseDev/iSENSE-Hardware", "Date": "2012-10-15T17:48:37Z"},
{"Line": "=>428", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (flag == true) qString = ((\"select * where name = \" + StringUUID) + \" or uuid = \") + StringUUID; else qString = (\"select * where name = '\" + StringUUID) + \"'\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/405/buggy-version/blueprints-usergrid-graph.src.main.java.org.apache.usergrid.drivers.blueprints.UsergridGraph.java", "BodyUseAPI": [], "Fixed commit": "a485571506bcf012273cd66b4a7515d44ea59da7", "Url": "https://api.github.com/repos/ayesha12/blueprints", "Date": "2016-03-02T22:25:13Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((plages.size()) > 1) { subG = graph.createTSPGraph(nodes, livraisonByTimeWindow, plages, storeHousePoint); }else { subG = graph.createTSPGrapWithoutTimeWindows(nodes); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/7423/buggy-version/titan-shippment.src.utils.DijkstraFinder.java", "BodyUseAPI": ["utils.Graph.createTSPGraph(java.util.ArrayList<java.lang.Integer>,java.util.Map<model.planning.PlageHoraire, java.util.ArrayList<model.planning.Livraison>>,java.util.ArrayList<model.planning.PlageHoraire>,model.planning.Livraison)"], "Fixed commit": "69de15e675e7697c5d67a9fbe6233f97f56d0e28", "Url": "https://api.github.com/repos/LeonardA-L/hm-devOO", "Date": "2014-11-12T11:35:26Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<model.planning.Livraison>.get(xNext[current].getValue())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((l.getPlageHoraire()) != null) java.lang.System.out.println(l);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/7423/buggy-version/titan-shippment.src.utils.DijkstraFinder.java", "BodyUseAPI": ["java.io.PrintStream.println(model.planning.Livraison)"], "Fixed commit": "69de15e675e7697c5d67a9fbe6233f97f56d0e28", "Url": "https://api.github.com/repos/LeonardA-L/hm-devOO", "Date": "2014-11-12T11:35:26Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((trajPoints.size()) < 2) { trajPoints.clear(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/3293/buggy-version/sensorhub-driver-fakegps.src.main.java.org.sensorhub.impl.sensor.fakegps.FakeGpsOutput.java", "BodyUseAPI": ["java.util.List<double[]>.clear()"], "Fixed commit": "16c5d85e182f0d016049db87ca5e5aea19ec87dd", "Url": "https://api.github.com/repos/sensiasoft/sensorhub", "Date": "2015-05-21T11:45:39Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bExec == false) { skipTo(\"endif\", \";\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/7456/buggy-version/src.havabol.Parser.java", "BodyUseAPI": [], "Fixed commit": "e705c97d2e2ff1ae0b39ccbb19cce62f7257d2d2", "Url": "https://api.github.com/repos/bucknercd/Interpreter", "Date": "2017-03-15T22:32:01Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (offset > (cdata.length())) { throw new org.w3c.dom.DOMException(org.w3c.dom.DOMException.INDEX_SIZE_ERR, \"offset is out of bounds\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/578/buggy-version/src.org.exist.dom.persistent.AbstractCharacterData.java", "BodyUseAPI": [], "Fixed commit": "2f518bcd3ce618ee16836a4d0474db2a528e4c48", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2017-08-02T21:13:41Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (offset < 0) { throw new org.w3c.dom.DOMException(org.w3c.dom.DOMException.INDEX_SIZE_ERR, \"offset is out of bounds\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/578/buggy-version/src.org.exist.dom.persistent.AbstractCharacterData.java", "BodyUseAPI": [], "Fixed commit": "2f518bcd3ce618ee16836a4d0474db2a528e4c48", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2017-08-02T21:13:41Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (offset < 0) { throw new org.w3c.dom.DOMException(org.w3c.dom.DOMException.INDEX_SIZE_ERR, \"offset is out of bounds\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/578/buggy-version/src.org.exist.dom.memtree.AbstractCharacterData.java", "BodyUseAPI": [], "Fixed commit": "2f518bcd3ce618ee16836a4d0474db2a528e4c48", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2017-08-02T21:13:41Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((offset + count) > length) { return new java.lang.String(document.characters, (inDocOffset + offset), (length - offset)); }else { return new java.lang.String(document.characters, (inDocOffset + offset), length); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/578/buggy-version/src.org.exist.dom.memtree.AbstractCharacterData.java", "BodyUseAPI": [], "Fixed commit": "2f518bcd3ce618ee16836a4d0474db2a528e4c48", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2017-08-02T21:13:41Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (reverseThruster) org.lwjgl.opengl.GL11.glRotatef(180, 0, 1, 0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/2460/buggy-version/src.main.java.micdoodle8.mods.galacticraft.core.client.render.tile.TileEntityThrusterRenderer.java", "BodyUseAPI": [], "Fixed commit": "98aeabbd2e6ee0bacd1f2b5e20e72fa133a89510", "Url": "https://api.github.com/repos/micdoodle8/Galacticraft", "Date": "2014-07-13T22:25:41Z"},
{"Line": "=>329", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((twosComplimentOutput.charAt(0)) == '1') && ((twosComplimentOutput.charAt(1)) == '1')) { return twosComplimentOutput.toString().substring(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/7318/buggy-version/EncodingConverter.java", "BodyUseAPI": ["java.lang.String.substring(int)", "java.lang.StringBuilder.toString()"], "Fixed commit": "e00d4a566d18d3fa04faf1d13184e28532e21f8c", "Url": "https://api.github.com/repos/mikegreen1995/Binary-Encoder-Decoder", "Date": "2014-08-17T20:56:04Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((((!(name.isEmpty())) && (!(kcal.isEmpty()))) && (!(fat.isEmpty()))) && (!(carbs.isEmpty()))) && (!(protein.isEmpty()))) { try (java.io.PrintWriter out = new java.io.PrintWriter(new java.io.BufferedWriter(new java.io.FileWriter(filepath, true)))) { out.println(((((((((name + \" \") + kcal) + \" \") + fat) + \" \") + carbs) + \" \") + protein)); out.close(); } catch (java.io.IOException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/4420/buggy-version/src.Indexer.java", "BodyUseAPI": ["java.io.PrintWriter.println(java.lang.String)"], "Fixed commit": "286fc79d88f2397cd5d144ddcf84260e5fb40f93", "Url": "https://api.github.com/repos/anil9/CalorieCounter", "Date": "2016-01-23T16:03:58Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((test.getSelectedItem()) == null) || ((level.getSelectedItem()) == null)) { javax.swing.JOptionPane.showMessageDialog(null, \"\ufffd\u043f\ufffd\u0733\ufffdr\ufffdw\", null, javax.swing.JOptionPane.INFORMATION_MESSAGE); }else { open((((((wordRoot) + \"/\") + (test.getSelectedItem())) + \"/\") + (level.getSelectedItem()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/7765/buggy-version/EnglishTypingTraining.src.GUI.java", "BodyUseAPI": ["javax.swing.JComboBox<java.lang.String>.getSelectedItem()", "GUI.3.open(java.lang.String)", "javax.swing.JComboBox<java.lang.String>.getSelectedItem()"], "Fixed commit": "ce645403cdd49c95997995fcab41afea3750ff1c", "Url": "https://api.github.com/repos/MocaRaxLin/EnglishTypingTraining", "Date": "2016-11-22T09:57:02Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (sep > 0) mudmap2.Paths.createDirectory(path.substring(0, sep));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/2572/buggy-version/src.main.java.mudmap2.Paths.java", "BodyUseAPI": ["java.lang.String.substring(int,java.lang.Integer)", "mudmap2.Paths.createDirectory(java.lang.String)"], "Fixed commit": "0e859b729def063c0d152c5800f590cee7026de3", "Url": "https://api.github.com/repos/Neop/mudmap2", "Date": "2017-01-04T00:40:54Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (exponent < 0) { reversed = true; exponent *= -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/5781/buggy-version/src.main.java.utils.MathUtils.java", "BodyUseAPI": [], "Fixed commit": "df3229fde2c8b53bb147f658ab45f98724ce0c43", "Url": "https://api.github.com/repos/omar753sahl/QSModels", "Date": "2017-12-18T18:24:07Z"},
{"Line": "=>566", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.tuleap.mylyn.task.internal.core.wsdl.soap.v1.UGroupMember.getUser_id()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (userId == (org.tuleap.mylyn.task.internal.core.util.ITuleapConstants.ANONYMOUS_USER_INFO_IDENTIFIER)) { userInfo = new org.tuleap.mylyn.task.internal.core.wsdl.soap.v1.UserInfo(java.lang.Integer.valueOf(userId).toString(), org.tuleap.mylyn.task.internal.core.util.ITuleapConstants.ANONYMOUS_USER_INFO_USERNAME, java.lang.Integer.valueOf(ITuleapConstants.ANONYMOUS_USER_INFO_IDENTIFIER).toString(), org.tuleap.mylyn.task.internal.core.util.ITuleapConstants.ANONYMOUS_USER_INFO_REAL_NAME, org.tuleap.mylyn.task.internal.core.util.ITuleapConstants.ANONYMOUS_USER_INFO_EMAIL, org.tuleap.mylyn.task.internal.core.util.ITuleapConstants.ANONYMOUS_USER_INFO_LDAP_IDENTIFIER); }else { userInfo = codendiAPIPort.getUserInfo(sessionHash, userId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/371/buggy-version/org.tuleap.mylyn.task.core.src.org.tuleap.mylyn.task.internal.core.net.TuleapSoapConnector.java", "BodyUseAPI": ["java.lang.Integer.valueOf(int)", "org.tuleap.mylyn.task.internal.core.wsdl.soap.v1.CodendiAPIPortType.getUserInfo(java.lang.String,int)", "java.lang.Integer.toString()"], "Fixed commit": "09493378124e435f4ca0e690cf016760e8ca7a51", "Url": "https://api.github.com/repos/sbegaudeau/mylyn.tasks", "Date": "2013-05-17T13:37:12Z"},
{"Line": "=>1538", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (identifier == (org.tuleap.mylyn.task.internal.core.util.ITuleapConstants.ANONYMOUS_USER_INFO_IDENTIFIER)) { userInfo = new org.tuleap.mylyn.task.internal.core.wsdl.soap.v1.UserInfo(java.lang.Integer.valueOf(identifier).toString(), org.tuleap.mylyn.task.internal.core.util.ITuleapConstants.ANONYMOUS_USER_INFO_USERNAME, java.lang.Integer.valueOf(ITuleapConstants.ANONYMOUS_USER_INFO_IDENTIFIER).toString(), org.tuleap.mylyn.task.internal.core.util.ITuleapConstants.ANONYMOUS_USER_INFO_REAL_NAME, org.tuleap.mylyn.task.internal.core.util.ITuleapConstants.ANONYMOUS_USER_INFO_EMAIL, org.tuleap.mylyn.task.internal.core.util.ITuleapConstants.ANONYMOUS_USER_INFO_LDAP_IDENTIFIER); }else { userInfo = codendiAPIPort.getUserInfo(sessionHash, identifier); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/371/buggy-version/org.tuleap.mylyn.task.core.src.org.tuleap.mylyn.task.internal.core.net.TuleapSoapConnector.java", "BodyUseAPI": ["java.lang.Integer.toString()", "org.tuleap.mylyn.task.internal.core.wsdl.soap.v1.CodendiAPIPortType.getUserInfo(java.lang.String,int)", "java.lang.Integer.valueOf(int)"], "Fixed commit": "09493378124e435f4ca0e690cf016760e8ca7a51", "Url": "https://api.github.com/repos/sbegaudeau/mylyn.tasks", "Date": "2013-05-17T13:37:12Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (catId != (-1)) { params.put(\"category\", productCategoryDataStore.find(catId)); params.put(\"products\", productDataStore.getBy(productCategoryDataStore.find(catId))); }else if (supId != (-1)) { params.put(\"supplier\", productSupplierDataStore.find(supId)); params.put(\"products\", productDataStore.getBy(productSupplierDataStore.find(supId))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/4734/buggy-version/src.main.java.com.codecool.shop.controller.ProductController.java", "BodyUseAPI": ["java.util.Map.put(java.lang.String,productCategoryDataStore.find(catId))", "com.codecool.shop.dao.ProductDao.getBy(productCategoryDataStore.find(catId))", "com.codecool.shop.dao.ProductCategoryDao.find(int)", "java.util.Map.put(java.lang.String,productDataStore.getBy(productCategoryDataStore.find(catId)))", "com.codecool.shop.dao.ProductCategoryDao.find(int)"], "Fixed commit": "301372d4a65aa4fb5fb4296c8214c07f34fc20b5", "Url": "https://api.github.com/repos/CodecoolBP20161/from-python-to-java-codecool-shop-mafl_a", "Date": "2016-11-16T11:31:57Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((InternalUtils.DATE_COMPARATOR.compare(newCurrentDate, InternalUtils.CURRENT_DATE)) > 0) { newCurrentDate = InternalUtils.CURRENT_DATE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/2879/buggy-version/qbank-calendar.src.main.java.com.metaphore.qbankcalendar.QBankCalendarView.java", "BodyUseAPI": [], "Fixed commit": "8aa0079aadf151a2bf77e0c190e93d43ac31a99c", "Url": "https://api.github.com/repos/Metaphore/qbank-calendar", "Date": "2014-10-30T12:04:32Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(org.smartsnip.core.Persistence.isInitialized())) { try { org.smartsnip.core.Persistence.initialize(); } catch (java.lang.IllegalAccessException e) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/6809/buggy-version/org.smartsnip.src.org.smartsnip.server.Session.java", "BodyUseAPI": [], "Fixed commit": "3a3829bbbac7fc8e3f3b3d5a0b22c9df9c0b5835", "Url": "https://api.github.com/repos/grisu48/SEPM-SS12-Project", "Date": "2012-05-07T08:29:59Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mGameState) == (com.hf.goalkeeper.core.managers.TimeManager.GAME_NOT_STARTED)) { currentGameThread = new com.hf.goalkeeper.core.managers.TimeManager.TimerThread(gameSeconds); currentGameThread.start(); mGameState = com.hf.goalkeeper.core.managers.TimeManager.GAME_ONGOING; mViewHandler.matchStarted(); mViewHandler.updateMatchTime(gameSeconds); }else { mViewHandler.updateMatchTime(((mMatchSeconds) - (currentGameThread.getSecond()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/2894/buggy-version/app.src.main.java.com.hf.goalkeeper.core.managers.TimeManager.java", "BodyUseAPI": [], "Fixed commit": "769b49e76fbb1732d4823809fa735eb05e663680", "Url": "https://api.github.com/repos/hananfucs/goalkeeper", "Date": "2017-07-23T18:39:58Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Context.getExternalFilesDir(<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (ret == null) { ret = ctx.getFilesDir(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/4392/buggy-version/app.src.main.java.com.grok.androidicb.PathUtils.java", "BodyUseAPI": [], "Fixed commit": "cf68e81927154b269c3183413b613e0ffe7cbc84", "Url": "https://api.github.com/repos/hoche/AndroidICB", "Date": "2017-11-14T04:41:47Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.hadoop.hbase.regionserver.compactions.DateTieredCompactionPolicy.partitionFilesToBuckets(java.lang.Iterable<org.apache.hadoop.hbase.regionserver.StoreFile>,comConf.getBaseWindowMillis(),comConf.getWindowsPerTier(),long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((buckets.size()) >= (storeConfigInfo.getBlockingFileCount())) { org.apache.hadoop.hbase.regionserver.compactions.DateTieredCompactionPolicy.LOG.warn((((((\"Number of compaction buckets:\" + (buckets.size())) + \", exceeds blocking file count setting: \") + (storeConfigInfo.getBlockingFileCount())) + \", either increase hbase.hstore.blockingStoreFiles or \") + \"reduce the number of tiered compaction windows\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/3947/buggy-version/hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.compactions.DateTieredCompactionPolicy.java", "BodyUseAPI": ["java.util.List<java.util.ArrayList<org.apache.hadoop.hbase.regionserver.StoreFile>>.size()", "org.apache.commons.logging.Log.warn((((((\"Number of compaction buckets:\" + (buckets.size())) + \", exceeds blocking file count setting: \") + (storeConfigInfo.getBlockingFileCount())) + \", either increase hbase.hstore.blockingStoreFiles or \") + \"reduce the number of tiered compaction windows\"))", "org.apache.hadoop.hbase.regionserver.compactions.DateTieredCompactionPolicy.getBlockingFileCount()"], "Fixed commit": "ab2904c7d7d6136bc767aed9bec2e5e54a2634b7", "Url": "https://api.github.com/repos/apache/hbase", "Date": "2016-03-02T02:27:40Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((taskDetails) == null) || (taskDetails.isEmpty())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/2704/buggy-version/src.Parser.IndexParser.java", "BodyUseAPI": [], "Fixed commit": "126dcf3d61df07bb03785c14194d598821224e80", "Url": "https://api.github.com/repos/cs2103jan2016-t09-2j/main", "Date": "2016-03-27T17:11:59Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(com.google.common.base.Objects.equal(null, subscription.getMetadata().getFeed()))) { subscriptionCache.removeFeedSubscriptions(subscription.getMetadata().getFeed()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/2052/buggy-version/src.main.java.com.ning.metrics.collector.processing.db.DatabaseSubscriptionStorage.java", "BodyUseAPI": ["subscription.getMetadata().getFeed()", "com.ning.metrics.collector.processing.db.SubscriptionCache.removeFeedSubscriptions(subscription.getMetadata().getFeed())", "com.ning.metrics.collector.processing.db.model.Subscription.getMetadata()"], "Fixed commit": "04928f3c4da4de7d78f17dd02a5cdd55feb7d2e5", "Url": "https://api.github.com/repos/ning/collector", "Date": "2013-11-11T23:06:07Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (phpVariable != null) { java.util.HashSet<edu.iastate.analysis.references.PhpVariableDecl> phpVariableDecls = helperEnv.getVariableDecls(phpVariable); dataFlowManager.addDataFlow(new java.util.HashSet<edu.iastate.analysis.references.DeclaringReference>(phpVariableDecls), phpVariableRef); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/8273/buggy-version/WebParsers.src.main.java.edu.iastate.analysis.references.detection.PhpVisitor.java", "BodyUseAPI": ["edu.iastate.analysis.references.detection.PhpVisitor.HelperEnv.getVariableDecls(edu.iastate.symex.core.PhpVariable)"], "Fixed commit": "32794a217218412a1f3d57e64d32d067d133197b", "Url": "https://api.github.com/repos/git1997/VarAnalysis", "Date": "2014-12-19T07:21:02Z"},
{"Line": "=>338", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(hasSwitchedThisTick)) { worldObj.setBlockMetadataWithNotify(xCoord, yCoord, zCoord, (1 - (getBlockMetadata())), 3); hasSwitchedThisTick = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/4464/buggy-version/src.pneumaticCraft.common.tileentity.TileEntityAssemblyIOUnit.java", "BodyUseAPI": [], "Fixed commit": "3db934c90dba655dabc5c1bac8f2749880e0e4b2", "Url": "https://api.github.com/repos/MineMaarten/PneumaticCraft", "Date": "2015-08-03T15:49:32Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (adlSource != null) { if ((java.lang.System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\")) >= 0) { adlSource = adlSource.substring(1, adlSource.lastIndexOf(\":\")); }else { adlSource = adlSource.substring(0, adlSource.lastIndexOf(\":\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/3074/buggy-version/src.main.java.org.ow2.mind.adl.annotations.DotWriter.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.lastIndexOf(java.lang.String)"], "Fixed commit": "ba01109c7a49d77194f935bc3b502030ff0b2cec", "Url": "https://api.github.com/repos/SESA188919/dumpdot-annotation", "Date": "2014-05-21T11:59:48Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getCause()) instanceof java.lang.RuntimeException) { android.util.Log.e(getClass().getSimpleName(), ((\"Async Service Call failed! \" + \"Exception: \") + (e.getCause().getLocalizedMessage())), e); throw ((java.lang.RuntimeException) (e.getCause())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/8271/buggy-version/UBBAndroidClient.src.de.g18.ubb.android.client.communication.WebServiceDispatcher.java", "BodyUseAPI": ["java.lang.Throwable.getLocalizedMessage()", "java.util.concurrent.ExecutionException.getCause()", "android.util.Log.e(java.lang.String,java.lang.String,java.util.concurrent.ExecutionException)", "java.util.concurrent.ExecutionException.getCause()"], "Fixed commit": "ac3e85e5ddb5a509d6b25ffac40eec2b204109c5", "Url": "https://api.github.com/repos/kevinhuber/ultimate-budget-book", "Date": "2012-08-28T18:49:31Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (e != null) { if ((e.getTargetException()) instanceof de.g18.ubb.common.service.exception.ServiceException) { throw new de.g18.ubb.android.client.communication.WebServiceDispatcher.DelegatingServiceException(((de.g18.ubb.common.service.exception.ServiceException) (e.getTargetException()))); } if ((e.getTargetException()) instanceof java.lang.RuntimeException) { throw ((java.lang.RuntimeException) (e.getTargetException())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/8271/buggy-version/UBBAndroidClient.src.de.g18.ubb.android.client.communication.WebServiceDispatcher.java", "BodyUseAPI": ["java.lang.reflect.InvocationTargetException.getTargetException()", "java.lang.reflect.InvocationTargetException.getTargetException()", "java.lang.reflect.InvocationTargetException.getTargetException()", "java.lang.reflect.InvocationTargetException.getTargetException()"], "Fixed commit": "ac3e85e5ddb5a509d6b25ffac40eec2b204109c5", "Url": "https://api.github.com/repos/kevinhuber/ultimate-budget-book", "Date": "2012-08-28T18:49:31Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(activity.isFinishing())) { progressDialog.show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/4506/buggy-version/evercamPlay.src.main.java.io.evercam.androidapp.custom.CustomProgressDialog.java", "BodyUseAPI": [], "Fixed commit": "cb9b2b4a391cf75e5da783c460b96e3b1038a909", "Url": "https://api.github.com/repos/evercam/evercam-android", "Date": "2016-01-18T15:33:14Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (thriftClientInfo.isStatsPublisherEnabled()) { java.util.ArrayList<org.wso2.carbon.databridge.agent.thrift.lb.DataPublisherHolder> dataPublisherHolders = new java.util.ArrayList<org.wso2.carbon.databridge.agent.thrift.lb.DataPublisherHolder>(); org.wso2.carbon.databridge.agent.thrift.lb.DataPublisherHolder aNode = new org.wso2.carbon.databridge.agent.thrift.lb.DataPublisherHolder(null, buildUrl(thriftClientInfo), thriftClientInfo.getUsername(), thriftClientInfo.getPassword()); dataPublisherHolders.add(aNode); org.wso2.carbon.databridge.agent.thrift.lb.ReceiverGroup group = new org.wso2.carbon.databridge.agent.thrift.lb.ReceiverGroup(dataPublisherHolders); receiverGroups.add(group); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/6653/buggy-version/components.org.apache.stratos.common.src.main.java.org.apache.stratos.common.statistics.publisher.ThriftStatisticsPublisher.java", "BodyUseAPI": ["org.apache.stratos.common.statistics.publisher.ThriftClientInfo.getPassword()", "org.apache.stratos.common.statistics.publisher.ThriftClientInfo.getUsername()", "org.apache.stratos.common.statistics.publisher.ThriftStatisticsPublisher.buildUrl(org.apache.stratos.common.statistics.publisher.ThriftClientInfo)"], "Fixed commit": "1fe78ccad564f782576f8352ae46fe49355a3ae4", "Url": "https://api.github.com/repos/Thanu/stratos", "Date": "2015-11-29T09:24:35Z"},
{"Line": "=>366", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.stableMemTable) != null) { org.act.dynproperty.impl.MemTable.MemTableIterator stableIterator = this.stableMemTable.iterator(); stableIterator.seek(searchKey.encode()); while (stableIterator.hasNext()) { java.util.Map.Entry<org.act.dynproperty.util.Slice, org.act.dynproperty.util.Slice> entry = stableIterator.next(); org.act.dynproperty.impl.InternalKey key = new org.act.dynproperty.impl.InternalKey(entry.getKey()); if ((((key.getId().equals(idSlice)) && ((key.getStartTime()) <= endTime)) && ((key.getValueType().getPersistentId()) != (ValueType.INVALID.getPersistentId()))) && ((key.getValueType().getPersistentId()) != (ValueType.DELETION.getPersistentId()))) { callback.onCall(entry.getValue()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/3863/buggy-version/src.main.java.org.act.dynproperty.impl.UnstableLevel.java", "BodyUseAPI": [], "Fixed commit": "237edf35ebee87cff3668930fdf727d39000005c", "Url": "https://api.github.com/repos/TGraphDB/temporal-storage", "Date": "2016-03-02T01:17:51Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((p != null) && (!(p.isEmpty()))) { page = java.lang.Integer.parseInt(req.getParameter(rosa.iiif.search.endpoint.IIIFSearchServlet.PARAM_PAGE)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/4449/buggy-version/rosa-iiif.rosa-iiif-search.rosa-iiif-search-endpoint.src.main.java.rosa.iiif.search.endpoint.IIIFSearchServlet.java", "BodyUseAPI": [], "Fixed commit": "fad8e74a5150f27a18ff17475889eca0ee6d4f81", "Url": "https://api.github.com/repos/jhu-digital-manuscripts/rosa2", "Date": "2015-12-16T15:44:20Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(reunion.getEstado().equals(DTEstado.LISTADO))) { throw new java.lang.Exception(\"La lista no se ha sido habilitada a\u00fan.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/1084/buggy-version/Release.ArquitecturaRifa.src.java.org.arqrifa.logica.ControladorReuniones.java", "BodyUseAPI": [], "Fixed commit": "11b100c0fd616644cc4656f36aaf57b2821a0141", "Url": "https://api.github.com/repos/scaroni92/arqrifa", "Date": "2016-11-29T19:32:56Z"},
{"Line": "=>1538", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.restcomm.connect.interpreter.rcml.Tag.attribute(GatherAttributes.ATTRIBUTE_INPUT)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (typeAttr == null) { inputType = Collect.Type.DTMF; }else { inputType = Collect.Type.parseOrDefault(typeAttr.value(), Collect.Type.DTMF); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/2249/buggy-version/restcomm.restcomm.interpreter.src.main.java.org.restcomm.connect.interpreter.BaseVoiceInterpreter.java", "BodyUseAPI": ["org.restcomm.connect.interpreter.rcml.Attribute.value()", "Collect.Type.parseOrDefault(typeAttr.value(),Collect.Type.DTMF)"], "Fixed commit": "e367a4b3187d37caad0d4d10fa7d906e58e3d02a", "Url": "https://api.github.com/repos/RestComm/Restcomm-Connect", "Date": "2017-07-18T13:21:41Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sameYear && sameMonth) && sameDay) { end = (\"\\n\" + (seedu.commando.commons.core.DateTimePrettifier.getDay(endDateTime))) + end; }else { start = (\" \" + (seedu.commando.commons.core.DateTimePrettifier.getDay(startDateTime))) + start; end = (\" \" + (seedu.commando.commons.core.DateTimePrettifier.getDay(endDateTime))) + end; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/8286/buggy-version/src.main.java.seedu.commando.commons.core.DateTimePrettifier.java", "BodyUseAPI": [], "Fixed commit": "c8b07b5a5dda88c750b853c4562658673fbf351f", "Url": "https://api.github.com/repos/CS2103AUG2016-W13-C3/main", "Date": "2016-11-07T10:57:20Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentSong) != null) { playPauseEvent(view); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/470/buggy-version/app.src.main.java.dm.audiostreamerdemo.activity.MusicActivity.java", "BodyUseAPI": [], "Fixed commit": "843796a91dcdc45f4c2becba1db9fe3c46cb890a", "Url": "https://api.github.com/repos/dibakarece/DMAudioStreamer", "Date": "2017-10-22T11:39:14Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (property.datatype.equals(\"Double\")) { property.isDouble = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/7087/buggy-version/modules.swagger-codegen.src.main.java.io.swagger.codegen.languages.LoopBackSwiftClientCodegen.java", "BodyUseAPI": [], "Fixed commit": "d4a34e99a6764cd96f5f1c54987c1f0c17534144", "Url": "https://api.github.com/repos/ConnectCorp/swagger-codegen", "Date": "2016-05-09T08:54:06Z"},
{"Line": "=>271", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (property.datatype.equals(\"Int\")) { property.isInteger = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/7087/buggy-version/modules.swagger-codegen.src.main.java.io.swagger.codegen.languages.LoopBackSwiftClientCodegen.java", "BodyUseAPI": [], "Fixed commit": "d4a34e99a6764cd96f5f1c54987c1f0c17534144", "Url": "https://api.github.com/repos/ConnectCorp/swagger-codegen", "Date": "2016-05-09T08:54:06Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (filter_friends) { if (friends[i].startsWith(fr.lengrand.knowmysize.FriendsProvider.marker)) { new_friends.add(to_friend_name(friends[i])); } }else { new_friends.add(to_friend_name(friends[i])); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/1386/buggy-version/src.fr.lengrand.knowmysize.FriendsProvider.java", "BodyUseAPI": [], "Fixed commit": "f54ada7f60835a0635fb155ee1318647b98e514d", "Url": "https://api.github.com/repos/jlengrand/KnowMySize", "Date": "2012-11-09T07:10:03Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pendingReq) != null) { node.log(new util.Message(util.Constants.ABORT)); pendingReq = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/3244/buggy-version/src.tpc.TPCLog.java", "BodyUseAPI": [], "Fixed commit": "93609d5b73c3616c616662b3c129b28e562dd696", "Url": "https://api.github.com/repos/PATHofanlu/distributed", "Date": "2015-03-04T22:52:35Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (parts[0].equals(\"exit\")) { break; }else { java.lang.System.out.println(\"Command not recognized - use help to see what commands you can use\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/3441/buggy-version/src.server.Server.java", "BodyUseAPI": [], "Fixed commit": "a38134404e3dfc87eed864f2be1a83806995077c", "Url": "https://api.github.com/repos/tristanSzucs/server", "Date": "2016-03-29T22:52:28Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getIntent().getStringExtra(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (title != null) { actionBar.setTitle(title); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/9262/buggy-version/app.src.main.java.com.github.moko256.twicalico.SettingsActivity.java", "BodyUseAPI": ["android.support.v7.app.ActionBar.setTitle(java.lang.String)"], "Fixed commit": "e38b20944e3f38c2afbd8381a1c58b84d5698866", "Url": "https://api.github.com/repos/moko256/twitlatte", "Date": "2017-03-18T13:25:28Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((post.getMessage()) == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/1828/buggy-version/src.main.java.edu.rit.asksg.domain.Facebook.java", "BodyUseAPI": [], "Fixed commit": "b57aa56309d5f38ad385b99cd42a6976040be731", "Url": "https://api.github.com/repos/ithunt/asksg", "Date": "2013-03-30T20:55:25Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((group.getPurchases().size()) == 0) { findViewById(R.id.content_with_purchases).setVisibility(View.GONE); findViewById(R.id.content_without_purchases).setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/1884/buggy-version/app.src.main.java.group3.myapplicationlab2.GroupActivityExpense.java", "BodyUseAPI": [], "Fixed commit": "5964c6d752fa65a3ab0d2b45ae3f4fb808a7d9ef", "Url": "https://api.github.com/repos/mad-group/Lab2", "Date": "2017-06-11T19:51:05Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mIsRegUIShown) { toggleSignUpPanel(false); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/6930/buggy-version/src.com.intalker.borrow.HomeActivity.java", "BodyUseAPI": [], "Fixed commit": "e7476903b337854139aab343932619737bf0c04d", "Url": "https://api.github.com/repos/tomdong/borrow", "Date": "2013-04-04T06:10:20Z"},
{"Line": "=>593", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((encounteredAll && (!containsOne)) || (anyHaveStrideOne(indexes))) this.offset += org.nd4j.linalg.util.ArrayUtil.dotProductLong(accumOffsets, accumStrides); else this.offset += (org.nd4j.linalg.util.ArrayUtil.dotProductLong(accumOffsets, accumStrides)) / (java.lang.Math.max(1, numIntervals));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/660/buggy-version/nd4j-backends.nd4j-api-parent.nd4j-api.src.main.java.org.nd4j.linalg.indexing.ShapeOffsetResolution.java", "BodyUseAPI": [], "Fixed commit": "565325fdf3456d70daaf14995cf893bc964acb3a", "Url": "https://api.github.com/repos/deeplearning4j/nd4j", "Date": "2017-05-05T02:19:43Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((!(uri.contains(\" \"))) && (!(uri.equals(\"\")))) && (!(uri.contains(\"%\")))) { keywordAndValues.add(uri); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/742/buggy-version/SearchEngineBackend.src.createGraph.CreationGraphe.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "661ea7eee0a9a3e2462072efe38ea09e7d122817", "Url": "https://api.github.com/repos/Kpitolin/CleverSearch", "Date": "2014-11-05T23:44:22Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (nameA.contains(\"\\'\")) nameA = nameA.replaceAll(\"\\'\", \"`\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/2770/buggy-version/gmfb.src.main.java.gmfb.CreateJson.java", "BodyUseAPI": [], "Fixed commit": "cb29fdc47a6c5462f6fc310fcff3c42b3650bc93", "Url": "https://api.github.com/repos/NokiPls/fbanalytics", "Date": "2014-05-30T15:45:55Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (self.contains(\"\\'\")) self = self.replaceAll(\"\\'\", \"`\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/2770/buggy-version/gmfb.src.main.java.gmfb.CreateJson.java", "BodyUseAPI": [], "Fixed commit": "cb29fdc47a6c5462f6fc310fcff3c42b3650bc93", "Url": "https://api.github.com/repos/NokiPls/fbanalytics", "Date": "2014-05-30T15:45:55Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (nameB.contains(\"'\")) nameB = nameB.replace(\"'\", \"`\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/2770/buggy-version/gmfb.src.main.java.gmfb.CreateJson.java", "BodyUseAPI": [], "Fixed commit": "cb29fdc47a6c5462f6fc310fcff3c42b3650bc93", "Url": "https://api.github.com/repos/NokiPls/fbanalytics", "Date": "2014-05-30T15:45:55Z"},
{"Line": "=>636", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (inclusions != null) { for (java.lang.String inclusion : inclusions) { if (slashedName.startsWith(inclusion)) { continue mainLoop; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/2571/buggy-version/springloaded.src.main.java.org.springsource.loaded.TypeRegistry.java", "BodyUseAPI": [], "Fixed commit": "b03bce2e5e34703ae184c65fc4f4f2d1d2d88865", "Url": "https://api.github.com/repos/graemerocher/spring-loaded", "Date": "2015-06-26T13:55:58Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.facebook.Profile.getCurrentProfile()) != null) { com.packants.android.Server.PackAntsServer.userName = com.facebook.Profile.getCurrentProfile().getName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/5894/buggy-version/app.src.main.java.com.packants.android.Fragments.HomeFragment.java", "BodyUseAPI": [], "Fixed commit": "b473692bf28df8ac2aff08cd1c917427c8cc8ac1", "Url": "https://api.github.com/repos/AntsCrop/androidPack", "Date": "2016-10-11T15:38:33Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.facebook.Profile.getCurrentProfile()) != null) { com.packants.android.Server.PackAntsServer.userName = com.facebook.Profile.getCurrentProfile().getName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/5894/buggy-version/app.src.main.java.com.packants.android.Activities.LobbyActivity.java", "BodyUseAPI": [], "Fixed commit": "b473692bf28df8ac2aff08cd1c917427c8cc8ac1", "Url": "https://api.github.com/repos/AntsCrop/androidPack", "Date": "2016-10-11T15:38:33Z"},
{"Line": "=>330", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.length) <= (currIndex)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/983/buggy-version/plugins.org.python.pydev.parser.src.org.python.pydev.parser.fastparser.FastDefinitionsParser.java", "BodyUseAPI": [], "Fixed commit": "eea206ca3ff710bcdb753cc7cf82499b139f691a", "Url": "https://api.github.com/repos/fabioz/Pydev", "Date": "2013-09-29T10:39:08Z"},
{"Line": "=>320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.length) <= (currIndex)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/983/buggy-version/plugins.org.python.pydev.parser.src.org.python.pydev.parser.fastparser.FastDefinitionsParser.java", "BodyUseAPI": [], "Fixed commit": "eea206ca3ff710bcdb753cc7cf82499b139f691a", "Url": "https://api.github.com/repos/fabioz/Pydev", "Date": "2013-09-29T10:39:08Z"},
{"Line": "=>372", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sat.hasMpptSettings) { if ((sat.mpptResistanceError) != (java.lang.Double.parseDouble(mpptResistanceError.getText()))) { sat.mpptResistanceError = java.lang.Double.parseDouble(mpptResistanceError.getText()); refreshTabs = true; } if ((sat.mpptSensorOffThreshold) != (java.lang.Integer.parseInt(mpptSensorOffThreshold.getText()))) { sat.mpptSensorOffThreshold = java.lang.Integer.parseInt(mpptSensorOffThreshold.getText()); refreshTabs = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/1088/buggy-version/src.gui.SpacecraftFrame.java", "BodyUseAPI": [], "Fixed commit": "82766792dd5ca5a8825a127ccb78ab40344a66ff", "Url": "https://api.github.com/repos/ac2cz/FoxTelem", "Date": "2017-10-07T00:55:06Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (len > 0) { int ret = is.read(b, off, len); if (ret > 0) { n += ret; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/6162/buggy-version/src.BinaryWithHeaderStream.java", "BodyUseAPI": ["java.io.InputStream.read(byte[],int,int)"], "Fixed commit": "2c360bbda588286f683f865cb43b7c0e146e816b", "Url": "https://api.github.com/repos/diotteo/java-commons", "Date": "2016-03-08T06:31:15Z"},
{"Line": "=>866", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((conn.getId()) != null) { savedConn = connectionService.getConnectionById(conn.getId()); }else { savedConn = connectionService.getConnectionByName(conn.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/2680/buggy-version/src.org.pentaho.platform.dataaccess.datasource.wizard.service.impl.DatasourceResource.java", "BodyUseAPI": ["org.pentaho.platform.dataaccess.datasource.wizard.service.impl.ConnectionServiceImpl.getConnectionById(conn.getId())", "org.pentaho.database.model.IDatabaseConnection.getName()", "org.pentaho.database.model.IDatabaseConnection.getId()", "org.pentaho.platform.dataaccess.datasource.wizard.service.impl.ConnectionServiceImpl.getConnectionByName(conn.getName())"], "Fixed commit": "4b3ca57e261c33892d81379241400a6e26e7132f", "Url": "https://api.github.com/repos/bmorrise/data-access", "Date": "2014-09-03T15:50:46Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (errorMessage != null) model.addAttribute(tran.example.service.LoginFormControllerService.MESSAGE_KEY, errorMessage);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/6652/buggy-version/src.main.java.tran.example.service.LoginFormControllerService.java", "BodyUseAPI": ["org.springframework.ui.ModelMap.addAttribute(java.lang.String,java.lang.String)"], "Fixed commit": "65d00dc0f66ca950f8ef0956df5410105a0e44d5", "Url": "https://api.github.com/repos/ttran9/Spring-Blog-Heroku", "Date": "2017-01-01T23:22:31Z"},
{"Line": "=>1468", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.mifosplatform.portfolio.investment.data.InvestmentBatchJobData.getLoanMaturityDate()", "org.mifosplatform.portfolio.investment.data.InvestmentBatchJobData.getLoanStatusId()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((loanStatusId == 600) && (loanMaturityDate.before(investmentDistributionDate))) { sb.append(\"Due For Realization\"); investmentId.add(loanId); }else if (loanMaturityDate.after(investmentDistributionDate)) { sb.append(\"Not Matured\"); }else if ((loanStatusId == 300) && (loanMaturityDate.before(investmentDistributionDate))) { sb.append(\"Due For Realization\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/3880/buggy-version/mifosng-provider.src.main.java.org.mifosplatform.scheduledjobs.service.ScheduledJobRunnerServiceImpl.java", "BodyUseAPI": ["java.util.Date.after(java.util.Date)", "java.util.Date.before(java.util.Date)"], "Fixed commit": "62e9e64e546903bb70b3bd450850a59aaf7cbfe8", "Url": "https://api.github.com/repos/confluxtoo/caritasmifosx", "Date": "2015-12-23T07:45:47Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mTopic.getPushId()) != null) { android.content.Intent intent = new android.content.Intent(); intent.putExtra(\"topic\", org.parceler.Parcels.wrap(mTopic)); setResult(3, intent); finish(); }else { finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/6440/buggy-version/app.src.main.java.com.yusuf.programmerhelper.ui.FlashcardsActivity.java", "BodyUseAPI": ["org.parceler.Parcels.wrap(com.yusuf.programmerhelper.models.Topic)", "android.content.Intent.putExtra(java.lang.String,org.parceler.Parcels.wrap(mTopic))"], "Fixed commit": "6a5569098140b901118bc8167ae2079460eacaa6", "Url": "https://api.github.com/repos/yqedan/ProgrammerHelper", "Date": "2017-04-17T19:11:00Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (resultCode != 0) { topic = org.parceler.Parcels.unwrap(data.getParcelableExtra(\"topic\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/6440/buggy-version/app.src.main.java.com.yusuf.programmerhelper.ui.FlashcardCategoriesActivity.java", "BodyUseAPI": [], "Fixed commit": "6a5569098140b901118bc8167ae2079460eacaa6", "Url": "https://api.github.com/repos/yqedan/ProgrammerHelper", "Date": "2017-04-17T19:11:00Z"},
{"Line": "=>862", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.hazelcast.config.XmlConfigBuilder.cleanNodeName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (\"optimize-queries\".equals(nodeName)) { mapConfig.setOptimizeQueries(checkTrue(value)); }else if (\"wan-replication-ref\".equals(nodeName)) { mapWanReplicationRefHandle(n, mapConfig); }else if (\"indexes\".equals(nodeName)) { mapIndexesHandle(n, mapConfig); }else if (\"entry-listeners\".equals(nodeName)) { mapEntryListenerHandle(n, mapConfig); }else if (\"partition-strategy\".equals(nodeName)) { mapConfig.setPartitioningStrategyConfig(new com.hazelcast.config.PartitioningStrategyConfig(value)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/8251/buggy-version/hazelcast.src.main.java.com.hazelcast.config.XmlConfigBuilder.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "6bbb43dcdc664ea5f44571648d9d2a711673678c", "Url": "https://api.github.com/repos/hazelcast/hazelcast", "Date": "2014-09-17T07:28:22Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == 0) { i++; continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/6896/buggy-version/src.main.java.org.harmony_analyser.application.SegmentationDrawPanel.java", "BodyUseAPI": [], "Fixed commit": "1cb0c04aeece2bdffcfd2798302413eaebdf4ab4", "Url": "https://api.github.com/repos/lacimarsik/harmony-analyser", "Date": "2016-09-07T15:29:47Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.social.yahoo.api.impl.YahooErrorHandler.extractErrorDetailsFromResponse(org.springframework.http.client.ClientHttpResponse)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (errorDetails.containsKey(\"error\")) { java.lang.Object errorObject = errorDetails.get(\"error\"); if (errorObject instanceof java.lang.String) { errorMessage = errorObject.toString(); }else if (errorObject instanceof java.util.Map) { com.fasterxml.jackson.databind.ObjectMapper om = new com.fasterxml.jackson.databind.ObjectMapper(); java.util.Map<java.lang.String, java.lang.Object> mappedObject = om.convertValue(errorObject, new com.fasterxml.jackson.core.type.TypeReference<java.util.Map<java.lang.String, java.lang.Object>>() {}); if (mappedObject.containsKey(\"description\")) { errorMessage = mappedObject.get(\"description\").toString(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/5997/buggy-version/src.main.java.org.springframework.social.yahoo.api.impl.YahooErrorHandler.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Fixed commit": "461f1abc9be63d65b4f0171ff780ed63f29fca5b", "Url": "https://api.github.com/repos/edwardluzi/spring-social-yahoo", "Date": "2016-05-14T13:33:55Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.gawdl3y.android.tasktimer.TaskTimerApplication.DEBUG) android.util.Log.v(com.gawdl3y.android.tasktimer.adapters.TaskListAdapter.TAG, \"Getting view\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/9235/buggy-version/android.src.com.gawdl3y.android.tasktimer.adapters.TaskListAdapter.java", "BodyUseAPI": [], "Fixed commit": "09fd883070d416dcaaed51110d11b609bf45f88a", "Url": "https://api.github.com/repos/Gawdl3y/task-timer", "Date": "2013-03-14T03:35:00Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (app.debug) android.util.Log.v(com.gawdl3y.android.tasktimer.context.MainActivity.TAG, \"Created\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/9235/buggy-version/android.src.com.gawdl3y.android.tasktimer.context.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "09fd883070d416dcaaed51110d11b609bf45f88a", "Url": "https://api.github.com/repos/Gawdl3y/task-timer", "Date": "2013-03-14T03:35:00Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((audioManager.getStreamVolume(AudioManager.STREAM_MUSIC)) > 0) soundCheckBox.setChecked(false); else soundCheckBox.setChecked(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/7548/buggy-version/src.com.github.AndroidGames.QuizGames.OptionsActivity.java", "BodyUseAPI": [], "Fixed commit": "4903e328de8035713632871bbab767bf216d1ca7", "Url": "https://api.github.com/repos/AndroidGames/QuizGame", "Date": "2013-09-22T13:39:30Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.PATHoleilu.hutool.CollectionUtil.isEmpty(paramMap)) { return com.PATHoleilu.hutool.StrUtil.EMPTY; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/5138/buggy-version/src.main.java.com.PATHoleilu.hutool.http.HttpUtil.java", "BodyUseAPI": [], "Fixed commit": "37e706ebd8dd4c9a6ca9b56292fb560b71f5863d", "Url": "https://api.github.com/repos/looly/hutool", "Date": "2015-09-17T01:27:59Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (targetPage > totalPageNumber) { targetPage = totalPageNumber; targetOffset = (action.getCount()) * targetPage; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/5104/buggy-version/zanata-war.src.main.java.org.zanata.webtrans.server.rpc.GetTransUnitListHandler.java", "BodyUseAPI": [], "Fixed commit": "39ed8067d922d2b09572be7b25d3fa34aec02cb1", "Url": "https://api.github.com/repos/zanata/zanata", "Date": "2013-04-18T01:15:25Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.aanguita.jacuzzi.maps.DoubleMap<java.lang.Long, java.lang.String>.removeReverse(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (oldTimestamp != null) { localStorage.removeItem(jacz.peerengineclient.data.RemotePeerShare.HASH_CATEGORY, java.lang.Long.toString(oldTimestamp)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/7485/buggy-version/src.main.java.jacz.peerengineclient.data.RemotePeerShare.java", "BodyUseAPI": ["org.aanguita.jacuzzi.io.serialization.localstorage.VersionedLocalStorage.removeItem(java.lang.String,java.lang.String)", "java.lang.Long.toString(java.lang.Long)"], "Fixed commit": "5cf5795814cea9257a4a39ce71a3e39ef2818101", "Url": "https://api.github.com/repos/albertoanguita/jaczpeerengineclient", "Date": "2016-07-12T23:10:04Z"},
{"Line": "=>541", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isWholeCollection())) mDeckId = col.getDecks().selected(); else mDeckId = -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/8577/buggy-version/AnkiDroid.src.main.java.com.ichi2.anki.Statistics.java", "BodyUseAPI": [], "Fixed commit": "a53ca8af9b026a4ef9366dfc387ee81e6333f7f3", "Url": "https://api.github.com/repos/ankidroid/Anki-Android", "Date": "2017-03-21T06:12:10Z"},
{"Line": "=>682", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isWholeCollection())) mDeckId = col.getDecks().selected(); else mDeckId = -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/8577/buggy-version/AnkiDroid.src.main.java.com.ichi2.anki.Statistics.java", "BodyUseAPI": [], "Fixed commit": "a53ca8af9b026a4ef9366dfc387ee81e6333f7f3", "Url": "https://api.github.com/repos/ankidroid/Anki-Android", "Date": "2017-03-21T06:12:10Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.ide.ui.laf.ModernButtonlessScrollBarUI.isVertical()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (vertical) { h -= 1; }else { w -= 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/337/buggy-version/platform.platform-impl.src.com.intellij.ide.ui.laf.ModernButtonlessScrollBarUI.java", "BodyUseAPI": [], "Fixed commit": "80f0814eb29014930362866222ca35390892a32c", "Url": "https://api.github.com/repos/consulo/consulo", "Date": "2014-04-27T16:39:31Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.iabako.shared.tools.GenericTools.isEmpty(customFieldValues)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/773/buggy-version/src.main.java.org.iabako.server.dao.business.CustomFieldDAO.java", "BodyUseAPI": [], "Fixed commit": "92381d664225a60c7e9ea9589dd0cc493280d255", "Url": "https://api.github.com/repos/iabakoproject/iabako", "Date": "2016-10-24T14:37:07Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (o == (this)) return true; else if (o == null) return false; else if ((getClass()) != (o.getClass())) return false; else { cs240.byu.edu.spellcorrector_startingcode_android.StudentPackage.Trie other = ((cs240.byu.edu.spellcorrector_startingcode_android.StudentPackage.Trie) (o)); if ((hashCode()) != (other.hashCode())) return false; else if (((word_count) != (other.word_count)) || ((node_count) != (other.node_count))) return false; else return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/3780/buggy-version/app.src.main.java.cs240.byu.edu.spellcorrector_startingcode_android.StudentPackage.Trie.java", "BodyUseAPI": ["java.lang.Object.getClass()"], "Fixed commit": "f2a08d8f4ff01280bca1dcd824819e840ef284b3", "Url": "https://api.github.com/repos/scottcrossen/spell-checker", "Date": "2016-09-12T22:12:37Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((checkTaskType(argsTokenizer)) == (deadlineTaskWithTimeNoDate)) { return new typetask.logic.commands.IncorrectCommand(java.lang.String.format(typetask.logic.parser.MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE)); }else { return new typetask.logic.commands.AddCommand(argsTokenizer.getPreamble().get(), argsTokenizer.getValue(typetask.logic.parser.CliSyntax.PREFIX_DATE).get()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/826/buggy-version/src.main.java.typetask.logic.parser.AddCommandParser.java", "BodyUseAPI": ["typetask.logic.parser.ArgumentTokenizer.getPreamble()", "typetask.logic.parser.ArgumentTokenizer.getValue(typetask.logic.parser.CliSyntax.PREFIX_DATE)", "argsTokenizer.getValue(typetask.logic.parser.CliSyntax.PREFIX_DATE).get()", "argsTokenizer.getPreamble().get()"], "Fixed commit": "0b6d34ee6477650aa9302b8ccf84ed492808c136", "Url": "https://api.github.com/repos/CS2103JAN2017-T09-B2/main", "Date": "2017-03-15T13:28:43Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (argsTokenizer.getValue(typetask.logic.parser.CliSyntax.PREFIX_DATE).isPresent()) { return deadlineTaskWithoutTime; }else if (argsTokenizer.getValue(typetask.logic.parser.CliSyntax.PREFIX_TIME).isPresent()) { return deadlineTaskWithTimeNoDate; }else { return floatingTask; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/826/buggy-version/src.main.java.typetask.logic.parser.AddCommandParser.java", "BodyUseAPI": ["argsTokenizer.getValue(typetask.logic.parser.CliSyntax.PREFIX_TIME).isPresent()", "typetask.logic.parser.ArgumentTokenizer.getValue(typetask.logic.parser.CliSyntax.PREFIX_TIME)"], "Fixed commit": "0b6d34ee6477650aa9302b8ccf84ed492808c136", "Url": "https://api.github.com/repos/CS2103JAN2017-T09-B2/main", "Date": "2017-03-15T13:28:43Z"},
{"Line": "=>351", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tempFileBean.getStudyFile()) instanceof edu.harvard.iq.dvn.core.study.TabularDataFile) { finalFileNameAfterReplace = edu.harvard.iq.dvn.core.util.FileUtil.replaceExtension(finalFileName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/3228/buggy-version/src.DVN-web.src.edu.harvard.iq.dvn.api.datadeposit.MediaResourceManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "fdca0e3231622394adc661627e03804c10c1f2db", "Url": "https://api.github.com/repos/IQSS/dvn", "Date": "2013-08-29T14:29:32Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (params instanceof org.xdi.oxd.common.params.SetupClientParams) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/8725/buggy-version/oxd-server.src.main.java.org.xdi.oxd.server.op.RegisterSiteOperation.java", "BodyUseAPI": [], "Fixed commit": "18e276caa95f54835a5922731bf06393d862a0fd", "Url": "https://api.github.com/repos/GluuFederation/oxd", "Date": "2017-05-25T17:00:28Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((views) == null) views = new java.util.HashSet<V>();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/3540/buggy-version/src.story.book.model.StoryModel.java", "BodyUseAPI": [], "Fixed commit": "e8564f8274203bec7787105bca43893c0b5e1281", "Url": "https://api.github.com/repos/CMPUT301F13T06/ClassProject", "Date": "2013-11-13T00:16:27Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.getMigrationEndpoint()) == (com.hazelcast.partition.MigrationEndpoint.DESTINATION)) { clearMigrationData(event.getPartitionId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/7854/buggy-version/hazelcast.src.main.java.com.hazelcast.multimap.MultiMapService.java", "BodyUseAPI": ["com.hazelcast.multimap.PartitionMigrationEvent.getPartitionId()", "com.hazelcast.multimap.MultiMapService.clearMigrationData(event.getPartitionId())"], "Fixed commit": "06b554664dcec8b93249f65d040e6562696d2519", "Url": "https://api.github.com/repos/gurbuzali/hazelcast", "Date": "2014-08-19T21:33:42Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (params[0].getMethod().equals(\"GET\")) { connection.setRequestMethod(\"GET\"); }else if (params[0].getMethod().equals(\"PUT\")) { connection.setRequestMethod(\"PUT\"); }else if (params[0].getMethod().equals(\"DELETE\")) { connection.setRequestMethod(\"DELETE\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/3613/buggy-version/library.src.main.java.in.excogitation.optimushttp.library.HttpReq.java", "BodyUseAPI": ["params[0].getMethod().equals(java.lang.String)", "params[0].getMethod()", "params[0].getMethod().equals(java.lang.String)", "params[0].getMethod()"], "Fixed commit": "a77d1cb529560a73eb9b30893cf808684c705438", "Url": "https://api.github.com/repos/nisrulz/OptimusHTTP", "Date": "2016-06-29T11:14:21Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (count > 0) { java.lang.System.out.println(code); java.lang.System.out.println(bankCart.getSecuritycode()); if (bCryptPasswordEncoder.matches(code, bankCart.getSecuritycode())) { bankCartService.pay(serialnumber, count); return \"redirect:/cart/payok\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/8737/buggy-version/src.main.java.com.di.wang.payonline.controller.CarteController.java", "BodyUseAPI": ["com.di.wang.payonline.model.bankcart.BankCartService.pay(java.lang.String,java.lang.Double)"], "Fixed commit": "f27da46a4bf603cc4964e8a6a0edafa54456cec9", "Url": "https://api.github.com/repos/martinWANG2014/payonline", "Date": "2017-03-19T19:56:11Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(attacker.attack(defender))) throw new assets.TEGException(\"Those countries cannot attack between themselves\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/910/buggy-version/src.assets.GameManager.java", "BodyUseAPI": [], "Fixed commit": "743c90feeb040b344cd9b1cc5325e0412be001f5", "Url": "https://api.github.com/repos/temadu/TEG", "Date": "2015-06-17T19:13:32Z"},
{"Line": "=>1017", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.cytoscape.model.CyNetwork.getDefaultNodeTable()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((table.getColumn(name)) != null) { table.deleteColumn(name); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/1066/buggy-version/src.main.java.org.baderlab.wordcloud.internal.CloudParameters.java", "BodyUseAPI": ["org.cytoscape.model.CyTable.deleteColumn(java.lang.String)"], "Fixed commit": "efd8b2a71a85b4b090ae74661f5aed7218a4e5eb", "Url": "https://api.github.com/repos/BaderLab/WordCloudPlugin", "Date": "2014-08-15T20:50:53Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fov) > 0.0F) net.minecraft.client.Minecraft.getMinecraft().gameSettings.fovSetting = fov;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/7179/buggy-version/src.com.kingrunes.somnia.client.ClientTickHandler.java", "BodyUseAPI": [], "Fixed commit": "8d1973c53206b895548ba5a43131bf1cc75b160f", "Url": "https://api.github.com/repos/kingrunes/Somnia", "Date": "2014-07-02T18:53:06Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((localGame.getTurnNumber()) < (gameMap.getKey().getTurnNumber())) { m.putGame(gameMap.getKey()); m.putTurns(gameMap.getValue()); }else if (localGame.isFinished()) { for (com.example.wecharades.model.Invitation i : m.getSentInvitations()) { if (localGame.getPlayer1().equals(i.getInviter())) { m.removeSentInvitation(i); } } if (!(localGame.getCurrentPlayer().equals(getCurrentPlayer()))) { db.removeGame(localGame); } }else if (!(localGame.getCurrentPlayer().equals(gameMap.getKey().getCurrentPlayer()))) { com.example.wecharades.model.Turn localTurn = m.getCurrentTurn(localGame); com.example.wecharades.model.Turn dbTurn = gameMap.getValue().get(((gameMap.getKey().getTurnNumber()) - 1)); if ((localTurn.getState()) > (dbTurn.getState())) { db.updateGame(localGame); db.updateTurn(localTurn); }else { m.putGame(gameMap.getKey()); m.putTurn(dbTurn); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/8190/buggy-version/WeCharades.src.com.example.wecharades.model.DataController.java", "BodyUseAPI": ["com.example.wecharades.model.Game.getCurrentPlayer()", "localGame.getCurrentPlayer().equals(com.example.wecharades.model.Player)", "java.util.Map.Entry<com.example.wecharades.model.Game, java.util.ArrayList<com.example.wecharades.model.Turn>>.getKey()", "com.example.wecharades.model.Model.putGame(gameMap.getKey())", "gameMap.getValue().get(((gameMap.getKey().getTurnNumber()) - 1))", "com.example.wecharades.model.Model.putTurns(gameMap.getValue())", "com.example.wecharades.model.Game.isFinished()", "java.util.Map.Entry<com.example.wecharades.model.Game, java.util.ArrayList<com.example.wecharades.model.Turn>>.getKey()", "gameMap.getKey().getTurnNumber()", "com.example.wecharades.model.Model.putGame(gameMap.getKey())", "com.example.wecharades.model.Model.getCurrentTurn(com.example.wecharades.model.Game)", "java.util.Map.Entry<com.example.wecharades.model.Game, java.util.ArrayList<com.example.wecharades.model.Turn>>.getKey()", "java.util.Map.Entry<com.example.wecharades.model.Game, java.util.ArrayList<com.example.wecharades.model.Turn>>.getValue()", "com.example.wecharades.model.Game.getPlayer1()", "java.util.Map.Entry<com.example.wecharades.model.Game, java.util.ArrayList<com.example.wecharades.model.Turn>>.getValue()", "com.example.wecharades.model.IDatabase.updateGame(com.example.wecharades.model.Game)", "localGame.getCurrentPlayer().equals(gameMap.getKey().getCurrentPlayer())", "com.example.wecharades.model.Game.getCurrentPlayer()", "com.example.wecharades.model.IDatabase.removeGame(com.example.wecharades.model.Game)", "java.util.Map.Entry<com.example.wecharades.model.Game, java.util.ArrayList<com.example.wecharades.model.Turn>>.getKey()", "gameMap.getKey().getCurrentPlayer()", "localGame.getPlayer1().equals(i.getInviter())"], "Fixed commit": "2fa21af30a463b5c8c76903165bc8c88c7f994cc", "Url": "https://api.github.com/repos/alestep/faaa_project", "Date": "2013-05-26T09:08:41Z"},
{"Line": "=>1058", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.gitblit.utils.ArrayUtils.isEmpty(repository.federationSets)) { config.unset(\"gitblit\", null, \"federationSets\"); }else { config.setStringList(\"gitblit\", null, \"federationSets\", repository.federationSets); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/2744/buggy-version/src.com.gitblit.GitBlit.java", "BodyUseAPI": ["org.eclipse.jgit.lib.StoredConfig.setStringList(java.lang.String,<nulltype>,java.lang.String,repository.federationSets)"], "Fixed commit": "a21fc59ea5b6e38068d90e64c7a2a2c097d588a3", "Url": "https://api.github.com/repos/gitblit/gitblit", "Date": "2012-04-09T12:43:03Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.element.getCurrentPattern(PatternID.ValuePatternId)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (unknown != null) { mmarquee.automation.IUIAutomationValuePattern pattern = unknown.queryInterface(mmarquee.automation.IUIAutomationValuePattern.class); if (pattern != null) { value = pattern.currentValue(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/3055/buggy-version/src.main.java.mmarquee.automation.AutomationEditBox.java", "BodyUseAPI": ["com4j.Com4jObject.queryInterface(java.lang.Class)"], "Fixed commit": "8b4206afcca5c0f34d35d8345b91d53aff173a44", "Url": "https://api.github.com/repos/mmarquee/ui-automation", "Date": "2016-01-31T20:17:44Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["minecraftbyexample.mbe06_redstone.output_only.EnumFacing.getOpposite()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((directionOfNeighbour == (EnumFacing.DOWN)) || (directionOfNeighbour == (EnumFacing.UP))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/2761/buggy-version/src.main.java.minecraftbyexample.mbe06_redstone.output_only.BlockRedstoneTarget.java", "BodyUseAPI": [], "Fixed commit": "f72aa1975d3ff387c27cdd477a1825f0a5acf3bb", "Url": "https://api.github.com/repos/TheGreyGhost/MinecraftByExample", "Date": "2015-11-30T12:36:11Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == (mEvent)) { mEvent = new com.canyapan.dietdiaryapp.models.Event(); mEvent.setType(Event.TYPE_FOOD); mEvent.setDate(org.joda.time.LocalDate.now()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/8886/buggy-version/app.src.main.java.com.canyapan.dietdiaryapp.CreateEditEventActivity.java", "BodyUseAPI": [], "Fixed commit": "f20f21eb60dc4daf599775d4292b22ec7d539422", "Url": "https://api.github.com/repos/canyapan/DietDiaryApp", "Date": "2017-05-11T06:50:33Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.Material.matchMaterial(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (material == null) material = org.bukkit.Material.WOOD_BUTTON;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/1217/buggy-version/src.gvlfm78.plugin.OldCombatMechanics.OCMListener.java", "BodyUseAPI": [], "Fixed commit": "21ceca9a0d9775c82290cd455f780f205f83bf26", "Url": "https://api.github.com/repos/gvlfm78/BukkitOldCombatMechanics", "Date": "2016-03-29T19:54:24Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.example.oleg.imagelist.FileHandler.getInstance().addPicture(instPicture))) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/7511/buggy-version/ImageList.app.src.main.java.com.example.oleg.imagelist.InetHandler.java", "BodyUseAPI": [], "Fixed commit": "0ff194db023d832aab82c25e48c22e1fae70b66a", "Url": "https://api.github.com/repos/olegrv/ImageList", "Date": "2015-01-09T21:04:00Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.lang3.StringUtils.replaceEach(articleTitle.toLowerCase(), org.csmagazine.bo.ArticleBoImpl.UMLAUTS, org.csmagazine.bo.ArticleBoImpl.UMLAUTS_REPLACEMENT).replaceAll(\"[^a-z0-9]\", \"-\").replaceAll(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((shortUrl.length()) < 1) { shortUrl = \"a\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/1283/buggy-version/csmagazine.csmagazine-model.src.main.java.org.csmagazine.bo.ArticleBoImpl.java", "BodyUseAPI": [], "Fixed commit": "a78788618b29ba0048082c46bffa8bf9814a25a8", "Url": "https://api.github.com/repos/sirius94/cs-magazine", "Date": "2013-01-18T17:30:51Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(queryParameter instanceof org.picketlink.idm.query.RelationshipQueryParameter)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/4844/buggy-version/modules.idm.impl.src.main.java.org.picketlink.idm.token.internal.TokenIdentityStore.java", "BodyUseAPI": [], "Fixed commit": "37da2e30df13e50d3bd7e4476f947961d8318515", "Url": "https://api.github.com/repos/backslash47/picketlink", "Date": "2015-07-08T17:48:53Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(node.hasAttributes())) return image;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/6268/buggy-version/src.SmithStuff.CreateFlowChart.java", "BodyUseAPI": [], "Fixed commit": "1d0242477052fb3f628d8dbb728e2bc246cea759", "Url": "https://api.github.com/repos/Endeavour-ICT-Systems/SMITH", "Date": "2017-05-24T03:18:54Z"},
{"Line": "=>300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((data.length) == 3) { app_list.put(data[0], new com.diewland.luncher.listview.Item(data[1], data[0], java.lang.Integer.parseInt(data[2]))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/7671/buggy-version/app.src.main.java.com.diewland.luncher.listview.MainActivity.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, com.diewland.luncher.listview.Item>.put(java.lang.String,com.diewland.luncher.listview.Item)", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "b02a92f1d0be16e6848c718406749eafa73e599e", "Url": "https://api.github.com/repos/diewland/neet-launcher", "Date": "2016-04-10T04:56:12Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (sender instanceof org.bukkit.entity.Player) sender.sendMessage(cc.isotopestudio.magicbox.util.S.toPrefixGreen(\"\ufffd\u0279\ufffd\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/5884/buggy-version/src.cc.isotopestudio.magicbox.command.BoxCommand.java", "BodyUseAPI": ["org.bukkit.command.CommandSender.sendMessage(cc.isotopestudio.magicbox.util.S.toPrefixGreen(\"\ufffd\u0279\ufffd\"))"], "Fixed commit": "3ea36b59beebb98b75a3ae551d4bbe5b8d285bf9", "Url": "https://api.github.com/repos/ISOTOPE-Studio/MagicBox", "Date": "2017-02-08T15:36:02Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (WIFI_CONNECTION) { new com.rmh.rhoffman.cbtvelocity.Activities.RefreshPage().execute(new com.rmh.rhoffman.cbtvelocity.Activities.CardMaker()); }else if ((MOBILE_CONNECTION) && (!(checkBox))) { new com.rmh.rhoffman.cbtvelocity.Activities.RefreshPage().execute(new com.rmh.rhoffman.cbtvelocity.Activities.CardMaker()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/2833/buggy-version/app.src.main.java.com.rmh.rhoffman.cbtvelocity.Activities.java", "BodyUseAPI": [], "Fixed commit": "7d96dc28f5910f47f83cd5d49bfeb4c27bbd6397", "Url": "https://api.github.com/repos/ryanmhoffman/CBTVelocity", "Date": "2016-03-12T04:32:19Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.lastIndexOf(char)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (index != (-1)) { url = url.substring((index + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/6928/buggy-version/src.main.java.com.sangupta.jerry.util.UriUtils.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "bafc3683da7d6cb7aa5324e1ffc428a6ffc97d1b", "Url": "https://api.github.com/repos/sangupta/jerry", "Date": "2012-10-11T04:58:25Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (seenCauses.contains(e.getCause())) { break; }else { seenCauses.add(e.getCause()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/1803/buggy-version/rxjava-core.src.main.java.rx.util.CompositeException.java", "BodyUseAPI": ["java.util.Set<java.lang.Throwable>.add(java.lang.Throwable)", "java.lang.Throwable.getCause()"], "Fixed commit": "56948c3b541c582fc9bd7183a9359f1e06d186d3", "Url": "https://api.github.com/repos/Netflix/RxJava", "Date": "2014-02-03T23:05:42Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.sqlite.SQLiteDatabase.query(java.lang.String,java.lang.String[],java.lang.String,<nulltype>,<nulltype>,<nulltype>,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (mCursor != null) { mCursor.moveToFirst(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/7364/buggy-version/VirtualReceipt.src.edu.upenn.cis599.eas499.ReceiptDbAdapter.java", "BodyUseAPI": ["android.database.Cursor.moveToFirst()"], "Fixed commit": "b169ff187a331f7e5b37405170c7978693cf25ce", "Url": "https://api.github.com/repos/ranafde/Virtual-Receipt", "Date": "2014-11-13T17:20:19Z"},
{"Line": "=>1053", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (how != (br.com.carlosrafaelgn.fplay.list.SongList.HOW_CURRENT)) br.com.carlosrafaelgn.fplay.playback.Player.storedSongTime = -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/2300/buggy-version/src.br.com.carlosrafaelgn.fplay.playback.Player.java", "BodyUseAPI": [], "Fixed commit": "c87e1ad9618ca34bded4059ebb612679f68153ac", "Url": "https://api.github.com/repos/carlosrafaelgn/FPlayAndroid", "Date": "2015-11-13T22:24:21Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(unblockGrapplingTask.isScheduled())) { com.badlogic.gdx.utils.Timer.schedule(unblockGrapplingTask, GameSettings.PLAYER_GRAPPLE_MISS_TIME); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/947/buggy-version/core.src.incanshift.player.Player.java", "BodyUseAPI": ["com.badlogic.gdx.utils.Timer.schedule(com.badlogic.gdx.utils.Timer.Task,GameSettings.PLAYER_GRAPPLE_MISS_TIME)"], "Fixed commit": "6264e9c8ae6c214ce564752fa6674a6c39c2db3b", "Url": "https://api.github.com/repos/ristoretto/incanshift", "Date": "2015-09-28T17:35:22Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((reConnectThread) != null) reConnectThread.interrupt();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/5340/buggy-version/com.pushd.util.NetwokMonitor.java", "BodyUseAPI": [], "Fixed commit": "1238849179f5f08ed8971f613948312c9a20dc77", "Url": "https://api.github.com/repos/unisky/sdk", "Date": "2017-07-06T10:06:52Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((peer.peerBean().digestStorage()) == null) { peer.peerBean().digestStorage(storageLayer); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/2525/buggy-version/dht.src.main.java.net.tomp2p.dht.PeerBuilderDHT.java", "BodyUseAPI": ["net.tomp2p.p2p.Peer.peerBean()", "peer.peerBean().digestStorage(net.tomp2p.dht.StorageLayer)"], "Fixed commit": "e97215132914f5b42b5c84a3e4a4a962758ec4e2", "Url": "https://api.github.com/repos/ippes/TomP2P-vDHT", "Date": "2014-09-04T11:29:43Z"},
{"Line": "=>299", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dataSourceFactory instanceof io.dropwizard.db.DataSourceFactory) { java.lang.String url = ((io.dropwizard.db.DataSourceFactory) (dataSourceFactory)).getUrl(); return org.jooq.tools.jdbc.JDBCUtils.dialect(url); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/6637/buggy-version/dropwizard-jooq.src.main.java.com.bendb.dropwizard.jooq.JooqFactory.java", "BodyUseAPI": [], "Fixed commit": "ef89b67e56e5d932ff4717c7c747ad5cc6946bf5", "Url": "https://api.github.com/repos/benjamin-bader/droptools", "Date": "2016-01-14T21:04:55Z"},
{"Line": "=>12", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.example.claimtrak.ClaimController.claimList) == null) { com.example.claimtrak.ClaimController.claimList = new com.example.claimtrak.ClaimList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/3592/buggy-version/src.com.example.claimtrak.ClaimController.java", "BodyUseAPI": [], "Fixed commit": "d888414c808ef96dd87eb80a797e045c322d6abf", "Url": "https://api.github.com/repos/Cdingram/Cdingram-ClaimTrak", "Date": "2015-01-30T21:13:45Z"},
{"Line": "=>339", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.preference.PreferenceManager.getDefaultSharedPreferences(android.content.Context)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((prefs.getInt(\"window_settings_ymax\", (-1))) != ((int) (dy / 2))) edit.putInt(\"window_settings_ymax\", ((int) (dy / 2)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/7857/buggy-version/src.lorian.graph.android.opengl.GraphRenderer.java", "BodyUseAPI": ["SharedPreferences.Editor.putInt(java.lang.String,long)"], "Fixed commit": "cbccd61940fe92291a24dd5cb07056b2ffad21db", "Url": "https://api.github.com/repos/lorian1333/graph-android", "Date": "2013-06-01T12:21:34Z"},
{"Line": "=>337", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.preference.PreferenceManager.getDefaultSharedPreferences(android.content.Context)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((prefs.getInt(\"window_settings_ymin\", 1)) != ((int) (dy / (-2)))) edit.putInt(\"window_settings_ymin\", ((int) (dy / (-2))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/7857/buggy-version/src.lorian.graph.android.opengl.GraphRenderer.java", "BodyUseAPI": ["SharedPreferences.Editor.putInt(java.lang.String,long)"], "Fixed commit": "cbccd61940fe92291a24dd5cb07056b2ffad21db", "Url": "https://api.github.com/repos/lorian1333/graph-android", "Date": "2013-06-01T12:21:34Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (e.getGraph().getOutEdges(e).isEmpty()) { endEventMap.get(e.getParentPool().getId()).add(p); }else { endEventMap.remove(e.getParentPool().getId()); net.removeArc(p, t); net.removePlace(p); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/5738/buggy-version/src.org.processmining.plugins.converters.bpmn2pn.BPMN2WorkflowSystemConverter.java", "BodyUseAPI": ["java.util.Map<org.processmining.models.graphbased.NodeID, java.util.ArrayList<org.processmining.models.graphbased.directed.petrinet.elements.Place>>.remove(e.getParentPool().getId())", "e.getParentPool().getId()", "org.processmining.models.graphbased.directed.bpmn.elements.Event.getParentPool()", "endEventMap.get(e.getParentPool().getId()).add(org.processmining.models.graphbased.directed.petrinet.elements.Place)", "org.processmining.models.graphbased.directed.bpmn.elements.Event.getParentPool()", "java.util.Map<org.processmining.models.graphbased.NodeID, java.util.ArrayList<org.processmining.models.graphbased.directed.petrinet.elements.Place>>.get(e.getParentPool().getId())", "e.getParentPool().getId()"], "Fixed commit": "e5d8ca754b517ee181445ff9494988709b8fa3f9", "Url": "https://api.github.com/repos/DIUNIPI-ISTI/PetrinetUnfolding", "Date": "2016-08-01T10:36:21Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Boolean.parseBoolean(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (shouldStealFocus) { if ((isInForeground(context)) && (isScreenLocked(context))) { pushAppToForeground(context); } if (!(isInForeground(context))) { pushAppToForeground(context); savePushMessage(context.getApplicationContext(), message); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/8648/buggy-version/src.android.stealfocusBroadcastReceiver.java", "BodyUseAPI": [], "Fixed commit": "63c79bf4f17416d545e0d86dc25b83459c097c7b", "Url": "https://api.github.com/repos/Life-partners/stealfocus", "Date": "2017-03-10T07:58:19Z"},
{"Line": "=>6", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((dwg.getFrontmostContainer(p)) != null) { dwg.moveToBack(dwg.getFrontmostContainer(p)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/6419/buggy-version/BackCommand.java", "BodyUseAPI": ["Drawing.getFrontmostContainer(java.awt.Point)", "Drawing.moveToBack(dwg.getFrontmostContainer(p))"], "Fixed commit": "117b520d01b7c2e437d6da809db7d3d9cad13917", "Url": "https://api.github.com/repos/db2882/PS-3", "Date": "2013-10-18T03:27:46Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.cmu.ml.rtw.generic.data.Gazetteer.getWeightedIds(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (ids == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/1190/buggy-version/src.main.java.edu.cmu.ml.rtw.generic.data.feature.fn.FnGazetteerFilter.java", "BodyUseAPI": [], "Fixed commit": "6b6c45aff627c7a6dd07e0d0e32c53b7bf9b5ca1", "Url": "https://api.github.com/repos/cmunell/micro-util", "Date": "2015-06-12T18:42:51Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.cmu.ml.rtw.generic.data.Gazetteer.getWeightedIds(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (ids == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/1190/buggy-version/src.main.java.edu.cmu.ml.rtw.generic.data.feature.fn.FnGazetteer.java", "BodyUseAPI": [], "Fixed commit": "6b6c45aff627c7a6dd07e0d0e32c53b7bf9b5ca1", "Url": "https://api.github.com/repos/cmunell/micro-util", "Date": "2015-06-12T18:42:51Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((spans.size()) < (builder.length())) { spans.addAll(java.util.Arrays.asList(new java.lang.Object[builder.length()])); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/1725/buggy-version/src.main.java.com.xtremelabs.robolectric.shadows.ShadowSpannableStringBuilder.java", "BodyUseAPI": ["java.util.Arrays.asList(java.lang.Object[])", "java.util.List<java.lang.Object>.addAll(java.util.List<java.lang.Object>)", "java.lang.StringBuilder.length()"], "Fixed commit": "1c54517e7e1d817d0fa10c5b9092d36118c8f06b", "Url": "https://api.github.com/repos/robolectric/robolectric", "Date": "2013-05-30T00:30:31Z"},
{"Line": "=>509", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((request.entryImpl.getEntryBuffer()) != null) { entry = new org.apache.bookkeeper.client.LedgerEntry(request.entryImpl); }else { entry = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/4857/buggy-version/bookkeeper-server.src.main.java.org.apache.bookkeeper.client.ReadLastConfirmedAndEntryOp.java", "BodyUseAPI": [], "Fixed commit": "d6284d6b72634c1341ea659673333da612b46eee", "Url": "https://api.github.com/repos/zhaijack/bookkeeper", "Date": "2017-11-20T15:39:13Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (progress.isRunning()) { progress.cancel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/620/buggy-version/platform.platform-impl.src.com.intellij.openapi.progress.util.ProgressIndicatorUtils.java", "BodyUseAPI": ["com.intellij.openapi.progress.ProgressIndicator.cancel()"], "Fixed commit": "b6877d1ac9e51f843eade8f2cf4f7b608fe44c13", "Url": "https://api.github.com/repos/JetBrains/intellij-community", "Date": "2013-05-28T18:50:15Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (date == (dueDay.getTime())) { selection = 1; date = 0; }else if (date == dueTime) { selection = 2; date = 0; }else if ((date + (com.todoroo.andlib.utility.DateUtilities.ONE_DAY)) == (dueDay.getTime())) { selection = 3; date = 0; }else if ((date + (com.todoroo.andlib.utility.DateUtilities.ONE_WEEK)) == (dueDay.getTime())) { selection = 4; date = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/5480/buggy-version/astrid.src.com.todoroo.astrid.ui.HideUntilControlSet.java", "BodyUseAPI": ["java.util.Date.getTime()", "java.util.Date.getTime()"], "Fixed commit": "36edc40082f7f2211d2dce563ca43f94567b978b", "Url": "https://api.github.com/repos/sbosley/astrid", "Date": "2013-04-15T18:51:16Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pos) == null) { pos = world.provider.getRandomizedSpawnPoint(); java.lang.System.out.println(pos); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/2301/buggy-version/src.main.java.me.modmuss50.svw.world.WorldTeleporter.java", "BodyUseAPI": [], "Fixed commit": "375a5728be6560ac39d73072efeeb212b96be4c0", "Url": "https://api.github.com/repos/modmuss50/SimpleVoidWorld", "Date": "2016-12-01T21:52:46Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isPlaying()) { bufferedPercentage = 100; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/4225/buggy-version/library.src.main.java.com.lsjwzh.media.exoplayercompat.exo.ExoPlayerCompatImpl.java", "BodyUseAPI": [], "Fixed commit": "f58fa3df87732e575c419b0edd70b19bca9db541", "Url": "https://api.github.com/repos/lsjwzh/ExoPlayerCompat", "Date": "2014-09-04T15:29:04Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((available.size()) == 0) { if (original) { if ((heuristic(this)) > 0) { compWon = true; }else if ((heuristic(this)) < 0) { userWon = true; }else { draw = true; } } }else if ((reversi.Global.VS_COMP) && (!(usersTurn))) this.comp_turn();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/8479/buggy-version/reversi.src.model.Arena.java", "BodyUseAPI": [], "Fixed commit": "be4be9600144ea434ced43902117e4048c929d99", "Url": "https://api.github.com/repos/dasada/Reversi", "Date": "2014-12-20T09:38:30Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sleepThread) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/5626/buggy-version/src.filesystem.ReplicationManager.java", "BodyUseAPI": [], "Fixed commit": "ae20e2691b5dfe74ee63f1ccd4a0084ae4d34637", "Url": "https://api.github.com/repos/naveed2/MP4", "Date": "2012-12-09T22:48:26Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.cmu.ml.rtw.generic.parse.AssignmentList.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((assignment.getType().equals(Context.ObjectType.VALUE.toString())) && (assignment.getName().equals(\"initialized\"))) { this.initialized = java.lang.Boolean.valueOf(this.context.getMatchValue(assignment.getValue())); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/1018/buggy-version/src.main.java.edu.cmu.ml.rtw.generic.data.feature.FeatureSet.java", "BodyUseAPI": ["java.lang.Boolean.valueOf(this.context.getMatchValue(assignment.getValue()))", "edu.cmu.ml.rtw.generic.data.annotation.DatumContext<D, L>.getMatchValue(assignment.getValue())", "edu.cmu.ml.rtw.generic.parse.Assignment.AssignmentTyped.getValue()"], "Fixed commit": "b62f936ff9bf3b9069cb729d29cda778220e7fdf", "Url": "https://api.github.com/repos/cmunell/micro-util", "Date": "2016-03-18T20:51:18Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (keepStats) { costStat.add(((java.lang.System.nanoTime()) - start)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/434/buggy-version/src.main.java.operator.viperBolt.ViperBolt.java", "BodyUseAPI": [], "Fixed commit": "98ddecd691e3f08078496ced799aa01196211b55", "Url": "https://api.github.com/repos/vincenzo-gulisano/Viper", "Date": "2016-02-02T20:49:39Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (keepStats) { costStat.add(((java.lang.System.nanoTime()) - start)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/434/buggy-version/src.main.java.operator.viperBolt.ViperBolt.java", "BodyUseAPI": [], "Fixed commit": "98ddecd691e3f08078496ced799aa01196211b55", "Url": "https://api.github.com/repos/vincenzo-gulisano/Viper", "Date": "2016-02-02T20:49:39Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mGoogleApiClient) != null) mGoogleApiClient.disconnect();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/8933/buggy-version/app.src.main.java.no.nordicsemi.android.nrftoolbox.uart.wearable.UARTConfigurationSynchronizer.java", "BodyUseAPI": [], "Fixed commit": "217d7a3abb656d139309e500275e753bd5393dcb", "Url": "https://api.github.com/repos/NordicSemiconductor/Android-nRF-Toolbox", "Date": "2016-10-21T11:24:53Z"},
{"Line": "=>3071", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (quota.getAll().isEmpty()) { quota.copyValues(containerQuota); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/4373/buggy-version/management.server.core.local-peer.local-peer-impl.src.main.java.io.subutai.core.localpeer.impl.LocalPeerImpl.java", "BodyUseAPI": ["io.subutai.hub.share.quota.ContainerQuota.copyValues(io.subutai.hub.share.quota.ContainerQuota)"], "Fixed commit": "9e07cfc0d679274751822998b05b53941e608d32", "Url": "https://api.github.com/repos/subutai-io/peer-os", "Date": "2017-10-12T06:24:08Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(e.isAttackable())) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/8475/buggy-version/src.dev.ipsych0.mygame.entities.creatures.Player.java", "BodyUseAPI": [], "Fixed commit": "49923692153a0bd8efa7c193015f634e294775eb", "Url": "https://api.github.com/repos/iPsych0/2DJavaGame", "Date": "2016-07-21T20:00:42Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (itemStack != null) { addItemStackName(itemStack); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/7427/buggy-version/java.NameWakander.NameWakander.java", "BodyUseAPI": ["NameWakander.NameWakander.addItemStackName(net.minecraft.item.ItemStack)"], "Fixed commit": "233598111c1292194bba7efd2c9a2dc358596960", "Url": "https://api.github.com/repos/aksource/NameWakander", "Date": "2014-08-26T12:25:27Z"},
{"Line": "=>1187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((method.getAnnotation(org.openflexo.model.annotations.Reindexer.class)) != null) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/6977/buggy-version/pamela-core.src.main.java.org.openflexo.model.ModelEntity.java", "BodyUseAPI": [], "Fixed commit": "dfbcc371fd7ec584d79539f9a78ec97bf17dac15", "Url": "https://api.github.com/repos/openflexo-team/pamela", "Date": "2017-11-30T11:34:48Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasid) { list.add((((net.minecraft.util.EnumChatFormatting.GREEN) + \"Number of protected blocks: \") + (ReturnProtectedBlockCountHelper.count))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/4340/buggy-version/src.main.java.romelo333.notenoughwands.Items.ProtectionWand.java", "BodyUseAPI": [], "Fixed commit": "1a9650acd4ba42a3296e57802b7076e955ebcde2", "Url": "https://api.github.com/repos/romelo333/notenoughwands1.8.8", "Date": "2016-01-28T16:41:37Z"},
{"Line": "=>299", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((isSinglePlayer) == false) { if (((checkDraw()) == true) || ((checkWin()) == true)) { gameOver(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/3107/buggy-version/RupTacToe.src.Controller.BoardController.java", "BodyUseAPI": [], "Fixed commit": "fb932b23b50cc29b29808e8ae02bbd4a6185774d", "Url": "https://api.github.com/repos/sgcox2017/RupTacToe", "Date": "2017-02-21T00:41:40Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((profile.getId()) == null) { try { getProfileJAXBMarshaller().marshal(new org.openinfobutton.schemas.kb.KnowledgeResourceProfile(), sw); profile.setContent(sw.toString()); } catch (java.sql.SQLException e) { e.printStackTrace(); } catch (javax.xml.bind.JAXBException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/2502/buggy-version/oib-request.oib-request-service.src.main.java.org.openinfobutton.service.web.ProfileManagerService.java", "BodyUseAPI": ["edu.utah.further.liteprofiledb.domain.CustomProfiles.setContent(java.lang.String)"], "Fixed commit": "43da85b8649a8200dc787682b6cb5d59102a43f6", "Url": "https://api.github.com/repos/VHAINNOVATIONS/InfoButtons", "Date": "2016-02-24T16:56:29Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.yuval.aiconnotation.FileSystem.checkFileExists(directory, \"/firstTimeRun.txt\")) e.getFromFile(directory, newFile);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/5102/buggy-version/src.com.yuval.aiconnotation.Parser.java", "BodyUseAPI": ["com.yuval.aiconnotation.Evaluator.getFromFile(java.lang.String,java.lang.String)"], "Fixed commit": "9a1266326c9586688aff4495055bab7f32c21fbf", "Url": "https://api.github.com/repos/KnightAcademy/AIConnotation", "Date": "2014-12-01T22:29:16Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["AdvanceInterface.Files.checkFileSize()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (newFileSize == 0.0) { history.setText(\"\"); fileSize = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/5196/buggy-version/src.AdvanceInterface.ChatWindow.java", "BodyUseAPI": [], "Fixed commit": "742af5a7c45ebeb6ebb1df184994b985f7a797ab", "Url": "https://api.github.com/repos/Ilippy/Java2Lesson4", "Date": "2017-04-28T14:43:00Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.puppycrawl.tools.checkstyle.checks.javadoc.SummaryJavadocCheck.getFirstSentence(com.puppycrawl.tools.checkstyle.api.DetailNode)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(firstSentence.trim().startsWith(\"{@inheritDoc}\"))) { log(ast.getLineNumber(), com.puppycrawl.tools.checkstyle.checks.javadoc.SummaryJavadocCheck.MSG_SUMMARY_FIRST_SENTENCE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/2193/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.checks.javadoc.SummaryJavadocCheck.java", "BodyUseAPI": [], "Fixed commit": "b6ab2337e21ed8e4648859eee08026ab5b87953d", "Url": "https://api.github.com/repos/Vladlis/checkstyle", "Date": "2016-01-26T00:30:16Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (checker.getOperatorContext().getParameterNames().contains(com.ibm.streamsx.hdfs.HDFSFileSink.DYNAMIC_PARAM)) { dynamicParam = java.lang.Boolean.parseBoolean(checker.getOperatorContext().getParameterValues(com.ibm.streamsx.hdfs.HDFSFileSink.DYNAMIC_PARAM).get(0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/6150/buggy-version/com.ibm.streamsx.hdfs.impl.java.src.com.ibm.streamsx.hdfs.HDFSFileSink.java", "BodyUseAPI": ["checker.getOperatorContext().getParameterValues(java.lang.String)", "checker.getOperatorContext().getParameterValues(com.ibm.streamsx.hdfs.HDFSFileSink.DYNAMIC_PARAM).get(int)", "java.lang.Boolean.parseBoolean(checker.getOperatorContext().getParameterValues(com.ibm.streamsx.hdfs.HDFSFileSink.DYNAMIC_PARAM).get(0))", "com.ibm.streams.operator.compile.OperatorContextChecker.getOperatorContext()"], "Fixed commit": "7b21882de54a46b8996174eb87575421c379ff4a", "Url": "https://api.github.com/repos/hildrum/streamsx.hdfs", "Date": "2014-06-11T19:31:37Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == 0) { firstChildHeight = childHeight; }else if (i == (childCount - 1)) { endChildHeight = childHeight; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/2058/buggy-version/app.src.main.java.com.zj.example.view.customview9_vertical_line.VerticalLineLinearlayout.java", "BodyUseAPI": [], "Fixed commit": "29b5821c5e43c5a0941e2057d7485686db10f795", "Url": "https://api.github.com/repos/zhengjiong/ZJ_CustomView", "Date": "2016-10-07T03:50:25Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasHeaderRow) { fieldNames = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/7375/buggy-version/java-util.src.main.java.io.druid.java.util.common.parsers.CSVParser.java", "BodyUseAPI": [], "Fixed commit": "0bf7c099b262e233c0d541a498e3dfc9a259c8df", "Url": "https://api.github.com/repos/jihoonson/druid", "Date": "2017-06-22T08:04:36Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (user == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/1113/buggy-version/LotteryService.src.main.java.cn.wisdom.lottery.service.wx.message.WxMpTextHandler.java", "BodyUseAPI": [], "Fixed commit": "d9afd6606102b513c055e59a29be301be47cd8a7", "Url": "https://api.github.com/repos/ooclrickliu/lottery", "Date": "2016-08-24T07:06:09Z"},
{"Line": "=>421", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.mainChatController) == theMainChatController) { this.mainChatController = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/6019/buggy-version/app.src.main.java.net.usikkert.kouchat.android.chatwindow.AndroidUserInterface.java", "BodyUseAPI": [], "Fixed commit": "71847e663800068c98cf94a53858dd0d239ef949", "Url": "https://api.github.com/repos/blurpy/kouchat-android", "Date": "2016-07-29T08:53:06Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (b == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/8695/buggy-version/src.main.java.io.github.notze.redstoneswords.Events.java", "BodyUseAPI": [], "Fixed commit": "45dcac81d287c57e98e1f2c8a92ca888e161a8f5", "Url": "https://api.github.com/repos/Notze/RedstoneSwords", "Date": "2015-04-04T22:19:44Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((parent.getDialogs()) != null) e.setId(com.bladecoder.engineeditor.utils.ElementUtils.getCheckedId(id.getText(), parent.getDialogs().keySet().toArray(new java.lang.String[0]))); else e.setId(id.getText());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/1024/buggy-version/adventure-editor.src.main.java.com.bladecoder.engineeditor.ui.EditDialogDialog.java", "BodyUseAPI": ["com.bladecoder.engineeditor.ui.EditDialogDialog.getDialogs()", "parent.getDialogs().keySet().toArray(java.lang.String[])", "com.bladecoder.engineeditor.utils.ElementUtils.getCheckedId(id.getText(),parent.getDialogs().keySet().toArray(new java.lang.String[0]))", "parent.getDialogs().keySet()", "com.bladecoder.engineeditor.ui.EditDialogDialog.setId(com.bladecoder.engineeditor.utils.ElementUtils.getCheckedId(id.getText(), parent.getDialogs().keySet().toArray(new java.lang.String[0])))"], "Fixed commit": "35b9a20d07e1aa41fe8c9f4b0b062c499f90066b", "Url": "https://api.github.com/repos/bladecoder/bladecoder-adventure-engine", "Date": "2016-02-11T13:06:58Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getContext()) != null) { android.widget.TextView sectionView = new android.widget.TextView(getContext()); sectionView.setTextSize(TypedValue.COMPLEX_UNIT_SP, 16); sectionView.setText(sk.ab.herbsbase.tools.Utils.fromHtml(sectionText)); if ((lines * lineHeight) < height) { layout.addView(sectionView); }else { layoutBelow.addView(sectionView); } lines += (((sectionText.length()) * ((float) (1.2))) / (width / ((sectionView.getTextSize()) / (dm.scaledDensity)))) + 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/3679/buggy-version/appbase.src.main.java.sk.ab.herbsbase.fragments.InfoFragment.java", "BodyUseAPI": [], "Fixed commit": "5a9755b96aeed2ec3a263d595c63a16ef1f9e615", "Url": "https://api.github.com/repos/benadrasni/abherbs", "Date": "2017-05-18T01:32:36Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isValid(argMultimap.getPreamble().trim().toString()))) { throw new seedu.ticktask.logic.parser.exceptions.ParseException(java.lang.String.format(seedu.ticktask.logic.parser.MESSAGE_INVALID_COMMAND_FORMAT, ClearCommand.MESSAGE_USAGE)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/7509/buggy-version/src.main.java.seedu.ticktask.logic.parser.ClearCommandParser.java", "BodyUseAPI": [], "Fixed commit": "96e8d929c49624395cda62dc7b7609e68a9045b7", "Url": "https://api.github.com/repos/CS2103JUN2017-T1/main", "Date": "2017-07-21T08:33:20Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(com.minecraftdimensions.bungeesuiteportals.managers.PortalsManager.RECEIVED)) { org.bukkit.Bukkit.getScheduler().runTaskLaterAsynchronously(BungeeSuitePortals.INSTANCE, new java.lang.Runnable() { @java.lang.Override public void run() { if (!(com.minecraftdimensions.bungeesuiteportals.managers.PortalsManager.RECEIVED)) { com.minecraftdimensions.bungeesuiteportals.managers.PortalsManager.RECEIVED = true; com.minecraftdimensions.bungeesuiteportals.managers.PortalsManager.requestPortals(); } } }, 10L); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/2216/buggy-version/src.main.java.com.minecraftdimensions.bungeesuiteportals.listeners.PlayerLoginListener.java", "BodyUseAPI": ["org.bukkit.Bukkit.getScheduler().runTaskLaterAsynchronously(BungeeSuitePortals.INSTANCE,java.lang.Runnable,long)"], "Fixed commit": "506df6c5d42f50ac88c1b85b9cd3e063a8f3aa88", "Url": "https://api.github.com/repos/Bloodsplat/BungeeSuitePortals", "Date": "2013-12-05T22:31:25Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((nextStreamIndex.get()) < encoding) { nextStreamIndex.set(encoding); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/193/buggy-version/impl.src.main.java.org.ehcache.internal.serialization.CompactJavaSerializer.java", "BodyUseAPI": [], "Fixed commit": "63bdcb57004811daa8749f9e27a4ea2973eb0f33", "Url": "https://api.github.com/repos/ljacomet/ehcache3", "Date": "2016-06-14T20:50:14Z"},
{"Line": "=>411", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!isStyle) { org.w3c.dom.Node ccn1 = ccn.cloneNode(true); e.appendChild(ccn1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/2635/buggy-version/main6.envoy.src.java.com.globalsight.everest.page.pageexport.style.docx.Style.java", "BodyUseAPI": [], "Fixed commit": "aa5814c403c8eedff0586ffc444928495d8c797f", "Url": "https://api.github.com/repos/tingley/globalsight", "Date": "2014-11-11T06:10:49Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((returnPaceHrs.compareTo(\"00\")) != 0) { returnPace = (((returnPaceHrs + \":\") + returnPaceMin) + \":\") + returnPaceSec; }else { returnPace = (returnPaceMin + \":\") + returnPaceSec; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/4124/buggy-version/src.main.java.util.Parser.java", "BodyUseAPI": [], "Fixed commit": "d64b72f4f3fe6289b6b15ccedc5f15bef46f4642", "Url": "https://api.github.com/repos/omolodetskyi/Pace-Calculator", "Date": "2017-11-13T11:23:56Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.lecturesCreatedByUser) == null) { setLecturesCreatedByUser(new java.util.ArrayList<com.nodoubts.core.SearchType>()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/6109/buggy-version/src.com.nodoubts.core.User.java", "BodyUseAPI": [], "Fixed commit": "240a8b8c96613ca166d8c624354b35b7006bd254", "Url": "https://api.github.com/repos/NoDoubtsEnterpriseCompany/100duvidas", "Date": "2015-03-18T01:33:06Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.lecturesRegisteredByUser) == null) { setLecturesRegisteredByUser(new java.util.ArrayList<com.nodoubts.core.SearchType>()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/6109/buggy-version/src.com.nodoubts.core.User.java", "BodyUseAPI": [], "Fixed commit": "240a8b8c96613ca166d8c624354b35b7006bd254", "Url": "https://api.github.com/repos/NoDoubtsEnterpriseCompany/100duvidas", "Date": "2015-03-18T01:33:06Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isColor) { if (patterns == null) { throw new java.lang.AssertionError(); } tokens = parser.peek(5); if (patterns.matches(tokens)) { type = Type.COLOR; parser.discard(5); }else { throw new com.stellaris.TokenException(parent, token); } }else if (\"{\".equals(token)) { tokens = parser.peek(7); if (Patterns.PS_RANGE.matches(tokens)) { type = Type.RANGE; parser.discard(7); }else { state = analyze(field, (++state)); type = get(field); if (type != (Type.LIST)) { type = Type.STRUCT; } } }else if ((\"yes\".equals(token)) || (\"no\".equals(token))) { type = Type.BOOLEAN; }else { try { java.lang.Integer.parseInt(token); type = Type.INTEGER; } catch (java.lang.NumberFormatException e1) { try { java.lang.Float.parseFloat(token); type = Type.FLOAT; } catch (java.lang.NumberFormatException e2) { if ((token.startsWith(\"\\\"\")) && (token.endsWith(\"\\\"\"))) { type = Type.STRING; }else { type = Type.ENUM; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/1699/buggy-version/src.com.stellaris.ScriptFile.java", "BodyUseAPI": [], "Fixed commit": "979c5e404de069fbfb175d1634d4b5e8663f6bac", "Url": "https://api.github.com/repos/WayOfModding/StellarisIDE", "Date": "2016-06-16T18:34:20Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (\"hsv\".equals(token)) { isColor = true; patterns = Patterns.PS_COLOR_HSV; }else if (\"rgb\".equals(token)) { isColor = true; patterns = Patterns.PS_COLOR_RGB; }else { isColor = false; patterns = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/1699/buggy-version/src.com.stellaris.ScriptFile.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "979c5e404de069fbfb175d1634d4b5e8663f6bac", "Url": "https://api.github.com/repos/WayOfModding/StellarisIDE", "Date": "2016-06-16T18:34:20Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (userDetails.get(2).equals(NO__PROFILE_IMAGE)) { initials.setText(userDetails.get(1)); loadBackdrop(imageURL); }else { url = (\"https://trello-avatars.s3.amazonaws.com/\" + (userDetails.get(2))) + \"/170.png\"; initials.setText(\"\"); loadBackdrop(url); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/881/buggy-version/app.src.main.java.chalmers.eda397_2016_group3.MainActivity.java", "BodyUseAPI": ["java.util.List<java.lang.String>.get(int)", "java.util.List<java.lang.String>.get(int)", "android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "c79288d07ecfcff414a286a6cc15e7867d0d08df", "Url": "https://api.github.com/repos/sebbe33/EDA_397_2016_Group3", "Date": "2016-05-20T12:53:54Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (time > 5) { holder.name.setText(usageStatses.get(position).getPackageName()); holder.time.setText((time + \"\")); try { holder.icon.setImageDrawable(context.getPackageManager().getApplicationIcon(usageStatses.get(position).getPackageName())); } catch (android.content.pm.PackageManager e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/3636/buggy-version/app.src.main.java.dheerain.jain.timecheck.AppsListAdapter.java", "BodyUseAPI": ["android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "20ecd209f710a8d0541ada68f2cfe1b709b82a98", "Url": "https://api.github.com/repos/jaindheerain/TimeCheck", "Date": "2017-08-27T10:31:56Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((genome[i].length()) > 0) if ((genome[i].substring(((genome[i].length()) - 2), genome[i].length())) != \"00\") genome[i] += \"00\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/2227/buggy-version/src.rna.GeneticCode.java", "BodyUseAPI": [], "Fixed commit": "b18d0057e7a26395cc66ee4fe5da5d521b84ade6", "Url": "https://api.github.com/repos/MikeWorth/RoboNucleicAcid", "Date": "2012-12-12T12:38:16Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (android.text.TextUtils.isEmpty(url)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/3769/buggy-version/library.src.main.java.me.kaelaela.opengraphview.network.tasks.LoadImageTask.java", "BodyUseAPI": [], "Fixed commit": "d833c8ca03ac92fae02c25f9101b1342872ea8cf", "Url": "https://api.github.com/repos/kaelaela/OpenGraphView", "Date": "2016-07-31T05:58:10Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (data == null) { if ((fallback.length) > 0) { return fallback[0]; } return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/7313/buggy-version/widgets.src.main.java.com.neatier.widgets.helpers.WidgetUtils.java", "BodyUseAPI": [], "Fixed commit": "340868462f4a4c4bb52458742430494722a011aa", "Url": "https://api.github.com/repos/laszlo-galosi/neatier-commons", "Date": "2016-12-02T15:34:28Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (currentPoint == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/1986/buggy-version/src.java.com.github.ruleant.getback_gps.lib.Coordinates.java", "BodyUseAPI": [], "Fixed commit": "364d5733039837e441c104a67358f040dc39644d", "Url": "https://api.github.com/repos/ruleant/getback_gps", "Date": "2014-08-27T19:49:14Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (i18n.GL1535().equalsIgnoreCase(desc)) { popupContainer.getElement().getStyle().setWidth(438, Unit.PX); popupContainer.getElement().getStyle().setMargin(0, Unit.PX); popupContainer.getElement().getStyle().clearHeight(); toEmailLbl.getElement().getStyle().clearWidth(); toEmailLbl.addStyleName(ShelfCBundle.INSTANCE.css().aleartDescTextForNotLoggedInUser()); appPopUp.setStyleName(ShelfCBundle.INSTANCE.css().shelfItemSucessPopUpWithOutWidth()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/4838/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.socialshare.SentEmailSuccessVc.java", "BodyUseAPI": [], "Fixed commit": "82d87db7fd72826d0b8e5cd82bf6f1389134072c", "Url": "https://api.github.com/repos/mitraj/Gooru-Web", "Date": "2015-03-30T08:48:05Z"},
{"Line": "=>594", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.min(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (wordNum >= limit) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/6367/buggy-version/lucene.core.src.java.org.apache.lucene.util.TrackedFixedBitSet.java", "BodyUseAPI": [], "Fixed commit": "89a92dc9595fcc044efecf313226b3f72afad528", "Url": "https://api.github.com/repos/tokee/lucene-solr", "Date": "2015-08-05T18:44:12Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (m == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/168/buggy-version/src.main.java.io.bdrc.xmltoldmigration.MigrationHelpers.java", "BodyUseAPI": [], "Fixed commit": "f2e8fc7aa8c7327e7e1c5ecdbabc71dc23ddee9b", "Url": "https://api.github.com/repos/BuddhistDigitalResourceCenter/xmltoldmigration", "Date": "2017-03-08T11:46:44Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((i + (m)) < (gnsv.length)) { double gthreshold = gnsv[(i + (m))]; for (int n = 0; n < (train.size()); n++) { if (((keset[n]) && ((alpha[n]) == 0)) && ((java.lang.Math.abs(gset[n])) > gthreshold)) { alpha[n] = 0.0; keset[n] = false; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/4706/buggy-version/src.fr.lip6.classifier.LaSVMI.java", "BodyUseAPI": [], "Fixed commit": "f8918e9d1015e6265216431787ebfcc545f701f6", "Url": "https://api.github.com/repos/davidpicard/jkernelmachines", "Date": "2012-06-28T13:44:13Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((user.email) != null) && (!(user.email.isEmpty()))) existingUser.email = user.email;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/4848/buggy-version/src.main.java.org.govithub.govac.consumerapi.controller.UsersController.java", "BodyUseAPI": [], "Fixed commit": "24a7739186d43671040401460141f77ded648728", "Url": "https://api.github.com/repos/cozu/asistentul_cetateanului_api_intern", "Date": "2016-11-23T15:16:58Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((user.cnp) != null) && (!(user.cnp.isEmpty()))) existingUser.cnp = user.cnp;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/4848/buggy-version/src.main.java.org.govithub.govac.consumerapi.controller.UsersController.java", "BodyUseAPI": [], "Fixed commit": "24a7739186d43671040401460141f77ded648728", "Url": "https://api.github.com/repos/cozu/asistentul_cetateanului_api_intern", "Date": "2016-11-23T15:16:58Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((user.phone) != null) && (!(user.phone.isEmpty()))) existingUser.phone = user.phone;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/4848/buggy-version/src.main.java.org.govithub.govac.consumerapi.controller.UsersController.java", "BodyUseAPI": [], "Fixed commit": "24a7739186d43671040401460141f77ded648728", "Url": "https://api.github.com/repos/cozu/asistentul_cetateanului_api_intern", "Date": "2016-11-23T15:16:58Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((user.username) != null) && (!(user.username.isEmpty()))) existingUser.username = user.username;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/4848/buggy-version/src.main.java.org.govithub.govac.consumerapi.controller.UsersController.java", "BodyUseAPI": [], "Fixed commit": "24a7739186d43671040401460141f77ded648728", "Url": "https://api.github.com/repos/cozu/asistentul_cetateanului_api_intern", "Date": "2016-11-23T15:16:58Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((user.firstName) != null) && (!(user.firstName.isEmpty()))) existingUser.firstName = user.firstName;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/4848/buggy-version/src.main.java.org.govithub.govac.consumerapi.controller.UsersController.java", "BodyUseAPI": [], "Fixed commit": "24a7739186d43671040401460141f77ded648728", "Url": "https://api.github.com/repos/cozu/asistentul_cetateanului_api_intern", "Date": "2016-11-23T15:16:58Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((user.lastName) != null) && (!(user.lastName.isEmpty()))) existingUser.lastName = user.lastName;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/4848/buggy-version/src.main.java.org.govithub.govac.consumerapi.controller.UsersController.java", "BodyUseAPI": [], "Fixed commit": "24a7739186d43671040401460141f77ded648728", "Url": "https://api.github.com/repos/cozu/asistentul_cetateanului_api_intern", "Date": "2016-11-23T15:16:58Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (chainId == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/2055/buggy-version/mmtf-encoder.src.main.java.org.rcsb.mmtf.encoder.ArrayConverters.java", "BodyUseAPI": [], "Fixed commit": "ddb09556d8f6cc3cc3d2cd90b1f1c25756b75232", "Url": "https://api.github.com/repos/rcsb/mmtf-java", "Date": "2016-04-13T14:48:53Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.os.Bundle.getString(Intent.EXTRA_TEXT)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (url != null) { android.util.Log.d(com.google.android.exoplayer2.demo.SampleChooserActivity.TAG, (\"onCreate() \" + url)); YTFlow = com.google.android.exoplayer2.util.Util.YTChecker(url); android.util.Log.d(com.google.android.exoplayer2.demo.SampleChooserActivity.TAG, (\"onCreate() YT flow = \" + YTFlow)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/3874/buggy-version/demo.src.main.java.com.google.android.exoplayer2.demo.SampleChooserActivity.java", "BodyUseAPI": ["android.util.Log.d(java.lang.String,java.lang.String)", "com.google.android.exoplayer2.util.Util.YTChecker(java.lang.String)"], "Fixed commit": "181e911ca9e2a7837b56f229317339df1249e3ff", "Url": "https://api.github.com/repos/WeiChungChang/ExoPlayer", "Date": "2017-03-30T00:47:36Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((redirectUrl != null) && ((redirectUrl.startsWith(HttpConstants.SCHEME_HTTP)) || (redirectUrl.startsWith(HttpConstants.SCHEME_HTTPS)))) { targetUrl = redirectUrl; }else { targetUrl = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/2790/buggy-version/pac4j-core.src.main.java.org.pac4j.core.engine.DefaultLogoutLogic.java", "BodyUseAPI": [], "Fixed commit": "c5a2de7f03b13da848b7fca312cf0fd5536063de", "Url": "https://api.github.com/repos/leleuj/pac4j", "Date": "2016-12-06T19:26:25Z"},
{"Line": "=>340", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (executerService.isStarted()) { messageDispatcher.registerCell(cell); cell.preStart(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/2729/buggy-version/actor4j-core.src.main.java.actor4j.core.ActorSystemImpl.java", "BodyUseAPI": [], "Fixed commit": "b8c680226c7f583857e308a645ea399d3eae2557", "Url": "https://api.github.com/repos/relvaner/actor4j-core", "Date": "2017-02-16T19:39:22Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((parameters.length) > 0) { msg = java.lang.String.format(msg, parameters); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/6701/buggy-version/src.main.java.com.hazelcast.qasonar.utils.DebugUtils.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,java.lang.Object[])"], "Fixed commit": "1e929db5d73bd927dbe5e8acd5512d19baa6a1d3", "Url": "https://api.github.com/repos/hazelcast/hazelcast-qa", "Date": "2017-01-09T13:24:44Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["((com.translator.brozzz.translator.activities.MainActivity) (getActivity())).getSupportActionBar()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (actionBar != null) { com.translator.brozzz.translator.interfaces.TabHistoryFragment selectedTab = ((com.translator.brozzz.translator.interfaces.TabHistoryFragment) (historyTabPagerAdapter.getItem(tab.getPosition()))); selectedTab.setDeleteImageButton(((android.widget.ImageButton) (actionBar.getCustomView().findViewById(R.id.ib_deleteAll)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/436/buggy-version/app.src.main.java.com.translator.brozzz.translator.fragments.HistoryPagerFragment.java", "BodyUseAPI": ["actionBar.getCustomView().findViewById(R.id.ib_deleteAll)", "android.support.v7.app.ActionBar.getCustomView()", "com.translator.brozzz.translator.interfaces.TabHistoryFragment.setDeleteImageButton(((android.widget.ImageButton) (actionBar.getCustomView().findViewById(R.id.ib_deleteAll))))"], "Fixed commit": "b4eafae356e81de510faf394ba4e43b8e2324b2f", "Url": "https://api.github.com/repos/BroZZZ/Translator", "Date": "2017-04-12T10:40:03Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((lastWorkload.length()) == 0) { java.lang.System.out.println(\"Il file nextWorkload.csv era vuoto. Inserire manualmente un URL:\"); first_url = progettoingsoft.ProgettoIngSoft.user_input.next(); }else { progettoingsoft.Organizer.fileWorkload(lastWorkload, workload); first_url = ((java.lang.String) (workload.get(0))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/840/buggy-version/src.progettoingsoft.ProgettoIngSoft.java", "BodyUseAPI": ["progettoingsoft.Organizer.fileWorkload(java.io.File,java.util.ArrayList<java.lang.String>)"], "Fixed commit": "47643d083ffc96060ea13b0a27c61e3a6f1530a0", "Url": "https://api.github.com/repos/gioggi2002/ProgettoIngSoft", "Date": "2012-09-19T09:20:10Z"},
{"Line": "=>328", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((image) == null) { android.widget.Toast.makeText(getActivity(), \"You have not put image\", Toast.LENGTH_SHORT).show(); }else { promotion.put(ParseConstants.KEY_IMAGE, image); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/29/buggy-version/src.com.example.storeinbusiness.AddPromotion.java", "BodyUseAPI": [], "Fixed commit": "7d7ffc047557b4eed7d6828327168e18806999fa", "Url": "https://api.github.com/repos/shanmarkus/StoreIn-Business", "Date": "2014-05-19T14:52:49Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((user) == null) { android.util.Log.w(getString(R.string.log_warning), getString(R.string.userNotLoggedIn)); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/1290/buggy-version/app.src.main.java.edu.gcc.whiletrue.pingit.SettingsActivity.java", "BodyUseAPI": [], "Fixed commit": "37309b47aeedfdc1552210219a2ae848bffb9edf", "Url": "https://api.github.com/repos/stuartsoft/PingIT", "Date": "2016-04-07T00:28:49Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(userName.equals(user))) { roster.createEntry(jid, user, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/5134/buggy-version/xmpp-web-client-jetty.src.main.java.com.vigneshjayavel.api.XmppAuthenticationServlet.java", "BodyUseAPI": ["org.jivesoftware.smack.Roster.createEntry(java.lang.String,java.lang.String,<nulltype>)"], "Fixed commit": "ce4a9183c4d83955e041cd96242376cd76f1f031", "Url": "https://api.github.com/repos/vigneshjayavel/xmpp-web-client-jetty", "Date": "2014-02-13T10:20:51Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((Layer.getObjects().size()) > 0) { for (Uniwork.Graphics.NGGeometryObject2D Object : Layer.getObjects()) { setImageName(Layer.getImageName()); GeometryObject = Object; GeometryObjectColor = Layer.getObjectColor(); Selected = Layer.isObjectSelected(Object); super.InternalRender(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/554/buggy-version/src.Grids.GridLayerDisplayManager.java", "BodyUseAPI": ["Grids.GridLayer.getObjects()", "Grids.GridLayer.getObjectColor()", "Grids.GridLayer.getImageName()", "Grids.GridLayer.isObjectSelected(Uniwork.Graphics.NGGeometryObject2D)", "Grids.GridLayerDisplayManager.setImageName(Layer.getImageName())"], "Fixed commit": "4f286dd271481f27b93b6f0833cb2356e5ea77a8", "Url": "https://api.github.com/repos/bart4223/Grids", "Date": "2014-12-14T13:40:33Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.time.LocalDateTime.now()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((now.getMonth().getValue()) == month) { if ((now.getDayOfMonth()) < day) { notFuture = false; }else if ((now.getDayOfMonth()) == day) { if ((((now.getHour()) * 100) + (now.getMinute())) < time) { notFuture = false; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/5085/buggy-version/model.ValidationSystem.java", "BodyUseAPI": ["java.time.LocalDateTime.getMinute()", "java.time.LocalDateTime.getDayOfMonth()", "java.time.LocalDateTime.getDayOfMonth()", "java.time.LocalDateTime.getHour()"], "Fixed commit": "89d527c2a930ac8b1e62ef71643216679c416922", "Url": "https://api.github.com/repos/xuanshenbo/KPSmart-System", "Date": "2016-06-15T12:28:06Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i != (-1)) { way.add(0, from); }else { way.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/7883/buggy-version/src.search.SearchUtils.java", "BodyUseAPI": [], "Fixed commit": "e0158d2a7d9b12489a2e6a9c6cfb204c5595383d", "Url": "https://api.github.com/repos/matthiasc02/ALD-Routenplaner", "Date": "2016-06-30T14:43:01Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["spell.Trie.find(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (found != null) { if ((found.getCount()) != 0) { java.lang.System.out.println(found.getCount()); return lowered; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/6849/buggy-version/SpellCorrector.java", "BodyUseAPI": ["java.io.PrintStream.println(found.getCount())", "spell.Node.getCount()", "spell.Node.getCount()"], "Fixed commit": "39a8669886b57c2788c73ea3d868a3e530c210bd", "Url": "https://api.github.com/repos/jakehasler/spell-corrector", "Date": "2016-01-20T03:13:25Z"},
{"Line": "=>765", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(mGotoPostId))) { position = mDetailAdapter.getPositionByPostId(mGotoPostId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/6906/buggy-version/hipda.src.main.java.net.jejer.hipda.ui.ThreadDetailFragment.java", "BodyUseAPI": ["net.jejer.hipda.ui.adapter.ThreadDetailAdapter.getPositionByPostId(java.lang.String)"], "Fixed commit": "52771dd14264f4f54477760f35196d4908d62dcc", "Url": "https://api.github.com/repos/GreenSkinMonster/hipda", "Date": "2016-11-21T09:54:32Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((spaceinvaders.group_22.logger.Logger.logLevel) <= (LogEvent.Type.INFO.getValue())) { writeLog(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/12/buggy-version/src.main.java.spaceinvaders.group_22.logger.Logger.java", "BodyUseAPI": [], "Fixed commit": "8319c4d4117fabf7ab67533faa1987d93e57318d", "Url": "https://api.github.com/repos/doriandekoning/TI2206-SEM-Group-22", "Date": "2015-10-28T11:03:04Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mesh.getTexture(Texture2D.TEXTURE_0).textureType) == (com.nucleus.texturing.TextureType.Untextured)) { mesh.setColor(index, mesh.getMaterial().getAmbient()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/8875/buggy-version/src.main.java.com.graphicsengine.scene.SharedMeshQuad.java", "BodyUseAPI": ["com.graphicsengine.spritemesh.SpriteMesh.getMaterial()", "com.graphicsengine.spritemesh.SpriteMesh.setColor(int,mesh.getMaterial().getAmbient())", "mesh.getMaterial().getAmbient()"], "Fixed commit": "0fe3d5249effb4da18d9918ae319ec654c0bc8a1", "Url": "https://api.github.com/repos/rsahlin/graphics-engine", "Date": "2017-07-10T07:15:18Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((rectangle) == null) && ((mesh.getTexture(Texture2D.TEXTURE_0).getTextureType()) == (com.nucleus.texturing.TextureType.Untextured))) { throw new java.lang.IllegalArgumentException(\"Node does not define RECT and texture is untextured\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/8875/buggy-version/src.main.java.com.graphicsengine.scene.SharedMeshQuad.java", "BodyUseAPI": [], "Fixed commit": "0fe3d5249effb4da18d9918ae319ec654c0bc8a1", "Url": "https://api.github.com/repos/rsahlin/graphics-engine", "Date": "2017-07-10T07:15:18Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["editLongitude.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (longitudeString.equals(\"\")) { longitudeString = \"0.0\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/7702/buggy-version/MyriadQuest.src.main.java.com.example.myriadquest.myriadquest.SettingsActivity.java", "BodyUseAPI": [], "Fixed commit": "58c594ffa24a92fdedcf5feb1ae6d967237ad516", "Url": "https://api.github.com/repos/CFangsrud/MyriadQuest", "Date": "2014-06-15T21:52:15Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["editLatitude.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (latitudeString.equals(\"\")) { latitudeString = \"0.0\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/7702/buggy-version/MyriadQuest.src.main.java.com.example.myriadquest.myriadquest.SettingsActivity.java", "BodyUseAPI": [], "Fixed commit": "58c594ffa24a92fdedcf5feb1ae6d967237ad516", "Url": "https://api.github.com/repos/CFangsrud/MyriadQuest", "Date": "2014-06-15T21:52:15Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.intellij.openapi.vcs.roots.VcsRootErrorsFinder.hasVcsChecker(mapping.getVcs()))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/4985/buggy-version/platform.vcs-impl.src.com.intellij.openapi.vcs.roots.VcsRootErrorsFinder.java", "BodyUseAPI": [], "Fixed commit": "f64c70049ef5f5ec1735ea0288b0b97559abb342", "Url": "https://api.github.com/repos/JetBrains/intellij-community", "Date": "2013-11-05T10:41:06Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JOptionPane.showInputDialog(lisong_mechlab.view.ProgramInit.lsml(),java.lang.String,java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (null == input) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/4750/buggy-version/src.lisong_mechlab.view.action.ImportMechAction.java", "BodyUseAPI": [], "Fixed commit": "d8205061824bde820164806ed00e1d878ab8bd20", "Url": "https://api.github.com/repos/EmilyBjoerk/lsml", "Date": "2013-12-25T18:12:59Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JOptionPane.showInputDialog(lisong_mechlab.view.mechlab.LoadoutFrame,java.lang.String,java.lang.String,int,<nulltype>,<nulltype>,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (input == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/4750/buggy-version/src.lisong_mechlab.view.action.MaxArmorAction.java", "BodyUseAPI": [], "Fixed commit": "d8205061824bde820164806ed00e1d878ab8bd20", "Url": "https://api.github.com/repos/EmilyBjoerk/lsml", "Date": "2013-12-25T18:12:59Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((type) == null) { if ((other.type) != null) return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/2463/buggy-version/Core.de.devboost.buildboost.src.de.devboost.buildboost.model.UnresolvedDependency.java", "BodyUseAPI": [], "Fixed commit": "1dd2eda566e021282236f28bca27b257ddb82213", "Url": "https://api.github.com/repos/DevBoost/BuildBoost", "Date": "2012-10-17T16:59:08Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(type.equals(other.type))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/2463/buggy-version/Core.de.devboost.buildboost.src.de.devboost.buildboost.model.UnresolvedDependency.java", "BodyUseAPI": [], "Fixed commit": "1dd2eda566e021282236f28bca27b257ddb82213", "Url": "https://api.github.com/repos/DevBoost/BuildBoost", "Date": "2012-10-17T16:59:08Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(prefix.isEmpty())) { return withPrefixMatcher(getPrefixMatcher().cloneWithPrefix(prefix)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/6055/buggy-version/src.main.java.org.intellivim.core.command.complete.CompletionResultSetImpl.java", "BodyUseAPI": ["getPrefixMatcher().cloneWithPrefix(java.lang.String)", "org.intellivim.core.command.complete.CompletionResultSetImpl.withPrefixMatcher(getPrefixMatcher().cloneWithPrefix(prefix))"], "Fixed commit": "88e31296863a857e1789f2b7a907f5d484bf5a9e", "Url": "https://api.github.com/repos/dhleong/intellivim", "Date": "2015-03-18T16:20:43Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((i.stats.meaning.correct) + (i.stats.meaning.incorrect)) == 0) return simple;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/7835/buggy-version/src.com.wanikani.androidnotifier.ItemsFragment.java", "BodyUseAPI": [], "Fixed commit": "52a108ea32de4b9af9c4db104ac61df3611cb867", "Url": "https://api.github.com/repos/WaniKani/Android-Notification", "Date": "2013-06-12T10:14:16Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((i.stats.reading.correct) + (i.stats.reading.incorrect)) == 0) return simple;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/7835/buggy-version/src.com.wanikani.androidnotifier.ItemsFragment.java", "BodyUseAPI": [], "Fixed commit": "52a108ea32de4b9af9c4db104ac61df3611cb867", "Url": "https://api.github.com/repos/WaniKani/Android-Notification", "Date": "2013-06-12T10:14:16Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.Integer, com.joyous.goon.TaskData.TasksActRecord.RecordDaily>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (null == recordDaily) { recordDaily = new com.joyous.goon.TaskData.TasksActRecord.RecordDaily(); recordDaily.record = new java.util.HashSet<>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/7063/buggy-version/app.src.main.java.com.joyous.goon.TaskData.TasksActRecord.java", "BodyUseAPI": [], "Fixed commit": "043a662ef1cdd803f912579e8f4d02a4e9570db3", "Url": "https://api.github.com/repos/joyoushunter/Goon", "Date": "2016-07-28T12:32:48Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (todoTitle.contains(\";\")) { android.widget.Toast.makeText(this, \"Try again without the following character: \\\";\\\"\", Toast.LENGTH_LONG).show(); }else { mDatabaseUser.child(\"Todo List\").child(todoTitle).setValue(0); mDatabaseList.child(todoTitle).child(\"List Items\").setValue(0); mDatabaseList.child(todoTitle).child(\"Collaborators\").child(name).setValue(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/5794/buggy-version/app.src.main.java.com.pdp11.qhacks.hackhouse.MainActivity.java", "BodyUseAPI": ["mDatabaseList.child(todoTitle).child(java.lang.String)", "mDatabaseList.child(todoTitle).child(\"Collaborators\").child(java.lang.String)", "mDatabaseList.child(todoTitle).child(\"List Items\").setValue(int)", "mDatabaseUser.child(\"Todo List\").child(java.lang.String)", "com.google.firebase.database.DatabaseReference.child(java.lang.String)", "mDatabaseUser.child(\"Todo List\").child(todoTitle).setValue(int)", "mDatabaseList.child(todoTitle).child(\"Collaborators\").child(name).setValue(int)", "com.google.firebase.database.DatabaseReference.child(java.lang.String)", "mDatabaseList.child(todoTitle).child(java.lang.String)"], "Fixed commit": "36fe6cb0563bb16cfdb22defd0d3bbb3a8139d10", "Url": "https://api.github.com/repos/bitscuit/HackHouse", "Date": "2017-02-05T14:57:34Z"},
{"Line": "=>323", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.esbjon.risks.RiskAgent.RiskType.getProtectiveBonus()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (protectKey == null) return 0; else return java.lang.Math.round(this.getBonus(risk.getProtectiveBonus()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/304/buggy-version/core.src.com.esbjon.inventories.TeamInventory.java", "BodyUseAPI": [], "Fixed commit": "b02d6f74b688b5a6ec297b3a497a574b61ce0740", "Url": "https://api.github.com/repos/k-o-r-t-o/gdxDune", "Date": "2017-09-07T12:04:24Z"},
{"Line": "=>551", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (count == 0) { logger.info(\"Nothing to do... Please check your query file if any.\"); }else { logger.info(((((((\"skipped:\" + skipped) + \"/\") + count) + \" (\") + ((skipped * 100) / count)) + \"%)\")); logger.info(((((((\"setted :\" + setValue) + \"/\") + count) + \" (\") + ((setValue * 100) / count)) + \"%)\")); logger.info((\"consult:\" + (queryParam.getOutfile()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/4386/buggy-version/slib-tools.slib-tools-sml-toolkit.src.main.java.slib.tools.smltoolkit.sm.cli.core.SmCli.java", "BodyUseAPI": ["org.slf4j.Logger.info(java.lang.String)", "org.slf4j.Logger.info(java.lang.String)"], "Fixed commit": "c558ffc4eeb6496ea500727ac2c97a6defb3b5de", "Url": "https://api.github.com/repos/sharispe/slib", "Date": "2015-02-03T17:16:54Z"},
{"Line": "=>423", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (count == 0) { logger.info(\"Nothing to do... Please check your query file if any.\"); }else { logger.info(((((((\"skipped:\" + skipped) + \"/\") + count) + \"(\") + ((skipped * 100) / count)) + \"%)\")); logger.info(((((((\"setted :\" + setValue) + \"/\") + count) + \"(\") + ((setValue * 100) / count)) + \"%)\")); logger.info((\"consult:\" + (queryParam.getOutfile()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/4386/buggy-version/slib-tools.slib-tools-sml-toolkit.src.main.java.slib.tools.smltoolkit.sm.cli.core.SmCli.java", "BodyUseAPI": ["org.slf4j.Logger.info(java.lang.String)", "org.slf4j.Logger.info(java.lang.String)"], "Fixed commit": "c558ffc4eeb6496ea500727ac2c97a6defb3b5de", "Url": "https://api.github.com/repos/sharispe/slib", "Date": "2015-02-03T17:16:54Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((signature) != null) { result = (31 * result) + (signature.hashCode()); }else { result = 31 * result; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/7849/buggy-version/src.main.java.tahrir.io.net.microblogging.microblogs.Microblog.java", "BodyUseAPI": [], "Fixed commit": "a7679c200718deeb198b20114aa80c889eed459f", "Url": "https://api.github.com/repos/sanity/tahrir", "Date": "2013-07-08T13:27:41Z"},
{"Line": "=>4126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wikipedia.Wiki.fetch(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (line.contains(\"Unrecognized values for parameter\")) return new java.lang.String[0];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/8343/buggy-version/src.org.wikipedia.Wiki.java", "BodyUseAPI": [], "Fixed commit": "1a2f02970f18003f8f51d20f820094551796314d", "Url": "https://api.github.com/repos/vonloxley/wiki-java-1", "Date": "2015-12-05T15:41:23Z"},
{"Line": "=>456", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((e != null) && ((e.getMessage()) != null)) { android.util.Log.e(\"Sugar\", e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/6215/buggy-version/library.src.main.java.com.orm.util.ReflectionUtil.java", "BodyUseAPI": ["java.io.IOException.getMessage()", "android.util.Log.e(java.lang.String,java.lang.String)"], "Fixed commit": "5f6a23e6f9572fdc019c6b1f04c83595601df8d9", "Url": "https://api.github.com/repos/mbagliojr/sugar", "Date": "2015-10-22T18:34:19Z"},
{"Line": "=>478", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((e1 != null) && ((e1.getMessage()) != null)) { android.util.Log.e(\"Sugar\", e1.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/6215/buggy-version/library.src.main.java.com.orm.util.ReflectionUtil.java", "BodyUseAPI": ["android.util.Log.e(java.lang.String,java.lang.String)", "java.lang.ExceptionInInitializerError.getMessage()"], "Fixed commit": "5f6a23e6f9572fdc019c6b1f04c83595601df8d9", "Url": "https://api.github.com/repos/mbagliojr/sugar", "Date": "2015-10-22T18:34:19Z"},
{"Line": "=>460", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((e != null) && ((e.getMessage()) != null)) { android.util.Log.e(\"Sugar\", e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/6215/buggy-version/library.src.main.java.com.orm.util.ReflectionUtil.java", "BodyUseAPI": ["android.util.Log.e(java.lang.String,e.getMessage())", "PackageManager.NameNotFoundException.getMessage()"], "Fixed commit": "5f6a23e6f9572fdc019c6b1f04c83595601df8d9", "Url": "https://api.github.com/repos/mbagliojr/sugar", "Date": "2015-10-22T18:34:19Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((com.orm.dsl.Relationship) (field.getAnnotation(com.orm.dsl.Relationship.class))).cascade()) { success = recordsToSave.add(((com.orm.SugarRecord) (child))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/6215/buggy-version/library.src.main.java.com.orm.util.ReflectionUtil.java", "BodyUseAPI": [], "Fixed commit": "5f6a23e6f9572fdc019c6b1f04c83595601df8d9", "Url": "https://api.github.com/repos/mbagliojr/sugar", "Date": "2015-10-22T18:34:19Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((com.orm.dsl.Relationship) (field.getAnnotation(com.orm.dsl.Relationship.class))).cascade()) { com.orm.util.ReflectionUtil.getRecordsToSave(child, recordsToSave, joinTables); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/6215/buggy-version/library.src.main.java.com.orm.util.ReflectionUtil.java", "BodyUseAPI": [], "Fixed commit": "5f6a23e6f9572fdc019c6b1f04c83595601df8d9", "Url": "https://api.github.com/repos/mbagliojr/sugar", "Date": "2015-10-22T18:34:19Z"},
{"Line": "=>474", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((e != null) && ((e.getMessage()) != null)) { android.util.Log.e(\"Sugar\", e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/6215/buggy-version/library.src.main.java.com.orm.util.ReflectionUtil.java", "BodyUseAPI": ["java.lang.ClassNotFoundException.getMessage()", "android.util.Log.e(java.lang.String,java.lang.String)"], "Fixed commit": "5f6a23e6f9572fdc019c6b1f04c83595601df8d9", "Url": "https://api.github.com/repos/mbagliojr/sugar", "Date": "2015-10-22T18:34:19Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.cross(straight)) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/432/buggy-version/src.oneDimensionType.LTStraight.java", "BodyUseAPI": [], "Fixed commit": "e0d8e601596068d600e8a5ee9e1f97722b1109f0", "Url": "https://api.github.com/repos/xloypaypa/LTGeometry2D", "Date": "2015-02-11T09:54:48Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (coverUri != null) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/2870/buggy-version/app.src.main.java.com.blockhead.bhmusic.activities.ViewPlaylistActivity.java", "BodyUseAPI": [], "Fixed commit": "19c4a09160a7d0ca071c2c9a43c3d501fcaddb2c", "Url": "https://api.github.com/repos/gusrsilva/BHMusic", "Date": "2015-07-30T01:09:03Z"},
{"Line": "=>442", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(newBoxactive)) newBoxactive = java.net.Inet4Address.getByName(se.z_app.stb.api.STBContainer.instance().getActiveSTB().getIP()).isReachable(timeout);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/8079/buggy-version/src.se.z_app.zmote.gui.MainTabActivity.java", "BodyUseAPI": [], "Fixed commit": "96df6b26128e6289538f8ce35984306d2a9793a2", "Url": "https://api.github.com/repos/Z-app/zmote", "Date": "2012-11-18T14:18:34Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eyeseetea.malariacare.data.database.model.Question.findByUID(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (question == null) { android.util.Log.e(org.eyeseetea.malariacare.data.sync.importer.ConvertFromSDKVisitor.TAG, (\"Question not found with dataelement uid \" + questionUID)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/3302/buggy-version/app.src.main.java.org.eyeseetea.malariacare.data.sync.importer.ConvertFromSDKVisitor.java", "BodyUseAPI": [], "Fixed commit": "facead8726e798dc089123af2ffa836bdbedd3be", "Url": "https://api.github.com/repos/EyeSeeTea/pictureapp", "Date": "2017-02-16T12:20:37Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (event.isCancelled()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/2453/buggy-version/src.main.java.net.wtako.MineralLimiter.EventHandlers.BlockActionsListener.java", "BodyUseAPI": [], "Fixed commit": "34ff58acac3bba868c48655e5728fdca70d9fe54", "Url": "https://api.github.com/repos/Saren-Arterius/MineralLimiter", "Date": "2014-08-08T14:48:45Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(currentlySelected().isDirectory())) { chooseField.setText(currentlySelected().name()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/4369/buggy-version/src.net.pixelstatic.utils.scene2D.DefaultFileChooser.java", "BodyUseAPI": [], "Fixed commit": "3f7c28c029de9a2900e2559793872e5202d6d8f4", "Url": "https://api.github.com/repos/Anuken/uCore-Tools", "Date": "2016-05-20T03:04:55Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (selectedList.contains(list.get(position))) cb.setChecked(true); else cb.setChecked(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/5982/buggy-version/src.edu.nkuresearch.securitychecker.fragments.PermSearchFrag.java", "BodyUseAPI": [], "Fixed commit": "49f2159e2b00dd156042cf64872a5dcb8f6accb4", "Url": "https://api.github.com/repos/leibreichb1/Security-App", "Date": "2012-10-29T15:03:30Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.digitalpebble.behemoth.DocumentFilter.isRequired(org.apache.hadoop.conf.Configuration)", "com.digitalpebble.behemoth.DocumentFilter.getFilters(org.apache.hadoop.conf.Configuration)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (doFilter && ((filters.keep(value)) == false)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/3028/buggy-version/core.src.main.java.com.digitalpebble.behemoth.util.CorpusReader.java", "BodyUseAPI": [], "Fixed commit": "6340ade549f5c8c2ecbe4141be24f1eeda1634a6", "Url": "https://api.github.com/repos/DigitalPebble/behemoth", "Date": "2012-06-28T10:33:19Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((doc.select(\"div.c00-pilot\").size()) > 1) { org.jsoup.nodes.Element imageEle = doc.select(\"div.c00-pilot\").last(); migrateRightRailImage(imageEle, midSizeLowerRightNode, locale, urlMap); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/2969/buggy-version/OVWMigration.src.main.com.cisco.dse.global.migration.web.WebVariation3.java", "BodyUseAPI": ["doc.select(\"div.c00-pilot\").last()", "org.jsoup.nodes.Document.select(java.lang.String)"], "Fixed commit": "3e61114c3e6459b41f610d617a6e15d86abd1a65", "Url": "https://api.github.com/repos/shreyabhatnagar/OVWMigration", "Date": "2016-02-15T10:16:26Z"},
{"Line": "=>584", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mMissionPath) != null) { mMissionPath.remove(); mMissionPath = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/2722/buggy-version/Android.src.org.droidplanner.android.maps.providers.baidu_map.BaiduMapFragment.java", "BodyUseAPI": [], "Fixed commit": "aa8809d25f6f8e18b6fa31d0213ea44b6d02c40c", "Url": "https://api.github.com/repos/bithollow/Tower", "Date": "2016-07-13T10:00:30Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.optLong(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((id > 0) && (!(addedIds.contains(id)))) { addedIds.add(id); peopleList.put(person); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/9158/buggy-version/astrid.src.com.todoroo.astrid.ui.PeopleContainer.java", "BodyUseAPI": ["java.util.HashSet<java.lang.Long>.add(java.lang.Long)"], "Fixed commit": "1447f5af11574cb2c9fee4b12165a1e2b9ea9b86", "Url": "https://api.github.com/repos/todoroo/astrid", "Date": "2012-12-07T20:32:31Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.todoroo.astrid.ui.PeopleContainer.createUserJson(android.widget.TextView)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (person != null) { java.lang.String email = person.optString(\"email\"); java.lang.Long id = person.optLong(\"id\", (-1)); if ((!(android.text.TextUtils.isEmpty(email))) && (!(addedEmails.contains(email)))) { addedEmails.add(email); if (id > 0) addedIds.add(id); peopleList.put(person); }else if ((id > 0) && (!(addedIds.contains(id)))) { addedIds.add(id); peopleList.put(person); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/9158/buggy-version/astrid.src.com.todoroo.astrid.ui.PeopleContainer.java", "BodyUseAPI": ["org.json.JSONArray.put(org.json.JSONObject)", "org.json.JSONObject.optString(java.lang.String)", "org.json.JSONObject.optLong(java.lang.String,int)", "org.json.JSONArray.put(org.json.JSONObject)"], "Fixed commit": "1447f5af11574cb2c9fee4b12165a1e2b9ea9b86", "Url": "https://api.github.com/repos/todoroo/astrid", "Date": "2012-12-07T20:32:31Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.ui.texteditor.ITextEditor.getEditorInput()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (editorInput instanceof org.eclipse.ui.IStorageEditorInput) { org.eclipse.ui.IStorageEditorInput storageInput = ((org.eclipse.ui.IStorageEditorInput) (editorInput)); org.eclipse.core.runtime.IPath path = storageInput.getStorage().getFullPath(); java.io.File file = path.toFile(); if (!(file.exists())) { org.eclipse.core.resources.IFile iFile = org.eclipse.core.resources.ResourcesPlugin.getWorkspace().getRoot().getFile(path); file = iFile.getLocation().toFile(); } store = org.eclipse.core.filesystem.EFS.getStore(file.toURI()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/3348/buggy-version/plugins.com.aptana.ruby.debug.ui.src.com.aptana.ruby.debug.ui.RubyLineBreakpointAdapter.java", "BodyUseAPI": [], "Fixed commit": "4a0874159ade5d90e9f15be9b8cb166e6679de26", "Url": "https://api.github.com/repos/aptana/studio3-ruby", "Date": "2011-04-25T15:33:29Z"},
{"Line": "=>883", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((oname.getPrefix()) == null) || (\"\".equals(oname.getPrefix()))) { oname = new net.sf.saxon.s9api.QName(\"\", name); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/8209/buggy-version/src.com.xmlcalabash.model.Parser.java", "BodyUseAPI": [], "Fixed commit": "84b47eb5178ce781b7cbad82014135fff70952bb", "Url": "https://api.github.com/repos/Vampire/xmlcalabash1", "Date": "2013-07-25T22:39:41Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((minutes % 60) == 0) time += minutes % 60;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/739/buggy-version/utransport.src.main.java.com.example.utransport.ShowStop.java", "BodyUseAPI": [], "Fixed commit": "471ef2f711d3252e6e4742f3cdec1a68c0ec6540", "Url": "https://api.github.com/repos/BrianMBrannon/UTransport", "Date": "2014-07-04T19:07:52Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(target.isEmpty())) { isShooting = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/864/buggy-version/teedee.src.com.me.teedee.towers.MultiTower.java", "BodyUseAPI": [], "Fixed commit": "2289f524139e50236f03dfab8412c36c377bc887", "Url": "https://api.github.com/repos/Nieo/teedee", "Date": "2014-05-12T13:48:36Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["at.er.ytbattle.plugin.BattlePlugin.game().getTeamManager().getTeamByDyeColor(org.bukkit.DyeColor)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (victim == null) { player.sendMessage(((at.er.ytbattle.plugin.BattlePlugin.prefix()) + \"You can't break wool that doesn't belong to a team!\")); event.setCancelled(true); }else { victim.getBlockPlaceTimerManager().woolBreak(); if (at.er.ytbattle.plugin.BattlePlugin.game().getInvincibilityTimerManager().timerRunning(player)) { at.er.ytbattle.plugin.BattlePlugin.game().getInvincibilityTimerManager().stopTimer(player); player.sendMessage(((at.er.ytbattle.plugin.BattlePlugin.prefix()) + \"You have lost your invincibility!\")); } org.bukkit.Bukkit.broadcastMessage((((((((at.er.ytbattle.plugin.BattlePlugin.prefix()) + (player.getName())) + \" destroyed a \") + (victim.getTeamColor().getChatColor())) + (victim.getTeamColor().getLongName())) + (org.bukkit.ChatColor.RESET)) + \" wool!\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/2980/buggy-version/src.main.java.at.er.ytbattle.plugin.event.BlockBreakListener.java", "BodyUseAPI": ["at.er.ytbattle.plugin.team.Team.getTeamColor()", "victim.getTeamColor().getLongName()", "victim.getTeamColor().getChatColor()", "at.er.ytbattle.plugin.team.Team.getTeamColor()", "victim.getBlockPlaceTimerManager().woolBreak()", "at.er.ytbattle.plugin.team.Team.getBlockPlaceTimerManager()", "org.bukkit.Bukkit.broadcastMessage((((((((at.er.ytbattle.plugin.BattlePlugin.prefix()) + (player.getName())) + \" destroyed a \") + (victim.getTeamColor().getChatColor())) + (victim.getTeamColor().getLongName())) + (org.bukkit.ChatColor.RESET)) + \" wool!\"))"], "Fixed commit": "643c1b9cf8e1a25c2174f29ba3c44ffbb88ef14d", "Url": "https://api.github.com/repos/ReneHollander/yt-battle", "Date": "2015-09-05T21:23:41Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["server.getServerConfig().getProperties()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (properties != null) { java.lang.String bufferSize = properties.getProperty(\"ebean.changeLog.bufferSize\"); if (bufferSize != null) { defaultBufferSize = java.lang.Integer.parseInt(bufferSize); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/2163/buggy-version/src.main.java.com.avaje.ebeaninternal.server.changelog.DefaultChangeLogListener.java", "BodyUseAPI": ["java.util.Properties.getProperty(java.lang.String)"], "Fixed commit": "3f0f5c7fde0766b1f35260e58c37f806c9a5d70b", "Url": "https://api.github.com/repos/ebean-orm/ebean", "Date": "2015-08-30T11:38:05Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ohiostate.chuckmyphone.chuckmyphone.NavigationHelper.getInstance().previousFragmentTag()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (previousTag != null) { if (previousTag.equals(\"' Profile\")) getSupportActionBar().setTitle(((com.ohiostate.chuckmyphone.chuckmyphone.CurrentUser.getInstance().getUsername()) + previousTag)); else getSupportActionBar().setTitle(previousTag); markHamburgerMenu(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/2066/buggy-version/ChuckMyPhone.app.src.main.java.com.ohiostate.chuckmyphone.chuckmyphone.MainActivity.java", "BodyUseAPI": ["getSupportActionBar().setTitle(java.lang.String)", "getSupportActionBar().setTitle(((com.ohiostate.chuckmyphone.chuckmyphone.CurrentUser.getInstance().getUsername()) + previousTag))", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "5880092456aa891a8403da8f2fc0f90c61771461", "Url": "https://api.github.com/repos/timtaylorosu16/ChuckMyPhone", "Date": "2016-04-02T20:21:20Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (noFragmentsLeft()) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/2066/buggy-version/ChuckMyPhone.app.src.main.java.com.ohiostate.chuckmyphone.chuckmyphone.NavigationHelper.java", "BodyUseAPI": [], "Fixed commit": "5880092456aa891a8403da8f2fc0f90c61771461", "Url": "https://api.github.com/repos/timtaylorosu16/ChuckMyPhone", "Date": "2016-04-02T20:21:20Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["illarion.common.graphics.AbstractTextureLoader<A, I>.getResourceDirectory(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (resourceDirIndex == (-1)) { throw new java.lang.IllegalArgumentException((\"Requested resource is not present in classpath, \" + \"because its root directory is missing.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/7185/buggy-version/illacommon.src.illarion.common.graphics.AbstractTextureLoader.java", "BodyUseAPI": [], "Fixed commit": "db21fd584dd3a8fe9bbe50179487bebb2ebff7f0", "Url": "https://api.github.com/repos/Tiim/Illarion-Java", "Date": "2012-07-07T16:40:27Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.lastIndexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (slashPos != (-1)) { packageName = packageAndClass.substring(0, packageAndClass.lastIndexOf(\"/\")); }else { packageName = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/8595/buggy-version/src.main.java.com.github.kornilova_l.config.MethodConfig.java", "BodyUseAPI": [], "Fixed commit": "25d58b4bae9ae90397bc22a0562f6659db061a13", "Url": "https://api.github.com/repos/kornilova-l/flamegraph-visualizer", "Date": "2017-07-11T12:09:08Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (beginningOfClassName != 0) { packageName = fullName.substring(0, (beginningOfClassName - 1)); }else { packageName = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/8595/buggy-version/src.main.java.com.github.kornilova_l.config.MethodConfig.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "25d58b4bae9ae90397bc22a0562f6659db061a13", "Url": "https://api.github.com/repos/kornilova-l/flamegraph-visualizer", "Date": "2017-07-11T12:09:08Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (file.exists()) { properties.load(new java.io.FileInputStream(\"vr4java-client-ext.properties\")); }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/4714/buggy-version/vr4java-client.src.main.java.org.bubblecloud.vr4java.util.VrClientProperties.java", "BodyUseAPI": [], "Fixed commit": "e0a4580d42375e3cb727310de47e8536736195bc", "Url": "https://api.github.com/repos/bubblecloud/vr4java", "Date": "2014-11-16T18:24:02Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (speechId.equals(org.bubblecloud.vr4java.ui.Aide.SPEECH_REQUEST_USERNAME)) { sceneContext.getHudController().askUserInput(org.bubblecloud.vr4java.ui.Aide.INPUT_USERNAME, \"Your username:\", this); }else if (speechId.equals(org.bubblecloud.vr4java.ui.Aide.SPEECH_RECONNECT_WITH_NEW_IDENTITY)) { sceneContext.getVrClient().restart(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/4714/buggy-version/vr4java-client.src.main.java.org.bubblecloud.vr4java.ui.Aide.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "e0a4580d42375e3cb727310de47e8536736195bc", "Url": "https://api.github.com/repos/bubblecloud/vr4java", "Date": "2014-11-16T18:24:02Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["processPreparator.feedExchange(exchange).invoke().getPreprocessData()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(handleDeclarationOfInterest(exchange, preprocessData.getServiceEvent()))) { exchangeTools.sendToInterestedParties(preprocessData, exchange); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/4518/buggy-version/camel.src.main.java.com.akivaliaho.ExchangeToServiceEvent.java", "BodyUseAPI": ["com.akivaliaho.ExchangeTools.sendToInterestedParties(com.akivaliaho.PreProcessData,org.apache.camel.Exchange)"], "Fixed commit": "c48d4a4590a1a9f722fe6fc0803c9ce72af67e53", "Url": "https://api.github.com/repos/AkiValiaho/ScalableArchitechture", "Date": "2017-05-19T19:45:33Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.hadoop.yarn.server.nodemanager.containermanager.resourceplugin.fpga.IntelFpgaOpenclPlugin.InnerShellExecutor.getMajorAndMinorNumber(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (null != majorMinorNumber) { java.lang.String[] mmn = majorMinorNumber.split(\":\"); this.aliasMap.put(majorMinorNumber, aliasName); list.add(new org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.resources.fpga.FpgaResourceAllocator.FpgaDevice(getFpgaType(), java.lang.Integer.parseInt(mmn[0]), java.lang.Integer.parseInt(mmn[1]), null, fields[0], aliasName, fields[1], fields[2], fields[3])); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/8082/buggy-version/hadoop-yarn-project.hadoop-yarn.hadoop-yarn-server.hadoop-yarn-server-nodemanager.src.main.java.org.apache.hadoop.yarn.server.nodemanager.containermanager.resourceplugin.fpga.IntelFpgaOpenclPlugin.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)", "java.lang.String.split(java.lang.String)"], "Fixed commit": "80e14541a69ecfb3e618fef1c920b3a00fbb44dd", "Url": "https://api.github.com/repos/tangzhankun/hadoop", "Date": "2017-11-22T12:40:36Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((speedY) < 0) speedY = -(speedY);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/3405/buggy-version/app.src.main.java.com.example.brickses2.Ball.java", "BodyUseAPI": [], "Fixed commit": "58af60d8f95aed386807c44d6934cd6de88ea650", "Url": "https://api.github.com/repos/Serwerty/Bricks", "Date": "2015-11-07T16:31:03Z"},
{"Line": "=>668", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((feedItem.getType()) != (social.entourage.android.api.model.TimestampedObject.ENTOURAGE_CARD)) || (FeedItem.STATUS_OPEN.equals(feedItem.getStatus()))) { addDiscussionTourStartCard(now); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/4581/buggy-version/app.src.main.java.social.entourage.android.map.tour.information.TourInformationFragment.java", "BodyUseAPI": [], "Fixed commit": "a4f71893b5f64916f1fcd4f946593afea3282363", "Url": "https://api.github.com/repos/ReseauEntourage/entourage-android", "Date": "2016-05-24T08:22:22Z"},
{"Line": "=>1096", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((feedItem.getType()) == (social.entourage.android.api.model.TimestampedObject.TOUR_CARD)) { tourTimestampList.add(tourTimestamp); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/4581/buggy-version/app.src.main.java.social.entourage.android.map.tour.information.TourInformationFragment.java", "BodyUseAPI": [], "Fixed commit": "a4f71893b5f64916f1fcd4f946593afea3282363", "Url": "https://api.github.com/repos/ReseauEntourage/entourage-android", "Date": "2016-05-24T08:22:22Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(group.isEmpty())) groups.add(group);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/2559/buggy-version/core.src.com.polarbirds.huldra.model.world.TilesWithOpenings.java", "BodyUseAPI": ["java.util.List<java.util.List<java.lang.Integer>>.add(java.util.List<java.lang.Integer>)"], "Fixed commit": "5f6018ee470ac6d4c8f7282a3a27dc9c4687d068", "Url": "https://api.github.com/repos/haraldfw/huldra", "Date": "2015-05-26T20:24:59Z"},
{"Line": "=>737", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.rockwellcollins.atc.agree.validation.AgreeJavaValidator.getFinalNestId(com.rockwellcollins.atc.agree.agree.Expr)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((base instanceof org.osate.aadl2.DataImplementation) || (base instanceof com.rockwellcollins.atc.agree.agree.ConstStatement)) || (base instanceof com.rockwellcollins.atc.agree.agree.RecordExpr)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/267/buggy-version/fm-workbench.agree.com.rockwellcollins.atc.agree.src.com.rockwellcollins.atc.agree.validation.AgreeJavaValidator.java", "BodyUseAPI": [], "Fixed commit": "1d5cb73f67cc0a9cc594443acde3c867d0b772e2", "Url": "https://api.github.com/repos/smaccm/smaccm", "Date": "2015-03-02T15:19:57Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((a.getDimension()) != (b.getDimension())) { java.lang.System.out.println(\"Invalid points compare\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/5234/buggy-version/bridge.src.main.java.filtering.Point.java", "BodyUseAPI": [], "Fixed commit": "cd485222ffe87d1038ada04fc8cc6af086b24a1a", "Url": "https://api.github.com/repos/nickozoulis/thunderstorm", "Date": "2015-11-29T17:29:59Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.facebook.tsdb.tsdash.server.data.hbase.HBaseDataProvider.pickDataPoints(com.facebook.tsdb.tsdash.server.data.hbase.RowRange,rowKey.getKey(),result.getFamilyMap(com.facebook.tsdb.tsdash.server.data.hbase.HBaseDataProvider.DATAPOINT_FAMILY.getBytes()))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((dataPoints.size()) > 0) metricData.getDataPoints(rowTags).addAll(dataPoints);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/9242/buggy-version/server.src.com.facebook.tsdb.tsdash.server.data.hbase.HBaseDataProvider.java", "BodyUseAPI": ["metricData.getDataPoints(rowTags).addAll(java.util.ArrayList<com.facebook.tsdb.tsdash.server.model.DataPoint>)"], "Fixed commit": "16acd2212925b6e03953e070cde9b2f876d34491", "Url": "https://api.github.com/repos/KevinOrtman/tsquery", "Date": "2012-11-30T23:09:51Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (request.isSticky()) { resultsByTag.remove(request.getTag()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/1678/buggy-version/rxretrobus-library.src.main.java.com.blarley.rxretrobus.RxRetroBus.java", "BodyUseAPI": ["java.util.concurrent.ConcurrentHashMap<java.lang.String, com.blarley.rxretrobus.Request>.remove(request.getTag())", "com.blarley.rxretrobus.Publish.getTag()"], "Fixed commit": "8f6fb5b2f89c18ef5107889c16bf7847515e3b3c", "Url": "https://api.github.com/repos/bmarley/RxRetroBus", "Date": "2017-08-13T00:26:06Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (request.isSticky()) { resultsByTag.remove(request.getTag()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/1678/buggy-version/rxretrobus-library.src.main.java.com.blarley.rxretrobus.RxRetroBus.java", "BodyUseAPI": ["com.blarley.rxretrobus.Publish.getTag()", "java.util.concurrent.ConcurrentHashMap<java.lang.String, com.blarley.rxretrobus.Request>.remove(request.getTag())"], "Fixed commit": "8f6fb5b2f89c18ef5107889c16bf7847515e3b3c", "Url": "https://api.github.com/repos/bmarley/RxRetroBus", "Date": "2017-08-13T00:26:06Z"},
{"Line": "=>894", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.KITKAT)) { seekBar.setProgress(HookMethods.editText.getBackground().getAlpha()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/8538/buggy-version/app.src.main.java.com.marz.snapprefs.HookedLayouts.java", "BodyUseAPI": [], "Fixed commit": "f5296034637bbe2f0760be064b54961719efcd8e", "Url": "https://api.github.com/repos/Andrerm124/Snapprefs", "Date": "2016-09-14T19:07:39Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (android.text.TextUtils.isEmpty(params.title)) { android.widget.LinearLayout.LayoutParams layoutParams = ((android.widget.LinearLayout.LayoutParams) (tvMessage.getLayoutParams())); layoutParams.topMargin = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/2976/buggy-version/library.src.main.java.com.liuguangqiang.cookie.Cookie.java", "BodyUseAPI": [], "Fixed commit": "103582df46f27bde6dfe273c684bf7c28687a216", "Url": "https://api.github.com/repos/liuguangqiang/CookieBar", "Date": "2017-08-11T07:28:09Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((observer.getGameInfo().getAnswers()) != null) { if ((observer.getGameInfo().getAnswers().size()) == (numberOfPlayers - 1)) { nextState(); }else { android.widget.Toast.makeText(observer.getActivityReference(), \"Missing a few answers.. Nag the players!\", Toast.LENGTH_LONG).show(); } }else { android.widget.Toast.makeText(observer.getActivityReference(), \"No answers submitted :(\", Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/8509/buggy-version/app.src.main.java.com.tjuesyv.tjuesyv.states.CreateState.java", "BodyUseAPI": ["com.tjuesyv.tjuesyv.states.CreateState.getActivityReference()", "com.tjuesyv.tjuesyv.states.CreateState.getGameInfo()", "android.widget.Toast.makeText(observer.getActivityReference(), \"Missing a few answers.. Nag the players!\", Toast.LENGTH_LONG).show()", "android.widget.Toast.makeText(observer.getActivityReference(),java.lang.String,Toast.LENGTH_LONG)", "observer.getGameInfo().getAnswers().size()", "android.widget.Toast.makeText(observer.getActivityReference(),java.lang.String,Toast.LENGTH_LONG)", "observer.getGameInfo().getAnswers()", "android.widget.Toast.makeText(observer.getActivityReference(), \"No answers submitted :(\", Toast.LENGTH_LONG).show()", "com.tjuesyv.tjuesyv.states.CreateState.getActivityReference()"], "Fixed commit": "8a8dc81bc51f49b0ce746bfb861a2b6ae8cc6912", "Url": "https://api.github.com/repos/xenondice/tdt4240-project", "Date": "2016-04-23T12:05:24Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sfm.reflect.meta.IndexedElement<T, E>.getPropertyFinder()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (propertyFinder == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/173/buggy-version/src.main.java.org.sfm.reflect.meta.ArrayPropertyFinder.java", "BodyUseAPI": [], "Fixed commit": "d65adcb9be6a4028e1676b528d107309e5edcf12", "Url": "https://api.github.com/repos/arnaudroger/SimpleFlatMapper", "Date": "2014-12-29T21:26:51Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sfm.reflect.meta.IndexedElement.getPropertyFinder()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (propertyFinder == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/173/buggy-version/src.main.java.org.sfm.reflect.meta.TuplePropertyFinder.java", "BodyUseAPI": [], "Fixed commit": "d65adcb9be6a4028e1676b528d107309e5edcf12", "Url": "https://api.github.com/repos/arnaudroger/SimpleFlatMapper", "Date": "2014-12-29T21:26:51Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.audioPlayer) != null) this.audioPlayer.stop();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/7817/buggy-version/src.ru.bmstu.www.view.UserInterfaceController.java", "BodyUseAPI": [], "Fixed commit": "078893c9c9d39cc105703c79a3f826b85b68c992", "Url": "https://api.github.com/repos/DmitryZagr/EqualizerFX", "Date": "2017-02-17T13:20:59Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((packet.getType()) == (edu.rutgers.winlab.mfpubsub.common.packets.MFPacketGNRS.MF_PACKET_TYPE_GNRS)) { getNa().print(java.lang.System.out.printf(\"GNRS packet process haven't been done, temperally skip!\")); }else if ((packet.getType()) == (edu.rutgers.winlab.mfpubsub.common.packets.MFPacketNetworkRenew.MF_PACKET_TYPE_NETWORK_RENEW)) { getNa().print(java.lang.System.out.printf(\"TODO: renew the local table\")); }else { getNa().print(java.lang.System.out.printf(\"PacketProcessorRouter.handlePacket(): shouldn't have such types.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/6830/buggy-version/router.src.main.java.edu.rutgers.winlab.mfpubsub.router.PacketProcessorRouter.java", "BodyUseAPI": ["edu.rutgers.winlab.mfpubsub.common.packets.MFPacket.getType()"], "Fixed commit": "ab35462de65dc78b7cc1022224e673060b607290", "Url": "https://api.github.com/repos/ZoeXXXu/MF-Pub-Sub", "Date": "2017-03-27T18:42:17Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["main.storage.Storage.getTaskHistory()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((taskHistory.peek()) == null) { this.setTasks(new java.util.ArrayList<main.storage.Task>()); }else { this.setTasks(taskHistory.peek()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/2950/buggy-version/src.main.storage.Storage.java", "BodyUseAPI": ["main.storage.Storage.setTasks(taskHistory.peek())", "java.util.LinkedList<java.util.ArrayList<main.storage.Task>>.peek()"], "Fixed commit": "fce7bb21dead4c9a520b7ee20b0f71ee9cb96485", "Url": "https://api.github.com/repos/cs2103aug2014-T13-2J/main", "Date": "2014-10-29T14:38:33Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.softeng.jobcosting.jobcostingapp.Calculations.getOrderIDs()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (orderIDs != null) { listItems = new java.lang.String[orderIDs.length]; for (int i = 0; i < (orderIDs.length); i++) { listItems[i] = \"\" + (orderIDs[i]); } }else { listItems = getResources().getStringArray(R.array.sports_array); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/7262/buggy-version/app.src.main.java.com.softeng.jobcosting.jobcostingapp.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "4fb9b6dc565c9e1a2b25a94d9ca44e4cadb7f37c", "Url": "https://api.github.com/repos/rpdids/CostingApp", "Date": "2016-02-22T21:44:59Z"},
{"Line": "=>652", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (fullPath.equals(baseFolder)) { relativePath = fullPath; }else { relativePath = fullPath.substring(((baseFolder.length()) + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/2138/buggy-version/src.base.util.FileUtil.java", "BodyUseAPI": ["java.lang.String.substring(int)", "java.lang.String.length()"], "Fixed commit": "30f93c38af7d80047cac276f45889b223a4d0a94", "Url": "https://api.github.com/repos/imoblife/ImoblifeLibrary", "Date": "2016-06-13T08:22:12Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getVisibility()) == (VISIBLE)) { mProgressDrawable.start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/9103/buggy-version/materialloadingprogressbar.src.main.java.com.lsjwzh.widget.materialloadingprogressbar.CircleProgressBar.java", "BodyUseAPI": [], "Fixed commit": "03b447229870a5cfed1212fa2f9bda537265edfc", "Url": "https://api.github.com/repos/lsjwzh/MaterialLoadingProgressBar", "Date": "2015-05-15T16:46:33Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.gmail.zariust.otherdrops.drop.DropType.drop(source.getLocation(),com.gmail.zariust.otherdrops.subject.Target,<nulltype>,int,com.gmail.zariust.otherdrops.drop.DropFlags)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (res.getOverrideDefault()) returnRes.setOverrideDefault(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/9101/buggy-version/src.com.gmail.zariust.otherdrops.drop.DropListInclusive.java", "BodyUseAPI": [], "Fixed commit": "a2c9e3f5badfba7eed258f5d2c264b5d7cbcedf5", "Url": "https://api.github.com/repos/Zarius/Bukkit-OtherBlocks", "Date": "2013-02-23T15:22:44Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.gmail.zariust.otherdrops.drop.DropType.drop(source.getLocation(),com.gmail.zariust.otherdrops.subject.Target,<nulltype>,int,com.gmail.zariust.otherdrops.drop.DropFlags)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (res.getOverrideDefaultXp()) returnRes.setOverrideDefaultXp(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/9101/buggy-version/src.com.gmail.zariust.otherdrops.drop.DropListInclusive.java", "BodyUseAPI": [], "Fixed commit": "a2c9e3f5badfba7eed258f5d2c264b5d7cbcedf5", "Url": "https://api.github.com/repos/Zarius/Bukkit-OtherBlocks", "Date": "2013-02-23T15:22:44Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.gmail.zariust.otherdrops.drop.DropType.dropLocal(com.gmail.zariust.otherdrops.subject.Target,org.bukkit.Location,int,com.gmail.zariust.otherdrops.drop.DropFlags)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (res.getOverrideDefault()) returnRes.setOverrideDefault(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/9101/buggy-version/src.com.gmail.zariust.otherdrops.drop.DropListExclusive.java", "BodyUseAPI": [], "Fixed commit": "a2c9e3f5badfba7eed258f5d2c264b5d7cbcedf5", "Url": "https://api.github.com/repos/Zarius/Bukkit-OtherBlocks", "Date": "2013-02-23T15:22:44Z"},
{"Line": "=>961", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.giisoo.core.bean.X.isEmpty(r)) { r = defaultValue; s.set(tagInSession, r).store(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/2017/buggy-version/src.main.java.framework.com.giisoo.framework.web.Model.java", "BodyUseAPI": [], "Fixed commit": "1a1419666308330ce761db1f001bf7cd860f9a26", "Url": "https://api.github.com/repos/s20000/webgiisoo", "Date": "2015-08-19T23:40:08Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cursor.isEmpty()) { throw new java.lang.IllegalArgumentException(\"cursor cannot be empty\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/1923/buggy-version/stack.core.src.main.java.org.apache.usergrid.corepersistence.pipeline.cursor.RequestCursor.java", "BodyUseAPI": [], "Fixed commit": "0eaea9890b5149f2e7203a90c1dd37a886bbd12c", "Url": "https://api.github.com/repos/snoopdave/usergrid", "Date": "2016-06-06T20:55:41Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.wso2telco.services.dep.sandbox.util.CommonUtil.getNullOrTrimmedValue(wrapperDTO.getMnc())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (mnc != null) { validationRulesList.add(new com.wso2telco.dep.oneapivalidation.util.ValidationRule(com.wso2telco.dep.oneapivalidation.util.ValidationRule.VALIDATION_TYPE_OPTIONAL_INT_GE_ZERO, \"mnc\", mnc)); validationRulesList.add(new com.wso2telco.dep.oneapivalidation.util.ValidationRule(com.wso2telco.dep.oneapivalidation.util.ValidationRule.VALIDATION_TYPE_MANDATORY_INT_GE_ZERO, \"mcc\", mcc)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/2845/buggy-version/dep-sandbox.src.main.java.com.wso2telco.services.dep.sandbox.servicefactory.customerinfo.GetAttributeRequestHandler.java", "BodyUseAPI": ["java.util.List<com.wso2telco.dep.oneapivalidation.util.ValidationRule>.add(com.wso2telco.dep.oneapivalidation.util.ValidationRule)"], "Fixed commit": "08f0df26c5ba6ad6f2d1369bff85587e26479fae", "Url": "https://api.github.com/repos/WSO2Telco/sandbox-service", "Date": "2017-01-18T07:04:17Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (DescribeType.CATALOG.equals(type)) { result.add(new com.stratio.meta2.common.data.CatalogName(getEffectiveCatalog())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/6436/buggy-version/meta-core.src.main.java.com.stratio.meta2.core.statements.DescribeStatement.java", "BodyUseAPI": [], "Fixed commit": "f2fca482770ab0a24293ff9389c664ad6ea0dfba", "Url": "https://api.github.com/repos/Stratio/stratio-meta", "Date": "2014-08-26T09:46:16Z"},
{"Line": "=>320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["oshi.hardware.GlobalMemory.getTotal()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (totalMemory > 0) { double freePercentDecimal = ((double) (availableMemory)) / ((double) (totalMemory)); freePercent = getPercentsValue(freePercentDecimal); }else { freePercent = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/5216/buggy-version/addons.binding.org.openhab.binding.systeminfo.src.main.java.org.openhab.binding.systeminfo.model.OshiSysteminfo.java", "BodyUseAPI": [], "Fixed commit": "3a05d49e0b3decf912ac88f8cd76cffb89e1bf7c", "Url": "https://api.github.com/repos/svilenvul/openhab2-addons", "Date": "2016-04-28T12:48:22Z"},
{"Line": "=>379", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["oshi.hardware.GlobalMemory.getSwapTotal()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (totalSwap > 0) { double freePercentDecimal = ((double) (freeSwap)) / ((double) (totalSwap)); freePercent = getPercentsValue(freePercentDecimal); }else { freePercent = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/5216/buggy-version/addons.binding.org.openhab.binding.systeminfo.src.main.java.org.openhab.binding.systeminfo.model.OshiSysteminfo.java", "BodyUseAPI": [], "Fixed commit": "3a05d49e0b3decf912ac88f8cd76cffb89e1bf7c", "Url": "https://api.github.com/repos/svilenvul/openhab2-addons", "Date": "2016-04-28T12:48:22Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["elements.get(0).ownText()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (ratingValue != null) { try { it.uniroma2.scorci.scanner.impl.duespaghi.RestaurantRating rating = ((it.uniroma2.scorci.scanner.impl.duespaghi.RestaurantRating) (poi.getRating())); rating.setValue(java.lang.Double.parseDouble(ratingValue.trim())); } catch (java.lang.NumberFormatException e) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/1479/buggy-version/src.main.java.it.uniroma2.scorci.scanner.impl.duespaghi.DueSpaghiPoiWebScraperAnnotation.java", "BodyUseAPI": ["it.uniroma2.scorci.scanner.impl.duespaghi.RestaurantRating.setValue(double)", "java.lang.String.trim()", "java.lang.Double.parseDouble(java.lang.String)"], "Fixed commit": "95b57d53bf9c5723d34928877c0ea7573e88ceb1", "Url": "https://api.github.com/repos/aldobrrrr/scorci", "Date": "2015-03-04T13:03:41Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((locationOverlay.getLastFix()) != null) { double lat = locationOverlay.getLastFix().getLatitude(); double lon = locationOverlay.getLastFix().getLongitude(); android.content.Intent intent = new android.content.Intent(android.content.Intent.ACTION_VIEW, android.net.Uri.parse((((((((\"http://maps.google.com/maps?saddr=\" + lat) + \",\") + lon) + \"&daddr=\") + end_lat) + \",\") + end_long))); context.startActivity(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/7242/buggy-version/src.com.cellphones.mobilelunchmeet.Overlays.java", "BodyUseAPI": ["locationOverlay.getLastFix().getLongitude()", "com.google.android.maps.MyLocationOverlay.getLastFix()", "com.google.android.maps.MyLocationOverlay.getLastFix()", "locationOverlay.getLastFix().getLatitude()"], "Fixed commit": "739a6a9a23a74258c3395975299d45b3e53da0d6", "Url": "https://api.github.com/repos/choochootrain/Mobile-Lunch-Meet", "Date": "2012-04-02T03:09:55Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (e.getMessage().equals(\"Broken pipe\")) com.chiorichan.Loader.getLogger().severe(\"Broken Pipe: The browser closed the connection before data could be written to it.\"); else e.printStackTrace();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/860/buggy-version/src.com.chiorichan.http.HttpResponse.java", "BodyUseAPI": ["java.io.IOException.printStackTrace()"], "Fixed commit": "fff3e2d7fd480ff441010884917673954015a1ce", "Url": "https://api.github.com/repos/ChioriGreene/ChioriWebServer", "Date": "2013-12-23T20:33:40Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (http.getRequestHeaders().containsKey(\"CF-Connecting-IP\")) { return http.getRequestHeaders().get(\"CF-Connecting-IP\").get(0); }else { return http.getRemoteAddress().getAddress().getHostAddress(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/860/buggy-version/src.com.chiorichan.http.HttpRequest.java", "BodyUseAPI": ["com.sun.net.httpserver.Headers.get(java.lang.String)", "com.sun.net.httpserver.HttpExchange.getRequestHeaders()", "java.net.InetAddress.getHostAddress()", "java.net.InetSocketAddress.getAddress()", "java.util.List<java.lang.String>.get(int)", "com.sun.net.httpserver.HttpExchange.getRemoteAddress()"], "Fixed commit": "fff3e2d7fd480ff441010884917673954015a1ce", "Url": "https://api.github.com/repos/ChioriGreene/ChioriWebServer", "Date": "2013-12-23T20:33:40Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (input.equals(nl.uva.polyql.model.Type.BOOLEAN_TRUE)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/4843/buggy-version/tvkanters.PolyQL.src.nl.uva.polyql.model.Type.java", "BodyUseAPI": [], "Fixed commit": "3d66b5eb042fdc1e1b0b9c8c5e5a893c58a66a0f", "Url": "https://api.github.com/repos/software-engineering-amsterdam/poly-ql", "Date": "2014-02-23T18:38:31Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((idx * (this.filesPerChunk)) < rightIdx) { return this.fileList.subList((idx * (this.filesPerChunk)), rightIdx).iterator(); }else { return java.util.Collections.emptyIterator(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/9192/buggy-version/src.main.java.net.orzo.data.DirectoryReader.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.subList(int,int)", "java.util.List<java.lang.String>.iterator()"], "Fixed commit": "9c2a0912cda683204b3c3d1b7c9b004f0f0261ec", "Url": "https://api.github.com/repos/tomachalek/orzojs", "Date": "2015-09-12T11:40:14Z"},
{"Line": "=>410", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((c.path) == null) { java.lang.System.out.println(\"Closing client\"); java.lang.System.exit(0); }else { c.runClient(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/7045/buggy-version/src.Client.Client.java", "BodyUseAPI": ["Client.Client.runClient()"], "Fixed commit": "a2188b3363861f7933f56caa33f286cce3811de1", "Url": "https://api.github.com/repos/praveenen24/3303", "Date": "2016-03-28T02:37:33Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (path.contains(\"\\'\")) path = path.replace(\"'\", \"''\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/7083/buggy-version/gitdownloader.src.gaa.dao.FileInfoDAO.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "20d230f0b7d29a82beabe80ecce7dde3b930eec6", "Url": "https://api.github.com/repos/gavelino/gitdownloader", "Date": "2015-03-18T12:33:12Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (language.contains(\"\\'\")) language = language.replace(\"'\", \"''\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/7083/buggy-version/gitdownloader.src.gaa.gitlogextractor.FileLanguageExtractor.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "20d230f0b7d29a82beabe80ecce7dde3b930eec6", "Url": "https://api.github.com/repos/gavelino/gitdownloader", "Date": "2015-03-18T12:33:12Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getDescription().getVersion()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (version.contains(\"SNAPSHOT\")) { version = version.split(\"-\")[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/1894/buggy-version/src.main.java.net.dmulloy2.swornrpg.SwornRPG.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "d275c1f8881030f864ace772d36df132609691d7", "Url": "https://api.github.com/repos/dmulloy2/SwornRPG", "Date": "2013-09-03T01:46:53Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.hwAddress.toLong()) > (((net.floodlightcontroller.odinmaster.OdinClient) (o)).hwAddress.toLong())) return 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/7760/buggy-version/src.main.java.net.floodlightcontroller.odinmaster.OdinClient.java", "BodyUseAPI": [], "Fixed commit": "3573b585bbdf963cd4981b88bcdd731035e73577", "Url": "https://api.github.com/repos/lalithsuresh/odin-master", "Date": "2012-07-12T14:41:48Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(className.startsWith(\"sun/reflect\"))) { proceed = true; try { loader.loadClass(\"com.splunk.javaagent.SplunkLogEvent\"); } catch (java.lang.ClassNotFoundException e) { proceed = false; com.splunk.javaagent.trace.SplunkClassFileTransformer.logger.error(((\"Class \" + className) + \" can not see the classes in the Agent classloader\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/781/buggy-version/src.com.splunk.javaagent.trace.SplunkClassFileTransformer.java", "BodyUseAPI": ["org.apache.log4j.Logger.error(java.lang.String)"], "Fixed commit": "8c34ad50ccc823d4189517ba2b55d62aa33d3953", "Url": "https://api.github.com/repos/taras-ledkov/SplunkJavaAgent", "Date": "2016-02-11T10:07:30Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mContext.getContentResolver().query(org.openintents.wifiserver.requesthandler.notes.GetNote,java.lang.String[],java.lang.String,java.lang.String[],<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (notesCursor == null) { response.setStatusCode(501); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/1315/buggy-version/WiFiServer.src.org.openintents.wifiserver.requesthandler.notes.GetNote.java", "BodyUseAPI": [], "Fixed commit": "19a8607cab937cc9c2d33f551e155996cfa93847", "Url": "https://api.github.com/repos/openintents/wifiserver", "Date": "2012-07-10T08:09:26Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mContext.getContentResolver().query(org.openintents.wifiserver.requesthandler.notes.GetNote,java.lang.String[],<nulltype>,<nulltype>,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (notesCursor == null) { response.setStatusCode(501); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/1315/buggy-version/WiFiServer.src.org.openintents.wifiserver.requesthandler.notes.GetNote.java", "BodyUseAPI": [], "Fixed commit": "19a8607cab937cc9c2d33f551e155996cfa93847", "Url": "https://api.github.com/repos/openintents/wifiserver", "Date": "2012-07-10T08:09:26Z"},
{"Line": "=>394", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(machine.getID().equals(((this.onturl) + \"#Localhost\")))) { this.libkb.setPropertyValue(mobj, pmap.get(\"hasHostName\"), this.libkb.createLiteral(machine.getHostName())); this.libkb.setPropertyValue(mobj, pmap.get(\"hasHostIP\"), this.libkb.createLiteral(machine.getHostIP())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/3470/buggy-version/planner.src.main.java.edu.isi.wings.catalog.resource.api.impl.kb.ResourceKB.java", "BodyUseAPI": ["edu.isi.wings.ontapi.KBAPI.setPropertyValue(edu.isi.wings.ontapi.KBObject,pmap.get(\"hasHostName\"),this.libkb.createLiteral(machine.getHostName()))", "edu.isi.wings.ontapi.KBAPI.createLiteral(machine.getHostIP())", "edu.isi.wings.catalog.resource.classes.Machine.getHostIP()", "edu.isi.wings.ontapi.KBAPI.setPropertyValue(edu.isi.wings.ontapi.KBObject,pmap.get(\"hasHostIP\"),this.libkb.createLiteral(machine.getHostIP()))", "edu.isi.wings.catalog.resource.classes.Machine.getHostName()", "edu.isi.wings.ontapi.KBAPI.createLiteral(machine.getHostName())"], "Fixed commit": "a9ef3678ff0038a214b592aa9930d013c98af7ab", "Url": "https://api.github.com/repos/KnowledgeCaptureAndDiscovery/wings", "Date": "2015-01-11T07:13:08Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result.get(\"status\").getAsString().equals(\"200\")) com.iceteck.hivote.NomineeActivity.endSweetDialog(\"success\", \"A new nominee has been added\"); else com.iceteck.hivote.NomineeActivity.endSweetDialog(\"failure\", \"The image submitted hasn\\'t the correct dimensions. Max(1024 X 1024). \\n Please try again\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/1730/buggy-version/app.src.main.java.com.iceteck.hivote.NomineeActivity.java", "BodyUseAPI": [], "Fixed commit": "b92f0539bc0cff3cf047779ef71349517ace4354", "Url": "https://api.github.com/repos/ffringel/Hi-Vote", "Date": "2015-11-26T13:06:01Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (currentMain.has(\"temp\")) { data.temperature = data.feelsLike = ((int) (java.lang.Math.round(currentMain.getDouble(\"temp\")))); }else { data.temperature = data.feelsLike = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/5335/buggy-version/betterweather.src.main.java.net.imatruck.betterweather.weatherapi.OpenWeatherMapWeatherAPIClient.java", "BodyUseAPI": ["org.json.JSONObject.getDouble(java.lang.String)", "java.lang.Math.round(currentMain.getDouble(\"temp\"))"], "Fixed commit": "afb6a875c11e622ce073eb06e0912b5d9932b452", "Url": "https://api.github.com/repos/rkorn86/BetterWeather", "Date": "2016-01-15T20:03:19Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mRowId) != null) { outState.putLong(CatalogueDBAdapter.KEY_ROWID, mRowId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/6370/buggy-version/src.com.eleybourn.bookcatalogue.BookEdit.java", "BodyUseAPI": [], "Fixed commit": "512153ac2d9e935666f3747eefd7a189ea6d62fd", "Url": "https://api.github.com/repos/silin/Book-Catalogue", "Date": "2012-12-04T20:14:04Z"},
{"Line": "=>331", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (joinConferenceButton.isSelected()) this.chatConferenceListPanel.setSelectedIndex(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/7123/buggy-version/src.net.java.sip.communicator.impl.gui.main.chat.conference.ChatConferenceCallDialog.java", "BodyUseAPI": [], "Fixed commit": "d7938096ec74258bfe92933264f49bd52736c716", "Url": "https://api.github.com/repos/jitsi/jitsi", "Date": "2013-10-26T15:43:45Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((estimates.size()) != 0) { theMean = sum / (estimates.size()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/982/buggy-version/PlanningPoker.src.edu.wpi.cs.wpisuitetng.modules.planningpoker.view.statistics.RequirementEstimateStats.java", "BodyUseAPI": ["java.util.ArrayList<edu.wpi.cs.wpisuitetng.modules.planningpoker.models.Estimate>.size()"], "Fixed commit": "bc34b1ae91101dfd26f7f317905c503e0d121bd9", "Url": "https://api.github.com/repos/TheTeam8s/wpi-suite", "Date": "2014-04-22T19:58:11Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<edu.wpi.cs.wpisuitetng.modules.planningpoker.models.Estimate>.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (size == 0) { return 0; }else if ((size % 2) == 0) { int mid1 = size / 2; int mid2 = (size / 2) - 1; int val1 = estimates.get(mid1).getVote(); int val2 = estimates.get(mid2).getVote(); return (val1 + val2) / 2; }else { int mid = size / 2; return estimates.get(mid).getVote(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/982/buggy-version/PlanningPoker.src.edu.wpi.cs.wpisuitetng.modules.planningpoker.view.statistics.RequirementEstimateStats.java", "BodyUseAPI": [], "Fixed commit": "bc34b1ae91101dfd26f7f317905c503e0d121bd9", "Url": "https://api.github.com/repos/TheTeam8s/wpi-suite", "Date": "2014-04-22T19:58:11Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (versionString.startsWith(\"1.\")) { versionString = versionString.substring(2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/796/buggy-version/core.src.main.java.io.undertow.server.DirectByteBufferDeallocator.java", "BodyUseAPI": [], "Fixed commit": "80a4a5e28e6a3651ff2b55f6f88cc69c94228e28", "Url": "https://api.github.com/repos/undertow-io/undertow", "Date": "2017-10-12T14:31:29Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ru.kpfu.itis.group11501.shatin.politics_web_project.services.UserService.createNewUser(ru.kpfu.itis.group11501.shatin.politics_web_project.helpers.Helper.getHashedString(request.getParameter(\"password\")),request.getParameter(\"email\").toLowerCase(),Role.USER,int,request.getParameter(\"passport_series\"),request.getParameter(\"passport_num\"),request.getParameter(\"name\"),request.getParameter(\"surname\"),request.getParameter(\"patronymic\"),java.time.LocalDate)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (currentNewUser != null) { response.sendRedirect(\"/login\"); }else { response.sendRedirect(\"/signup?error=data_error\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/2308/buggy-version/src.ru.kpfu.itis.group11501.shatin.politics_web_project.servlets.SignupServlet.java", "BodyUseAPI": [], "Fixed commit": "f19e7ed8216155a016bb60f8c07937b359061ae5", "Url": "https://api.github.com/repos/OlegShatin/Politics_project", "Date": "2016-11-25T15:41:53Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((entry.getValue()) == null) { plugin.log.warning(((\"Failed loading data for \\\"\" + (entry.getKey())) + \"\\\"\")); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/5529/buggy-version/src.at.pcgamingfreaks.MarriageMaster.Bukkit.Databases.Files.java", "BodyUseAPI": ["java.util.Map.Entry<java.lang.String, org.bukkit.configuration.file.FileConfiguration>.getKey()", "plugin.log.warning(((\"Failed loading data for \\\"\" + (entry.getKey())) + \"\\\"\"))"], "Fixed commit": "87affa184e19e7a131afd3640754dcecd4288f2c", "Url": "https://api.github.com/repos/GeorgH93/MarriageMaster", "Date": "2016-01-28T19:37:16Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.example.aamit.finalproject.GameView.stagePassed)) canvas.drawBitmap(bitmap, bodySrc[frame], bodyDst, null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/4508/buggy-version/app.src.main.java.com.example.aamit.finalproject.data.Coin.java", "BodyUseAPI": [], "Fixed commit": "8077cefceb921f2f618f0297abad1d3ab93a9225", "Url": "https://api.github.com/repos/AmitShmuel/Deep-Diving", "Date": "2017-01-19T13:57:31Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jetbrains.ether.dependencyView.Mappings.reprByName(StringCache.S)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (repr != null) { for (org.jetbrains.ether.dependencyView.StringCache.S s : repr.getSupers()) { if (isInheritorOf(s, whom)) { return true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/4161/buggy-version/src.org.jetbrains.ether.dependencyView.Mappings.java", "BodyUseAPI": ["org.jetbrains.ether.dependencyView.ClassRepr.getSupers()"], "Fixed commit": "26db00a6875c8ff3c8dea8afcb8635c98f484f80", "Url": "https://api.github.com/repos/JetBrains/JPS", "Date": "2011-09-27T15:43:44Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jetbrains.ether.dependencyView.FoxyMap<StringCache.S, org.jetbrains.ether.dependencyView.ClassRepr>.foxyGet(classToSourceFile.get(name))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (reprs != null) { for (org.jetbrains.ether.dependencyView.ClassRepr repr : reprs) { if (repr.name.equals(name)) { return repr; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/4161/buggy-version/src.org.jetbrains.ether.dependencyView.Mappings.java", "BodyUseAPI": [], "Fixed commit": "26db00a6875c8ff3c8dea8afcb8635c98f484f80", "Url": "https://api.github.com/repos/JetBrains/JPS", "Date": "2011-09-27T15:43:44Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(metastore instanceof org.pentaho.di.core.attributes.metastore.EmbeddedMetaStore)) { return new org.pentaho.metastore.persist.MetaStoreFactory(org.pentaho.big.data.impl.cluster.NamedClusterImpl.class, metastore, org.pentaho.metastore.util.PentahoDefaults.NAMESPACE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/6133/buggy-version/impl.cluster.src.main.java.org.pentaho.big.data.impl.cluster.NamedClusterManager.java", "BodyUseAPI": [], "Fixed commit": "47c59554aafb1cdc704ef4f6630941bc233bfab6", "Url": "https://api.github.com/repos/smaring/big-data-plugin", "Date": "2017-08-21T20:08:15Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (namedClusterMetaStoreFactory == null) { namedClusterMetaStoreFactory = new org.pentaho.metastore.persist.MetaStoreFactory(org.pentaho.big.data.impl.cluster.NamedClusterImpl.class, metastore, org.pentaho.di.trans.steps.named.cluster.NamedClusterEmbedManager.NAMESPACE); factoryMap.put(metastore, namedClusterMetaStoreFactory); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/6133/buggy-version/impl.cluster.src.main.java.org.pentaho.big.data.impl.cluster.NamedClusterManager.java", "BodyUseAPI": [], "Fixed commit": "47c59554aafb1cdc704ef4f6630941bc233bfab6", "Url": "https://api.github.com/repos/smaring/big-data-plugin", "Date": "2017-08-21T20:08:15Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.graphiti.mm.pictograms.Shape.getGraphicsAlgorithm()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (graphicsAlgorithm instanceof org.eclipse.graphiti.mm.algorithms.Image) { org.eclipse.graphiti.mm.algorithms.Image icon = ((org.eclipse.graphiti.mm.algorithms.Image) (graphicsAlgorithm)); icon.setX(2); anythingChanged = true; }else { gaService.setWidth(graphicsAlgorithm, containerWidth); anythingChanged = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/7638/buggy-version/de.opalproject.vespucci.sliceEditor.src.de.opalproject.vespucci.sliceEditor.features.LayoutEnsembleFeature.java", "BodyUseAPI": ["org.eclipse.graphiti.services.IGaService.setWidth(org.eclipse.graphiti.mm.algorithms.GraphicsAlgorithm,int)"], "Fixed commit": "1a4a4778cf64fd2d2394e33d70ab3959d6008fce", "Url": "https://api.github.com/repos/Delors/Vespucci2", "Date": "2013-01-19T18:04:49Z"},
{"Line": "=>1806", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((record.getArrayDesigns()) == null) { java.util.Collection<ubic.gemma.model.expression.arrayDesign.ArrayDesign> ads = expressionExperimentService.getArrayDesignsUsed(expressionExperimentService.load(record.getId())); java.util.LinkedList<java.lang.Long> adIds = new java.util.LinkedList<>(); for (ubic.gemma.model.expression.arrayDesign.ArrayDesign ad : ads) { adIds.add(ad.getId()); } record.setArrayDesigns(arrayDesignService.loadValueObjects(adIds)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/8256/buggy-version/gemma-web.src.main.java.ubic.gemma.web.controller.expression.experiment.ExpressionExperimentController.java", "BodyUseAPI": ["ubic.gemma.expression.experiment.service.ExpressionExperimentService.getArrayDesignsUsed(expressionExperimentService.load(record.getId()))", "ubic.gemma.expression.experiment.service.ExpressionExperimentService.load(record.getId())", "ubic.gemma.web.controller.expression.experiment.ExpressionExperimentDetailsValueObject.setArrayDesigns(arrayDesignService.loadValueObjects(adIds))", "ubic.gemma.web.controller.expression.experiment.ExpressionExperimentDetailsValueObject.getId()"], "Fixed commit": "c8e936c4513663c285fdc1579ff3b876d65e13a0", "Url": "https://api.github.com/repos/PavlidisLab/Gemma", "Date": "2017-03-20T22:14:39Z"},
{"Line": "=>320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((req.getConfiguration().containsKey(ConfVars.HIVE_SERVER2_THRIFT_RESULTSET_COMPRESSOR_LIST.varname)) && (!(req.getConfiguration().get(ConfVars.HIVE_SERVER2_THRIFT_RESULTSET_COMPRESSOR_LIST.varname).isEmpty()))) { org.apache.hadoop.hive.conf.HiveConf tempConf = new org.apache.hadoop.hive.conf.HiveConf(); tempConf.setVar(ConfVars.HIVE_SERVER2_THRIFT_RESULTSET_COMPRESSOR_LIST, req.getConfiguration().get(ConfVars.HIVE_SERVER2_THRIFT_RESULTSET_COMPRESSOR_LIST.varname)); clientCompDes = java.util.Arrays.asList(org.apache.hadoop.hive.conf.HiveConf.getTrimmedStringsVar(tempConf, ConfVars.HIVE_SERVER2_THRIFT_RESULTSET_COMPRESSOR_LIST)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/4998/buggy-version/service.src.java.org.apache.hive.service.cli.thrift.ThriftCLIService.java", "BodyUseAPI": ["org.apache.hadoop.hive.conf.HiveConf.setVar(ConfVars.HIVE_SERVER2_THRIFT_RESULTSET_COMPRESSOR_LIST,req.getConfiguration().get(ConfVars.HIVE_SERVER2_THRIFT_RESULTSET_COMPRESSOR_LIST.varname))", "req.getConfiguration().get(ConfVars.HIVE_SERVER2_THRIFT_RESULTSET_COMPRESSOR_LIST.varname)", "org.apache.hive.service.rpc.thrift.TOpenSessionReq.getConfiguration()"], "Fixed commit": "c698d4964c6fe879181d0cfdfbeb18e33b747bca", "Url": "https://api.github.com/repos/kliewkliew/hive", "Date": "2016-08-10T10:05:40Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (action.isClass(cls)) { if (action.remove) { result.remove(action.model.getId()); }else { result.put(action.model.getId(), action.model); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/5666/buggy-version/src.nl.astraeus.persistence.SimpleStore.java", "BodyUseAPI": ["java.util.Map<java.lang.Long, nl.astraeus.persistence.SimpleModel>.remove(action.model.getId())", "java.util.Map<java.lang.Long, nl.astraeus.persistence.SimpleModel>.put(action.model.getId(),action.model)", "action.model.getId()", "action.model.getId()"], "Fixed commit": "996cf96b92b039c777de91a2bbd2fb5406d17b50", "Url": "https://api.github.com/repos/rnentjes/Simple-persistence", "Date": "2012-08-10T12:46:21Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (title.startsWith(org.wso2.developerstudio.datamapper.diagram.custom.action.EditAttributeAction.PREFIX)) { name = title.substring(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/106/buggy-version/plugins.org.wso2.developerstudio.visualdatamapper.diagram.src.org.wso2.developerstudio.datamapper.diagram.custom.action.EditAttributeAction.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "ab8bbe4c815d9de16375495c6fc9484af3fadef1", "Url": "https://api.github.com/repos/susinda/devstudio-tooling-esb", "Date": "2016-03-17T13:35:59Z"},
{"Line": "=>1092", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (phs == null) { phs = new java.util.HashMap<java.lang.String, java.lang.String>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/5591/buggy-version/AdvancedCore.src.com.Ben12345rocks.AdvancedCore.Objects.Reward.java", "BodyUseAPI": [], "Fixed commit": "5d69fbd628650354b3f099ee6525412227879601", "Url": "https://api.github.com/repos/Ben12345rocks/AdvancedCore", "Date": "2017-04-09T23:59:19Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (downloadForm.isSubProjectUpload()) { com.psk.pms.model.SubProjectDetail subProjDetail = projectService.getSubProjectDocument(downloadForm.getAliasSubProjectName()); path = ((\"C:\\\\PMS\\\\\" + (projectDetail.getAliasName())) + \"\\\\\") + (subProjDetail.getAliasSubProjName()); java.util.Map<java.lang.String, java.lang.String> subAliasProjectList = populateSubAliasProjectList(downloadForm.getAliasProjectName()); map.addAttribute(\"subAliasProjectList\", subAliasProjectList); }else { path = \"C:\\\\PMS\\\\\" + (projectDetail.getAliasName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/7769/buggy-version/src.main.java.com.psk.pms.controller.FileUploadController.java", "BodyUseAPI": ["com.psk.pms.model.FileUpload.getAliasSubProjectName()", "com.psk.pms.model.FileUpload.getAliasProjectName()", "com.psk.pms.service.ProjectService.getSubProjectDocument(downloadForm.getAliasSubProjectName())", "com.psk.pms.controller.FileUploadController.populateSubAliasProjectList(downloadForm.getAliasProjectName())"], "Fixed commit": "28ccbe3807d757803166de390c44917f50a3afdc", "Url": "https://api.github.com/repos/devintqa/pms", "Date": "2015-05-30T17:58:33Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(use64Bit)) { for (int i = 0; i < (markers.length); i++) { markers[i] = (markers[i]) & 4294967295L; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/4770/buggy-version/components.formats-gpl.src.loci.formats.in.NDPIReader.java", "BodyUseAPI": [], "Fixed commit": "010db31b3233d69ac93996fa77c0878ab02e85cc", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2015-05-19T19:36:20Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((sqrlUser != null) && (request.getOptionFlags().contains(SqrlOptionFlag.SERVER_UNLOCK_KEY))) { sukResponse = sqrlUser.getServerUnlockKey(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/8712/buggy-version/src.main.java.org.jsqrl.server.JSqrlServer.java", "BodyUseAPI": ["org.jsqrl.server.SqrlUser.getServerUnlockKey()"], "Fixed commit": "0c5264e8f41443364182d93245dd14d29c4aee05", "Url": "https://api.github.com/repos/banichols/jsqrl-server", "Date": "2016-07-19T15:12:07Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((metadata) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/4831/buggy-version/src.main.java.com.ibm.watson.developer_cloud.document_conversion.v1.model.IndexDocumentOptions.java", "BodyUseAPI": [], "Fixed commit": "d20e530e7ddc8b7a1078dc445f89329d9fbca503", "Url": "https://api.github.com/repos/watson-developer-cloud/java-sdk", "Date": "2016-08-05T20:28:39Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((swipe) != null) swipe.setEnabled(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/5327/buggy-version/src.main.java.anabolicandroids.chanobol.ui.threads.ThreadsActivity.java", "BodyUseAPI": [], "Fixed commit": "df103b39515a743c1d6ad989ae08d7664da3f6d4", "Url": "https://api.github.com/repos/eugenkiss/chanobol", "Date": "2015-03-30T17:24:00Z"},
{"Line": "=>343", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.View.getLayoutParams()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (lp == null) { lp = new com.alibaba.android.vlayout.VirtualLayoutManager.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT); }else { lp = new com.alibaba.android.vlayout.VirtualLayoutManager.LayoutParams(lp.width, lp.height); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/2617/buggy-version/tangram.src.main.java.com.tmall.wireless.tangram.MVHelper.java", "BodyUseAPI": [], "Fixed commit": "20b0a875086672f06c869df4842ea3010cb956c0", "Url": "https://api.github.com/repos/alibaba/Tangram-Android", "Date": "2017-12-11T15:41:16Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["node.getName().matches(d.getValue())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isDigit) { if (((currentASTNode.getName().equals(\"+\")) && ((currentASTNode.getChildren().size()) == 2)) || (currentASTNode.getName().equals(\"AssignmentStatement\"))) { returnToParent(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/4951/buggy-version/SemanticAnalyzer.java", "BodyUseAPI": [], "Fixed commit": "295eae1a4f01163b4fe1dbdab42145060989abfe", "Url": "https://api.github.com/repos/antonyliang/bestCompiler", "Date": "2015-04-14T03:15:04Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["node.getName().matches(c.getValue())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isChar) { if ((currentASTNode.getName().equals(\"VarDecl\")) || (currentASTNode.getName().equals(\"print\"))) { returnToParent(); }else if ((currentASTNode.getName().equals(\"AssignmentStatement\")) && ((currentASTNode.getChildren().size()) == 2)) { returnToParent(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/4951/buggy-version/SemanticAnalyzer.java", "BodyUseAPI": [], "Fixed commit": "295eae1a4f01163b4fe1dbdab42145060989abfe", "Url": "https://api.github.com/repos/antonyliang/bestCompiler", "Date": "2015-04-14T03:15:04Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(returnType.equals(\"void\"))) { if (!(info.getUsedClasses().contains(returnType))) { info.getUsedClasses().add(returnType); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/2444/buggy-version/src.umlParser.ClassMethodVisitor.java", "BodyUseAPI": ["info.getUsedClasses().contains(java.lang.String)", "info.getUsedClasses().add(java.lang.String)"], "Fixed commit": "d6d1577257542cce8a7e7e61a95595e803f1f9cc", "Url": "https://api.github.com/repos/AgentsOfROSE/Skye", "Date": "2016-01-08T07:08:58Z"},
{"Line": "=>772", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.e4.ui.workbench.addons.minmax.MinMaxAddon.getWindowFor(org.eclipse.e4.ui.model.application.ui.MUIElement)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((getWindowFor(theStack)) == win) { theStack.getTags().remove(org.eclipse.e4.ui.workbench.addons.minmax.MinMaxAddon.MINIMIZED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/515/buggy-version/bundles.org.eclipse.e4.ui.workbench.addons.swt.src.org.eclipse.e4.ui.workbench.addons.minmax.MinMaxAddon.java", "BodyUseAPI": ["theStack.getTags().remove(java.lang.String)", "org.eclipse.e4.ui.model.application.ui.basic.MPartStack.getTags()"], "Fixed commit": "ea5635361450715c812b2948707f4083f2594161", "Url": "https://api.github.com/repos/mickaelistria/eclipse.platform.ui", "Date": "2013-10-28T17:29:46Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (param.name.equalsIgnoreCase(\"nodeName\")) { nodeName = param.value; if (nodeName.contains(\".\")) throw new com.orientechnologies.orient.core.exception.OConfigurationException(((\"Illegal node name '\" + (nodeName)) + \"'. '.' is not allowed in node name\")); }else if (param.name.startsWith(com.orientechnologies.orient.server.distributed.ODistributedAbstractPlugin.PAR_DEF_DISTRIB_DB_CONFIG)) { setDefaultDatabaseConfigFile(param.value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/6430/buggy-version/server.src.main.java.com.orientechnologies.orient.server.distributed.ODistributedAbstractPlugin.java", "BodyUseAPI": ["com.orientechnologies.orient.server.distributed.ODistributedAbstractPlugin.setDefaultDatabaseConfigFile(param.value)", "param.name.startsWith(java.lang.String)"], "Fixed commit": "726cbc864d89764133a3f2434724f146e55fd4d5", "Url": "https://api.github.com/repos/fabriziofortino/orientdb", "Date": "2015-06-24T16:19:47Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dialog) == null) { dialog = android.app.ProgressDialog.show(getActivity(), \"ProgressDialog\", ((\"Wait for \" + (time.getText().toString())) + \" seconds\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/7729/buggy-version/app.src.main.java.com.appbusters.robinkamboj.backgoundcomponents.view.fragments.TwoFragment.java", "BodyUseAPI": [], "Fixed commit": "bee1793bce59cee5f4d5775eecaf63ec5bfff63f", "Url": "https://api.github.com/repos/robillo/BackgoundComponents", "Date": "2017-07-05T14:35:10Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dialog) != null) { dialog.dismiss(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/7729/buggy-version/app.src.main.java.com.appbusters.robinkamboj.backgoundcomponents.view.fragments.TwoFragment.java", "BodyUseAPI": [], "Fixed commit": "bee1793bce59cee5f4d5775eecaf63ec5bfff63f", "Url": "https://api.github.com/repos/robillo/BackgoundComponents", "Date": "2017-07-05T14:35:10Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jobviewer.provider.JobViewerDBHandler.getCheckOutRemember(getActivity())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (checkOutObject.getIsPollutionSelected().equalsIgnoreCase(ActivityConstants.TRUE)) { mSpinnerSelectedText.setText(getActivity().getResources().getString(R.string.activityTypePollution)); mSpinnerLayout.setClickable(false); selectedActivityText = \"Pollution\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/1988/buggy-version/JobViewer.src.com.lanesgroup.jobviewer.fragment.WorkCompleteFragment.java", "BodyUseAPI": [], "Fixed commit": "0b2d3bbbccbcc0257ae9806d7806382be40bf34c", "Url": "https://api.github.com/repos/raghunaikbadde/FieldViewer", "Date": "2016-06-10T04:49:09Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.intellij.psi.PsiEnumConstant.class.isAssignableFrom(element.getClass())) { params.put(\"name\", element.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/5711/buggy-version/src.com.github.setial.intellijjavadocs.generator.impl.FieldJavaDocGenerator.java", "BodyUseAPI": ["com.intellij.psi.PsiField.getName()", "java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,element.getName())"], "Fixed commit": "13074c6da22398ccad08beb12e20ad6e8b94861d", "Url": "https://api.github.com/repos/setial/intellij-javadocs", "Date": "2013-04-16T16:18:49Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (on) { on = false; html.put(name, cur.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/7193/buggy-version/src.com.javaprophet.javawebserver.plugins.javaloader.lib.HTMLCache.java", "BodyUseAPI": [], "Fixed commit": "8300baf41fe0e332204876d018f71197579c2220", "Url": "https://api.github.com/repos/Protryon/AvunaHTTPD-Java", "Date": "2015-02-05T07:08:39Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(coordsToRemove.isEmpty())) { for (java.lang.Integer coordToRemove : coordsToRemove) { mapForDimention.remove(coordsToRemove); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/3513/buggy-version/src.main.java.com.blocktyper.helpers.ClickedBlockHelper.java", "BodyUseAPI": ["java.util.Map<java.lang.Integer, java.util.Set<java.lang.String>>.remove(java.util.List<java.lang.Integer>)"], "Fixed commit": "a4393d237d7c199c29361110f6eeae70b46f8896", "Url": "https://api.github.com/repos/spaarkimus/BlockTyperPlugin", "Date": "2016-11-07T20:10:31Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (oldVersion <= 137) { createTableReadingPlan(db); createTableReadingPlanProgress(db); createIndexReadingPlanProgress(db); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/6759/buggy-version/Alkitab.src.yuku.alkitab.base.storage.InternalDbHelper.java", "BodyUseAPI": [], "Fixed commit": "5f8b90f8c57c5af8230a651760e95cef9c4a7fca", "Url": "https://api.github.com/repos/yukuku/androidbible", "Date": "2013-11-25T04:41:17Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((single1Hit && single5Hit) && single20Hit) { list.add(SoundId.Classic); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/8669/buggy-version/src.main.java.spare.n52.yadarts.sound.BasicSoundService.java", "BodyUseAPI": [], "Fixed commit": "09a0bf15bd1392a8386575fac1ede2a58aea1eb0", "Url": "https://api.github.com/repos/matthesrieke/yadarts-desktop", "Date": "2014-03-12T21:14:29Z"},
{"Line": "=>297", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((operation.getInputs().getInput().size()) > 2) { res = false; eu.scape_project.tool.toolwrapper.toolwrapper_bash_generator.BashWrapperGenerator.log.error(\"[ERROR] Cannot generate a workflow with components for more than 2 input ports!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/177/buggy-version/toolwrapper-bash-generator.src.main.java.eu.scape_project.tool.toolwrapper.toolwrapper_bash_generator.BashWrapperGenerator.java", "BodyUseAPI": [], "Fixed commit": "436a3cc9cb3676239af79711f2edb36c4f2cedc1", "Url": "https://api.github.com/repos/openplanets/scape-toolwrapper", "Date": "2013-12-02T18:26:09Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(post.getCanonicalUrl().trim().isEmpty())) jsonObject.put(\"canonicalUrl\", post.getContentFormat().name());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/3598/buggy-version/app.src.main.java.xyz.belvi.medium.MediumObject.Post.java", "BodyUseAPI": ["xyz.belvi.medium.MediumObject.Post.getContentFormat()", "org.json.JSONObject.put(java.lang.String,post.getContentFormat().name())", "xyz.belvi.medium.Enums.ContentFormat.name()"], "Fixed commit": "480f61494c9c88850d625ef97b8e0c6442df6a73", "Url": "https://api.github.com/repos/KingsMentor/medium-android-sdk-unofficial", "Date": "2016-06-12T20:00:37Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.Math.abs(this.angle)) > 360) { this.angle = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/231/buggy-version/jastroblast-core.src.org.doublelong.jastroblast.entity.Asteroid.java", "BodyUseAPI": [], "Fixed commit": "f78a224401f4b95da013f6851375f90c49880e52", "Url": "https://api.github.com/repos/xzela/jastroblast", "Date": "2013-08-04T17:05:44Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.Math.abs(this.angle)) < 0) { this.angle = 360 * (this.direction); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/231/buggy-version/jastroblast-core.src.org.doublelong.jastroblast.entity.Asteroid.java", "BodyUseAPI": [], "Fixed commit": "f78a224401f4b95da013f6851375f90c49880e52", "Url": "https://api.github.com/repos/xzela/jastroblast", "Date": "2013-08-04T17:05:44Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((forestry.core.multiblock.MultiblockRegistry.getControllersFromWorld(world)) != null) { for (forestry.core.multiblock.IMultiblockControllerInternal controllerInternal : forestry.core.multiblock.MultiblockRegistry.getControllersFromWorld(world)) { if (controllerInternal instanceof forestry.greenhouse.multiblock.IGreenhouseControllerInternal) { if (controllerInternal.isAssembled()) { if (forestry.greenhouse.GreenhouseHelper.isPosiotionInGreenhouse(((forestry.greenhouse.multiblock.IGreenhouseControllerInternal) (controllerInternal)), pos)) { return ((forestry.greenhouse.multiblock.IGreenhouseControllerInternal) (controllerInternal)).createState(); } } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/3471/buggy-version/src.main.java.forestry.greenhouse.GreenhouseHelper.java", "BodyUseAPI": ["forestry.core.multiblock.MultiblockRegistry.getControllersFromWorld(net.minecraft.world.World)"], "Fixed commit": "65d9c1dee67dd868ef466c6c39b835bffea4733c", "Url": "https://api.github.com/repos/ForestryMC/ForestryMC", "Date": "2016-03-20T14:29:14Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.database.query(CropImageSQLiteHelper.DATABASE_PROFILE_TABLE,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (cursor.moveToNext()) { data = cursor.getBlob(dataIndex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/1538/buggy-version/src.com.android.camera.datastore.CropProfileImageAccesser.java", "BodyUseAPI": ["android.database.Cursor.getBlob(int)"], "Fixed commit": "3250ecb70c7b93a02f69bf47e786a891511daa44", "Url": "https://api.github.com/repos/daoyuanzhai/crop-image-library-android", "Date": "2014-03-24T06:12:53Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jetbrains.python.inspections.quickfix.PyFunction.getContainingFile()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (file == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/2149/buggy-version/python.src.com.jetbrains.python.inspections.quickfix.AddMethodQuickFix.java", "BodyUseAPI": [], "Fixed commit": "bfec097d5e0c5f223360943e2b0590db74a7a239", "Url": "https://api.github.com/repos/JetBrains/intellij-community", "Date": "2014-06-23T15:07:49Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (paramValue == null) { pickle.put(paramName, null); }else if ((paramClass.isArray()) || (paramValue instanceof java.util.List)) { pickle.put(paramName, paramValue); }else if (paramClass == (java.lang.String.class)) { pickle.put(paramName, paramValue); }else if (paramValue instanceof java.lang.Boolean) { if (((java.lang.Boolean) (paramValue)).booleanValue()) { pickle.put(paramName, \"TRUE\"); } }else if ((paramClass.isPrimitive()) || (com.x5.util.ObjectDataMap.isWrapperType(paramClass))) { pickle.put(paramName, paramValue.toString()); }else { com.x5.util.ObjectDataMap boxedParam = (isBean) ? com.x5.util.ObjectDataMap.wrapBean(paramValue) : new com.x5.util.ObjectDataMap(paramValue); pickle.put(paramName, boxedParam); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/293/buggy-version/src.main.java.com.x5.util.ObjectDataMap.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,java.lang.Object)", "java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,java.lang.Object)", "com.x5.util.ObjectDataMap.wrapBean(java.lang.Object)", "java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,java.lang.String)", "java.lang.Object.toString()"], "Fixed commit": "b19a313fc4751759e790ab3919134d302d0bdfa0", "Url": "https://api.github.com/repos/tomj74/chunk-templates", "Date": "2015-10-30T16:26:47Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Object.unwrap()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (unwrapped instanceof java.util.Iterator) { data = com.x5.template.TableOfMaps.boxIterator(((java.util.Iterator) (unwrapped))); }else if (unwrapped instanceof java.util.Map) { data = new com.x5.template.ObjectTable(((java.util.Map) (unwrapped))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/293/buggy-version/src.main.java.com.x5.template.LoopTag.java", "BodyUseAPI": [], "Fixed commit": "b19a313fc4751759e790ab3919134d302d0bdfa0", "Url": "https://api.github.com/repos/tomj74/chunk-templates", "Date": "2015-10-30T16:26:47Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.debug.core.ILaunch.getLaunchConfiguration()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (launchConfiguration == null) { return com.google.common.base.Optional.absent(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/8265/buggy-version/org.eclipse.buildship.ui.src.main.java.org.eclipse.buildship.ui.launch.ConsoleShowingLaunchListener.java", "BodyUseAPI": [], "Fixed commit": "b3066b09a85252428e53d655dc3eb27815dafa13", "Url": "https://api.github.com/repos/eclipse/buildship", "Date": "2016-03-17T14:36:27Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["br.com.study.headfirst.ooad.inventory.Guitar.getSpec()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((guitarSpec.getNumStrings()) != (searchSpec.getNumStrings())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/7365/buggy-version/src.br.com.study.headfirst.ooad.inventory.Inventory.java", "BodyUseAPI": [], "Fixed commit": "4edb9005feb272694a5fd48283f4872317dd7763", "Url": "https://api.github.com/repos/rafaelito91/headfirst-ooad", "Date": "2017-08-29T02:51:03Z"},
{"Line": "=>827", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ferg.awful.ThreadDisplayActivity.AwfulPostAdapterBase.getItem(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((current.getAvatar()) == null) { viewHolder.avatar.setVisibility(View.INVISIBLE); }else { viewHolder.avatar.setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/7330/buggy-version/src.com.ferg.awful.ThreadDisplayActivity.java", "BodyUseAPI": [], "Fixed commit": "eb0d41f06f5760c2179b683913bb89a16bf2a55b", "Url": "https://api.github.com/repos/wmbest2/Something-Awful-Android", "Date": "2011-04-04T23:58:34Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (string.endsWith(org.gololang.gldt.core.services.GoloTerminalConverter.FloatConverter.FLOAT_SUFFIX)) { string = string.substring(0, ((string.length()) - (org.gololang.gldt.core.services.GoloTerminalConverter.FloatConverter.FLOAT_SUFFIX.length()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/3103/buggy-version/org.gololang.gldt.core.src.main.java.org.gololang.gldt.core.services.GoloTerminalConverter.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()", "java.lang.String.length()"], "Fixed commit": "da21637e7e088f82e7d8750cba3035485ff71068", "Url": "https://api.github.com/repos/jeffmaury/gldt", "Date": "2013-04-26T23:00:13Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (type instanceof org.jetbrains.jet.lang.types.FlexibleType) { org.jetbrains.jet.lang.types.FlexibleType flexibleType = ((org.jetbrains.jet.lang.types.FlexibleType) (type)); org.jetbrains.jet.lang.resolve.lazy.ForceResolveUtil.forceResolveAllContents(flexibleType.getLowerBound()); org.jetbrains.jet.lang.resolve.lazy.ForceResolveUtil.forceResolveAllContents(flexibleType.getUpperBound()); }else { org.jetbrains.jet.lang.resolve.lazy.ForceResolveUtil.forceResolveAllContents(type.getConstructor()); for (org.jetbrains.jet.lang.types.TypeProjection projection : type.getArguments()) { org.jetbrains.jet.lang.resolve.lazy.ForceResolveUtil.forceResolveAllContents(projection.getType()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/1641/buggy-version/compiler.frontend.src.org.jetbrains.jet.lang.resolve.lazy.ForceResolveUtil.java", "BodyUseAPI": ["org.jetbrains.jet.lang.resolve.lazy.ForceResolveUtil.forceResolveAllContents(type.getConstructor())", "org.jetbrains.jet.lang.types.JetType.getConstructor()", "org.jetbrains.jet.lang.types.JetType.getArguments()"], "Fixed commit": "441a1f515b956d5e55bb478b5ccffce9283e222a", "Url": "https://api.github.com/repos/JetBrains/kotlin", "Date": "2014-07-01T17:15:34Z"},
{"Line": "=>1930", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((parameterCoefs[microTiPi.epifluorescence.WideFieldModel.PHASE]) == null) return 0; else return parameterCoefs[microTiPi.epifluorescence.WideFieldModel.PHASE].getNumber();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/8781/buggy-version/src.microTiPi.epifluorescence.WideFieldModel.java", "BodyUseAPI": ["parameterCoefs[microTiPi.epifluorescence.WideFieldModel.PHASE].getNumber()"], "Fixed commit": "9f458bda5e603b10f8e76659106b5420ab4763c9", "Url": "https://api.github.com/repos/FerreolS/microTiPi", "Date": "2017-04-24T12:57:34Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (serviceType.equals(\"Transportation\")) { result = servicePOSB.createServicePO(contractId, userId, volume, serviceFulfillmentDate, serviceReceiveDate, serviceDeliveryDate, productQuantityPerTEU, productId, warehouseOrderType, amount); }else { if (warehouseOrderType.equals(\"Fulfillment Order\")) { boolean inStock = orderFulfillSB.reserveStockRentedBins(contract.getPartyA(), contract.getPartyB(), amount.intValue(), productId); if (inStock) { result = servicePOSB.createServicePO(contractId, userId, 0, serviceFulfillmentDate, serviceReceiveDate, serviceDeliveryDate, 0, productId, warehouseOrderType, amount); }else { result = false; javax.faces.context.FacesContext.getCurrentInstance().addMessage(null, new javax.faces.application.FacesMessage(javax.faces.application.FacesMessage.SEVERITY_ERROR, \"Insufficeint Stock!\", \"Not enough Stock in service provider's warehouse\")); } }else { boolean available = receivingSB.checkBinSpaceForRentedBins(contract.getPartyA(), contract.getPartyB(), amount.intValue(), contract.getStorageType()); if (available) { result = servicePOSB.createServicePO(contractId, userId, 0, serviceFulfillmentDate, serviceReceiveDate, serviceDeliveryDate, 0, productId, warehouseOrderType, amount); }else { result = false; javax.faces.context.FacesContext.getCurrentInstance().addMessage(null, new javax.faces.application.FacesMessage(javax.faces.application.FacesMessage.SEVERITY_ERROR, \"Insufficeint Bin Space!\", \"Not enough Space in service provider's warehouse\")); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/4883/buggy-version/MerlionPortal.MerlionPortal-war.src.merlionportal.managedbean.crms.CreateServicePOManagedBean.java", "BodyUseAPI": [], "Fixed commit": "df8e004150358642acd05df6b28e7b62fbf33264", "Url": "https://api.github.com/repos/PATHolongba0/merlionPortal", "Date": "2014-11-08T14:22:47Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (downButtonListener.isClicked()) { if ((i) > 2) { i -= 1; count.setText(java.lang.Integer.toString(i)); } downButtonListener.setNotClicked(); }else if (fightButtonListener.isClicked()) { core.LevelGen levelGen = new core.LevelGen(new java.util.Random().nextLong(), core.LevelGen.SMALL); levelGen.setPlanetNumber(i); gamelauncher.Game.setLevel(levelGen.create()); return \"multiPlay\"; }else if (backButtonListener.isClicked()) { return \"gameMods\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/1827/buggy-version/src.fsm.GUIStates.MultiState.java", "BodyUseAPI": ["graphics.gui.GUIButtonListener.setNotClicked()"], "Fixed commit": "54e65281b225b7996deb1af347fbda827d35f724", "Url": "https://api.github.com/repos/AlexChanson/Aligot", "Date": "2017-05-16T12:15:13Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (stack == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/8395/buggy-version/src.net.sacredlabyrinth.Phaed.PreciousStones.CloakEntry.java", "BodyUseAPI": [], "Fixed commit": "21e37075e1ca73606747f0d1d0b21729c4ce1385", "Url": "https://api.github.com/repos/marcelo-mason/PreciousStones", "Date": "2011-04-26T21:45:16Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["planners.DataStructureForPlanning.create(tree.geom.Point,tree.geom.Point)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (struct.closed().contains(outgoingPoint)) { improvement += (struct.gScore().getDouble(outgoingPoint)) - gScoreOfOutgoingPoint; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/3289/buggy-version/src.main.java.planners.AnytimeBasicThetaStar.java", "BodyUseAPI": ["planners.DataStructureForPlanning.gScore()", "struct.gScore().getDouble(tree.geom.Point)"], "Fixed commit": "bef5b6acf9ec87d841ef615f146489efa6e2940a", "Url": "https://api.github.com/repos/hoangtungdinh/UAVPathPlanning", "Date": "2016-04-11T20:10:27Z"},
{"Line": "=>1814", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getSentence(sentID)) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/6276/buggy-version/src.semanticMarkup.ling.learn.dataholder.DataHolder.java", "BodyUseAPI": [], "Fixed commit": "e077d5b1d31a44927dabc163fdb429863dc6724c", "Url": "https://api.github.com/repos/phenoscape/charaparser-unsupervised", "Date": "2013-09-26T23:31:10Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (firstVisibleItem == 0) { destroyPinnedShadow(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/7931/buggy-version/library.src.dev.dworks.libs.astickyheader.ui.PinnedSectionGridView.java", "BodyUseAPI": [], "Fixed commit": "4f1c986a58c7f459fcde206be60e624bf7584c25", "Url": "https://api.github.com/repos/gumtreeuk/AStickyHeader", "Date": "2014-03-05T11:21:48Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (highLight) { fly(e).setStyleName(\"new_notification\", highLight); if (highLight && (com.extjs.gxt.ui.client.GXT.isAriaEnabled())) { setAriaState(\"aria-activedescendant\", e.getId()); } }else { fly(e).removeStyleName(\"new_notification\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/3639/buggy-version/src.main.java.org.iplantc.de.client.views.panels.ViewNotificationMenu.java", "BodyUseAPI": ["fly(e).setStyleName(java.lang.String,boolean)"], "Fixed commit": "a2bc5f3034815dc5660fa95f43515a7d2993819a", "Url": "https://api.github.com/repos/iPlantCollaborativeOpenSource/de-webapp", "Date": "2012-07-31T21:00:22Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((i == ((blocks.size()) - 1)) && ((blocks.get(i)) instanceof com.ryanairth.mathsheetcalculator.Math.SymbolBlock)) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/3524/buggy-version/app.src.main.java.com.ryanairth.mathsheetcalculator.Math.BlockEvaluator.java", "BodyUseAPI": [], "Fixed commit": "51f562ae563249566b6d45a7d331a6fa0c5d291d", "Url": "https://api.github.com/repos/RyanSweeney987/Math_Sheet_Calculator", "Date": "2016-05-23T22:06:02Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((cm.appId) == null) || ((cm.jobId) == null)) || ((cm.stageId) == null)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/3345/buggy-version/src.Server.MetricSender.java", "BodyUseAPI": [], "Fixed commit": "d3ee143d936df9b3ffa7229359ca26e8804f171b", "Url": "https://api.github.com/repos/EddiePi/tracing-server", "Date": "2017-04-03T16:35:46Z"},
{"Line": "=>646", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JOptionPane.showInputDialog(view.MainMenuGUI,java.lang.String,java.lang.String,int,<nulltype>,java.lang.Object[],java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (acceptOrRejectThisOne != null) { model.Paper acceptOrRejectThisOnePaper = this.currentConference.getPaper(username, \"Program Chair\", acceptOrRejectThisOne); int reply = javax.swing.JOptionPane.showConfirmDialog(this, ((\"Would you like to accept \" + acceptOrRejectThisOne) + \"?\"), \"Accept or Reject\", javax.swing.JOptionPane.YES_NO_CANCEL_OPTION); if (reply == (javax.swing.JOptionPane.YES_OPTION)) { acceptOrRejectThisOnePaper.updateStatus(true); }else if (reply == (javax.swing.JOptionPane.NO_OPTION)) { acceptOrRejectThisOnePaper.updateStatus(false); }else if (reply == (javax.swing.JOptionPane.CANCEL_OPTION)) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/99/buggy-version/Development-Project.src.view.MainMenuGUI.java", "BodyUseAPI": ["javax.swing.JOptionPane.showConfirmDialog(view.MainMenuGUI,java.lang.String,java.lang.String,int)", "model.Conference.getPaper(java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "dd55102796635c533644ecc6092d7e1049e2ec19", "Url": "https://api.github.com/repos/lewisstevan/Development-Project", "Date": "2014-12-01T06:16:05Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (v == null) { android.util.Log.e(com.xcv58.joulerenergymanager.MainActivity.TAG, \"get null View from button of MainActivity\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/3839/buggy-version/app.src.main.java.com.xcv58.joulerenergymanager.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "e279949d6934f529838c546e60b197e889ad3dbb", "Url": "https://api.github.com/repos/anudipa/joulerEnergyManager", "Date": "2014-12-02T19:59:33Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_parr[id]) == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/5122/buggy-version/src.ArenaPark.java", "BodyUseAPI": [], "Fixed commit": "5eec3abef1bc597361f49e275ebf41a44d6b99ae", "Url": "https://api.github.com/repos/supercube/oop_hw4", "Date": "2013-05-03T11:28:09Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["map.AreaData.getAreaName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (util.StringUtils.isNullOrEmpty(areaName)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/2085/buggy-version/src.gui.view.map.MapView.java", "BodyUseAPI": [], "Fixed commit": "81a0effeedd5d469d0fc6695cf643b09d8033453", "Url": "https://api.github.com/repos/leahfortier/pokemon", "Date": "2017-02-15T16:43:31Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["shuffle.fwk.config.manager.ImageManager.getResourceInputStream(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (is != null) { java.awt.image.BufferedImage img = getBufferedImage(is, resource); if (img != null) { imageLoadingMap.put(key, img); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/1242/buggy-version/src.shuffle.fwk.config.manager.ImageManager.java", "BodyUseAPI": ["shuffle.fwk.config.manager.ImageManager.getBufferedImage(java.io.InputStream,java.lang.String)"], "Fixed commit": "e0960b3a0cf88d4776d9ee4043d77906392ec246", "Url": "https://api.github.com/repos/Loreinator/Shuffle-Move", "Date": "2015-09-25T00:01:30Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.crazyhitty.chdev.ks.munch.models.SettingsPreferences.THEME)) { mImgCategory.setColorFilter(android.support.v4.content.ContextCompat.getColor(context, R.color.md_grey_100)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/56/buggy-version/app.src.main.java.com.crazyhitty.chdev.ks.munch.sources.SourcesPresenter.java", "BodyUseAPI": [], "Fixed commit": "c9b67d2b5dd645ac7d1bd05d90f9b1447014fc14", "Url": "https://api.github.com/repos/crazyhitty/Munch", "Date": "2016-01-30T14:18:25Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.media.RingtoneManager.getRingtone(ca.rmen.android.networkmonitor.app.prefs.AdvancedPreferencesActivity,android.net.Uri)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (ringtone == null) { android.net.Uri defaultRingtoneUri = android.media.RingtoneManager.getDefaultUri(RingtoneManager.TYPE_NOTIFICATION); if (ringtoneUri.equals(defaultRingtoneUri)) return getString(R.string.pref_value_notification_ringtone_default); else return null; }else { return ringtone.getTitle(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/5832/buggy-version/networkmonitor.src.main.java.ca.rmen.android.networkmonitor.app.prefs.AdvancedPreferencesActivity.java", "BodyUseAPI": ["android.media.Ringtone.getTitle(ca.rmen.android.networkmonitor.app.prefs.AdvancedPreferencesActivity)"], "Fixed commit": "549b4207a4eadcae472f8fad3ea1368d853fd2d3", "Url": "https://api.github.com/repos/caarmen/network-monitor", "Date": "2015-11-29T15:05:31Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((info.faceland.bolt.BoltAPI.getChestOwnerName(((org.bukkit.inventory.InventoryHolder) (event.getBlock().getState())).getInventory())) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/5288/buggy-version/src.main.java.info.faceland.bolt.BoltListener.java", "BodyUseAPI": [], "Fixed commit": "9444b5f1ce10ee9e237e227d3bd6c9b977506008", "Url": "https://api.github.com/repos/TealCube/bolt", "Date": "2015-09-02T02:54:55Z"},
{"Line": "=>415", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.biojava.nbio.structure.io.SeqRes2AtomAligner.getFullAtomSequence(java.util.List<org.biojava.nbio.structure.io.Group>,java.util.Map<java.lang.Integer, java.lang.Integer>)", "org.biojava.nbio.structure.io.SeqRes2AtomAligner.getFullAtomSequence(java.util.List<org.biojava.nbio.structure.io.Group>,java.util.Map<java.lang.Integer, java.lang.Integer>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((seq1.isEmpty()) || (seq2.isEmpty())) { org.biojava.nbio.structure.io.SeqRes2AtomAligner.logger.warn(\"Could not align nucleotide sequences, at least one of them is empty\"); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/4494/buggy-version/biojava-structure.src.main.java.org.biojava.nbio.structure.io.SeqRes2AtomAligner.java", "BodyUseAPI": [], "Fixed commit": "f85cd2146baa9df1525e01345040c5db78c6cc54", "Url": "https://api.github.com/repos/sbliven/biojava-sbliven", "Date": "2015-02-19T18:34:34Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((index) == (resolvers.length)) { index = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/5827/buggy-version/library.src.main.java.com.qiniu.android.dns.DnsManager.java", "BodyUseAPI": [], "Fixed commit": "a91bde13f53668decb7aad4dd38c3f73b990e61e", "Url": "https://api.github.com/repos/qiniu/happy-dns-android", "Date": "2015-07-30T11:38:34Z"},
{"Line": "=>428", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.targetAgentList.size()) == 0) { this.tooltip.setToGeneralDescription(\"Attack\", \"No enemies in range\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/1083/buggy-version/core.src.main.java.com.pipai.wf.gui.BattleGUI.java", "BodyUseAPI": [], "Fixed commit": "f7b384b3fce0ea041c845d41cc00f9fb1be92e66", "Url": "https://api.github.com/repos/cypai/wf", "Date": "2015-06-08T09:17:47Z"},
{"Line": "=>11652", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == (com.emc.storageos.vplexcontroller.VPlexDeviceController.coordinator)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/8284/buggy-version/controllersvc.src.main.java.com.emc.storageos.vplexcontroller.VPlexDeviceController.java", "BodyUseAPI": [], "Fixed commit": "c6c0388253bb5dfe671b5d3945e8896f95577595", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-05-03T17:04:59Z"},
{"Line": "=>885", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (result.iterator().hasNext()) { com.emc.storageos.db.client.model.Volume volume = _dbClient.queryObject(com.emc.storageos.db.client.model.Volume.class, result.iterator().next()); if ((null != volume) && (!(volume.getInactive()))) { return volume; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/8284/buggy-version/controllersvc.src.main.java.com.emc.storageos.volumecontroller.impl.plugins.VPlexCommunicationInterface.java", "BodyUseAPI": ["com.emc.storageos.volumecontroller.impl.plugins.VPlexCommunicationInterface.queryObject(java.lang.Class,result.iterator().next())", "result.iterator().next()", "com.emc.storageos.db.client.constraint.URIQueryResultList.iterator()"], "Fixed commit": "c6c0388253bb5dfe671b5d3945e8896f95577595", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-05-03T17:04:59Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((dirList == null) || ((dirList.length) == 0)) { com.iscas.pminer.service.MongoDBRiver.LOGGER.error((\"Error: this is not profile data folder - \" + dataRootPath)); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/5637/buggy-version/src.main.java.com.iscas.pminer.service.MongoDBRiver.java", "BodyUseAPI": [], "Fixed commit": "f8a328b863795308d47b140eb82b9705b02a53e4", "Url": "https://api.github.com/repos/leimingshan/MongoDB-ImportXMLProfile", "Date": "2016-03-04T05:48:05Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((proteinSequence = proteinSequencesMap.get(transcriptId).getSeq()) != null) { transcript.setProteinSequence(proteinSequence); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/1003/buggy-version/cellbase-app.src.main.java.org.opencb.cellbase.app.transform.GeneParser.java", "BodyUseAPI": [], "Fixed commit": "45ba51b4da074c0aa6e4845494be88ac478cda23", "Url": "https://api.github.com/repos/pabarcgar/cellbase", "Date": "2015-02-18T10:43:58Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((user.getPassword().isEmpty()) == true) { ps.setString(4, user.getMail()); ps.setInt(5, user.getLibraryId()); ps.setLong(6, user.getCardNumber()); }else { ps.setString(4, user.getMail()); ps.setString(5, user.getPassword()); ps.setInt(6, user.getLibraryId()); ps.setLong(7, user.getCardNumber()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/1155/buggy-version/src.dao.UserDao.java", "BodyUseAPI": ["beans.User.getMail()", "java.sql.PreparedStatement.setInt(int,user.getLibraryId())", "java.sql.PreparedStatement.setString(int,user.getPassword())", "beans.User.getCardNumber()", "java.sql.PreparedStatement.setInt(int,user.getLibraryId())", "java.sql.PreparedStatement.setString(int,user.getMail())", "beans.User.getMail()", "java.sql.PreparedStatement.setLong(int,user.getCardNumber())", "beans.User.getCardNumber()", "beans.User.getLibraryId()", "beans.User.getLibraryId()", "java.sql.PreparedStatement.setString(int,user.getMail())", "java.sql.PreparedStatement.setLong(int,user.getCardNumber())", "beans.User.getPassword()"], "Fixed commit": "37fc750752fb60214b4f1241c4f6ec3efdcb832c", "Url": "https://api.github.com/repos/SatokoENDO/LibrarySystem2", "Date": "2017-06-28T05:11:08Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["MySqlSelectQueryBlock.Limit.getOffset()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (offset instanceof com.alibaba.druid.sql.ast.expr.SQLIntegerExpr) { originOffset = ((com.alibaba.druid.sql.ast.expr.SQLIntegerExpr) (offset)).getNumber(); }else { originOffset = ((com.alibaba.druid.sql.ast.expr.SQLNumberExpr) (offset)).getNumber(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/6295/buggy-version/dragon-sharding-datasource.src.main.java.com.tianshouzhi.dragon.sharding.pipeline.handler.sqlrewrite.mysql.MysqlSelectStatementRewriter.java", "BodyUseAPI": [], "Fixed commit": "9b7a55b9e387c0bb7a8a678c431c2fe5a4bd8f87", "Url": "https://api.github.com/repos/tianshouzhi/dragon", "Date": "2017-04-16T09:01:50Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["MySqlSelectQueryBlock.Limit.getRowCount()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (rowCount instanceof com.alibaba.druid.sql.ast.expr.SQLIntegerExpr) { originRowCount = ((com.alibaba.druid.sql.ast.expr.SQLIntegerExpr) (rowCount)).getNumber(); }else { originRowCount = ((com.alibaba.druid.sql.ast.expr.SQLNumberExpr) (rowCount)).getNumber(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/6295/buggy-version/dragon-sharding-datasource.src.main.java.com.tianshouzhi.dragon.sharding.pipeline.handler.sqlrewrite.mysql.MysqlSelectStatementRewriter.java", "BodyUseAPI": [], "Fixed commit": "9b7a55b9e387c0bb7a8a678c431c2fe5a4bd8f87", "Url": "https://api.github.com/repos/tianshouzhi/dragon", "Date": "2017-04-16T09:01:50Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isCapsLock) isCapsLock = false; else if (((lastCapsTime) + 800) > now) isCapsLock = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/4362/buggy-version/app.src.main.java.com.doubledotlabs.butterboard.services.KeyboardService.java", "BodyUseAPI": [], "Fixed commit": "821b3bc5b5424a8d858753e256a3dafeab3a5b4d", "Url": "https://api.github.com/repos/DoubleDotLabs/Butterboard", "Date": "2017-01-10T23:05:33Z"},
{"Line": "=>821", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["br.uff.midiacom.ana.descriptor.NCLDescriptor<D, R, L, T, P>.findRegion(((br.uff.midiacom.ana.NCLHead) (head)).getRegionBase().getRegions())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (reg == null) addWarning((\"Could not find region in regionBase with id: \" + (getRegion().getId())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/523/buggy-version/src.br.uff.midiacom.ana.descriptor.NCLDescriptor.java", "BodyUseAPI": [], "Fixed commit": "87b84f5ffcb053a0e168b0f73c846993a7dd1d83", "Url": "https://api.github.com/repos/joeldossantos/aNa", "Date": "2011-06-09T13:52:27Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JColorChooser.showDialog(<nulltype>,java.lang.String,java.awt.Color)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (color == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/8804/buggy-version/src.org.obicere.cc.gui.settings.ColorSetting.java", "BodyUseAPI": [], "Fixed commit": "2e625674c49bb0a348fe4ccf44d722a489ba6c2f", "Url": "https://api.github.com/repos/Obicere/ObicereCC", "Date": "2014-09-17T19:05:38Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (instrumentationResult == null) { return getParent().loadClass(className); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/1031/buggy-version/src.main.java.net.unit8.waitt.CoberturaClassLoader.java", "BodyUseAPI": [], "Fixed commit": "c13c6dea6dc3c81f4e14c1ace96699c034cc69e7", "Url": "https://api.github.com/repos/kawasima/waitt-maven-plugin", "Date": "2014-06-18T04:05:01Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["new com.activeandroid.query.Select().from(mycook.dell.example.com.patientapp.model.Patient.class).where(((\"Patient_date = '\" + (s_date.getText().toString())) + \"'\")).execute()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((patients.size()) <= 0) { android.widget.Toast.makeText(this, \"above data is not found in list\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/8820/buggy-version/app.src.main.java.mycook.dell.example.com.patientapp.search_patients.java", "BodyUseAPI": [], "Fixed commit": "d20081ed36e76a31342528bf0fb634f2ed775ab5", "Url": "https://api.github.com/repos/ruqaiyasattar/Project0Stage1", "Date": "2017-07-27T16:16:54Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["new com.activeandroid.query.Select().from(mycook.dell.example.com.patientapp.model.Patient.class).where(((\"Patient_name = '\" + (mEditText.getText().toString())) + \"'\")).execute()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((patients.size()) <= 0) { android.widget.Toast.makeText(this, \"above data is not found in list\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/8820/buggy-version/app.src.main.java.mycook.dell.example.com.patientapp.search_patients.java", "BodyUseAPI": [], "Fixed commit": "d20081ed36e76a31342528bf0fb634f2ed775ab5", "Url": "https://api.github.com/repos/ruqaiyasattar/Project0Stage1", "Date": "2017-07-27T16:16:54Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (lvl < (MAX_LVL)) { this.lvl = lvl + 1; }else { this.lvl = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/3069/buggy-version/MainMenu.java", "BodyUseAPI": [], "Fixed commit": "fca98450592888b9b70424ec36954e524c303f04", "Url": "https://api.github.com/repos/SpaceRaiders/SpaceRaiderScroll", "Date": "2012-11-12T10:32:31Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.hadoop.hive.ql.plan.SparkWork.getRequiredCounterPrefix()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (prefixes != null) { for (java.lang.String group : prefixes.keySet()) { for (java.lang.String counterName : prefixes.get(group)) { sparkCounters.createCounter(group, counterName); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/7248/buggy-version/ql.src.java.org.apache.hadoop.hive.ql.exec.spark.RemoteHiveSparkClient.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.util.List<java.lang.String>>.keySet()", "java.util.Map<java.lang.String, java.util.List<java.lang.String>>.get(java.lang.String)"], "Fixed commit": "fed7c5a89c8ade0e9be11ebe3b6a22243cd406ea", "Url": "https://api.github.com/repos/ChengXiangLi/hive", "Date": "2014-11-13T02:00:46Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCurrentIndex) > 0) { mCurrentIndex = ((mCurrentIndex) - 1) % (mQuestionBank.length); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/2141/buggy-version/GeoQuiz.app.src.main.java.it.pernat.stefano.geoquiz.QuizActivity.java", "BodyUseAPI": [], "Fixed commit": "e87e73ac74dafb9c7fe5a953aebbd63a90f5b0c7", "Url": "https://api.github.com/repos/StefanoPernat/BNR-Guide", "Date": "2016-03-08T17:57:51Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (r.getYPv().isExistInEDL()) { new org.csstudio.opibuilder.converter.writer.OpiString(widgetContext, \"pv_name\", java.lang.String.format(\"$(%s)\", java.lang.String.format(org.csstudio.opibuilder.converter.writer.Opi_xyGraphClass.TRACE_N_Y_PV, '0'))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/4300/buggy-version/applications.opibuilder.opibuilder-plugins.org.csstudio.opibuilder.converter.src.main.org.csstudio.opibuilder.converter.writer.Opi_xyGraphClass.java", "BodyUseAPI": [], "Fixed commit": "7d2b7ef7eacc64306fe8c54c5d731025e6fcce2b", "Url": "https://api.github.com/repos/dls-controls/cs-studio", "Date": "2016-04-25T16:19:26Z"},
{"Line": "=>335", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.widget.TextView.getVisibility()", "android.widget.TextView.getVisibility()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (oldVisible != newVisible) com.maksl5.bl_hunt.custom_ui.fragment.DeviceDiscoveryLayout.updateIndicatorViews(mainActivity);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/6554/buggy-version/src.com.maksl5.bl_hunt.custom_ui.fragment.DeviceDiscoveryLayout.java", "BodyUseAPI": [], "Fixed commit": "d9aa35282625f0e6d17b8fe2363f2218c5e360aa", "Url": "https://api.github.com/repos/Maksl5/blue-hunter", "Date": "2015-11-15T00:50:07Z"},
{"Line": "=>499", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((l.charAt(1)) == 'D') { ids.remove(relationId); }else { ids.add(relationId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/4320/buggy-version/OsmAndMapCreator.src.net.osmand.data.preparation.IncOsmChangesCreator.java", "BodyUseAPI": [], "Fixed commit": "35abe47663c81937ec008c09048b09f3040c540a", "Url": "https://api.github.com/repos/osmandapp/OsmAnd-tools", "Date": "2015-07-26T16:50:19Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.mitre.caasd.portlet.faces.WindowStateRestoringGenericFacesPortlet.windowStateFrom(com.liferay.portal.theme.ThemeDisplay)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (windowState == null) { org.mitre.caasd.portlet.faces.WindowStateRestoringGenericFacesPortlet.LOGGER.debug(\"unable to find configured window state, default to MAXIMIZED\"); windowState = javax.portlet.WindowState.MAXIMIZED; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/661/buggy-version/src.main.java.org.mitre.caasd.portlet.faces.WindowStateRestoringGenericFacesPortlet.java", "BodyUseAPI": [], "Fixed commit": "f93b9820301fcb911d11b881ba3e09b3d5140b0c", "Url": "https://api.github.com/repos/lucastheisen/FACES-2493", "Date": "2015-10-27T19:09:54Z"},
{"Line": "=>606", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (remove(map, slotIndex, allocIndex)) slotIndex = net.openhft.smoothie.Segment.prevSlotIndex(slotIndex);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/5178/buggy-version/src.main.java.net.openhft.smoothie.Segment.java", "BodyUseAPI": ["net.openhft.smoothie.Segment.prevSlotIndex(long)"], "Fixed commit": "de3e878ce2c2bccf7a44962c2b60cf7c820d182e", "Url": "https://api.github.com/repos/OpenHFT/SmoothieMap", "Date": "2015-09-12T16:16:28Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((orgTerminalService.getTerminalById(terminalPolicyNodeDao.getTerminal_id())) == null) return new com.everbetter.common.utils.result.Result(ReturnCode.FAILURE.code, \"\u7ec8\u7aef\u4e0d\u5b58\u5728\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/8504/buggy-version/src.main.java.com.everbetter.controller.SynchronousController.java", "BodyUseAPI": [], "Fixed commit": "7493f787069fe9a27b86fb0a1db32aea6fe3aa31", "Url": "https://api.github.com/repos/champion626/everbetter", "Date": "2017-08-08T03:36:42Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((synchronousService.checkTerminalPolicyNode(terminalPolicyNodeDao.getTerminal_id(), terminalPolicyNodeDao.getSynchronous_policy_id())) != null) return new com.everbetter.common.utils.result.Result(ReturnCode.FAILURE.code, \"\u6b64\u7ec8\u7aef\u5df2\u4e0e\u7b56\u7565\u7ed1\u5b9a\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/8504/buggy-version/src.main.java.com.everbetter.controller.SynchronousController.java", "BodyUseAPI": [], "Fixed commit": "7493f787069fe9a27b86fb0a1db32aea6fe3aa31", "Url": "https://api.github.com/repos/champion626/everbetter", "Date": "2017-08-08T03:36:42Z"},
{"Line": "=>737", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (cPEObject != null) { this.setCalendarEventPoint(cPEObject, request, specimenCollectionGroupForm); if (\"add\".equals(operation)) { specimenCollectionGroupForm.setClinicalDiagnosis(((edu.wustl.catissuecore.domain.CollectionProtocolEvent) (cPEObject)).getClinicalDiagnosis()); specimenCollectionGroupForm.setClinicalStatus(((edu.wustl.catissuecore.domain.CollectionProtocolEvent) (cPEObject)).getClinicalStatus()); request.setAttribute(\"clinicalDiagnosis\", specimenCollectionGroupForm.getClinicalDiagnosis()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/9107/buggy-version/WEB-INF.src.edu.wustl.catissuecore.action.SpecimenCollectionGroupAction.java", "BodyUseAPI": ["edu.wustl.catissuecore.action.SpecimenCollectionGroupAction.setCalendarEventPoint(java.lang.Object,javax.servlet.http.HttpServletRequest,edu.wustl.catissuecore.actionForm.SpecimenCollectionGroupForm)"], "Fixed commit": "05e0ef59964765a17e33592231c67a586d2ad850", "Url": "https://api.github.com/repos/NCIP/catissue-core", "Date": "2014-05-02T20:24:26Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((client.getRegisteredRedirectUri()) != null) { for (java.lang.String uri : client.getRegisteredRedirectUri()) { if (blacklistedSiteService.isBlacklisted(uri)) { throw new java.lang.IllegalArgumentException((\"Client URI is blacklisted: \" + uri)); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/7032/buggy-version/openid-connect-server.src.main.java.org.mitre.oauth2.service.impl.DefaultOAuth2ClientDetailsEntityService.java", "BodyUseAPI": ["org.mitre.oauth2.model.ClientDetailsEntity.getRegisteredRedirectUri()"], "Fixed commit": "cf1ddf0457253c96a3d28f42c2193cf3d346a827", "Url": "https://api.github.com/repos/mitreid-connect/OpenID-Connect-Java-Spring-Server", "Date": "2012-11-21T20:39:07Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (plugin.isNodeDisabled(\"disable-weather\", event.getWorld().getName())) { java.lang.System.out.println(\"Stopped weather!\"); event.setCancelled(true); }else if (((!(plugin.isNodeDisabled(\"disable-weather\", event.getWorld().getName()))) && (!(event.getWorld().hasStorm()))) && (((plugin.getIntValue(\"minimum-rain-wait\", event.getWorld().getName(), 600)) * 1000) < ((java.lang.System.currentTimeMillis()) - lasttime))) { java.lang.System.out.println(\"Stopped weather!\"); event.setCancelled(true); }else if (((!(plugin.isNodeDisabled(\"disable-weather\", event.getWorld().getName()))) && (!(event.getWorld().hasStorm()))) && (((plugin.getIntValue(\"minimum-rain-wait\", event.getWorld().getName(), 600)) * 1000) >= ((java.lang.System.currentTimeMillis()) - lasttime))) { }else if (event.getWorld().hasStorm()) { java.lang.System.out.println(\"Weather stopped! Recording...\"); lastweather.put(event.getWorld().getName(), java.lang.System.currentTimeMillis()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/2935/buggy-version/src.de.crannk.xPaw.RandomWeatherWeatherListener.java", "BodyUseAPI": ["de.crannk.xPaw.RandomWeather.getIntValue(java.lang.String,event.getWorld().getName(),int)", "org.bukkit.event.weather.WeatherChangeEvent.getWorld()", "event.getWorld().getName()", "org.bukkit.event.weather.WeatherChangeEvent.getWorld()", "de.crannk.xPaw.RandomWeather.isNodeDisabled(java.lang.String,event.getWorld().getName())", "org.bukkit.event.weather.WeatherChangeEvent.getWorld()", "org.bukkit.event.weather.WeatherChangeEvent.getWorld()", "de.crannk.xPaw.RandomWeather.getIntValue(java.lang.String,event.getWorld().getName(),int)", "org.bukkit.event.weather.WeatherChangeEvent.setCancelled(boolean)", "de.crannk.xPaw.RandomWeather.isNodeDisabled(java.lang.String,event.getWorld().getName())", "org.bukkit.event.weather.WeatherChangeEvent.getWorld()", "org.bukkit.event.weather.WeatherChangeEvent.getWorld()", "event.getWorld().getName()", "event.getWorld().hasStorm()", "org.bukkit.event.weather.WeatherChangeEvent.getWorld()", "org.bukkit.event.weather.WeatherChangeEvent.getWorld()", "org.bukkit.event.weather.WeatherChangeEvent.setCancelled(boolean)", "event.getWorld().getName()", "event.getWorld().hasStorm()", "event.getWorld().getName()", "event.getWorld().getName()", "event.getWorld().hasStorm()", "java.util.concurrent.ConcurrentHashMap.put(event.getWorld().getName(),long)"], "Fixed commit": "17b34404dc24bce14a8b15e131c6673c1a2392dd", "Url": "https://api.github.com/repos/Tux2/RandomWeather", "Date": "2011-05-11T06:42:00Z"},
{"Line": "=>298", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rootName.equals(\"root\")) { return com.arapiki.utils.errors.ErrorCode.CANT_REMOVE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/4876/buggy-version/BuildStore.priv.src.com.arapiki.disco.model.FileNameSpaces.java", "BodyUseAPI": [], "Fixed commit": "c7cbdca481fcc4b7c660acf72530093cce8c9ba2", "Url": "https://api.github.com/repos/northvankiwiguy/Disco-Build-System", "Date": "2011-02-21T21:42:27Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ruleBook.canMove(gameState, toCol, fromCol, deck.dealCount)) == true) { gameState.moveCardToCol(fromCol, toCol); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/6180/buggy-version/src.main.java.models.Game.java", "BodyUseAPI": ["models.GameState.moveCardToCol(int,int)"], "Fixed commit": "81dcf28475082f2408207d7ff15bd40e154c55d6", "Url": "https://api.github.com/repos/cs361fall2017/team5", "Date": "2017-11-12T18:25:10Z"},
{"Line": "=>1719", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.janelia.render.service.dao.RenderDao.LOG.isDebugEnabled()) { java.lang.String queryJson = tileQuery.toJson(); if ((queryJson.length()) > 100) { queryJson = (queryJson.substring(0, 95)) + \" ...}\"; } org.janelia.render.service.dao.RenderDao.LOG.debug(\"addResolvedTileSpecs: found {} tile spec(s) for {}.find({}).sort({})\", renderParameters.numberOfTileSpecs(), org.janelia.render.service.dao.MongoUtil.fullName(tileCollection), queryJson, orderBy.toJson()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/2755/buggy-version/render-ws.src.main.java.org.janelia.render.service.dao.RenderDao.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String,renderParameters.numberOfTileSpecs(),org.janelia.render.service.dao.MongoUtil.fullName(tileCollection),java.lang.String,orderBy.toJson())"], "Fixed commit": "a9c8559104dc80dae189755274d10a5abd1a651d", "Url": "https://api.github.com/repos/neurodata/render", "Date": "2017-02-27T00:42:01Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.datetimeList.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((dateTime.gteq(minDateTime)) && (dateTime.lteq(maxDateTime))) { if (occurences != null) { cellView.setBackgroundResource(com.henryPATHn.SchoolCalHelper.getBusyColor(occurences)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/3823/buggy-version/src.com.henryPATHn.SchoolWeekAdapter.java", "BodyUseAPI": [], "Fixed commit": "cfce6ad6f8037450689278e8746ca6f21d9a82b4", "Url": "https://api.github.com/repos/henryPATHn/CuteCalendar", "Date": "2014-03-24T09:56:34Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["skeleton.getRoot().find(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (joint == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/260/buggy-version/animation-editor-main.src.main.java.com.gemserk.tools.animationeditor.core.SkeletonAnimationUtils.java", "BodyUseAPI": [], "Fixed commit": "f09f2e760fa3e50bd7071f2639ecae26995046ad", "Url": "https://api.github.com/repos/gemserk/skeletal-animation-editor", "Date": "2011-12-20T18:07:25Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((enc.appended) != null) && (!(com.github.mustachejava.codes.ExtendCode.WS.matcher(enc.appended).matches()))) newcodes[i].append(enc.appended);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/6909/buggy-version/compiler.src.main.java.com.github.mustachejava.codes.ExtendCode.java", "BodyUseAPI": ["newcodes[i].append(enc.appended)"], "Fixed commit": "024f1ea6bb8eb320568a71d8dde648be6deee9e8", "Url": "https://api.github.com/repos/spullara/mustache.java", "Date": "2012-06-27T15:40:38Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, com.github.mustachejava.codes.ExtendNameCode>.get(enc.getName())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((extendReplaceCode.appended) != null) && (com.github.mustachejava.codes.ExtendCode.WS.matcher(extendReplaceCode.appended).matches())) extendReplaceCode.appended = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/6909/buggy-version/compiler.src.main.java.com.github.mustachejava.codes.ExtendCode.java", "BodyUseAPI": [], "Fixed commit": "024f1ea6bb8eb320568a71d8dde648be6deee9e8", "Url": "https://api.github.com/repos/spullara/mustache.java", "Date": "2012-06-27T15:40:38Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (searchType.equals(\"collection\")) { isTopMostSelected = true; myCollDefault.getElement().setAttribute(\"style\", \"background-color: #cfe3f1;\"); }else { isAddingInProgress = true; cureentcollectionTreeItem = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/8036/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.gsearch.addResourcePopup.SearchAddResourceToCollectionView.java", "BodyUseAPI": [], "Fixed commit": "24f0b64a4f0c8efbd7e0d511ee2f050424330e9b", "Url": "https://api.github.com/repos/anilgooru/Gooru-Web", "Date": "2015-05-12T12:58:59Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jboss.netty.buffer.ChannelBuffer.readInt()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (commandId == (com.cloudhopper.smpp.SmppConstants.CMD_ID_GENERIC_NACK)) { pdu = new com.cloudhopper.smpp.pdu.GenericNack(); }else if (commandId == (com.cloudhopper.smpp.SmppConstants.CMD_ID_SUBMIT_MULTI_RESP)) { pdu = new com.cloudhopper.smpp.pdu.SubmitMultiResp(); }else { pdu = new com.cloudhopper.smpp.pdu.PartialPduResp(commandId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/1380/buggy-version/src.main.java.com.cloudhopper.smpp.transcoder.DefaultPduTranscoder.java", "BodyUseAPI": [], "Fixed commit": "ac1480b3690cbde7722cfc110a8ed8a8fc86d27a", "Url": "https://api.github.com/repos/RestComm/cloudhopper-smpp", "Date": "2016-01-26T20:17:03Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jboss.netty.buffer.ChannelBuffer.readInt()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (commandId == (com.cloudhopper.smpp.SmppConstants.CMD_ID_ALERT_NOTIFICATION)) { pdu = new com.cloudhopper.smpp.pdu.AlertNotification(); }else if (commandId == (com.cloudhopper.smpp.SmppConstants.CMD_ID_SUBMIT_MULTI)) { pdu = new com.cloudhopper.smpp.pdu.SubmitMulti(); }else { pdu = new com.cloudhopper.smpp.pdu.PartialPdu(commandId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/1380/buggy-version/src.main.java.com.cloudhopper.smpp.transcoder.DefaultPduTranscoder.java", "BodyUseAPI": [], "Fixed commit": "ac1480b3690cbde7722cfc110a8ed8a8fc86d27a", "Url": "https://api.github.com/repos/RestComm/cloudhopper-smpp", "Date": "2016-01-26T20:17:03Z"},
{"Line": "=>384", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.mskcc.cbio.oncokb.util.Alteration.getAlteration()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (name != null) { java.lang.Boolean contain = false; for (java.lang.String inferredAlt : org.mskcc.cbio.oncokb.util.AlterationUtils.inferredAlterations) { if (inferredAlt.equalsIgnoreCase(name)) { contain = true; } } if (!contain) { result.add(alteration); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/3255/buggy-version/core.src.main.java.org.mskcc.cbio.oncokb.util.AlterationUtils.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)"], "Fixed commit": "11790e9a9acea0ef001092dccf1d134fc436e26d", "Url": "https://api.github.com/repos/zhx828/oncokb", "Date": "2016-12-28T06:04:59Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fr.inria.astor.core.setup.ConfigurationProperties.getProperty(\"failing\")) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/9188/buggy-version/src.main.java.fr.inria.astor.core.faultlocalization.GZoltarFaultLocalization.java", "BodyUseAPI": [], "Fixed commit": "c8f95cc492d353f0080e02ba1747ecd42bda3ff9", "Url": "https://api.github.com/repos/SpoonLabs/astor", "Date": "2016-07-15T11:58:15Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((java.util.Collection) (object)).size()) > 0) { stringBuilder.deleteLastChar(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/381/buggy-version/src.main.java.com.silentgo.json.serializer.CollectionSerializer.java", "BodyUseAPI": [], "Fixed commit": "0bbeba944ee04518eb3a5aab7d433b449ef09fac", "Url": "https://api.github.com/repos/Teddy-Zhu/SilentGo-JSON", "Date": "2017-01-24T01:54:49Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((card.getText()) != null) this.cardText.setText(card.getManaSymbol(context, card.getText()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/1070/buggy-version/app.src.main.java.com.hexatao.shunluk.deckbuilder.Holders.CardHolder.java", "BodyUseAPI": ["com.hexatao.shunluk.deckbuilder.Models.CardModel.getManaSymbol(android.content.Context,card.getText())", "android.widget.TextView.setText(card.getManaSymbol(context, card.getText()))", "com.hexatao.shunluk.deckbuilder.Models.CardModel.getText()"], "Fixed commit": "4de3f195dd7021e7c22912ef05b4fbe0ea17b7eb", "Url": "https://api.github.com/repos/ShunLuk/DeckBuilder", "Date": "2017-07-10T08:30:01Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((value == null) && ((this.getValue()) == null)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/2568/buggy-version/kie-wb-common-forms.kie-wb-common-forms-commons.kie-wb-common-forms-common-rendering.kie-wb-common-forms-common-rendering-client.src.main.java.org.kie.workbench.common.forms.common.rendering.client.widgets.decimalBox.DecimalBox.java", "BodyUseAPI": [], "Fixed commit": "fc569e26ad05ca449452ff83a4a3236050ed1ded", "Url": "https://api.github.com/repos/hasys/kie-wb-common", "Date": "2017-05-19T10:13:21Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((value == null) && ((this.getValue()) == null)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/2568/buggy-version/kie-wb-common-forms.kie-wb-common-forms-commons.kie-wb-common-forms-common-rendering.kie-wb-common-forms-common-rendering-client.src.main.java.org.kie.workbench.common.forms.common.rendering.client.widgets.integerBox.IntegerBox.java", "BodyUseAPI": [], "Fixed commit": "fc569e26ad05ca449452ff83a4a3236050ed1ded", "Url": "https://api.github.com/repos/hasys/kie-wb-common", "Date": "2017-05-19T10:13:21Z"},
{"Line": "=>332", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(jfc.getSelectedFile().getName().toLowerCase().endsWith(\".xml\"))) jfc.setSelectedFile(new java.io.File(((jfc.getSelectedFile().getPath()) + \".xml\")));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/4188/buggy-version/src.plugins.adufour.ezplug.EzGUI.java", "BodyUseAPI": ["java.io.File.getPath()", "javax.swing.JFileChooser.setSelectedFile(java.io.File)", "javax.swing.JFileChooser.getSelectedFile()"], "Fixed commit": "9ad08c9f19ce8aec08e313f47e4959d9eddaa9fd", "Url": "https://api.github.com/repos/adufour/EzPlug", "Date": "2017-09-26T22:55:13Z"},
{"Line": "=>610", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.geoserver.platform.GeoServerResourceLoader.find(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (workspaces != null) { for (java.io.File dir : workspaces.listFiles()) { if ((!(dir.isDirectory())) && (!(dir.isHidden()))) continue; f = resourceLoader.find(dir, \"settings.xml\"); if (f != null) { org.geoserver.config.SettingsInfo settings = depersist(xp, f, org.geoserver.config.SettingsInfo.class); geoServer.add(settings); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/3137/buggy-version/src.main.src.main.java.org.geoserver.config.GeoServerLoader.java", "BodyUseAPI": ["java.io.File.listFiles()"], "Fixed commit": "be4ee2820cd9d9bae2aaa7a78fe6443277835a85", "Url": "https://api.github.com/repos/marcjansen/geoserver", "Date": "2012-09-30T15:06:29Z"},
{"Line": "=>3812", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mEditor) == null) || (!(mEditor.mErrorWasChanged))) { setError(error); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/3586/buggy-version/core.java.android.widget.TextView.java", "BodyUseAPI": [], "Fixed commit": "0218970afaeefcabf7ed4b476cb93f28d61847b8", "Url": "https://api.github.com/repos/android/platform_frameworks_base", "Date": "2014-11-21T20:40:28Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraftforge.event.world.BlockEvent.PlaceEvent.getItemInHand()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (itemInHand == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/8430/buggy-version/VanillaMagic.src.main.java.seia.vanillamagic.chunkloader.QuestChunkLoader.java", "BodyUseAPI": [], "Fixed commit": "b9546166e1ebf286c961cbc230918cdebced9c14", "Url": "https://api.github.com/repos/Sejoslaw/VanillaMagic", "Date": "2016-08-27T19:51:18Z"},
{"Line": "=>349", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getCenter()) instanceof LeafNode) { LeafNode tempLeaf = ((LeafNode) (this.getLeft())); tempLeaf.setNext(this.getCenter()); tempLeaf = ((LeafNode) (this.getCenter())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/8750/buggy-version/src.TreeNode.java", "BodyUseAPI": [], "Fixed commit": "773d0ddff3d628ae84cef8032e246286e0a8c8af", "Url": "https://api.github.com/repos/abvte/CS3114Project2", "Date": "2016-10-06T00:35:58Z"},
{"Line": "=>645", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((this.getLeft().getPair1().compareTo(location)) == 0) && ((this.getLeft().getPair1()) != null)) || (((this.getLeft().getPair2()) != null) && ((this.getLeft().getPair2().compareTo(location)) == 0))) { return this.getLeft().handleSearch(location); }else { return this.getCenter().handleSearch(location); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/8750/buggy-version/src.TreeNode.java", "BodyUseAPI": ["TreeNode.handleSearch(Handle)", "TreeNode.handleSearch(Handle)"], "Fixed commit": "773d0ddff3d628ae84cef8032e246286e0a8c8af", "Url": "https://api.github.com/repos/abvte/CS3114Project2", "Date": "2016-10-06T00:35:58Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(passwordnew.isEmpty())) { user.setPassword(passwordnew); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/2491/buggy-version/app.controllers.UserController.java", "BodyUseAPI": ["models.classes.User.setPassword(java.lang.String)"], "Fixed commit": "97842b933f5a62a92b428641aaaf80e5e3e004fe", "Url": "https://api.github.com/repos/felipebonezi/livre.to", "Date": "2014-06-14T22:18:18Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (sc.IsActive()) { if (insert) { sc.Report(tid, ret.node, ReportType.add, ret.node.key); }else { sc.Report(tid, ret.node, ReportType.remove, ret.node.key); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/6384/buggy-version/iterators.FSet.java", "BodyUseAPI": ["SnapCollector<HashNode>.Report(int,HashNode,ReportType.add,ret.node.key)", "SnapCollector<HashNode>.Report(int,HashNode,ReportType.remove,ret.node.key)"], "Fixed commit": "74c4cc778d9cfd10f08b7529611c516b275f52b6", "Url": "https://api.github.com/repos/ezrosent/iterators-etc", "Date": "2016-08-18T16:06:42Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(newHunt)) { com.google.firebase.database.DatabaseReference mDataBaseRef = mDatabase.getReference((((getString(R.string.huntsToClues)) + \"/\") + (mHuntName))); mDataBaseRef.addListenerForSingleValueEvent(huntsToCluesListener); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/1448/buggy-version/app.src.main.java.com.example.aj.scavengersworld.HuntCreateModify.java", "BodyUseAPI": [], "Fixed commit": "e765b766e643b1af2a808af2c8bd0af2b5ec8da0", "Url": "https://api.github.com/repos/anirudh985/ScavengersWorld", "Date": "2016-11-10T06:04:52Z"},
{"Line": "=>396", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mDanmakuVisibile)) { mClearFlag = true; (mLockCount)++; postInvalidateCompat(); }else { lockCanvasAndClear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/4869/buggy-version/DanmakuFlameMaster.src.main.java.master.flame.danmaku.ui.widget.DanmakuView.java", "BodyUseAPI": [], "Fixed commit": "acb2c45de0bab8835cd5b8b4b1ff3a7404720a52", "Url": "https://api.github.com/repos/ctiao/DanmakuFlameMaster", "Date": "2015-02-27T15:36:34Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["microbat.model.value.VarValue.getStringValue()", "microbat.model.value.VarValue.getStringValue()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((str1 == null) && (str2 == null)) { commonness += 0.5; }else if ((str1 != null) && (str2 != null)) { if (str1.equals(str2)) { commonness += 0.5; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/8569/buggy-version/microbat.src.evaluation.microbat.evaluation.util.TraceNodeSimilarityComparator.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "dd68de20943fbfb1694557127542e53a6b0ccba3", "Url": "https://api.github.com/repos/sunjun-group/Ziyuan", "Date": "2016-04-08T10:51:28Z"},
{"Line": "=>340", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ResourcesManagment.ResourcesManager.getInstance().getLevelComplete()) == 1) { disposeScene(1); }else if ((ResourcesManagment.ResourcesManager.getInstance().getLevelComplete()) == 2) { disposeScene(2); }else if ((ResourcesManagment.ResourcesManager.getInstance().getLevelComplete()) == 3) { disposeScene(3); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/3703/buggy-version/src.Scene.GameScene.java", "BodyUseAPI": [], "Fixed commit": "4b242dfd642f249bebe038a5451fd656599e0cd9", "Url": "https://api.github.com/repos/aitorneos/streetJumper", "Date": "2014-01-07T18:12:14Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((m1 != null) && (m2 == null)) { m2 = markers[((markers.length) - 1)]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/7379/buggy-version/PS2DSelfLocalisation.src.uibk.autonom.ps.navigation.Navigator.java", "BodyUseAPI": [], "Fixed commit": "3a3b309afc4283e7100f12794ba2ca20e86037eb", "Url": "https://api.github.com/repos/c-esswein/autonom-ps", "Date": "2013-05-28T12:36:02Z"},
{"Line": "=>358", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.file.Path.toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (refPath.startsWith(\"/\")) { refPath = refPath.substring(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/4768/buggy-version/XaaSPackager.src.main.java.org.opentosca.xaaspackager.packager.PackagerTask.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "525a0847a468c93b0161d69e0fa02585f75fea51", "Url": "https://api.github.com/repos/nyuuyn/XaaSPackager", "Date": "2015-10-12T12:42:09Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((goodDirs.size()) == 0) { return ((int) (((java.lang.Math.random()) * (goodDirs.size())) * 8)) + 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/4391/buggy-version/src.mirroruniverse.g6.G6Player.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.Integer>.size()"], "Fixed commit": "324730f9fdf16c03bc81aafc5183f95b60e68cd3", "Url": "https://api.github.com/repos/yufeiliu/MirrorUniverse", "Date": "2011-12-04T04:44:05Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.org.shark.graphtoolkits.applications.Group.getMemberList()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((members == null) || ((this.memberList) == null)) return res;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/1893/buggy-version/src.main.java.com.org.shark.graphtoolkits.applications.Group.java", "BodyUseAPI": [], "Fixed commit": "bb368b8ae864cb631d33a4bec71580798766781b", "Url": "https://api.github.com/repos/shaoyx/GraphToolkits", "Date": "2015-10-11T05:45:27Z"},
{"Line": "=>345", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.fujitsu.vdmj.debug.ConsoleDebugLink.debugging) && (!(suspendBreaks))) { com.fujitsu.vdmj.scheduler.SchedulableThread thread = ((com.fujitsu.vdmj.scheduler.SchedulableThread) (java.lang.Thread.currentThread())); breakpoints.put(thread, bp); stopped(ctxt, bp.location); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/1439/buggy-version/FJ-VDMJ4.src.main.java.com.fujitsu.vdmj.debug.ConsoleDebugLink.java", "BodyUseAPI": [], "Fixed commit": "f46b69ea49a2b39cd67d811bd8586b47ddc23943", "Url": "https://api.github.com/repos/nickbattle/vdmj", "Date": "2017-08-09T14:26:13Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((key.isValid()) && (key.isConnectable())) { logger.info(\"CONNECT\"); this.handleConnect(key); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/5600/buggy-version/src.main.java.ar.edu.itba.protos.grupo6.Handler.java", "BodyUseAPI": ["ar.edu.itba.protos.grupo6.Handler.handleConnect(java.nio.channels.SelectionKey)"], "Fixed commit": "e758b127fb7de8c1ef984a162aead65cd898462c", "Url": "https://api.github.com/repos/lmarzora/TPEprotos", "Date": "2016-06-01T16:56:57Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((key.isValid()) && (key.isWritable())) { logger.info(\"WRITE\"); this.handleWrite(key); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/5600/buggy-version/src.main.java.ar.edu.itba.protos.grupo6.Handler.java", "BodyUseAPI": ["ar.edu.itba.protos.grupo6.Handler.handleWrite(java.nio.channels.SelectionKey)"], "Fixed commit": "e758b127fb7de8c1ef984a162aead65cd898462c", "Url": "https://api.github.com/repos/lmarzora/TPEprotos", "Date": "2016-06-01T16:56:57Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((key.isValid()) && (key.isAcceptable())) { logger.info(\"ACCEPT\"); this.handleAccept(key); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/5600/buggy-version/src.main.java.ar.edu.itba.protos.grupo6.Handler.java", "BodyUseAPI": ["ar.edu.itba.protos.grupo6.Handler.handleAccept(java.nio.channels.SelectionKey)"], "Fixed commit": "e758b127fb7de8c1ef984a162aead65cd898462c", "Url": "https://api.github.com/repos/lmarzora/TPEprotos", "Date": "2016-06-01T16:56:57Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((errorCount) == 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/2546/buggy-version/core.src.main.java.org.glowroot.collector.AggregateBuilder.java", "BodyUseAPI": [], "Fixed commit": "5e86a9f0ef62a442689ccd16c1e3ec2e1d9a88fd", "Url": "https://api.github.com/repos/trask/glowroot", "Date": "2015-04-12T23:41:42Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edittext.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((nama.length()) > 0) { android.content.ContentValues values = new android.content.ContentValues(); values.put(\"Nama\", nama); values.put(\"Nilai\", score); this.getContentResolver().insert(android.net.Uri.parse(\"content://com.dev.pronouncegame.scoredatabaseprovider/element\"), values); }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/5027/buggy-version/PronounceGame.src.com.dev.pronouncegame.PronounceGameActivity.java", "BodyUseAPI": ["android.content.ContentValues.put(java.lang.String,java.lang.String)"], "Fixed commit": "24bc73628953ac97af299215d1170d7ec6e6c30d", "Url": "https://api.github.com/repos/coder212/game-game", "Date": "2015-09-05T09:45:55Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (b != null) { int height = b.getHeight(); int width = b.getWidth(); b = android.graphics.Bitmap.createBitmap(b, 0, 0, width, height, matrix, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/3534/buggy-version/src.com.jason.lib.imagemanager.image.LocalImage.java", "BodyUseAPI": ["android.graphics.Bitmap.getHeight()", "android.graphics.Bitmap.createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)", "android.graphics.Bitmap.getWidth()"], "Fixed commit": "7b2b12899f0b6d8f0830fbe842441f63657746e4", "Url": "https://api.github.com/repos/jason1peng/ImageManager", "Date": "2012-07-14T03:34:47Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (server == null) throw new java.lang.NullPointerException();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/1958/buggy-version/bungeecord.src.main.java.com.vexsoftware.votifier.bungee.forwarding.cache.MemoryVoteCache.java", "BodyUseAPI": [], "Fixed commit": "0eca96bd67cd4b697a9662c43222208359a0183a", "Url": "https://api.github.com/repos/parallelblock/NuVotifier", "Date": "2016-08-15T23:19:06Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (server == null) throw new java.lang.NullPointerException();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/1958/buggy-version/bungeecord.src.main.java.com.vexsoftware.votifier.bungee.forwarding.cache.MemoryVoteCache.java", "BodyUseAPI": [], "Fixed commit": "0eca96bd67cd4b697a9662c43222208359a0183a", "Url": "https://api.github.com/repos/parallelblock/NuVotifier", "Date": "2016-08-15T23:19:06Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.newDialogues[this.newDialoguesIterator].isDialogueCompleted()) && (!(this.newDialogues[this.newDialoguesIterator].isScrolling()))) { if (!(this.newDialogues[this.newDialoguesIterator].isShowingDialog())) { entity.Player.unlockMovements(); this.newDialogues[this.newDialoguesIterator].resetDialogue(); if ((this.newDialoguesIterator) < ((this.newDialogues.length) - 1)) { (this.newDialoguesIterator)++; this.handleDialogues(); }else { this.newDialogues = null; this.newDialoguesIterator = 0; this.player.stopInteraction(); } }else this.newDialogues[this.newDialoguesIterator].tick(); }else if ((this.newDialogues[this.newDialoguesIterator].isDialogueTextSet()) && (!((this.newDialogues[this.newDialoguesIterator].isDialogueCompleted()) && (this.newDialogues[this.newDialoguesIterator].isShowingDialog())))) { entity.Player.lockMovements(); this.newDialogues[this.newDialoguesIterator].tick(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/3019/buggy-version/src.level.OverWorld.java", "BodyUseAPI": ["this.newDialogues[this.newDialoguesIterator].resetDialogue()", "this.newDialogues[this.newDialoguesIterator].tick()", "this.newDialogues[this.newDialoguesIterator].isShowingDialog()", "this.newDialogues[this.newDialoguesIterator].isDialogueCompleted()", "this.newDialogues[this.newDialoguesIterator].isShowingDialog()", "this.newDialogues[this.newDialoguesIterator].isDialogueTextSet()", "this.newDialogues[this.newDialoguesIterator].tick()"], "Fixed commit": "0b1d23953206db663560b411a6f8b0babe625290", "Url": "https://api.github.com/repos/tommai78101/PokemonWalking", "Date": "2014-06-16T12:29:11Z"},
{"Line": "=>498", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((race) == null) || (race.isStarted())) || (race.isFinnsihed())) { sender.sendMessage(((((org.bukkit.ChatColor.BOLD) + \"\") + (org.bukkit.ChatColor.RED)) + \"Race not currently open for entries\")); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/8311/buggy-version/src.main.java.io.github.davidg95.equestricraftplugin.EquestriCraftPlugin.java", "BodyUseAPI": [], "Fixed commit": "fbb5055f82f705a1d9bdc92045f7010e8e0e1208", "Url": "https://api.github.com/repos/davidg95/EquestriCraftPlugin", "Date": "2017-08-29T15:43:15Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(hasColumn(\"Marketplace_Module\", \"bundleSymbolicName\"))) { runSQL((\"alter table Marketplace_Module add bundleSymbolicName \" + \"VARCHAR(500)\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/8574/buggy-version/modules.apps.marketplace.marketplace-service.src.main.java.com.liferay.marketplace.internal.upgrade.v1_0_0.UpgradeModule.java", "BodyUseAPI": [], "Fixed commit": "e321c3d5de043c4041aa99ce73a88596aa27216f", "Url": "https://api.github.com/repos/ctampoya/liferay-portal", "Date": "2017-02-13T10:01:06Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(hasColumn(\"Marketplace_Module\", \"bundleVersion\"))) { runSQL(\"alter table Marketplace_Module add bundleVersion VARCHAR(75)\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/8574/buggy-version/modules.apps.marketplace.marketplace-service.src.main.java.com.liferay.marketplace.internal.upgrade.v1_0_0.UpgradeModule.java", "BodyUseAPI": [], "Fixed commit": "e321c3d5de043c4041aa99ce73a88596aa27216f", "Url": "https://api.github.com/repos/ctampoya/liferay-portal", "Date": "2017-02-13T10:01:06Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(started)) && ((watching.size()) < (minimumPlayers))) { resetCoundown(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/3854/buggy-version/src.main.java.com.gmail.tracebachi.FloorIsLava.Arena.java", "BodyUseAPI": [], "Fixed commit": "8d877e50ec32da1481bb245fabf20aef59036088", "Url": "https://api.github.com/repos/GeeItsZee/FloorIsLava", "Date": "2016-06-09T07:34:23Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (arenaBlocks.isBelow(player.getLocation())) { player.teleport(watchLocation); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/3854/buggy-version/src.main.java.com.gmail.tracebachi.FloorIsLava.Arena.java", "BodyUseAPI": ["com.gmail.tracebachi.FloorIsLava.Player.teleport(com.gmail.tracebachi.FloorIsLava.Location)"], "Fixed commit": "8d877e50ec32da1481bb245fabf20aef59036088", "Url": "https://api.github.com/repos/GeeItsZee/FloorIsLava", "Date": "2016-06-09T07:34:23Z"},
{"Line": "=>284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.gmail.tracebachi.FloorIsLava.Bukkit.getPlayer(entry.getKey())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (arenaBlocks.isBelow(player.getLocation())) { player.teleport(watchLocation); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/3854/buggy-version/src.main.java.com.gmail.tracebachi.FloorIsLava.Arena.java", "BodyUseAPI": ["com.gmail.tracebachi.FloorIsLava.Player.teleport(com.gmail.tracebachi.FloorIsLava.Location)"], "Fixed commit": "8d877e50ec32da1481bb245fabf20aef59036088", "Url": "https://api.github.com/repos/GeeItsZee/FloorIsLava", "Date": "2016-06-09T07:34:23Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((((userName == null) || (userName.equals(\"\"))) || (userPassword == null)) || (userPassword.equals(\"\"))) { request.setAttribute(\"message\", \"<h2 style='color:red;'>Fail - Username or Password was not entered! All fields must be filled in to modify a user.</h2>\"); utility.Redirector.redirect(request, response, \"/admin/modifyUser.jsp\"); }else if (!(um.modifyUser(userID, userName, userPassword, request.getParameterValues(\"userType\")))) { request.setAttribute(\"message\", \"<h2 style='color:red;'>Fail - Could not perform modify user/interact with database!</h2>\"); utility.Redirector.redirect(request, response, \"/admin/modifyUser.jsp\"); }else { request.setAttribute(\"message\", \"<h2 style='color:green;'>Success! The user has been modified!</h2>\"); utility.Redirector.redirect(request, response, \"/admin/modifyUser.jsp\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/2908/buggy-version/MuseumServer.src.java.servlets.ModifyUser.java", "BodyUseAPI": ["businessDomainObjects.UserManager.modifyUser(int,java.lang.String,java.lang.String,request.getParameterValues(\"userType\"))"], "Fixed commit": "08047529f4a135367ffc76b0d9109e7fb12605ce", "Url": "https://api.github.com/repos/esd-soft-eng/server", "Date": "2013-03-07T16:12:08Z"},
{"Line": "=>341", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isDebugMode()) { android.util.Log.d(ch.srg.mediaplayer.SRGMediaPlayerView.TAG, (((((((((((\"onLayout: l=\" + l) + \" t=\") + t) + \" surfaceWidth=\") + surfaceWidth) + \" surfaceHeight=\") + surfaceHeight) + \" videoContainerWidth=\") + videoContainerWidth) + \" videoContainerHeight=\") + videoContainerHeight)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/7780/buggy-version/srgmediaplayer.src.main.java.ch.srg.mediaplayer.SRGMediaPlayerView.java", "BodyUseAPI": [], "Fixed commit": "1c52ebd9190f270831706190857bc88b24b60e72", "Url": "https://api.github.com/repos/SRGSSR/SRGMediaPlayer-Android", "Date": "2017-03-29T06:53:41Z"},
{"Line": "=>335", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isDebugMode()) { android.util.Log.d(ch.srg.mediaplayer.SRGMediaPlayerView.TAG, ((((\"onLayout: Update videoRenderingView size \" + \"videoRenderingViewWidth=\") + (videoRenderingViewWidth)) + \" videoRenderingViewHeight=\") + (videoRenderingViewHeight))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/7780/buggy-version/srgmediaplayer.src.main.java.ch.srg.mediaplayer.SRGMediaPlayerView.java", "BodyUseAPI": [], "Fixed commit": "1c52ebd9190f270831706190857bc88b24b60e72", "Url": "https://api.github.com/repos/SRGSSR/SRGMediaPlayer-Android", "Date": "2017-03-29T06:53:41Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((epr3.isCanceled()) || (outgoingResponse.drop)) { incomingRequest.work.close(); org.avuna.httpd.util.Logger.log(((((((((((incomingRequest.userIP) + \" \") + (incomingRequest.method.name)) + add) + \" \") + (incomingRequest.host.getHostPath())) + (incomingRequest.target)) + \" DROPPED took: \") + (((java.lang.System.nanoTime()) - benchStart) / 1000000.0)) + \" ms\")); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/5476/buggy-version/src.org.avuna.httpd.http.networking.ThreadWorker.java", "BodyUseAPI": [], "Fixed commit": "73dddce501306ec4b59f955116133f936a57fd8c", "Url": "https://api.github.com/repos/paullaz/Avuna-HTTPD", "Date": "2015-06-27T20:21:59Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((databases) == null) { databases = new java.util.ArrayList<java.lang.String>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/2768/buggy-version/src.com.keepassdroid.fileselect.RecentFileHistory.java", "BodyUseAPI": [], "Fixed commit": "b8faea33f9338f91fa21d8e2783ec5fd3ba63eed", "Url": "https://api.github.com/repos/nfd/keepassdroid", "Date": "2013-05-04T20:12:10Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((keyfiles) == null) { keyfiles = new java.util.ArrayList<java.lang.String>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/2768/buggy-version/src.com.keepassdroid.fileselect.RecentFileHistory.java", "BodyUseAPI": [], "Fixed commit": "b8faea33f9338f91fa21d8e2783ec5fd3ba63eed", "Url": "https://api.github.com/repos/nfd/keepassdroid", "Date": "2013-05-04T20:12:10Z"},
{"Line": "=>366", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["timely.Configuration.get(Configuration.SSL_TRUST_STORE_FILE)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(trustStore.isEmpty())) { ssl.trustManager(new java.io.File(trustStore)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/3487/buggy-version/server.src.main.java.timely.Server.java", "BodyUseAPI": ["io.netty.handler.ssl.SslContextBuilder.trustManager(java.io.File)"], "Fixed commit": "019c5789ce9c1da1fa09bcd452aa8a3206713110", "Url": "https://api.github.com/repos/NationalSecurityAgency/timely", "Date": "2016-08-05T15:27:43Z"},
{"Line": "=>673", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((regSSP) != null) { java.util.List<java.lang.String> selectedReg = regSSP.getSelected(); if ((selectedReg != null) && ((selectedReg.size()) == 0)) { errMsg += \"<li>Please select a registry site.</li>\"; } }else { errMsg += \"<li>Registry siteSelectionPresenter is null!</li>\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/2668/buggy-version/xdstools2.src.main.java.gov.nist.toolkit.xdstools2.client.tabs.simulatorControlTab.od.OddsSimConfigMgr.java", "BodyUseAPI": [], "Fixed commit": "1d188e4234d9a22957dcc787823101d120d0d5a0", "Url": "https://api.github.com/repos/usnistgov/iheos-toolkit2", "Date": "2017-10-23T15:05:50Z"},
{"Line": "=>341", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(bpaApplication.getApplicationDocument().isEmpty())) applicationBpaService.persistOrUpdateApplicationDocument(bpaApplication, resultBinder);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/3117/buggy-version/egov.egov-bpaweb.src.main.java.org.egov.bpa.web.controller.application.UpdateBpaApplicationController.java", "BodyUseAPI": ["org.egov.bpa.web.controller.application.UpdateBpaApplicationController.persistOrUpdateApplicationDocument(org.egov.bpa.application.entity.BpaApplication,org.springframework.validation.BindingResult)"], "Fixed commit": "c569b6c14b002a0a22f95f576bd54813b072589a", "Url": "https://api.github.com/repos/egovernments/egov-smartcity-suite", "Date": "2017-06-23T21:21:53Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(bpaApplication.getApplicationDocument().isEmpty())) applicationBpaService.persistOrUpdateApplicationDocument(bpaApplication, resultBinder);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/3117/buggy-version/egov.egov-bpaweb.src.main.java.org.egov.bpa.web.controller.application.citizen.CitizenUpdateApplicationController.java", "BodyUseAPI": ["org.egov.bpa.web.controller.application.citizen.CitizenUpdateApplicationController.persistOrUpdateApplicationDocument(org.egov.bpa.application.entity.BpaApplication,org.springframework.validation.BindingResult)"], "Fixed commit": "c569b6c14b002a0a22f95f576bd54813b072589a", "Url": "https://api.github.com/repos/egovernments/egov-smartcity-suite", "Date": "2017-06-23T21:21:53Z"},
{"Line": "=>1168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.capnproto.ListPointer.inlineCompositeWordCount(long)", "org.capnproto.StructPointer.wordSize(long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((((long) (size)) * wordsPerElement) > wordCount) { throw new org.capnproto.DecodeException(\"INLINE_COMPOSITE list's elements overrun its word count.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/3052/buggy-version/runtime.src.main.java.org.capnproto.WireHelpers.java", "BodyUseAPI": [], "Fixed commit": "0e8fe55593d72afde62a86e9fca0abee806a7988", "Url": "https://api.github.com/repos/pahjbo/capnproto-java", "Date": "2015-03-09T00:39:44Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.alphatica.genotick.ui.UserInputOutputFactory.userOutput) == null) com.alphatica.genotick.ui.UserInputOutputFactory.userOutput = new com.alphatica.genotick.ui.ConsoleOutput();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/424/buggy-version/src.main.java.com.alphatica.genotick.ui.UserInputOutputFactory.java", "BodyUseAPI": [], "Fixed commit": "b9b84a80e3e4de1be21dcfe026ed8b7a29c6ccca", "Url": "https://api.github.com/repos/alphatica/genotick", "Date": "2016-12-06T14:47:38Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((msharedPrefs) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/5260/buggy-version/app.src.main.java.fi.aalto.mobilesystems.ledcontrol.activities.SelectLightColorActivity.java", "BodyUseAPI": [], "Fixed commit": "297221569d080c707e1a8e5407cea04dbe59d9bd", "Url": "https://api.github.com/repos/Harins/LedControl", "Date": "2016-04-26T06:57:49Z"},
{"Line": "=>1119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["aQute.bnd.build.Project.getBundle(java.lang.String,java.lang.String,aQute.bnd.build.Strategy,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((container.getError()) != null) { error(\"${repo} macro refers to an artifact %s-%s (%s) that has an error: %s\", bsn, version, strategy, container.getError()); }else add(paths, container);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/7206/buggy-version/biz.aQute.bndlib.src.aQute.bnd.build.Project.java", "BodyUseAPI": ["aQute.bnd.build.Project.error(java.lang.String,java.lang.String,java.lang.String,aQute.bnd.build.Strategy,container.getError())", "aQute.bnd.build.Container.getError()", "aQute.bnd.build.Project.add(java.util.List<java.lang.String>,aQute.bnd.build.Container)"], "Fixed commit": "6bb7f7359b2c8ca23122c2598eb038cecce97720", "Url": "https://api.github.com/repos/bndtools/bnd", "Date": "2013-09-06T16:58:55Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (entity instanceof org.apache.cloudstack.api.InternalIdentity) { entityType += ((org.apache.cloudstack.api.InternalIdentity) (entity)).getId(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/3550/buggy-version/services.iam.plugin.src.org.apache.cloudstack.iam.RoleBasedEntityAccessChecker.java", "BodyUseAPI": [], "Fixed commit": "89e0e63253fffe886203af1617cea123097aa8ba", "Url": "https://api.github.com/repos/olivierlemasle/cloudstack", "Date": "2014-05-09T18:10:26Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.snet.crm.domain.shared.data.Data.optStringOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(addressFk.isEmpty())) { final net.snet.crm.domain.shared.data.Data address = addresses.findByFk(addressFk); if (address.isEmpty()) { update.put(\"address_id\", null); }else { update.put(\"address_id\", address.longOf(\"address_id\")); } if ((place.equals(addressPlace)) && (address.hasValue(\"place_id\"))) { update.put(\"place_id\", address.longOf(\"place_id\")); } }else { update.put(\"address_id\", null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/1314/buggy-version/src.main.java.net.snet.crm.service.resources.ServiceResource.java", "BodyUseAPI": ["net.snet.crm.infrastructure.addresses.AddressRepository.findByFk(java.lang.String)"], "Fixed commit": "118f099457ab2651371359d01cfc95ff077d6390", "Url": "https://api.github.com/repos/silesnet/crm-service", "Date": "2017-05-17T22:37:42Z"},
{"Line": "=>315", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.seongil.recyclerviewlife.single.AbstractRecyclerViewAdapter.registeredHeaderView()) { notifyItemCount--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/8640/buggy-version/recyclerviewlife.src.main.java.com.seongil.recyclerviewlife.single.AbstractRecyclerViewAdapter.java", "BodyUseAPI": [], "Fixed commit": "4798193d040b6fa52121d36229ca8e6114e5c3be", "Url": "https://api.github.com/repos/allsoft777/RecyclerViewLife", "Date": "2017-05-09T13:03:39Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (start.equals(end)) { return ret_val; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/2204/buggy-version/src.project3.Main.java", "BodyUseAPI": [], "Fixed commit": "8b3b0d4521cef8bae7491bfe5875a1e32da34d2f", "Url": "https://api.github.com/repos/ReeceStevens/wordLadder422C", "Date": "2015-10-05T16:20:32Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (obfuscated) toInject.add(new org.objectweb.asm.tree.MethodInsnNode(INVOKESTATIC, \"biomesoplenty/asm/BOPFogColour\", \"getFogVec\", \"(Lnn;Labw;F)Latc;\")); else toInject.add(new org.objectweb.asm.tree.MethodInsnNode(INVOKESTATIC, \"biomesoplenty/asm/BOPFogColour\", \"getFogVec\", \"(Lnet/minecraft/entity/Entity;Lnet/minecraft/world/World;F)Lnet/minecraft/util/Vec3;\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/630/buggy-version/common.biomesoplenty.asm.BOPFogColour.java", "BodyUseAPI": [], "Fixed commit": "e5b27cba3ee53ba8d6cbc8d5c8796037fa775a24", "Url": "https://api.github.com/repos/Glitchfiend/BiomesOPlenty", "Date": "2013-11-03T07:01:15Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((savedLatitude) != (org.opendatakit.tables.fragments.TableMapInnerFragment.initCameraValue)) && ((savedLongitude) != (org.opendatakit.tables.fragments.TableMapInnerFragment.initCameraValue))) && ((savedZoom) != (org.opendatakit.tables.fragments.TableMapInnerFragment.initCameraValue))) { this.map.moveCamera(com.google.android.gms.maps.CameraUpdateFactory.newLatLngZoom(new org.opendatakit.tables.fragments.LatLng(savedLatitude, savedLongitude), savedZoom)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/7758/buggy-version/tables_app.src.main.java.org.opendatakit.tables.fragments.TableMapInnerFragment.java", "BodyUseAPI": [], "Fixed commit": "390e34f72a5caf9608bb73f18534a6095fd92367", "Url": "https://api.github.com/repos/jbeorse/tables", "Date": "2017-07-07T23:36:53Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((joinRequests.get(t)) == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/3035/buggy-version/src.net.jmhertlein.mctowns.townjoin.TownJoinManager.java", "BodyUseAPI": [], "Fixed commit": "a00550bc91cae289f59e28f807b2e35eee128970", "Url": "https://api.github.com/repos/jmhertlein/MCTowns", "Date": "2012-08-06T20:59:36Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (roots != null) { io.Preface.readPreface(roots); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/2795/buggy-version/src.OracleParser.java", "BodyUseAPI": ["io.Preface.readPreface(java.io.BufferedReader)"], "Fixed commit": "492b2ed5c36a8709bb6f75136d7b3d8f66fe03cc", "Url": "https://api.github.com/repos/darrenfoong/candc", "Date": "2016-02-29T08:28:19Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tp.getSelectedIndex()) == 1) { defs.update(defs.getGraphics()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/6791/buggy-version/src.GUI.java", "BodyUseAPI": [], "Fixed commit": "df07fb59d649b6d4aab6d3cd4768a93c2d988be2", "Url": "https://api.github.com/repos/Kevin-Medzorian/Automatic-Definition-Finder", "Date": "2017-11-06T04:09:41Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tp.getSelectedIndex()) == 1) { defs.update(defs.getGraphics()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/6791/buggy-version/src.GUI.java", "BodyUseAPI": [], "Fixed commit": "df07fb59d649b6d4aab6d3cd4768a93c2d988be2", "Url": "https://api.github.com/repos/Kevin-Medzorian/Automatic-Definition-Finder", "Date": "2017-11-06T04:09:41Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((selectionPanel.getCityIN().getValue()) == \"\") { mapView.setCity(\"city\"); }else { mapView.setCity(((\"\\\"\" + (selectionPanel.getCityIN().getValue().toString())) + \"\\\"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/7198/buggy-version/src.sofwareengineering.team.thirteen.gwt.webapp.client.WebApp.java", "BodyUseAPI": ["sofwareengineering.team.thirteen.gwt.webapp.client.MapView.setCity(((\"\\\"\" + (selectionPanel.getCityIN().getValue().toString())) + \"\\\"\"))", "selectionPanel.getCityIN().getValue().toString()", "sofwareengineering.team.thirteen.gwt.webapp.client.SelectionPanel.getCityIN()", "selectionPanel.getCityIN().getValue()"], "Fixed commit": "6b7894ac9a769c97affa20527536bee3df279f55", "Url": "https://api.github.com/repos/febe19/SoftwareEngineering-team-13", "Date": "2016-11-19T13:26:55Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((selectionPanel.getCountryIN().getValue()) == \"\") { mapView.setCountry(\"country\"); }else { mapView.setCountry(((\"\\\"\" + (selectionPanel.getCountryIN().getValue().toString())) + \"\\\"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/7198/buggy-version/src.sofwareengineering.team.thirteen.gwt.webapp.client.WebApp.java", "BodyUseAPI": ["sofwareengineering.team.thirteen.gwt.webapp.client.MapView.setCountry(((\"\\\"\" + (selectionPanel.getCountryIN().getValue().toString())) + \"\\\"\"))", "sofwareengineering.team.thirteen.gwt.webapp.client.SelectionPanel.getCountryIN()", "selectionPanel.getCountryIN().getValue()", "selectionPanel.getCountryIN().getValue().toString()"], "Fixed commit": "6b7894ac9a769c97affa20527536bee3df279f55", "Url": "https://api.github.com/repos/febe19/SoftwareEngineering-team-13", "Date": "2016-11-19T13:26:55Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((queries.get(idx)) == null) queries.put(idx, new java.util.ArrayList<java.lang.String>());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/3568/buggy-version/src.trunk.lhd.java", "BodyUseAPI": ["java.util.Map<java.lang.Integer, java.util.List<java.lang.String>>.put(int,java.util.ArrayList<java.lang.String>)"], "Fixed commit": "bd4fba61a6d8bef5881544cfd6e0f5eb0f5166ca", "Url": "https://api.github.com/repos/xgfd/lhd", "Date": "2013-07-02T23:18:06Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((command.equalsIgnoreCase(\".inv\")) || (command.equalsIgnoreCase(\".inventory\"))) { com.shymain.discordRPG.Player.getInventory(event); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/2758/buggy-version/src.main.java.com.shymain.discordRPG.input.java", "BodyUseAPI": [], "Fixed commit": "370b4ec51528fdc34d7e27eee893bdf8367618bc", "Url": "https://api.github.com/repos/Shymain/discordRPG", "Date": "2016-03-09T04:46:24Z"},
{"Line": "=>379", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (photosetElement.has(\"title\")) { java.lang.Object titleObj = photosetElement.get(\"title\"); if (titleObj instanceof java.lang.String) { photoset.setTitle(((java.lang.String) (titleObj))); }else { photoset.setTitle(com.googlecode.flickrjandroid.util.JSONUtils.getChildValue(photosetElement, \"title\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/5508/buggy-version/flickrj-android.src.main.java.com.googlecode.flickrjandroid.photosets.PhotosetsInterface.java", "BodyUseAPI": ["com.googlecode.flickrjandroid.util.JSONUtils.getChildValue(org.json.JSONObject,java.lang.String)", "org.json.JSONObject.get(java.lang.String)", "com.googlecode.flickrjandroid.photosets.Photoset.setTitle(com.googlecode.flickrjandroid.util.JSONUtils.getChildValue(photosetElement, \"title\"))"], "Fixed commit": "f93b93d582d902a67d2214868d4541e2fd19625b", "Url": "https://api.github.com/repos/Danesh/FlickrjApi4Android", "Date": "2013-10-01T01:33:06Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pool) != null) { pool.shutdown(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/7596/buggy-version/src.main.java.redis.clients.jedis.JedisClusterConnectionHandler.java", "BodyUseAPI": [], "Fixed commit": "440c52d0180c9957bb4d47db8685b67217b5cd18", "Url": "https://api.github.com/repos/carlvine500/jedis", "Date": "2016-11-01T14:48:59Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((assigned) != null) && ((assigned) != (this))) return assigned.cloneWithVariables(variables);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/3045/buggy-version/src.main.java.ws.prova.reference2.ProvaListPtrImpl.java", "BodyUseAPI": [], "Fixed commit": "34af33000620b49f8953104085afbc34314794e2", "Url": "https://api.github.com/repos/maltoe/prova", "Date": "2012-04-04T08:33:06Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.fontbox.cff.CFFType1Font.getGIDForSID(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (gid == null) { return 0; }else return gid;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/8880/buggy-version/fontbox.src.main.java.org.apache.fontbox.cff.CFFType1Font.java", "BodyUseAPI": [], "Fixed commit": "947903b7ccf8ddfd44e87952ea469fad35f29faa", "Url": "https://api.github.com/repos/veraPDF/veraPDF-pdfbox", "Date": "2016-02-22T15:42:48Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (from.exists()) { com.google.common.io.Files.copy(from, to); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/2496/buggy-version/src.main.java.au.edu.wehi.idsv.util.FileHelper.java", "BodyUseAPI": ["com.google.common.io.Files.copy(java.io.File,java.io.File)"], "Fixed commit": "1a902b1780d7ac8f03d3779af41021e93da0272c", "Url": "https://api.github.com/repos/PapenfussLab/gridss", "Date": "2016-12-12T05:56:36Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(net.minecraft.server.MinecraftServer.getServer().isFlightAllowed())) { net.minecraft.server.MinecraftServer.getServer().setAllowFlight(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/872/buggy-version/src.main.java.de.luckycrew.halloween.listener.ListenerWitchsBroomstickFly.java", "BodyUseAPI": [], "Fixed commit": "0203e45dbcd69146920b686a08a91df667736962", "Url": "https://api.github.com/repos/LuckyCrew/Halloween", "Date": "2017-10-31T00:28:58Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((lineTokens.length) == 0) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/6196/buggy-version/src.main.java.edu.psu.ist.acs.micro.mid.scratch.ConstructMID4NewsDocumentSet.java", "BodyUseAPI": [], "Fixed commit": "c7c84915a493a5edb8eeee991f5c70972a77078a", "Url": "https://api.github.com/repos/forkunited/micro-mid", "Date": "2016-02-09T03:10:21Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((documentStr.length()) > 0) { if (!(edu.psu.ist.acs.micro.mid.scratch.ConstructMID4NewsDocumentSet.processDocument(file.getName(), (((file.getName()) + \".\") + id), documentStr.toString().trim(), ternaryClass))) { r.close(); java.lang.System.exit(0); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/6196/buggy-version/src.main.java.edu.psu.ist.acs.micro.mid.scratch.ConstructMID4NewsDocumentSet.java", "BodyUseAPI": ["java.lang.StringBuilder.toString()", "edu.psu.ist.acs.micro.mid.scratch.ConstructMID4NewsDocumentSet.processDocument(java.lang.String,java.lang.String,java.lang.String,edu.psu.ist.acs.micro.mid.data.annotation.nlp.AnnotationTypeNLPMID.TernaryRelevanceClass)", "java.lang.String.trim()"], "Fixed commit": "c7c84915a493a5edb8eeee991f5c70972a77078a", "Url": "https://api.github.com/repos/forkunited/micro-mid", "Date": "2016-02-09T03:10:21Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((numberOfOpenedBrackets) == 0) { return new org.service.decoration.helpers.StateManager.InClassState(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/7479/buggy-version/engine.src.main.java.org.service.decoration.helpers.StateManager.java", "BodyUseAPI": [], "Fixed commit": "b08aef5d72d992b5a64b3a03e35be574e4304bc7", "Url": "https://api.github.com/repos/IvanNikolaychuk/PatternsWeb", "Date": "2016-11-04T16:47:18Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newWord.equals(\"{\")) { (numberOfOpenedBrackets)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/7479/buggy-version/engine.src.main.java.org.service.decoration.helpers.StateManager.java", "BodyUseAPI": [], "Fixed commit": "b08aef5d72d992b5a64b3a03e35be574e4304bc7", "Url": "https://api.github.com/repos/IvanNikolaychuk/PatternsWeb", "Date": "2016-11-04T16:47:18Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!isNew) { oldTask = getTask(taskId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/3098/buggy-version/workpage.src.jajimenez.workpage.logic.ApplicationLogic.java", "BodyUseAPI": [], "Fixed commit": "2d41ca192e66462b3dc3f4cb9ece1b2ba6afb8ab", "Url": "https://api.github.com/repos/jajimenez/workpage", "Date": "2015-12-15T23:18:57Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(url.contains(\"://\"))) { url = \"http://\" + url; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/6010/buggy-version/src.main.java.org.quantumbadger.redreader.common.LinkHandler.java", "BodyUseAPI": [], "Fixed commit": "41037991cf8d2420a2600432300f55687576e9e9", "Url": "https://api.github.com/repos/Rroia/RedReader", "Date": "2014-04-19T14:22:48Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (psiClass instanceof com.intellij.psi.PsiJavaFile) { com.intellij.psi.PsiJavaFile psiFile = ((com.intellij.psi.PsiJavaFile) (psiClass.getContainingFile())); com.intellij.psi.PsiImportList psiImportList = psiFile.getImportList(); if (null != psiImportList) { for (com.intellij.psi.PsiImportStatementBase psiImportStatementBase : psiImportList.getAllImportStatements()) { com.intellij.psi.PsiJavaCodeReferenceElement importReference = psiImportStatementBase.getImportReference(); java.lang.String qualifiedName = com.intellij.openapi.util.text.StringUtil.notNullize((null == importReference ? \"\" : importReference.getQualifiedName())); if (qualifiedName.startsWith(de.plushnikov.intellij.plugin.provider.LombokAugmentProvider.LOMBOK_PREFIX_MARKER)) { return true; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/4210/buggy-version/lombok-plugin.src.main.java.de.plushnikov.intellij.plugin.provider.LombokAugmentProvider.java", "BodyUseAPI": ["com.intellij.psi.PsiClass.getContainingFile()"], "Fixed commit": "15a003d2e119386ddc9bcc3fb6ab5e52625a648f", "Url": "https://api.github.com/repos/mplushnikov/lombok-intellij-plugin", "Date": "2014-03-12T18:14:27Z"},
{"Line": "=>271", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.hsbsoftwares.android.app.healthdiagnostic.CameraActivity.mEmergencyRingtone.isPlaying()) com.hsbsoftwares.android.app.healthdiagnostic.CameraActivity.mEmergencyRingtone.stop();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/3641/buggy-version/app.src.main.java.com.hsbsoftwares.android.app.healthdiagnostic.CameraActivity.java", "BodyUseAPI": ["android.media.Ringtone.stop()"], "Fixed commit": "6ea9dfb14ee045c9264cd93fa7f040ea17a990c6", "Url": "https://api.github.com/repos/harpreet-singh-bola/smartCED", "Date": "2015-04-03T08:31:48Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (player instanceof net.minecraft.entity.player.EntityPlayer) { player.sendProgressBarUpdate(container, 0, (canPlayerAccess(((net.minecraft.entity.player.EntityPlayer) (player))) ? 1 : 0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/2126/buggy-version/src.main.java.cofh.thermalexpansion.block.TileInventory.java", "BodyUseAPI": ["net.minecraft.inventory.IContainerListener.sendProgressBarUpdate(net.minecraft.inventory.Container,int,(canPlayerAccess(((net.minecraft.entity.player.EntityPlayer) (player))) ? 1 : 0))"], "Fixed commit": "c7ea0663d1d623183f30de822a64599fb389e9db", "Url": "https://api.github.com/repos/TheCBProject/ThermalExpansion", "Date": "2016-12-19T00:36:03Z"},
{"Line": "=>777", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((chartPanelExtractor) == null) { chartPanelExtractor = new org.jfree.chart.ChartPanel(chart); }else { chartPanelExtractor.setChart(chart); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/3890/buggy-version/GUI.src.main.java.com.cse10.gui.NewsStatsGUI.java", "BodyUseAPI": [], "Fixed commit": "07f6c554fbd88cd00dd6f3fa728a48186cf925d2", "Url": "https://api.github.com/repos/Crawlers/NewsStats", "Date": "2015-02-03T12:26:07Z"},
{"Line": "=>539", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((chartPanelCrawler) == null) { chartPanelCrawler = new org.jfree.chart.ChartPanel(chart); }else { chartPanelCrawler.setChart(chart); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/3890/buggy-version/GUI.src.main.java.com.cse10.gui.NewsStatsGUI.java", "BodyUseAPI": [], "Fixed commit": "07f6c554fbd88cd00dd6f3fa728a48186cf925d2", "Url": "https://api.github.com/repos/Crawlers/NewsStats", "Date": "2015-02-03T12:26:07Z"},
{"Line": "=>659", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((chartPanelClassifier) == null) { chartPanelClassifier = new org.jfree.chart.ChartPanel(chart); }else { chartPanelClassifier.setChart(chart); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/3890/buggy-version/GUI.src.main.java.com.cse10.gui.NewsStatsGUI.java", "BodyUseAPI": [], "Fixed commit": "07f6c554fbd88cd00dd6f3fa728a48186cf925d2", "Url": "https://api.github.com/repos/Crawlers/NewsStats", "Date": "2015-02-03T12:26:07Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pos == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/5204/buggy-version/src.main.java.mcjty.immcraft.compat.intwheel.WheelCompatibility.java", "BodyUseAPI": [], "Fixed commit": "8c86fa6a2c47223c4a606f9456ed19543584dcde", "Url": "https://api.github.com/repos/McJtyMods/ImmersiveCraft", "Date": "2017-01-11T07:24:51Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((action) == (ch.parisi.e4.advancedlaunch.utils.PostLaunchAction.NONE)) || ((action) == (ch.parisi.e4.advancedlaunch.utils.PostLaunchAction.WAIT_FOR_TERMINATION))) { paramTextWidget.setText(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/9269/buggy-version/com.profidatagroup.e4.advancedlaunch.src.ch.parisi.e4.advancedlaunch.dialog.MultiLaunchConfigurationSelectionDialog.java", "BodyUseAPI": [], "Fixed commit": "1c9442dd994e81260489d03f2846fe37d811099e", "Url": "https://api.github.com/repos/Corrado98/eclipse-multilauncher", "Date": "2016-09-26T13:07:06Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (selectedHour != 12) { selectedHour += 12; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/3291/buggy-version/Splurge.src.ucsd.cs110.splurge.ReservationFragmentListener.java", "BodyUseAPI": [], "Fixed commit": "a69842a670fa157e93d65d39fd2c133e3653c8f6", "Url": "https://api.github.com/repos/SplurgeRestaurants/Splurge", "Date": "2014-06-08T07:28:15Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (selectedHour == 12) { selectedHour = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/3291/buggy-version/Splurge.src.ucsd.cs110.splurge.ReservationFragmentListener.java", "BodyUseAPI": [], "Fixed commit": "a69842a670fa157e93d65d39fd2c133e3653c8f6", "Url": "https://api.github.com/repos/SplurgeRestaurants/Splurge", "Date": "2014-06-08T07:28:15Z"},
{"Line": "=>1136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (x instanceof java.lang.Character) { return ((java.lang.Character) (x)).charValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/3426/buggy-version/src.jvm.clojure.lang.RT.java", "BodyUseAPI": [], "Fixed commit": "ff4a084c838eb121c6d4169b012a0c7c95dd5a2e", "Url": "https://api.github.com/repos/galdolber/clojure", "Date": "2014-01-12T07:06:14Z"},
{"Line": "=>1127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (x == null) { throw clojure.lang.Util.sneakyThrow(new java.lang.NullPointerException()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/3426/buggy-version/src.jvm.clojure.lang.RT.java", "BodyUseAPI": [], "Fixed commit": "ff4a084c838eb121c6d4169b012a0c7c95dd5a2e", "Url": "https://api.github.com/repos/galdolber/clojure", "Date": "2014-01-12T07:06:14Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((modem) != null) && ((modem.getComputer()) != null)) { for (java.lang.String name : networkController.getPeripheralsOnNetwork().keySet()) { if (!(peripheralWrappersByName.containsKey(name))) { dan200.computercraft.api.peripheral.IPeripheral peripheral = networkController.getPeripheralsOnNetwork().get(name); if (peripheral != null) { attachPeripheral(name, peripheral); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/1047/buggy-version/src.main.java.org.squiddev.cctweaks.core.network.modem.BasicModem.java", "BodyUseAPI": [], "Fixed commit": "8d6de89cb09235cb73b1acfe1a2cce84eae33003", "Url": "https://api.github.com/repos/SquidDev-CC/CCTweaks", "Date": "2015-06-16T21:04:43Z"},
{"Line": "=>503", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.nineworldsdeep.gauntlet.mnemosyne.v5.MnemosyneV5ScanActivity.getFilePathsListView()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (lvFilePaths != null) { com.nineworldsdeep.gauntlet.sqlite.NwdDb.getInstance(this).open(); mCurrentPaths = extensionsToPaths.getAsArrayList(entry.getExtension()); android.widget.ArrayAdapter<java.lang.String> adapter = new android.widget.ArrayAdapter(this, android.R.layout.simple_list_item_1, mCurrentPaths); lvFilePaths.setAdapter(adapter); setupListViewListener(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/7978/buggy-version/app.src.main.java.com.nineworldsdeep.gauntlet.mnemosyne.v5.MnemosyneV5ScanActivity.java", "BodyUseAPI": ["android.widget.ListView.setAdapter(android.widget.ArrayAdapter<java.lang.String>)"], "Fixed commit": "edc18052ebd0771194c29a7a46e25f60440a1333", "Url": "https://api.github.com/repos/BBuchholz/Gauntlet", "Date": "2017-02-12T20:51:50Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((monHero.getPV()) < 5) || ((monHero.getForce()) < 5)) { monHero.setMoinsPV(nbPVPerteMax); monHero.setMoinsForce(nbForce); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/976/buggy-version/src.tp3.Taverne.java", "BodyUseAPI": ["tp3.Heros.setMoinsPV(int)", "tp3.Heros.setMoinsForce(int)"], "Fixed commit": "7916c407b065222f48c9c744cbd33fad55cd5156", "Url": "https://api.github.com/repos/alexCampus/RPG_Java", "Date": "2017-03-17T14:12:03Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((monHero.getForce()) > 95) { monHero.setPlusPV(nbPV); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/976/buggy-version/src.tp3.Taverne.java", "BodyUseAPI": ["tp3.Heros.setPlusPV(int)"], "Fixed commit": "7916c407b065222f48c9c744cbd33fad55cd5156", "Url": "https://api.github.com/repos/alexCampus/RPG_Java", "Date": "2017-03-17T14:12:03Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((monHero.getPV()) > 95) { monHero.setPlusPV(nbPV); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/976/buggy-version/src.tp3.Taverne.java", "BodyUseAPI": ["tp3.Heros.setPlusPV(int)"], "Fixed commit": "7916c407b065222f48c9c744cbd33fad55cd5156", "Url": "https://api.github.com/repos/alexCampus/RPG_Java", "Date": "2017-03-17T14:12:03Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.telephony.TelephonyManager.getNetworkOperator()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((mncString == null) || ((mncString.length()) < 3)) return cellSpecs;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/5167/buggy-version/NetworkLocation.src.org.microg.networklocation.data.CellSpecRetriever.java", "BodyUseAPI": [], "Fixed commit": "c2c395af92a26c2a55035cd9742d3707627b84f0", "Url": "https://api.github.com/repos/microg/NetworkLocation", "Date": "2013-12-01T15:10:01Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (backTrackCount == (-1)) { backTrackCount = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/1437/buggy-version/domain-models-runtime.src.main.java.org.folio.rest.tools.client.Response.java", "BodyUseAPI": [], "Fixed commit": "670798aed629d13fc21991fae67f68391256b99e", "Url": "https://api.github.com/repos/folio-org/raml-module-builder", "Date": "2017-06-21T12:41:40Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.google.common.base.Strings.isNullOrEmpty(listWithCommaseparatedValues.trim())) { return new java.util.ArrayList<>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/8910/buggy-version/qg-portlet.src.main.java.de.saschafeldmann.adesso.master.thesis.portlet.util.CommaseparatedValueUtil.java", "BodyUseAPI": [], "Fixed commit": "05fb4e88fb0ae60869003dc2c200601f83bae113", "Url": "https://api.github.com/repos/sasfeld-thesis/question-generator", "Date": "2016-07-05T15:31:30Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((jdc.getDate()) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/8952/buggy-version/src.utilities.general.UTIL.java", "BodyUseAPI": [], "Fixed commit": "c55f2f4682b6371c36bb0f5c8ed981b9ad555f01", "Url": "https://api.github.com/repos/FiruzzZ/utilitiez", "Date": "2016-05-05T18:07:28Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (endIndex == (-1)) { return new taskle.logic.parser.IncorrectCommand(java.lang.String.format(taskle.logic.parser.MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/6445/buggy-version/src.main.java.taskle.logic.parser.Parser.java", "BodyUseAPI": [], "Fixed commit": "825de36bd604c7d6b460a09d1ae369c9322a4e51", "Url": "https://api.github.com/repos/CS2103AUG2016-W14-C3/main", "Date": "2016-10-08T13:58:10Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((d1.Destination2) != null) { drawString(d1.Destination2, jb.plasma.renderers.LeftMargin, 0.97, jb.plasma.renderers.TextColor, NextDestination2Font); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/6189/buggy-version/jb.plasma.renderers.CityrailV4Portrait.java", "BodyUseAPI": ["jb.plasma.renderers.CityrailV4Portrait.drawString(d1.Destination2,jb.plasma.renderers.LeftMargin,double,jb.plasma.renderers.TextColor,java.awt.Font)"], "Fixed commit": "d7dcdcdc3abe9e145d59de041cd870c0ddfebbc2", "Url": "https://api.github.com/repos/jaboles/DVA5", "Date": "2017-03-16T03:54:22Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((job) == null) { getSettler().setWorkPlace(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/2423/buggy-version/src.main.java.com.InfinityRaider.settlercraft.settlement.settler.profession.builder.TaskBuildBuilding.java", "BodyUseAPI": [], "Fixed commit": "c49f368c31b06501676583567fe86c296e270c31", "Url": "https://api.github.com/repos/InfinityRaider/SettlerCraft", "Date": "2016-04-06T20:34:01Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((S.getResearch()) > (-1)) g.drawImage(view.TotalView.RV.getImage(S.getResearch()), 300, 75, null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/3758/buggy-version/MYestuarySim.src.view.TotalView.java", "BodyUseAPI": ["controller.ScreenControl.getResearch()", "java.awt.Graphics.drawImage(view.TotalView.RV.getImage(S.getResearch()),int,int,<nulltype>)", "view.ResearchView.getImage(S.getResearch())"], "Fixed commit": "4197db3fa5cc262343b5345f643a03ec319581bd", "Url": "https://api.github.com/repos/jaredws/EstuarySim", "Date": "2016-05-06T23:22:48Z"},
{"Line": "=>386", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["crc.CRC.stringToBin(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((errorPattern.length) != (receivedDataTextField.getText().length())) && ((errorPattern.length) != 0)) { javax.swing.JOptionPane.showMessageDialog(this, \"Sorry! You need have proper errorPattern length\", \"Oops...\", javax.swing.JOptionPane.ERROR_MESSAGE); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/6165/buggy-version/CRC.src.crc.mainForm.java", "BodyUseAPI": [], "Fixed commit": "ac9815f58a74bd0f393823a6e1cca8986dce0771", "Url": "https://api.github.com/repos/parthpower/FCS-code-562", "Date": "2016-12-05T22:35:15Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(path.endsWith(\".xml\"))) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/8468/buggy-version/src.com.fileplugin.popup.actions.EditDialog.java", "BodyUseAPI": [], "Fixed commit": "937ed3f9d23679d8deac931def2cc9d0a2101f79", "Url": "https://api.github.com/repos/shanyaodan/androidcodegen", "Date": "2015-02-04T07:10:12Z"},
{"Line": "=>284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sy.length()) > 0) { sy.replace(((sy.length()) - 1), sy.length(), \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/3096/buggy-version/src.edu.upenn.cis350.CreateNewEvent.java", "BodyUseAPI": ["java.lang.StringBuffer.length()", "java.lang.StringBuffer.replace(int,int,java.lang.String)", "java.lang.StringBuffer.length()"], "Fixed commit": "4f586bef4229fcd6df68c959492facdb2b706301", "Url": "https://api.github.com/repos/cargo8/Wharton-Computing-Communications", "Date": "2012-05-04T02:01:15Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((gr.length()) > 0) { gr.replace(((gr.length()) - 1), gr.length(), \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/3096/buggy-version/src.edu.upenn.cis350.CreateNewEvent.java", "BodyUseAPI": ["java.lang.StringBuffer.length()", "java.lang.StringBuffer.length()", "java.lang.StringBuffer.replace(int,int,java.lang.String)"], "Fixed commit": "4f586bef4229fcd6df68c959492facdb2b706301", "Url": "https://api.github.com/repos/cargo8/Wharton-Computing-Communications", "Date": "2012-05-04T02:01:15Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(working)) output.println(\"STOP\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/6932/buggy-version/src.Server.java", "BodyUseAPI": [], "Fixed commit": "27be7c723519ce8c9a1000963cfd861cd9c8986d", "Url": "https://api.github.com/repos/rAreNex/NexTex", "Date": "2017-04-22T09:09:05Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.defaultCharset) != null) table.charset = this.defaultCharset;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/9036/buggy-version/src.main.java.com.zendesk.maxwell.schema.ddl.TableAlter.java", "BodyUseAPI": [], "Fixed commit": "61eba2cdbca394bade7677111223d373ac7fdbba", "Url": "https://api.github.com/repos/zendesk/maxwell", "Date": "2016-09-14T20:08:45Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<com.zendesk.maxwell.schema.ddl.SchemaChange>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (change instanceof com.zendesk.maxwell.schema.ddl.TableCreate) { com.zendesk.maxwell.schema.ddl.TableCreate tableCreate = ((com.zendesk.maxwell.schema.ddl.TableCreate) (change)); tableCreate.charset = unquote_literal(ctx.charset_name().getText()); }else if (change instanceof com.zendesk.maxwell.schema.ddl.TableAlter) { ((com.zendesk.maxwell.schema.ddl.TableAlter) (change)).defaultCharset = unquote_literal(ctx.charset_name().getText()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/9036/buggy-version/src.main.java.com.zendesk.maxwell.schema.ddl.MysqlParserListener.java", "BodyUseAPI": [], "Fixed commit": "61eba2cdbca394bade7677111223d373ac7fdbba", "Url": "https://api.github.com/repos/zendesk/maxwell", "Date": "2016-09-14T20:08:45Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (arguments == null) { throw new java.lang.IllegalArgumentException(\"Three arguments is expected\"); }else if ((arguments.size()) != 3) { throw new java.lang.IllegalArgumentException(((\"three argument were expected, \" + (arguments.size())) + \" were supplied\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/4745/buggy-version/core-rules.src.main.java.org.hisp.dhis.rules.functions.RuleFunctionSubString.java", "BodyUseAPI": ["java.util.List<java.lang.String>.size()", "java.util.List<java.lang.String>.size()"], "Fixed commit": "c7318ee089d89f9a85e639c40432a0f757c81324", "Url": "https://api.github.com/repos/EyeSeeTea/dhis2-android-sdk", "Date": "2017-12-22T09:16:42Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((lstartTime) > 0) && ((lendTime) > 0)) && ((lstartTime) >= (lendTime))) { com.yunqi.fengle.util.ToastUtil.showNoticeToast(this, getString(R.string.warming_time_select)); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/8852/buggy-version/FengLe.app.src.main.java.com.yunqi.fengle.ui.activity.PaymentDeclarationActivity.java", "BodyUseAPI": [], "Fixed commit": "87c1a86cb6083e759522d2e04ea248e10412e5f1", "Url": "https://api.github.com/repos/fengle-team/fengle", "Date": "2017-04-13T14:51:52Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((post.getImageUrl()) != null) { @java.lang.SuppressWarnings(\"deprecation\") android.widget.Gallery g = ((android.widget.Gallery) (findViewById(R.id.gallery))); g.setAdapter(new com.codepath.yardsale.ViewPostActivity.ImageAdapter(this, post.getImageUrl())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/4572/buggy-version/src.com.codepath.yardsale.ViewPostActivity.java", "BodyUseAPI": ["com.codepath.yardsale.model.Post.getImageUrl()", "android.widget.Gallery.setAdapter(com.codepath.yardsale.ViewPostActivity.ImageAdapter)"], "Fixed commit": "28218ed81b07c3dde94f634fd9c5959da83f8746", "Url": "https://api.github.com/repos/dingquan/codepath-group-project-yardsale", "Date": "2014-07-14T02:14:35Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.araqne.logdb.query.parser.QueryTokens.firstArg()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((registry) != null) && ((registry.getLookupHandler(handlerName)) == null)) throw new org.araqne.logdb.QueryParseException(\"invalid-lookup-name\", (-1), handlerName);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/5202/buggy-version/araqne-logdb.src.main.java.org.araqne.logdb.query.parser.LookupParser.java", "BodyUseAPI": [], "Fixed commit": "e1ddc0851a0768c8c43d81857307c4c91795f09f", "Url": "https://api.github.com/repos/araqne/logdb", "Date": "2014-07-16T16:50:51Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["me.gnat008.infiniteblocks.managers.RegionManager.getApplicableRegions(org.bukkit.Location)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((regionSet.size()) == 1) { return regionSet.iterator().next(); }else if ((regionSet.size()) > 1) { int highestPriority = regionSet.iterator().next().getPriority(); me.gnat008.infiniteblocks.regions.BlockRegion highestRegion = regionSet.iterator().next(); for (me.gnat008.infiniteblocks.regions.BlockRegion region : regionSet) { if (highestPriority < (region.getPriority())) { highestPriority = region.getPriority(); highestRegion = region; } } return highestRegion; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/1648/buggy-version/src.main.java.me.gnat008.infiniteblocks.listeners.BlockBreakEventListener.java", "BodyUseAPI": ["me.gnat008.infiniteblocks.regions.ApplicableRegionSet.size()", "me.gnat008.infiniteblocks.regions.ApplicableRegionSet.iterator()", "regionSet.iterator().next()", "me.gnat008.infiniteblocks.regions.ApplicableRegionSet.iterator()", "regionSet.iterator().next()", "me.gnat008.infiniteblocks.regions.ApplicableRegionSet.iterator()", "regionSet.iterator().next().getPriority()", "regionSet.iterator().next()"], "Fixed commit": "06116690e4de705305c8dbe79416f35ccf09a391", "Url": "https://api.github.com/repos/Gnat008/InfiniteBlocks", "Date": "2014-04-29T21:46:54Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (resumed) { getActivity().runOnUiThread(new java.lang.Runnable() { @java.lang.Override public void run() { mCallback.checkStoredCredentialsCallback(); dismiss(); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/2311/buggy-version/app.src.main.java.pt.caixamagica.aptoide.uploader.activities.SplashDialogFragment.java", "BodyUseAPI": [], "Fixed commit": "5da18c84a8692507c9ad42e3442fced57c7d8d46", "Url": "https://api.github.com/repos/Aptoide/aptoide-uploader", "Date": "2016-12-28T18:46:27Z"},
{"Line": "=>320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)", "java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((str_start < 0) || (str_end < 0)) return info;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/3192/buggy-version/src.tw.ipis.routetaiwan.pop_transit.java", "BodyUseAPI": [], "Fixed commit": "715d3263cd34804e7069213368513a88a0e101b7", "Url": "https://api.github.com/repos/ipisncku/routetaiwan", "Date": "2013-11-27T13:26:28Z"},
{"Line": "=>302", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getReportFileName()) != null) { trackingService.addTrackingToUserSession(TrackingType.reportGenerate, null, 1, messages.getLabel(\"tracking_report_generate_comment\", getReportFileName(), org.iabako.shared.tools.GenericTools.formatTime(new java.util.Date()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/130/buggy-version/src.main.java.org.iabako.server.serviceimpl.report.DataReportHelper.java", "BodyUseAPI": [], "Fixed commit": "55799f379a47697b2ee1f3c6e93025ad84bcd353", "Url": "https://api.github.com/repos/iabakoproject/iabako", "Date": "2015-11-18T08:15:22Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((hpocHospitalService.getHospitalFromHpoc(hpocId)) != null) { throw new java.lang.RuntimeException(\"HPOC already mapped\"); }else { hpocHospital.setHospitalId(hpocHospitalBean.getHospitalId()); hpocHospital.setHpocId(hpocId); hpocHospitalService.saveHpocHospital(hpocHospital); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/6053/buggy-version/src.main.java.org.cancure.cpa.controller.HpocHospitalController.java", "BodyUseAPI": ["org.cancure.cpa.persistence.entity.HpocHospital.setHpocId(java.lang.Integer)", "org.cancure.cpa.service.HpocHospitalService.saveHpocHospital(org.cancure.cpa.persistence.entity.HpocHospital)"], "Fixed commit": "b4d7eb31c52cab773105a8126d51b01014e7a3b8", "Url": "https://api.github.com/repos/cancure-foundation/cancure-process-automation", "Date": "2016-09-19T12:41:31Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["faultDetail.getAny().get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(detailObj instanceof javax.xml.bind.JAXBElement)) { try { return new javax.xml.ws.soap.SOAPFaultException(javax.xml.soap.SOAPFactory.newInstance().createFault(message, fault.getFaultcode())); } catch (javax.xml.soap.SOAPException e) { throw new org.apache.camel.RuntimeCamelException(e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/5684/buggy-version/components.camel-soap.src.main.java.org.apache.camel.dataformat.soap.Soap11DataFormatAdapter.java", "BodyUseAPI": [], "Fixed commit": "517c53ce167c0cf3b3dce4217ff98ee661a169e2", "Url": "https://api.github.com/repos/linead/camel", "Date": "2017-04-02T23:32:13Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["faultDetail.getAny().get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(detailObj instanceof javax.xml.bind.JAXBElement)) { try { return new javax.xml.ws.soap.SOAPFaultException(javax.xml.soap.SOAPFactory.newInstance().createFault(message, fault.getCode().getValue())); } catch (javax.xml.soap.SOAPException e) { throw new org.apache.camel.RuntimeCamelException(e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/5684/buggy-version/components.camel-soap.src.main.java.org.apache.camel.dataformat.soap.Soap12DataFormatAdapter.java", "BodyUseAPI": [], "Fixed commit": "517c53ce167c0cf3b3dce4217ff98ee661a169e2", "Url": "https://api.github.com/repos/linead/camel", "Date": "2017-04-02T23:32:13Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (leftIndex > 1) if (((usrInput.charAt((leftIndex - 1))) == '-') && (!(edu.illinois.cs.CommandLineCalculator.isNum(usrInput.charAt((leftIndex - 2)))))) leftIndex--;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/8077/buggy-version/CommandLineCal.src.edu.illinois.cs.CommandLineCalculator.java", "BodyUseAPI": ["java.lang.String.charAt(int)", "edu.illinois.cs.CommandLineCalculator.isNum(char)", "java.lang.String.charAt(int)"], "Fixed commit": "6d84fc82c1d2d075f68209aeab69778dc811f418", "Url": "https://api.github.com/repos/yx-z/Playground", "Date": "2016-01-25T14:50:59Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((usrInput.charAt(0)) == '-') usrInput = usrInput.replaceFirst(\"-\", \"0-\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/8077/buggy-version/CommandLineCal.src.edu.illinois.cs.CommandLineCalculator.java", "BodyUseAPI": ["java.lang.String.replaceFirst(java.lang.String,java.lang.String)"], "Fixed commit": "6d84fc82c1d2d075f68209aeab69778dc811f418", "Url": "https://api.github.com/repos/yx-z/Playground", "Date": "2016-01-25T14:50:59Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((filesToDelete.size()) > 1) { messageTextBox = new com.google.gwt.user.client.ui.HTML(org.pentaho.mantle.client.messages.Messages.getString(\"moveAllToTrashQuestionFile\")); }else { messageTextBox = new com.google.gwt.user.client.ui.HTML(org.pentaho.mantle.client.messages.Messages.getString(\"moveToTrashQuestionFile\", names)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/7670/buggy-version/user-console.source.org.pentaho.mantle.client.commands.DeleteFileCommand.java", "BodyUseAPI": [], "Fixed commit": "64cefca22f6d0bea36cafa76ce8305e95099beb7", "Url": "https://api.github.com/repos/pminutillo/pentaho-platform", "Date": "2014-05-06T21:04:51Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ports.isEmpty()) java.lang.System.out.println(\"Without ports opened\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/509/buggy-version/src.app.Utilities.java", "BodyUseAPI": [], "Fixed commit": "0300370990717f93a96af6c5435f167e0543d582", "Url": "https://api.github.com/repos/eossa/network-analyzer", "Date": "2017-05-28T22:58:28Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["be.nabu.utils.io.api.PushbackContainer<be.nabu.utils.io.api.ByteBuffer>.read(be.nabu.utils.io.api.ByteBuffer)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (read == 0) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/8361/buggy-version/src.main.java.be.nabu.libs.http.server.websockets.impl.WebSocketRequestParser.java", "BodyUseAPI": [], "Fixed commit": "b4260a5b1988a14c35c7c1d0ea17274c21ceef00", "Url": "https://api.github.com/repos/nablex/http-server-websockets", "Date": "2017-04-27T07:04:21Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["carrierDAO.findById(id).iterator()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (carrier.hasNext()) { return carrier.next(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/3588/buggy-version/shop.shipping.internal.src.main.java.org.mayocat.shop.shipping.store.jdbi.DBICarrierStore.java", "BodyUseAPI": ["java.util.Iterator<org.mayocat.shop.shipping.model.Carrier>.next()"], "Fixed commit": "f3eacd207edc9d76bbd1f19192cf6e483fb7797d", "Url": "https://api.github.com/repos/mayocat/mayocat-shop", "Date": "2013-07-31T00:18:09Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(selectedSpeaker.getPhoto()))) { if (isNetworkConnected()) { com.squareup.picasso.Picasso.with(this).load(android.net.Uri.parse(selectedSpeaker.getPhoto())).into(((android.widget.ImageView) (findViewById(R.id.speaker_image))), new com.squareup.picasso.Callback() { @java.lang.Override public void onSuccess() { progressBar.setVisibility(View.GONE); } @java.lang.Override public void onError() { progressBar.setVisibility(View.GONE); } }); }else progressBar.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/3908/buggy-version/android.app.src.main.java.org.fossasia.openevent.activities.SpeakerDetailsActivity.java", "BodyUseAPI": ["com.squareup.picasso.Picasso.with(this).load(android.net.Uri.parse(selectedSpeaker.getPhoto()))", "org.fossasia.openevent.data.Speaker.getPhoto()", "com.squareup.picasso.Picasso.with(this).load(android.net.Uri.parse(selectedSpeaker.getPhoto())).into(((android.widget.ImageView) (findViewById(R.id.speaker_image))),com.squareup.picasso.Callback)", "android.net.Uri.parse(selectedSpeaker.getPhoto())"], "Fixed commit": "35abf4b6187aff148e53de93f061bf523ea13522", "Url": "https://api.github.com/repos/harshitagupta30/open-event-android", "Date": "2017-01-20T17:56:55Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openl.rules.workspace.uw.impl.ADeploymentProject.getHistoryVersion()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (historyVersion != null) { userDProject.openVersion(historyVersion); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/1052/buggy-version/STUDIO.org.openl.rules.workspace.src.org.openl.rules.workspace.uw.impl.UserWorkspaceImpl.java", "BodyUseAPI": ["org.openl.rules.workspace.uw.impl.ADeploymentProject.openVersion(java.lang.String)"], "Fixed commit": "c4b6c8464776b18cfa26f30568e2d50299791441", "Url": "https://api.github.com/repos/openl-tablets/openl-tablets", "Date": "2016-12-09T16:43:34Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (args[3].contains(\"#\")) { java.lang.String[] langsArray = args[3].split(\"#\"); langs = new java.util.ArrayList<>(java.util.Arrays.asList(langsArray)); }else { langs = new java.util.ArrayList<>(); langs.add(args[3]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/4254/buggy-version/src.com.skedgo.tripgo.tools.android.Main.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)", "java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "40b51a72f69946eea62bbaea41b91b0b839e60ea", "Url": "https://api.github.com/repos/skedgo/IOStoAndroidStringsConverter", "Date": "2016-06-18T15:08:13Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (num >= 0) { hw.FizzBuzz.fizzBuzz(num); }else { java.lang.System.out.println(\"Negative numbers are not accepted.\"); java.lang.System.exit(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/7256/buggy-version/src.main.java.hw.Main.java", "BodyUseAPI": ["hw.FizzBuzz.fizzBuzz(int)"], "Fixed commit": "255c484455406f118550190e03d861d983dc3009", "Url": "https://api.github.com/repos/luccs271course/lab1-linda-ho", "Date": "2017-09-05T01:59:03Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.codehaus.enunciate.contract.jaxb.util.NarrowingCollectionComponentVisitor.getResult()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (narrowing != null) { com.sun.mirror.declaration.TypeDeclaration decl = ((org.codehaus.enunciate.contract.jaxb.util.DeclaredType) (base)).getDeclaration(); while (decl instanceof net.sf.jelly.apt.decorations.declaration.DecoratedTypeDeclaration) { decl = ((com.sun.mirror.declaration.TypeDeclaration) (((net.sf.jelly.apt.decorations.declaration.DecoratedTypeDeclaration) (decl)).getDelegate())); } while (narrowing instanceof net.sf.jelly.apt.decorations.type.DecoratedTypeMirror) { narrowing = ((net.sf.jelly.apt.decorations.type.DecoratedTypeMirror) (narrowing)).getDelegate(); } base = net.sf.jelly.apt.Context.getCurrentEnvironment().getTypeUtils().getDeclaredType(decl, narrowing); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/4604/buggy-version/core.src.main.java.org.codehaus.enunciate.contract.jaxb.util.JAXBUtil.java", "BodyUseAPI": [], "Fixed commit": "337d5df864b485dd41c912e3d9285aa2a943b50f", "Url": "https://api.github.com/repos/stoicflame/enunciate", "Date": "2012-08-03T02:54:48Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ir.rasen.charsoo.view.activity.business.ActivityBusinessRegister.isComesFromBusinessEditPage) { menuItemNext.setVisible(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/1713/buggy-version/app.src.main.java.ir.rasen.charsoo.view.activity.business.ActivityBusinessRegister.java", "BodyUseAPI": [], "Fixed commit": "2dae6dc77c44e324a242dd3bf81a72b15e10f30c", "Url": "https://api.github.com/repos/rasenir/charsoo", "Date": "2015-08-08T12:25:17Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.iinur.model.RssModel.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (r == null) { this.response.setStatus(HttpServletResponse.SC_NOT_FOUND); }else { this.setRss(r); com.iinur.model.TagModel tmodel = new com.iinur.model.TagModel(); this.setTags(tmodel.getRelationTags(getRss().getLink())); com.iinur.model.TwitterModel twmodel = new com.iinur.model.TwitterModel(); this.setTweets(twmodel.getWhereUrl(getRss().getLink(), com.iinur.action.ContentAction.LIMIT_TWEETS)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/8993/buggy-version/mavenweb.src.main.java.com.iinur.action.ContentAction.java", "BodyUseAPI": ["com.iinur.action.ContentAction.setRss(com.iinur.core.data.bean.Rss)"], "Fixed commit": "9e01f15a26ca592bd6c6ef553d14720d08b9a8ed", "Url": "https://api.github.com/repos/trikef/mavenweb", "Date": "2014-03-15T02:01:47Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((menu) != null) menu.findItem(R.id.deleteMenuItem).setVisible(((selectedTagsList.size()) > 0));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/7088/buggy-version/app.src.main.java.me.alpha12.ecarnet.fragments.TagsFragment.java", "BodyUseAPI": [], "Fixed commit": "a10c1a1c85d5cedfeb1c2eb78dca40bb149b551f", "Url": "https://api.github.com/repos/pfiorentino/eCarNet", "Date": "2016-01-23T20:20:20Z"},
{"Line": "=>306", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((session) != null) { try { org.eclipse.birt.report.designer.internal.ui.data.DataService.getInstance().unRegisterSession(session); } catch (org.eclipse.birt.core.exception.BirtException e) { logger.log(e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/3211/buggy-version/chart.org.eclipse.birt.chart.reportitem.ui.src.org.eclipse.birt.chart.reportitem.ui.ReportDataServiceProvider.java", "BodyUseAPI": [], "Fixed commit": "f01594261fe48f91894ab427b79920c04f13ac09", "Url": "https://api.github.com/repos/eclipse/birt", "Date": "2014-10-29T17:28:13Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((params.size()) > 0) queryRequest.addQueryParams(params);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/7506/buggy-version/src.main.java.org.restonfire.FirebaseRestQueryImpl.java", "BodyUseAPI": ["AsyncHttpClient.BoundRequestBuilder.addQueryParams(java.util.List<com.ning.http.client.Param>)"], "Fixed commit": "d8108a4d1709a6a1c45df842e3f7a709effddfbd", "Url": "https://api.github.com/repos/j-fischer/rest-on-fire", "Date": "2016-06-13T18:51:27Z"},
{"Line": "=>428", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (item.getSubPages().isEmpty()) { mPrefUtilities.setSelectedPage((-1)); onOpenPage(item); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/6374/buggy-version/app.android.app.src.main.java.augsburg.se.alltagsguide.overview.OverviewActivity.java", "BodyUseAPI": ["augsburg.se.alltagsguide.overview.OverviewActivity.onOpenPage(augsburg.se.alltagsguide.common.Page)"], "Fixed commit": "558613384dd78c673594b64c6dd3f08ab2b9aac6", "Url": "https://api.github.com/repos/Integreat/app-android", "Date": "2015-11-08T01:16:45Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["co.reyesmagos.studiappcolegios.fragments.adaptadores.CustomAdapterNotasMateria.getItem(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((nota.getNota()) != (-1)) viewHolder.txtNota.setText(java.lang.Double.toString(nota.getNota())); else viewHolder.txtNota.setText(\"N/A\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/474/buggy-version/app.src.main.java.co.reyesmagos.studiappcolegios.fragments.adaptadores.CustomAdapterNotasMateria.java", "BodyUseAPI": ["android.widget.TextView.setText(java.lang.String)", "co.reyesmagos.studiappcolegios.dominio.adaptadores.entities.Nota.getNota()", "java.lang.Double.toString(nota.getNota())"], "Fixed commit": "c2ef62faae291dc70d13f9ecf85ec608d2e990fa", "Url": "https://api.github.com/repos/ReyesMagos/StudiappColegios", "Date": "2014-12-17T19:39:32Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currentLoc == null) { java.lang.System.out.println(\"test\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/5901/buggy-version/CSS.java", "BodyUseAPI": [], "Fixed commit": "fd528bca9fed148cea4c01b5b4e08239d17bbad8", "Url": "https://api.github.com/repos/sunwooha/MinotaursMaze", "Date": "2017-11-29T01:26:00Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (listFromResponse == null) { return java.util.Collections.EMPTY_LIST; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/1646/buggy-version/app.src.main.java.pl.myosolutions.beatcoin.workflow.main.list.ResponseHelper.java", "BodyUseAPI": [], "Fixed commit": "df91bd0af53221037a38c2da9b6d1d10a3959ba9", "Url": "https://api.github.com/repos/mastahnish/BeatCoin", "Date": "2017-10-23T13:03:10Z"},
{"Line": "=>365", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/1728/buggy-version/Vertretungsplan.src.com.johan.vertretungsplan_2.VertretungFragment.java", "BodyUseAPI": [], "Fixed commit": "bd7889db42c878c15a63b1473088da992892c795", "Url": "https://api.github.com/repos/johan12345/vertretungsplan", "Date": "2014-08-19T10:16:46Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (arg1 instanceof org.eclipse.n4js.n4JS.Block) eObj = arg1.eContainer();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/2095/buggy-version/plugins.org.eclipse.n4js.xpect.src.org.eclipse.n4js.xpect.methods.FindReferencesXpectMethod.java", "BodyUseAPI": ["org.eclipse.emf.ecore.EObject.eContainer()"], "Fixed commit": "60b5d8752a9c58ed901e9155af678063bd1aaf10", "Url": "https://api.github.com/repos/eclipse/n4js", "Date": "2017-07-14T08:43:07Z"},
{"Line": "=>307", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(android.text.TextUtils.isEmpty(title))) fragment.showTaskEditHelpPopover();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/5563/buggy-version/astrid.src.com.todoroo.astrid.ui.QuickAddBar.java", "BodyUseAPI": [], "Fixed commit": "d0460079bb3575f7c41131b53a13ce20f7b1948e", "Url": "https://api.github.com/repos/sbosley/astrid", "Date": "2012-04-02T22:18:28Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((owner) != null) { owner.setPet(purpledragon); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/6004/buggy-version/src.games.stendhal.server.entity.creature.BabyDragon.java", "BodyUseAPI": [], "Fixed commit": "e1ea7f7f41d6c8853cfe4a6cf4e1282f515a60a5", "Url": "https://api.github.com/repos/arianne/stendhal", "Date": "2016-07-02T16:31:58Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.owncloud.android.ui.preview.PreviewTextFragment.getArguments()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (args.containsKey(FileDisplayActivity.EXTRA_SEARCH_QUERY)) { mSearchQuery = args.getString(FileDisplayActivity.EXTRA_SEARCH_QUERY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/5556/buggy-version/src.com.owncloud.android.ui.preview.PreviewTextFragment.java", "BodyUseAPI": ["android.os.Bundle.getString(FileDisplayActivity.EXTRA_SEARCH_QUERY)"], "Fixed commit": "1a3024a66dd67ae1f37fb8b07a58f629134bcee2", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2017-01-24T01:01:49Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (gitUploadPack.equals(action)) { return repository.accessRestriction.atLeast(AccessRestrictionType.CLONE); }else if (gitReceivePack.equals(action)) { return repository.accessRestriction.atLeast(AccessRestrictionType.PUSH); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/2725/buggy-version/src.com.gitblit.GitFilter.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "3f8cd414769b513a5b0815e0da21f19fe4b1f2d8", "Url": "https://api.github.com/repos/WenWu/gitblit", "Date": "2012-06-06T20:26:46Z"},
{"Line": "=>1038", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ret.iam) == (org.flasck.flas.typechecker.Type.WhatAmI.TUPLE)) k = ret.width(); else if (ret instanceof org.flasck.flas.parsedForm.ContractDecl) { return rewrite(cx, ((org.flasck.flas.parsedForm.ContractDecl) (ret))); }else return ret;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/2957/buggy-version/src.main.java.org.flasck.flas.rewriter.Rewriter.java", "BodyUseAPI": ["org.flasck.flas.typechecker.Type.width()"], "Fixed commit": "9ea7c3e867f3050e3375db3f6a01aadb34f35ae2", "Url": "https://api.github.com/repos/zinikiGareth/flasckfl", "Date": "2016-09-29T14:03:51Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_firstInsertion) != null) { org.zkoss.zk.ui.HtmlShadowElement.setPrevInsertion(_firstInsertion, _previousInsertion); org.zkoss.zk.ui.HtmlShadowElement.setPrevInsertion(_nextInsertion, _lastInsertion); }else { org.zkoss.zk.ui.HtmlShadowElement.setPrevInsertion(_nextInsertion, _previousInsertion); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/4359/buggy-version/zk.src.org.zkoss.zk.ui.HtmlShadowElement.java", "BodyUseAPI": [], "Fixed commit": "b267b6bc8bc18593caa451b2402990b0bd7630f5", "Url": "https://api.github.com/repos/zkoss/zk", "Date": "2014-12-12T06:02:26Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (from < 0) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/5212/buggy-version/plugin.sqlsh.src.main.java.com.twosigma.beaker.sqlsh.utils.BeakerParser.java", "BodyUseAPI": [], "Fixed commit": "7140c3aab7308b223a15d56c11017484b6c5d9e5", "Url": "https://api.github.com/repos/twosigma/beakerx", "Date": "2015-09-25T06:34:28Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((actionSet.length) == 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/7694/buggy-version/FightingGameAI.java", "BodyUseAPI": [], "Fixed commit": "79fa9a42816053edd8f78129642f524f8ac79567", "Url": "https://api.github.com/repos/MartinWieczorek/FightingICE-AI", "Date": "2016-06-22T14:23:56Z"},
{"Line": "=>298", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((reducedActionSet.length) == 0) return Action.STAND_GUARD_RECOV.ordinal();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/7694/buggy-version/FightingGameAI.java", "BodyUseAPI": [], "Fixed commit": "79fa9a42816053edd8f78129642f524f8ac79567", "Url": "https://api.github.com/repos/MartinWieczorek/FightingICE-AI", "Date": "2016-06-22T14:23:56Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.MenuItem.getItemId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (id == (R.id.nav_list)) { android.content.Intent i = new android.content.Intent(this, dzikiekuny.com.hekaton.EventListActivity.class); startActivity(i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/6158/buggy-version/app.src.main.java.dzikiekuny.com.hekaton.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "187e265758ba18e31a49b19027e5407d98aba985", "Url": "https://api.github.com/repos/ikurek/hEKAton", "Date": "2017-06-03T01:30:12Z"},
{"Line": "=>326", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lexer.token()) == (Token.UPDATE)) { com.alibaba.druid.sql.dialect.postgresql.ast.stmt.PGUpdateStatement stmt = ((com.alibaba.druid.sql.dialect.postgresql.ast.stmt.PGUpdateStatement) (this.parseUpdateStatement())); stmt.setWith(with); return stmt; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/8162/buggy-version/src.main.java.com.alibaba.druid.sql.dialect.postgresql.parser.PGSQLStatementParser.java", "BodyUseAPI": [], "Fixed commit": "6c8169b1fb0cfc0d1701ebdf2f8d5ec68076b996", "Url": "https://api.github.com/repos/qxo/druid", "Date": "2017-05-10T22:44:39Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Scenemanager.PlayScreen.pausedstate) AT.start();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/4319/buggy-version/src.Scenemanager.PlayScreen.java", "BodyUseAPI": [], "Fixed commit": "52614fbf892d53c9628f038ac6a0bbf151874db8", "Url": "https://api.github.com/repos/schwanabc/progject", "Date": "2017-11-18T18:17:11Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.deuteriumlabs.dendrite.model.User.getMyUser()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (myUser != null) return myUser.getId(); else return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/7783/buggy-version/Dendrite.src.com.deuteriumlabs.dendrite.view.View.java", "BodyUseAPI": ["com.deuteriumlabs.dendrite.model.User.getId()"], "Fixed commit": "b09f922b0b0e05bb1c75650a7e98617e077f30f0", "Url": "https://api.github.com/repos/MattHeard/Dendrite", "Date": "2014-02-22T02:35:17Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.lastIndexOf(char)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (lastIndexOfDot != (-1)) { type = name.substring(lastIndexOfDot); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/7520/buggy-version/JazminServer.src.jazmin.driver.file.FileServerDriver.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "c048dce4d008e1b9f27346309863c52d22ab4237", "Url": "https://api.github.com/repos/guooscar/JazminServer", "Date": "2016-04-10T07:42:38Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((instructionFetchStage) == null) return new io.vertx.core.json.JsonArray();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/5429/buggy-version/app.src.main.java.dlsu.advcarc.cpu.CPU.java", "BodyUseAPI": [], "Fixed commit": "9ecc1192f6d3389bb2cb53ec8c184ef255fea830", "Url": "https://api.github.com/repos/darrensapalo/mini-mips", "Date": "2015-11-21T20:28:31Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event.getActionMasked()) == (android.view.MotionEvent.ACTION_DOWN)) { android.view.ViewParent p = getParent(); if (p != null) p.requestDisallowInterceptTouchEvent(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/3477/buggy-version/src.com.askcs.android.affectbutton.AffectButton.java", "BodyUseAPI": [], "Fixed commit": "26b7d427de5f5e2261fb2ae81e690a5e144e6371", "Url": "https://api.github.com/repos/askcs/android-ask-library", "Date": "2013-04-04T11:51:19Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(deletedConversation.isRead())) { notifier.updateUnreadNotification(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/2584/buggy-version/app.src.com.amlcurran.messages.UpdateNotificationListener.java", "BodyUseAPI": [], "Fixed commit": "78786ab3e4b85bd9ef319b8899856d820e610ba6", "Url": "https://api.github.com/repos/amlcurran/Messages", "Date": "2015-01-09T19:22:06Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nameRequired) { }else { showProgress(true); mAuthTask = new bluefirelabs.mojo.main.login.Login.UserLoginTask(email, password); mAuthTask.execute(((java.lang.Void) (null))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/3926/buggy-version/app.src.main.java.bluefirelabs.mojo.main.login.Login.java", "BodyUseAPI": [], "Fixed commit": "7647fd9085beadc51cc02c731cbd5fb40048271f", "Url": "https://api.github.com/repos/rezarajan/Mojo", "Date": "2017-08-02T11:41:42Z"},
{"Line": "=>389", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((files.size()) == 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/7905/buggy-version/components.formats-common.src.loci.common.Location.java", "BodyUseAPI": [], "Fixed commit": "7625be2ce20ff433d0da75a7c99d2677f2b8734d", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2014-04-18T19:37:55Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (indexes.containsKey(iName.toLowerCase())) throw new com.orientechnologies.orient.core.index.OIndexException(((\"Index with name \" + (iName.toLowerCase())) + \" already exists.\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/5353/buggy-version/core.src.main.java.com.orientechnologies.orient.core.index.OIndexManagerShared.java", "BodyUseAPI": ["java.lang.String.toLowerCase()"], "Fixed commit": "1481d72b1fa6955955adbf425ba3656bd93fc843", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2014-03-18T13:30:02Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (shouldInclude) result.add(resolveResult(context, element));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/6030/buggy-version/cql-engine.src.main.java.org.opencds.cqf.cql.elm.execution.QueryEvaluator.java", "BodyUseAPI": [], "Fixed commit": "e811d9f9cd8ca48e8f9e7c561c50c55b6c83727d", "Url": "https://api.github.com/repos/DBCG/cql_engine", "Date": "2016-12-06T23:18:06Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.tutorialButton) != null) { this.tutorialButton.remove(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/5059/buggy-version/core.src.com.apptogo.runalien.screen.GameScreen.java", "BodyUseAPI": [], "Fixed commit": "2fa878a4f87a95b4bd659b31f7a19f3bc7d3410b", "Url": "https://api.github.com/repos/mantkowicz/runalien", "Date": "2016-04-02T21:49:40Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((profile.getType()) == (com.lynxspa.androidadvanced201617.model.SurveyType.Wifi)) && ((profile.getWifis()) != null)) for (com.lynxspa.androidadvanced201617.model.Wifi wifi : profile.getWifis()) { wifi.setProfileId(id); saveWifi(wifi); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/1409/buggy-version/app.src.main.java.com.lynxspa.androidadvanced201617.helpers.db.DBHelper.java", "BodyUseAPI": ["com.lynxspa.androidadvanced201617.model.Profile.getWifis()"], "Fixed commit": "fc7786d1e71620985da02a8559fb646df2fac8e3", "Url": "https://api.github.com/repos/nbarresi/AndroidAdvanced201617", "Date": "2017-02-20T21:15:58Z"},
{"Line": "=>285", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bson.Document.get(java.lang.String,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((iNameList != null) && ((iNameList.size()) != 0)) { for (java.lang.String iName : iNameList) { bw.write(java.lang.String.format(\"%s,%s\", iName, oPopularOlQuantity)); bw.newLine(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/8907/buggy-version/src.main.java.XactProcessor.java", "BodyUseAPI": [], "Fixed commit": "b6fc7499c420f32b7ebed4cced4ccbc6707e1365", "Url": "https://api.github.com/repos/DdMad/xact-mongodb-impl", "Date": "2016-11-10T10:54:28Z"},
{"Line": "=>2030", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getRGBChannelCount()) == 1) || ((getRGBChannelCount()) == (getSizeC()))) { if (((getSizeC()) > 1) && ((getSizeT()) > 1)) { ms.dimensionOrder += \"C\"; } for (java.lang.Long nBytes : bytes) { java.lang.String axis = bytesPerAxis.get(nBytes); if ((ms.dimensionOrder.indexOf(axis)) == (-1)) { ms.dimensionOrder += axis; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/6333/buggy-version/components.formats-gpl.src.loci.formats.in.LIFReader.java", "BodyUseAPI": [], "Fixed commit": "0d5a988857580acb10eb296c93066ac4ceefb6c8", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2016-04-07T03:01:18Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((predecessor) != null) { if (e.getSource().equals(predecessor.getAddress())) { java.lang.System.out.println(((\"(\" + (self.getId())) + \") setting predecessor to null\")); predecessor = null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/8092/buggy-version/src.overlay.Node.java", "BodyUseAPI": [], "Fixed commit": "343f6bfb716d1233bc58adc9579ba6882069cbfb", "Url": "https://api.github.com/repos/sebastiant/jchord", "Date": "2013-01-30T13:58:58Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((idPart.length) > 1) { if (idPart[1].contains(\".\")) { java.lang.String[] id = idPart[1].split(\"[.]\"); return id[1]; }else { return idPart[1]; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/1545/buggy-version/src.main.java.app.service.WebCrawler.java", "BodyUseAPI": ["java.lang.String.contains(java.lang.String)", "java.lang.String.split(java.lang.String)"], "Fixed commit": "0731f1898aa6d5424b2c92441c4276dc21c3ae61", "Url": "https://api.github.com/repos/taateli/CodeHeroes", "Date": "2017-05-04T19:51:45Z"},
{"Line": "=>311", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ret.length()) == 0) { RESET : { for (java.lang.String[] e : rpc.Helper.J2CPPSTORAGE) { if (e[0].equals(param.type().qualifiedTypeName())) { ret = e[1]; break RESET; } } ret = param.type().qualifiedTypeName(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/1449/buggy-version/docGEN.src.rpc.Helper.java", "BodyUseAPI": [], "Fixed commit": "76fa1a49cf40d06153ec70078a72f23ba9906cfb", "Url": "https://api.github.com/repos/feefk/rpc-gen", "Date": "2013-02-01T07:10:24Z"},
{"Line": "=>441", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (boardCategories != null) { for (int i = 0; i < (boardCategories.length); i++) { if ((boardCategories[i]) != null) { chan.content.model.Board[] boards = boardCategories[i].getBoards(); if ((boards == null) || ((boards.length) == 0)) boardCategories[i] = null; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/9096/buggy-version/src-api.chan.content.ChanPerformer.java", "BodyUseAPI": [], "Fixed commit": "bdc4a6f334d5d05a0063fe81ed45c7816c56146c", "Url": "https://api.github.com/repos/Mishiranu/Dashchan", "Date": "2016-09-13T14:27:18Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.elex.bigdata.llda.mahout.mapreduce.est.MultiLabelVectorWritable.getLabels()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((labels.length) == 0) labels = topics;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/8660/buggy-version/src.main.java.com.elex.bigdata.llda.mahout.mapreduce.est.LLDAMapper.java", "BodyUseAPI": [], "Fixed commit": "dc4412db1a49692894a80843c16f0a21fb8e9ac1", "Url": "https://api.github.com/repos/elex-bigdata/lldaMahout", "Date": "2014-08-20T09:54:24Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.bukkit.Bukkit.getServer().getPluginManager().getPlugin(\"WorldEdit\")) != null) this.weBridge = de.st_ddt.crazygeo.worldedit.WorldEditBridge.getWorldEditBridge();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/5726/buggy-version/CrazyGeo.src.de.st_ddt.crazygeo.CrazyGeo.java", "BodyUseAPI": [], "Fixed commit": "f71ac9cb0211348f2a196944e308120722526f39", "Url": "https://api.github.com/repos/ST-DDT/Crazy", "Date": "2012-06-08T10:37:20Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((android.net.Uri.parse(url)) != null) { mDefaultTrafficStatsTag = (android.text.TextUtils.isEmpty(url)) ? 0 : android.net.Uri.parse(url).getHost().hashCode(); }else { mDefaultTrafficStatsTag = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/1044/buggy-version/src.com.android.volley.Request.java", "BodyUseAPI": [], "Fixed commit": "d6773938f014273b22c8090952660df0e925da29", "Url": "https://api.github.com/repos/ductoanle/volley-network", "Date": "2013-11-27T17:36:29Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (key.equalsIgnoreCase(\"sort-apps\")) { final fr.neamar.kiss.dataprovider.AppProvider provider = fr.neamar.kiss.KissApplication.getDataHandler(this).getAppProvider(); if (provider != null) { provider.reload(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/7973/buggy-version/app.src.main.java.fr.neamar.kiss.SettingsActivity.java", "BodyUseAPI": [], "Fixed commit": "9bd3fa0cc22860f1e8852abec1dfa64deb953dfc", "Url": "https://api.github.com/repos/Neamar/KISS", "Date": "2016-04-14T05:04:04Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isValidKey(key)) { previousValue = localWorkflowVariables.put(key, value); }else { throw new java.lang.IllegalArgumentException(((\"Key : \" + key) + \" is not defined as a variable name.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/2265/buggy-version/orchestration.src.main.java.org.tinyesb.orchestration.ExtensibleWorkflowVariables.java", "BodyUseAPI": ["java.util.Map<K, V>.put(K,V)"], "Fixed commit": "455fb97fdf11e0d2d7fb7c4d33c4341ea5b06e3c", "Url": "https://api.github.com/repos/neranjana/tinyesb", "Date": "2017-05-29T00:25:17Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.vtst.eclipse.easy.ui.properties.pages.EasyResourcePropertyPage.getElement()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (element instanceof org.eclipse.core.resources.IResource) return ((org.eclipse.core.resources.IResource) (element));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/8110/buggy-version/src.eclipse.net.vtst.eclipse.easy.ui.src.net.vtst.eclipse.easy.ui.properties.pages.EasyResourcePropertyPage.java", "BodyUseAPI": [], "Fixed commit": "b28b731c4c39f3acd977df57895454bfa5ea42b4", "Url": "https://api.github.com/repos/vtst/ow", "Date": "2012-05-25T15:40:55Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.core.runtime.IAdaptable.getAdapter(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (resource instanceof org.eclipse.core.resources.IResource) return ((org.eclipse.core.resources.IResource) (resource));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/8110/buggy-version/src.eclipse.net.vtst.eclipse.easy.ui.src.net.vtst.eclipse.easy.ui.properties.pages.EasyResourcePropertyPage.java", "BodyUseAPI": [], "Fixed commit": "b28b731c4c39f3acd977df57895454bfa5ea42b4", "Url": "https://api.github.com/repos/vtst/ow", "Date": "2012-05-25T15:40:55Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.vtst.eclipse.easy.ui.properties.pages.EasyResourcePropertyPage.getResource()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (resource == null) return new net.vtst.eclipse.easy.ui.properties.stores.NullStore();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/8110/buggy-version/src.eclipse.net.vtst.eclipse.easy.ui.src.net.vtst.eclipse.easy.ui.properties.pages.EasyResourcePropertyPage.java", "BodyUseAPI": [], "Fixed commit": "b28b731c4c39f3acd977df57895454bfa5ea42b4", "Url": "https://api.github.com/repos/vtst/ow", "Date": "2012-05-25T15:40:55Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.bridgedb.rdf.RdfConfig.baseURI) == null) { org.bridgedb.rdf.RdfConfig.baseURI = org.bridgedb.rdf.RdfConfig.getProperties().getProperty(org.bridgedb.rdf.RdfConfig.BASE_URI_PROPERTY).trim(); if (!(org.bridgedb.rdf.RdfConfig.baseURI.endsWith(\"/\"))) { org.bridgedb.rdf.RdfConfig.baseURI = (org.bridgedb.rdf.RdfConfig.baseURI) + \"/\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/6219/buggy-version/org.bridgedb.utils.src.org.bridgedb.rdf.RdfConfig.java", "BodyUseAPI": [], "Fixed commit": "a2e5b5538ea19133e750ce0450566acbe27c084e", "Url": "https://api.github.com/repos/openphacts/BridgeDb", "Date": "2012-11-09T13:27:53Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((type) instanceof java.lang.reflect.GenericArrayType) { return ((java.lang.reflect.GenericArrayType) (type)).getTypeName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/4307/buggy-version/model.src.com.redhat.ceylon.model.loader.impl.reflect.mirror.ReflectionType.java", "BodyUseAPI": [], "Fixed commit": "c81aebf68ff671ffb423664d1b0b445f1318acb2", "Url": "https://api.github.com/repos/eclipse/ceylon", "Date": "2016-10-20T10:56:22Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((driveTrain) != null) { setDefaultCommand(this.driveTrain); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/2170/buggy-version/Code2017.src.org.usfirst.frc253.Code2017.subsystems.Drivetrain.java", "BodyUseAPI": [], "Fixed commit": "1ab93b52156fe232df224b7d91c270f60ea263e9", "Url": "https://api.github.com/repos/MillsRoboticsTeam253/Code2017butNewer", "Date": "2017-11-01T01:48:42Z"},
{"Line": "=>382", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["github.daneren2005.dsub.service.DownloadService.getCurrentPlaying()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (downloadFile == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/4143/buggy-version/src.github.daneren2005.dsub.fragments.NowPlayingFragment.java", "BodyUseAPI": [], "Fixed commit": "5dfa26f058dd7d11dd5a1ff0dbf929fa1042dfeb", "Url": "https://api.github.com/repos/daneren2005/Subsonic", "Date": "2014-09-06T02:18:03Z"},
{"Line": "=>422", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["github.daneren2005.dsub.service.DownloadService.getCurrentPlaying()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (downloadFile == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/4143/buggy-version/src.github.daneren2005.dsub.fragments.NowPlayingFragment.java", "BodyUseAPI": [], "Fixed commit": "5dfa26f058dd7d11dd5a1ff0dbf929fa1042dfeb", "Url": "https://api.github.com/repos/daneren2005/Subsonic", "Date": "2014-09-06T02:18:03Z"},
{"Line": "=>417", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["github.daneren2005.dsub.fragments.NowPlayingFragment.14.getDownloadService()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (downloadService == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/4143/buggy-version/src.github.daneren2005.dsub.fragments.NowPlayingFragment.java", "BodyUseAPI": [], "Fixed commit": "5dfa26f058dd7d11dd5a1ff0dbf929fa1042dfeb", "Url": "https://api.github.com/repos/daneren2005/Subsonic", "Date": "2014-09-06T02:18:03Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (overwriteResult) { number1 = \"-\"; overwriteResult = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/7416/buggy-version/src.java_calculator.Controller.java", "BodyUseAPI": [], "Fixed commit": "54b3c641f09af2b710d7c50db99dfc9399ab76b4", "Url": "https://api.github.com/repos/danielEros/java_calculator", "Date": "2017-08-10T12:15:40Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["teammates.ui.controller.InstructorCourseInstructorEditSaveAction.getRequestParamValue(Const.ParamsNames.INSTRUCTOR_ID)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (instructorId == null) { instructorToEdit = logic.getInstructorForEmail(courseId, instructorEmail); }else { instructorToEdit = logic.getInstructorForGoogleId(courseId, instructorId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/4401/buggy-version/src.main.java.teammates.ui.controller.InstructorCourseInstructorEditSaveAction.java", "BodyUseAPI": ["teammates.ui.controller.InstructorCourseInstructorEditSaveAction.getInstructorForGoogleId(java.lang.String,java.lang.String)"], "Fixed commit": "5f3750ec74cc07ea78cc0241897a49eb3469cbc2", "Url": "https://api.github.com/repos/bjrodrig/teammates", "Date": "2017-12-20T01:08:37Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((account.getType()) != null) { node.setAttributeNS(null, \"type\", account.getType().name()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/1122/buggy-version/src.main.java.net.nikr.eve.jeveasset.io.local.ProfileWriter.java", "BodyUseAPI": ["account.getType().name()", "org.w3c.dom.Element.setAttributeNS(<nulltype>,java.lang.String,account.getType().name())", "net.nikr.eve.jeveasset.data.MyAccount.getType()"], "Fixed commit": "c3b37c47b42f6b968165ae442cee4553fc450909", "Url": "https://api.github.com/repos/GoldenGnu/jeveassets", "Date": "2015-09-22T10:45:23Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((value.getURL()) != null) key.set(value.getURL());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/4424/buggy-version/src.main.java.org.commoncrawl.hadoop.mapred.ArcRecordReaderCC.java", "BodyUseAPI": ["org.apache.hadoop.io.Text.set(value.getURL())", "org.commoncrawl.hadoop.mapred.ArcRecordCC.getURL()"], "Fixed commit": "3ed098a35649ebb90cb36a2e22731c4de9dfdcb6", "Url": "https://api.github.com/repos/DigitalPebble/behemoth-commoncrawl", "Date": "2012-08-06T08:24:04Z"},
{"Line": "=>539", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.commoncrawl.hadoop.mapred.ArcRecordCC._searchForCRLFCRLF(byte[])"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (end == (-1)) { org.commoncrawl.hadoop.mapred.ArcRecordCC.LOG.error(\"Unable to parse HTTP response: End of HTTP headers not found\"); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/4424/buggy-version/src.main.java.org.commoncrawl.hadoop.mapred.ArcRecordCC.java", "BodyUseAPI": [], "Fixed commit": "3ed098a35649ebb90cb36a2e22731c4de9dfdcb6", "Url": "https://api.github.com/repos/DigitalPebble/behemoth-commoncrawl", "Date": "2012-08-06T08:24:04Z"},
{"Line": "=>552", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this._httpResponse) == null) { org.commoncrawl.hadoop.mapred.ArcRecordCC.LOG.error(\"Unable to parse HTTP response\"); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/4424/buggy-version/src.main.java.org.commoncrawl.hadoop.mapred.ArcRecordCC.java", "BodyUseAPI": [], "Fixed commit": "3ed098a35649ebb90cb36a2e22731c4de9dfdcb6", "Url": "https://api.github.com/repos/DigitalPebble/behemoth-commoncrawl", "Date": "2012-08-06T08:24:04Z"},
{"Line": "=>506", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(entityIDs.containsKey(profile))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/3962/buggy-version/src.main.java.in.twizmwaz.cardinal.tabList.TabList.java", "BodyUseAPI": [], "Fixed commit": "55ec981c60e9cdab303719d59e4f5a64090abe9c", "Url": "https://api.github.com/repos/Pugzy/CardinalPGM", "Date": "2016-02-24T12:46:21Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (selectedElement != null) { org.strategoxt.imp.runtime.services.outline.SpoofaxOutlineUtil.selectCorrespondingText(selectedElement, parseController); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/499/buggy-version/org.strategoxt.imp.runtime.src.org.strategoxt.imp.runtime.services.outline.SpoofaxOutlinePopup.java", "BodyUseAPI": ["org.strategoxt.imp.runtime.services.outline.SpoofaxOutlineUtil.selectCorrespondingText(java.lang.Object,org.eclipse.imp.parser.IParseController)"], "Fixed commit": "0bbc046471ade82662b85a8db9af690f841af585", "Url": "https://api.github.com/repos/metaborg/spoofax", "Date": "2013-08-09T00:27:00Z"},
{"Line": "=>332", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!status) { java.util.Collection<java.lang.Comparable> peptideIds = controller.getPeptideIds(identId); for (java.lang.Comparable peptideId : peptideIds) { org.bushe.swing.event.EventService eventBus = org.bushe.swing.event.ContainerEventServiceFinder.getEventService(this); eventBus.publish(new uk.ac.ebi.pride.toolsuite.gui.event.QuantSelectionEvent(pepTable, identId, referenceSampleIndex, QuantSelectionEvent.Type.PEPTIDE, false, controller, peptideId)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/4360/buggy-version/src.main.java.uk.ac.ebi.pride.toolsuite.gui.component.quant.QuantPeptideSelectionPane.java", "BodyUseAPI": [], "Fixed commit": "06467940e6744e3be17cc8eb0e5b51ac8bac5733", "Url": "https://api.github.com/repos/PRIDE-Toolsuite/pride-inspector", "Date": "2014-10-01T10:50:02Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((activities.RestaurantData.Instance().tables.get(index).getOrders()) != null) { android.widget.ArrayAdapter<edu.oswego.csc380_2.Table> adapter = new android.widget.ArrayAdapter(this, android.R.layout.simple_list_item_1, activities.RestaurantData.Instance().tables.get(index).getOrders()); if (!(adapter.isEmpty())) { listView.setAdapter(adapter); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/876/buggy-version/app.src.main.java.activities.ViewTableOrders.java", "BodyUseAPI": ["activities.RestaurantData.Instance().tables.get(index).getOrders()", "activities.RestaurantData.Instance().tables.get(int)"], "Fixed commit": "7404286c5af4bd80a866c51969113d3cfee49a63", "Url": "https://api.github.com/repos/iramazan/CSC380-1", "Date": "2017-05-09T15:13:21Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((queryResults.getFacetFields()) != null) { for (org.apache.solr.client.solrj.response.FacetField field : queryResults.getFacetFields()) { val.add(field.getName()); if ((field.getValues()) != null) { for (org.apache.solr.client.solrj.response.FacetField.Count count : field.getValues()) { val.add(((count.getName()) + (count.getCount()))); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/5747/buggy-version/dspace.modules.xmlui.src.main.java.org.dspace.app.xmlui.aspect.discovery.AbstractFiltersTransformer.java", "BodyUseAPI": ["org.apache.solr.client.solrj.response.QueryResponse.getFacetFields()"], "Fixed commit": "33abd361644b2d9444e2ebb9b33135e72f127bd0", "Url": "https://api.github.com/repos/datadryad/dryad-repo", "Date": "2013-01-10T19:02:42Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["loc.getBlock().getState()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(state instanceof org.bukkit.block.Sign)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/8539/buggy-version/src.com.afforess.minecartmaniachestcontrol.itemcontainer.ItemCollectionManager.java", "BodyUseAPI": [], "Fixed commit": "72945927dc1c5d5388f9e368daba65b6759059cf", "Url": "https://api.github.com/repos/N3X15/MinecartMania-Chest-Control", "Date": "2011-07-15T22:43:09Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (keyPressed) ship.getSpatial().getControl(de.kritzelbit.orebit.controls.FlightControl.class).right = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/2958/buggy-version/src.de.kritzelbit.orebit.states.IngameState.java", "BodyUseAPI": [], "Fixed commit": "a0dfdd69d0acbc33a7f3bed0aded4c86718e35ef", "Url": "https://api.github.com/repos/bkis/OreBit", "Date": "2015-05-10T16:04:43Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (keyPressed) ship.getSpatial().getControl(de.kritzelbit.orebit.controls.FlightControl.class).left = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/2958/buggy-version/src.de.kritzelbit.orebit.states.IngameState.java", "BodyUseAPI": [], "Fixed commit": "a0dfdd69d0acbc33a7f3bed0aded4c86718e35ef", "Url": "https://api.github.com/repos/bkis/OreBit", "Date": "2015-05-10T16:04:43Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getContext().getClassLoader()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (cl != null) { sessionFactory.setClassLoader(cl); org.eclipse.jetty.nosql.kvs.KeyValueStoreSessionManager.log.info(\"use context class loader for session deserializer.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/6208/buggy-version/jetty-nosql-kvs.src.main.java.org.eclipse.jetty.nosql.kvs.KeyValueStoreSessionManager.java", "BodyUseAPI": ["org.eclipse.jetty.nosql.kvs.session.AbstractSessionFactory.setClassLoader(java.lang.ClassLoader)"], "Fixed commit": "9472c0f9b404055e1ffbc4c23c214601158bace4", "Url": "https://api.github.com/repos/yyuu/jetty-nosql-memcached", "Date": "2015-07-13T14:42:25Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(alg.equals(\"\"))) resp += \":\" + alg;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/6006/buggy-version/Taller2Infracomp.src.cliente.Cliente.java", "BodyUseAPI": [], "Fixed commit": "b2465b4f41b2dc11a22107874a40e49665239c10", "Url": "https://api.github.com/repos/jmalovera10/Taller2Infracomp", "Date": "2017-03-27T16:05:27Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (inCliente.hasNext()) resp = inCliente.nextLine();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/6006/buggy-version/Taller2Infracomp.src.cliente.Cliente.java", "BodyUseAPI": ["java.util.Scanner.nextLine()"], "Fixed commit": "b2465b4f41b2dc11a22107874a40e49665239c10", "Url": "https://api.github.com/repos/jmalovera10/Taller2Infracomp", "Date": "2017-03-27T16:05:27Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.PushbackReader.read()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (ch == '\"') { objects.add(parseStringValue(in)); }else { in.unread(ch); com.googlecode.goclipse.debug.gdb.GdbProperties props = new com.googlecode.goclipse.debug.gdb.GdbProperties(); props.parseKeyValue(in); objects.add(props); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/8091/buggy-version/com.googlecode.goclipse.debug.src.com.googlecode.goclipse.debug.gdb.GdbProperties.java", "BodyUseAPI": ["java.io.PushbackReader.unread(int)"], "Fixed commit": "10213369bc39bc632fc483f2a7c7de7c9bc05199", "Url": "https://api.github.com/repos/sesteel/goclipse", "Date": "2014-01-22T08:40:40Z"},
{"Line": "=>1016", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((modNode.getData().size()) >= 2) { name = modNode.getData().get(0); type = modNode.getData().get(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/2500/buggy-version/src.main.java.data.DatabaseController.java", "BodyUseAPI": ["modNode.getData().get(int)", "pathfinding.ConcreteNode.getData()", "pathfinding.ConcreteNode.getData()", "modNode.getData().get(int)"], "Fixed commit": "4d7a2b3359aa7b6292dbf4b07c91ce0b905d8b05", "Url": "https://api.github.com/repos/CS3733-TeamAlpha/Project", "Date": "2017-02-08T01:15:24Z"},
{"Line": "=>699", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((newNode.getData().size()) >= 2) { name = newNode.getData().get(0); type = newNode.getData().get(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/2500/buggy-version/src.main.java.data.DatabaseController.java", "BodyUseAPI": ["newNode.getData().get(int)", "pathfinding.ConcreteNode.getData()", "pathfinding.ConcreteNode.getData()", "newNode.getData().get(int)"], "Fixed commit": "4d7a2b3359aa7b6292dbf4b07c91ce0b905d8b05", "Url": "https://api.github.com/repos/CS3733-TeamAlpha/Project", "Date": "2017-02-08T01:15:24Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.bonitasoft.console.common.server.login.servlet.LoginServlet.LOGGER.isLoggable(java.util.logging.Level.FINEST)) { org.bonitasoft.console.common.server.login.servlet.LoginServlet.LOGGER.log(java.util.logging.Level.FINEST, (\"query string : \" + (dropPassword(req.getQueryString())))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/3750/buggy-version/server.src.main.java.org.bonitasoft.console.common.server.login.servlet.LoginServlet.java", "BodyUseAPI": ["java.util.logging.Logger.log(java.util.logging.Level,(\"query string : \" + (dropPassword(req.getQueryString()))))"], "Fixed commit": "3f3c4cd9578c1e689d2c9372dcd9761f15682cef", "Url": "https://api.github.com/repos/bonitasoft/bonita-web", "Date": "2014-12-08T13:11:35Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(fullFilePath.getPath().endsWith(seperator))) { fullFilePath = new java.io.File(fullFilePath, seperator); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/1011/buggy-version/fitgoodies.src.main.java.de.cologneintelligence.fitgoodies.file.builder.FixtureFileListBuilder.java", "BodyUseAPI": [], "Fixed commit": "c64ae47056e4d06049f9b29253d57e96b21ba598", "Url": "https://api.github.com/repos/davidgoering/FitGoodies", "Date": "2013-08-30T12:25:05Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.cologneintelligence.fitgoodies.file.builder.FixtureFileListBuilder.createDirectoryToFile(java.lang.String[],int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(fullFilePath.getPath().endsWith(seperator))) { fullFilePath = new java.io.File(fullFilePath, seperator); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/1011/buggy-version/fitgoodies.src.main.java.de.cologneintelligence.fitgoodies.file.builder.FixtureFileListBuilder.java", "BodyUseAPI": [], "Fixed commit": "c64ae47056e4d06049f9b29253d57e96b21ba598", "Url": "https://api.github.com/repos/davidgoering/FitGoodies", "Date": "2013-08-30T12:25:05Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.cologneintelligence.fitgoodies.file.builder.FixtureFileListBuilder.createDirectoryToFile(java.lang.String[],int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(fullFilePath.getPath().endsWith(seperator))) { fullFilePath = new java.io.File(fullFilePath, seperator); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/1011/buggy-version/fitgoodies.src.main.java.de.cologneintelligence.fitgoodies.file.builder.FixtureFileListBuilder.java", "BodyUseAPI": [], "Fixed commit": "c64ae47056e4d06049f9b29253d57e96b21ba598", "Url": "https://api.github.com/repos/davidgoering/FitGoodies", "Date": "2013-08-30T12:25:05Z"},
{"Line": "=>2242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.lastIndexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((last - first) < 0) { last = first + (key.substring(first).indexOf(' ')); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/516/buggy-version/components.formats-gpl.src.loci.formats.in.NativeND2Reader.java", "BodyUseAPI": ["java.lang.String.indexOf(char)", "java.lang.String.substring(int)"], "Fixed commit": "efadfe24b15d100aff78ca482ac12e350f545bbd", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2016-03-21T03:01:56Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (kokyakuId == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/3606/buggy-version/src.main.java.com.showka.service.crud.u01.NyukinKakeInfoCrudServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "ddbea3498685fb6076490212ca010ce0383410a9", "Url": "https://api.github.com/repos/ShowKa/HanbaiKanri", "Date": "2017-09-11T09:10:55Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((buffer[0]) == 255) && ((buffer[1]) == 254)) return \"UTF-16LE\"; else if (((((buffer[0]) == 0) && ((buffer[1]) == 0)) && ((buffer[2]) == 254)) && ((buffer[3]) == 255)) return \"UTF_32\"; else if ((((buffer[0]) == 43) && ((buffer[1]) == 47)) && ((buffer[2]) == 118)) return \"US-ASCII\"; else return \"ISO-8859-1\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/3704/buggy-version/app.src.main.java.com.subscreen.SubtitlePlayer.java", "BodyUseAPI": [], "Fixed commit": "1c00b8653fb1030a7a17f96806aa6e404c2cc87d", "Url": "https://api.github.com/repos/smitnich/Subscreen", "Date": "2015-04-01T23:29:41Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (parameters != null) { org.springframework.beans.MutablePropertyValues pvs = new org.springframework.beans.MutablePropertyValues(parameters); bw.setPropertyValues(pvs, true, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/2587/buggy-version/src.main.java.org.walkmod.conf.entities.impl.ConfigurationImpl.java", "BodyUseAPI": [], "Fixed commit": "6c83cf400d044c6e227e81ede7671d34078b8088", "Url": "https://api.github.com/repos/rpau/walkmod-core", "Date": "2014-06-22T10:16:41Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type.equals(Message.GAME_OVER)) { this.interrupt(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/705/buggy-version/src.SessionThread.java", "BodyUseAPI": [], "Fixed commit": "d497fb6dffa31ceaae0c5fd7c3217821fcb2bdcd", "Url": "https://api.github.com/repos/Mocha--/Distributed_Algorithms_Project", "Date": "2016-05-17T07:56:58Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_progress) < (org.promasi.game.project.ProjectTask.CONST_PROGRESS_MAX_VALUE)) { _progress = _progressEquation.calculateEquation(_sdSystem.getSystemValues()); if ((_progress) > (org.promasi.game.project.ProjectTask.CONST_PROGRESS_MAX_VALUE)) { _progress = org.promasi.game.project.ProjectTask.CONST_PROGRESS_MAX_VALUE; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/5099/buggy-version/org.promasi.game.src.org.promasi.game.project.ProjectTask.java", "BodyUseAPI": [], "Fixed commit": "d510a0636c7a3db0dc5b445cd0d38caa7d3e0a0a", "Url": "https://api.github.com/repos/alekstheod/Promasi-V2", "Date": "2012-04-05T22:39:31Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentScreen) != null) { currentScreen.postTransitionOut(transitionOut); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/5793/buggy-version/mini2Dx-core.src.main.java.org.mini2Dx.core.screen.ScreenManager.java", "BodyUseAPI": [], "Fixed commit": "dcdad4d8dbd3c55483ad3ce5a8a7f2087993368a", "Url": "https://api.github.com/repos/tomcashman/mini2Dx", "Date": "2013-09-05T16:36:32Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentScreen) != null) { currentScreen.preTransitionOut(transitionOut); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/5793/buggy-version/mini2Dx-core.src.main.java.org.mini2Dx.core.screen.ScreenManager.java", "BodyUseAPI": [], "Fixed commit": "dcdad4d8dbd3c55483ad3ce5a8a7f2087993368a", "Url": "https://api.github.com/repos/tomcashman/mini2Dx", "Date": "2013-09-05T16:36:32Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["player.getSlots().get(\"armor\").getItem()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (armor != null) { spellFailure = armor.armor.getSpellFailure(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/7750/buggy-version/MUDServer.src.mud.commands.CastCommand.java", "BodyUseAPI": ["armor.armor.getSpellFailure()"], "Fixed commit": "43bffee717cb59d41a46c24a1fc29d2eae37fbc0", "Url": "https://api.github.com/repos/jnharton/mud-server", "Date": "2013-03-10T19:41:43Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (total == 0) percent = 0; else percent = ((int) ((uploaded * 100) / total));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/2639/buggy-version/src.com.seafile.seadroid2.ui.UploadTasksAdapter.java", "BodyUseAPI": [], "Fixed commit": "0c7f194e81aa4e7276c085046e0e10f062ba03f1", "Url": "https://api.github.com/repos/haiwen/seadroid", "Date": "2013-04-25T02:41:17Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (closeStream) { if (jis != null) try { jis.close(); } catch (java.io.IOException e) { throw new org.xeustechnologies.jcl.exception.JclException(e); } if (bis != null) try { bis.close(); } catch (java.io.IOException e) { throw new org.xeustechnologies.jcl.exception.JclException(e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/5091/buggy-version/JCL2.core.src.main.java.org.xeustechnologies.jcl.JarResources.java", "BodyUseAPI": [], "Fixed commit": "8f79d9ccc5a5f8f0823f1f66a048476ec44cdb2f", "Url": "https://api.github.com/repos/kamranzafar/JCL", "Date": "2016-11-12T22:41:10Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((precedentposition.longValue()) < (docContent.size())) { java.lang.String finalsentece = docContent.getContent(precedentposition.longValue(), docContent.size()).toString(); c.setContent(finalsentece); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/8403/buggy-version/src.main.java.eu.learnpad.ca.analysis.AbstractAnalysisClass.java", "BodyUseAPI": ["gate.DocumentContent.size()", "java.lang.Integer.longValue()", "docContent.getContent(precedentposition.longValue(), docContent.size()).toString()", "gate.DocumentContent.getContent(long,docContent.size())"], "Fixed commit": "e4e10699c40902340a1b5a72538e1cdab582b6fb", "Url": "https://api.github.com/repos/ISTI-FMT-LearnPAd/ContentAnalysisComponent", "Date": "2015-12-16T18:56:43Z"},
{"Line": "=>1038", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(h.hasPermission(h.ADMINISTER))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/4070/buggy-version/src.main.java.com.microsoft.azure.vmagent.AzureVMCloud.java", "BodyUseAPI": [], "Fixed commit": "3c9a9f071919045ca913c62d18936a5fb4485a9b", "Url": "https://api.github.com/repos/zackliu/azure-vm-agents-plugin", "Date": "2017-09-20T10:26:16Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currTimer) != null) { currTimer.cancel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/5761/buggy-version/wear.src.main.java.zhou.allen.swiper.Game.java", "BodyUseAPI": [], "Fixed commit": "e98aa7899a84a36e4f962c7f589715a10483f2da", "Url": "https://api.github.com/repos/Zhouball/Swiper", "Date": "2015-11-25T19:08:57Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ch.hf.snakeonlan.server.model.Game.getWinner()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (winner != null) { java.lang.System.out.println(((((\"Game \" + (gameID)) + \": Winner snake: \") + (game.getWinner())) + \"!\")); }else { java.lang.System.out.println(((\"Game \" + (gameID)) + \": No winner snake!\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/7724/buggy-version/SnakeOnLan.src.ch.hf.snakeonlan.server.engine.GameEngine.java", "BodyUseAPI": [], "Fixed commit": "1cc1e23feafaeaa5f2b7439a31d43bf48b4084ad", "Url": "https://api.github.com/repos/ryru/SnakeOnLan", "Date": "2014-04-29T16:17:06Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((snakes.size()) > 0) nick = snakes.get(0).getNick();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/7724/buggy-version/SnakeOnLan.src.ch.hf.snakeonlan.server.model.Game.java", "BodyUseAPI": ["java.util.ArrayList<ch.hf.snakeonlan.server.model.Snake>.get(int)", "snakes.get(0).getNick()"], "Fixed commit": "1cc1e23feafaeaa5f2b7439a31d43bf48b4084ad", "Url": "https://api.github.com/repos/ryru/SnakeOnLan", "Date": "2014-04-29T16:17:06Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.os.Bundle.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((hostname.length()) <= (MAX_IP_LENGTH)) { txtIP.setText(hostname); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/3301/buggy-version/app.src.main.java.com.ensointeractive.piiper.ConnectionInfo.java", "BodyUseAPI": ["android.widget.EditText.setText(java.lang.String)"], "Fixed commit": "ad24324ef6204c25ddd0691a7f2fbbd2d29b5b10", "Url": "https://api.github.com/repos/blastbeatsandcode/piiper", "Date": "2017-08-03T00:50:21Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(territory.getOwner().equals(this))) { territories.add(territory); territory.setnewOwner(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/6114/buggy-version/projecttemplate.src.main.java.edu.chl.ChalmersRisk.model.Player.java", "BodyUseAPI": ["java.util.ArrayList<edu.chl.ChalmersRisk.model.Territory>.add(edu.chl.ChalmersRisk.model.Territory)", "edu.chl.ChalmersRisk.model.Territory.setnewOwner(edu.chl.ChalmersRisk.model.Player)"], "Fixed commit": "79ce8832f8accfe80daa988fbf938849a0779c7d", "Url": "https://api.github.com/repos/rutanjr/group25", "Date": "2015-04-24T08:04:26Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Server.numUtilizadores()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (x == (-1)) s = 2; else { if (((x / 2) % 2) == 0) { s = x / 2; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/4608/buggy-version/src.Challenge.java", "BodyUseAPI": [], "Fixed commit": "16c7c608dc01596508d9c02efecbdff18b907244", "Url": "https://api.github.com/repos/Miglas13/FreeCoin", "Date": "2017-06-03T18:47:17Z"},
{"Line": "=>569", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.openremote.controller.deployer.Version20ModelBuilder.checkControllerDefinitionExists(config)) { controllerDefinitionIsPresent = true; if ((lastTimeStamp) == 0) { lastTimeStamp = getControllerXMLTimeStamp(); } return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/4585/buggy-version/controller.src.main.java.org.openremote.controller.deployer.Version20ModelBuilder.java", "BodyUseAPI": [], "Fixed commit": "e9fb459df4347ddd497e0c90d34ba30a7daacba7", "Url": "https://api.github.com/repos/openremote/Controller", "Date": "2016-10-17T12:46:57Z"},
{"Line": "=>1634", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isUpdateChangedState && ((deployer.modelBuilder) != null)) { deployer.modelBuilder.hasControllerDefinitionChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/4585/buggy-version/controller.src.main.java.org.openremote.controller.service.Deployer.java", "BodyUseAPI": ["org.openremote.controller.deployer.ModelBuilder.hasControllerDefinitionChanged()"], "Fixed commit": "e9fb459df4347ddd497e0c90d34ba30a7daacba7", "Url": "https://api.github.com/repos/openremote/Controller", "Date": "2016-10-17T12:46:57Z"},
{"Line": "=>3479", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.cloud.agent.api.GetVmDiskStatsAnswer.getVmDiskStatsMap()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (vmDiskStatsByName == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/3417/buggy-version/server.src.com.cloud.vm.UserVmManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "65c1c986da2cd14b9138a229ad6843ffbf46f3f4", "Url": "https://api.github.com/repos/apache/cloudstack", "Date": "2013-09-03T09:45:34Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tweetId >= (PrivateTweet.PRIVATE_TWEET_START_ID)) { table = PrivateTweet.PRIVATE_TWEET_TABLE_NAME; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/5020/buggy-version/app.controllers.Tweet.java", "BodyUseAPI": [], "Fixed commit": "1cd1e8e67e061ffe028138ea6e8a7d2877fa0212", "Url": "https://api.github.com/repos/jiangecho/maopao_server", "Date": "2015-06-28T23:21:17Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.os.Bundle.getInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (langId == 0) { this.language = application.getLanguages().get(0); }else { for (final uk.co.qubitssolutions.bharatradios.model.Language lang : application.getLanguages()) { if ((lang.getId()) == langId) { this.language = lang; break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/5933/buggy-version/app.src.main.java.uk.co.qubitssolutions.bharatradios.app.fragments.ContentListRadioFragment.java", "BodyUseAPI": [], "Fixed commit": "8a960f557ad707dac244334b7ed8d0f797b9f838", "Url": "https://api.github.com/repos/vmanikandan001/bharatradios.droid", "Date": "2017-07-11T19:31:19Z"},
{"Line": "=>648", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((limit == (java.lang.Integer.MAX_VALUE)) || ((plugins.size()) <= limit)) { return java.util.Collections.unmodifiableSortedMap(plugins); }else { return java.util.Collections.unmodifiableSortedMap(plugins.subMap(plugins.firstKey(), ((co.cask.cdap.internal.app.runtime.artifact.ArtifactDescriptor) (plugins.keySet().toArray()[limit])))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/5834/buggy-version/cdap-app-fabric.src.main.java.co.cask.cdap.internal.app.runtime.artifact.ArtifactStore.java", "BodyUseAPI": ["java.util.SortedMap<co.cask.cdap.internal.app.runtime.artifact.ArtifactDescriptor, co.cask.cdap.api.plugin.PluginClass>.keySet()", "java.util.SortedMap<co.cask.cdap.internal.app.runtime.artifact.ArtifactDescriptor, co.cask.cdap.api.plugin.PluginClass>.subMap(plugins.firstKey(),((co.cask.cdap.internal.app.runtime.artifact.ArtifactDescriptor) (plugins.keySet().toArray()[limit])))", "java.util.Collections.unmodifiableSortedMap(plugins.subMap(plugins.firstKey(), ((co.cask.cdap.internal.app.runtime.artifact.ArtifactDescriptor) (plugins.keySet().toArray()[limit]))))", "java.util.SortedMap<co.cask.cdap.internal.app.runtime.artifact.ArtifactDescriptor, co.cask.cdap.api.plugin.PluginClass>.firstKey()", "java.util.Collections.unmodifiableSortedMap(java.util.SortedMap<co.cask.cdap.internal.app.runtime.artifact.ArtifactDescriptor, co.cask.cdap.api.plugin.PluginClass>)", "plugins.keySet().toArray()"], "Fixed commit": "ed1a662b37ab50533987e29c40fc49c5d7bb6ead", "Url": "https://api.github.com/repos/caskdata/cdap", "Date": "2017-05-11T00:57:26Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (klass.equals(org.ow2.chameleon.fuchsia.discovery.filebased.ImportDeclaration.class)) { deployerKlassName = org.ow2.chameleon.fuchsia.discovery.filebased.ImporterDeployer.class.getName(); }else if (klass.equals(org.ow2.chameleon.fuchsia.discovery.filebased.ExportDeclaration.class)) { deployerKlassName = org.ow2.chameleon.fuchsia.discovery.filebased.ExporterDeployer.class.getName(); }else { throw new java.lang.IllegalStateException(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/8097/buggy-version/discoveries.file-based.src.main.java.org.ow2.chameleon.fuchsia.discovery.filebased.AbstractFileBasedDiscovery.java", "BodyUseAPI": ["java.lang.Class<D>.equals(java.lang.Class)"], "Fixed commit": "19d89a8b5bdeb3bc2042e85173d3c89628117cfb", "Url": "https://api.github.com/repos/ow2-chameleon/fuchsia", "Date": "2014-03-25T15:35:51Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((t.getThreadGroup()) != null) groupName = t.getThreadGroup().getName();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/8689/buggy-version/araqne-core.src.main.java.org.araqne.thread.ThreadScript.java", "BodyUseAPI": ["java.lang.Thread.getThreadGroup()", "java.lang.ThreadGroup.getName()"], "Fixed commit": "d4450101329aac95098a7ce44a74dd9a74ddc8c6", "Url": "https://api.github.com/repos/araqne/core", "Date": "2014-10-01T08:29:04Z"},
{"Line": "=>276", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mListViewBackgroundView) != null) { addParallaxEffect(); }else { addParallaxEffect(scrollPosition); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/7658/buggy-version/library.src.com.manuelpeinado.fadingactionbar.FadingActionBarHelper.java", "BodyUseAPI": [], "Fixed commit": "4dc800a88d71ce3f6010f30ddf94755393bfd7b5", "Url": "https://api.github.com/repos/sausame/FadingActionBar-Native", "Date": "2013-11-20T08:45:22Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (systemId == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/7124/buggy-version/core.src.main.java.com.predic8.membrane.core.resolver.ResolverMap.java", "BodyUseAPI": [], "Fixed commit": "cbd5d0c1cc2def18231c5dfd74bc69c8a459c583", "Url": "https://api.github.com/repos/membrane/service-proxy", "Date": "2015-08-17T12:39:47Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i < 10000) { users.add(new SYS.User(scan.next(), scan.next(), new SYS.Bicycle(scan.next()), scan.next(), scan.next())); i++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/3128/buggy-version/src.BicycleGarageManager.java", "BodyUseAPI": [], "Fixed commit": "7fe51e9e128e686690c9ad84d96302ec69bc69da", "Url": "https://api.github.com/repos/tfla/etsa01", "Date": "2013-05-17T19:49:18Z"},
{"Line": "=>459", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentSettings.type) != (tracer.traces.ContinuousDensityPanel.Type.COVARIANCE)) { setYLabel(traceType, new java.lang.String[]{ \"Density\", \"Probability\" }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/8881/buggy-version/src.tracer.traces.ContinuousDensityPanel.java", "BodyUseAPI": [], "Fixed commit": "bd516ef0c94814d67b0f9e6679b7a39c3eb47f66", "Url": "https://api.github.com/repos/beast-dev/tracer", "Date": "2017-09-14T21:11:37Z"},
{"Line": "=>250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((MyRank) == (com.yzong.dsf14.openMPIKMeans.strandDataset.DNAParallel.MASTER_ID)) { outputResult(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/2565/buggy-version/OpenMPIKMeans.src.com.yzong.dsf14.openMPIKMeans.strandDataset.DNAParallel.java", "BodyUseAPI": [], "Fixed commit": "f52bcdee5b04920b843f595ab7c574368bfdc6b1", "Url": "https://api.github.com/repos/ymzong/dsf14", "Date": "2014-11-28T09:40:56Z"},
{"Line": "=>514", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, org.structr.api.config.Setting>.get(setting.getKey())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (oldSetting != null) { setting.setValue(oldSetting.getValue()); oldSetting.unregister(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/5302/buggy-version/structr-db-driver-api.src.main.java.org.structr.api.config.Settings.java", "BodyUseAPI": ["org.structr.api.config.Setting.setValue(oldSetting.getValue())", "org.structr.api.config.Setting.unregister()", "org.structr.api.config.Setting.getValue()"], "Fixed commit": "44124e6f1207ae7d9dc9a4e742c8886d281c39c5", "Url": "https://api.github.com/repos/structr/structr", "Date": "2017-12-11T12:26:08Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((roads.size()) >= (Player.INITIAL_FREE_ROADS)) { for (int i = 0; (!isValid) && (i < (cities.size())); i++) { if ((r.other(cities.get(i).getId())) != (Constants.INVALID)) { isValid = true; } } for (int i = 0; (!isValid) && (i < (roads.size())); i++) { if (roads.get(i).isNeighbor(r)) { isValid = true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/3897/buggy-version/src.Player.java", "BodyUseAPI": ["java.util.ArrayList<Road>.size()", "java.util.ArrayList<Road>.get(int)", "roads.get(i).isNeighbor(Road)"], "Fixed commit": "0420353e2da7722164714b467c42b481d3dfe1f0", "Url": "https://api.github.com/repos/lbds137/cos984-senior-thesis-2014", "Date": "2014-07-22T01:28:36Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!valid) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/3897/buggy-version/src.UserInput.java", "BodyUseAPI": [], "Fixed commit": "0420353e2da7722164714b467c42b481d3dfe1f0", "Url": "https://api.github.com/repos/lbds137/cos984-senior-thesis-2014", "Date": "2014-07-22T01:28:36Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.android.maps.OverlayItem.getMarker(OverlayItem.ITEM_STATE_FOCUSED_MASK)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (drawable != null) { drawable.setState((selected ? boston.Bus.Map.ui.BusOverlayItem.focusState : boston.Bus.Map.ui.BusOverlayItem.zeroState)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/5625/buggy-version/src.boston.Bus.Map.ui.BusOverlayItem.java", "BodyUseAPI": ["android.graphics.drawable.Drawable.setState((selected ? boston.Bus.Map.ui.BusOverlayItem.focusState : boston.Bus.Map.ui.BusOverlayItem.zeroState))"], "Fixed commit": "0475ff7b329d73541762de993f9a08d3894c39f5", "Url": "https://api.github.com/repos/bostonbusmap/bostonbusmap", "Date": "2012-10-10T03:22:51Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((arya.com.washiato.ControlActivity.getNfcStatus()) == true) { ref.child(\"Machines\").child(arya.com.washiato.ControlActivity.serial).child(\"omw\").setValue(1); android.widget.Toast.makeText(context, getString(R.string.omw), Toast.LENGTH_LONG).show(); }else { android.widget.Toast.makeText(context, getString(R.string.no_connection), Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/6234/buggy-version/Android.washiato.app.src.main.java.arya.com.washiato.ControlActivity.java", "BodyUseAPI": [], "Fixed commit": "88732ea1d9422857df3cac090c6d0acac9dd1ac2", "Url": "https://api.github.com/repos/efritz09/washiato", "Date": "2016-05-18T06:07:26Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (calledNext) { return (nextLine) != null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/2766/buggy-version/insight-ml-core.src.main.java.com.insightml.utils.io.LineReader.java", "BodyUseAPI": [], "Fixed commit": "4ce86423085931916f66a6417b483b848f6a2e6f", "Url": "https://api.github.com/repos/ProfilingIO/insight-ml", "Date": "2017-07-30T16:34:58Z"},
{"Line": "=>316", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.raphfrk.bukkit.serverport.PortalManager.getDestination(com.raphfrk.bukkit.serverport.PortalInfo)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (destination == null) { destination = origin.portalWorld; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/5632/buggy-version/com.raphfrk.bukkit.serverport.ServerPortListenerCommon.java", "BodyUseAPI": [], "Fixed commit": "8170caf456815793e2d1f11349316d880321a01d", "Url": "https://api.github.com/repos/Raphfrk/ServerPort", "Date": "2011-05-22T11:43:34Z"},
{"Line": "=>1246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mSubscriptionInterstitialAd.isLoading()) { android.widget.Toast.makeText(this, \"Ads didn't loaded yet ,Try in few minutes\", Toast.LENGTH_SHORT).show(); }else { android.util.Log.d(\"TAG\", \"The interstitial wasn't loaded yet.\"); android.widget.Toast.makeText(this, \"Ads didn't loaded yet ,Try again later\", Toast.LENGTH_SHORT).show(); com.crashlytics.android.answers.Answers.getInstance().logCustom(new com.crashlytics.android.answers.CustomEvent(\"Subscription\").putCustomAttribute(\"user shown ad\", \"not loaded\")); mSubscriptionInterstitialAd.loadAd(new com.google.android.gms.ads.AdRequest.Builder().build()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/15/buggy-version/app.src.main.java.app.articles.vacabulary.editorial.gamefever.editorial.EditorialFeedActivity.java", "BodyUseAPI": ["com.google.android.gms.ads.InterstitialAd.loadAd(new com.google.android.gms.ads.AdRequest.Builder().build())"], "Fixed commit": "c3787f867b51e53853025614c76f3ce2d198e4f9", "Url": "https://api.github.com/repos/GameFever20/Editorial", "Date": "2017-09-12T16:02:54Z"},
{"Line": "=>1483", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.dp.blackhole.supervisor.model.Stream.getStages()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(stages.contains(next))) { stages.add(next); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/8195/buggy-version/blackhole-supervisor.src.main.java.com.dp.blackhole.supervisor.Supervisor.java", "BodyUseAPI": ["java.util.List<com.dp.blackhole.supervisor.model.Stage>.add(com.dp.blackhole.supervisor.model.Stage)"], "Fixed commit": "7fafd089724cac6d6707556f2977ae27ef25e902", "Url": "https://api.github.com/repos/LantaoJin/blackhole", "Date": "2016-04-25T09:08:02Z"},
{"Line": "=>1608", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(stages.contains(current))) { stages.add(current); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/8195/buggy-version/blackhole-supervisor.src.main.java.com.dp.blackhole.supervisor.Supervisor.java", "BodyUseAPI": ["java.util.ArrayList<com.dp.blackhole.supervisor.model.Stage>.add(com.dp.blackhole.supervisor.model.Stage)"], "Fixed commit": "7fafd089724cac6d6707556f2977ae27ef25e902", "Url": "https://api.github.com/repos/LantaoJin/blackhole", "Date": "2016-04-25T09:08:02Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (producer.ProducerCLI.prod.isRegistered()) producer.ProducerCLI.prod.deregisterFromServer();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/8163/buggy-version/src.producer.ProducerCLI.java", "BodyUseAPI": ["producer.ProducerIF.deregisterFromServer()"], "Fixed commit": "912022cdb5662924f0d3a2e4d3ebc2fef171ffed", "Url": "https://api.github.com/repos/TINF15ITNS/MB", "Date": "2016-07-24T14:57:12Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["il.ac.shenkar.showshenkar.backend.OfyService.ofy().load().type(il.ac.shenkar.showshenkar.backend.model.Content.class).id(id).now()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((content.getMedia()) == null) { java.util.List<il.ac.shenkar.showshenkar.backend.model.Media> mediaList = new java.util.ArrayList<>(); content.setMedia(mediaList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/6824/buggy-version/backend.src.main.java.il.ac.shenkar.showshenkar.backend.servlets.Upload.java", "BodyUseAPI": ["il.ac.shenkar.showshenkar.backend.model.Content.setMedia(java.util.List<il.ac.shenkar.showshenkar.backend.model.Media>)"], "Fixed commit": "41963ec85be1a7edeff9fc377bb85e2a0b72939b", "Url": "https://api.github.com/repos/kogrego/ShowShenkar", "Date": "2016-06-27T14:51:44Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((configRs.getString(\"post_type\").isEmpty()) || (configRs.getString(\"post_type\").equals(\"null\"))) { return null; }else { return configRs.getString(\"post_type\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/6856/buggy-version/src.main.java.net.walterbarnes.sourcebot.BotThread.java", "BodyUseAPI": ["java.sql.ResultSet.getString(java.lang.String)"], "Fixed commit": "3a846313055d4dbd68be9045151540abe21ab5b4", "Url": "https://api.github.com/repos/linuxdaemon/SourceBot", "Date": "2016-03-20T23:04:23Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!((blog.getPostComment().isEmpty()) || (blog.getPostComment().equals(\"null\")))) { params.put(\"comment\", blog.getPostComment()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/6856/buggy-version/src.main.java.net.walterbarnes.sourcebot.BotThread.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,java.lang.String)", "net.walterbarnes.sourcebot.BotThread.Blog.getPostComment()"], "Fixed commit": "3a846313055d4dbd68be9045151540abe21ab5b4", "Url": "https://api.github.com/repos/linuxdaemon/SourceBot", "Date": "2016-03-20T23:04:23Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!((blog.getPostTags().isEmpty()) || (blog.getPostTags().equals(\"null\")))) { params.put(\"tags\", blog.getPostTags()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/6856/buggy-version/src.main.java.net.walterbarnes.sourcebot.BotThread.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,java.lang.String)", "net.walterbarnes.sourcebot.BotThread.Blog.getPostTags()"], "Fixed commit": "3a846313055d4dbd68be9045151540abe21ab5b4", "Url": "https://api.github.com/repos/linuxdaemon/SourceBot", "Date": "2016-03-20T23:04:23Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Project.find.ref(long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((project.name) == null) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/492/buggy-version/server.play.app.models.Entry.java", "BodyUseAPI": [], "Fixed commit": "1fe48eedd39524f33782439d7868dba43fc6d30f", "Url": "https://api.github.com/repos/CarTLCapp/CarTLC", "Date": "2017-12-19T02:14:06Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["models.Company.get(long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((company.city) == null) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/492/buggy-version/server.play.app.models.Entry.java", "BodyUseAPI": [], "Fixed commit": "1fe48eedd39524f33782439d7868dba43fc6d30f", "Url": "https://api.github.com/repos/CarTLCapp/CarTLC", "Date": "2017-12-19T02:14:06Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["models.Company.get(long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((company.getName()) == null) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/492/buggy-version/server.play.app.models.Entry.java", "BodyUseAPI": [], "Fixed commit": "1fe48eedd39524f33782439d7868dba43fc6d30f", "Url": "https://api.github.com/repos/CarTLCapp/CarTLC", "Date": "2017-12-19T02:14:06Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.playposse.ghostphoto.util.StringUtil.isEmpty(action)) { action = category.name(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/5852/buggy-version/app.src.main.java.com.playposse.ghostphoto.util.AnalyticsUtil.java", "BodyUseAPI": [], "Fixed commit": "2ededd321ad96bd4fd4c0b81df9ff9b7655a76d3", "Url": "https://api.github.com/repos/thomasfischersm/GhostPhoto", "Date": "2017-08-05T17:48:47Z"},
{"Line": "=>717", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(game.isGameOver())) { game.restoreState(bookmark); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/3188/buggy-version/Mage.src.mage.players.PlayerImpl.java", "BodyUseAPI": ["mage.game.Game.restoreState(int)"], "Fixed commit": "663c31cec696a8d200e86d1640e17a09dd848ec7", "Url": "https://api.github.com/repos/magefree/mage", "Date": "2013-10-21T18:48:25Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sourceRecord) != null) cur = sourceRecord.getOwner();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/3086/buggy-version/core.src.main.java.com.orientechnologies.orient.core.db.record.ORecordLazySet.java", "BodyUseAPI": [], "Fixed commit": "d80434014ac04fcb17d73e9e195dfe4250ac343d", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2015-05-19T12:32:39Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(cur instanceof com.orientechnologies.orient.core.record.impl.ODocument)) cur = sourceRecord;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/3086/buggy-version/core.src.main.java.com.orientechnologies.orient.core.db.record.ORecordLazySet.java", "BodyUseAPI": [], "Fixed commit": "d80434014ac04fcb17d73e9e195dfe4250ac343d", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2015-05-19T12:32:39Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.list.isEmpty())) { if (list.get(((list.size()) - 1)).contains(\"(\")) { (open_bracket)--; } list.remove(((list.size()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/3025/buggy-version/Scientific_Calculator.java", "BodyUseAPI": [], "Fixed commit": "e2a12894340585b1d32d4606af325a1fe9181e5e", "Url": "https://api.github.com/repos/ITU-SEN-964-OOP-with-JAVA/Scientific-Calculator", "Date": "2015-08-08T18:28:40Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (itemAdjustment.isAppliedToSalePrice()) { saleAdjustmentValue = itemAdjustment.getValue(); retailAdjustmentValue = itemAdjustment.getRetailPriceValue(); }else { retailAdjustmentValue = itemAdjustment.getValue(); saleAdjustmentValue = itemAdjustment.getSalesPriceValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/4990/buggy-version/core.broadleaf-framework.src.main.java.org.broadleafcommerce.core.offer.service.discount.domain.PromotableOrderItemPriceDetailAdjustmentImpl.java", "BodyUseAPI": [], "Fixed commit": "1ac247aeb3b45877016701358f7f7a0fbbd7ceda", "Url": "https://api.github.com/repos/BroadleafCommerce/BroadleafCommerce", "Date": "2013-09-06T20:50:42Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((query.getMaxFeatures()) > 0) && ((query.getMaxFeatures()) < (java.lang.Integer.MAX_VALUE))) { if (count > (query.getMaxFeatures())) { count = query.getMaxFeatures(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/1016/buggy-version/modules.unsupported.solr.src.main.java.org.geotools.data.solr.SolrFeatureSource.java", "BodyUseAPI": ["org.geotools.data.Query.getMaxFeatures()", "org.geotools.data.Query.getMaxFeatures()"], "Fixed commit": "8e744d7a8d36082db2416ee81ba2d5feb2d5a3bd", "Url": "https://api.github.com/repos/xandros6/geotools", "Date": "2014-10-20T08:46:02Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(cur instanceof com.orientechnologies.orient.core.record.impl.ODocument)) cur = sourceRecord;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/2818/buggy-version/core.src.main.java.com.orientechnologies.orient.core.db.record.ORecordLazySet.java", "BodyUseAPI": [], "Fixed commit": "d79a2c66341006aa119887aa32aaf5f0864fd0f1", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2015-05-19T12:32:39Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sourceRecord) != null) cur = sourceRecord.getOwner();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/2818/buggy-version/core.src.main.java.com.orientechnologies.orient.core.db.record.ORecordLazySet.java", "BodyUseAPI": [], "Fixed commit": "d79a2c66341006aa119887aa32aaf5f0864fd0f1", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2015-05-19T12:32:39Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((filter.length()) > 0) { for (net.yawk.client.gui.components.selectors.SelectorButton selectorButton : componentsPool) { if (selectorButton.getStaticText().contains(filter)) { components.add(selectorButton); } } }else { components.addAll(componentsPool); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/941/buggy-version/net.yawk.client.gui.components.scrolling.FilterableScrollPane.java", "BodyUseAPI": ["selectorButton.getStaticText().contains(java.lang.String)"], "Fixed commit": "3132fbbbac0078fae1fdd5e50c364652c80da663", "Url": "https://api.github.com/repos/10askinsw/Yawk-Client", "Date": "2015-08-12T15:17:18Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (setNr > 16) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/4249/buggy-version/PolTool.src.main.java.de.mt.poltool.visualisation.model.GraphModel.java", "BodyUseAPI": [], "Fixed commit": "8eff8322a20077a3690473c709eaa04127735c14", "Url": "https://api.github.com/repos/talpalaru/polTool", "Date": "2015-05-11T09:26:53Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (m_loginAsIdOwner) { result = notesAPI.b64_NSFDbOpenExtended(retFullNetPath, openOptions, 0, modifiedTime, hDB, retDataModified, retNonDataModified); }else { result = notesAPI.b64_NSFDbOpenExtended(retFullNetPath, openOptions, m_namesList.getHandle64(), modifiedTime, hDB, retDataModified, retNonDataModified); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/3660/buggy-version/domino-jna.src.main.java.com.mindoo.domino.jna.NotesDatabase.java", "BodyUseAPI": [], "Fixed commit": "bda69b71c3bc9f134057648d3e63b6f7d8dd246b", "Url": "https://api.github.com/repos/klehmann/domino-jna", "Date": "2017-10-24T12:12:23Z"},
{"Line": "=>341", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (m_loginAsIdOwner) { result = notesAPI.b32_NSFDbOpenExtended(retFullNetPath, openOptions, 0, modifiedTime, hDB, retDataModified, retNonDataModified); }else { result = notesAPI.b32_NSFDbOpenExtended(retFullNetPath, openOptions, m_namesList.getHandle32(), modifiedTime, hDB, retDataModified, retNonDataModified); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/3660/buggy-version/domino-jna.src.main.java.com.mindoo.domino.jna.NotesDatabase.java", "BodyUseAPI": [], "Fixed commit": "bda69b71c3bc9f134057648d3e63b6f7d8dd246b", "Url": "https://api.github.com/repos/klehmann/domino-jna", "Date": "2017-10-24T12:12:23Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.entityPlayer.getHeldItem()) != null) { if ((event.entityPlayer.getHeldItem().getItem()) instanceof net.minecraft.item.ItemSpade) { net.minecraft.block.Block block = event.world.getBlockState(event.pos).getBlock(); if (block instanceof net.minecraft.block.BlockGrass) { event.world.setBlockState(event.pos, BlockPath.GRASS_PATH.getDefaultState()); }else if (block instanceof net.minecraft.block.BlockDirt) { event.world.setBlockState(event.pos, BlockPath.DIRT_PATH.getDefaultState()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/9089/buggy-version/src.main.java.com.techern.minecraft.pathomania.events.PathomaniaPlayerEvents.java", "BodyUseAPI": ["event.entityPlayer.getHeldItem().getItem()", "event.entityPlayer.getHeldItem()", "event.world.getBlockState(event.pos).getBlock()", "event.world.setBlockState(event.pos,BlockPath.GRASS_PATH.getDefaultState())", "event.world.setBlockState(event.pos,BlockPath.DIRT_PATH.getDefaultState())", "event.world.getBlockState(event.pos)"], "Fixed commit": "e14d180b8cd979bd01b0f01a37b3f94cf337c463", "Url": "https://api.github.com/repos/Techern/Pathomania", "Date": "2015-11-15T08:01:09Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.text.SimpleDateFormat.parse(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((toDate.getDate()) != (new java.util.Date().getDate())) { dateRange = date_format_short.format(toDate); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/6799/buggy-version/src.finalProject.gregMo.MeasurementsBarChart.java", "BodyUseAPI": ["java.text.SimpleDateFormat.format(java.util.Date)"], "Fixed commit": "59ace8377cd58a00d7c49ea1d31bbddc62ac1920", "Url": "https://api.github.com/repos/gkrilov/Android-Project", "Date": "2012-04-14T01:15:15Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["key.getTypeLiteral().getRawType()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (rawType != (com.google.inject.Provider.class)) { bind(key).toProvider(new org.jukito.MockProvider(rawType)).in(TestScope.SINGLETON); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/5386/buggy-version/jukito.src.main.java.org.jukito.JukitoModule.java", "BodyUseAPI": ["bind(key).toProvider(new org.jukito.MockProvider(rawType)).in(TestScope.SINGLETON)", "bind(key).toProvider(org.jukito.MockProvider)"], "Fixed commit": "1a2c9b31c2a6cd304da3904a0702969ba1089c47", "Url": "https://api.github.com/repos/ArcBees/Jukito", "Date": "2013-11-12T23:15:07Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.raysuhyunlee.awesomebinder.ListMap<android.view.View>.getAll(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (contentViewList == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/6322/buggy-version/lib.src.main.java.net.raysuhyunlee.awesomebinder.AwesomeBinder.java", "BodyUseAPI": [], "Fixed commit": "024d5e6d3326dbb59148a08288a271c1d64d4bf2", "Url": "https://api.github.com/repos/RaySuhyunLee/Awesome-Binder", "Date": "2015-11-30T11:42:11Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["zs.com.wuzhi.db.DBHelper.queryFollowAll()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((userList.size()) == 0) { hud.dismiss(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/1790/buggy-version/app.src.main.java.zs.com.wuzhi.activity.FollowActivity.java", "BodyUseAPI": [], "Fixed commit": "ffc5ea4ad5ddf2c095ae5184703a2069966e38ab", "Url": "https://api.github.com/repos/LostKe/android-wuzhi", "Date": "2016-09-22T05:45:13Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (methodCall.MethodSignature[i].equals(java.util.HashMap.class)) methodCall.Args[i] = com.alibaba.fastjson.JSON.parseObject(args.getJSONObject(i).toJSONString(), new com.alibaba.fastjson.TypeReference<java.util.HashMap<java.lang.Object, java.lang.Object>>() {}); else methodCall.Args[i] = args.getObject(i, methodCall.MethodSignature[i]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/2305/buggy-version/java.remoting.main.com.taobao.top.link.remoting.CrossLanguageJsonSerializer.java", "BodyUseAPI": ["com.alibaba.fastjson.JSONArray.getObject(int,methodCall.MethodSignature[i])", "args.getJSONObject(i).toJSONString()", "com.alibaba.fastjson.JSONArray.getJSONObject(int)", "com.alibaba.fastjson.JSON.parseObject(args.getJSONObject(i).toJSONString(),com.alibaba.fastjson.TypeReference<java.util.HashMap<java.lang.Object, java.lang.Object>>)"], "Fixed commit": "5d034566a66cc05ba9c68927db5a712c969668b7", "Url": "https://api.github.com/repos/wsky/top-link", "Date": "2013-06-07T08:38:08Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(items.isEmpty())) { guid = items.get(position).getGuid(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/473/buggy-version/app.src.main.java.fr.vpm.audiorss.process.AllFeedItemsDataModel.java", "BodyUseAPI": ["items.get(position).getGuid()", "java.util.List<fr.vpm.audiorss.rss.RSSItem>.get(int)"], "Fixed commit": "96d6c689d0f035f9610285f48d1fe61c78d7e108", "Url": "https://api.github.com/repos/vpmalley/radiofeedz", "Date": "2015-03-05T17:09:31Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(st.hasNextToken())) { throw new java.lang.IllegalArgumentException(\"Attempt to scan invalid header\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/5209/buggy-version/src.com.meterware.httpunit.HttpUnitUtils.java", "BodyUseAPI": [], "Fixed commit": "ffd6be1629a1ce71b15793ed58d58bd5f4ce021b", "Url": "https://api.github.com/repos/emopers/httpunit", "Date": "2015-10-21T18:30:45Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pageToken) != null) { refreshListView.setMode(PullToRefreshBase.Mode.PULL_FROM_END); refreshListView.setOnRefreshListener(new com.handmark.pulltorefresh.library.PullToRefreshBase.OnRefreshListener<android.widget.ListView>() { @java.lang.Override public void onRefresh(PullToRefreshBase<android.widget.ListView> refreshView) { android.util.Log.d(\"debug\", \"refresh\"); new jp.mzkcreation.minutetube.RefreshTask().execute(); } }); }else { android.util.Log.d(\"debug\", \"End of result list\"); refreshListView.setMode(PullToRefreshBase.Mode.DISABLED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/4184/buggy-version/app.src.main.java.jp.mzkcreation.minutetube.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "e49d778bd228179d864048bd0b57605cda100ff8", "Url": "https://api.github.com/repos/mi-nakano/MinuteTube", "Date": "2016-08-22T08:23:19Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((java.lang.String.valueOf(collectionSearchResultDo.getTotalViews()).length()) > 4) { lblViewCount.setText(java.lang.String.valueOf(collectionSearchResultDo.getTotalViews()).substring(0, 4)); }else { lblViewCount.setText(((collectionSearchResultDo.getTotalViews()) + \"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/3612/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.search.util.CollectionSearchWidget.java", "BodyUseAPI": [], "Fixed commit": "f0cc11bcebb6fbb7ed64ba616cd017168fa34b7d", "Url": "https://api.github.com/repos/anilgooru/Gooru-Web", "Date": "2015-05-06T15:23:04Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((java.lang.String.valueOf(resourceSearchResultDo.getTotalViews()).length()) > 4) { lblViewCount.setText(java.lang.String.valueOf(resourceSearchResultDo.getTotalViews()).substring(0, 4)); }else { lblViewCount.setText(((resourceSearchResultDo.getTotalViews()) + \"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/3612/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.search.util.CollectionResourceWidget.java", "BodyUseAPI": [], "Fixed commit": "f0cc11bcebb6fbb7ed64ba616cd017168fa34b7d", "Url": "https://api.github.com/repos/anilgooru/Gooru-Web", "Date": "2015-05-06T15:23:04Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (executorService instanceof java.util.concurrent.ThreadPoolExecutor) return ((java.util.concurrent.ThreadPoolExecutor) (executorService)).getQueue();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/2068/buggy-version/src.main.java.kr.jm.utils.helper.JMThread.java", "BodyUseAPI": [], "Fixed commit": "689171468278794d9d84cf48cda9d37c00ecf7d4", "Url": "https://api.github.com/repos/JM-Lab/utils-java8", "Date": "2016-05-04T08:34:24Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.common.collect.ImmutableMap<java.lang.String, com.spectralogic.ds3autogen.utils.Ds3Type>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (ds3Type != null) { builder.addAll(com.spectralogic.ds3autogen.utils.ConverterUtil.getUsedTypesFromType(ds3Type)); }else { com.spectralogic.ds3autogen.utils.ConverterUtil.LOG.error((\"Could not find used type in Type Map: \" + type)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/7887/buggy-version/ds3-autogen-utils.src.main.java.com.spectralogic.ds3autogen.utils.ConverterUtil.java", "BodyUseAPI": ["builder.addAll(com.google.common.collect.ImmutableSet<java.lang.String>)", "com.spectralogic.ds3autogen.utils.ConverterUtil.getUsedTypesFromType(com.spectralogic.ds3autogen.utils.Ds3Type)"], "Fixed commit": "504e4b118f51e15dbd6a0c12be4526b4e0433579", "Url": "https://api.github.com/repos/SpectraLogic/ds3_autogen", "Date": "2016-01-08T21:13:20Z"},
{"Line": "=>396", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (java.util.regex.Pattern.matches(\"EV_.*\", line)) { }else { logWriter.write(((\"Line does not match:'\" + line) + \"\\'\\n\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/8855/buggy-version/src.main.java.com.github.canbabel.canio.dbc.DbcReader.java", "BodyUseAPI": ["java.io.PrintWriter.write(java.lang.String)"], "Fixed commit": "99658f60f7cef25f9b3fa241292fcd26e744f469", "Url": "https://api.github.com/repos/julietkilo/CANBabel", "Date": "2012-02-26T20:10:10Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (varName.equals(\"product\")) { value = product; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/993/buggy-version/src.main.java.com.liferay.faces.util.el.internal.UtilELResolver.java", "BodyUseAPI": [], "Fixed commit": "710c51bb592737f1ad2c8869b025ad31e1ed1b32", "Url": "https://api.github.com/repos/stiemannkj1/liferay-faces-util", "Date": "2016-07-13T16:53:47Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Long.numberOfTrailingZeros(board.bitboards.get(color).get(Piece.KING).data)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((kingIndex % 8) <= 2) || ((kingIndex % 8) >= 5)) { long file = 72340172838076673L << (kingIndex % 8); if (((board.bitboards.get(color).get(Piece.PAWN).data) & file) == 0) { openFilePenalty = 400 * (1 - endgameFraction); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/9170/buggy-version/src.chess_engine.Brain.java", "BodyUseAPI": [], "Fixed commit": "42f337ab86ab6903abf4777ecc4e86768856b676", "Url": "https://api.github.com/repos/philleski/tactician", "Date": "2017-01-22T18:33:15Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["content.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((selectPosition) <= ((ori.length()) - 1)) right = ori.substring(selectPosition);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/4666/buggy-version/src.org.qii.weiciyuan.ui.send.AutoCompleteAdapter.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "fb127f2d6a610b474227dbcd3469f6282e2729e7", "Url": "https://api.github.com/repos/Jewelzqiu/weiciyuan", "Date": "2013-09-17T03:15:01Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.charAt(int)", "java.lang.String.charAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (currChar == nextChar) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/3292/buggy-version/269-Alien-Dictionary.solution.java", "BodyUseAPI": [], "Fixed commit": "751e8d201e6d53ad550797bc020bf7bf3af87627", "Url": "https://api.github.com/repos/wanghaodawn/Leetcode", "Date": "2016-11-01T04:26:45Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (binary.getTag().getName().equals(\"Div\")) { return double.class; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/2803/buggy-version/src.nez.ast.jcode.JCodeGenerator.java", "BodyUseAPI": [], "Fixed commit": "d505c209df223dca005a55d3b23a6b4466acef53", "Url": "https://api.github.com/repos/kensuketamura/nez-1", "Date": "2015-08-24T05:05:53Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["abcteam.com.abchackathon.helper.DatabaseHandle.Get_Contacts()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((modelArrayList.size()) > 0) { mLayout.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/7796/buggy-version/app.src.main.java.abcteam.com.abchackathon.activities.ListCardActivity.java", "BodyUseAPI": [], "Fixed commit": "0e96c396e4fa54eb94e5e9add11db0f9f177c3ad", "Url": "https://api.github.com/repos/trileminh94/phoneEye", "Date": "2016-03-26T23:39:27Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((request.getClient()) != null) request.getClient().setLastCheckin(java.lang.System.currentTimeMillis());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/1753/buggy-version/src.com.rbruno.irc.commands.Command.java", "BodyUseAPI": ["request.getClient().setLastCheckin(long)", "com.rbruno.irc.templates.Request.getClient()"], "Fixed commit": "f9925fbaf9fd6f02e2b80f29f63b3953dea08a13", "Url": "https://api.github.com/repos/RyanBruno/IrcServer", "Date": "2016-06-08T23:16:53Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (callback.isInterrupted()) { mergedRecords.addAll(queue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/2792/buggy-version/main.plugins.org.talend.dataquality.record.linkage.src.main.java.org.talend.dataquality.matchmerge.mfb.MFB.java", "BodyUseAPI": [], "Fixed commit": "03e7d6c8394eebc35740e5157fec91aaacafd761", "Url": "https://api.github.com/repos/Talend/tdq-studio-se", "Date": "2014-10-14T08:21:09Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bluetoothConnectThread) != null) { address = bluetoothConnectThread.getDeviceAddress(); name = bluetoothConnectThread.getDeviceName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/8845/buggy-version/app.src.main.java.tw.jeff.smallcarremotecontroller.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "01adcbee58ad7d9d5b6d863fbba3ac4bbc4a0f83", "Url": "https://api.github.com/repos/e8035669/SmallCarRemoteController", "Date": "2017-12-22T11:09:40Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.concurrent.ConcurrentHashMap<java.lang.String, nl.surfnet.coin.csa.domain.IdentityProvider>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (identityProvider == null) { identityProvider = idpService.getIdentityProvider(idpEntityId); if (identityProvider != null) { idpCache.put(identityProvider.getId(), identityProvider); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/8746/buggy-version/csa-war.src.main.java.nl.surfnet.coin.csa.api.cache.ProviderCache.java", "BodyUseAPI": [], "Fixed commit": "6138aafa7af4ca3675681ac8a4b43291e5e39779", "Url": "https://api.github.com/repos/OpenConext/OpenConext-csa", "Date": "2013-07-16T14:29:47Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["nl.surfnet.coin.csa.api.cache.ProviderCache.getIdentityProvider(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (identityProvider == null) { throw new java.lang.IllegalArgumentException(((\"No IdentityProvider known in SR with name:'\" + idpEntityId) + \"'\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/8746/buggy-version/csa-war.src.main.java.nl.surfnet.coin.csa.api.control.ServicesController.java", "BodyUseAPI": [], "Fixed commit": "6138aafa7af4ca3675681ac8a4b43291e5e39779", "Url": "https://api.github.com/repos/OpenConext/OpenConext-csa", "Date": "2013-07-16T14:29:47Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (fplayer == (fme)) { fplayer.msg(Lang.COMMAND_DISBAND_BROADCAST_YOURS_YOU); }else { fplayer.msg(Lang.COMMAND_DISBAND_BROADCAST_YOURS, who); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/2142/buggy-version/src.main.java.net.redstoneore.legacyfactions.cmd.CmdFactionsDisband.java", "BodyUseAPI": ["net.redstoneore.legacyfactions.entity.FPlayer.msg(Lang.COMMAND_DISBAND_BROADCAST_YOURS_YOU)", "net.redstoneore.legacyfactions.entity.FPlayer.msg(Lang.COMMAND_DISBAND_BROADCAST_YOURS,java.lang.String)"], "Fixed commit": "3cda148b2b921db10902b8f7936aac355c59361f", "Url": "https://api.github.com/repos/redstone/LegacyFactions", "Date": "2017-04-28T05:56:18Z"},
{"Line": "=>2261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.couchbase.cblite.CBLDatabase.getCachedDocument(rev.getDocId())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (cachedDocument != null) { cachedDocument.revisionAdded(changeNotification); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/437/buggy-version/src.main.java.com.couchbase.cblite.CBLDatabase.java", "BodyUseAPI": ["com.couchbase.cblite.CBLDocument.revisionAdded(java.util.Map<java.lang.String, java.lang.Object>)"], "Fixed commit": "cfe8879b4e5a569b4b75e57b548dd0e69ce7173f", "Url": "https://api.github.com/repos/couchbase/couchbase-lite-android-core", "Date": "2013-10-24T01:59:15Z"},
{"Line": "=>416", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((assignedValues.get(v)) != null) { return assignedValues.get(v); }else { return new Contract.VariableValue(VariableValue.Status.unknown); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/1519/buggy-version/src.main.java.Contract.Behavior.java", "BodyUseAPI": ["java.util.HashMap<Contract.Variable, Contract.VariableValue>.get(Contract.Variable)"], "Fixed commit": "363fa0e8a71276986182e5e472caf5560a825913", "Url": "https://api.github.com/repos/Meddan/SpecIT", "Date": "2017-04-20T12:12:04Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((lineItem.getRequestedQuantity()) != null) { orderLineItem.setOrderedQuantity(lineItem.getRequestedQuantity().longValue()); }else { orderLineItem.setOrderedQuantity(lineItem.getCalculatedOrderQuantity().longValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/8740/buggy-version/src.main.java.org.openlmis.requisition.dto.OrderLineItemDto.java", "BodyUseAPI": ["org.openlmis.requisition.domain.RequisitionLineItem.getRequestedQuantity()", "org.openlmis.requisition.domain.RequisitionLineItem.getCalculatedOrderQuantity()", "org.openlmis.requisition.dto.OrderLineItemDto.setOrderedQuantity(lineItem.getCalculatedOrderQuantity().longValue())", "lineItem.getRequestedQuantity().longValue()", "org.openlmis.requisition.dto.OrderLineItemDto.setOrderedQuantity(lineItem.getRequestedQuantity().longValue())", "lineItem.getCalculatedOrderQuantity().longValue()"], "Fixed commit": "0bab2416c86646f53ea7ab10f93c75006e09abbc", "Url": "https://api.github.com/repos/OpenLMIS/openlmis-requisition", "Date": "2017-03-15T09:27:35Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (worldObj.isRemote) { dimensionManager = mcjty.rftoolsdim.dimensions.RfToolsDimensionManager.getDimensionManagerClient(); }else { dimensionManager = mcjty.rftoolsdim.dimensions.RfToolsDimensionManager.getDimensionManager(worldObj); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/7645/buggy-version/src.main.java.mcjty.rftoolsdim.dimensions.world.GenericWorldProvider.java", "BodyUseAPI": [], "Fixed commit": "3776375b3d007ce4c102e59d666472cd546d9d27", "Url": "https://api.github.com/repos/McJtyMods/RFToolsDimensions", "Date": "2016-05-13T09:05:07Z"},
{"Line": "=>298", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hourOfDay == 0) { hourOfDay = 12; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/2300/buggy-version/app.src.main.java.com.example.hciproject.hcitimedate.iOSActivity.java", "BodyUseAPI": [], "Fixed commit": "81e857405581003874c46159a61ff6d006295c8d", "Url": "https://api.github.com/repos/triciajose/hci_timedate", "Date": "2016-03-23T16:51:55Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hourOfDay != 12) { hourOfDay = hourOfDay - 12; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/2300/buggy-version/app.src.main.java.com.example.hciproject.hcitimedate.iOSActivity.java", "BodyUseAPI": [], "Fixed commit": "81e857405581003874c46159a61ff6d006295c8d", "Url": "https://api.github.com/repos/triciajose/hci_timedate", "Date": "2016-03-23T16:51:55Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hourOfDay != 12) { hourOfDay = hourOfDay - 12; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/2300/buggy-version/app.src.main.java.com.example.hciproject.hcitimedate.AndroidActivity.java", "BodyUseAPI": [], "Fixed commit": "81e857405581003874c46159a61ff6d006295c8d", "Url": "https://api.github.com/repos/triciajose/hci_timedate", "Date": "2016-03-23T16:51:55Z"},
{"Line": "=>299", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hourOfDay == 0) { hourOfDay = 12; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/2300/buggy-version/app.src.main.java.com.example.hciproject.hcitimedate.AndroidActivity.java", "BodyUseAPI": [], "Fixed commit": "81e857405581003874c46159a61ff6d006295c8d", "Url": "https://api.github.com/repos/triciajose/hci_timedate", "Date": "2016-03-23T16:51:55Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Properties.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (arch.equals(\"x86\")) { filePath.append(arch); }else { filePath.append(\"amd64\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/7026/buggy-version/Selenium.com.jyou.selenium.util.SeleniumHelper.java", "BodyUseAPI": ["java.lang.StringBuffer.append(java.lang.String)"], "Fixed commit": "947048f2cc14d7585fe74eec8488330532f3b322", "Url": "https://api.github.com/repos/youkanzhao/SeleniumApp", "Date": "2013-07-15T09:48:16Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Object.getNodeValue()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (node == null) { return new javax.swing.JLabel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/5242/buggy-version/src.ch.thn.objectdebugger.ui.ObjectEventTreeCellRenderer.java", "BodyUseAPI": [], "Fixed commit": "4adea85fd2fb0bb07e61d66d9ce87bfe8452b4dc", "Url": "https://api.github.com/repos/thnaeff/ObjectEventDemo", "Date": "2015-06-27T04:51:46Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (largestNumber == 0) largestNumber = input.nextInt();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/5440/buggy-version/Bild-IT-Zadaci.zadaci_09_08_2016.Zadatak_04.java", "BodyUseAPI": [], "Fixed commit": "7632bb09f1fb393b4440eb3384ea167e71e9d4eb", "Url": "https://api.github.com/repos/vAonom/Bootcamp2016", "Date": "2016-08-11T14:31:34Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((foodHistory[0].getAdditionalCharge()) != 0) { vtilAdditionalCharge.setText(java.lang.String.valueOf(foodHistory[0].getAdditionalCharge())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/1495/buggy-version/app.src.main.java.com.theah64.hosteler.activities.MainActivity.java", "BodyUseAPI": ["com.theah64.hosteler.widgets.ValidTextInputLayout.setText(java.lang.String)", "foodHistory[0].getAdditionalCharge()", "java.lang.String.valueOf(foodHistory[0].getAdditionalCharge())"], "Fixed commit": "8b6e879abadcf63b53fddf5e9f2765c55e8fac58", "Url": "https://api.github.com/repos/theapache64/hosteler", "Date": "2017-11-19T07:39:05Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(char)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (indexOf_ > 0) { curStop = curStop.substring(0, curStop.indexOf('_')); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/8918/buggy-version/src.com.remulasce.lametroapp.LaMetroUtil.java", "BodyUseAPI": [], "Fixed commit": "a23017d0237846f805dd166cdf07c6fa09f87483", "Url": "https://api.github.com/repos/remulasce/metroapp", "Date": "2014-11-07T01:42:44Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (e.getGraph().getInEdges(e).isEmpty()) { endEventMap.get(e.getParentPool().getId()).add(p); }else { endEventMap.remove(e.getParentPool().getId()); net.removeArc(p, t); net.removePlace(p); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/4269/buggy-version/src.org.processmining.plugins.converters.bpmn2pn.BPMN2WorkflowSystemConverter.java", "BodyUseAPI": ["endEventMap.get(e.getParentPool().getId()).add(org.processmining.models.graphbased.directed.petrinet.elements.Place)", "java.util.Map<org.processmining.models.graphbased.NodeID, java.util.ArrayList<org.processmining.models.graphbased.directed.petrinet.elements.Place>>.remove(e.getParentPool().getId())", "java.util.Map<org.processmining.models.graphbased.NodeID, java.util.ArrayList<org.processmining.models.graphbased.directed.petrinet.elements.Place>>.get(e.getParentPool().getId())", "org.processmining.models.graphbased.directed.bpmn.elements.Event.getParentPool()", "e.getParentPool().getId()", "org.processmining.models.graphbased.directed.bpmn.elements.Event.getParentPool()", "e.getParentPool().getId()"], "Fixed commit": "d68c06d607a8c35a0a119363a4a5b8042552e2d9", "Url": "https://api.github.com/repos/DIUNIPI-ISTI/PetrinetUnfolding", "Date": "2016-08-02T08:49:23Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (e.getGraph().getInEdges(e).isEmpty()) { startEventMap.get(e.getParentPool().getId()).add(p); }else { startEventMap.remove(e.getParentPool().getId()); net.removeArc(p, t); net.removePlace(p); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/4269/buggy-version/src.org.processmining.plugins.converters.bpmn2pn.BPMN2WorkflowSystemConverter.java", "BodyUseAPI": ["e.getParentPool().getId()", "org.processmining.models.graphbased.directed.bpmn.elements.Event.getParentPool()", "e.getParentPool().getId()", "startEventMap.get(e.getParentPool().getId()).add(org.processmining.models.graphbased.directed.petrinet.elements.Place)", "java.util.Map<org.processmining.models.graphbased.NodeID, java.util.ArrayList<org.processmining.models.graphbased.directed.petrinet.elements.Place>>.get(e.getParentPool().getId())", "org.processmining.models.graphbased.directed.bpmn.elements.Event.getParentPool()", "java.util.Map<org.processmining.models.graphbased.NodeID, java.util.ArrayList<org.processmining.models.graphbased.directed.petrinet.elements.Place>>.remove(e.getParentPool().getId())"], "Fixed commit": "d68c06d607a8c35a0a119363a4a5b8042552e2d9", "Url": "https://api.github.com/repos/DIUNIPI-ISTI/PetrinetUnfolding", "Date": "2016-08-02T08:49:23Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((keyValue.length) >= 2) { result.put(keyValue[0].trim(), keyValue[1].trim()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/9152/buggy-version/docroot.WEB-INF.src.org.politaktiv.svgmanipulator.util.cssHelper.java", "BodyUseAPI": ["java.lang.String.trim()", "java.util.HashMap<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)", "java.lang.String.trim()"], "Fixed commit": "33a518be74c9b0343f32702c95b0da1604dae0d4", "Url": "https://api.github.com/repos/PolitAktiv/plakatohr", "Date": "2017-10-12T09:56:15Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (o == null) { throw new org.restlet.resource.ResourceException(org.restlet.data.Status.CLIENT_ERROR_NOT_FOUND, \"Object cannot be found\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/2522/buggy-version/seqware-webservice.src.main.java.net.sourceforge.seqware.webservice.resources.BasicResource.java", "BodyUseAPI": [], "Fixed commit": "bec40418b5e2f49c1342bec5e92a6309a090e694", "Url": "https://api.github.com/repos/SeqWare/seqware", "Date": "2012-11-08T22:24:16Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((message.getHeaders()) != null) { for (au.com.sensis.stubby.model.StubParam header : message.getHeaders()) { exchange.getResponseHeaders().add(header.getName(), header.getValue()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/8648/buggy-version/standalone.src.main.java.au.com.sensis.stubby.standalone.Transformer.java", "BodyUseAPI": ["au.com.sensis.stubby.model.StubResponse.getHeaders()"], "Fixed commit": "d26470107b21d5eacce04b1f222b20fc3631c464", "Url": "https://api.github.com/repos/Sensis/http-stub-server", "Date": "2013-02-15T04:59:26Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Properties.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (partitionColumns == null) partitionColumns = \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/1537/buggy-version/etl-driver.src.main.java.com.wipro.ats.bdre.im.etl.api.CreateRawBaseTables.java", "BodyUseAPI": [], "Fixed commit": "6cb707b6b6eff88ef3d3acb4e5997f1fa3a1b7e8", "Url": "https://api.github.com/repos/sriharshaboda/openbdre", "Date": "2016-01-21T10:40:11Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.mashupmedia.service.PhotoLibraryUpdateManagerImpl.getTakenOnDatefromMeta(java.io.File,com.drew.metadata.Metadata)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (takenOn != null) { photo.setTakenOn(takenOn); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/5248/buggy-version/src.main.java.org.mashupmedia.service.PhotoLibraryUpdateManagerImpl.java", "BodyUseAPI": ["org.mashupmedia.model.media.photo.Photo.setTakenOn(java.util.Date)"], "Fixed commit": "72582a738295e045b1b4ba7f1ab4be7c165ac694", "Url": "https://api.github.com/repos/andyinthecloud/mashupmedia", "Date": "2016-12-19T21:24:17Z"},
{"Line": "=>390", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentId) == (com.todoroo.astrid.actfm.sync.ActFmPreferenceService.userId())) assignedCriterion = com.todoroo.andlib.sql.Criterion.or(Task.USER_ID.eq(0), Task.USER_ID.eq(id)); else assignedCriterion = Task.USER_ID.eq(id);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/8561/buggy-version/astrid.plugin-src.com.todoroo.astrid.actfm.TagViewActivity.java", "BodyUseAPI": [], "Fixed commit": "e337f5bb23bec20d064da5dd959246c7ac6bc8ae", "Url": "https://api.github.com/repos/todoroo/astrid", "Date": "2011-11-29T23:03:30Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ektorp.http.HttpResponse.getContent()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (content != null) { responseBody = org.ektorp.http.StdResponseHandler.responseBodyAsNode(org.ektorp.http.IOUtils.toString(content)); }else { responseBody = com.fasterxml.jackson.databind.node.NullNode.getInstance(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/7347/buggy-version/org.ektorp.src.main.java.org.ektorp.http.StdResponseHandler.java", "BodyUseAPI": ["org.ektorp.http.StdResponseHandler.responseBodyAsNode(org.ektorp.http.IOUtils.toString(content))", "org.ektorp.http.IOUtils.toString(java.io.InputStream)"], "Fixed commit": "0b63ee4ba95eaa159722f72c867a7a6486695efb", "Url": "https://api.github.com/repos/helun/Ektorp", "Date": "2013-09-14T12:47:13Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!isNumber) writeMessage(channel, (\"Invalid argument: \" + (args.get(0))), IRCWriter);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/1269/buggy-version/Source.src.de.fro_ozen.cl4ire.commands.RemoveMessageCommand.java", "BodyUseAPI": [], "Fixed commit": "c0120b8456f74bd804e6922684a3709b1c9ef641", "Url": "https://api.github.com/repos/froozen/Claire", "Date": "2013-10-28T13:41:12Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((spiller.getViden()) < 0) { spiller.setViden(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/5087/buggy-version/app.src.main.java.com.example.asger.nepalspil.felter.Eksamen.java", "BodyUseAPI": ["com.example.asger.nepalspil.felter.Eksamen.1.setViden(int)"], "Fixed commit": "3f3a6672c42c60056626f93980364b76ab023519", "Url": "https://api.github.com/repos/AsgerStage/Nepalspil", "Date": "2017-01-12T21:00:09Z"},
{"Line": "=>1062", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.contains(Consts.PREFKEY_IS_TURN_IN_START_DIALOG)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!isAppRestored) { this.showDialog(com.buzzwords.TurnActivity.DIALOG_READY_ID); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/5473/buggy-version/src.com.buzzwords.TurnActivity.java", "BodyUseAPI": [], "Fixed commit": "1b71a2ac2f9e2c56559f6d40616ac3abbc3112a3", "Url": "https://api.github.com/repos/siramix/buzzwords", "Date": "2013-03-10T17:22:53Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (player.isPlaying()) { player.stop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/1649/buggy-version/android.src.nbeloglazov.geekalarm.android.activities.TaskActivity.java", "BodyUseAPI": ["android.media.MediaPlayer.stop()"], "Fixed commit": "1eb21d80fb0ff917751edb1d17025858fc3ca7bb", "Url": "https://api.github.com/repos/nbeloglazov/GeekAlarm", "Date": "2011-07-26T07:49:03Z"},
{"Line": "=>337", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((lines.length) > 1) && ((line.trim().length()) == 0)) line = \"//japid compiler: artificial line to avoid being treated as a terminating line\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/2899/buggy-version/app.cn.bran.japid.compiler.JapidAbstractCompiler.java", "BodyUseAPI": [], "Fixed commit": "165560371c0658d425d5e70c107db34d4808fae7", "Url": "https://api.github.com/repos/branaway/japid42", "Date": "2012-10-28T16:11:58Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((game.getActivePlayers().size()) == (game.getMinimumPlayers())) { game.start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/1586/buggy-version/src.main.java.me.otisdiver.otisarena.event.JoinQuit.java", "BodyUseAPI": ["me.otisdiver.otisarena.game.Game.start()"], "Fixed commit": "cdd2e92cd44c214a7378cb87a942073e8e21559c", "Url": "https://api.github.com/repos/TheBrianiac/OtisArena", "Date": "2017-01-16T21:17:11Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (command == null) { return new edu.dynamic.dynamiz.structure.ErrorFeedback(edu.dynamic.dynamiz.controller.Controller.COMMAND_UNKNOWN, input, edu.dynamic.dynamiz.controller.Controller.MSG_INVALIDCOMMAND); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/3507/buggy-version/src.edu.dynamic.dynamiz.controller.Controller.java", "BodyUseAPI": [], "Fixed commit": "3436c3525f0312d456324d41f3deb0b7d7c8dd3e", "Url": "https://api.github.com/repos/cs2103aug2014-w13-2j/main", "Date": "2014-10-24T04:01:14Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mEditTextPassword.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((username.length()) > 0) && ((password.length()) > 0)) { retrofit2.Call<okhttp3.ResponseBody> call = service.createNewUser(new me.abrahanfer.geniusfeed.utils.network.bodyclass.RegisterBundle(email, username, password)); call.enqueue(new retrofit2.Callback<okhttp3.ResponseBody>() { @java.lang.Override public void onResponse(retrofit2.Call<okhttp3.ResponseBody> call, retrofit2.Response<okhttp3.ResponseBody> response) { if (response.isSuccessful()) { android.util.Log.d(\"New user created\", \"Ok!!!!!!\"); requestToken(username, password); }else { dismissProgressBar(); } } @java.lang.Override public void onFailure(retrofit2.Call<okhttp3.ResponseBody> call, java.lang.Throwable t) { dismissProgressBar(); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/807/buggy-version/app.src.main.java.me.abrahanfer.geniusfeed.SignUpFragment.java", "BodyUseAPI": ["retrofit2.Call<okhttp3.ResponseBody>.enqueue(retrofit2.Callback<okhttp3.ResponseBody>)", "me.abrahanfer.geniusfeed.utils.network.GeniusFeedService.createNewUser(me.abrahanfer.geniusfeed.utils.network.bodyclass.RegisterBundle)", "me.abrahanfer.geniusfeed.SignUpFragment.4.requestToken(java.lang.String,java.lang.String)"], "Fixed commit": "c52bd2d90b6f0fd94c6fa65a778629ad270d8a5f", "Url": "https://api.github.com/repos/Abrahanfer/gf-android", "Date": "2016-10-23T11:47:09Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (value instanceof java.lang.Number) return new java.util.Date(((java.lang.Number) (value)).longValue()); else try { return ODatabaseRecordThreadLocal.INSTANCE.get().getStorage().getConfiguration().getDateFormatInstance().parse(value.toString()); } catch (java.text.ParseException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/8067/buggy-version/core.src.main.java.com.orientechnologies.orient.core.sql.functions.conversion.OSQLFunctionAsDate.java", "BodyUseAPI": ["java.lang.Object.toString()", "ODatabaseRecordThreadLocal.INSTANCE.get().getStorage().getConfiguration().getDateFormatInstance().parse(java.lang.String)"], "Fixed commit": "d65dcd76dede5e219beccf4ff3046768f427b889", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2014-02-25T15:13:02Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.isRepeatDaysEnabled()) { calendar.set(java.util.Calendar.DATE, ((rightNow.get(java.util.Calendar.DATE)) - 1)); }else if (this.isRepeatEveryBlankDaysEnabled()) { while ((calendar.getTimeInMillis()) > (rightNow.getTimeInMillis())) { calendar.add(java.util.Calendar.DATE, (-(getRepeatEveryBlankDays()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/605/buggy-version/LifeReminders.app.src.main.java.com.jdndeveloper.lifereminders.EventTypes.Notification.java", "BodyUseAPI": [], "Fixed commit": "a54e882faa2b84364d90c95414c72c96d087f424", "Url": "https://api.github.com/repos/JDNdeveloper/Off-By-One", "Date": "2015-03-11T17:32:48Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.todoroo.andlib.utility.AndroidUtilities.getSdkVersion()) < 14) requestWindowFeature(Window.FEATURE_NO_TITLE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/8160/buggy-version/astrid.plugin-src.com.todoroo.astrid.actfm.TagSettingsActivity.java", "BodyUseAPI": [], "Fixed commit": "9d31c9276ba46f31818e25f04831490b66c9deb0", "Url": "https://api.github.com/repos/todoroo/astrid", "Date": "2013-04-03T22:46:37Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(playground.isVisible())) && (!(result.isVisible()))) { getFragmentManager().beginTransaction().hide(result).show(playground).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/352/buggy-version/demo-playground.src.main.java.com.commonsware.cwac.cam2.playground.MainActivity.java", "BodyUseAPI": ["getFragmentManager().beginTransaction().hide(result).show(com.commonsware.cwac.cam2.playground.PlaygroundFragment)", "getFragmentManager().beginTransaction().hide(result).show(playground).commit()", "getFragmentManager().beginTransaction().hide(com.commonsware.cwac.cam2.playground.ResultFragment)"], "Fixed commit": "06e326c21125e630ff7672be717263e3b494e87d", "Url": "https://api.github.com/repos/commonsguy/cwac-cam2", "Date": "2015-07-22T11:13:41Z"},
{"Line": "=>324", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((values.size()) > 0) { kvBuff.addColumnsAndValues(key, columns, values); }else { getReporter().getCounter(brickhouse.hbase.MultiColumnPutUDAF.MultiColumnPutUDAFCounter.NULL_VALUES_INSERT_FAILURE).increment(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/2078/buggy-version/src.main.java.brickhouse.hbase.MultiColumnPutUDAF.java", "BodyUseAPI": ["brickhouse.hbase.MultiColumnPutUDAF.MultiColumnPutUDAFEvaluator.PutBuffer.addColumnsAndValues(byte[],java.util.List<byte[]>,java.util.List<byte[]>)"], "Fixed commit": "a15460a072410ff1517295faa16a2d8440afb34d", "Url": "https://api.github.com/repos/jeromebanks/brickhouse", "Date": "2015-05-01T20:48:30Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Object, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (com.orientechnologies.common.collection.OMultiValue.isMultiValue(command)) { for (java.lang.Object c : com.orientechnologies.common.collection.OMultiValue.getMultiValueIterable(command)) { if (commandAsString == null) commandAsString = c.toString(); else commandAsString += \";\" + (c.toString()); } }else commandAsString = command.toString();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/8475/buggy-version/server.src.main.java.com.orientechnologies.orient.server.network.protocol.http.command.post.OServerCommandPostBatch.java", "BodyUseAPI": ["com.orientechnologies.common.collection.OMultiValue.getMultiValueIterable(java.lang.Object)", "java.lang.Object.toString()"], "Fixed commit": "ea933287e31c1521a395c3ee8375798cb4e7590c", "Url": "https://api.github.com/repos/maggiolo00/orientdb", "Date": "2014-04-18T14:09:48Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.Integer.valueOf(ITEMS[1])) == 0) { firtree.setVisibility(View.INVISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/8598/buggy-version/app.src.main.java.com.minscie.sami.stepgame.FragmentWorld.java", "BodyUseAPI": [], "Fixed commit": "ed687e76c39702b9a67f618783f8c1f44326958d", "Url": "https://api.github.com/repos/Minscie/StepGame", "Date": "2017-05-09T17:52:36Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hypothesis.getBranches().size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (size > 1) { size--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/6532/buggy-version/eda132.src.decision_trees.DecisionTreeAlgorithm.java", "BodyUseAPI": [], "Fixed commit": "e85f7c95d3f6549eaca31d34b7580e08c9d7db7f", "Url": "https://api.github.com/repos/ShanSenanayake/eda132", "Date": "2015-03-09T10:05:36Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["decision_trees.DecisionTreeAlgorithm.estimatedValue(int,int,int,int)", "decision_trees.DecisionTreeAlgorithm.estimatedValue(int,int,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((estimateP > 0) || (estimateN > 0)) { deviationSum += ((java.lang.Math.pow((positive - estimateP), 2)) / estimateP) + ((java.lang.Math.pow((negative - estimateN), 2)) / estimateN); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/6532/buggy-version/eda132.src.decision_trees.DecisionTreeAlgorithm.java", "BodyUseAPI": ["java.lang.Math.pow(double,int)", "java.lang.Math.pow(double,int)"], "Fixed commit": "e85f7c95d3f6549eaca31d34b7580e08c9d7db7f", "Url": "https://api.github.com/repos/ShanSenanayake/eda132", "Date": "2015-03-09T10:05:36Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (node.getAttribute().toString().equals(\"'insu'\")) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/6532/buggy-version/eda132.src.decision_trees.DecisionTreeAlgorithm.java", "BodyUseAPI": [], "Fixed commit": "e85f7c95d3f6549eaca31d34b7580e08c9d7db7f", "Url": "https://api.github.com/repos/ShanSenanayake/eda132", "Date": "2015-03-09T10:05:36Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getResources().getStringArray(R.array.taskview_options)", "getActionBar().getSelectedNavigationIndex()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (choices[navIndex].equals(\"My Tasks\")) { mainController.checkoutPrivate(); }else if (choices[navIndex].equals(\"My Shared\")) { mainController.checkoutShared(); }else if (choices[navIndex].equals(\"Unanswered\")) { mainController.checkoutUnanswered(); }else if (choices[navIndex].equals(\"Other User's Tasks\")) { mainController.checkoutRemote(); }else if (choices[navIndex].equals(\"Random Tasks\")) { mainController.checkoutRandom(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/8999/buggy-version/src.com.example.cmput301.view.MainActivity.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "723f0c6c494af510e81cb27e783a7d9bb7b5be2e", "Url": "https://api.github.com/repos/CMPUT301F12T04/CMPUT301F12T04", "Date": "2012-11-28T02:19:36Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == index) { errors.add(i18n.getText(\"ru.mail.jira.plugins.disposition.manager.error.index.null\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/4285/buggy-version/src.main.java.ru.mail.jira.plugins.disposition.manager.DispositionManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "f7181b895b8e5ef26efb78e46084ddaa0201f7b1", "Url": "https://api.github.com/repos/grundic/jira-issues-disposition", "Date": "2012-06-18T09:15:19Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["br.com.companymanagement.employee.repository.UserRepository.findOne(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(resource.getPassword().equals(entity.getPassword()))) { resource.setPassword(new org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder().encode(resource.getPassword())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/744/buggy-version/src.main.java.br.com.companymanagement.employee.service.UserService.java", "BodyUseAPI": ["br.com.companymanagement.common.dto.UserDTO.setPassword(new org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder().encode(resource.getPassword()))", "org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder.encode(resource.getPassword())", "br.com.companymanagement.common.dto.UserDTO.getPassword()"], "Fixed commit": "1765aa998feac519832fdb66d10ccd770f0626b2", "Url": "https://api.github.com/repos/renanmarinsmachado/company-management-employee", "Date": "2016-10-26T11:07:00Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((getFragmentManager().findFragmentByTag(samuelpalmer.sensorautorotation.processes.ui.DialogActivity.TAG)) == null) samuelpalmer.sensorautorotation.processes.ui.DialogActivity.MyDialogFragment.newInstance(extras).show(getFragmentManager(), samuelpalmer.sensorautorotation.processes.ui.DialogActivity.TAG);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/4563/buggy-version/app.src.main.java.samuelpalmer.sensorautorotation.processes.ui.DialogActivity.java", "BodyUseAPI": ["samuelpalmer.sensorautorotation.processes.ui.DialogActivity.MyDialogFragment.show(getFragmentManager(),java.lang.String)"], "Fixed commit": "92f296e5622e3c2a7134aa482668bc9e19cd9959", "Url": "https://api.github.com/repos/sampalmer/sideways-mode", "Date": "2015-06-30T10:58:06Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["samuelpalmer.sensorautorotation.processes.ui.DialogActivity.MyDialogFragment.getActivity()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (activity != null) activity.finish();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/4563/buggy-version/app.src.main.java.samuelpalmer.sensorautorotation.processes.ui.DialogActivity.java", "BodyUseAPI": ["android.app.Activity.finish()"], "Fixed commit": "92f296e5622e3c2a7134aa482668bc9e19cd9959", "Url": "https://api.github.com/repos/sampalmer/sideways-mode", "Date": "2015-06-30T10:58:06Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (property.isUriProperty()) { varName = \"?uri\"; }else { varName = propertyVarMap.get(property); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/5130/buggy-version/vkgmt.src.main.java.cz.cuni.mff.vkgmt.connect.VirtuosoDataConnector.java", "BodyUseAPI": ["java.util.Map<cz.cuni.mff.vkgmt.data.common.Property, java.lang.String>.get(cz.cuni.mff.vkgmt.data.common.Property)"], "Fixed commit": "dbeb6f75ceda7cc647d3c8b4645c7a512743051a", "Url": "https://api.github.com/repos/ales-woska/vkget", "Date": "2016-12-08T12:24:12Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (areAtStartOfSuperSpace()) { skipWhitespace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/1238/buggy-version/src.com.millennialmedia.intellibot.psi.RobotLexer.java", "BodyUseAPI": [], "Fixed commit": "a4d1919128542f8e026b3509a74b989164d9caf4", "Url": "https://api.github.com/repos/lkirwan/intellibot", "Date": "2014-06-06T18:13:52Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (areAtStartOfSuperSpace()) { skipWhitespace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/1238/buggy-version/src.com.millennialmedia.intellibot.psi.RobotLexer.java", "BodyUseAPI": [], "Fixed commit": "a4d1919128542f8e026b3509a74b989164d9caf4", "Url": "https://api.github.com/repos/lkirwan/intellibot", "Date": "2014-06-06T18:13:52Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (areAtStartOfSuperSpace()) { skipWhitespace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/1238/buggy-version/src.com.millennialmedia.intellibot.psi.RobotLexer.java", "BodyUseAPI": [], "Fixed commit": "a4d1919128542f8e026b3509a74b989164d9caf4", "Url": "https://api.github.com/repos/lkirwan/intellibot", "Date": "2014-06-06T18:13:52Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(pomIncriminatedModule.exists())) { pomIncriminatedModule = new java.io.File(this.getPom()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/9104/buggy-version/repairnator.repairnator-pipeline.src.main.java.fr.inria.spirals.repairnator.process.step.ComputeSourceDir.java", "BodyUseAPI": [], "Fixed commit": "7944e37c8705d5537198e7fad948b6ef3c90e914", "Url": "https://api.github.com/repos/Spirals-Team/repairnator", "Date": "2017-04-27T17:07:43Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (is_collision) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/5723/buggy-version/src.org.jdesktop.wonderland.modules.oweditor.client.editor.gui.shape.sCollisionNotSelectedStrategy.java", "BodyUseAPI": [], "Fixed commit": "924a5418d65158fbde98e87151f79e9dca6bfde4", "Url": "https://api.github.com/repos/pweg/OWEditor", "Date": "2013-12-09T11:57:17Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.terasology.logic.behavior.tree.Task.update(float)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((newStatus == (Status.FAILURE)) || (newStatus == (Status.SUCCESS))) { onTerminate(status); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/5323/buggy-version/engine.src.main.java.org.terasology.logic.behavior.tree.Task.java", "BodyUseAPI": [], "Fixed commit": "93c70a3ec7c0e1d6bb530e2da1fa12077c2e0aab", "Url": "https://api.github.com/repos/engiValk/Terasology", "Date": "2016-03-19T05:20:31Z"},
{"Line": "=>584", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((sourceKey % (sideDimension)) == 0) || (sourceKey == 0)) { findLeftConnection = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/7509/buggy-version/src.worldcomponents.WumpusWorld.java", "BodyUseAPI": [], "Fixed commit": "be9095a363d04b1161b4f336ee84f0ffe11e413f", "Url": "https://api.github.com/repos/Aussiemon/CSCI446-WumpusWorldAI", "Date": "2016-10-05T01:12:03Z"},
{"Line": "=>414", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (saxError) { controler.displayPopup((\"The KGIF file has an XML error; \\n \" + \"probably the second line must be removed.\")); }else { new de.x28hd.tool.DwzImport(inputXml, controler); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/8527/buggy-version/src.de.x28hd.tool.ImportDirector.java", "BodyUseAPI": [], "Fixed commit": "0257cc0f89a9917e5d2a4d3a0462c7bac6040661", "Url": "https://api.github.com/repos/x28de/mytool", "Date": "2016-11-19T13:26:42Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((dwz.getDocumentElement()) != null) { graphContainer = dwz.getElementsByTagName(\"graph\"); }else { controler.displayPopup((\"The KGIF file has an XML error; \\n \" + \"maybe the \\nsecond line must be removed.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/8527/buggy-version/src.de.x28hd.tool.DwzImport.java", "BodyUseAPI": [], "Fixed commit": "0257cc0f89a9917e5d2a4d3a0462c7bac6040661", "Url": "https://api.github.com/repos/x28de/mytool", "Date": "2016-11-19T13:26:42Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gov.anl.aps.cdb.portal.controllers.extensions.ItemEnforcedPropertiesDomainCatalogController.getCurrent()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((catalogItem.getInventoryItemList()) != null) { for (gov.anl.aps.cdb.portal.model.db.entities.Item inventoryItem : catalogItem.getInventoryItemList()) { inventoryEnforcedPropertiesController.setCurrent(inventoryItem); inventoryEnforcedPropertiesController.prepareSaveChangesMadeToEnforcedPropertiesForCurrent(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/8194/buggy-version/src.java.CdbWebPortal.src.java.gov.anl.aps.cdb.portal.controllers.extensions.ItemEnforcedPropertiesDomainCatalogController.java", "BodyUseAPI": ["gov.anl.aps.cdb.portal.model.db.entities.ItemDomainCatalog.getInventoryItemList()"], "Fixed commit": "a6e1ebb5567e1fc99087658d4e6708bee60ebe29", "Url": "https://api.github.com/repos/iTerminate/Component.DB", "Date": "2017-07-07T14:23:10Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(hasColumn(\"Marketplace_Module\", \"bundleSymbolicName\"))) { runSQL((\"alter table Marketplace_Module add bundleSymbolicName \" + \"VARCHAR(500)\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/587/buggy-version/marketplace-service.src.main.java.com.liferay.marketplace.internal.upgrade.v1_0_0.UpgradeModule.java", "BodyUseAPI": [], "Fixed commit": "c5891ae150506d93b0cabcb6823176197e0399ea", "Url": "https://api.github.com/repos/liferay/com-liferay-marketplace", "Date": "2017-02-13T10:01:06Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(hasColumn(\"Marketplace_Module\", \"bundleVersion\"))) { runSQL(\"alter table Marketplace_Module add bundleVersion VARCHAR(75)\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/587/buggy-version/marketplace-service.src.main.java.com.liferay.marketplace.internal.upgrade.v1_0_0.UpgradeModule.java", "BodyUseAPI": [], "Fixed commit": "c5891ae150506d93b0cabcb6823176197e0399ea", "Url": "https://api.github.com/repos/liferay/com-liferay-marketplace", "Date": "2017-02-13T10:01:06Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (category.startsWith(\"/\")) { return category.substring(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/6109/buggy-version/platform-api.che-core-api-project.src.main.java.org.eclipse.che.api.project.shared.EnvironmentId.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "35c0682656066915bb1272de1af8709f67dca5b7", "Url": "https://api.github.com/repos/codenvy-legacy/che-core", "Date": "2015-05-07T12:04:04Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dateDiff > 80000000) || (dateDiff < (-80000000))) { datePickerFrom.setMinDate(dateFrom.getTimeInMillis()); datePickerTo.setMinDate(dateFrom.getTimeInMillis()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/8815/buggy-version/app.src.main.java.com.catchingnow.tinyclipboardmanager.ActivityNewBackup.java", "BodyUseAPI": [], "Fixed commit": "7c865fdfc32bc14e1b9ba1788082aa7464009c8d", "Url": "https://api.github.com/repos/heruoxin/Clip-Stack", "Date": "2015-02-19T04:38:51Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lastPressChar) != null) lastPressChar.clicked = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/1634/buggy-version/src.main.java.MainApplet.java", "BodyUseAPI": [], "Fixed commit": "7af8b0a644fe47ab2b3e711e064737227f250fd7", "Url": "https://api.github.com/repos/EvaArevalo/SoftwareStudioAssignment6", "Date": "2016-05-09T14:30:04Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (item == null) { return \"0\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/7388/buggy-version/src.net.arcanerealm.arcanelib.ItemSLAPI.java", "BodyUseAPI": [], "Fixed commit": "fd7d76c6995a6c9600e526adaf0f093577fa6d87", "Url": "https://api.github.com/repos/exload/ArcaneLib", "Date": "2013-11-10T05:20:38Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.dianping.spider.util.support.HttpClientUtils.sendGet(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (response != null) { try { try { org.apache.http.HttpEntity entity = response.getEntity(); java.lang.String body = org.apache.http.util.EntityUtils.toString(entity); result = new org.json.JSONArray(body); } finally { response.close(); } } catch (java.lang.Exception e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/9227/buggy-version/src.main.java.com.dianping.spider.util.support.PoiUtils.java", "BodyUseAPI": ["org.apache.http.client.methods.CloseableHttpResponse.getEntity()", "org.apache.http.client.methods.CloseableHttpResponse.close()"], "Fixed commit": "50c5b4d623f554211e299a5da10ef62d5d968ee1", "Url": "https://api.github.com/repos/zhongliangjun1/movie-spider", "Date": "2014-01-21T06:49:01Z"},
{"Line": "=>391", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.support.v4.view.ViewPager.getAdapter()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (adapter == null) { throw new java.lang.IllegalStateException(\"ViewPager needs to have an adapter set up\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/3421/buggy-version/library.src.main.java.com.guerinet.materialtabs.TabLayout.java", "BodyUseAPI": [], "Fixed commit": "9869416b707cb9ef7fb7dbc88ed1f05d21b273b8", "Url": "https://api.github.com/repos/jguerinet/material-tabs", "Date": "2015-05-23T15:21:05Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((thePortal) != null) thePortal.removeAllPortlets();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/3636/buggy-version/src.com.scholastic.sbam.client.uiobjects.uiapp.AppWorkSpace.java", "BodyUseAPI": [], "Fixed commit": "9422db5148d1dee31dc62c4e02395ac8ecc48b79", "Url": "https://api.github.com/repos/blacatena/SBAM-Dev", "Date": "2011-05-03T23:03:24Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.unnsvc.rhena.common.traversal.FlatTreeFrame.getSelectionType()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (currentSelectionType.equals(ESelectionType.COMPONENT)) { if (currentModule.getIdentifier().getComponentName().equals(dependency.getEntryPoint().getTarget().getComponentName())) { if (!(processed.contains(dependency.getEntryPoint()))) { tracker.pushUnique(new com.unnsvc.rhena.common.traversal.FlatTreeFrame(dependency.getEntryPoint(), dependency.getTraverseType(), currentSelectionType)); break edgeProcessing; }else { onRelationship(currentModule, dependency.getEntryPoint()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/102/buggy-version/com.unnsvc.rhena.common.src.main.java.com.unnsvc.rhena.common.traversal.AbstractFlatTreeWalker.java", "BodyUseAPI": ["com.unnsvc.rhena.common.utils.UniqueStack<com.unnsvc.rhena.common.traversal.FlatTreeFrame>.pushUnique(com.unnsvc.rhena.common.traversal.FlatTreeFrame)"], "Fixed commit": "cfd964ffcdb03b2e89d5dd0c8fb349f73d3cefd2", "Url": "https://api.github.com/repos/unnservice/com.unnsvc.rhena", "Date": "2017-04-23T03:18:10Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(processed.contains(dependency.getEntryPoint()))) { tracker.pushUnique(new com.unnsvc.rhena.common.traversal.FlatTreeFrame(dependency.getEntryPoint(), dependency.getTraverseType(), currentSelectionType)); break edgeProcessing; }else { onRelationship(currentModule, dependency.getEntryPoint()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/102/buggy-version/com.unnsvc.rhena.common.src.main.java.com.unnsvc.rhena.common.traversal.AbstractFlatTreeWalker.java", "BodyUseAPI": ["com.unnsvc.rhena.common.utils.UniqueStack<com.unnsvc.rhena.common.traversal.FlatTreeFrame>.pushUnique(com.unnsvc.rhena.common.traversal.FlatTreeFrame)", "com.unnsvc.rhena.common.model.IRhenaEdge.getTraverseType()", "com.unnsvc.rhena.common.traversal.AbstractFlatTreeWalker.onRelationship(com.unnsvc.rhena.common.model.IRhenaModule,dependency.getEntryPoint())", "com.unnsvc.rhena.common.model.IRhenaEdge.getEntryPoint()", "com.unnsvc.rhena.common.model.IRhenaEdge.getEntryPoint()"], "Fixed commit": "cfd964ffcdb03b2e89d5dd0c8fb349f73d3cefd2", "Url": "https://api.github.com/repos/unnservice/com.unnsvc.rhena", "Date": "2017-04-23T03:18:10Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(processed.contains(dependency.getEntryPoint()))) { tracker.pushUnique(new com.unnsvc.rhena.common.traversal.FlatTreeFrame(dependency.getEntryPoint(), dependency.getTraverseType(), currentSelectionType)); break edgeProcessing; }else { onRelationship(currentModule, dependency.getEntryPoint()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/102/buggy-version/com.unnsvc.rhena.common.src.main.java.com.unnsvc.rhena.common.traversal.AbstractFlatTreeWalker.java", "BodyUseAPI": ["com.unnsvc.rhena.common.model.IRhenaEdge.getEntryPoint()", "com.unnsvc.rhena.common.model.IRhenaEdge.getTraverseType()", "com.unnsvc.rhena.common.traversal.AbstractFlatTreeWalker.onRelationship(com.unnsvc.rhena.common.model.IRhenaModule,dependency.getEntryPoint())", "com.unnsvc.rhena.common.model.IRhenaEdge.getEntryPoint()", "com.unnsvc.rhena.common.utils.UniqueStack<com.unnsvc.rhena.common.traversal.FlatTreeFrame>.pushUnique(com.unnsvc.rhena.common.traversal.FlatTreeFrame)"], "Fixed commit": "cfd964ffcdb03b2e89d5dd0c8fb349f73d3cefd2", "Url": "https://api.github.com/repos/unnservice/com.unnsvc.rhena", "Date": "2017-04-23T03:18:10Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (node == null) { node = net.logstash.logback.encoder.LogstashEncoder.MAPPER.createArrayNode(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/212/buggy-version/src.main.java.net.logstash.logback.encoder.LogstashEncoder.java", "BodyUseAPI": [], "Fixed commit": "297c1f08d0d6bef4d96301d9fddd4345e582e384", "Url": "https://api.github.com/repos/mpecan/logstash-logback-encoder", "Date": "2013-12-30T11:11:07Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (symbolIndex == 0) { return new org.jgll.grammar.slot.specialized.FirstTokenSlot(((bodyGrammarSlotId)++), nodeId, label, previous, regularExpression, tokenID, preConditions, postConditions); }else if ((symbolIndex == 1) && ((body.size()) == 2)) { return new org.jgll.grammar.slot.specialized.SecondAndLastTokenSlot(((bodyGrammarSlotId)++), nodeId, label, previous, regularExpression, tokenID, preConditions, postConditions); }else { return new org.jgll.grammar.slot.TokenGrammarSlot(((bodyGrammarSlotId)++), nodeId, label, previous, regularExpression, tokenID, preConditions, postConditions); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/64/buggy-version/src.org.jgll.grammar.slot.factory.GrammarSlotFactoryImpl.java", "BodyUseAPI": [], "Fixed commit": "a0f3ef30ee29a785457ba5d709de1ee6e44a4306", "Url": "https://api.github.com/repos/cwi-swat/iguana", "Date": "2014-03-22T01:46:31Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (symbolIndex == 1) { return new org.jgll.grammar.slot.specialized.SecondNonterminalSlot(((bodyGrammarSlotId)++), nodeId, label, previous, nonterminal, preConditions, postConditions); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/64/buggy-version/src.org.jgll.grammar.slot.factory.GrammarSlotFactoryImpl.java", "BodyUseAPI": [], "Fixed commit": "a0f3ef30ee29a785457ba5d709de1ee6e44a4306", "Url": "https://api.github.com/repos/cwi-swat/iguana", "Date": "2014-03-22T01:46:31Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tileEntity.getWorld().getBlockState(tileEntity.getPos())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!((state.getBlock()) instanceof mcjty.immcraft.blocks.generic.GenericBlock)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/3002/buggy-version/src.main.java.mcjty.immcraft.rendering.HandleTESR.java", "BodyUseAPI": [], "Fixed commit": "2cfa1785ac3a95626d405939e095388db647c32b", "Url": "https://api.github.com/repos/McJtyMods/ImmersiveCraft", "Date": "2016-04-06T06:52:06Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.player.PlayerInteractEvent.getItem()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (getPlugin().getPluginSettings().getSocketGemMaterials().contains(itemInHand.getData())) { event.setUseItemInHand(Event.Result.DENY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/815/buggy-version/src.main.java.com.conventnunnery.plugins.mythicdrops.listeners.ItemListener.java", "BodyUseAPI": [], "Fixed commit": "79f70b78e20f1d5f72bb1162c81d0f41d8cbe07f", "Url": "https://api.github.com/repos/Nunnery/MythicDrops", "Date": "2013-05-20T12:21:26Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((o2.getDate2()) == null) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/8707/buggy-version/app.src.main.java.homework5.rssreader.RSS.UpdateRSSList.java", "BodyUseAPI": [], "Fixed commit": "b6f97284891c3d9c1fb7cdd3f71835d78141c4e0", "Url": "https://api.github.com/repos/Au-Rikka/RSSReader", "Date": "2015-12-29T11:03:43Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((o1.getDate2()) == null) { return 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/8707/buggy-version/app.src.main.java.homework5.rssreader.RSS.UpdateRSSList.java", "BodyUseAPI": [], "Fixed commit": "b6f97284891c3d9c1fb7cdd3f71835d78141c4e0", "Url": "https://api.github.com/repos/Au-Rikka/RSSReader", "Date": "2015-12-29T11:03:43Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((record.getCausalCorrespondences()) != null) { if ((previousResult.getCausalCorrespondences()) != null) { previousResult.setCausalCorrespondences(previousResult.getCausalCorrespondences().append(record.getCausalCorrespondences())); }else { previousResult.setCausalCorrespondences(record.getCausalCorrespondences().copy()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/4281/buggy-version/winter-framework.src.main.java.de.uni_mannheim.informatik.dws.winter.matching.aggregators.CorrespondenceAggregator.java", "BodyUseAPI": ["de.uni_mannheim.informatik.dws.winter.model.Correspondence<TypeA, TypeB>.setCausalCorrespondences(record.getCausalCorrespondences().copy())", "record.getCausalCorrespondences().copy()", "previousResult.getCausalCorrespondences().append(record.getCausalCorrespondences())", "de.uni_mannheim.informatik.dws.winter.model.Correspondence<TypeA, TypeB>.getCausalCorrespondences()", "de.uni_mannheim.informatik.dws.winter.model.Correspondence<TypeA, TypeB>.setCausalCorrespondences(previousResult.getCausalCorrespondences().append(record.getCausalCorrespondences()))", "de.uni_mannheim.informatik.dws.winter.model.Correspondence<TypeA, TypeB>.getCausalCorrespondences()"], "Fixed commit": "5453ada38b79b724d6b984454dfbedaefe0de88e", "Url": "https://api.github.com/repos/olehmberg/winter", "Date": "2017-10-09T11:52:54Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (active.get()) { behavior.handle(ne, status); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/1702/buggy-version/src.main.java.org.thingml.java.Component.java", "BodyUseAPI": [], "Fixed commit": "77ad58300a3325ff95a85a11065511c48cbcab6d", "Url": "https://api.github.com/repos/SINTEF-9012/jasm", "Date": "2017-08-07T09:20:11Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dotPhrescoDirName != null) { rootModulePath = mavenProjectInfo.getBaseDir().getParent(); }else { rootModulePath = mavenProjectInfo.getBaseDir().getPath(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/2198/buggy-version/android-phresco-plugin.src.main.java.com.photon.phresco.plugins.android.Package.java", "BodyUseAPI": [], "Fixed commit": "2c259805af5f1cd04d108af305f50bd439984393", "Url": "https://api.github.com/repos/photon-infotech/plugins", "Date": "2014-07-08T08:50:52Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jbpm.graph.exe.ExecutionContext.getToken()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((token.getParent()) != null) token.end(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/5373/buggy-version/core.src.main.java.org.jbpm.graph.node.Join.java", "BodyUseAPI": ["org.jbpm.graph.exe.Token.end(boolean)"], "Fixed commit": "2e478821f8d717b9d0a4f68d3c9a80e4fd08e63f", "Url": "https://api.github.com/repos/petrandreev/jBPM3", "Date": "2014-11-08T14:23:26Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.example.rent.zulicywiesciapp.utils.SessionManager.getInstance().getUser()) != null) { com.example.rent.zulicywiesciapp.retrofit.ApiManager.getAuthor(com.example.rent.zulicywiesciapp.utils.SessionManager.getInstance().getUser().getAuthorID(), this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/2452/buggy-version/app.src.main.java.com.example.rent.zulicywiesciapp.MyNewsActivity.java", "BodyUseAPI": [], "Fixed commit": "ca32f13b2bfc30884e81f9792c855f0d0dac160d", "Url": "https://api.github.com/repos/rejnowskimikolaj/WotSOnTheStreet", "Date": "2017-04-11T15:55:06Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.mongodb.morphia.mapping.MappedClass.getAnnotations(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (convertersList != null) { for (java.lang.annotation.Annotation a : convertersList) { final org.mongodb.morphia.annotations.Converters c = ((org.mongodb.morphia.annotations.Converters) (a)); if (c != null) { for (final java.lang.Class<? extends org.mongodb.morphia.converters.TypeConverter> clazz : c.value()) { if (!(getConverters().isRegistered(clazz))) { getConverters().addConverter(clazz); } } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/2386/buggy-version/morphia.src.main.java.org.mongodb.morphia.mapping.Mapper.java", "BodyUseAPI": [], "Fixed commit": "b5b23ce544c923fe430aec7288c3e095e7b8c314", "Url": "https://api.github.com/repos/Eemuli/morphia", "Date": "2014-08-06T20:32:39Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (linked == (-1)) { return java.util.Optional.empty(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/8672/buggy-version/server.src.main.java.com.voxelwind.server.game.inventories.VoxelwindBasePlayerInventory.java", "BodyUseAPI": [], "Fixed commit": "e22635bad4d630c3dce9150f96f380d571014e08", "Url": "https://api.github.com/repos/voxelwind/voxelwind", "Date": "2016-09-16T21:00:00Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((file) != null) { return file.getAbsolutePath(); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/6906/buggy-version/src.com.tatuas.android.bitmapview.BitmapView.java", "BodyUseAPI": [], "Fixed commit": "16d390cd901280a68bcb24bed67ea3c09f693c53", "Url": "https://api.github.com/repos/tatuas/AndroidBitmapView", "Date": "2014-01-21T15:03:02Z"},
{"Line": "=>295", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.gtaun.shoebill.common.dialog.ListDialogItem.getItemText()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isEmpty(text)) text = \"-\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/5043/buggy-version/src.main.java.net.gtaun.shoebill.common.dialog.ListDialog.java", "BodyUseAPI": [], "Fixed commit": "fac4f15c85178b1e9775a295afcbb83b4f2ebad7", "Url": "https://api.github.com/repos/Shoebill/shoebill-common", "Date": "2014-06-01T10:07:07Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args.length) != 1) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/5668/buggy-version/Lab3.src.util.Main.java", "BodyUseAPI": [], "Fixed commit": "b90b790a637460fb7a76e81b8e3ad1d48772d7fb", "Url": "https://api.github.com/repos/doczir/RIFL", "Date": "2015-03-11T08:20:43Z"},
{"Line": "=>433", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((xsubnode.getTypeQName()) != null) { java.lang.Class explicitParamType = getSchemaRegistry().determineCompileTimeClass(xsubnode.getTypeQName()); if (explicitParamType != null) { paramType = explicitParamType; }else { com.evolveum.midpoint.prism.parser.PrismBeanConverter.LOGGER.warn(((\"Unknown type name: \" + (xsubnode.getTypeQName())) + \", ignoring it.\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/7718/buggy-version/infra.prism.src.main.java.com.evolveum.midpoint.prism.parser.PrismBeanConverter.java", "BodyUseAPI": ["com.evolveum.midpoint.prism.schema.SchemaRegistry.determineCompileTimeClass(xsubnode.getTypeQName())", "com.evolveum.midpoint.util.logging.Trace.warn(((\"Unknown type name: \" + (xsubnode.getTypeQName())) + \", ignoring it.\"))", "com.evolveum.midpoint.prism.xnode.XNode.getTypeQName()", "com.evolveum.midpoint.prism.xnode.XNode.getTypeQName()"], "Fixed commit": "285940dad331e95154d3f225725b0b580a760c96", "Url": "https://api.github.com/repos/Evolveum/midpoint", "Date": "2014-04-11T23:59:56Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.washingtonpost.mongo.dropwizard.MongoFactory.buildClient()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (client == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/4925/buggy-version/src.main.java.com.washingtonpost.mongo.dropwizard.MongoFactory.java", "BodyUseAPI": [], "Fixed commit": "e5d6627bc9d1616c3753f4b4a50dea6fde567414", "Url": "https://api.github.com/repos/washingtonpost/dropwizard-mongo-module", "Date": "2016-06-21T17:27:53Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(worldIn.isRemote)) { worldIn.spawnEntity(entitychicken); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/7335/buggy-version/src.main.java.minecraftbyexample.mbe01_block_simple.BlockSimple.java", "BodyUseAPI": ["net.minecraft.world.World.spawnEntity(net.minecraft.entity.passive.EntityChicken)"], "Fixed commit": "588a64c2d29c59c89638db082431a7b7fd0edcbc", "Url": "https://api.github.com/repos/chicken3600/FirstMod", "Date": "2017-07-06T19:08:22Z"},
{"Line": "=>420", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((es.sandwatch.httprequests.HttpRequest.sRequestUrlParams) != null) { for (java.util.Map.Entry<java.lang.String, java.lang.String> parameter : es.sandwatch.httprequests.HttpRequest.sRequestUrlParams.entrySet()) { url += (!(url.contains(\"?\"))) ? \"?\" : \"&\"; url += ((parameter.getKey()) + \"=\") + (parameter.getValue()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/4750/buggy-version/http-requests.src.main.java.es.sandwatch.httprequests.HttpRequest.java", "BodyUseAPI": [], "Fixed commit": "ab28cbf7158ccf990a1b9b445afaf877bdac7b10", "Url": "https://api.github.com/repos/Sandwatch/HTTP-Requests", "Date": "2016-01-24T06:29:08Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (index > (tl.size())) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/5806/buggy-version/src.gui.PlayerInfo.java", "BodyUseAPI": [], "Fixed commit": "ba3494697c040764e43f46aab8551d3c9ffd1122", "Url": "https://api.github.com/repos/zlenyk/Neuroshima", "Date": "2014-06-04T17:08:06Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (t == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/443/buggy-version/XTEXT.eu.quanticol.carma.core.src.eu.quanticol.carma.core.typing.CarmaType.java", "BodyUseAPI": [], "Fixed commit": "b3fcd60c8617c994fc91e2db17b96f89a0cc531b", "Url": "https://api.github.com/repos/Quanticol/CARMA", "Date": "2017-03-10T06:59:52Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.pageIndices) != null) && (this.pageIndices.isEmpty())) this.pageIndices = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/7745/buggy-version/src.main.java.eu.transkribus.core.model.builder.CommonExportPars.java", "BodyUseAPI": [], "Fixed commit": "1381f12da05f03d3687e6d2bd2306e5cde3d3a89", "Url": "https://api.github.com/repos/Transkribus/TranskribusCore", "Date": "2017-03-30T21:14:29Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (useLastInterval == 0) (this._intervals)++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/4191/buggy-version/src.main.java.net.eithon.plugin.stats.logic.TimeStatistics.java", "BodyUseAPI": [], "Fixed commit": "45a20ed6da1c6f4293a9b6ca51f37202b4b23414", "Url": "https://api.github.com/repos/EithonNetwork/EithonStats", "Date": "2015-05-03T07:49:57Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((field.firstSentenceTags().length) == 1) { firstSentence = field.firstSentenceTags()[0].text(); }else if ((java.util.Arrays.stream(field.firstSentenceTags()).filter(( tag) -> !(\"Text\".equals(tag.name()))).count()) == 1) { firstSentence = ((((field.firstSentenceTags()[0].text()) + \"<code>\") + (field.firstSentenceTags()[1].text())) + \"</code>\") + (field.firstSentenceTags()[2].text()); }else { final java.util.List<com.sun.javadoc.Tag> tags = java.util.Arrays.asList(field.firstSentenceTags()); final java.lang.String joinedTags = tags.stream().map(( tag) -> tag.toString()).collect(java.util.stream.Collectors.joining(\"\\\", \\\"\", \"[\\\"\", \"\\\"]\")); final java.lang.String message = java.lang.String.format(java.util.Locale.ROOT, \"Should be only one tag for %s. Tags %s.\", field.toString(), joinedTags); throw new java.lang.IllegalArgumentException(message); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/7849/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.doclets.TokenTypesDoclet.java", "BodyUseAPI": ["com.sun.javadoc.Tag.text()", "com.sun.javadoc.Tag.text()", "com.sun.javadoc.FieldDoc.toString()", "java.util.stream.Stream<com.sun.javadoc.Tag>.filter(java.util.function.Predicate<? super com.sun.javadoc.Tag>)", "com.sun.javadoc.FieldDoc.firstSentenceTags()", "com.sun.javadoc.FieldDoc.firstSentenceTags()", "com.sun.javadoc.FieldDoc.firstSentenceTags()", "java.util.stream.Stream<com.sun.javadoc.Tag>.count()", "com.sun.javadoc.Tag.text()", "java.util.Arrays.asList(com.sun.javadoc.Tag[])", "com.sun.javadoc.Tag.text()", "com.sun.javadoc.FieldDoc.firstSentenceTags()", "java.lang.String.format(java.util.Locale,java.lang.String,java.lang.String,java.lang.String)", "com.sun.javadoc.FieldDoc.firstSentenceTags()", "java.util.Arrays.stream(com.sun.javadoc.Tag[])", "com.sun.javadoc.FieldDoc.firstSentenceTags()"], "Fixed commit": "f3f626c16e91617fa019fabc630e53e3219c36ad", "Url": "https://api.github.com/repos/Nimfadora/checkstyle", "Date": "2017-08-19T13:38:48Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.javaparser.symbolsolver.javaparsermodel.contexts.Type.asReferenceType()", "com.github.javaparser.symbolsolver.javaparsermodel.contexts.Type.asReferenceType()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((!(sourceRefType.isRawType())) && (!(targetRefType.isRawType()))) { for (int i = 0; i < (sourceRefType.typeParametersValues().size()); i++) { inferTypes(sourceRefType.typeParametersValues().get(i), targetRefType.typeParametersValues().get(i), mappings); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/37/buggy-version/java-symbol-solver-core.src.main.java.com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.java", "BodyUseAPI": ["com.github.javaparser.symbolsolver.javaparsermodel.contexts.ReferenceType.typeParametersValues()", "com.github.javaparser.symbolsolver.javaparsermodel.contexts.ReferenceType.typeParametersValues()", "sourceRefType.typeParametersValues().get(int)", "com.github.javaparser.symbolsolver.javaparsermodel.contexts.MethodCallExprContext.inferTypes(sourceRefType.typeParametersValues().get(i),targetRefType.typeParametersValues().get(i),java.util.Map<com.github.javaparser.symbolsolver.model.declarations.TypeParameterDeclaration, com.github.javaparser.symbolsolver.javaparsermodel.contexts.Type>)", "com.github.javaparser.symbolsolver.javaparsermodel.contexts.ReferenceType.typeParametersValues()", "targetRefType.typeParametersValues().get(int)", "sourceRefType.typeParametersValues().size()"], "Fixed commit": "76f1b28ce778b118897be9905f6db83bb45e851b", "Url": "https://api.github.com/repos/javaparser/javasymbolsolver", "Date": "2017-01-05T16:56:36Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Gdx.files.absolute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(projectFile.exists())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/7426/buggy-version/editor.core.src.main.java.es.eucm.ead.editor.view.builders.mockup.InitialScreen.java", "BodyUseAPI": [], "Fixed commit": "41f612e69f91d210cebcc9748ee503c36d602c35", "Url": "https://api.github.com/repos/e-ucm/ead", "Date": "2014-02-19T18:23:05Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (weightValue instanceof java.lang.Double) { throw new java.lang.IllegalStateException(\"The weight is static, call getWeight() instead\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/250/buggy-version/store.src.main.java.org.gephi.graph.store.EdgeImpl.java", "BodyUseAPI": [], "Fixed commit": "6598fc6cd7d445ccd422789bd419ea15e55187ad", "Url": "https://api.github.com/repos/gephi/graphstore", "Date": "2015-08-29T21:25:47Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (currentItem == (io.github.loop_x.yummywakeup.module.UnlockTypeModule.UnlockTypeActivity.MODE_NORMAL)) { viewPager.setCurrentItem(((io.github.loop_x.yummywakeup.module.UnlockTypeModule.UnlockTypeActivity.MODE_NORMAL) + 1)); mFistInit = true; viewPager.setCurrentItem(io.github.loop_x.yummywakeup.module.UnlockTypeModule.UnlockTypeActivity.MODE_NORMAL); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/8521/buggy-version/app.src.main.java.io.github.loop_x.yummywakeup.module.UnlockTypeModule.UnlockTypeActivity.java", "BodyUseAPI": ["android.support.v4.view.ViewPager.setCurrentItem(int)"], "Fixed commit": "be555c75298ab2976b19672dea54cc3d0e4b4731", "Url": "https://api.github.com/repos/Loop-X/X-Alarm", "Date": "2016-06-29T03:28:40Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isValidFilesystem) { break; }else if (retryCount < ((voldemort.store.readonly.fetcher.HdfsFetcher.NUM_RETRIES) - 1)) { voldemort.store.readonly.fetcher.HdfsFetcher.logger.error(\"Could not get a valid Filesystem object. Trying again.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/8489/buggy-version/contrib.hadoop-store-builder.src.java.voldemort.store.readonly.fetcher.HdfsFetcher.java", "BodyUseAPI": [], "Fixed commit": "5ab1db3049f5f5a2359ac8974045672c44e86067", "Url": "https://api.github.com/repos/icefury71/voldemort", "Date": "2013-02-19T22:40:42Z"},
{"Line": "=>429", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((fullTitle.length) >= 4) shortVersion = ((fullTitle[1]) + (fullTitle[2])) + (fullTitle[3]); else shortVersion = (fullTitle[1]) + (fullTitle[2]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/1148/buggy-version/TekkitRestrict.src.net.h31ix.updater.Updater.java", "BodyUseAPI": [], "Fixed commit": "e343a0becc7edd57eb16d3a2119ba2868be36ab9", "Url": "https://api.github.com/repos/EterniaLogic/TekkitRestrict", "Date": "2013-07-20T14:24:39Z"},
{"Line": "=>325", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (obj instanceof org.rapidcontext.core.js.DataWrapper) { return org.rapidcontext.core.js.JsSerializer.unwrap(((org.rapidcontext.core.js.DataWrapper) (obj)).getData()); }else if (obj instanceof org.mozilla.javascript.NativeArray) { org.mozilla.javascript.NativeArray nativeArr = ((org.mozilla.javascript.NativeArray) (obj)); int length = ((int) (nativeArr.getLength())); org.rapidcontext.core.data.Array arr = new org.rapidcontext.core.data.Array(length); for (int i = 0; i < length; i++) { arr.set(i, org.rapidcontext.core.js.JsSerializer.unwrap(nativeArr.get(i, nativeArr))); } return arr; }else if (obj instanceof org.mozilla.javascript.Scriptable) { org.mozilla.javascript.Scriptable scr = ((org.mozilla.javascript.Scriptable) (obj)); java.lang.Object[] keys = scr.getIds(); org.rapidcontext.core.data.Dict dict = new org.rapidcontext.core.data.Dict(keys.length); for (int i = 0; i < (keys.length); i++) { java.lang.String str = keys[i].toString(); java.lang.Object value = null; if ((keys[i]) instanceof java.lang.Integer) { value = scr.get(((java.lang.Integer) (keys[i])).intValue(), scr); }else { value = scr.get(str, scr); } dict.set(str, org.rapidcontext.core.js.JsSerializer.unwrap(value)); } return dict; }else if (obj instanceof org.rapidcontext.core.data.Array) { org.rapidcontext.core.data.Array oldArr = ((org.rapidcontext.core.data.Array) (obj)); org.rapidcontext.core.data.Array newArr = new org.rapidcontext.core.data.Array(oldArr.size()); for (int i = 0; i < (oldArr.size()); i++) { newArr.set(i, org.rapidcontext.core.js.JsSerializer.unwrap(oldArr.get(i))); } return newArr; }else if (obj instanceof org.rapidcontext.core.data.Dict) { org.rapidcontext.core.data.Dict oldDict = ((org.rapidcontext.core.data.Dict) (obj)); org.rapidcontext.core.data.Dict newDict = new org.rapidcontext.core.data.Dict(oldDict.size()); java.lang.String[] keys = oldDict.keys(); for (int i = 0; i < (keys.length); i++) { java.lang.String key = keys[i].toString(); newDict.set(key, org.rapidcontext.core.js.JsSerializer.unwrap(oldDict.get(key))); } return newDict; }else { return obj; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/3217/buggy-version/src.java.org.rapidcontext.core.js.JsSerializer.java", "BodyUseAPI": [], "Fixed commit": "fca6dde4cf935da10c85232c0c573cbe9564d9e4", "Url": "https://api.github.com/repos/cederberg/rapidcontext", "Date": "2014-05-16T16:22:43Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((error) == null) { return new com.novocode.junit.OptionalThrowable(); }else { return new com.novocode.junit.OptionalThrowable(error); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/1864/buggy-version/src.main.java.com.novocode.junit.AbstractEvent.java", "BodyUseAPI": [], "Fixed commit": "ed4ade495985ac2407f6994dbb4c5f5b4e7ef547", "Url": "https://api.github.com/repos/backuitist/junit-interface", "Date": "2013-11-09T11:39:59Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(currentPosition.equals(centre))) { simulation.grid.cell.Cell currentCell = grid.getCell(currentPosition); try { if (cellClass.newInstance().getClass().isInstance(currentCell)) { cellsAtDistance++; } } catch (java.lang.InstantiationException | java.lang.IllegalAccessException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/4641/buggy-version/src.main.java.simulation.density.KalahariDensity.java", "BodyUseAPI": ["simulation.grid.Grid.getCell(simulation.grid.Position)"], "Fixed commit": "8ce3a6cdb60d026ad204d32caf006847f3ce3d04", "Url": "https://api.github.com/repos/UsAndRufus/ThirdYearProject", "Date": "2016-11-07T18:01:21Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((selected.size()) >= expectNum) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/5314/buggy-version/Mapproject.src.main.java.zhangq2.Mapproject.map.PathMap.java", "BodyUseAPI": [], "Fixed commit": "eea67755b02a8756f2643421eb99c522abeccab2", "Url": "https://api.github.com/repos/fredzqm/pathFinder", "Date": "2017-02-16T21:05:52Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["zhangq2.Mapproject.map.PathMap.getNodeIndex(pmap.nodes.get(i).getId())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (index == (-127)) throw new java.lang.RuntimeException(\"index cannot be -127\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/5314/buggy-version/Mapproject.src.main.java.zhangq2.Mapproject.map.PathMap.java", "BodyUseAPI": [], "Fixed commit": "eea67755b02a8756f2643421eb99c522abeccab2", "Url": "https://api.github.com/repos/fredzqm/pathFinder", "Date": "2017-02-16T21:05:52Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((rs.getString(names[0])) != null) { org.json.JSONObject jsonObject = new org.json.JSONObject(rs.getString(names[0])); return jsonObject; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/7502/buggy-version/aidr-persister.src.main.java.qa.qcri.aidr.entity.JSONObjectUserType.java", "BodyUseAPI": ["java.sql.ResultSet.getString(java.lang.String)"], "Fixed commit": "3fc3356cc1d4e4fdc548a4bd40e0f140aa2c6e54", "Url": "https://api.github.com/repos/qcri-social/Crisis-Computing", "Date": "2016-02-12T07:46:32Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (saxoncfg != null) { schemaAware = this.schemaAware; proctype = saxonProcessor; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/5635/buggy-version/src.com.xmlcalabash.core.XProcConfiguration.java", "BodyUseAPI": [], "Fixed commit": "3eb117c4e314940b10b0f9bbe26a73fd75b38e07", "Url": "https://api.github.com/repos/ndw/xmlcalabash1", "Date": "2014-02-11T15:42:08Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((socket) != null) { socket.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/4120/buggy-version/src.sample.socketClient.SocketClient.java", "BodyUseAPI": [], "Fixed commit": "22dd56ad22889066f08cdc4faa2c1e7307fcaff0", "Url": "https://api.github.com/repos/alexey-schroeder/SocketClient", "Date": "2014-02-01T22:50:18Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["payload.getResponse().getPlayers().get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((player.getBackpackValue()) != null) { mUser.setBackpackValue(player.getBackpackValue().get440()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/8278/buggy-version/app.src.main.java.com.tlongdev.bktf.interactor.GetSearchedUserDataInteractor.java", "BodyUseAPI": ["player.getBackpackValue().get440()", "com.tlongdev.bktf.network.model.bptf.BackpackTfPlayer.getBackpackValue()", "com.tlongdev.bktf.model.User.setBackpackValue(player.getBackpackValue().get440())"], "Fixed commit": "9d6263ff15d4a57c8e6f06772a93c16db700b815", "Url": "https://api.github.com/repos/Longi94/bptf", "Date": "2016-05-04T09:10:04Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getHeader(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (token == null) { token = request.getParameter(\"token\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/2975/buggy-version/src.main.java.com.khs.sherpa.servlet.request.DefaultSherpaRequest.java", "BodyUseAPI": [], "Fixed commit": "3a53791fce11c966a9d09f7df568786c8b41acf8", "Url": "https://api.github.com/repos/in-the-keyhole/khs-sherpa", "Date": "2012-11-12T14:48:35Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getHeader(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (userid == null) { userid = request.getParameter(\"userid\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/2975/buggy-version/src.main.java.com.khs.sherpa.servlet.request.DefaultSherpaRequest.java", "BodyUseAPI": [], "Fixed commit": "3a53791fce11c966a9d09f7df568786c8b41acf8", "Url": "https://api.github.com/repos/in-the-keyhole/khs-sherpa", "Date": "2012-11-12T14:48:35Z"},
{"Line": "=>615", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((((map[pos]) == (Terrain.HIGH_GRASS)) || ((map[pos]) == (Terrain.EMPTY))) || ((map[pos]) == (Terrain.EMBERS))) || ((map[pos]) == (Terrain.EMPTY_DECO))) { com.shatteredpixel.shatteredpixeldungeon.levels.Level.set(pos, Terrain.GRASS); com.shatteredpixel.shatteredpixeldungeon.scenes.GameScene.updateMap(pos); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/8833/buggy-version/src.com.shatteredpixel.shatteredpixeldungeon.levels.Level.java", "BodyUseAPI": ["com.shatteredpixel.shatteredpixeldungeon.scenes.GameScene.updateMap(int)", "com.shatteredpixel.shatteredpixeldungeon.levels.Level.set(int,Terrain.GRASS)"], "Fixed commit": "fd81d67616fb4ea5d58a961a0d87897395d7073d", "Url": "https://api.github.com/repos/00-Evan/shattered-pixel-dungeon", "Date": "2014-11-05T19:37:44Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (javax.swing.SwingUtilities.isEventDispatchThread()) { accPanel.setUsername(userName); accPanel.setPassword(password); accPanel.setRememberPassword(rememberPassword); }else { javax.swing.SwingUtilities.invokeAndWait(new java.lang.Runnable() { public void run() { accPanel.setUsername(userName); accPanel.setPassword(password); accPanel.setRememberPassword(rememberPassword); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/7707/buggy-version/src.net.java.sip.communicator.plugin.jabberaccregwizz.JabberAccountRegistrationWizard.java", "BodyUseAPI": [], "Fixed commit": "fa0bdc790a198ec3cf84fce22f581125bec53917", "Url": "https://api.github.com/repos/jitsi/jitsi", "Date": "2013-10-24T11:19:17Z"},
{"Line": "=>973", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.PreparedStatement.executeQuery()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (rs.wasNull()) { fingerprint.setAdsBlocked(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/7331/buggy-version/src.DAOs.FingerprintDAO.java", "BodyUseAPI": [], "Fixed commit": "d4dd15365ce0266b3a95e0ac753058c1e124c850", "Url": "https://api.github.com/repos/CryptoCubik/browserprint", "Date": "2015-10-31T02:14:41Z"},
{"Line": "=>958", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.PreparedStatement.executeQuery()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (rs.wasNull()) { fingerprint.setClockDifference(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/7331/buggy-version/src.DAOs.FingerprintDAO.java", "BodyUseAPI": [], "Fixed commit": "d4dd15365ce0266b3a95e0ac753058c1e124c850", "Url": "https://api.github.com/repos/CryptoCubik/browserprint", "Date": "2015-10-31T02:14:41Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.github.sveyrat.spaceoutbreak.dao.RepositoryManager.getInstance().gameInformationRepository().votingPhaseStarted())) { voteResult = voteRepository.vote(votes); }else { voteResult = voteRepository.voteResult(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/1891/buggy-version/app.src.main.java.com.github.sveyrat.spaceoutbreak.display.activity.VoteActivity.java", "BodyUseAPI": [], "Fixed commit": "c12992701e2b42879fe87512454a6d60538a0a11", "Url": "https://api.github.com/repos/sveyrat/spaceoutbreak", "Date": "2017-08-08T18:52:52Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Game.started) { net.sparkzz.visionless.game.Menu.gameMenu(); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/6088/buggy-version/src.net.sparkzz.visionless.game.Menu.java", "BodyUseAPI": [], "Fixed commit": "6954f5fa499edb8651c25a3694aa9e0827743381", "Url": "https://api.github.com/repos/BrendonButler/Visionless", "Date": "2016-08-31T20:04:27Z"},
{"Line": "=>322", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (blindFlag) tts.speak(arrivo, TextToSpeech.QUEUE_FLUSH, null, null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/8774/buggy-version/app.src.main.java.appservweb.isilm.beaconguide.MapActivity.java", "BodyUseAPI": [], "Fixed commit": "1d27b1c187bb04f9880d82389476de3f22f339f4", "Url": "https://api.github.com/repos/LifeIsPizza/BeaconGuide", "Date": "2016-12-22T09:30:27Z"},
{"Line": "=>2172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sizeType == (com.squareup.javapoet.TypeName.BYTE)) || (sizeType == (com.squareup.javapoet.TypeName.SHORT))) { code.add(\"($T) \", sizeType); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/2121/buggy-version/src.main.java.org.reaktivity.nukleus.maven.plugin.internal.generate.StructFlyweightGenerator.java", "BodyUseAPI": ["com.squareup.javapoet.FieldSpec.Builder.add(java.lang.String,com.squareup.javapoet.TypeName)"], "Fixed commit": "4ebc2309d551d24651f719fcce5e2122a14be8fd", "Url": "https://api.github.com/repos/cmebarrow/nukleus-maven-plugin", "Date": "2017-12-14T01:35:15Z"},
{"Line": "=>2015", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sizeType == (com.squareup.javapoet.TypeName.BYTE)) || (sizeType == (com.squareup.javapoet.TypeName.SHORT))) { code.add(\"($T) \", sizeType); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/2121/buggy-version/src.main.java.org.reaktivity.nukleus.maven.plugin.internal.generate.StructFlyweightGenerator.java", "BodyUseAPI": ["com.squareup.javapoet.FieldSpec.Builder.add(java.lang.String,com.squareup.javapoet.TypeName)"], "Fixed commit": "4ebc2309d551d24651f719fcce5e2122a14be8fd", "Url": "https://api.github.com/repos/cmebarrow/nukleus-maven-plugin", "Date": "2017-12-14T01:35:15Z"},
{"Line": "=>601", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(mGeometry.areOnlyShortBuffersSupported())) { java.nio.IntBuffer buff = ((java.nio.IntBuffer) (mGeometry.getIndices())); for (i = 0; i < (mGeometry.getIndices().capacity()); i++) ser.getIndices()[i] = buff.get(i); }else { java.nio.ShortBuffer buff = ((java.nio.ShortBuffer) (mGeometry.getIndices())); for (i = 0; i < (mGeometry.getIndices().capacity()); i++) ser.getIndices()[i] = buff.get(i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/3833/buggy-version/src.rajawali.BaseObject3D.java", "BodyUseAPI": ["rajawali.Geometry3D.getIndices()", "mGeometry.getIndices().capacity()", "rajawali.Geometry3D.getIndices()", "rajawali.Geometry3D.getIndices()", "mGeometry.getIndices().capacity()", "rajawali.Geometry3D.getIndices()"], "Fixed commit": "11e658c075acd82aadcb692eba82ead73b339d50", "Url": "https://api.github.com/repos/MasDennis/Rajawali", "Date": "2012-05-24T18:09:32Z"},
{"Line": "=>455", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((rows.length()) <= rowIndex) { for (int i = 0; i < (rowIndex + 1); i++) rows.put(new org.apache.tapestry5.json.JSONObject()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/8831/buggy-version/src.main.java.org.got5.tapestry5.jquery.internal.DefaultDataTableModel.java", "BodyUseAPI": ["org.apache.tapestry5.json.JSONArray.put(org.apache.tapestry5.json.JSONObject)"], "Fixed commit": "cdd353dd918d16874754b9a5f7f3f299a3820dfa", "Url": "https://api.github.com/repos/ffacon/tapestry5-jquery-5.4", "Date": "2014-10-23T08:04:25Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Gridlock.playFlag) == true) arrowList.add(new com.innovativeexecutables.EnemyAxe(((x) + ((width) / 2)), ((y) + ((height) / 2)), ((Player.x) + ((Player.width) / 2)), ((Player.y) + ((Player.height) / 2))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/365/buggy-version/core.src.com.innovativeexecutables.Enemy.java", "BodyUseAPI": [], "Fixed commit": "6e214c74e145f8890d669602d21473c69595a225", "Url": "https://api.github.com/repos/brandex007/Gridlock", "Date": "2017-11-29T21:33:39Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Gridlock.playFlag) == true) score -= scoreCounter;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/365/buggy-version/core.src.com.innovativeexecutables.Score.java", "BodyUseAPI": [], "Fixed commit": "6e214c74e145f8890d669602d21473c69595a225", "Url": "https://api.github.com/repos/brandex007/Gridlock", "Date": "2017-11-29T21:33:39Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<?>.next()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((new java.lang.String(\"protocol\").equals(skey)) == false) { try { java.util.ArrayList<java.lang.String> value = new java.util.ArrayList<java.lang.String>(); org.json.JSONArray jvalarr = jset.optJSONArray(skey); java.lang.String jvalstr = jset.optString(skey); java.lang.Double jvaldbl = jset.optDouble(skey); java.lang.Long jvallng = jset.optLong(skey); if (jvalarr != null) { for (java.lang.Short i = 0; i < (jvalarr.length()); i++) { value.add(jvalarr.get(i).toString()); } }else if (jvalstr != null) { value.add(jvalstr); }else if (jvaldbl != null) { value.add(jvaldbl.toString()); }else if (jvallng != null) { value.add(jvallng.toString()); } settings.put(skey, value); } catch (org.json.JSONException e) { classes.Log.printf(\"The received config is of an incorrent format\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/1343/buggy-version/src.classes.Config.java", "BodyUseAPI": ["org.json.JSONObject.optJSONArray(java.lang.String)", "org.json.JSONObject.optDouble(java.lang.String)", "org.json.JSONObject.optLong(java.lang.String)", "java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>>.put(java.lang.String,java.util.ArrayList<java.lang.String>)", "org.json.JSONObject.optString(java.lang.String)"], "Fixed commit": "051238dd611db8736159640fa4f5a35caa4caaa7", "Url": "https://api.github.com/repos/pilight/java-gui", "Date": "2013-11-08T21:08:56Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (file.exists()) { file.delete(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/5315/buggy-version/app.src.main.java.cjstar.com.cache.LRUFileCache.java", "BodyUseAPI": ["java.io.File.delete()"], "Fixed commit": "9b3e1c1e2ee4c6f5610ff02dc953b29014683d5a", "Url": "https://api.github.com/repos/Spring-Xu/Android-ImageFileCache", "Date": "2015-08-24T12:05:29Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.jboss.seam.document.DocumentStoreServlet.isInternetExplorer(request)) response.setHeader(\"Content-Disposition\", ((((documentData.getDisposition()) + \"; filename=\\\"\") + (java.net.URLEncoder.encode(documentData.getFileName(), \"utf-8\"))) + \"\\\"\")); else response.setHeader(\"Content-Disposition\", ((((documentData.getDisposition()) + \"; filename=\\\"\") + (javax.mail.internet.MimeUtility.encodeWord(documentData.getFileName(), \"UTF-8\", \"Q\"))) + \"\\\"\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/1364/buggy-version/jboss-seam.src.main.java.org.jboss.seam.document.DocumentStoreServlet.java", "BodyUseAPI": [], "Fixed commit": "622888867927b83c391d389f5e0d824060f94fbf", "Url": "https://api.github.com/repos/omidp/seam", "Date": "2015-07-29T11:29:30Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((counter) < 6) { regionsMap.put(regionNames[which].toString(), isChecked); }else { ((android.app.AlertDialog) (dialog)).getListView().setItemChecked(which, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/2244/buggy-version/src.com.thracecodeinc.guessTheFlag.startPage.java", "BodyUseAPI": [], "Fixed commit": "d524e883e22155352e3fdb25c21d935f33f1b398", "Url": "https://api.github.com/repos/katiahristova/FlagProject", "Date": "2015-04-22T22:15:57Z"},
{"Line": "=>1038", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getFeedback()) != null) { specTopics.add(getFeedback()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/1220/buggy-version/src.main.java.org.jboss.pressgang.ccms.contentspec.ContentSpec.java", "BodyUseAPI": [], "Fixed commit": "3fda0b4b85f7cedcd6fdb589fabee851e293a32f", "Url": "https://api.github.com/repos/pressgang-ccms/PressGangCCMSContentSpec", "Date": "2013-05-20T23:38:00Z"},
{"Line": "=>1033", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getRevisionHistory()) != null) { specTopics.add(getRevisionHistory()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/1220/buggy-version/src.main.java.org.jboss.pressgang.ccms.contentspec.ContentSpec.java", "BodyUseAPI": [], "Fixed commit": "3fda0b4b85f7cedcd6fdb589fabee851e293a32f", "Url": "https://api.github.com/repos/pressgang-ccms/PressGangCCMSContentSpec", "Date": "2013-05-20T23:38:00Z"},
{"Line": "=>1043", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getLegalNotice()) != null) { specTopics.add(getLegalNotice()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/1220/buggy-version/src.main.java.org.jboss.pressgang.ccms.contentspec.ContentSpec.java", "BodyUseAPI": [], "Fixed commit": "3fda0b4b85f7cedcd6fdb589fabee851e293a32f", "Url": "https://api.github.com/repos/pressgang-ccms/PressGangCCMSContentSpec", "Date": "2013-05-20T23:38:00Z"},
{"Line": "=>332", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((packetCount) != 0) { return ((double) (outOfOrderCount)) / (packetCount); }else { return 0.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/267/buggy-version/Mobiperf_Library.src.com.mobiperf_library.measurements.UDPBurstTask.java", "BodyUseAPI": [], "Fixed commit": "8c10411e3187b8f3281012ee39ca2229a3513b9d", "Url": "https://api.github.com/repos/laoyaosniper/Mobiperf-Library", "Date": "2014-01-21T01:26:28Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.instanceRoleUtils.isReadOnly())) { try (org.neo4j.graphdb.Transaction tx = database.beginTx()) { keyValueStore.set(moduleKey(moduleId), com.graphaware.common.serialize.Serializer.toByteArray(metadata)); tx.success(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/5234/buggy-version/runtime.src.main.java.com.graphaware.runtime.metadata.GraphPropertiesMetadataRepository.java", "BodyUseAPI": [], "Fixed commit": "026016f6575282178b07bac1f9818a5d49963c63", "Url": "https://api.github.com/repos/leusonmario/neo4j-framework", "Date": "2017-03-08T13:09:06Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.instanceRoleUtils.isReadOnly())) { try (org.neo4j.graphdb.Transaction tx = database.beginTx()) { keyValueStore.remove(moduleKey(moduleId)); tx.success(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/5234/buggy-version/runtime.src.main.java.com.graphaware.runtime.metadata.GraphPropertiesMetadataRepository.java", "BodyUseAPI": [], "Fixed commit": "026016f6575282178b07bac1f9818a5d49963c63", "Url": "https://api.github.com/repos/leusonmario/neo4j-framework", "Date": "2017-03-08T13:09:06Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (itemDetails != null) { this.itemDetails.addAll(itemDetails); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/5837/buggy-version/uikit.src.main.java.com.midtrans.sdk.uikit.adapters.TransactionDetailsAdapter.java", "BodyUseAPI": [], "Fixed commit": "322ca5ab9005be490827a665918b9e9f3149ee5b", "Url": "https://api.github.com/repos/veritrans/veritrans-android", "Date": "2017-12-05T04:22:18Z"},
{"Line": "=>428", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ipAddress == null) { ipAddress = getPrimaryHostSystemIpAddress(hostSystem); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/6564/buggy-version/integrations.opennms-vmware.src.main.java.org.opennms.protocols.vmware.VmwareViJavaAccess.java", "BodyUseAPI": [], "Fixed commit": "63f2e3d7d5df1ff26fc11e1f2d35fc93227c3b5c", "Url": "https://api.github.com/repos/OpenNMS/opennms", "Date": "2013-06-24T19:42:38Z"},
{"Line": "=>4021", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lb.isArg) lb.idx -= 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/3309/buggy-version/src.jvm.clojure.lang.Compiler.java", "BodyUseAPI": [], "Fixed commit": "36f7dbd83a37c483ccb7d4f8f73af6ab68137d5d", "Url": "https://api.github.com/repos/MichaelBlume/clojure", "Date": "2015-08-31T04:27:39Z"},
{"Line": "=>1306", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((gameState) == (com.tutorial.main.GamePanel.STATE.Game)) { if ((com.tutorial.main.GamePanel.paused) == false) { com.tutorial.main.GamePanel.paused = true; }else { com.tutorial.main.GamePanel.paused = false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/6299/buggy-version/src.com.tutorial.main.GamePanel.java", "BodyUseAPI": [], "Fixed commit": "467e3931f8318931ce7717d02c0cc2b7eb62d393", "Url": "https://api.github.com/repos/makoteo/TestGame2", "Date": "2017-07-07T06:00:59Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((t == null) || (t.isEmpty())) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/8509/buggy-version/src.main.java.com.treasure_data.td_import.prepare.Strftime.java", "BodyUseAPI": [], "Fixed commit": "37aad9cba2bc0b69e1b59b86e5a1133464fba4a5", "Url": "https://api.github.com/repos/treasure-data/td-import-java", "Date": "2014-07-02T17:30:10Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(dao.SQLHelper.update(builder))) throw new java.lang.NullPointerException();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/6723/buggy-version/app.controllers.PasswordController.java", "BodyUseAPI": [], "Fixed commit": "9868524fe4f41793e5930ca100391aaf3facaef1", "Url": "https://api.github.com/repos/genxium/PlayHongKongResort", "Date": "2014-09-18T09:47:16Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (type == (com.androar.comm.CommunicationProtos.ClientMessage.ClientMessageType.IMAGE_TO_PROCESS)) { client_message = com.androar.comm.CommunicationProtos.ClientMessage.newBuilder().setAuthentificationInfo(auth_info).setMessageType(type).setImageToProcess(image).build(); }else { client_message = com.androar.comm.CommunicationProtos.ClientMessage.newBuilder().setAuthentificationInfo(auth_info).setMessageType(type).addImagesToStore(image).build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/4659/buggy-version/AndroARComm.src.com.androar.comm.Mocking.java", "BodyUseAPI": ["com.androar.comm.CommunicationProtos.ClientMessage.newBuilder().setAuthentificationInfo(auth_info).setMessageType(type).addImagesToStore(com.androar.comm.ImageFeaturesProtos.Image)", "com.androar.comm.CommunicationProtos.ClientMessage.newBuilder().setAuthentificationInfo(auth_info).setMessageType(com.androar.comm.CommunicationProtos.ClientMessage.ClientMessageType)", "com.androar.comm.CommunicationProtos.ClientMessage.newBuilder().setAuthentificationInfo(auth_info).setMessageType(type).addImagesToStore(image).build()", "com.androar.comm.CommunicationProtos.ClientMessage.newBuilder().setAuthentificationInfo(auth_info).setMessageType(type).setImageToProcess(image).build()", "com.androar.comm.CommunicationProtos.ClientMessage.newBuilder().setAuthentificationInfo(auth_info).setMessageType(com.androar.comm.CommunicationProtos.ClientMessage.ClientMessageType)", "com.androar.comm.CommunicationProtos.ClientMessage.newBuilder().setAuthentificationInfo(auth_info).setMessageType(type).setImageToProcess(com.androar.comm.ImageFeaturesProtos.Image)"], "Fixed commit": "d9eb3a2d6cc567de26c62f588b6e5537234222c7", "Url": "https://api.github.com/repos/aismail/AndroAR", "Date": "2012-04-05T13:18:40Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mode == 1) { calculatedMode.add(((float) (0.0))); }else { for (java.util.Map.Entry<java.lang.Float, java.lang.Integer> entry : modeMap.entrySet()) { if (entry.getValue().equals(mode)) { calculatedMode.add(entry.getKey()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/4266/buggy-version/src.descriptive_statistics.Stats.java", "BodyUseAPI": ["java.lang.Integer.equals(int)"], "Fixed commit": "061065ae3fc05e8ff905b2c5ef531af391645d64", "Url": "https://api.github.com/repos/skhaledreza/SOEN6611", "Date": "2017-06-02T02:44:30Z"},
{"Line": "=>412", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mode.equals(com.epfl.computational_photography.paletizer.PaletteActivity.STRING_NORMAL_QUERY)) buttonPlus.setVisibility(View.VISIBLE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/6830/buggy-version/app.src.main.java.com.epfl.computational_photography.paletizer.PaletteActivity.java", "BodyUseAPI": [], "Fixed commit": "27542940ea5b0713d89e59b2bd8a31961017527f", "Url": "https://api.github.com/repos/GaspardC/team-palette", "Date": "2016-05-20T16:31:46Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bRecord == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/4797/buggy-version/igcParser.src.main.java.com.shollmann.android.igcparser.util.WaypointUtilities.java", "BodyUseAPI": [], "Fixed commit": "7adf7f853c762fbb94979b09af3ec21ba1070a6e", "Url": "https://api.github.com/repos/santiago-hollmann/igcparser", "Date": "2017-06-02T17:40:43Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((igcFile != null) && (!(android.text.TextUtils.isEmpty(igcFile.getFilePath())))) { org.greenrobot.eventbus.EventBus.getDefault().post(new com.shollmann.igcparser.events.FileClickEvent(new java.io.File(igcFile.getFilePath()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/4797/buggy-version/app.src.main.java.com.shollmann.igcparser.ui.viewholder.FileViewHolder.java", "BodyUseAPI": ["org.greenrobot.eventbus.EventBus.getDefault().post(com.shollmann.igcparser.events.FileClickEvent)", "com.shollmann.android.igcparser.model.IGCFile.getFilePath()"], "Fixed commit": "7adf7f853c762fbb94979b09af3ec21ba1070a6e", "Url": "https://api.github.com/repos/santiago-hollmann/igcparser", "Date": "2017-06-02T17:40:43Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Long.parseLong(session().get(\"user_id\"))"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (u_id != id) { flash(\"error\", \"You do not have access to this page\"); return redirect(routes.Users.index(u_id)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/5218/buggy-version/app.controllers.contacts.java", "BodyUseAPI": ["routes.Users.index(java.lang.Long)", "controllers.contacts.redirect(routes.Users.index(u_id))"], "Fixed commit": "0851137661aa0f49f9c3a5a2f9620843d7727dce", "Url": "https://api.github.com/repos/rcoCode/CapstoneMERA", "Date": "2015-12-19T17:27:30Z"},
{"Line": "=>549", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(mujava.app.Main.mutationScore)) && (config.fullVerboseMode())) { mujava.app.Main.core.printLastGeneration(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/5160/buggy-version/src.mujava.app.Main.java", "BodyUseAPI": [], "Fixed commit": "7e94dc73d658a576ec7cd0b126cc171807a28750", "Url": "https://api.github.com/repos/saiema/MuJava", "Date": "2016-03-18T17:52:08Z"},
{"Line": "=>271", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dc.benchmark) { java.lang.String originSoid = su.getTriggerPath().get(((su.getTriggerPath().size()) - 1)).get(0); java.lang.String originStream = su.getTriggerPath().get(((su.getTriggerPath().size()) - 1)).get(1); com.servioticy.dispatcher.bolts.StagesPerformanceBolt.send(collector, input, dc, \"out\", originSoid, originStream, su.getStageStartTS().get(\"out\"), ts); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/1223/buggy-version/src.main.java.com.servioticy.dispatcher.bolts.StreamProcessorBolt.java", "BodyUseAPI": ["com.servioticy.dispatcher.bolts.StagesPerformanceBolt.send(backtype.storm.task.OutputCollector,backtype.storm.tuple.Tuple,com.servioticy.dispatcher.DispatcherContext,java.lang.String,java.lang.String,java.lang.String,su.getStageStartTS().get(\"out\"),java.lang.Long)"], "Fixed commit": "ead3784aa06c91e08b14ac3b2e3c5f2e62b40ac4", "Url": "https://api.github.com/repos/servioticy/servioticy-dispatcher", "Date": "2015-11-06T17:05:27Z"},
{"Line": "=>692", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.dao.FundDao.getInstance().getById(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (f == null) { this.addActionError(\"Can not find this fund\"); isSuccess = -1; return ERROR; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/4119/buggy-version/versat.src.com.action.FundAction.java", "BodyUseAPI": [], "Fixed commit": "862a034b206a995e1f33be736754fe6999a85e17", "Url": "https://api.github.com/repos/keweiw/versat", "Date": "2013-01-31T20:37:15Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cls.getAnnotations().get(org.teavm.jso.plugin.FunctorImpl.class.getName())) != null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/9101/buggy-version/teavm-jso.src.main.java.org.teavm.jso.plugin.JavascriptNativeProcessor.java", "BodyUseAPI": [], "Fixed commit": "15f5885ccadec27e4f42ca85571516aa3f149d2e", "Url": "https://api.github.com/repos/konsoletyper/teavm", "Date": "2015-07-02T16:30:33Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (mValue != null) { mTypedString = mValue.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/4297/buggy-version/form-master.src.main.java.me.riddhimanadib.formmaster.model.FormAutoCompleteElement.java", "BodyUseAPI": ["T.toString()"], "Fixed commit": "373825185389621842abe3d0c73de1229886147a", "Url": "https://api.github.com/repos/shaymargolis/FormMaster", "Date": "2017-11-23T15:33:35Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(kw.isRegex())) w = com.civilizer.domain.TextDecorator.escapeRegexMetaCharacters(w);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/586/buggy-version/src.main.java.com.civilizer.domain.TextDecorator.java", "BodyUseAPI": [], "Fixed commit": "e527c3543f2617820f2a474461e1661a8031a157", "Url": "https://api.github.com/repos/suewonjp/civilizer", "Date": "2017-01-01T08:10:48Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.biojava.nbio.structure.StructureTools.getRepresentativeAtomArray(org.biojava.nbio.structure.Structure)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((ca.length) == 0) { ca = org.biojava.nbio.structure.StructureTools.getAllAtomArray(s); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/4471/buggy-version/eppic-cli.src.main.java.eppic.commons.util.GeomTools.java", "BodyUseAPI": [], "Fixed commit": "5d5ee0f76eca40710d3ff045dd5585ea84a26c17", "Url": "https://api.github.com/repos/eppic-team/eppic", "Date": "2017-11-16T00:51:42Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.isThereAnotherClassWithSameNameInAnotherPackage(ref)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/607/buggy-version/src.main.java.spoon.reflect.visitor.ImportScannerImpl.java", "BodyUseAPI": [], "Fixed commit": "014167880a6e1c523bb27614a02a298ff12eade7", "Url": "https://api.github.com/repos/INRIA/spoon", "Date": "2017-05-19T18:14:44Z"},
{"Line": "=>370", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["repoUrl.url.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (protocolIndex > (-1)) { protocol = repoUrl.url.substring(0, protocolIndex); }else { protocol = \"ssh\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/1614/buggy-version/src.main.java.com.gitblit.wicket.panels.RepositoryUrlPanel.java", "BodyUseAPI": ["repoUrl.url.substring(int,int)"], "Fixed commit": "2a8ea034b63736708839c140e53121026c19b9a8", "Url": "https://api.github.com/repos/gitblit/gitblit", "Date": "2013-09-19T13:03:04Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (null != (sdkTextAnchor.getPosition())) result.setAnchorPoint(sdkTextAnchor.getPosition().toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/5558/buggy-version/sdk.src.main.java.com.silanis.esl.sdk.internal.converter.TextAnchorConverter.java", "BodyUseAPI": ["sdkTextAnchor.getPosition().toString()", "com.silanis.esl.api.model.ExtractAnchor.setAnchorPoint(sdkTextAnchor.getPosition().toString())", "com.silanis.esl.sdk.TextAnchor.getPosition()"], "Fixed commit": "c314d7d5c6dbe7a3c0041cd46f216a4aac143b83", "Url": "https://api.github.com/repos/eSignLive/esl.sdk.java", "Date": "2015-12-03T16:30:19Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(guessTextField.getText().equals(\"\"))) { serverHandler.addCommand((\"guess|\" + (guessTextField.getText()))); guessTextField.setText(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/3634/buggy-version/ClientApplication.src.clientapplication.Views.ClientPanel.java", "BodyUseAPI": ["javax.swing.JTextField.setText(java.lang.String)", "javax.swing.JTextField.getText()", "clientapplication.ServerHandler.addCommand(java.lang.String)"], "Fixed commit": "9757839aee61f9560f91f74014be3de5f9232227", "Url": "https://api.github.com/repos/TheStigsGitCousin/Homework1", "Date": "2015-11-18T12:03:00Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((args.length) == 1) { try { port = java.lang.Integer.parseInt(args[0]); } catch (java.lang.NumberFormatException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/3634/buggy-version/ServerApplication.src.serverapplication.ServerApplication.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "9757839aee61f9560f91f74014be3de5f9232227", "Url": "https://api.github.com/repos/TheStigsGitCousin/Homework1", "Date": "2015-11-18T12:03:00Z"},
{"Line": "=>757", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (tfc.runInputCheck(cementDensityJTextField, waterDensityJTextField, cementComponentsJTable, dryComponentsJTable, liquidComponentsJTable)) { }else { Executable.SlurryCalculations sc = new Executable.SlurryCalculations(this, cementComponentsJTable, saltComponentsJTable, dryComponentsJTable, liquidComponentsJTable, java.lang.Double.parseDouble(waterDensityJTextField.getText()), java.lang.Double.parseDouble(cementDensityJTextField.getText())); if ((Executable.MainWindow.buttonCount) == true) { tabbedPane1.addTab(\"Slurry Results\", c); Executable.MainWindow.buttonCount = false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/332/buggy-version/src.Executable.MainWindow.java", "BodyUseAPI": ["javax.swing.JTextField.getText()", "javax.swing.JTextField.getText()", "java.lang.Double.parseDouble(java.lang.String)", "java.lang.Double.parseDouble(java.lang.String)"], "Fixed commit": "5330d4889eda78b898140c4db256d9acaba35bb6", "Url": "https://api.github.com/repos/bryan542/UCement", "Date": "2017-08-07T02:33:32Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((offsetCount) == 1) { mostCurrentId = result.getCurrentId(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/8391/buggy-version/streams-contrib.streams-provider-sysomos.src.main.java.org.apache.streams.sysomos.provider.SysomosHeartbeatStream.java", "BodyUseAPI": [], "Fixed commit": "ced9d241e633f4c1747f0f8a2044944fb8a0d66b", "Url": "https://api.github.com/repos/robdouglas/incubator-streams", "Date": "2014-05-26T15:43:12Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<java.lang.String>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (t.equals(\"(\")) exp = parseWithinParams(validTokens, 1).get(0); else if ((validTokens.size()) == 1) exp = createAtom(t); else throw new tk.sp14.pl.error.InvalidInputException(\"Error - Must be a single atom or start with method or left paranthesis\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/5360/buggy-version/src.tk.sp14.pl.process.ExpressionBuilder.java", "BodyUseAPI": ["tk.sp14.pl.process.ExpressionBuilder.createAtom(java.lang.String)"], "Fixed commit": "077cd145f4a3ed5244ca02204cb5c4857bff5941", "Url": "https://api.github.com/repos/tkpensieve/LispInterpreter", "Date": "2014-03-05T20:11:41Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((query_collection == null) || ((query_collection.length()) == 0)) { query_collection = uk.bl.Const.ACT_URL; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/7137/buggy-version/app.controllers.QAController.java", "BodyUseAPI": [], "Fixed commit": "df2c55ab328aa09139c7a458898d2a738421689c", "Url": "https://api.github.com/repos/ukwa/w3act", "Date": "2014-04-23T08:07:08Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((p2pcs.peer.gotted_lists.size()) == 0) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/664/buggy-version/src.p2pcs.peer.java", "BodyUseAPI": [], "Fixed commit": "b4a8f0e457745b88f864e907aad18b327cca7bcc", "Url": "https://api.github.com/repos/coenzhou/p2p-downloader-lan", "Date": "2016-12-21T05:24:08Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toString()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (hostip == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/664/buggy-version/src.panel.P2p.java", "BodyUseAPI": [], "Fixed commit": "b4a8f0e457745b88f864e907aad18b327cca7bcc", "Url": "https://api.github.com/repos/coenzhou/p2p-downloader-lan", "Date": "2016-12-21T05:24:08Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["joinService.queryForm(eventMessage.getFromUserName()).orElse(<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (form == null) { message += \"\u5f88\u62b1\u6b49\u6211\u4eec\u5e76\u6ca1\u6709\u6536\u5230\u60a8\u7684\u62a5\u540d\u8868\uff01\"; }else if (form.getPass()) { message += (form.getName()) + \"\u4f60\u597d\uff01\u606d\u559c\u4f60\u901a\u8fc7\u4e86ISDC\u7684\u9762\u8bd5\uff0c\u6210\u4e3aISDC5.0\u7684\u4e00\u5458\uff0c\u5e0c\u671b\u63a5\u4e0b\u6765\u7684\u5927\u5b66\u56db\u5e74\u6211\u4eec\u53ef\u4ee5\u76f8\u5904\u6109\u5feb\uff01\u4e00\u5b9a\u8981\u575a\u6301\u6765\u542c\u8bfe\u54e6\"; }else { message += (form.getName()) + \"\u4f60\u597d\uff01\u975e\u5e38\u9057\u61be\u7684\u662f\uff0c\u6211\u4eec\u6ca1\u80fd\u5728\u9762\u8bd5\u901a\u8fc7\u7684\u540d\u5355\u91cc\u627e\u5230\u4f60=v=\u4e0d\u7ba1\u600e\u4e48\u6837\uff0c\u8fd8\u662f\u5e0c\u671b\u4f60\u80fd\u575a\u6301\u53c2\u4e0e\u6211\u4eec\u7684\u6d3b\u52a8\uff0c\u7ed9\u6211\u4eec\u4e00\u4e2a\u5927\u60ca\u559c\uff01\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/8021/buggy-version/src.main.java.controller.WeChatController.java", "BodyUseAPI": ["entity.ApplicationForm.getName()", "entity.ApplicationForm.getPass()", "entity.ApplicationForm.getName()"], "Fixed commit": "dada3fe21a726e6eada770855daedcbce5760a38", "Url": "https://api.github.com/repos/amaoamao/isdc-ssh", "Date": "2017-09-19T11:52:38Z"},
{"Line": "=>621", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (symTab.hasStruct()) { for (STO s : symTab.getStruct().getStructType().getMembers()) { if (s.getName().equals(id)) { error = generateError(ErrorMsg.error13a_Struct, id); break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/8513/buggy-version/src.MyParser.java", "BodyUseAPI": ["symTab.getStruct().getStructType().getMembers()", "SymbolTable.getStruct()", "symTab.getStruct().getStructType()"], "Fixed commit": "2931ec40e4d011cee31f971d295affe734a10ced", "Url": "https://api.github.com/repos/vossnarrator/ParserProject", "Date": "2015-01-28T19:31:31Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ofy().load().type(net.mademocratie.gae.server.services.impl.Proposal.class).limit(limit).list()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((proposals.size()) > 0) { ofy().delete().entities(proposals).now(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/6042/buggy-version/src.main.java.net.mademocratie.gae.server.services.impl.ManageProposalImpl.java", "BodyUseAPI": ["ofy().delete().entities(proposals).now()", "ofy().delete().entities(java.util.List<net.mademocratie.gae.server.services.impl.Proposal>)"], "Fixed commit": "2c00bbcbb1f3f210c1d591b20cc5faf3923ed1b0", "Url": "https://api.github.com/repos/boly38/mademae", "Date": "2013-06-16T10:06:46Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ofy().load().type(net.mademocratie.gae.server.entities.v1.Citizen.class).limit(limit).list()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((citizens.size()) > 0) { ofy().delete().entities(citizens).now(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/6042/buggy-version/src.main.java.net.mademocratie.gae.server.services.impl.ManageCitizenImpl.java", "BodyUseAPI": ["ofy().delete().entities(java.util.List<net.mademocratie.gae.server.entities.v1.Citizen>)", "ofy().delete().entities(citizens).now()"], "Fixed commit": "2c00bbcbb1f3f210c1d591b20cc5faf3923ed1b0", "Url": "https://api.github.com/repos/boly38/mademae", "Date": "2013-06-16T10:06:46Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ofy().load().type(net.mademocratie.gae.server.services.impl.Comment.class).limit(limit).list()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((comments.size()) > 0) { ofy().delete().entities(comments).now(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/6042/buggy-version/src.main.java.net.mademocratie.gae.server.services.impl.ManageCommentImpl.java", "BodyUseAPI": ["ofy().delete().entities(comments).now()", "ofy().delete().entities(java.util.List<net.mademocratie.gae.server.services.impl.Comment>)"], "Fixed commit": "2c00bbcbb1f3f210c1d591b20cc5faf3923ed1b0", "Url": "https://api.github.com/repos/boly38/mademae", "Date": "2013-06-16T10:06:46Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ofy().load().type(net.mademocratie.gae.server.services.impl.Vote.class).limit(limit).list()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((votes.size()) > 0) { ofy().delete().entities(votes).now(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/6042/buggy-version/src.main.java.net.mademocratie.gae.server.services.impl.ManageVoteImpl.java", "BodyUseAPI": ["ofy().delete().entities(java.util.List<net.mademocratie.gae.server.services.impl.Vote>)", "ofy().delete().entities(votes).now()"], "Fixed commit": "2c00bbcbb1f3f210c1d591b20cc5faf3923ed1b0", "Url": "https://api.github.com/repos/boly38/mademae", "Date": "2013-06-16T10:06:46Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (oldVersion == newVersion) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/4164/buggy-version/src.main.java.com.cybc.updatehelper.UpdateHelperBase.java", "BodyUseAPI": [], "Fixed commit": "a88b781de07bed091e37147cab4d571bbf0e58b5", "Url": "https://api.github.com/repos/Coyboc/CybcUpdateHelper", "Date": "2016-09-26T08:47:40Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.cybc.updatehelper.UpdateWorker<UpdateImpl, StorageToUpdate>.createUpdates()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (updateFactories.isEmpty()) { throw new com.cybc.updatehelper.exceptions.UpdateFailedException(\"Can't start updates with empty update collection!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/4164/buggy-version/src.main.java.com.cybc.updatehelper.UpdateHelperBase.java", "BodyUseAPI": [], "Fixed commit": "a88b781de07bed091e37147cab4d571bbf0e58b5", "Url": "https://api.github.com/repos/Coyboc/CybcUpdateHelper", "Date": "2016-09-26T08:47:40Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (next != null) { next.handle(request, response); }else { response.setStatus(Status.SERVER_ERROR_INTERNAL); org.restlet.engine.CompositeHelper.getHelped().getLogger().log(java.util.logging.Level.SEVERE, ((\"The \" + (org.restlet.engine.CompositeHelper.getHelped().getClass().getName())) + \" class has no Restlet defined to process calls. Maybe it wasn't properly started.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/59/buggy-version/modules.org.restlet.src.org.restlet.engine.CompositeHelper.java", "BodyUseAPI": ["org.restlet.Restlet.handle(org.restlet.Request,org.restlet.Response)"], "Fixed commit": "186cf7969d727bc2135d468f856b35b628ee8bcb", "Url": "https://api.github.com/repos/leusonmario/restlet-framework-java", "Date": "2014-03-29T15:25:45Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (splitStyle[0].equals(\"font-family\")) { splitStyle[1] = splitStyle[1].replaceAll(\"\\\\+\", \" \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/5877/buggy-version/java.src.pdf.dom.StyleHandler.java", "BodyUseAPI": [], "Fixed commit": "07de91f2fe65162ef4def1f6c9a14641c44e2ba5", "Url": "https://api.github.com/repos/zootos/TOBOT", "Date": "2017-03-22T22:27:31Z"},
{"Line": "=>329", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (null == recycleBin) { item = null; }else { item = ((com.starbase.starteam.File) (recycleBin.findItem(fileType, fileID))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/4387/buggy-version/syncronizer.src.org.sync.commitstrategy.BasePopulationStrategy.java", "BodyUseAPI": ["com.starbase.starteam.RecycleBin.findItem(com.starbase.starteam.Type,java.lang.Integer)"], "Fixed commit": "a13dfefe19d0f77e446b3bf8fecdef8ba9ee4185", "Url": "https://api.github.com/repos/planestraveler/git-starteam", "Date": "2016-11-02T10:16:14Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.me.corruption.hexMap.HexMapRenderer.getMouseOverCell()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (map.getPlayer().attackCell(cell)) { cell.unit += 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/3808/buggy-version/Corruption.src.com.me.corruption.CorruptionGdxGame.java", "BodyUseAPI": [], "Fixed commit": "d6f2ec8117fe69ea0f5b927611a99b709cf21e1f", "Url": "https://api.github.com/repos/darkhexxa/game-off-2013", "Date": "2013-11-16T19:42:58Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang.StringUtils.isNotEmpty(getFromPage())) { globalUrl.setId(getGlobalurlId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/1539/buggy-version/phresco-service-web.src.main.java.com.photon.phresco.service.admin.actions.admin.GlobalUrlAction.java", "BodyUseAPI": [], "Fixed commit": "5ca79c59748d90c7e3493fe7fa7cf6d78fc550f6", "Url": "https://api.github.com/repos/phresco/service", "Date": "2012-12-07T13:26:55Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((splitArgs.length) < (seedu.address.logic.parser.DisplayCommandParser.REQUIRED_LENGTH)) { throw new seedu.address.logic.parser.exceptions.ParseException(java.lang.String.format(seedu.address.logic.parser.MESSAGE_INVALID_COMMAND_FORMAT, DisplayCommand.MESSAGE_USAGE)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/3138/buggy-version/src.main.java.seedu.address.logic.parser.DisplayCommandParser.java", "BodyUseAPI": [], "Fixed commit": "609a1e7a8145eac466cf00c1afd502659ff03cde", "Url": "https://api.github.com/repos/LeonChowWenHao/main", "Date": "2017-11-13T10:51:18Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (response != null) { return response; }else { throw new java.lang.Exception(\"NOT FOUND\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/4101/buggy-version/sample-spring-boot-kitchensink.src.main.java.com.example.bot.spring.SQLDatabaseEngine.java", "BodyUseAPI": [], "Fixed commit": "ae6c7e69ae261dfc9231c2d5f8fee346781914a9", "Url": "https://api.github.com/repos/QIYUANYUAN/Line-chatbot-for-COMP3111", "Date": "2017-09-25T08:30:56Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_image_uri) != null) { uri_string = _image_uri.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/3807/buggy-version/app.src.main.java.cs371m.hermes.futuremessenger.MultimediaMessageActivity.java", "BodyUseAPI": [], "Fixed commit": "f07d4c2876dd749c1d0d0605677daf43c08e792b", "Url": "https://api.github.com/repos/samarthd/FutureMessengerApp", "Date": "2016-08-08T02:18:43Z"},
{"Line": "=>1052", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == fEvent) { android.util.Log.e(org.matrix.androidsdk.data.Room.LOG_TAG, \"## sendReadReceipt(): there is no latest message\"); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/6499/buggy-version/matrix-sdk.src.main.java.org.matrix.androidsdk.data.Room.java", "BodyUseAPI": [], "Fixed commit": "64293ac2e89409d31810f070f8c62c89c6ba8d4b", "Url": "https://api.github.com/repos/matrix-org/matrix-android-sdk", "Date": "2016-09-21T07:30:25Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.getFluid().getBlock()) != (this)) && ((fluid) != null)) fluid.setIcons(stillIcon, flowIcon);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/6603/buggy-version/src.main.java.tconstruct.smeltery.blocks.TConstructFluid.java", "BodyUseAPI": [], "Fixed commit": "017a7f70585d36e6ff9d204d63c6c41a8ac8f42a", "Url": "https://api.github.com/repos/SlimeKnights/TinkersConstruct", "Date": "2015-04-20T14:31:47Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((bulletsA) > 5) && ((bulletsB) > 5)) { aw = new AePlayWave(\"./sound_effects/richochet.wav\"); }else if (((bulletsA) > 5) || ((bulletsB) > 5)) { aw = new AePlayWave(\"./sound_effects/shot.wav\"); }else if (((bulletsA) > 0) && ((bulletsB) > 0)) { aw = new AePlayWave(\"./sound_effects/richochet.wav\"); }else if (((bulletsA) > 0) || ((bulletsB) > 0)) { aw = new AePlayWave(\"./sound_effects/pain.wav\"); }else { aw = new AePlayWave(\"./sound_effects/blank.wav\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/5342/buggy-version/Duel.java", "BodyUseAPI": [], "Fixed commit": "8674344dd848d46ab95a07ef1c8b83cda4702413", "Url": "https://api.github.com/repos/ccase/Cowboys", "Date": "2014-10-19T20:49:05Z"},
{"Line": "=>324", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (output.contains(\"error\")) { java.lang.System.out.println(output); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/7333/buggy-version/src.com.spotonresponse.UicdsSoapTools.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "a079caca3d938e85d99d8a157bcae79d5b70f6b3", "Url": "https://api.github.com/repos/edipko/UICDSccf", "Date": "2015-01-22T00:39:24Z"},
{"Line": "=>331", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (output.contains(\"error\")) { java.lang.System.out.println(output); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/7333/buggy-version/src.com.spotonresponse.UicdsSoapTools.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "a079caca3d938e85d99d8a157bcae79d5b70f6b3", "Url": "https://api.github.com/repos/edipko/UICDSccf", "Date": "2015-01-22T00:39:24Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.gultsch.chat.services.XmppConnectionService.4.getPgpEngine()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (pgp != null) { de.gultsch.chat.xml.Element x = packet.findChild(\"x\"); if ((x != null) && (x.getAttribute(\"xmlns\").equals(\"jabber:x:signed\"))) { try { android.util.Log.d(de.gultsch.chat.services.XmppConnectionService.LOGTAG, (\"pgp signature for contact\" + (packet.getAttribute(\"from\")))); contact.setPgpKeyId(pgp.fetchKeyId(packet.findChild(\"status\").getContent(), x.getContent())); } catch (de.gultsch.chat.crypto.PgpEngine.OpenPgpException e) { android.util.Log.d(de.gultsch.chat.services.XmppConnectionService.LOGTAG, \"faulty pgp. just ignore\"); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/1792/buggy-version/src.de.gultsch.chat.services.XmppConnectionService.java", "BodyUseAPI": ["de.gultsch.chat.entities.Contact.setPgpKeyId(pgp.fetchKeyId(packet.findChild(\"status\").getContent(), x.getContent()))", "de.gultsch.chat.crypto.PgpEngine.fetchKeyId(packet.findChild(\"status\").getContent(),x.getContent())"], "Fixed commit": "03d96266f8bbb76e25610e903d74a0afa7dcd03b", "Url": "https://api.github.com/repos/iNPUTmice/SecureConversation", "Date": "2014-02-28T02:22:05Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(((mazeFields.get(newPlayerRow).get(newPlayerColumn).getFieldState()) == (FieldState.FLOOR)) || ((mazeFields.get(newPlayerRow).get(newPlayerColumn).getFieldState()) == (FieldState.DOCK)))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/6272/buggy-version/Sokobrus.app.src.main.java.com.brus.sokobrus.view.Maze.java", "BodyUseAPI": [], "Fixed commit": "e87f0650b8ff61364b79ce74b3bc2ab2dfa1f81e", "Url": "https://api.github.com/repos/brus/Sokobrus", "Date": "2014-11-16T08:54:25Z"},
{"Line": "=>357", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (resourceId == (R.string.disconnected)) { isSerial.setText(\"Getting ready...\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/9228/buggy-version/Android.app.src.main.java.com.polkapolka.bluetooth.le.DeviceControlActivity.java", "BodyUseAPI": [], "Fixed commit": "84b6a18f122fc9b758ee7a565379e9f71c0a2de5", "Url": "https://api.github.com/repos/jellywoo/LongboardControl", "Date": "2017-07-19T01:27:46Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (document_ == null) { return ServerCode; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/2810/buggy-version/src.com.sheepit.client.Utils.java", "BodyUseAPI": [], "Fixed commit": "ce3e82acdd28ab88eef0eb3fb67cce8702804fd9", "Url": "https://api.github.com/repos/PKeidel/sheepit-client", "Date": "2014-12-16T21:17:34Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (reload) { loadNewDataSource(store); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/7769/buggy-version/super-diamond-client.src.main.java.com.github.diamond.client.PropertiesConfiguration.java", "BodyUseAPI": [], "Fixed commit": "c0ae8bcc3d7ca0b65924becb3a664cc48d0ab5e9", "Url": "https://api.github.com/repos/drluorose/super-diamond", "Date": "2017-02-16T11:46:54Z"},
{"Line": "=>350", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((deviation % step) != 0) { length += 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/7100/buggy-version/src.main.java.looly.github.hutool.CollectionUtil.java", "BodyUseAPI": [], "Fixed commit": "ae5ba320c856a0379543f249d156adb6c48b4d23", "Url": "https://api.github.com/repos/looly/hutool", "Date": "2014-05-09T08:19:14Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isInteger(val)) { return java.lang.Long.parseLong(val); }else { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/8161/buggy-version/src.main.java.com.easyinnova.tiff.model.TagValue.java", "BodyUseAPI": ["java.lang.Long.parseLong(java.lang.String)"], "Fixed commit": "8f5ec465829d26682cfee4cf1afc7b8f0e6a0926", "Url": "https://api.github.com/repos/EasyinnovaSL/Tiff-Library-4J", "Date": "2017-05-29T08:19:10Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.itrax.utils.Utility.isValueNullOrEmpty(edt_mobile_number.getText().toString())) { linkedHashMap.put(\"CustomerMobile\", \"\"); }else { linkedHashMap.put(\"CustomerMobile\", edt_mobile_number.getText().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/4140/buggy-version/app.src.main.java.com.itrax.activities.DashBoardActivity.java", "BodyUseAPI": ["java.util.LinkedHashMap.put(java.lang.String,edt_mobile_number.getText().toString())", "android.widget.EditText.getText()", "edt_mobile_number.getText().toString()"], "Fixed commit": "b1932ba1513e31f8b92385505ca700616588f357", "Url": "https://api.github.com/repos/sixscorpions/Itrax", "Date": "2017-07-15T15:04:18Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isVerified) { if (isValidFields()) { postLocationData(); } }else if (com.itrax.utils.Utility.isValueNullOrEmpty(edt_mobile_number.getText().toString())) { if (isValidFields()) { postLocationData(); } }else if ((edt_mobile_number.getText().toString().length()) == 10) { callSendOtp(); }else { com.itrax.utils.Utility.showOKOnlyDialog(this, \"Enter 10 digits mobile number\", com.itrax.utils.Utility.getResourcesString(this, R.string.app_name)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/4140/buggy-version/app.src.main.java.com.itrax.activities.DashBoardActivity.java", "BodyUseAPI": [], "Fixed commit": "b1932ba1513e31f8b92385505ca700616588f357", "Url": "https://api.github.com/repos/sixscorpions/Itrax", "Date": "2017-07-15T15:04:18Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ntut.csie.aspect.AddAspectsMarkerResoluation.getExceptionTypeOfCatchClauseWhichHasBadSmell(int,java.util.List<org.eclipse.jdt.core.dom.CatchClause>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (exceptionType == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/3366/buggy-version/src.ntut.csie.aspect.AddAspectsMarkerResoluation.java", "BodyUseAPI": [], "Fixed commit": "4ed766a80c0d6a60108f0b199823602ea55ea778", "Url": "https://api.github.com/repos/NTUTLAB1321Robusta/Robusta", "Date": "2016-05-30T07:09:51Z"},
{"Line": "=>375", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dx < 0) || (dy <= 0)) { if (((r.height()) <= (minY)) || ((r.width()) <= (minX))) { return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/637/buggy-version/crop.src.main.java.com.soundcloud.android.crop.HighlightView.java", "BodyUseAPI": [], "Fixed commit": "4b5f77e607f4380c22ad1118e0e89032eb22b98b", "Url": "https://api.github.com/repos/jjz/android-crop", "Date": "2015-12-07T07:34:36Z"},
{"Line": "=>507", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((fs.getLocation()) != null) && (fs.getLocation().getWorld().equals(loc.getWorld()))) { if ((java.lang.Math.abs(fs.getLocation().distance(loc))) <= radius) { fs.remove(); removed = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/7729/buggy-version/src.com.projectkorra.ProjectKorra.firebending.FireCombo.java", "BodyUseAPI": ["com.projectkorra.ProjectKorra.firebending.FireCombo.FireComboStream.remove()", "com.projectkorra.ProjectKorra.firebending.FireCombo.FireComboStream.getLocation()", "org.bukkit.Location.distance(org.bukkit.Location)", "java.lang.Math.abs(fs.getLocation().distance(loc))"], "Fixed commit": "2e513be9e865085d175f5c107aebcb0195bd9b97", "Url": "https://api.github.com/repos/jacklin213/ProjectKorra", "Date": "2015-06-21T06:24:38Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((data.getCount()) == 0) { tv.setText(getString(R.string.no_stock_error)); tv.setContentDescription(getString(R.string.no_stock_error)); tv.setVisibility(View.VISIBLE); }else { tv.setVisibility(View.GONE); mCursorAdapter.swapCursor(data); mCursor = data; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/6990/buggy-version/app.src.main.java.com.sam_chordas.android.stockhawk.ui.MyStocksActivity.java", "BodyUseAPI": ["com.sam_chordas.android.stockhawk.rest.QuoteCursorAdapter.swapCursor(android.database.Cursor)"], "Fixed commit": "4bbf7da58d092db9541a76bf18385a2e99cd9eb2", "Url": "https://api.github.com/repos/sagar15795/StockHawk", "Date": "2016-08-04T17:09:44Z"},
{"Line": "=>861", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.ParameterizedType.getRawType()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((rawTye == (java.util.Map.Entry.class)) && (obj instanceof java.util.Map)) && ((((java.util.Map) (obj)).size()) == 1)) { java.util.Map.Entry entry = ((java.util.Map.Entry) (((java.util.Map) (obj)).entrySet().iterator().next())); return ((T) (entry)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/4675/buggy-version/src.main.java.com.alibaba.fastjson.util.TypeUtils.java", "BodyUseAPI": ["java.util.Set.iterator()", "java.util.Iterator.next()", "java.lang.Object.entrySet()"], "Fixed commit": "9a02c170e7ab2156c9765e202df4554df4ed8306", "Url": "https://api.github.com/repos/FlakyTestDetection/fastjson", "Date": "2017-11-16T13:16:18Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (event.isCancelled()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/5728/buggy-version/src.main.java.com.laytonsmith.commandhelper.CommandHelperInterpreterListener.java", "BodyUseAPI": [], "Fixed commit": "9ee98da325b2a62eff8bf0bc4f5478e7e3d3cf7b", "Url": "https://api.github.com/repos/jb-aero/commandhelper", "Date": "2012-12-07T04:39:58Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.length()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((lowerCase.length()) == lengthBeforeConversion) { result.append(lowerCase.charAt(0)); lowerCase = lowerCase.substring(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/3047/buggy-version/src.main.java.de.aikiit.spamprotector.converter.SpamProtector.java", "BodyUseAPI": ["java.lang.String.substring(int)", "java.lang.String.charAt(int)", "java.lang.StringBuilder.append(char)"], "Fixed commit": "e0c92cb68bedae0e288be8fb4f4d5e9db7866928", "Url": "https://api.github.com/repos/ottlinger/spamschutz", "Date": "2015-12-13T11:59:50Z"},
{"Line": "=>340", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (iValue instanceof java.lang.Double) return iValue; else if (iValue instanceof java.lang.String) return java.lang.Double.parseDouble(((java.lang.String) (iValue))); else if (iValue instanceof java.lang.Float) return java.lang.Double.parseDouble(((java.lang.String) (iValue.toString()))); else return ((java.lang.Number) (iValue)).doubleValue();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/6536/buggy-version/core.src.main.java.com.orientechnologies.orient.core.metadata.schema.OType.java", "BodyUseAPI": ["java.lang.Double.parseDouble(java.lang.String)", "java.lang.Object.toString()"], "Fixed commit": "ac166d98d88044fb32bdab805152334d0f767234", "Url": "https://api.github.com/repos/giastfader/orientdb", "Date": "2013-01-11T13:07:53Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.concurrent.ConcurrentMap<K, java.util.Queue<voldemort.utils.pool.AsyncResourceRequest<V>>>.get(K)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (requestQueueMap.replace(key, requestQueueToDestroy, newRequestQueue)) { destroyRequestQueue(requestQueueToDestroy); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/6705/buggy-version/src.java.voldemort.utils.pool.QueuedKeyedResourcePool.java", "BodyUseAPI": ["voldemort.utils.pool.QueuedKeyedResourcePool<K, V>.destroyRequestQueue(java.util.Queue<voldemort.utils.pool.AsyncResourceRequest<V>>)"], "Fixed commit": "2768eef1dc34f6496eeaa4781308792c00276a35", "Url": "https://api.github.com/repos/baepiff/voldemort", "Date": "2012-11-08T22:48:38Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (requestQueue != null) { voldemort.utils.pool.AsyncResourceRequest<V> resourceRequest = requestQueue.poll(); while (resourceRequest != null) { destroyRequest(resourceRequest); resourceRequest = requestQueue.poll(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/6705/buggy-version/src.java.voldemort.utils.pool.QueuedKeyedResourcePool.java", "BodyUseAPI": ["java.util.Queue<voldemort.utils.pool.AsyncResourceRequest<V>>.poll()", "java.util.Queue<voldemort.utils.pool.AsyncResourceRequest<V>>.poll()"], "Fixed commit": "2768eef1dc34f6496eeaa4781308792c00276a35", "Url": "https://api.github.com/repos/baepiff/voldemort", "Date": "2012-11-08T22:48:38Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isPlaying) { com.geecko.QuickLyric.broadcastReceiver.MusicBroadcastReceiver.lastTimePlaying = java.lang.System.nanoTime(); }else if (((java.lang.System.nanoTime()) - (com.geecko.QuickLyric.broadcastReceiver.MusicBroadcastReceiver.lastTimePlaying)) < (com.geecko.QuickLyric.broadcastReceiver.MusicBroadcastReceiver.IGNORE_PAUSE_DIFF_NS)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/5883/buggy-version/QuickLyric.src.main.java.com.geecko.QuickLyric.broadcastReceiver.MusicBroadcastReceiver.java", "BodyUseAPI": [], "Fixed commit": "d8f613d36eff030074863bd2358e9ebcf68330f2", "Url": "https://api.github.com/repos/svenoaks/QuickLyric", "Date": "2017-04-01T00:56:46Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (diffinDays == 0) { holder.txtDeadline.setText(\"Due this week..\"); }else { holder.txtDeadline.setText(\"Overdue..\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/1941/buggy-version/ProjectManager.src.com.icreate.projectx.project.ProjectListBaseAdapter.java", "BodyUseAPI": [], "Fixed commit": "0813f60479dfd05a646b658ddc7e6c69b3e2ceb0", "Url": "https://api.github.com/repos/ssesha/Fibonacci", "Date": "2012-07-05T19:00:09Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.iabako.shared.tools.GenericTools.isEmpty(subject.getValue())) { org.iabako.client.ui.layout.widget.validation.ValidationMessage.getFirstFromDOM().showErrorMessage(true, true, \"communication_no_subject_error\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/4413/buggy-version/src.main.java.org.iabako.client.ui.form.business.communication.CommunicationForm.java", "BodyUseAPI": [], "Fixed commit": "0bca46dd63b2032f33ce58bc7723cd60b80b4354", "Url": "https://api.github.com/repos/iabakoproject/iabako", "Date": "2016-09-08T09:35:48Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.legit2.Demigods.DDivineBlocks.getDivineBlock(divineBlock.getParent())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((location.getWorld()) != (parentBlock.getLocation().getWorld())) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/7288/buggy-version/src.com.legit2.Demigods.Utilities.DZoneUtil.java", "BodyUseAPI": [], "Fixed commit": "c6413872114fbcd0e18ddc9ac73552635bcee4bb", "Url": "https://api.github.com/repos/Clashnia/Minecraft-Demigods", "Date": "2013-02-03T05:28:28Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((location.getWorld()) != (divineBlock.getLocation().getWorld())) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/7288/buggy-version/src.com.legit2.Demigods.Utilities.DZoneUtil.java", "BodyUseAPI": [], "Fixed commit": "c6413872114fbcd0e18ddc9ac73552635bcee4bb", "Url": "https://api.github.com/repos/Clashnia/Minecraft-Demigods", "Date": "2013-02-03T05:28:28Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((location.getWorld()) != (divineBlock.getWorld())) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/7288/buggy-version/src.com.legit2.Demigods.Utilities.DZoneUtil.java", "BodyUseAPI": [], "Fixed commit": "c6413872114fbcd0e18ddc9ac73552635bcee4bb", "Url": "https://api.github.com/repos/Clashnia/Minecraft-Demigods", "Date": "2013-02-03T05:28:28Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((url.indexOf(org.wso2.emm.agent.ServerDetails.COLON)) > (-1)) { return url.substring(((url.indexOf(org.wso2.emm.agent.ServerDetails.COLON)) + 1), url.length()); }else { if (protocol.equals(org.wso2.emm.agent.ServerDetails.PROTOCOL_HTTP)) { return java.lang.String.valueOf(org.wso2.emm.agent.proxy.utils.Constants.HTTP); }else { return java.lang.String.valueOf(org.wso2.emm.agent.proxy.utils.Constants.HTTPS); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/4967/buggy-version/modules.mobile-agents.android.client.client.src.main.java.org.wso2.emm.agent.ServerDetails.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.indexOf(java.lang.String)", "java.lang.String.length()"], "Fixed commit": "db76eaf549e7ddceee110151d9a009f5f369fbdd", "Url": "https://api.github.com/repos/wso2-attic/product-emm", "Date": "2016-05-12T05:29:59Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cycleList.get(position).getClosed().equals(\"open\")) { android.util.Log.i(\">>>>>>>>>\", \"CLOSING\"); uwi.dcit.AgriExpenseTT.fragments.FragmentViewCycles.CloseConfirmator c = new uwi.dcit.AgriExpenseTT.fragments.FragmentViewCycles.CloseConfirmator(position, ((uwi.dcit.AgriExpenseTT.fragments.FragmentViewCycles.CycleListAdapter) (l.getAdapter()))); android.app.AlertDialog.Builder alertBuilder = new android.app.AlertDialog.Builder(getActivity()); alertBuilder.setMessage(\"Are you sure you want to close?\").setCancelable(true).setPositiveButton(\"Close\", c).setNegativeButton(\"Cancel\", c).create().show(); }else { android.widget.Toast.makeText(getActivity(), \"Cannot close a closed cycle\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/1360/buggy-version/AgriExpenseTT.src.uwi.dcit.AgriExpenseTT.fragments.FragmentViewCycles.java", "BodyUseAPI": [], "Fixed commit": "ecfbd90568f7ce02916b41939da89587217c3c46", "Url": "https://api.github.com/repos/uwidcit/agriExpenseTT", "Date": "2015-08-19T16:05:20Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((event.getTarget()) != null) && ((event.getTarget().getBlockPos()) != null)) { net.minecraft.block.Block block = de.ellpeck.actuallyadditions.mod.util.PosUtil.getBlock(event.getTarget().getBlockPos(), event.getWorld()); if (block == fluid) { event.getWorld().setBlockToAir(event.getTarget().getBlockPos()); event.setFilledBucket(new net.minecraft.item.ItemStack(item)); event.setResult(Event.Result.ALLOW); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/714/buggy-version/src.main.java.de.ellpeck.actuallyadditions.mod.event.BucketFillEvent.java", "BodyUseAPI": ["de.ellpeck.actuallyadditions.mod.util.PosUtil.getBlock(event.getTarget().getBlockPos(),event.getWorld())", "net.minecraftforge.event.entity.player.FillBucketEvent.getTarget()", "net.minecraftforge.event.entity.player.FillBucketEvent.setFilledBucket(net.minecraft.item.ItemStack)", "event.getWorld().setBlockToAir(event.getTarget().getBlockPos())", "net.minecraftforge.event.entity.player.FillBucketEvent.getTarget()", "net.minecraftforge.event.entity.player.FillBucketEvent.setResult(Event.Result.ALLOW)", "net.minecraftforge.event.entity.player.FillBucketEvent.getWorld()", "net.minecraftforge.event.entity.player.FillBucketEvent.getWorld()", "event.getTarget().getBlockPos()", "event.getTarget().getBlockPos()"], "Fixed commit": "e267d0110d53aa538b1012bb2ddd1cf7aec24429", "Url": "https://api.github.com/repos/Ellpeck/ActuallyAdditions", "Date": "2016-04-29T17:31:33Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.codecool.faceCode.dao.RelationshipDAO.getRelation(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((temp.getStatus()) == (-1)) && (newStatus == 2)) { newFriendRequest(userOneID, userTwoID, userPerformed); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/6157/buggy-version/src.main.java.com.codecool.faceCode.dao.RelationshipDAO.java", "BodyUseAPI": [], "Fixed commit": "25802c63c11107b6a1c70889b032cbf71f0564fa", "Url": "https://api.github.com/repos/Tela96/faceCode", "Date": "2017-09-04T10:23:06Z"},
{"Line": "=>434", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (ch.njol.skript.Skript.classExists(\"org.bukkit.event.entity.AreaEffectCloudApplyEvent\")) { ch.njol.skript.registrations.EventValues.registerEventValue(org.bukkit.event.entity.AreaEffectCloudApplyEvent.class, org.bukkit.potion.PotionEffectType.class, new ch.njol.skript.util.Getter<org.bukkit.potion.PotionEffectType, org.bukkit.event.entity.AreaEffectCloudApplyEvent>() { @java.lang.Override @org.eclipse.jdt.annotation.Nullable public org.bukkit.potion.PotionEffectType get(org.bukkit.event.entity.AreaEffectCloudApplyEvent e) { return e.getEntity().getBasePotionData().getType().getEffectType(); } }, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/6813/buggy-version/src.main.java.ch.njol.skript.classes.data.BukkitEventValues.java", "BodyUseAPI": [], "Fixed commit": "f6878125eda08720e8718f4fe67bf15fd2b9398e", "Url": "https://api.github.com/repos/SkriptLang/Skript", "Date": "2016-11-27T12:59:55Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((image.getSource().length()) > 0) { uri = new java.net.URL(image.getSource()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/6058/buggy-version/src.cd.catalog.service.CoverService.java", "BodyUseAPI": ["cd.catalog.service.lastfm.getinfo.Image.getSource()"], "Fixed commit": "9c457c2b8529cc124d4c3256f633e56479d84ce4", "Url": "https://api.github.com/repos/r3h6/BFH.BTI7055q.Project.CDCatalog", "Date": "2015-06-06T19:24:30Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.sf.dbdeploy.AntTarget.createUndoOutputPrintStream(java.io.File)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (undoOutputPrintStream != null) { undoOutputPrintStream.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/8505/buggy-version/dbdeploy.src.java.net.sf.dbdeploy.AntTarget.java", "BodyUseAPI": ["java.io.PrintStream.close()"], "Fixed commit": "ed6ab9651424850b046e81282746df78fb0ebd2b", "Url": "https://api.github.com/repos/sudr/dbdeploy", "Date": "2007-01-09T15:28:45Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.getParentFile()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(parentFile.exists())) { if (!(parentFile.mkdirs())) { org.terasology.entitySystem.persistence.WorldPersister.logger.error(\"Failed to create world save directory {}\", parentFile); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/8127/buggy-version/src.main.java.org.terasology.entitySystem.persistence.WorldPersister.java", "BodyUseAPI": ["java.io.File.mkdirs()", "org.slf4j.Logger.error(java.lang.String,java.io.File)"], "Fixed commit": "a74dd4d8cb8d23d4fa750b1eb19cfa87c37bfc8e", "Url": "https://api.github.com/repos/mkalb/Terasology", "Date": "2012-10-24T03:10:56Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (chest == null) chest = chestAt(coordinate.add(0, 0, (-1)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/8528/buggy-version/src.simpleserver.config.ChestList.java", "BodyUseAPI": [], "Fixed commit": "a918134f2cedabe5a7e634dd9817abbbe269a1cc", "Url": "https://api.github.com/repos/SimpleServer/SimpleServer", "Date": "2011-05-28T15:55:16Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (map instanceof com.alibaba.fastjson.JSONObject) { map = ((com.alibaba.fastjson.JSONObject) (map)).getInnerMap(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/7024/buggy-version/src.main.java.com.alibaba.fastjson.serializer.MapSerializer.java", "BodyUseAPI": [], "Fixed commit": "3b4db019c5ed598112844532f73c0ed65ad22380", "Url": "https://api.github.com/repos/FlakyTestDetection/fastjson", "Date": "2017-11-03T07:16:38Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(m_componentMetadata.containsElement(\"scheduler\", fr.liglab.adele.cilia.internals.factories.DEFAULT_NAMESPACE))) && (!(m_componentMetadata.containsElement(\"scheduler\")))) { m_componentMetadata.addElement(scheduler); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/2099/buggy-version/framework.runtime.src.main.java.fr.liglab.adele.cilia.internals.factories.IOAdapterFactory.java", "BodyUseAPI": ["fr.liglab.adele.cilia.internals.factories.IOAdapterFactory.addElement(org.apache.felix.ipojo.metadata.Element)"], "Fixed commit": "3079e800d270caf6c386d41cb2f7ac581f260217", "Url": "https://api.github.com/repos/AdeleResearchGroup/Cilia", "Date": "2012-12-19T13:01:52Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(m_componentMetadata.containsElement(\"dispatcher\", fr.liglab.adele.cilia.internals.factories.DEFAULT_NAMESPACE))) && (!(m_componentMetadata.containsElement(\"dispatcher\")))) { m_componentMetadata.addElement(dispatcher); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/2099/buggy-version/framework.runtime.src.main.java.fr.liglab.adele.cilia.internals.factories.IOAdapterFactory.java", "BodyUseAPI": ["fr.liglab.adele.cilia.internals.factories.IOAdapterFactory.addElement(org.apache.felix.ipojo.metadata.Element)"], "Fixed commit": "3079e800d270caf6c386d41cb2f7ac581f260217", "Url": "https://api.github.com/repos/AdeleResearchGroup/Cilia", "Date": "2012-12-19T13:01:52Z"},
{"Line": "=>782", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) <= (Build.VERSION_CODES.JELLY_BEAN_MR1)) { jp.co.recruit_lifestyle.android.floatingview.TrashView.AnimationHandler.clearClippedChildren(trashView.mRootView); jp.co.recruit_lifestyle.android.floatingview.TrashView.AnimationHandler.clearClippedChildren(trashView.mTrashIconRootView); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/3220/buggy-version/library.src.main.java.jp.co.recruit_lifestyle.android.floatingview.TrashView.java", "BodyUseAPI": [], "Fixed commit": "df2f654e61cf91c2ce1dc772a24c8612dd4e4b87", "Url": "https://api.github.com/repos/recruit-lifestyle/FloatingView", "Date": "2017-02-02T08:22:11Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.teja.models.Team.getTeamName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (allTeams.containsKey(teamName)) { throw new com.teja.models.TeamAlreadyExistsException(\"Team already exists\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/170/buggy-version/src.com.teja.models.Teams.java", "BodyUseAPI": [], "Fixed commit": "e62bca52a7c3cbe2122e2756560cccbcae98a48e", "Url": "https://api.github.com/repos/tejact/soccer-league-organizer", "Date": "2016-09-30T16:56:44Z"},
{"Line": "=>364", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["nak.nakloidGUI.coredata.CoreData.getVoice(txtAlias.getText())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (voice == null) { org.eclipse.jface.dialogs.MessageDialog.openError(getShell(), \"NakloidGUI\", \"oto.ini\u306b\u5b58\u5728\u3057\u306a\u3044\u767a\u97f3\u304c\u9078\u629e\u3055\u308c\u307e\u3057\u305f\u3002\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/2931/buggy-version/nak.nakloidGUI.gui.NoteOption.java", "BodyUseAPI": [], "Fixed commit": "5d6c792cc4c498fb7d66f23d2e25846fc20b2403", "Url": "https://api.github.com/repos/acknak/NakloidGUI", "Date": "2016-07-10T07:57:02Z"},
{"Line": "=>899", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.hadoop.yarn.client.api.impl.YarnClientImpl.DEBUG) org.apache.hadoop.yarn.client.api.impl.YarnClientImpl.LOG.info(\"No pressure, resetting clusterPressureEventStatus\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/5804/buggy-version/hadoop-yarn-project.hadoop-yarn.hadoop-yarn-client.src.main.java.org.apache.hadoop.yarn.client.api.impl.YarnClientImpl.java", "BodyUseAPI": [], "Fixed commit": "fdeb6c1b8a418f20514a3b79b5263ce14690e794", "Url": "https://api.github.com/repos/GoodOlChuck/hadoop", "Date": "2016-03-27T16:55:51Z"},
{"Line": "=>903", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.hadoop.yarn.client.api.impl.YarnClientImpl.DEBUG) org.apache.hadoop.yarn.client.api.impl.YarnClientImpl.LOG.info((\"Setting pressure, num containers requested: \" + (clusterPressureEvent.requestedContainers)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/5804/buggy-version/hadoop-yarn-project.hadoop-yarn.hadoop-yarn-client.src.main.java.org.apache.hadoop.yarn.client.api.impl.YarnClientImpl.java", "BodyUseAPI": [], "Fixed commit": "fdeb6c1b8a418f20514a3b79b5263ce14690e794", "Url": "https://api.github.com/repos/GoodOlChuck/hadoop", "Date": "2016-03-27T16:55:51Z"},
{"Line": "=>339", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.structr.module.JarConfigurationProvider.instantiate(java.lang.Class<? extends org.structr.core.graph.RelationshipInterface>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (rel == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/5624/buggy-version/structr-core.src.main.java.org.structr.module.JarConfigurationProvider.java", "BodyUseAPI": [], "Fixed commit": "74e0aa084370462f17c434947b21fafa24a8c4db", "Url": "https://api.github.com/repos/structr/structr", "Date": "2014-04-02T08:30:37Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Long, org.structr.schema.importer.TypeInfo>.get(endNode.getId())", "java.util.Map<java.lang.Long, org.structr.schema.importer.TypeInfo>.get(startNode.getId())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((startTypeInfo == null) || (endTypeInfo == null)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/5624/buggy-version/structr-core.src.main.java.org.structr.schema.importer.SchemaImporter.java", "BodyUseAPI": [], "Fixed commit": "74e0aa084370462f17c434947b21fafa24a8c4db", "Url": "https://api.github.com/repos/structr/structr", "Date": "2014-04-02T08:30:37Z"},
{"Line": "=>492", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openmrs.api.db.ObsDAO.getObsByUuid(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((obsByUuid != null) && (obsByUuid.isComplex())) { return getHandler(obsByUuid).getObs(obsByUuid, ComplexObsHandler.RAW_VIEW); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/8108/buggy-version/api.src.main.java.org.openmrs.api.impl.ObsServiceImpl.java", "BodyUseAPI": ["org.openmrs.obs.ComplexObsHandler.getObs(org.openmrs.Obs,ComplexObsHandler.RAW_VIEW)", "org.openmrs.api.impl.ObsServiceImpl.getHandler(org.openmrs.Obs)"], "Fixed commit": "d28993ab726f057232386919277d98fa60ede485", "Url": "https://api.github.com/repos/angshu/openmrs-core", "Date": "2017-08-22T08:32:30Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newTypeface == null) { newTypeface = it.bsdsoftware.bsdcustomfontwidget.BSDFont.getInstance().normalFont; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/6311/buggy-version/library.src.main.java.it.bsdsoftware.bsdcustomfontwidget.BSDFont.java", "BodyUseAPI": [], "Fixed commit": "88accdf5f73b188011f7e371e4ae5c58d11ccce5", "Url": "https://api.github.com/repos/bsdsoftware/BSDCustomFontWidget", "Date": "2016-04-29T07:35:36Z"},
{"Line": "=>346", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.model.UserModel.getFriendsList(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (friends.isEmpty()) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/3918/buggy-version/buymestuff.src.com.model.UserModel.java", "BodyUseAPI": [], "Fixed commit": "00822f6f7a9d45fa0e9fff8d0c3bc8bdb0f063f7", "Url": "https://api.github.com/repos/davekenny/buymestuff", "Date": "2014-11-27T23:38:30Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.camoItem) != null) { copyCamoItem = this.camoItem.copy(); this.camoItem = null; this.onInventoryChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/4740/buggy-version/DT-source.slimevoid.dynamictransport.tileentity.TileEntityTransportBase.java", "BodyUseAPI": [], "Fixed commit": "c7e2eb2e12b8a696bb28c12736c7fcc6a69bf0c0", "Url": "https://api.github.com/repos/SlimeVoid/DynamicTransport", "Date": "2014-01-26T20:07:40Z"},
{"Line": "=>2659", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (retryBasedOnFailedReuseOfCachedHandle(e, attempt)) { retry = true; break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/6381/buggy-version/src.main.java.com.microsoft.sqlserver.jdbc.SQLServerPreparedStatement.java", "BodyUseAPI": [], "Fixed commit": "ec96059d4d3a6156791f83291c765a739bf983a5", "Url": "https://api.github.com/repos/Microsoft/mssql-jdbc", "Date": "2017-05-30T22:42:50Z"},
{"Line": "=>2679", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (retry) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/6381/buggy-version/src.main.java.com.microsoft.sqlserver.jdbc.SQLServerPreparedStatement.java", "BodyUseAPI": [], "Fixed commit": "ec96059d4d3a6156791f83291c765a739bf983a5", "Url": "https://api.github.com/repos/Microsoft/mssql-jdbc", "Date": "2017-05-30T22:42:50Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (event.getUser().getRealName().equals(event.getBot().getUserBot().getRealName())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/3177/buggy-version/src.main.java.com.chamelaeon.dicebot.framework.DicebotListenerAdapter.java", "BodyUseAPI": [], "Fixed commit": "902ccb5423582e7ea02ecb4294f00621d6f27500", "Url": "https://api.github.com/repos/chamelaeon/Dicebot", "Date": "2014-11-08T16:43:06Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(hasComment())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/3835/buggy-version/WordPress.src.main.java.org.wordpress.android.ui.comments.CommentDetailFragment.java", "BodyUseAPI": [], "Fixed commit": "ec764ed51e60bfc199d0d0000f97968b306c019c", "Url": "https://api.github.com/repos/wordpress-mobile/WordPress-Android", "Date": "2015-07-07T01:52:00Z"},
{"Line": "=>632", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Map.get_map()[this.x][((this.y) + y)]) == 0) { if ((treffer_oben) == false) { treffer_oben = true; Map.get_map()[this.x][((this.y) + y)] = 11; } }else if ((Map.get_map()[this.x][((this.y) + y)]) == 9) { if ((treffer_oben) == false) { treffer_oben = true; Map.get_map()[this.x][((this.y) + y)] = 14; } }else if (((Map.get_map()[this.x][((this.y) + y)]) == 15) || ((Map.get_map()[this.x][((this.y) + y)]) == 12)) { if ((treffer_oben) == false) { treffer_oben = true; Map.get_map()[this.x][((this.y) + y)] = 6; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/2485/buggy-version/src.Bombe.java", "BodyUseAPI": [], "Fixed commit": "564be8eb3621882fb883b3ae32d18ed8bd314b94", "Url": "https://api.github.com/repos/propra12-orga/gruppe23", "Date": "2012-07-04T21:36:14Z"},
{"Line": "=>517", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Map.get_map()[((this.x) + x)][this.y]) == 0) { if ((treffer_links) == false) { treffer_links = true; Map.get_map()[((this.x) + x)][this.y] = 11; } }else if ((Map.get_map()[((this.x) + x)][this.y]) == 9) { if ((treffer_links) == false) { treffer_links = true; Map.get_map()[((this.x) + x)][this.y] = 14; } }else if (((Map.get_map()[((this.x) + x)][this.y]) == 15) || ((Map.get_map()[((this.x) + x)][this.y]) == 12)) { if ((treffer_links) == false) { treffer_links = true; Map.get_map()[((this.x) + x)][this.y] = 6; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/2485/buggy-version/src.Bombe.java", "BodyUseAPI": [], "Fixed commit": "564be8eb3621882fb883b3ae32d18ed8bd314b94", "Url": "https://api.github.com/repos/propra12-orga/gruppe23", "Date": "2012-07-04T21:36:14Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.terasology.crafting.systems.RecipeStore.getIngredientNames(prefab.getName())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (otherNames != null) { for (java.lang.String otherName : otherNames) { addIconPair(otherName.toLowerCase(), icon); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/4442/buggy-version/src.main.java.org.terasology.crafting.systems.IconManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "0100d2b16a177e823891e092870b5b3c569fd90d", "Url": "https://api.github.com/repos/Terasology/BasicCrafting", "Date": "2017-12-24T02:26:36Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Time.distanceset) { Time.s = new Stopwatch(); Time.mode = 1; java.lang.System.out.println(\"\\n1st sensor triggered\"); }else { Time.label.setText(\"Please set the distance.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/1272/buggy-version/src.Time.java", "BodyUseAPI": [], "Fixed commit": "bfae58aa1e2f26a9b65a78653197e988d605f0da", "Url": "https://api.github.com/repos/DrDab/Makey-Makey-Speedometer", "Date": "2017-11-04T17:35:38Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((rep.getSignal()) != null) currNonPotWeightSig += rep.getSignal().countHits(reg);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/8147/buggy-version/src.org.seqcode.projects.multigps.framework.PotentialRegionFilter.java", "BodyUseAPI": ["rep.getSignal().countHits(org.seqcode.genome.location.Region)", "org.seqcode.deepseq.experiments.ControlledExperiment.getSignal()"], "Fixed commit": "0161caed8266634922199fc29c734a60ad2c7b1e", "Url": "https://api.github.com/repos/StephDC/multigps", "Date": "2017-07-10T18:59:25Z"},
{"Line": "=>270", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((rep.getControl()) != null) currNonPotWeightCtrl += rep.getControl().countHits(reg);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/8147/buggy-version/src.org.seqcode.projects.multigps.framework.PotentialRegionFilter.java", "BodyUseAPI": ["org.seqcode.deepseq.experiments.ControlledExperiment.getControl()", "rep.getControl().countHits(org.seqcode.genome.location.Region)"], "Fixed commit": "0161caed8266634922199fc29c734a60ad2c7b1e", "Url": "https://api.github.com/repos/StephDC/multigps", "Date": "2017-07-10T18:59:25Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((rep.getControl()) != null) currPotWeightCtrl += rep.getControl().countHits(reg);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/8147/buggy-version/src.org.seqcode.projects.multigps.framework.PotentialRegionFilter.java", "BodyUseAPI": ["rep.getControl().countHits(org.seqcode.genome.location.Region)", "org.seqcode.deepseq.experiments.ControlledExperiment.getControl()"], "Fixed commit": "0161caed8266634922199fc29c734a60ad2c7b1e", "Url": "https://api.github.com/repos/StephDC/multigps", "Date": "2017-07-10T18:59:25Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((rep.getSignal()) != null) currPotWeightSig += rep.getSignal().countHits(reg);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/8147/buggy-version/src.org.seqcode.projects.multigps.framework.PotentialRegionFilter.java", "BodyUseAPI": ["rep.getSignal().countHits(org.seqcode.genome.location.Region)", "org.seqcode.deepseq.experiments.ControlledExperiment.getSignal()"], "Fixed commit": "0161caed8266634922199fc29c734a60ad2c7b1e", "Url": "https://api.github.com/repos/StephDC/multigps", "Date": "2017-07-10T18:59:25Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((applicationContext) == null) { org.jdto.spring.SpringDTOBinder.logger.warn(\"No application context, please veryfy you are using this bean the right way.\"); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/5080/buggy-version/jdto.src.main.java.org.jdto.spring.SpringDTOBinder.java", "BodyUseAPI": [], "Fixed commit": "53c7a658ac7fcdd7ba336a349c5b040792176f0b", "Url": "https://api.github.com/repos/jDTOBinder/jDTO-Binder", "Date": "2012-10-01T19:01:40Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((value1 <= 0) && (value2 <= 0)) onePlusDelta = value2 / value1; else if ((value1 > 0) && (value2 > 0)) onePlusDelta = value1 / value2;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/9107/buggy-version/RODES.src.main.java.evochecker.genetic.jmetal.util.eDominanceRevisedWorstCaseDominanceComparator.java", "BodyUseAPI": [], "Fixed commit": "f55f7b81b7cf006ff63b33e4023513970ea3dfbd", "Url": "https://api.github.com/repos/gerasimou/RODES", "Date": "2017-09-03T12:07:38Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((value1 <= 0) && (value2 <= 0)) onePlusDelta = value1 / value2; else if ((value1 > 0) && (value2 > 0)) onePlusDelta = value2 / value1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/9107/buggy-version/RODES.src.main.java.evochecker.genetic.jmetal.util.eDominanceRevisedWorstCaseDominanceComparator.java", "BodyUseAPI": [], "Fixed commit": "f55f7b81b7cf006ff63b33e4023513970ea3dfbd", "Url": "https://api.github.com/repos/gerasimou/RODES", "Date": "2017-09-03T12:07:38Z"},
{"Line": "=>773", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((split.length) == 0) { split = new java.lang.String[1]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/4444/buggy-version/src.com.android2.calculator3.Logic.java", "BodyUseAPI": [], "Fixed commit": "cf23c2ba821a4992de2a6c1b2c96afbebd780b6b", "Url": "https://api.github.com/repos/Xlythe/android_packages_apps_Calculator", "Date": "2013-02-04T02:17:15Z"},
{"Line": "=>335", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.photon.phresco.framework.actions.applications.Applications.s_debugEnabled) { com.photon.phresco.framework.actions.applications.Applications.S_LOGGER.debug(\"Entering Method Applications.update()\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/8519/buggy-version/phresco-framework-web.src.main.java.com.photon.phresco.framework.actions.applications.Applications.java", "BodyUseAPI": [], "Fixed commit": "ac4860cf8c8a0040c67d877461fd0a61e34cf8ed", "Url": "https://api.github.com/repos/phresco/framework", "Date": "2013-04-02T14:53:53Z"},
{"Line": "=>783", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (libraryIndexId != null) { org.apache.lucene.search.BooleanQuery query = new org.apache.lucene.search.BooleanQuery(); java.util.List<org.apache.lucene.document.Document> queryResults; query.add(new org.apache.lucene.search.BooleanClause(new org.apache.lucene.search.TermQuery(new org.apache.lucene.index.Term(ENTITY_TYPE_FIELD, org.opentravel.schemacompiler.model.TLLibrary.class.getName())), org.apache.lucene.search.BooleanClause.Occur.MUST_NOT)); query.add(new org.apache.lucene.search.BooleanClause(new org.apache.lucene.search.TermQuery(new org.apache.lucene.index.Term(OWNING_LIBRARY_FIELD, libraryIndexId)), org.apache.lucene.search.BooleanClause.Occur.MUST)); query.add(new org.apache.lucene.search.BooleanClause(new org.apache.lucene.search.TermQuery(new org.apache.lucene.index.Term(ENTITY_NAME_FIELD, entityName)), org.apache.lucene.search.BooleanClause.Occur.MUST)); queryResults = executeQuery(query, (resolveContent ? null : org.opentravel.schemacompiler.index.FreeTextSearchService.nonContentAttrs)); if ((queryResults.size()) > 0) { searchResult = new org.opentravel.schemacompiler.index.EntitySearchResult(queryResults.get(0), this); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/8873/buggy-version/ota2-repository-service.src.main.java.org.opentravel.schemacompiler.index.FreeTextSearchService.java", "BodyUseAPI": ["org.apache.lucene.search.BooleanQuery.add(org.apache.lucene.search.BooleanClause)"], "Fixed commit": "19ea9edb5a7d1b59521f68848c3854eec8de9d74", "Url": "https://api.github.com/repos/OpenTravel/OTM-DE-Compiler", "Date": "2016-08-09T17:03:39Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getSupportActionBar()) != null) { getSupportActionBar().setDisplayHomeAsUpEnabled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/3139/buggy-version/app.src.main.java.org.fossasia.susi.ai.activities.SignUpActivity.java", "BodyUseAPI": [], "Fixed commit": "d97a58c2c2bfb2200d31eea68cd0ddd5ed3d2ae3", "Url": "https://api.github.com/repos/aakashkhatter1296/susi_android", "Date": "2016-10-14T08:44:50Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dcpu.Assembler.simpleParam(boolean)", "java.lang.String.equals(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (neg && (!(p2 instanceof dcpu.Assembler.SimpleConstParam))) fail(\"Bad parameter2\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/3397/buggy-version/src.dcpu.Assembler.java", "BodyUseAPI": [], "Fixed commit": "1fc2b34bd392ef6d03ff696fa1f6376f0ad3287d", "Url": "https://api.github.com/repos/aimozg/ja-dcpu", "Date": "2012-04-12T19:17:27Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((object) instanceof de.urszeidler.eclipse.shr5.Magazin) { emfFormBuilder.addTextEntry(Shr5Package.Literals.MAGAZIN__TYPE, grpGegenstand); org.eclipse.swt.layout.GridData controlGridData = new org.eclipse.swt.layout.GridData(org.eclipse.swt.SWT.FILL, org.eclipse.swt.SWT.FILL, true, true, 2, 3); controlGridData.heightHint = 150; emfFormBuilder.addTextEntry(Shr5Package.Literals.MAGAZIN__BULLETS, composite_runtime, controlGridData); }else if ((object) instanceof de.urszeidler.eclipse.shr5.Magazin) { emfFormBuilder.addTextEntry(Shr5Package.Literals.SUBSTANCE_CONTAINER__SUBSTANCE, grpGegenstand); }else if ((object) instanceof de.urszeidler.eclipse.shr5.DefaultWifi) { emfFormBuilder.addTextEntry(Shr5Package.Literals.ABSTRACT_MATRIX_DEVICE__DEVICE_RATING, grpGegenstand); emfFormBuilder.addTextEntry(Shr5Package.Literals.MATRIX_ATTRIBUTES__GERAETESTUFE, grpGegenstand); emfFormBuilder.addTextEntry(Shr5Package.Literals.MATRIX_ATTRIBUTES__DATENVERARBEITUNG, grpGegenstand); emfFormBuilder.addTextEntry(Shr5Package.Literals.MATRIX_ATTRIBUTES__FIREWALL, grpGegenstand); emfFormBuilder.addTextEntry(Shr5Package.Literals.MATRIX_ATTRIBUTES__CURRENT_MODUS, composite_runtime); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/1380/buggy-version/de.urszeidler.shr5.ecp.src.de.urszeidler.shr5.ecp.editor.pages.GegenstandPage.java", "BodyUseAPI": [], "Fixed commit": "dd50b90b0ddb67834733437b34f7a03cc76ea6fc", "Url": "https://api.github.com/repos/UrsZeidler/shr5rcp", "Date": "2014-12-12T20:39:49Z"},
{"Line": "=>520", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<data.EntityMention>.get(int)", "java.util.List<data.EntityMention>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((goldCoreferenceEdgesByEntities.containsKey(new edu.illinois.cs.cogcomp.core.datastructures.Pair(e1, e2))) || (goldCoreferenceEdgesByEntities.containsKey(new edu.illinois.cs.cogcomp.core.datastructures.Pair(e2, e1)))) { isCoreferent = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/8729/buggy-version/src.main.java.data.ACEAnnotation.java", "BodyUseAPI": [], "Fixed commit": "21af3b4f939d061e19d82ce0ae26cc2957fd1dea", "Url": "https://api.github.com/repos/cgraber/CS546Project", "Date": "2016-03-29T23:48:56Z"},
{"Line": "=>396", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.weigreen.poker.RoomActivity.6.findViewById(R.id.table_display_word)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (tableDisplayWord != null) tableDisplayWord.setText(getString(R.string.table_waiting_word, inRoomPlayer));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/5038/buggy-version/Poker.src.main.java.com.weigreen.poker.RoomActivity.java", "BodyUseAPI": ["android.widget.TextView.setText(getString(R.string.table_waiting_word, inRoomPlayer))"], "Fixed commit": "df8fc31070db8c8a9057efa7fbb605c88ca487c8", "Url": "https://api.github.com/repos/ncuteam11/Poker", "Date": "2013-06-14T05:39:39Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((command.getTaskStartDate()) != null) { assert (command.getTaskEndDate()) != null; newTask.setDates(command.getTaskStartDate(), command.getTaskEndDate(), command.getRecurPattern(), command.getRecurPeriod(), null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/7964/buggy-version/src.LogicHandler.java", "BodyUseAPI": ["Command.getRecurPattern()", "Task.setDates(command.getTaskStartDate(),command.getTaskEndDate(),command.getRecurPattern(),command.getRecurPeriod(),<nulltype>)", "Command.getTaskEndDate()", "Command.getTaskStartDate()", "Command.getRecurPeriod()", "Command.getTaskEndDate()"], "Fixed commit": "d8e61749db45bc5edfbfb13995347843ec9e8c37", "Url": "https://api.github.com/repos/cs2103aug2014-w14-1j/main", "Date": "2014-11-02T13:27:23Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((url != null) && (unitUrl != null)) { if (url.startsWith(unitUrl)) { url = url.replace(unitUrl, com.fujitsu.dc.core.utils.UriUtils.SCHEME_UNIT_URI); }else { url = com.fujitsu.dc.core.utils.UriUtils.convertSchemeFromLocalUnitToHttp(unitUrl, url); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/6216/buggy-version/core.src.main.java.com.fujitsu.dc.core.utils.UriUtils.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)", "java.lang.String.startsWith(java.lang.String)", "com.fujitsu.dc.core.utils.UriUtils.convertSchemeFromLocalUnitToHttp(java.lang.String,java.lang.String)"], "Fixed commit": "157eb5cd9aea184bb99d25355a43de7056c52c27", "Url": "https://api.github.com/repos/fujitsu-pio/io", "Date": "2016-12-28T06:02:08Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((url != null) && (unitUrl != null)) { java.lang.String substitute = com.fujitsu.dc.core.utils.UriUtils.getUrlSubstitute(unitUrl, url); if (!(url.equals(substitute))) { variations.add(substitute); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/6216/buggy-version/core.src.main.java.com.fujitsu.dc.core.utils.UriUtils.java", "BodyUseAPI": ["com.fujitsu.dc.core.utils.UriUtils.getUrlSubstitute(java.lang.String,java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "157eb5cd9aea184bb99d25355a43de7056c52c27", "Url": "https://api.github.com/repos/fujitsu-pio/io", "Date": "2016-12-28T06:02:08Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.System.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (osName.startsWith(\"Windows\")) { isWindows = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/1682/buggy-version/smart-engine.src.main.java.org.smartdata.server.utils.GenericOptionsParser.java", "BodyUseAPI": [], "Fixed commit": "24c478cf17cc1270fa884442ef15fc54a77e96be", "Url": "https://api.github.com/repos/timmyyao/SSM", "Date": "2017-07-07T01:51:28Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(new java.io.File(getDataFolder(), \"config.yml\").exists())) { saveDefaultConfig(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/4060/buggy-version/PremierChat.src.me.AstramG.PremierChat.PremierChat.java", "BodyUseAPI": [], "Fixed commit": "cc69af1d283bfdadac6ee0fc70538aeffa4bb8ec", "Url": "https://api.github.com/repos/AstramMC/PremierChat", "Date": "2014-04-16T15:38:38Z"},
{"Line": "=>411", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bucketNumber < 0) { java.lang.System.out.println(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/6384/buggy-version/src.org.broad.igv.sam.AlignmentPacker.java", "BodyUseAPI": [], "Fixed commit": "51266611c4cc07cf3e6cc8ae5ee5ade8f022a775", "Url": "https://api.github.com/repos/broadinstitute/IGV", "Date": "2014-07-24T13:44:40Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (event.isTouchFocusCancel()) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/6698/buggy-version/gdx.src.com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener.java", "BodyUseAPI": [], "Fixed commit": "8282be9c655fcc20ea7035ab7a41fb4463ad376a", "Url": "https://api.github.com/repos/libgdx/libgdx", "Date": "2013-09-07T01:16:48Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((player1.color) != 0) com.company.Game.print(outline, \"playerColor\", player1.name, player1.color);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/1436/buggy-version/src.main.java.com.company.Game.java", "BodyUseAPI": ["com.company.Game.print(java.lang.String,java.lang.String,player1.name,player1.color)"], "Fixed commit": "068872522b4771bd46068bb63dd3965947cf0738", "Url": "https://api.github.com/repos/21las21/TrollInvasion", "Date": "2017-12-24T17:25:01Z"},
{"Line": "=>327", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sourcepit.common.manifest.Header.getName()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (name != null) { final java.lang.Object parsedValue = header.getParsedValue(); final org.sourcepit.common.manifest.osgi.BundleHeaderName headerName = org.sourcepit.common.manifest.osgi.BundleHeaderName.get(name); if ((headerName == null) || (parsedValue == null)) { return header.getValue(); } return toValueString(headerName, parsedValue, prettyPrinting); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/4652/buggy-version/src.main.java.org.sourcepit.common.manifest.osgi.parser.BundleHeaderParserImpl.java", "BodyUseAPI": ["org.sourcepit.common.manifest.osgi.BundleHeaderName.get(java.lang.String)"], "Fixed commit": "d7ab3aa0b30ea776c83609c964402851c1039b5e", "Url": "https://api.github.com/repos/sourcepit/common-manifest", "Date": "2012-03-28T18:24:08Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (schedulePanel.classes.isEmpty()) schedulePanel.classes = CourseData.Data.readNewCourseData(profilePanel.semester);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/1640/buggy-version/src.GUI.MainGUI.java", "BodyUseAPI": [], "Fixed commit": "ceb506924dcdec9bccde62dc01d7d7c44d8ff3e2", "Url": "https://api.github.com/repos/levysj/SealTeam6", "Date": "2016-04-08T22:35:40Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((charset) == null) charset = java.nio.charset.StandardCharsets.UTF_8;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/7617/buggy-version/src.main.java.info.orestes.rest.conversion.ContentType.java", "BodyUseAPI": [], "Fixed commit": "c1cfed313834d36cf91908b9b442e21ba487d1d6", "Url": "https://api.github.com/repos/Baqend/restful-jetty", "Date": "2016-01-15T16:01:22Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (loadedCgm.isLoaded()) { com.jme3.scene.Spatial spatial = loadedCgm.view.selectedSpatial(); transform = spatial.getWorldTransform(); }else { transform = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/7408/buggy-version/src.main.java.maud.tools.AxesTool.java", "BodyUseAPI": ["loadedCgm.view.selectedSpatial()"], "Fixed commit": "b8033877d917ed760b41388f2032c1b2c0ced36d", "Url": "https://api.github.com/repos/stephengold/Maud", "Date": "2017-06-22T17:21:36Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((metadata.getStyles().isEmpty()) && (\"default\".equals(style.getName()))) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/7379/buggy-version/deegree-core.deegree-core-layer.src.main.java.org.deegree.layer.AbstractLayer.java", "BodyUseAPI": [], "Fixed commit": "aa306036764cd0b4240b4990704738e736cb4602", "Url": "https://api.github.com/repos/deegree/deegree3", "Date": "2014-03-05T16:48:42Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dshell.internal.lib.RuntimeContext.getInstance().getBuiltinCommand(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (context != null) { return context; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/6095/buggy-version/src.dshell.internal.process.TaskContext.java", "BodyUseAPI": [], "Fixed commit": "6757a0a0915d99bf65235729fafb798a42471d0c", "Url": "https://api.github.com/repos/sekiguchi-nagisa/DShell", "Date": "2014-10-02T11:38:11Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((commandName.indexOf('/')) != (-1)) { return new dshell.internal.process.ProcessContext(commandName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/6095/buggy-version/src.dshell.internal.process.TaskContext.java", "BodyUseAPI": [], "Fixed commit": "6757a0a0915d99bf65235729fafb798a42471d0c", "Url": "https://api.github.com/repos/sekiguchi-nagisa/DShell", "Date": "2014-10-02T11:38:11Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((inputArray[0]) == null) { throw new java.text.ParseException(\"PARAMETER.TASKID\", 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/6508/buggy-version/Task.StringParser.java", "BodyUseAPI": [], "Fixed commit": "d7eddeffc9dd4efc3135c23745990db5dffafa2f", "Url": "https://api.github.com/repos/cs2103aug2015-t14-2j/main", "Date": "2015-10-21T17:52:36Z"},
{"Line": "=>312", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(com.liteon.icampusguardian.fragment.AlarmEditingFragment.titleForAlarm))) { mCurrentAlarmItem.setTitle(com.liteon.icampusguardian.fragment.AlarmEditingFragment.titleForAlarm); mAlarmName.setText(com.liteon.icampusguardian.fragment.AlarmEditingFragment.titleForAlarm); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/4768/buggy-version/src.com.liteon.icampusguardian.fragment.AlarmEditingFragment.java", "BodyUseAPI": ["com.liteon.icampusguardian.util.AlarmItem.setTitle(java.lang.String)", "android.widget.EditText.setText(java.lang.String)"], "Fixed commit": "051d8369bce599bac9d0a743de703ec1f3fa1839", "Url": "https://api.github.com/repos/tel3342311/ICG", "Date": "2017-09-12T08:30:29Z"},
{"Line": "=>301", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["request.activationToken.replace(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (actTok.endsWith(\".\")) { actTok = actTok.substring(0, ((actTok.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/1384/buggy-version/plugins.org.python.pydev.src_completions.org.python.pydev.editor.codecompletion.PyCodeCompletion.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "729a437ebf4a6d55310a7fe7bcc29c2668a52c60", "Url": "https://api.github.com/repos/fabioz/Pydev", "Date": "2016-04-28T12:19:07Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (newSource == null) { ((com.walien.simplefs.domain.impl.Directory) (src)).getChildren().put(nodeName, (newSource = new com.walien.simplefs.domain.impl.Directory().setName(nodeName).setParent(((com.walien.simplefs.domain.impl.Directory) (src))))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/6873/buggy-version/fs-core.src.main.java.com.walien.simplefs.FileSystemManager.java", "BodyUseAPI": [], "Fixed commit": "c9a62dc4c06a86ea5d8729dd211092adaa3ce4b5", "Url": "https://api.github.com/repos/walien/simple-fs", "Date": "2014-11-22T01:12:08Z"},
{"Line": "=>301", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((points.get(targetLocus.toLowerCase())) != null) && (!(player.hasPermission(\"locus.deny.all\")))) { player.teleport(points.get(targetLocus.toLowerCase()).getLocation()); sender.sendMessage(((((com.rafuse.minecraft.Locus.Locus.PREFIX) + \" Moved to \") + (points.get(targetLocus.toLowerCase()).getName())) + \".\")); return true; }else if (player.hasPermission(\"locus.deny.all\")) { if (player.hasPermission((\"locus.allow.\" + (targetLocus.toLowerCase())))) { player.teleport(points.get(targetLocus.toLowerCase()).getLocation()); sender.sendMessage(((((com.rafuse.minecraft.Locus.Locus.PREFIX) + \" Moved to \") + (points.get(targetLocus.toLowerCase()).getName())) + \".\")); }else { player.sendMessage(((com.rafuse.minecraft.Locus.Locus.PREFIX) + \" You do not have permission to access this locus.\")); } return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/3952/buggy-version/src.com.rafuse.minecraft.Locus.Locus.java", "BodyUseAPI": ["points.get(targetLocus.toLowerCase()).getName()", "java.lang.String.toLowerCase()", "java.lang.String.toLowerCase()", "java.lang.String.toLowerCase()", "java.util.HashMap<java.lang.String, com.rafuse.minecraft.Locus.LocusPoint>.get(java.lang.String)", "points.get(targetLocus.toLowerCase()).getName()", "points.get(targetLocus.toLowerCase()).getLocation()", "org.bukkit.entity.Player.hasPermission(java.lang.String)", "org.bukkit.command.CommandSender.sendMessage(((((com.rafuse.minecraft.Locus.Locus.PREFIX) + \" Moved to \") + (points.get(targetLocus.toLowerCase()).getName())) + \".\"))", "org.bukkit.command.CommandSender.sendMessage(((((com.rafuse.minecraft.Locus.Locus.PREFIX) + \" Moved to \") + (points.get(targetLocus.toLowerCase()).getName())) + \".\"))", "java.util.HashMap<java.lang.String, com.rafuse.minecraft.Locus.LocusPoint>.get(java.lang.String)", "java.util.HashMap<java.lang.String, com.rafuse.minecraft.Locus.LocusPoint>.get(java.lang.String)", "java.util.HashMap<java.lang.String, com.rafuse.minecraft.Locus.LocusPoint>.get(java.lang.String)", "points.get(targetLocus.toLowerCase()).getLocation()", "org.bukkit.entity.Player.teleport(points.get(targetLocus.toLowerCase()).getLocation())", "java.lang.String.toLowerCase()", "org.bukkit.entity.Player.hasPermission(java.lang.String)", "org.bukkit.entity.Player.sendMessage(java.lang.String)", "java.lang.String.toLowerCase()", "org.bukkit.entity.Player.teleport(points.get(targetLocus.toLowerCase()).getLocation())"], "Fixed commit": "5136e367189bac6f630c4b51bfb9548d554aa3db", "Url": "https://api.github.com/repos/Halo4356/Locus", "Date": "2016-04-29T16:40:30Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.calftracker.project.activities.AddCalfActivity.getSharedPreferences(java.lang.String,Activity.MODE_PRIVATE)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (mPreferences.contains(\"CalfList\")) { com.google.gson.Gson gson = new com.google.gson.Gson(); java.lang.String json = mPreferences.getString(\"CalfList\", \"\"); calfList = gson.fromJson(json, new com.google.gson.reflect.TypeToken<java.util.ArrayList<com.calftracker.project.models.Calf>>() {}.getType()); }else { calfList = new java.util.ArrayList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/6852/buggy-version/app.src.main.java.com.calftracker.project.activities.AddCalfActivity.java", "BodyUseAPI": ["android.content.SharedPreferences.getString(java.lang.String,java.lang.String)"], "Fixed commit": "1253b274a5ea569158d25d32b6535b662845f967", "Url": "https://api.github.com/repos/bpercy11/CalfTrackerRepo", "Date": "2017-12-06T01:41:07Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.processmining.plugins.unfolding.BCSUnfoldingVisualize_Plugin.getNodeinClone(org.processmining.models.graphbased.directed.bpmn.BPMNDiagram,org.processmining.models.graphbased.directed.bpmn.BPMNNode)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (nodeclone != null) nodeclone.getAttributeMap().put(AttributeMap.STROKECOLOR, java.awt.Color.YELLOW);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/3266/buggy-version/src.org.processmining.plugins.unfolding.BCSUnfoldingVisualize_Plugin.java", "BodyUseAPI": ["nodeclone.getAttributeMap().put(AttributeMap.STROKECOLOR,java.awt.Color)", "org.processmining.models.graphbased.directed.bpmn.BPMNNode.getAttributeMap()"], "Fixed commit": "9ab6e6da5612b01e8322cf071f0e106210d57a6f", "Url": "https://api.github.com/repos/Smocker/Tesi", "Date": "2016-04-13T19:44:03Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.processmining.plugins.unfolding.BCSUnfoldingVisualize_Plugin.getNodeinClone(org.processmining.models.graphbased.directed.bpmn.BPMNDiagram,org.processmining.models.graphbased.directed.bpmn.BPMNNode)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (nodeclone != null) nodeclone.getAttributeMap().put(AttributeMap.STROKECOLOR, java.awt.Color.RED);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/3266/buggy-version/src.org.processmining.plugins.unfolding.BCSUnfoldingVisualize_Plugin.java", "BodyUseAPI": ["org.processmining.models.graphbased.directed.bpmn.BPMNNode.getAttributeMap()", "nodeclone.getAttributeMap().put(AttributeMap.STROKECOLOR,java.awt.Color)"], "Fixed commit": "9ab6e6da5612b01e8322cf071f0e106210d57a6f", "Url": "https://api.github.com/repos/Smocker/Tesi", "Date": "2016-04-13T19:44:03Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((nodeclone.getLabel()) != null) if (nodeclone.getLabel().equals(node.getLabel())) { return nodeclone; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/3266/buggy-version/src.org.processmining.plugins.unfolding.BCSUnfoldingVisualize_Plugin.java", "BodyUseAPI": ["org.processmining.models.graphbased.directed.bpmn.BPMNNode.getLabel()", "nodeclone.getLabel().equals(node.getLabel())"], "Fixed commit": "9ab6e6da5612b01e8322cf071f0e106210d57a6f", "Url": "https://api.github.com/repos/Smocker/Tesi", "Date": "2016-04-13T19:44:03Z"},
{"Line": "=>339", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (fs.exists(path)) { fs.delete(path, isDirectory); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/1439/buggy-version/exec.java-exec.src.main.java.org.apache.drill.exec.planner.sql.handlers.CreateFunctionHandler.java", "BodyUseAPI": ["org.apache.hadoop.fs.FileSystem.delete(org.apache.hadoop.fs.Path,boolean)"], "Fixed commit": "7dfc00c0d2e602e48c6da1db86345290c1dc3998", "Url": "https://api.github.com/repos/arina-ielchiieva/drill", "Date": "2017-03-06T11:34:56Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.checksumField) >= (fields.size())) { this.checksumField = -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/5600/buggy-version/ais-lib-messages.src.main.java.dk.dma.ais.sentence.SentenceLine.java", "BodyUseAPI": [], "Fixed commit": "fd6017e4e00a081a906c8c0b93132b36a8f20128", "Url": "https://api.github.com/repos/dma-ais/AisLib", "Date": "2013-10-29T12:46:12Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["image.fullPath.getAbsolutePath()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (_app.settings.toggleHiddenMeme(filePath)) { _imageDataList.remove(image); notifyItemRemoved(position); }else { _imageDataList.remove(image); notifyItemRemoved(position); ((io.github.gsantner.memetastic.activity.MainActivity) (_activity)).recreateFragmentsAfterUnhiding(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/2546/buggy-version/app.src.main.java.io.github.gsantner.memetastic.ui.MemeItemAdapter.java", "BodyUseAPI": [], "Fixed commit": "2a8c37acac488f0009da098a6d9e7b04462b45c9", "Url": "https://api.github.com/repos/gsantner/memetastic", "Date": "2017-10-24T08:13:35Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((split.length) < 2) { throw new java.lang.IllegalArgumentException((\"Expected a separator (' - ') in USM log entry: \" + text)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/4454/buggy-version/restful.src.main.java.org.cloudifysource.rest.events.EventsUtils.java", "BodyUseAPI": [], "Fixed commit": "cc09de1127ef32b6f01704c9ae40cd3056b27075", "Url": "https://api.github.com/repos/CloudifySource/cloudify", "Date": "2013-09-17T13:50:40Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((propertyPrefix().compareTo(other.propertyPrefix())) != 0) { return propertyPrefix().compareTo(other.propertyPrefix()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/6695/buggy-version/src.de.fuberlin.wiwiss.d2rq.server.PageServlet.java", "BodyUseAPI": ["de.fuberlin.wiwiss.d2rq.server.PageServlet.Property.propertyPrefix()", "java.lang.String.compareTo(java.lang.String)"], "Fixed commit": "6244d7f5b4561ca451fe072334016a8207ccb467", "Url": "https://api.github.com/repos/quinode/d2rq", "Date": "2012-05-25T08:14:26Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((propertyURI().compareTo(other.propertyURI())) != 0) { return propertyURI().compareTo(other.propertyURI()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/6695/buggy-version/src.de.fuberlin.wiwiss.d2rq.server.PageServlet.java", "BodyUseAPI": ["de.fuberlin.wiwiss.d2rq.server.PageServlet.Property.propertyURI()", "java.lang.String.compareTo(java.lang.String)"], "Fixed commit": "6244d7f5b4561ca451fe072334016a8207ccb467", "Url": "https://api.github.com/repos/quinode/d2rq", "Date": "2012-05-25T08:14:26Z"},
{"Line": "=>617", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((defaultFile == null) || (!(defaultFile.exists()))) { org.apache.wiki.auth.AuthenticationManager.log.info(((\"looking for \" + name) + \" as complete path\")); defaultFile = new java.io.File(name); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/6134/buggy-version/jspwiki-war.src.main.java.org.apache.wiki.auth.AuthenticationManager.java", "BodyUseAPI": [], "Fixed commit": "4dbc23f0e9934ef79f56e568c22e2992146b6968", "Url": "https://api.github.com/repos/denkbares/jspwiki", "Date": "2016-11-24T16:11:59Z"},
{"Line": "=>1372", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["info.getFleets().getByIndex(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((fleet.getCulturalValue()) > 0) && (fleet.isStarBaseDeployed())) { calculateCulture(fleet.getX(), fleet.getY(), fleet.getCulturalValue(), i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/3951/buggy-version/src.main.java.org.openRealmOfStars.starMap.StarMap.java", "BodyUseAPI": ["org.openRealmOfStars.player.fleet.Fleet.getX()", "org.openRealmOfStars.player.fleet.Fleet.getCulturalValue()", "org.openRealmOfStars.player.fleet.Fleet.getY()", "org.openRealmOfStars.starMap.StarMap.calculateCulture(fleet.getX(),fleet.getY(),fleet.getCulturalValue(),int)"], "Fixed commit": "21d48a700aca3522a70c971d322d6bacdb85f5af", "Url": "https://api.github.com/repos/tuomount/Open-Realms-of-Stars", "Date": "2017-09-14T19:37:45Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (pMaxDuration < 0) { throw new java.lang.IllegalArgumentException(\"Invalid limit, maxDuration must be >= 0\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/7033/buggy-version/agent.core.src.main.java.org.jolokia.history.HistoryLimit.java", "BodyUseAPI": [], "Fixed commit": "c9085dbc295b696ff0a07bf8a18c334aee04264d", "Url": "https://api.github.com/repos/mjr5749/jolokia", "Date": "2013-02-20T01:21:17Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (pMaxEntries < 0) { throw new java.lang.IllegalArgumentException(\"Invalid limit, maxEntries must be >= 0\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/7033/buggy-version/agent.core.src.main.java.org.jolokia.history.HistoryLimit.java", "BodyUseAPI": [], "Fixed commit": "c9085dbc295b696ff0a07bf8a18c334aee04264d", "Url": "https://api.github.com/repos/mjr5749/jolokia", "Date": "2013-02-20T01:21:17Z"},
{"Line": "=>323", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mr.getValues().size()) == 0) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/1653/buggy-version/c3po-core.src.main.java.com.petpet.c3po.analysis.ProfileGenerator.java", "BodyUseAPI": [], "Fixed commit": "f203d82c8f2b26d40336e4e654deb48bc61d17c3", "Url": "https://api.github.com/repos/openplanets/c3po", "Date": "2013-12-23T12:02:47Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(smr.getMemberEntityReference().isEmpty())) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/1831/buggy-version/cpath-impl.src.main.java.cpath.admin.IdsSummary.java", "BodyUseAPI": [], "Fixed commit": "3b42d569a0ece9309d0ab2914b782c3cf89d630c", "Url": "https://api.github.com/repos/PathwayCommons/cpath2", "Date": "2015-11-24T03:00:47Z"},
{"Line": "=>297", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!printedCritter) { java.lang.System.out.print(assignment4.Critter.population.get(counter)); critterHere = true; printedCritter = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/925/buggy-version/src.assignment4.Critter.java", "BodyUseAPI": [], "Fixed commit": "1c51f9dcd918dec4eb0b2f5f31cf2a6f47271ad2", "Url": "https://api.github.com/repos/AlfonsoGal17/P4-Critters", "Date": "2016-10-08T01:55:18Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (emailFolder.isOpen()) { if (((flushUnseenMessages) != null) && ((flushUnseenMessages.length) > 0)) { try { emailFolder.setFlags(flushUnseenMessages, new javax.mail.Flags(Flags.Flag.SEEN), false); flushUnseenMessages = null; } catch (javax.mail.MessagingException e) { if (!(store.isConnected())) { store.connect(); emailFolder.setFlags(flushUnseenMessages, new javax.mail.Flags(Flags.Flag.SEEN), false); flushUnseenMessages = null; } } } javax.mail.Message[] searchMessages = emailFolder.search(unseenBefore); if ((searchMessages == null) || ((searchMessages.length) == 0)) { org.apache.airavata.gfac.monitor.email.EmailBasedMonitor.log.info(\"[EJM]: No new email messages\"); }else { org.apache.airavata.gfac.monitor.email.EmailBasedMonitor.log.info(((\"[EJM]: \" + (searchMessages.length)) + \" new email/s received\")); } processMessages(searchMessages); emailFolder.close(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/2720/buggy-version/modules.gfac.gfac-impl.src.main.java.org.apache.airavata.gfac.monitor.email.EmailBasedMonitor.java", "BodyUseAPI": ["javax.mail.Folder.setFlags(javax.mail.Message[],javax.mail.Flags,boolean)", "javax.mail.Folder.close(boolean)", "javax.mail.Folder.setFlags(javax.mail.Message[],javax.mail.Flags,boolean)", "javax.mail.Folder.search(javax.mail.search.SearchTerm)"], "Fixed commit": "ad95ca466eac15527e2031d1eb43fa7db5725311", "Url": "https://api.github.com/repos/apache/airavata", "Date": "2015-09-18T14:40:49Z"},
{"Line": "=>1486", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((values != null) && ((values.size()) > 0)) { int i = 0; org.sbml.jsbml.util.compilers.ASTNodeValue[] compiledValues = new org.sbml.jsbml.util.compilers.ASTNodeValue[values.size()]; for (org.sbml.jsbml.ASTNode node : values) { compiledValues[(i++)] = node.compile(this); } double maximum = java.lang.Double.MIN_VALUE; i = (compiledValues.length) - 1; while (i >= 0) { if ((java.lang.Double.compare(maximum, compiledValues[i].toDouble())) < 0) { maximum = compiledValues[i].toDouble(); } if (!(compiledValues[i].getUnits().isInvalid())) { value.setUnits(compiledValues[i].getUnits()); value.setValue(maximum); break; } i--; } if (((value.getUnits()) == null) || (value.getUnits().isInvalid())) { }else { for (int j = i - 1; j >= 0; j--) { if (((compiledValues[j].getUnits()) == null) || (compiledValues[j].getUnits().isInvalid())) { value.setUnits(compiledValues[j].getUnits()); }else { unifyUnits(value, compiledValues[j]); } if ((java.lang.Double.compare(maximum, compiledValues[j].toDouble())) < 0) { maximum = compiledValues[i].toDouble(); } } value.setValue(maximum); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/3424/buggy-version/core.src.org.sbml.jsbml.util.compilers.UnitsCompiler.java", "BodyUseAPI": ["java.util.List<org.sbml.jsbml.ASTNode>.size()"], "Fixed commit": "071895761bb4374e2e545178d6a62b000bd08f29", "Url": "https://api.github.com/repos/sbmlteam/jsbml", "Date": "2017-11-30T15:00:28Z"},
{"Line": "=>1540", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((values != null) && ((values.size()) > 0)) { int i = 0; org.sbml.jsbml.util.compilers.ASTNodeValue[] compiledValues = new org.sbml.jsbml.util.compilers.ASTNodeValue[values.size()]; for (org.sbml.jsbml.ASTNode node : values) { compiledValues[(i++)] = node.compile(this); } double minimum = java.lang.Double.MAX_VALUE; i = (compiledValues.length) - 1; while (i >= 0) { if ((java.lang.Double.compare(minimum, compiledValues[i].toDouble())) > 0) { minimum = compiledValues[i].toDouble(); } if (!(compiledValues[i].getUnits().isInvalid())) { value.setUnits(compiledValues[i].getUnits()); value.setValue(minimum); break; } i--; } if (((value.getUnits()) == null) || (value.getUnits().isInvalid())) { }else { for (int j = i - 1; j >= 0; j--) { if (((compiledValues[j].getUnits()) == null) || (compiledValues[j].getUnits().isInvalid())) { value.setUnits(compiledValues[j].getUnits()); }else { unifyUnits(value, compiledValues[j]); } if ((java.lang.Double.compare(minimum, compiledValues[j].toDouble())) > 0) { minimum = compiledValues[i].toDouble(); } } value.setValue(minimum); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/3424/buggy-version/core.src.org.sbml.jsbml.util.compilers.UnitsCompiler.java", "BodyUseAPI": ["java.util.List<org.sbml.jsbml.ASTNode>.size()"], "Fixed commit": "071895761bb4374e2e545178d6a62b000bd08f29", "Url": "https://api.github.com/repos/sbmlteam/jsbml", "Date": "2017-11-30T15:00:28Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ackList.get(0)) > 100) { java.lang.System.out.println(\"Error\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/8630/buggy-version/eclipse_projects.RUDP.src.communication.rudp.socket.RUDPLink.java", "BodyUseAPI": [], "Fixed commit": "336f185a472ce9adea0a85d4380b724aba7f1b6e", "Url": "https://api.github.com/repos/miun/mediasense", "Date": "2012-05-11T14:22:43Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ackList.size()) == 0) { ackList = packetRangeAck.toDifferentialArray(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/8630/buggy-version/eclipse_projects.RUDP.src.communication.rudp.socket.RUDPLink.java", "BodyUseAPI": [], "Fixed commit": "336f185a472ce9adea0a85d4380b724aba7f1b6e", "Url": "https://api.github.com/repos/miun/mediasense", "Date": "2012-05-11T14:22:43Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (AndQuery == 1) { query += \" and st.type != 'T'\"; }else { AndQuery = 1; query += \" st.type != 'T'\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/7569/buggy-version/src.java.com.smi.travel.datalayer.view.dao.impl.InvoiceSummaryImpl.java", "BodyUseAPI": [], "Fixed commit": "70d7a4b09778aeff947578a4b1332e4ad8a71825", "Url": "https://api.github.com/repos/iCONEXT/SMI_Travel", "Date": "2016-01-29T09:51:21Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.php.internal.core.compiler.ast.nodes.PHPDocBlock.getLongDescription()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((comment == null) || ((comment.length()) == 0)) comment = docs.getShortDescription();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/2768/buggy-version/com.dubture.symfony.core.src.com.dubture.symfony.core.index.visitor.TemplateVariableVisitor.java", "BodyUseAPI": [], "Fixed commit": "4df3046d85540d4ed66457316321ff6f452a0a81", "Url": "https://api.github.com/repos/pulse00/Symfony-2-Eclipse-Plugin", "Date": "2011-08-06T18:47:26Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.psi.util.PsiTreeUtil.getChildrenOfType(com.intellij.psi.PsiElement,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (properties == null) { return EMPTY_ARRAY; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/3487/buggy-version/src.jpower.idea.config.ConfigStructureViewElement.java", "BodyUseAPI": [], "Fixed commit": "ea9cd9099580395044bcfc4cfac399123057c2bb", "Url": "https://api.github.com/repos/kaendfinger/idea-powerconfig", "Date": "2014-06-04T03:16:04Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((element.getParent()) == null) { return \"unknown\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/3487/buggy-version/src.jpower.idea.config.psi.impl.ConfigPsiImplUtil.java", "BodyUseAPI": [], "Fixed commit": "ea9cd9099580395044bcfc4cfac399123057c2bb", "Url": "https://api.github.com/repos/kaendfinger/idea-powerconfig", "Date": "2014-06-04T03:16:04Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.maven.model.Model.getGroupId()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (group != null) id = (group + \".\") + id;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/6304/buggy-version/src.main.java.org.spideruci.tacoco.MavenBuildProbe.java", "BodyUseAPI": [], "Fixed commit": "045cbe1992693d01f1a59d6307c3db4c9a137236", "Url": "https://api.github.com/repos/spideruci/tacoco", "Date": "2015-09-15T18:06:15Z"},
{"Line": "=>472", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((properties != null) && ((properties.size()) > 0)) { citationDoc.field(NdexClasses.ndexProperties, properties); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/5496/buggy-version/src.main.java.org.ndexbio.common.persistence.orientdb.PersistenceService.java", "BodyUseAPI": ["com.orientechnologies.orient.core.record.impl.ODocument.field(NdexClasses.ndexProperties,java.util.Collection<org.ndexbio.model.object.NdexPropertyValuePair>)"], "Fixed commit": "656cacaa5c8f070c5d522c64e294c7b11245f509", "Url": "https://api.github.com/repos/ndexbio/ndex-common", "Date": "2015-08-04T21:57:52Z"},
{"Line": "=>498", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((props != null) && ((props.size()) > 0)) { supportDoc.field(NdexClasses.ndexProperties, props); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/5496/buggy-version/src.main.java.org.ndexbio.common.persistence.orientdb.PersistenceService.java", "BodyUseAPI": ["com.orientechnologies.orient.core.record.impl.ODocument.field(NdexClasses.ndexProperties,java.util.List<org.ndexbio.model.object.NdexPropertyValuePair>)"], "Fixed commit": "656cacaa5c8f070c5d522c64e294c7b11245f509", "Url": "https://api.github.com/repos/ndexbio/ndex-common", "Date": "2015-08-04T21:57:52Z"},
{"Line": "=>400", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mPlaybackManager.getCurrentEntry()) == null) { mIsPreparing = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/4922/buggy-version/app.src.main.java.org.tomahawk.tomahawk_android.services.PlaybackService.java", "BodyUseAPI": [], "Fixed commit": "68880f363a94277e406fc823ea463a75417e4645", "Url": "https://api.github.com/repos/tomahawk-player/tomahawk-android", "Date": "2016-07-03T14:37:19Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((target.getLocation().getY()) > (this.MAX_TOP)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/6747/buggy-version/src.edu.utfpr.ariacheck.locators.WidgetLocator.java", "BodyUseAPI": [], "Fixed commit": "b2b352b9953712d6315c8ba4627baa2267266151", "Url": "https://api.github.com/repos/watinha/aria-check-menus", "Date": "2015-05-07T04:28:44Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.lizardtech.djvu.Document.getDjVmDir()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (dir.is_bundled()) { try { com.lizardtech.djvu.CachedInputStream data = document.get_data(page.pageNum, null); page.setText(new com.lizardtech.djvu.text.DjVuText().init(data)); return true; } catch (java.io.IOException e) { com.google.gwt.core.shared.GWT.log((\"Error while decoding text in page \" + (page.pageNum)), e); return false; } }else { java.lang.String url = com.lizardtech.djvu.Utils.url(dir.getInitURL(), dir.page_to_file(page.pageNum).get_load_name()); pl.djvuhtml5.client.PageCache.FileItem file = getCachedFile(url); if ((file.data) != null) { com.lizardtech.djvu.text.DjVuText text = extractText(file.data, page); return text != null; }else if (firstMissing == null) { firstMissing = page; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/4459/buggy-version/djvu-html5.src.pl.djvuhtml5.client.PageCache.java", "BodyUseAPI": ["com.lizardtech.djvu.Utils.url(dir.getInitURL(),dir.page_to_file(page.pageNum).get_load_name())", "com.lizardtech.djvu.DjVmDir.page_to_file(int)", "com.lizardtech.djvu.DjVmDir.getInitURL()", "dir.page_to_file(page.pageNum).get_load_name()"], "Fixed commit": "b72f2654dce137f2bc9f95d872b258fe39b51b8b", "Url": "https://api.github.com/repos/mateusz-matela/djvu-html5", "Date": "2016-10-31T16:19:56Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((trainers[((dn.getNumLayers()) - 1)]) != null) { trainers[((dn.getNumLayers()) - 1)].train(dn.getSubnet(((dn.getNumLayers()) - 1)), trainingData, labels, notification); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/424/buggy-version/src.main.java.com.josephcatrambone.aij.trainers.DeepNetworkTrainer.java", "BodyUseAPI": ["com.josephcatrambone.aij.networks.DeepNetwork.getNumLayers()", "com.josephcatrambone.aij.networks.DeepNetwork.getNumLayers()", "com.josephcatrambone.aij.networks.DeepNetwork.getSubnet(((dn.getNumLayers()) - 1))", "trainers[((dn.getNumLayers()) - 1)].train(dn.getSubnet(((dn.getNumLayers()) - 1)),com.josephcatrambone.aij.Matrix,com.josephcatrambone.aij.Matrix,java.lang.Runnable)"], "Fixed commit": "defa846b927f38a28bdf2d04e988518ec67c74c1", "Url": "https://api.github.com/repos/JosephCatrambone/Aij", "Date": "2016-01-02T05:26:36Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ins instanceof Instruction.IType.SS) this.MEM_ALUOUTPUT = ct.getRtc().getFRegisterRow(b); else this.MEM_ALUOUTPUT = ct.getRtc().getRegisterRow(b);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/5665/buggy-version/MiniMipsV2.src.PipelineStage.MEMWB.java", "BodyUseAPI": [], "Fixed commit": "38294b2ac16003c8530b704a74a8a1f58da213e6", "Url": "https://api.github.com/repos/addicteduser/MiniMipsRepo", "Date": "2015-12-01T05:54:25Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ins) instanceof Instruction.IType.SS) this.MEM_ALUOUTPUT = ct.getRtc().getFRegisterRow(b); else this.MEM_ALUOUTPUT = ct.getRtc().getRegisterRow(b);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/5665/buggy-version/MiniMipsV2.src.PipelineStage.MEMWB.java", "BodyUseAPI": [], "Fixed commit": "38294b2ac16003c8530b704a74a8a1f58da213e6", "Url": "https://api.github.com/repos/addicteduser/MiniMipsRepo", "Date": "2015-12-01T05:54:25Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.getParent()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (parent == null) { java.nio.file.Path path = java.nio.file.FileSystems.getDefault().getPath(\".\"); parent = path.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/1429/buggy-version/src.ch.epfl.leb.sass.simulator.loggers.AbstractLogger.java", "BodyUseAPI": [], "Fixed commit": "c3e9ffefdc8f34fbf8e6ae15769906d0fd9bc137", "Url": "https://api.github.com/repos/LEB-EPFL/SASS", "Date": "2017-11-20T10:36:10Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (weakest == 1) { return Direction.NORTH; }else if (weakest == 2) { return Direction.EAST; }else if (weakest == 3) { return Direction.SOUTH; }else if (weakest == 4) { return Direction.WEST; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/4398/buggy-version/MyBot.java", "BodyUseAPI": [], "Fixed commit": "d869e6d98022f4dc20bf0daf0f99f0d073b740bc", "Url": "https://api.github.com/repos/thefireblade/Halite-", "Date": "2017-02-05T21:06:53Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (tokens != null) { temp.setTokenChange(tokens.get(id)); }else { temp.setTokenChange(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/6576/buggy-version/src.org.smg.server.database.EndGameDatabaseDriver.java", "BodyUseAPI": ["org.smg.server.database.models.PlayerHistory.setTokenChange(java.lang.Long)", "java.util.Map<java.lang.Long, java.lang.Long>.get(java.lang.Long)"], "Fixed commit": "73641c3c53b024620a1398e5f22ab03f57d14210", "Url": "https://api.github.com/repos/lisajluo/smg-server", "Date": "2014-04-04T03:44:30Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!markerExists) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/3035/buggy-version/egradle-plugin-main.src.main.java-eclipse.de.jcup.egradle.eclipse.ui.UnpersistedMarkerHelper.java", "BodyUseAPI": [], "Fixed commit": "005e4172c3ee59d5af6025364630be33a88ffec8", "Url": "https://api.github.com/repos/de-jcup/egradle", "Date": "2016-12-05T12:20:16Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.core.resources.IMarker.exists()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (markerExists) { try { type = marker.getType(); } catch (org.eclipse.core.runtime.CoreException e) { markerExists = false; } if (IMarker.TASK.equals(type)) { continue; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/3035/buggy-version/egradle-plugin-main.src.main.java-eclipse.de.jcup.egradle.eclipse.ui.UnpersistedMarkerHelper.java", "BodyUseAPI": [], "Fixed commit": "005e4172c3ee59d5af6025364630be33a88ffec8", "Url": "https://api.github.com/repos/de-jcup/egradle", "Date": "2016-12-05T12:20:16Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.System.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((os != null) && (os.contains(\"Windows\"))) filePath = \"/\" + filePath;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/6214/buggy-version/araqne-core.src.main.java.org.araqne.bundle.BundleManagerService.java", "BodyUseAPI": [], "Fixed commit": "155371996787ef6481f39325a461c512b046e18e", "Url": "https://api.github.com/repos/araqne/core", "Date": "2014-08-01T06:39:31Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (idx > 0) { java.lang.String key = pair.substring(0, idx).toLowerCase(); if (key.equals(specialPattern)) { return true; } for (java.lang.String pattern : patterns) { if ((key.contains(pattern)) || (key.equals(specialPattern))) { return true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/6839/buggy-version/src.main.java.com.xuantruongvu.datactu.crawler.URLAnalyzer.java", "BodyUseAPI": ["java.lang.String.toLowerCase()", "java.lang.String.substring(int,int)"], "Fixed commit": "476379cebffb4e7e1aa29bb105ebdebd6fe7b79f", "Url": "https://api.github.com/repos/truongci5/datactu", "Date": "2016-11-09T14:54:20Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (this.containsStudent(s)) { return true; }else { this.studentList.add(s); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/200/buggy-version/StudentList.java", "BodyUseAPI": ["java.util.Set<Student>.add(Student)"], "Fixed commit": "51dfcfc4bbfcd08f8791f257a2926eeb04e21821", "Url": "https://api.github.com/repos/VCUGroup11/CMSC355Project", "Date": "2014-12-04T17:59:51Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(org.parabot.environment.OperatingSystem.getOS().equals(OperatingSystem.OTHER))) { setBackground(new java.awt.Color(0, 0, 0, 0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/6895/buggy-version/parabotv2.src.org.parabot.core.ui.BotDialog.java", "BodyUseAPI": [], "Fixed commit": "9f0d20b01daa4bbcff571dd125ed2042b757f992", "Url": "https://api.github.com/repos/Parabot/Parabot", "Date": "2014-08-31T00:46:41Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpSession.getAttribute(WeiboAuthInterceptor.USER_ID)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (org.apache.commons.lang.StringUtils.isNotBlank(userId)) { com.sinaapp.zhuyeqingtea.model.Reward reward = prizeService.getRewardCount(userId); if ((reward.getPrizeCount()) < (com.sinaapp.zhuyeqingtea.controller.PrizeController.MAX_NEXT_PRIZE)) { prize = prizeService.nextPrize(userId); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/8328/buggy-version/src.main.java.com.sinaapp.zhuyeqingtea.controller.PrizeController.java", "BodyUseAPI": ["com.sinaapp.zhuyeqingtea.service.PrizeService.getRewardCount(java.lang.String)", "com.sinaapp.zhuyeqingtea.service.PrizeService.nextPrize(java.lang.String)"], "Fixed commit": "38a0899ecf98c00bd3c740703eaccc08cfa2142f", "Url": "https://api.github.com/repos/cuizuoli/zhuyeqingtea", "Date": "2014-01-04T15:38:13Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tweet.getUser()) != null) { android.util.Log.d(com.codepath.apps.allotweets.ui.base.TAG_LOG, (\"save user \" + (tweet.getUser().getScreenname()))); tweet.getUser().save(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/7625/buggy-version/app.src.main.java.com.codepath.apps.allotweets.ui.base.BaseTimelineFragment.java", "BodyUseAPI": ["android.util.Log.d(com.codepath.apps.allotweets.ui.base.TAG_LOG,(\"save user \" + (tweet.getUser().getScreenname())))", "tweet.getUser().getScreenname()", "com.codepath.apps.allotweets.model.Tweet.getUser()", "com.codepath.apps.allotweets.model.Tweet.getUser()", "tweet.getUser().save()"], "Fixed commit": "a6edd8754dcabd360e7035759ebeb7f9a490759c", "Url": "https://api.github.com/repos/allo86/SimpleTwitter-Reloaded", "Date": "2016-08-14T22:43:27Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.cyclops.integrateddynamics.core.evaluate.variable.IVariable.getType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(valueType instanceof org.cyclops.integrateddynamics.core.evaluate.variable.IValueTypeNumber)) { valueType = v.getValue().getType(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/8119/buggy-version/src.main.java.org.cyclops.integrateddynamics.core.evaluate.variable.ValueTypeCategoryNumber.java", "BodyUseAPI": [], "Fixed commit": "b9e6d122b8e80dd858477f257a742fd7ee37fe4b", "Url": "https://api.github.com/repos/CyclopsMC/IntegratedDynamics", "Date": "2017-10-01T05:08:47Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(UserAdminUIConstants.INTERNAL_DOMAIN.equalsIgnoreCase(domain))) { domain = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/6606/buggy-version/components.user-mgt.org.wso2.carbon.user.mgt.ui.src.main.java.org.wso2.carbon.user.mgt.ui.RoleBean.java", "BodyUseAPI": [], "Fixed commit": "9335a025f5bd00e5b36374477a16e737aa12d2fe", "Url": "https://api.github.com/repos/thanujalk/carbon-identity-framework", "Date": "2017-11-24T06:27:17Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["i.getExtras().getSerializable(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(elm instanceof de.geotweeter.timelineelements.DirectMessage)) { new de.geotweeter.Conversation(tea, TimelineActivity.current_account, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/5634/buggy-version/src.de.geotweeter.activities.NewTweetActivity.java", "BodyUseAPI": [], "Fixed commit": "6646bf3765d9a05e8ccd60a7a6f750c9b815a623", "Url": "https://api.github.com/repos/fabianonline/geotweeter-for-android", "Date": "2012-11-03T22:13:05Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (phatLoots == null) { org.bukkit.block.Block block = event.getClickedBlock(); if (!(com.codisimus.plugins.phatloots.PhatLootChest.isPhatLootChest(block))) { return; } switch (event.getAction()) { case LEFT_CLICK_BLOCK : if (type == (org.bukkit.Material.DISPENSER)) { if (phatLoots == null) { phatLoots = com.codisimus.plugins.phatloots.PhatLoots.getPhatLoots(block, player); if (phatLoots.isEmpty()) { return; } } break; } return; case RIGHT_CLICK_BLOCK : if (phatLoots == null) { phatLoots = com.codisimus.plugins.phatloots.PhatLoots.getPhatLoots(block, player); if (phatLoots.isEmpty()) { switch (type) { case TRAPPED_CHEST : case CHEST : org.bukkit.block.Chest chest = ((org.bukkit.block.Chest) (block.getState())); org.bukkit.inventory.Inventory inventory = chest.getInventory(); if (inventory instanceof org.bukkit.inventory.DoubleChestInventory) { chest = ((org.bukkit.block.Chest) (((org.bukkit.inventory.DoubleChestInventory) (inventory)).getLeftSide().getHolder())); block = chest.getBlock(); phatLoots = com.codisimus.plugins.phatloots.PhatLoots.getPhatLoots(block, player); if (phatLoots.isEmpty()) { return; }else { break; } } default : return; } } } break; default : return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/7334/buggy-version/src.com.codisimus.plugins.phatloots.listeners.PhatLootsListener.java", "BodyUseAPI": [], "Fixed commit": "c92c46860b7cde8719c6be643527290d23dff844", "Url": "https://api.github.com/repos/Codisimus/PhatLoots", "Date": "2013-11-26T08:31:39Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.shares.Portfolio.getPercentageChange()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (prices[i].contains(\"%\")) textViews[i].setTextColor(android.graphics.Color.argb(144, 0, 192, 0));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/5124/buggy-version/src.com.example.shares.RiseFallActivity.java", "BodyUseAPI": ["textViews[i].setTextColor(android.graphics.Color.argb(144, 0, 192, 0))"], "Fixed commit": "de8105b867d1ff30dffe093367c832961e9fb316", "Url": "https://api.github.com/repos/JackG188/Team-2-Shares-App", "Date": "2012-11-12T13:12:32Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (sku.equalsIgnoreCase(\"wgs_app_remove_ads\")) { onl.deepspace.wgs.Helper.setHasNoAds(this, true); android.support.design.widget.Snackbar.make(findViewById(R.id.main_content), \"Werbung Entfernt! Danke f\u00fcr deinen Kauf. Bitte starte die App neu\", Snackbar.LENGTH_LONG).show(); }else { android.widget.Toast.makeText(this, \"Your request was not set. Please contact the developer!\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/6273/buggy-version/app.src.main.java.onl.deepspace.wgs.PortalActivity.java", "BodyUseAPI": [], "Fixed commit": "5e49ba6248d4d6d9f6f2881a91a92f0f7f16fe84", "Url": "https://api.github.com/repos/DeepSpaceDev/WGS-App", "Date": "2016-02-23T20:01:18Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((this.impressions) == null) || (this.impressions.isEmpty())) { this.impressions = \"\u6d4b\u8bd5\u68c0\u67e5\u6240\u89c1\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/2237/buggy-version/src.main.java.com.agfa.sh.cris.dbtool.web.ReportTemplateJson.java", "BodyUseAPI": [], "Fixed commit": "965e96321de28182e160a37c65027a1d63c28f86", "Url": "https://api.github.com/repos/mythsya/meta2redis", "Date": "2016-07-28T09:31:41Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (notificationView != null) { if ((notificationView.getQuestionId()) == null) { notificationsDao.setAllNotificationsRead(principal.getName()); simpMessagingTemplate.convertAndSendToUser(principal.getName(), \"/topic/notifications_read\", \"all\"); }else { notificationsDao.setNotificationRead(principal.getName(), notificationView); simpMessagingTemplate.convertAndSendToUser(principal.getName(), \"/topic/notifications_read\", notificationView.getQuestionId()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/5734/buggy-version/src.main.java.pl.adjule.web.socket.notification.NotificationsSocket.java", "BodyUseAPI": ["org.springframework.messaging.simp.SimpMessagingTemplate.convertAndSendToUser(java.lang.String,java.lang.String,notificationView.getQuestionId())", "pl.adjule.web.socket.notification.NotificationView.getQuestionId()", "pl.adjule.web.socket.notification.NotificationsDao.setNotificationRead(java.lang.String,pl.adjule.web.socket.notification.NotificationView)", "pl.adjule.web.socket.notification.NotificationView.getQuestionId()"], "Fixed commit": "dcc646c99b410c4afd39e00b198c62e20485e5f2", "Url": "https://api.github.com/repos/kTT/adjule", "Date": "2016-11-18T23:33:38Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((null != (tmcUsername)) && (!(\"\".equals(tmcUsername.trim())))) { java.lang.String loginUrl = (tmcUrl) + \"/login.jsp\"; org.apache.http.client.methods.HttpUriRequest login = org.apache.http.client.methods.RequestBuilder.post().setUri(new java.net.URI(loginUrl)).addParameter(\"username\", tmcUsername).addParameter(\"password\", tmcPassword).build(); org.apache.http.client.methods.CloseableHttpResponse loginResponse = httpclient.execute(login); org.apache.http.HttpEntity loginResponseEntity = loginResponse.getEntity(); org.apache.http.util.EntityUtils.consume(loginResponseEntity); if ((org.apache.http.HttpStatus.SC_OK) == (loginResponse.getStatusLine().getStatusCode())) { restTemplate = new org.springframework.web.client.RestTemplate(new org.springframework.http.client.HttpComponentsClientHttpRequestFactory(httpclient)); }else throw new java.io.IOException(\"Could not authenticate to TMC.\"); }else { restTemplate = new org.springframework.web.client.RestTemplate(new org.springframework.http.client.HttpComponentsClientHttpRequestFactory(httpclient)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/7308/buggy-version/src.main.java.com.terracotta.nrplugin.rest.tmc.BaseTmcClient.java", "BodyUseAPI": ["org.apache.http.client.methods.RequestBuilder.post().setUri(new java.net.URI(loginUrl)).addParameter(\"username\", tmcUsername).addParameter(\"password\", tmcPassword).build()", "org.apache.http.client.methods.RequestBuilder.post().setUri(new java.net.URI(loginUrl)).addParameter(\"username\", tmcUsername).addParameter(java.lang.String,java.lang.String)", "org.apache.http.client.methods.RequestBuilder.post().setUri(new java.net.URI(loginUrl)).addParameter(java.lang.String,java.lang.String)"], "Fixed commit": "86ae6fc135186ca3123754cfaaf7672b380df86e", "Url": "https://api.github.com/repos/Terracotta-OSS/terracotta-newrelic-plugin", "Date": "2014-09-04T17:36:02Z"},
{"Line": "=>342", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.HttpURLConnection.getContentEncoding()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (((null != content_encode) && (!(\"\".equals(content_encode)))) && (content_encode.equals(\"gzip\"))) { is = new java.util.zip.GZIPInputStream(is); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/1348/buggy-version/src.org.qii.weiciyuan.support.http.JavaHttpUtility.java", "BodyUseAPI": [], "Fixed commit": "d51a4dfadace2a77355ae31d399fb431ef5a2e08", "Url": "https://api.github.com/repos/Jewelzqiu/weiciyuan", "Date": "2014-03-10T15:13:03Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((edu.bu.cs591.ateam.pavlokdrivingapp.SpeedCheckTask.routeTrace) != null) { edu.bu.cs591.ateam.pavlokdrivingapp.SpeedCheckTask.routeTrace.add(loc); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/4388/buggy-version/PavlokDrivingApp.app.src.main.java.edu.bu.cs591.ateam.pavlokdrivingapp.SpeedCheckTask.java", "BodyUseAPI": [], "Fixed commit": "36ec1285c065da6b150cbcffa7437a7af55feb30", "Url": "https://api.github.com/repos/seshank4/PavlokDrivingApp", "Date": "2016-12-07T19:40:31Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["raytrace.data.RayData.getTStart()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (t < t0) t = (negDdotEminusC + discrim) / DdotD;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/5238/buggy-version/src.raytrace.geometry.Sphere.java", "BodyUseAPI": [], "Fixed commit": "da043ffe3f835102fba6e3d24d09c2541e2d71d7", "Url": "https://api.github.com/repos/CalVR/ParallelRaytracing", "Date": "2014-04-08T03:20:29Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ctx.expression().accept(org.nlamah.QL.Builders.RawFormBuilder)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (expression != null) { question = new org.nlamah.QL.Model.Form.ComputedQuestion(identifier, questionText, returnType, expression); org.nlamah.QBase.Tools.ParseTools.addSourceCodePosition(question, ctx); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/8700/buggy-version/nlamah.src.main.java.org.nlamah.QL.Builders.RawFormBuilder.java", "BodyUseAPI": [], "Fixed commit": "d0561068ccc4c41f47543d3f2be75df699305621", "Url": "https://api.github.com/repos/software-engineering-amsterdam/many-ql", "Date": "2015-06-06T19:57:39Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hsim.gui.GuiPatientPopup.getRandomDoctor()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((hsim.state.PlayState.objectTiles[doctor.posX][doctor.posY]) == null) { hsim.state.PlayState.objectTiles[doctor.posX][doctor.posY] = doctor; hsim.state.PlayState.objectTiles[doctor.posX][doctor.posY].currentTask = new hsim.task.TaskTreat(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/1051/buggy-version/src.hsim.gui.GuiPatientPopup.java", "BodyUseAPI": [], "Fixed commit": "4aed353cc089e6cbd0d43583c32231020431aa07", "Url": "https://api.github.com/repos/klmDF14J/GameJam", "Date": "2014-03-12T19:54:13Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hsim.gui.GuiPatientPopup.getRandomDoctor()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((hsim.state.PlayState.objectTiles[doctor.posX][doctor.posY]) == null) { hsim.state.PlayState.objectTiles[doctor.posX][doctor.posY] = doctor; hsim.state.PlayState.objectTiles[doctor.posX][doctor.posY].currentTask = new hsim.task.TaskDiagnose(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/1051/buggy-version/src.hsim.gui.GuiPatientPopup.java", "BodyUseAPI": [], "Fixed commit": "4aed353cc089e6cbd0d43583c32231020431aa07", "Url": "https://api.github.com/repos/klmDF14J/GameJam", "Date": "2014-03-12T19:54:13Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (usePathPrefix) { prefix = pathPrefix.trim(); if (((prefix.length()) > 0) && (!(prefix.endsWith(\"/\")))) { prefix += \"/\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/1759/buggy-version/tooling.karaf-maven-plugin.src.main.java.org.apache.karaf.tooling.ArchiveMojo.java", "BodyUseAPI": [], "Fixed commit": "cd3448df56c71945030893f75d5d677871c0c4cf", "Url": "https://api.github.com/repos/mcculls/karaf", "Date": "2015-09-25T19:12:23Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cl.fatman.capital.fund.ExtractData.getFomentUnitData(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (tmpMap != null) ufMap.putAll(tmpMap);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/4311/buggy-version/fund.src.main.java.cl.fatman.capital.fund.Controller.java", "BodyUseAPI": ["java.util.Map<java.lang.String, cl.fatman.capital.fund.FomentUnit>.putAll(java.util.Map<java.lang.String, cl.fatman.capital.fund.FomentUnit>)"], "Fixed commit": "b721bd5451ff29ecc95b6b1569fb12493b6e54a0", "Url": "https://api.github.com/repos/mparra-mpz/Capital", "Date": "2016-07-05T07:14:56Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, cl.fatman.capital.fund.FomentUnit>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (uf != null) { cl.fatman.capital.fund.Controller.logger.debug((\"Found foment unit value for: \" + (uf.getDate().toString()))); ufList.add(uf); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/4311/buggy-version/fund.src.main.java.cl.fatman.capital.fund.Controller.java", "BodyUseAPI": ["uf.getDate().toString()", "org.apache.log4j.Logger.debug((\"Found foment unit value for: \" + (uf.getDate().toString())))", "cl.fatman.capital.fund.FomentUnit.getDate()", "java.util.List<cl.fatman.capital.fund.FomentUnit>.add(cl.fatman.capital.fund.FomentUnit)"], "Fixed commit": "b721bd5451ff29ecc95b6b1569fb12493b6e54a0", "Url": "https://api.github.com/repos/mparra-mpz/Capital", "Date": "2016-07-05T07:14:56Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.airavata.common.utils.ServerSettings.getServerRoles()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((serverRoles.length) == 4) { return kafkaTopicPrefix + \"_all\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/3628/buggy-version/modules.commons.src.main.java.org.apache.airavata.common.logging.kafka.KafkaAppender.java", "BodyUseAPI": [], "Fixed commit": "58183be1070e95cfc83e6ef360ec2def5e670706", "Url": "https://api.github.com/repos/apache/airavata", "Date": "2016-08-29T07:52:17Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(this.entryObject.getReportType().isEmpty())) { this.table.setReportType(this.entryObject.getReportType()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/5597/buggy-version/omod.src.main.java.org.openmrs.module.dataentrystatistics.web.controller.DataEntryStatisticsController.java", "BodyUseAPI": ["org.openmrs.module.dataentrystatistics.web.model.EntryObject.getReportType()", "org.openmrs.module.dataentrystatistics.DataTable.setReportType(this.entryObject.getReportType())"], "Fixed commit": "446f1ea1738e6dc01fa2924b21e81d1ce1ac2dcd", "Url": "https://api.github.com/repos/FriendsInGlobalHealth/openmrs-module-dataentrystatistics", "Date": "2017-09-21T10:47:09Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (bookJsonString == null) { final android.content.Intent messageIntent = new android.content.Intent(it.jaschke.alexandria.MainActivity.MESSAGE_EVENT); final java.lang.String msg = getString(R.string.add_book_failed_note_internet_msg); messageIntent.putExtra(MainActivity.MESSAGE_KEY, java.lang.String.format(msg, ean)); android.support.v4.content.LocalBroadcastManager.getInstance(getApplicationContext()).sendBroadcast(messageIntent); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/1710/buggy-version/alexandria.src.main.java.it.jaschke.alexandria.services.BookService.java", "BodyUseAPI": [], "Fixed commit": "268cdc892cc35d3f0090715ea99b18b9daf3b72f", "Url": "https://api.github.com/repos/dennyjun/super-duo", "Date": "2015-08-29T04:41:35Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (java.nio.file.Files.exists(feedbackFilePath)) { java.lang.String pathContents = loader.loadFile(feedbackFilePath); java.lang.String[] allFeedback = pathContents.split(\"\\\\*\\\\*\\\\*PDE-C\\\\*\\\\*\\\\*\"); for (int i = 0; i < (allFeedback.length); i += 2) { model.Feedback f = new model.Feedback(allFeedback[i], allFeedback[(i + 1)]); addFeedback(f, eventController.getCFile(feedbackFilePath), editorPane); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/5963/buggy-version/src.view.FeedbackHistory.java", "BodyUseAPI": ["view.FeedbackHistory.addFeedback(model.Feedback,eventController.getCFile(feedbackFilePath),org.fife.ui.rsyntaxtextarea.RSyntaxTextArea)", "controller.EventController.getCFile(java.nio.file.Path)", "controller.fileops.FileLoad.loadFile(java.nio.file.Path)"], "Fixed commit": "c67d912fa1ef158b5759901e25363676cdf7d074", "Url": "https://api.github.com/repos/ControlAltDelete/PDE-C", "Date": "2016-11-16T05:29:26Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (null == items) { return list; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/2113/buggy-version/app.src.main.java.cn.peacesky.beenews.util.DataUtil.java", "BodyUseAPI": [], "Fixed commit": "3e34f79a70b179332dc89d09875b9d9f0f108e39", "Url": "https://api.github.com/repos/Anderson-Liu/BeeNews", "Date": "2016-07-31T12:07:11Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSwipeRefreshLayout) != null) { mSwipeRefreshLayout.setRefreshing(true); new cn.peacesky.beenews.ui.fragment.OriginalArticleFragment.MoreArticleTask().execute(mAdapter.getTopArticleId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/2113/buggy-version/app.src.main.java.cn.peacesky.beenews.ui.fragment.OriginalArticleFragment.java", "BodyUseAPI": [], "Fixed commit": "3e34f79a70b179332dc89d09875b9d9f0f108e39", "Url": "https://api.github.com/repos/Anderson-Liu/BeeNews", "Date": "2016-07-31T12:07:11Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (updateDoc) { xwikiContext.getWiki().getStore().saveXWikiDoc(xwikiAttachment.getDoc(), xwikiContext, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/7739/buggy-version/xwiki-platform-cloud-blobstore.xwiki-platform-cloud-blobstore-attachments.src.main.java.org.xwiki.blobstore.attachments.legacy.internal.transactions.DeleteAttachmentMetaDataTransactionRunnable.java", "BodyUseAPI": [], "Fixed commit": "f7a10262bff4da3a8d52056fd49c2373d2334b49", "Url": "https://api.github.com/repos/xwiki-contrib/xwiki-platform-cloud", "Date": "2015-06-02T19:40:39Z"},
{"Line": "=>299", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (floor != (-1)) { temp = this.get_mapcase(x, y, floor); }else { temp = this.get_mapcase(x, y); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/4890/buggy-version/zildo.src.main.java.zildo.monde.map.Area.java", "BodyUseAPI": ["zildo.monde.map.Area.get_mapcase(int,int,int)"], "Fixed commit": "bc6542b0a1f2dc5a0797ecdb7902b95292844f6b", "Url": "https://api.github.com/repos/tchegito/zildo", "Date": "2017-06-04T21:30:34Z"},
{"Line": "=>466", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.camel.Exchange.getProperty(java.lang.String,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isXalanTransformer) { javax.xml.stream.XMLStreamReader reader = exchange.getContext().getTypeConverter().tryConvertTo(javax.xml.stream.XMLStreamReader.class, exchange, body); if (reader != null) { source = new org.apache.camel.converter.jaxp.StaxSource(reader); } }else { if (isAllowStAX()) { source = exchange.getContext().getTypeConverter().tryConvertTo(javax.xml.transform.stax.StAXSource.class, exchange, body); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/8096/buggy-version/camel-core.src.main.java.org.apache.camel.builder.xml.XsltBuilder.java", "BodyUseAPI": [], "Fixed commit": "40b1576475ac09213cb7dd5bea46851e33b6d3ad", "Url": "https://api.github.com/repos/apache/camel", "Date": "2014-01-24T02:27:54Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((view.getWidth()) != 0) && ((view.getHeight()) != 0)) { back.setLayoutParams(new net.brach.android.stackview.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, view.getHeight())); android.graphics.Bitmap bitmap = android.graphics.Bitmap.createBitmap(view.getWidth(), view.getHeight(), Bitmap.Config.ARGB_8888); android.graphics.Canvas canvas = new android.graphics.Canvas(bitmap); view.draw(canvas); back.setImageBitmap(bitmap); back.requestLayout(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/1523/buggy-version/stackview.src.main.java.net.brach.android.stackview.StackView.java", "BodyUseAPI": ["android.graphics.Bitmap.createBitmap(view.getWidth(),view.getHeight(),Bitmap.Config.ARGB_8888)", "android.view.View.draw(android.graphics.Canvas)", "android.view.View.getHeight()", "android.view.View.getWidth()", "android.widget.ImageView.setLayoutParams(net.brach.android.stackview.LayoutParams)", "android.view.View.getHeight()"], "Fixed commit": "48cf67a6a88f53447b0f8fd4bc3f36092e4e595b", "Url": "https://api.github.com/repos/brachior/android-stackview", "Date": "2017-05-23T13:38:28Z"},
{"Line": "=>467", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((clientImage.isOwn()) && ((menu) != null)) { com.actionbarsherlock.view.MenuItem menuItem = menu.findItem(R.id.deleteImageMenuOption); if (menuItem != null) { menuItem.setVisible(true); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/7856/buggy-version/geo-catch-mobile.src.main.java.com.jrew.geocatch.mobile.fragment.PhotoBrowsingFragment.java", "BodyUseAPI": [], "Fixed commit": "56a5c0580a4a7d6ad5baa258fe67a712b69272a1", "Url": "https://api.github.com/repos/vadzim-kazak/geo-catch", "Date": "2014-04-14T13:22:08Z"},
{"Line": "=>275", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(((clientImage) != null) && (clientImage.isOwn()))) { menu.findItem(R.id.deleteImageMenuOption).setVisible(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/7856/buggy-version/geo-catch-mobile.src.main.java.com.jrew.geocatch.mobile.fragment.PhotoBrowsingFragment.java", "BodyUseAPI": [], "Fixed commit": "56a5c0580a4a7d6ad5baa258fe67a712b69272a1", "Url": "https://api.github.com/repos/vadzim-kazak/geo-catch", "Date": "2014-04-14T13:22:08Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((view.getUrl()) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/6475/buggy-version/src.com.woshipike.mywebview.CustomizedWebview.java", "BodyUseAPI": [], "Fixed commit": "6279377ccaaf7e7c7d13ed8091956c66e028903d", "Url": "https://api.github.com/repos/woshipike00/BrowserBenchmark", "Date": "2013-07-24T14:58:23Z"},
{"Line": "=>302", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.io.File, info.fetter.logstashforwarder.FileState>.get(java.io.File)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (state != null) state.setDeleted();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/2826/buggy-version/src.main.java.info.fetter.logstashforwarder.FileWatcher.java", "BodyUseAPI": ["info.fetter.logstashforwarder.FileState.setDeleted()"], "Fixed commit": "e746741438d3e12d969e948d5dd9448a7f4a727b", "Url": "https://api.github.com/repos/pichljan/logstash-forwarder-java", "Date": "2015-06-22T17:03:31Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(com.nineworldsdeep.gauntlet.synergy.v2.SynergyUtils.isCategorizedItem(itm))) { toBeRemoved.add(itm); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/5117/buggy-version/app.src.main.java.com.nineworldsdeep.gauntlet.synergy.v2.SynergyUtils.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "d713c9e12fd203db1a0248b1cc55bfd436a658eb", "Url": "https://api.github.com/repos/BBuchholz/Gauntlet", "Date": "2016-01-27T19:06:55Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (numberGrid.getAiMode()) { stopAI(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/8177/buggy-version/ai_2048.app.src.main.java.com.lyk.ai_2048.main.MainGameActivity.java", "BodyUseAPI": [], "Fixed commit": "7138936634fd73e0bb0c4067d76ab6e6570e8468", "Url": "https://api.github.com/repos/ThePatrickStar/2048_Android_AI", "Date": "2016-07-05T11:21:50Z"},
{"Line": "=>592", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((showfriendsFragment.adapter) != null) { if (showfriendsFragment.adapter.inEditmode) { showfriendsFragment.adapter.inEditmode = false; for (int i = 0; i < (showfriendsFragment.adapter.checks.size()); i++) { showfriendsFragment.adapter.checks.set(i, 0); } showfriendsFragment.adapter.notifyDataSetChanged(); com.acfreeman.socialmediascanner.MainActivity.hideAppbarButtons(); } }else { this.doubleBackToExitPressedOnce = true; android.widget.Toast.makeText(this, \"Press BACK again to exit\", Toast.LENGTH_SHORT).show(); new android.os.Handler().postDelayed(new java.lang.Runnable() { @java.lang.Override public void run() { doubleBackToExitPressedOnce = false; } }, 2000); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/4787/buggy-version/app.src.main.java.com.acfreeman.socialmediascanner.MainActivity.java", "BodyUseAPI": ["showfriendsFragment.adapter.checks.size()", "showfriendsFragment.adapter.checks.set(int,int)", "showfriendsFragment.adapter.notifyDataSetChanged()"], "Fixed commit": "2b23e228c22d1f55999ae96c45bd04a8ae3c2055", "Url": "https://api.github.com/repos/andrewcfreeman/social-media-scanner", "Date": "2017-11-02T23:07:17Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.keycloak.models.sessions.infinispan.initializer.SessionInitializerWorker.log.isTraceEnabled()) { org.keycloak.models.sessions.infinispan.initializer.SessionInitializerWorker.log.tracef(\"Running computation for segment: %d\", segment); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/3784/buggy-version/model.sessions-infinispan.src.main.java.org.keycloak.models.sessions.infinispan.initializer.SessionInitializerWorker.java", "BodyUseAPI": ["org.jboss.logging.Logger.tracef(java.lang.String,int)"], "Fixed commit": "605c80a68def2e09eb8d4d0632eb646108f287bd", "Url": "https://api.github.com/repos/stianst/keycloak", "Date": "2015-10-16T18:50:48Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.keycloak.models.sessions.infinispan.initializer.InfinispanUserSessionInitializer.log.isTraceEnabled()) { org.keycloak.models.sessions.infinispan.initializer.InfinispanUserSessionInitializer.log.trace((\"unfinished segments for this iteration: \" + segments)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/3784/buggy-version/model.sessions-infinispan.src.main.java.org.keycloak.models.sessions.infinispan.initializer.InfinispanUserSessionInitializer.java", "BodyUseAPI": ["org.jboss.logging.Logger.trace(java.lang.String)"], "Fixed commit": "605c80a68def2e09eb8d4d0632eb646108f287bd", "Url": "https://api.github.com/repos/stianst/keycloak", "Date": "2015-10-16T18:50:48Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.keycloak.models.sessions.infinispan.initializer.InfinispanUserSessionInitializer.log.isDebugEnabled()) { org.keycloak.models.sessions.infinispan.initializer.InfinispanUserSessionInitializer.log.debug((\"New initializer state pushed. The state is: \" + (state.printState()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/3784/buggy-version/model.sessions-infinispan.src.main.java.org.keycloak.models.sessions.infinispan.initializer.InfinispanUserSessionInitializer.java", "BodyUseAPI": ["org.jboss.logging.Logger.debug((\"New initializer state pushed. The state is: \" + (state.printState())))"], "Fixed commit": "605c80a68def2e09eb8d4d0632eb646108f287bd", "Url": "https://api.github.com/repos/stianst/keycloak", "Date": "2015-10-16T18:50:48Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((oldest) == null) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/2631/buggy-version/TagExplorerProcessing2.src.tagexplorerprocessing2.Timeline.java", "BodyUseAPI": [], "Fixed commit": "d131e04136c127520a09da2ef9bcc4b36e7caeb8", "Url": "https://api.github.com/repos/einraum-design/TagExplorerEGit", "Date": "2013-01-16T14:46:52Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((position >= (paramList.size())) || (position <= 0)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/3410/buggy-version/app.src.main.java.com.project.zxt.ustauctionhouse.PersonalInfo.TransactionInfo.java", "BodyUseAPI": [], "Fixed commit": "aeb39af6e36345c9ab36b6529bd39afa795cf737", "Url": "https://api.github.com/repos/xzhouaf/Auction-House", "Date": "2015-04-22T16:16:35Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((position >= (paramList.size())) || (position <= 0)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/3410/buggy-version/app.src.main.java.com.project.zxt.ustauctionhouse.SearchItem.SearchResult.java", "BodyUseAPI": [], "Fixed commit": "aeb39af6e36345c9ab36b6529bd39afa795cf737", "Url": "https://api.github.com/repos/xzhouaf/Auction-House", "Date": "2015-04-22T16:16:35Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((position >= (paramList.size())) || (position <= 0)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/3410/buggy-version/app.src.main.java.com.project.zxt.ustauctionhouse.bottomMenu.NewItem.java", "BodyUseAPI": [], "Fixed commit": "aeb39af6e36345c9ab36b6529bd39afa795cf737", "Url": "https://api.github.com/repos/xzhouaf/Auction-House", "Date": "2015-04-22T16:16:35Z"},
{"Line": "=>8", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["In.readInt()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (N < 4) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/4544/buggy-version/pattern-recognition.src.Fast.java", "BodyUseAPI": [], "Fixed commit": "941ce8cc9434be7595114ea5022365d85c8cf687", "Url": "https://api.github.com/repos/merwan/algs4", "Date": "2013-10-08T21:39:57Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (alignedPoints >= 3) { Fast.showLine(lines, (alignedPoints + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/4544/buggy-version/pattern-recognition.src.Fast.java", "BodyUseAPI": ["Fast.showLine(Point[],int)"], "Fixed commit": "941ce8cc9434be7595114ea5022365d85c8cf687", "Url": "https://api.github.com/repos/merwan/algs4", "Date": "2013-10-08T21:39:57Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (log.isDebugEnabled()) { log.debug(\"JMX::IdNotAvailable. MBean may not be registered on the Server.\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/2302/buggy-version/Agent.src.info.novatec.inspectit.agent.sensor.jmx.JmxSensor.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String,info.novatec.inspectit.agent.core.IdNotAvailableException)"], "Fixed commit": "0a27d9d58ecc624273010a09d454eaf26ee80f65", "Url": "https://api.github.com/repos/mariusoe/inspectIT", "Date": "2015-08-14T10:06:33Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((pointId.size()) == 1) { detail += \" \" + (pointString.get(0)); }else { for (int i = 0; i < ((pointId.size()) - 1); i++) { detail += java.lang.String.format(\"%s, \", pointString.get(i)); } detail += java.lang.String.format(resources.getString(R.string.and), pointString.get(((pointString.size()) - 1))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/6059/buggy-version/src.com.kiri.hackjak.FormattedResult.java", "BodyUseAPI": ["java.util.List<java.lang.Long>.size()"], "Fixed commit": "41781de9647f581d25e5c796c15c2055c8c76db6", "Url": "https://api.github.com/repos/aristosh/hackjak", "Date": "2014-04-27T03:01:11Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mAdapter.getHotFlag())) { rvGoldList.addItemDecoration(mDecoration); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/8199/buggy-version/app.src.main.java.com.codeest.geeknews.ui.gold.fragment.GoldPagerFragment.java", "BodyUseAPI": [], "Fixed commit": "7472ceec93e02b325344457b2528cb320df9af69", "Url": "https://api.github.com/repos/codeestX/GeekNews", "Date": "2016-12-05T12:14:53Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.execution.runners.ExecutionEnvironment.getRunProfile()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (configuration.isCustomFileToLaunch()) { flashFileToDebug = configuration.getCustomFileToLaunchPath(); }else { final com.intellij.openapi.roots.CompilerModuleExtension model = com.intellij.openapi.roots.CompilerModuleExtension.getInstance(module); assert model != null; flashFileToDebug = ((model.getCompilerOutputUrl()) + \"/debug/\") + (settings.getOutputFileName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/8372/buggy-version/src.16.0.com.intellij.plugins.haxe.runner.debugger.HaxeDebugRunner.java", "BodyUseAPI": ["com.intellij.plugins.haxe.runner.HaxeApplicationConfiguration.getCustomFileToLaunchPath()"], "Fixed commit": "b6e284055f01d87d5eb7789b3989e93c7a251459", "Url": "https://api.github.com/repos/SlavaRa/intellij-haxe", "Date": "2016-09-02T13:57:51Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(due.isEmpty())) Codo.Util.Database.update((((java.lang.String.format(\"UPDATE %s \", CONSTANT.TABLE.REMINDER)) + (java.lang.String.format(\"SET due='%s' \", due))) + (java.lang.String.format(\"WHERE id='%d';\", reminderId))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/3764/buggy-version/src.Codo.Model.PublicReminder.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,java.lang.String)", "Codo.Util.Database.update((((java.lang.String.format(\"UPDATE %s \", CONSTANT.TABLE.REMINDER)) + (java.lang.String.format(\"SET due='%s' \", due))) + (java.lang.String.format(\"WHERE id='%d';\", reminderId))))"], "Fixed commit": "bf745ea309772aa33f2fc56ed0db8a12e6df7423", "Url": "https://api.github.com/repos/ZERR2AC/Codo-API", "Date": "2016-11-30T10:32:28Z"},
{"Line": "=>601", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((endIdx > 0) && (i > (endIdx + 1))) == false) { updateMarket(i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/6593/buggy-version/src.Trader.MainView.java", "BodyUseAPI": ["Trader.MainView.updateMarket(int)"], "Fixed commit": "dc8bfe6478a93f7bf7f6dea5fd8baab2b5575d34", "Url": "https://api.github.com/repos/avlavl/TradingSystem", "Date": "2016-07-13T15:28:29Z"},
{"Line": "=>557", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((endIdx > 0) && (i > (endIdx + 1))) == false) { updateMarket(i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/6593/buggy-version/src.Trader.MainView.java", "BodyUseAPI": ["Trader.MainView.updateMarket(int)"], "Fixed commit": "dc8bfe6478a93f7bf7f6dea5fd8baab2b5575d34", "Url": "https://api.github.com/repos/avlavl/TradingSystem", "Date": "2016-07-13T15:28:29Z"},
{"Line": "=>640", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((endIdx > 0) && (i > (endIdx + 1))) == false) { updateMarket(i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/6593/buggy-version/src.Trader.MainView.java", "BodyUseAPI": ["Trader.MainView.updateMarket(int)"], "Fixed commit": "dc8bfe6478a93f7bf7f6dea5fd8baab2b5575d34", "Url": "https://api.github.com/repos/avlavl/TradingSystem", "Date": "2016-07-13T15:28:29Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((photos) != null) && ((photos.size()) != 0)) { java.util.ArrayList<java.lang.String> photo_string = photo_to_string(photos); journal.setPhoto_string(photo_string); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/2035/buggy-version/app.src.main.java.com.example.jingyuan.footprints.JournalEditorActivity.java", "BodyUseAPI": ["com.example.jingyuan.footprints.JournalEditorActivity.5.photo_to_string(java.util.ArrayList<android.graphics.Bitmap>)"], "Fixed commit": "d054c3ea64bb3ca5a0283d72ed99bff7878bb91e", "Url": "https://api.github.com/repos/marlonli/Android-Footprints", "Date": "2017-12-17T23:19:30Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (context.hasFlag('n')) { namespace = context.getFlag('n'); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/3618/buggy-version/mechanisms.src.main.java.com.sk89q.craftbook.bukkit.commands.AreaCommands.java", "BodyUseAPI": ["com.sk89q.minecraft.util.commands.CommandContext.getFlag(char)"], "Fixed commit": "bfaed39e280ba6929e31e3706f71b77e405c114f", "Url": "https://api.github.com/repos/Silthus/craftbook", "Date": "2012-08-05T10:37:51Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tatami.core.agent.messaging.MessagingComponent.extractInternalAddress(tatami.core.agent.AgentEvent,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((destinationInternal.length()) == 0) destinationInternal = \"/\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/7561/buggy-version/src.tatami.core.agent.messaging.MessagingComponent.java", "BodyUseAPI": [], "Fixed commit": "94caa37995331ad30f0696bdc5372c3c79ef62d6", "Url": "https://api.github.com/repos/tATAmI-Project/tATAmI-PC", "Date": "2015-02-10T13:15:39Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (enemyLocation == null) java.lang.System.out.println(\"enemyLoc is null\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/414/buggy-version/src.edu.cwru.sepia.agent.AstarAgent.java", "BodyUseAPI": [], "Fixed commit": "5e411dd7457911cbbdfe143b39e3cc90a8f30121", "Url": "https://api.github.com/repos/ShaunHoward/eecs391_pr01", "Date": "2015-02-09T01:44:28Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (resourceLocations == null) java.lang.System.out.println(\"resourceLoc is null\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/414/buggy-version/src.edu.cwru.sepia.agent.AstarAgent.java", "BodyUseAPI": [], "Fixed commit": "5e411dd7457911cbbdfe143b39e3cc90a8f30121", "Url": "https://api.github.com/repos/ShaunHoward/eecs391_pr01", "Date": "2015-02-09T01:44:28Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.ruhlendavis.mc.communitybridge.CommunityBridge.isActive()) { config.report(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/6146/buggy-version/src.org.ruhlendavis.mc.communitybridge.CBCommandExecutor.java", "BodyUseAPI": [], "Fixed commit": "13e30207c5aa4e2410ce33cd0fd124e5cd60b5cb", "Url": "https://api.github.com/repos/iain-davis/CommunityBridge", "Date": "2013-07-11T20:52:02Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((jsonManeuver.get(\"waypoint\")) != null) location = new osrm_interface.LatLng(jsonManeuver.get(\"waypoint\").asArray()); else location = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/6317/buggy-version/src.osrm_interface.StepManeuver.java", "BodyUseAPI": [], "Fixed commit": "d36a221f6794d6bad1f1457c35902c29dac052f3", "Url": "https://api.github.com/repos/AquioxSoftware/OSRM-Java-Interface", "Date": "2016-05-27T01:05:08Z"},
{"Line": "=>318", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((operator) == (prompto.grammar.EqOp.NOT_EQUALS)) query.not();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/9018/buggy-version/Java-Core.src.main.java.prompto.expression.EqualsExpression.java", "BodyUseAPI": [], "Fixed commit": "407c64183ecc0d6c2ebcf5470df321d4f6bf368e", "Url": "https://api.github.com/repos/prompto/prompto-java", "Date": "2016-05-11T10:31:13Z"},
{"Line": "=>338", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((operator) == (prompto.grammar.EqOp.NOT_EQUALS)) method.addInstruction(Opcode.DUP);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/9018/buggy-version/Java-Core.src.main.java.prompto.expression.EqualsExpression.java", "BodyUseAPI": [], "Fixed commit": "407c64183ecc0d6c2ebcf5470df321d4f6bf368e", "Url": "https://api.github.com/repos/prompto/prompto-java", "Date": "2016-05-11T10:31:13Z"},
{"Line": "=>350", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((operator) == (prompto.grammar.EqOp.NOT_EQUALS)) { m = new prompto.compiler.InterfaceConstant(prompto.store.IQuery.class, \"not\", void.class); method.addInstruction(Opcode.INVOKEINTERFACE, m); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/9018/buggy-version/Java-Core.src.main.java.prompto.expression.EqualsExpression.java", "BodyUseAPI": [], "Fixed commit": "407c64183ecc0d6c2ebcf5470df321d4f6bf368e", "Url": "https://api.github.com/repos/prompto/prompto-java", "Date": "2016-05-11T10:31:13Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isItemValidForSlot(slot, stack)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/3533/buggy-version/src.main.java.com.vanhal.progressiveautomation.entities.BaseTileEntity.java", "BodyUseAPI": [], "Fixed commit": "287c6d74b57a9e9ca2b5364d818382a3f97c168e", "Url": "https://api.github.com/repos/Vanhal/ModJam", "Date": "2014-05-19T15:51:37Z"},
{"Line": "=>362", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (slots[4].isItemEqual(com.vanhal.progressiveautomation.ref.ToolInfo.getUpgradeType(mineLevel))) { addUpgrades(getCurrentUpgrades()); slots[4] = null; lastUpgrades = getCurrentUpgrades(); update = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/3533/buggy-version/src.main.java.com.vanhal.progressiveautomation.entities.TileMiner.java", "BodyUseAPI": [], "Fixed commit": "287c6d74b57a9e9ca2b5364d818382a3f97c168e", "Url": "https://api.github.com/repos/Vanhal/ModJam", "Date": "2014-05-19T15:51:37Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (r.isTXCommit()) { inflightMessages.addMessage(r.getPosition()); com.zendesk.maxwell.replication.BinlogPosition newPosition = inflightMessages.completeMessage(r.getPosition()); if (newPosition != null) { context.setPosition(newPosition); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/1193/buggy-version/src.main.java.com.zendesk.maxwell.producer.RabbitmqProducer.java", "BodyUseAPI": ["com.zendesk.maxwell.producer.InflightMessageList.addMessage(r.getPosition())", "com.zendesk.maxwell.producer.InflightMessageList.completeMessage(r.getPosition())", "com.zendesk.maxwell.row.RowMap.getPosition()", "com.zendesk.maxwell.row.RowMap.getPosition()"], "Fixed commit": "57a9b7d24c9b4b523ee0bb278eed3d73bf34dcd0", "Url": "https://api.github.com/repos/Hiteshm01/maxwell", "Date": "2016-12-30T19:31:10Z"},
{"Line": "=>411", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<org.exist.collections.CollectionURI, org.exist.collections.CollectionConfiguration>.remove(org.exist.collections.CollectionURI)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((removed != null) && (pool != null)) { pool.getXQueryPool().clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/2840/buggy-version/src.org.exist.collections.CollectionConfigurationManager.java", "BodyUseAPI": ["pool.getXQueryPool().clear()", "org.exist.storage.BrokerPool.getXQueryPool()"], "Fixed commit": "91f8b63cf949eaadad680155e812994be19c07e5", "Url": "https://api.github.com/repos/dizzzz/exist", "Date": "2014-02-06T16:11:18Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (status) { org.giswater.dao.MainDao.commit(); }else { org.giswater.dao.MainDao.rollback(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/6101/buggy-version/src.org.giswater.task.RenameSchemaTask.java", "BodyUseAPI": [], "Fixed commit": "ede79128a8bf67e1ed49d064bac944a9c13f35fc", "Url": "https://api.github.com/repos/Giswater/giswater", "Date": "2016-11-29T11:21:40Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (gwtMavenModuleName == null) { try { prefs.remove(com.google.gdt.eclipse.core.properties.WebAppProjectProperties.GWT_MAVEN_MODULE_NAME); } catch (java.lang.Exception e) { e.printStackTrace(); } }else { prefs.put(com.google.gdt.eclipse.core.properties.WebAppProjectProperties.GWT_MAVEN_MODULE_NAME, gwtMavenModuleName); prefs.flush(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/8838/buggy-version/plugins.com.google.gdt.eclipse.core.src.com.google.gdt.eclipse.core.properties.WebAppProjectProperties.java", "BodyUseAPI": ["org.eclipse.core.runtime.preferences.IEclipsePreferences.put(java.lang.String,java.lang.String)"], "Fixed commit": "854d81c1f58e13838f80bf8233bc2e31ed1f3630", "Url": "https://api.github.com/repos/gwt-plugins/gwt-eclipse-plugin", "Date": "2015-12-28T21:00:30Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (agentClass == null) { throw new java.lang.IllegalArgumentException(\"Argument agentClass can't be null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/6908/buggy-version/src.org.pikater.core.ontology.subtrees.agentInfo.AgentInfos.java", "BodyUseAPI": [], "Fixed commit": "30aa535b645e554dee90d813cafcc7e656c0b3c7", "Url": "https://api.github.com/repos/krajj7/pikater", "Date": "2014-08-12T23:12:40Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.pikater.core.ontology.subtrees.agentInfo.AgentInfo.getAgentClassName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (agentClassNameI == null) { if ((agentClass.getAgentClass()) == null) { return true; } }else if (agentClassNameI.equals(agentClass.getAgentClass())) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/6908/buggy-version/src.org.pikater.core.ontology.subtrees.agentInfo.AgentInfos.java", "BodyUseAPI": ["java.lang.String.equals(agentClass.getAgentClass())"], "Fixed commit": "30aa535b645e554dee90d813cafcc7e656c0b3c7", "Url": "https://api.github.com/repos/krajj7/pikater", "Date": "2014-08-12T23:12:40Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((actor == null) || ((actor.orientation) == null)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/1551/buggy-version/app.src.main.java.com.wizzer.mle.parts.actors.MleModelActor.java", "BodyUseAPI": [], "Fixed commit": "78ed06d8d6027380ed361551689ad6929ddfd432", "Url": "https://api.github.com/repos/magic-lantern-android-studio/parts-actors", "Date": "2016-09-02T19:23:59Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["telnet.Tab.findWordAndPos(java.lang.String,int)", "telnet.Tab.Trie.getMutations(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((posibilities.size()) == 1) && (posibilities.get(0).equals(string.string))) { toReturn = \"input options\"; }else { for (int i = 0; i < (posibilities.size()); i++) { toReturn += (posibilities.get(i)) + (i != ((posibilities.size()) - 1) ? \", \" : \"\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/8474/buggy-version/src.telnet.Tab.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.size()", "java.util.ArrayList<java.lang.String>.get(int)", "java.util.ArrayList<java.lang.String>.size()"], "Fixed commit": "ff19ce31fb21d7f470ca2561900947127130b223", "Url": "https://api.github.com/repos/SynthSeq/synthseq", "Date": "2012-04-04T16:43:36Z"},
{"Line": "=>386", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (deleteConfig) net.slipcor.pvparena.managers.ArenaManager.arenas.remove(arena.getName());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/7743/buggy-version/src.net.slipcor.pvparena.managers.ArenaManager.java", "BodyUseAPI": [], "Fixed commit": "8a9afb3f68e0b2450606cc27cefbdd0bf4312d86", "Url": "https://api.github.com/repos/slipcor/pvparena", "Date": "2012-10-11T00:23:36Z"},
{"Line": "=>315", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mMenu) != null) { final android.view.MenuItem menuItem = mMenu.findItem(Constants.FAVORITE_TEAM_REPORT_ID); if (menuItem != null) { menuItem.setVisible(false); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/2467/buggy-version/ScoutingApp.src.main.java.com.jimg.scoutingapp.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "ecf94083dd5efe56c5385f5c965f1c475d0bf5cb", "Url": "https://api.github.com/repos/TKirby42/ScoutingApp", "Date": "2014-04-04T04:12:32Z"},
{"Line": "=>298", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mMenu) != null) { final android.view.MenuItem menuItem = mMenu.findItem(Constants.FAVORITE_TEAM_REPORT_ID); if (menuItem != null) { menuItem.setVisible(true); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/2467/buggy-version/ScoutingApp.src.main.java.com.jimg.scoutingapp.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "ecf94083dd5efe56c5385f5c965f1c475d0bf5cb", "Url": "https://api.github.com/repos/TKirby42/ScoutingApp", "Date": "2014-04-04T04:12:32Z"},
{"Line": "=>304", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (TechnologyTypes.ANDROIDS.contains(project.getProjectInfo().getTechnology().getId())) { int buildSize = administrator.getBuildInfos(project).size(); getHttpRequest().setAttribute(com.photon.phresco.framework.actions.applications.REQ_BUILD_WARNING, (buildSize == 0)); }else { getHttpRequest().setAttribute(com.photon.phresco.framework.actions.applications.REQ_BUILD_WARNING, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/6612/buggy-version/framework.phresco-framework-web.src.main.java.com.photon.phresco.framework.actions.applications.Code.java", "BodyUseAPI": ["com.photon.phresco.framework.api.ProjectAdministrator.getBuildInfos(com.photon.phresco.framework.api.Project)", "administrator.getBuildInfos(project).size()"], "Fixed commit": "47c6d2ee0624cb31a6fb9cbaab3e38970f947e3e", "Url": "https://api.github.com/repos/phresco/phresco", "Date": "2012-10-15T14:30:21Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.Cursor.getString(data.getColumnIndex(AlexandriaContract.AuthorEntry.AUTHOR))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (authors != null) { java.lang.String[] authorsArr = authors.split(\",\"); ((android.widget.TextView) (rootView.findViewById(R.id.authors))).setLines(authorsArr.length); ((android.widget.TextView) (rootView.findViewById(R.id.authors))).setText(authors.replace(\",\", \"\\n\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/8889/buggy-version/SuperDuo-Alexandria.app.src.main.java.it.jaschke.alexandria.fragments.BookDetail.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)", "java.lang.String.replace(java.lang.String,java.lang.String)", "((android.widget.TextView) (rootView.findViewById(R.id.authors))).setText(java.lang.String)"], "Fixed commit": "06fd448844975875cd9525c0f7ce4244601d8c0d", "Url": "https://api.github.com/repos/nshukla75/SuperDuo", "Date": "2016-01-31T20:54:33Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.n52.sos.util.CollectionHelper.isNotEmpty(request.getObservationIdentifier()))) { exceptions.add(new org.n52.sos.exception.ows.MissingParameterValueException(Sos2Constants.GetObservationByIdParams.observation)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/6740/buggy-version/bindings.kvp.src.main.java.org.n52.sos.decode.kvp.v2.GetObservationByIdKvpDecoderv20.java", "BodyUseAPI": [], "Fixed commit": "5da534f79535b8ac31f7909c8391092096c91422", "Url": "https://api.github.com/repos/52North/SOS", "Date": "2017-04-24T06:36:04Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.osgi.framework.BundleContext.getServiceReferences(<nulltype>,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (servicesPresent != null) { for (org.osgi.framework.ServiceReference<?> serviceReference : servicesPresent) { sl.serviceChanged(new org.osgi.framework.ServiceEvent(org.osgi.framework.ServiceEvent.REGISTERED, serviceReference)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/1794/buggy-version/jsr330activator.implementation.src.main.java.no.steria.osgi.jsr330activator.implementation.InjectionBase.java", "BodyUseAPI": [], "Fixed commit": "02a4ee6e6b0b999e0b5df7f1e5aaa8de68d7d331", "Url": "https://api.github.com/repos/sbang/jsr330activator", "Date": "2015-04-29T16:36:51Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((monoply.game.MonopolyBoardPanel.turn) == 0) monoply.game.MonopolyBoardPanel.turn = 3; else monoply.game.MonopolyBoardPanel.turn = ((monoply.game.MonopolyBoardPanel.turn) - 1) % (this.players.size());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/5911/buggy-version/src.monoply.game.MonopolyBoardPanel.java", "BodyUseAPI": [], "Fixed commit": "388787b649e90999d0e9d6972d8ff37bfd9f37bf", "Url": "https://api.github.com/repos/yehia67/Monoply-Game", "Date": "2017-10-16T10:44:49Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (me.johnnywoof.AlwaysOnline.debug) { getLogger().info((\"Utils.isSessionServerOnline() returned \" + isOnline)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/1567/buggy-version/src.me.johnnywoof.AlwaysOnline.java", "BodyUseAPI": [], "Fixed commit": "9e190ff1dc35d3eed8f9c81f42c8ac78e108d138", "Url": "https://api.github.com/repos/johnnywoof/AlwaysOnline", "Date": "2015-07-23T16:00:13Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((v1.getTangent()) == null) { v1.setTangent(Vector3f.ZERO.get()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/207/buggy-version/src.main.java.org.achtern.AchternEngine.core.rendering.mesh.Mesh.java", "BodyUseAPI": ["org.achtern.AchternEngine.core.rendering.Vertex.setTangent(Vector3f.ZERO.get())"], "Fixed commit": "643b583f830f6fb3d4b1a392b11c20d61b68b33a", "Url": "https://api.github.com/repos/achtern/AchternEngine", "Date": "2015-06-20T15:58:14Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((v0.getTangent()) == null) { v0.setTangent(Vector3f.ZERO.get()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/207/buggy-version/src.main.java.org.achtern.AchternEngine.core.rendering.mesh.Mesh.java", "BodyUseAPI": ["org.achtern.AchternEngine.core.rendering.Vertex.setTangent(Vector3f.ZERO.get())"], "Fixed commit": "643b583f830f6fb3d4b1a392b11c20d61b68b33a", "Url": "https://api.github.com/repos/achtern/AchternEngine", "Date": "2015-06-20T15:58:14Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((v2.getTangent()) == null) { v2.setTangent(Vector3f.ZERO.get()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/207/buggy-version/src.main.java.org.achtern.AchternEngine.core.rendering.mesh.Mesh.java", "BodyUseAPI": ["org.achtern.AchternEngine.core.rendering.Vertex.setTangent(Vector3f.ZERO.get())"], "Fixed commit": "643b583f830f6fb3d4b1a392b11c20d61b68b33a", "Url": "https://api.github.com/repos/achtern/AchternEngine", "Date": "2015-06-20T15:58:14Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (w.contains(\"%\")) { w = w.replaceAll(\"%\", \"\"); h = h.replaceAll(\"%\", \"\"); this.unit = \"%\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/6420/buggy-version/src.main.java.svg.SVG.java", "BodyUseAPI": [], "Fixed commit": "c1968e4d931544fbdcc5df224caec5945c0d6287", "Url": "https://api.github.com/repos/fablab-neckar-alb/camm-gl3", "Date": "2015-11-13T03:19:16Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (w.contains(\"px\")) { w = w.replaceAll(\"px\", \"\"); h = h.replaceAll(\"px\", \"\"); this.unit = \"px\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/6420/buggy-version/src.main.java.svg.SVG.java", "BodyUseAPI": [], "Fixed commit": "c1968e4d931544fbdcc5df224caec5945c0d6287", "Url": "https://api.github.com/repos/fablab-neckar-alb/camm-gl3", "Date": "2015-11-13T03:19:16Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.common.collect.Lists.newArrayList()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((topItems.size()) < howMany) { howMany = topItems.size(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/3600/buggy-version/src.main.java.org.plista.kornakapi.core.recommender.ParallelTopItems.java", "BodyUseAPI": ["java.util.List<org.apache.mahout.cf.taste.recommender.RecommendedItem>.size()"], "Fixed commit": "eb4733aa522bac0bb066672dff142e191f57400a", "Url": "https://api.github.com/repos/KukumavMozolo/kornakapi", "Date": "2014-07-30T10:00:34Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getSelectorType()) != (org.csstudio.swt.widgets.figures.TextInputFigure.SelectorType.NONE)) { if ((superSize.height) < (org.csstudio.swt.widgets.figures.TextInputFigure.SELECTOR_WIDTH)) superSize.height = org.csstudio.swt.widgets.figures.TextInputFigure.SELECTOR_WIDTH; superSize.width += (org.csstudio.swt.widgets.figures.TextInputFigure.SELECTOR_WIDTH) + 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/5828/buggy-version/applications.plugins.org.csstudio.swt.widgets.src.org.csstudio.swt.widgets.figures.TextInputFigure.java", "BodyUseAPI": [], "Fixed commit": "14472673805a46e1880bcc386b52a03dd0e21c87", "Url": "https://api.github.com/repos/ControlSystemStudio/cs-studio", "Date": "2013-03-01T23:59:01Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((endTime) == null) { throw new java.lang.RuntimeException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/4722/buggy-version/src.todolist.model.Task.java", "BodyUseAPI": [], "Fixed commit": "7c676db96680220f73207abfeb6ab15396182bd7", "Url": "https://api.github.com/repos/cs2103jan2016-w13-2j/ToDoList", "Date": "2016-03-30T07:54:09Z"},
{"Line": "=>592", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dataBase.retrieve(new todolist.model.SearchCommand(\"NAME\", title)).get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((tempTask.getEndTime()) == null) { throw new java.lang.RuntimeException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/4722/buggy-version/src.todolist.logic.Logic.java", "BodyUseAPI": [], "Fixed commit": "7c676db96680220f73207abfeb6ab15396182bd7", "Url": "https://api.github.com/repos/cs2103jan2016-w13-2j/ToDoList", "Date": "2016-03-30T07:54:09Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_currentFriend.getUserId()) == (friend_.getUserId())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/1984/buggy-version/TweetFiltrr.src.main.java.com.sun.tweetfiltrr.database.dao.UserFriendsDao.java", "BodyUseAPI": [], "Fixed commit": "c694693860c02934f0ed2c2da499215cfade13ba", "Url": "https://api.github.com/repos/SundeepK/TwitterFilttr", "Date": "2014-02-15T16:03:53Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_currentFriend.getUserId()) == (friend_.getUserId())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/1984/buggy-version/TweetFiltrr.src.main.java.com.sun.tweetfiltrr.database.dao.UserFollowersDao.java", "BodyUseAPI": [], "Fixed commit": "c694693860c02934f0ed2c2da499215cfade13ba", "Url": "https://api.github.com/repos/SundeepK/TwitterFilttr", "Date": "2014-02-15T16:03:53Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasTitle()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/8387/buggy-version/shapes.Game.java", "BodyUseAPI": [], "Fixed commit": "094ef2379e3e65b8c50e3c875aaea9e872aa9a27", "Url": "https://api.github.com/repos/nate00/shapes", "Date": "2013-04-14T05:30:13Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(game.hasTitle())) { game.update(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/8387/buggy-version/shapes.Canvas.java", "BodyUseAPI": ["shapes.Game.update()"], "Fixed commit": "094ef2379e3e65b8c50e3c875aaea9e872aa9a27", "Url": "https://api.github.com/repos/nate00/shapes", "Date": "2013-04-14T05:30:13Z"},
{"Line": "=>3352", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this) instanceof megamek.common.Infantry) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/632/buggy-version/megamek.src.megamek.common.Entity.java", "BodyUseAPI": [], "Fixed commit": "104b795a2160bc53117db19efcf7a4f6343a692d", "Url": "https://api.github.com/repos/MegaMek/megamek", "Date": "2005-07-20T20:05:21Z"},
{"Line": "=>1140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!isGood) { setLoadEnabled(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/632/buggy-version/megamek.src.megamek.client.ui.AWT.MovementDisplay.java", "BodyUseAPI": [], "Fixed commit": "104b795a2160bc53117db19efcf7a4f6343a692d", "Url": "https://api.github.com/repos/MegaMek/megamek", "Date": "2005-07-20T20:05:21Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((lexer.token()) == (JSONToken.NULL)) { lexer.next(); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/8946/buggy-version/src.main.java.com.alibaba.fastjson.parser.DefaultJSONParser.java", "BodyUseAPI": ["com.alibaba.fastjson.parser.JSONLexer.next()"], "Fixed commit": "8d2fb65e9924f86cb711d6112c8698eb054e0ae5", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2014-10-27T08:52:17Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((forecasts == null) || ((forecasts.size()) == 0)) || ((forecasts.get(0).getCity_id()) != (cityID))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/3690/buggy-version/app.src.main.java.org.secuso.privacyfriendlyweather.activities.ForecastCityActivity.java", "BodyUseAPI": [], "Fixed commit": "8b4e662690611178e15bf8a371617ea044a1ab79", "Url": "https://api.github.com/repos/SecUSo/privacy-friendly-weather", "Date": "2017-01-25T01:09:32Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isEmpty()) return null; else return jobList.remove(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/3644/buggy-version/src.jobs.JobQueue.java", "BodyUseAPI": [], "Fixed commit": "3ec00383cb6891e3fe2873075a1252d3ca8847b8", "Url": "https://api.github.com/repos/conanhjj/cs423mp4", "Date": "2013-04-14T04:00:03Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isEmpty()) return null; else return jobList.get(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/3644/buggy-version/src.jobs.JobQueue.java", "BodyUseAPI": [], "Fixed commit": "3ec00383cb6891e3fe2873075a1252d3ca8847b8", "Url": "https://api.github.com/repos/conanhjj/cs423mp4", "Date": "2013-04-14T04:00:03Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.Ben12345rocks.VotingPlugin.Main.getVoteSite(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (voteSite == null) { if (com.Ben12345rocks.VotingPlugin.Config.Config.getInstance().getDebugEnabled()) { com.Ben12345rocks.VotingPlugin.Events.VotiferEvent.plugin.getLogger().info(\"VoteSite is null\"); } return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/8636/buggy-version/VotingPlugin.src.com.Ben12345rocks.VotingPlugin.Events.VotiferEvent.java", "BodyUseAPI": [], "Fixed commit": "7801f27506001eef521954de221f605189899ba7", "Url": "https://api.github.com/repos/Ben12345rocks/VotingPlugin", "Date": "2016-07-03T01:04:19Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((Main.start.getLastOpened()) != null) { jComboBox.setSelectedItem(Main.start.getLastOpened()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/3834/buggy-version/src.tenny1028.quicktyper.gui.ProfileChooser.java", "BodyUseAPI": [], "Fixed commit": "d5f6f91f07f7268bae8c5d61e3f36622271c2a94", "Url": "https://api.github.com/repos/tenny1028/WordsPerMinute", "Date": "2014-06-16T18:47:37Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((userError.getException()) != null) userError.getException().printStackTrace();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/6614/buggy-version/src.main.java.client.view.View.java", "BodyUseAPI": ["client.view.UserError.getException()", "userError.getException().printStackTrace()"], "Fixed commit": "1ee3ecafba66f46479af2b707f7883e77cbce8af", "Url": "https://api.github.com/repos/Osyx/aFileCatalog", "Date": "2017-12-02T15:28:06Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((fileError.getException()) != null) fileError.getException().printStackTrace();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/6614/buggy-version/src.main.java.client.view.View.java", "BodyUseAPI": ["client.view.FileError.getException()", "fileError.getException().printStackTrace()"], "Fixed commit": "1ee3ecafba66f46479af2b707f7883e77cbce8af", "Url": "https://api.github.com/repos/Osyx/aFileCatalog", "Date": "2017-12-02T15:28:06Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(lid.getUsername().equals(user.getUsername()))) throw new server.controller.UserError(\"Username mismatch, something went wrong with session please re-login.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/6614/buggy-version/src.main.java.server.controller.Controller.java", "BodyUseAPI": [], "Fixed commit": "1ee3ecafba66f46479af2b707f7883e77cbce8af", "Url": "https://api.github.com/repos/Osyx/aFileCatalog", "Date": "2017-12-02T15:28:06Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(lid.getUsername().equals(user.getUsername()))) throw new server.controller.UserError(\"Username mismatch, something went wrong with session please re-login.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/6614/buggy-version/src.main.java.server.controller.Controller.java", "BodyUseAPI": [], "Fixed commit": "1ee3ecafba66f46479af2b707f7883e77cbce8af", "Url": "https://api.github.com/repos/Osyx/aFileCatalog", "Date": "2017-12-02T15:28:06Z"},
{"Line": "=>440", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(submission.isSelfPost())) { b.sheet(7, open, mContext.getString(R.string.submission_link_extern)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/7863/buggy-version/app.src.main.java.me.ccrama.redditslide.SubmissionViews.PopulateSubmissionViewHolder.java", "BodyUseAPI": [], "Fixed commit": "454f592bf10b6970280834a01b4f134f7077563e", "Url": "https://api.github.com/repos/Nxt3/Slide", "Date": "2016-08-15T22:43:32Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (showInputDialog == null) { java.lang.System.exit(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/4647/buggy-version/roman-converter.src.rome.Main.java", "BodyUseAPI": [], "Fixed commit": "4f4b583dc8efcc76f904441ab171573403c2d353", "Url": "https://api.github.com/repos/emilitzerjo/roman-number-converter", "Date": "2015-12-17T06:27:58Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JOptionPane.showInputDialog(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (showInputDialog == null) { java.lang.System.exit(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/4647/buggy-version/roman-converter.src.rome.Main.java", "BodyUseAPI": [], "Fixed commit": "4f4b583dc8efcc76f904441ab171573403c2d353", "Url": "https://api.github.com/repos/emilitzerjo/roman-number-converter", "Date": "2015-12-17T06:27:58Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.math3.fraction.BigFraction.compareTo(BigFraction.ZERO)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (yi > 0) { return Plus(Times(org.matheclipse.core.reflection.system.C1D2, org.matheclipse.core.reflection.system.Pi), ArcTan(Divide(org.matheclipse.core.reflection.system.F.fraction(x), org.matheclipse.core.reflection.system.F.fraction(y)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/8277/buggy-version/symja_android_library.matheclipse-core.src.main.java.org.matheclipse.core.reflection.system.Arg.java", "BodyUseAPI": [], "Fixed commit": "dc7d4a9b7849dd672ae993ce90b0b08d832a74ae", "Url": "https://api.github.com/repos/axkr/symja_android_library", "Date": "2013-12-07T16:41:39Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.math3.fraction.BigFraction.compareTo(BigFraction.ZERO)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (xi > 0) { return ArcTan(Divide(org.matheclipse.core.reflection.system.F.fraction(y), org.matheclipse.core.reflection.system.F.fraction(x))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/8277/buggy-version/symja_android_library.matheclipse-core.src.main.java.org.matheclipse.core.reflection.system.Arg.java", "BodyUseAPI": [], "Fixed commit": "dc7d4a9b7849dd672ae993ce90b0b08d832a74ae", "Url": "https://api.github.com/repos/axkr/symja_android_library", "Date": "2013-12-07T16:41:39Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((strs.charAt(((strs.length()) - 1))) == ',') strs = strs.substring(0, ((strs.length()) - 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/8374/buggy-version/app.src.main.java.pl.engine.GameManager.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "093ff50fd6949c96fe992db40adc6de29b35c3b2", "Url": "https://api.github.com/repos/lightblue502/PartylinkServer", "Date": "2016-02-04T09:55:53Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((aliveEntities) != null) { this.aliveEntities.close(); this.aliveEntities.clear(); this.aliveEntities = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/6144/buggy-version/src.de.fuwa.bomberman.game.appstates.MainGameAppState.java", "BodyUseAPI": [], "Fixed commit": "4275dbba9c2771adab03963d68a1f9a5bb48220c", "Url": "https://api.github.com/repos/DomenicDev/FuwaMan", "Date": "2017-12-10T22:43:25Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.disrupted.rumble.network.linklayer.wifi.WifiUtil.isWiFiApEnabled()) && (packet.getAddress().getHostAddress().equals(\"192.168.43.1\"))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/340/buggy-version/app.src.main.java.org.disrupted.rumble.network.protocols.rumble.workers.RumbleUDPMulticastScanner.java", "BodyUseAPI": [], "Fixed commit": "bb53201f9c3dfe155bd71ad1aa501f867d38d373", "Url": "https://api.github.com/repos/PrasannaVenkadesh/Rumble", "Date": "2015-12-08T17:48:04Z"},
{"Line": "=>697", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (DataLogicSystem.m_dbVersion.equals(\"Derby\")) { return new uk.chromis.pos.forms.StaticSentence(s, (\"SELECT \" + ((((((((\"ID, \" + \"NAME, \") + \"IMAGE, \") + \"TEXTTIP, \") + \"CATSHOWNAME, \") + \"COLOUR, \") + \"CATORDER \") + \"FROM CATEGORIES \") + \"ORDER BY NAME\")), null, uk.chromis.pos.forms.CategoryInfo.getSerializerRead()); }else { return new uk.chromis.pos.forms.StaticSentence(s, (\"SELECT \" + ((((((((\"ID, \" + \"NAME, \") + \"NULL, \") + \"TEXTTIP, \") + \"CATSHOWNAME, \") + \"COLOUR, \") + \"CATORDER \") + \"FROM CATEGORIES \") + \"ORDER BY NAME\")), null, uk.chromis.pos.forms.CategoryInfo.getSerializerRead()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/6082/buggy-version/src-pos.uk.chromis.pos.forms.DataLogicSales.java", "BodyUseAPI": [], "Fixed commit": "cc9f454aa090be17585157b0eb08e1bda0bb2b20", "Url": "https://api.github.com/repos/ChromisPos/ChromisPOS", "Date": "2016-04-27T20:19:33Z"},
{"Line": "=>404", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((solutionTag.getTagList(Chemical.IONS, NBTTypes.COMPOUND).tagCount()) == 0) solution = new net.minecraft.item.ItemStack(com.JasonILTG.ScienceMod.init.ScienceModItems.mixture); else solution = new net.minecraft.item.ItemStack(com.JasonILTG.ScienceMod.init.ScienceModItems.solution);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/8158/buggy-version/src.main.java.com.JasonILTG.ScienceMod.tileentity.TEMixer.java", "BodyUseAPI": [], "Fixed commit": "7dd8d17a68b4155d8c45a84c6ba87da055b4c9c3", "Url": "https://api.github.com/repos/JasonYe4273/Minecraft-Modding", "Date": "2015-11-28T23:55:02Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.InetAddress.getHostAddress()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(intervalMap.containsKey(ipAddress))) { intervalMap.put(ipAddress, java.lang.System.currentTimeMillis()); }else { if (((java.lang.System.currentTimeMillis()) - (intervalMap.get(ipAddress))) < (ServerConfig.CONNECTION_INTERVAL)) { clientSocket.close(); logger.debug(((\"Client: \" + (clientSocket.getInetAddress().getHostAddress())) + \" violates the connection interval.\")); intervalMap.put(ipAddress, java.lang.System.currentTimeMillis()); continue; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/6124/buggy-version/src.main.java.org.aw.server.ServerConnectionManager.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Long>.put(java.lang.String,long)", "java.util.Map<java.lang.String, java.lang.Long>.get(java.lang.String)", "java.util.Map<java.lang.String, java.lang.Long>.put(java.lang.String,long)"], "Fixed commit": "f6522b651efa5a3859bbc31fd495a252b64b5c74", "Url": "https://api.github.com/repos/yuriak/DS_Assignment1", "Date": "2017-04-25T05:45:23Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (player.get(Keys.IS_SNEAKING).orElse(false)) { player.sendMessage(org.spongepowered.api.text.Text.of(TextColors.RED, \"You can not use this sign while sneaking\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/6161/buggy-version/src.main.java.me.nentify.servershops.events.BlockEventHandler.java", "BodyUseAPI": ["org.spongepowered.api.entity.living.player.Player.sendMessage(org.spongepowered.api.text.Text.of(TextColors.RED, \"You can not use this sign while sneaking\"))"], "Fixed commit": "9202254cb51fa67ba13af82b575aeb08c220afa0", "Url": "https://api.github.com/repos/LukeJS/ServerShops", "Date": "2016-09-02T18:48:25Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((workspacesBackupLocks.putIfAbsent(workspaceId, lock)) != null) { java.lang.String err = (\"Restore of workspace \" + workspaceId) + \" failed. Another restore process of the same workspace is in progress\"; com.codenvy.machine.backup.MachineBackupManager.LOG.error(err); throw new org.eclipse.che.api.core.ServerException(err); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/4539/buggy-version/plugins.plugin-hosted.codenvy-machine-hosted.src.main.java.com.codenvy.machine.backup.MachineBackupManager.java", "BodyUseAPI": [], "Fixed commit": "38bea4316a741240a463a4fadc5e09146df81454", "Url": "https://api.github.com/repos/codenvy/codenvy", "Date": "2016-07-30T01:00:25Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(br.com.giorgetti.games.squareplatform.main.SquarePlatform.gd.getDisplayMode().equals(br.com.giorgetti.games.squareplatform.main.SquarePlatform.originalDisplayMode))) { br.com.giorgetti.games.squareplatform.main.SquarePlatform.gd.setDisplayMode(br.com.giorgetti.games.squareplatform.main.SquarePlatform.originalDisplayMode); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/7477/buggy-version/src.main.java.br.com.giorgetti.games.squareplatform.main.SquarePlatform.java", "BodyUseAPI": ["java.awt.GraphicsDevice.setDisplayMode(java.awt.DisplayMode)"], "Fixed commit": "91260fc9673d67f6ed9954065e68648db0dbc9ab", "Url": "https://api.github.com/repos/fgiorgetti/SquarePlatform", "Date": "2017-08-16T04:30:33Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Double.parseDouble(currency.select(\"td\").get(4).text())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((java.lang.Math.abs((selling - (lastSelling)))) >= 1) { lastSelling = selling; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/3552/buggy-version/app.src.main.java.currency.alarm.yutou.in.currencyalarm.CurrentAlarmService.java", "BodyUseAPI": [], "Fixed commit": "92bf2baca11e662304dad2c07dfa79a77e1a350b", "Url": "https://api.github.com/repos/ytxiuxiu/currency-alarm", "Date": "2016-01-20T22:33:23Z"},
{"Line": "=>509", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((java.lang.Boolean) (valueToConvert.value)).booleanValue()) { returnValue = new havabol.ResultValue(Token.STRING, new java.lang.StringBuilder(\"T\")); }else { returnValue = new havabol.ResultValue(Token.STRING, new java.lang.StringBuilder(\"F\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/8155/buggy-version/src.havabol.ResultValue.java", "BodyUseAPI": [], "Fixed commit": "cece4baf732ad5e81a23bd24c2dc9d22902cb66c", "Url": "https://api.github.com/repos/blind-guy/HavaBol", "Date": "2017-04-11T23:41:36Z"},
{"Line": "=>365", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((layer.getStyles().get(0)) != null) { style = layer.getStyles().get(0).getStyleString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/1992/buggy-version/geoplatform-gui.plugin.geoplatform-print.src.main.java.org.geosdi.geoplatform.gui.client.form.GPPrintWidget.java", "BodyUseAPI": ["layer.getStyles().get(0).getStyleString()", "org.geosdi.geoplatform.gui.model.GPLayerBean.getStyles()", "layer.getStyles().get(int)"], "Fixed commit": "cfd1297cc0a0271134c52607b6297bdf62779d83", "Url": "https://api.github.com/repos/glascaleia/geo-platform", "Date": "2014-02-13T15:50:33Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((m == 2) && (Dayoftheweek.isLeapYear(yr))) total += 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/5826/buggy-version/Dayoftheweek.java", "BodyUseAPI": [], "Fixed commit": "f0494816d3c0252d79382bb4752f3b5a094df50d", "Url": "https://api.github.com/repos/hugabor/day-of-the-week", "Date": "2017-04-16T01:10:49Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((timer) != null) && (timer.isRunning())) { timer.stop(); setText(java.lang.String.format(com.willwinder.universalgcodesender.uielements.SendStatusLine.COMPLETED_FORMAT, com.willwinder.universalgcodesender.Utils.formattedMillis(backend.getSendDuration()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/2281/buggy-version/ugs-core.src.com.willwinder.universalgcodesender.uielements.SendStatusLine.java", "BodyUseAPI": ["javax.swing.Timer.stop()"], "Fixed commit": "d93ed340bf72ed947da15376e8c46a28e0e74e83", "Url": "https://api.github.com/repos/winder/Universal-G-Code-Sender", "Date": "2016-10-12T12:37:06Z"},
{"Line": "=>677", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((errorListeners.size()) == 0) { org.apache.curator.framework.recipes.cache.TreeCache.LOG.error(\"\", e); }else { errorListeners.forEach(new com.google.common.base.Function<org.apache.curator.framework.api.UnhandledErrorListener, java.lang.Void>() { @java.lang.Override public java.lang.Void apply(org.apache.curator.framework.api.UnhandledErrorListener listener) { try { listener.unhandledError(\"\", e); } catch (java.lang.Exception e) { org.apache.curator.framework.recipes.cache.TreeCache.LOG.error(\"Exception handling exception\", e); } return null; } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/3514/buggy-version/curator-recipes.src.main.java.org.apache.curator.framework.recipes.cache.TreeCache.java", "BodyUseAPI": ["org.apache.curator.framework.listen.ListenerContainer<org.apache.curator.framework.api.UnhandledErrorListener>.forEach(com.google.common.base.Function<org.apache.curator.framework.api.UnhandledErrorListener, java.lang.Void>)"], "Fixed commit": "180a1598f7b1550c6cab65bea81053e2d0a0ae60", "Url": "https://api.github.com/repos/madrob/curator", "Date": "2014-08-26T23:51:29Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (net.minecraft.src.GuiOldDaysSettings.scrolling) { updatePos((((height) / 6) - 10)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/7318/buggy-version/src.client.olddays.core.GuiOldDaysSettings.java", "BodyUseAPI": [], "Fixed commit": "285db986864f477c9f721dd34e3faf358f41f0a4", "Url": "https://api.github.com/repos/Exalm/Minecraft-mods", "Date": "2012-04-28T09:47:27Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(net.minecraft.src.GuiOldDaysSettings.scrolling)) { if (par3 == 0) { dragging = false; } if ((dragging) && (par3 == (-1))) { updatePos(java.lang.Math.max(java.lang.Math.min((((height) / 6) - 10), (par2 - (currenty))), (((14 - (((mod_OldDays.proplength[id]) - 1) / 2)) * 30) - 235))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/7318/buggy-version/src.client.olddays.core.GuiOldDaysSettings.java", "BodyUseAPI": [], "Fixed commit": "285db986864f477c9f721dd34e3faf358f41f0a4", "Url": "https://api.github.com/repos/Exalm/Minecraft-mods", "Date": "2012-04-28T09:47:27Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (net.minecraft.src.GuiOldDaysSettings.scrolling) { top = 20; }else { if ((mod_OldDays.proplength[id]) > 14) { top += 16; }else if ((mod_OldDays.proplength[id]) > 12) { top += 13; }else if ((mod_OldDays.proplength[id]) > 10) { top += 10; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/7318/buggy-version/src.client.olddays.core.GuiOldDaysSettings.java", "BodyUseAPI": [], "Fixed commit": "285db986864f477c9f721dd34e3faf358f41f0a4", "Url": "https://api.github.com/repos/Exalm/Minecraft-mods", "Date": "2012-04-28T09:47:27Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(net.minecraft.src.GuiOldDaysSettings.scrolling)) { if ((mod_OldDays.proplength[id]) > 14) { top += margin / 1.8; margin -= 6; }else if ((mod_OldDays.proplength[id]) > 12) { margin -= 3; top += margin / 2; }else if ((mod_OldDays.proplength[id]) > 10) { top += margin / 3; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/7318/buggy-version/src.client.olddays.core.GuiOldDaysSettings.java", "BodyUseAPI": [], "Fixed commit": "285db986864f477c9f721dd34e3faf358f41f0a4", "Url": "https://api.github.com/repos/Exalm/Minecraft-mods", "Date": "2012-04-28T09:47:27Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (\"-meta-out\".equalsIgnoreCase(s)) { is_meta_out = true; }else if (is_meta_out) { meta_out = s; is_meta_out = false; }else if (\"-src-out\".equalsIgnoreCase(s)) { is_src_out = true; }else if (is_src_out) { src_out = s; is_src_out = false; }else { is_tables = true; tables.add(s); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/7416/buggy-version/src.main.java.net.percederberg.mibble.compiler.Mib2Go.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)", "java.util.ArrayList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "93268654e86b0d324c7a20ebaab976e30df4c649", "Url": "https://api.github.com/repos/runner-mei/mibble", "Date": "2015-12-26T06:53:22Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (jarFile.isFile()) { java.lang.System.setProperty(\"annis.home\", jarFile.getParent()); }else { java.lang.System.setProperty(\"annis.home\", \".\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/2398/buggy-version/annis-kickstarter.src.main.java.de.hu_berlin.german.korpling.annis.kickstarter.MainFrame.java", "BodyUseAPI": [], "Fixed commit": "baa27a77dd8f1ec83e430d51857799b21764c612", "Url": "https://api.github.com/repos/korpling/ANNIS", "Date": "2016-12-13T09:57:54Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((signedInHandler) != null) signedInHandler.onSignInSuccess();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/5767/buggy-version/app.src.main.java.com.example.johnta.homeworkappv2.firebase.LoginListener.java", "BodyUseAPI": [], "Fixed commit": "e0f300cb767016a3ce815bedc3a3fea3bd82ad2f", "Url": "https://api.github.com/repos/johntaaa/CS_HWApp", "Date": "2017-05-13T21:24:52Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((signedInHandler) != null) signedInHandler.onSignInSuccess();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/5767/buggy-version/app.src.main.java.com.example.johnta.homeworkappv2.firebase.LoginListener.java", "BodyUseAPI": [], "Fixed commit": "e0f300cb767016a3ce815bedc3a3fea3bd82ad2f", "Url": "https://api.github.com/repos/johntaaa/CS_HWApp", "Date": "2017-05-13T21:24:52Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["loci.formats.in.SDTReader.getSizeX()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((paddedWidth > sizeX) && ((planeSize * (getSizeC())) > blockSize)) && ((((planeSize / paddedWidth) * sizeX) * (getSizeC())) <= blockSize)) { paddedWidth = sizeX; planeSize = ((sizeX * sizeY) * times) * bpp; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/8289/buggy-version/components.formats-gpl.src.loci.formats.in.SDTReader.java", "BodyUseAPI": [], "Fixed commit": "3a806a916695d33d68f957aee60a776f8df69d55", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2016-02-19T03:01:24Z"},
{"Line": "=>588", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["parser.Parser.getName(java.util.ArrayList<java.lang.String>,int)", "parser.Parser.getTimeIndex(java.util.ArrayList<java.lang.String>,int,int)", "parser.Parser.getDateIndex(java.util.ArrayList<java.lang.String>,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((((name.length()) != 0) && (timeIndex != (-1))) && (dateIndex != (-1))) { java.util.ArrayList<java.lang.String> argsCopy = processDeadline(args); return (argsCopy.size()) == (index + 3); }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/2535/buggy-version/src.parser.Parser.java", "BodyUseAPI": [], "Fixed commit": "851cace19233d19416af59ee8783a4ceb696cef5", "Url": "https://api.github.com/repos/cs2103aug2015-w14-2j/main", "Date": "2015-11-06T11:23:08Z"},
{"Line": "=>610", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["parser.Parser.getDateIndex(java.util.ArrayList<java.lang.String>,int,int)", "parser.Parser.getName(java.util.ArrayList<java.lang.String>,int)", "parser.Parser.getTimeIndex(java.util.ArrayList<java.lang.String>,int,int)", "parser.Parser.getDateIndex(java.util.ArrayList<java.lang.String>,int,int)", "parser.Parser.getTimeIndex(java.util.ArrayList<java.lang.String>,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((((name.length()) != 0) && (sTimeIndex != (-1))) && (eTimeIndex != (-1))) && ((sDateIndex != (-1)) || (eDateIndex != (-1)))) { java.util.ArrayList<java.lang.String> argsCopy = processBounded(args); sIndex = getIndex(argsCopy, Constants.FROM); eIndex = getIndex(argsCopy, Constants.TO); return ((argsCopy.size()) == (eIndex + 3)) && ((eIndex - sIndex) == 3); }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/2535/buggy-version/src.parser.Parser.java", "BodyUseAPI": [], "Fixed commit": "851cace19233d19416af59ee8783a4ceb696cef5", "Url": "https://api.github.com/repos/cs2103aug2015-w14-2j/main", "Date": "2015-11-06T11:23:08Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((scores.size()) < 10) { lowest_top_ten_score = scores.get(((scores.size()) - 1)); }else { lowest_top_ten_score = scores.get(9); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/4653/buggy-version/src.main.java.spaceinvaders.spaceinvaders_framework.HighscoreManager.java", "BodyUseAPI": ["java.util.ArrayList<spaceinvaders.spaceinvaders_framework.Score>.get(((scores.size()) - 1))", "java.util.ArrayList<spaceinvaders.spaceinvaders_framework.Score>.get(int)", "java.util.ArrayList<spaceinvaders.spaceinvaders_framework.Score>.size()"], "Fixed commit": "67a5c34ac0a88dfc6c55010605ecc6db2c7c4e69", "Url": "https://api.github.com/repos/Jeroemaster/SpaceInvaders", "Date": "2015-10-23T19:58:19Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ch.njol.skript.Skript.logVeryHigh()) { java.io.StringWriter errors = new java.io.StringWriter(); e.printStackTrace(new java.io.PrintWriter(errors)); ch.njol.skript.Skript.warning(errors.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/6518/buggy-version/src.main.java.com.btk5h.skriptmirror.Util.java", "BodyUseAPI": [], "Fixed commit": "24abb8b087a05787b339b2ccf775519e88d7d16a", "Url": "https://api.github.com/repos/btk5h/skript-mirror", "Date": "2017-12-03T19:31:08Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mUnitList) != null) && ((mUnitList.size()) == 0)) { mReportConnectionProblem.setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/8801/buggy-version/app.src.main.java.org.stepic.droid.view.activities.UnitsActivity.java", "BodyUseAPI": [], "Fixed commit": "114013958e3a2490fbe895477c7bafeb4067a976", "Url": "https://api.github.com/repos/StepicOrg/stepik-android", "Date": "2015-11-18T17:38:38Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mList) != null) mList.clear();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/6110/buggy-version/source-code.app.src.main.java.org.buildmlearn.toolkit.learnspelling.DataManager.java", "BodyUseAPI": [], "Fixed commit": "5cfd532832c918fcd6c174e16b6df8bb4e920f32", "Url": "https://api.github.com/repos/BuildmLearn/BuildmLearn-Toolkit-Android", "Date": "2016-07-02T19:32:55Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((session) == null) { android.util.Log.w(com.jiahaoliuliu.nearestrestaurants.NearestRestaurantsListFragment.LOG_TAG, \"Trying to upate the list of the restaurants when the session is not ready\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/6186/buggy-version/src.com.jiahaoliuliu.nearestrestaurants.NearestRestaurantsListFragment.java", "BodyUseAPI": [], "Fixed commit": "b6c1b827e86c4255a1fca9823e54864879729bc2", "Url": "https://api.github.com/repos/jiahaoliuliu/NearestRestaurants", "Date": "2013-12-18T05:40:12Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (apiSource.isUseJAXBAnnotationProcessor()) { objectMapper.registerModule(new com.fasterxml.jackson.module.jaxb.JaxbAnnotationModule()); objectMapper.registerModule(new com.fasterxml.jackson.module.jaxb.JaxbAnnotationModule()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/3845/buggy-version/src.main.java.com.github.kongchen.swagger.docgen.AbstractDocumentSource.java", "BodyUseAPI": [], "Fixed commit": "dbe98e507c756c806431d8c80df06832617f27bd", "Url": "https://api.github.com/repos/mdzhigarov/swagger-maven-plugin", "Date": "2015-11-24T08:04:34Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.forgeessentials.chat.ModuleChat.cmdLog) != null) com.forgeessentials.chat.ModuleChat.cmdLog.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/8193/buggy-version/src.main.java.com.forgeessentials.chat.ModuleChat.java", "BodyUseAPI": [], "Fixed commit": "b725e09c8f55b5f506978261fa6962d82e67ffce", "Url": "https://api.github.com/repos/ForgeEssentials/ForgeEssentials", "Date": "2015-04-19T14:27:40Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.forgeessentials.chat.ModuleChat.chatLog) != null) com.forgeessentials.chat.ModuleChat.chatLog.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/8193/buggy-version/src.main.java.com.forgeessentials.chat.ModuleChat.java", "BodyUseAPI": [], "Fixed commit": "b725e09c8f55b5f506978261fa6962d82e67ffce", "Url": "https://api.github.com/repos/ForgeEssentials/ForgeEssentials", "Date": "2015-04-19T14:27:40Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (buttonID == 1) { dragErase = true; move(x, y, buttonID); }else if (buttonID != 0) { dragDraw = true; move(x, y, buttonID); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/7302/buggy-version/src.editor.Editor.java", "BodyUseAPI": ["editor.Editor.move(int,int,int)", "editor.Editor.move(int,int,int)"], "Fixed commit": "32c9ba9478ff0dd040ea36c6938ccbc33afd6b4b", "Url": "https://api.github.com/repos/doppl3r/Dark-Saunter", "Date": "2013-11-04T16:03:32Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((isAdded()) && (edu.rutgers.css.Rutgers.utils.AppUtil.isOnTop(edu.rutgers.css.Rutgers.fragments.SOC.SOCMain.HANDLE, getFragmentManager()))) setScheduleTitle();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/6686/buggy-version/app.src.main.java.edu.rutgers.css.Rutgers.fragments.SOC.SOCMain.java", "BodyUseAPI": [], "Fixed commit": "80df54c11f7016071a488cdc26d65973d567ce36", "Url": "https://api.github.com/repos/rutgersmobile/android-client", "Date": "2014-09-02T16:17:46Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isAdded())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/6686/buggy-version/app.src.main.java.edu.rutgers.css.Rutgers.fragments.SOC.SOCMain.java", "BodyUseAPI": [], "Fixed commit": "80df54c11f7016071a488cdc26d65973d567ce36", "Url": "https://api.github.com/repos/rutgersmobile/android-client", "Date": "2014-09-02T16:17:46Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.itextpdf.text.pdf.PdfSignatureAppearance.getLayer(java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (n2 != null) { n2.beginText(); n2.setFontAndSize(bf, fontSize); n2.showTextAligned(PdfTemplate.ALIGN_CENTER, text, ((signatureWidth) / 2), ((signatureHeight) - fontSize), 0); n2.endText(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/5099/buggy-version/src.main.java.tc.fab.pdf.signer.deprecated.SignatureAppearance.java", "BodyUseAPI": ["com.itextpdf.text.pdf.PdfTemplate.setFontAndSize(com.itextpdf.text.pdf.BaseFont,java.lang.Float)", "com.itextpdf.text.pdf.PdfTemplate.showTextAligned(PdfTemplate.ALIGN_CENTER,java.lang.String,float,float,int)", "com.itextpdf.text.pdf.PdfTemplate.beginText()", "com.itextpdf.text.pdf.PdfTemplate.endText()"], "Fixed commit": "5d4c1ce63a8cc49291d8e482c1cb4e58331f8f82", "Url": "https://api.github.com/repos/fabianonunes/firma", "Date": "2013-03-27T12:04:25Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(watchKeys.containsKey(path.toAbsolutePath().toString()))) { com.github.kassak.indexer.fs.FSEventsService.log.warning((\"Ignoring attempt to unregister unwatched dir \" + (path.toAbsolutePath()))); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/9199/buggy-version/src.main.java.com.github.kassak.indexer.fs.FSEventsService.java", "BodyUseAPI": ["java.nio.file.Path.toAbsolutePath()", "java.util.logging.Logger.warning(java.lang.String)"], "Fixed commit": "c020e91198bc8ad7790594d61842f0d3e17cc81c", "Url": "https://api.github.com/repos/kassak/indexer", "Date": "2015-02-14T12:02:11Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((s.length()) > 40) { s = (s.substring(0, 40)) + \"...\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/7235/buggy-version/oxd-license-admin.src.main.java.org.xdi.oxd.license.admin.client.Admin.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "3bf3c3546169e0f67562e4429c3af8427af022c9", "Url": "https://api.github.com/repos/GluuFederation/oxd", "Date": "2014-10-12T17:48:00Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((licenseCrypt) != null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/7235/buggy-version/oxd-license-admin.src.main.java.org.xdi.oxd.license.admin.client.ui.LicenseCryptDetailsPresenter.java", "BodyUseAPI": [], "Fixed commit": "3bf3c3546169e0f67562e4429c3af8427af022c9", "Url": "https://api.github.com/repos/GluuFederation/oxd", "Date": "2014-10-12T17:48:00Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((entity.isWet()) || (entity.isBurning())) && ((info.coremodding.moarmor.armor.EnderArmor.tpdelay) == 0)) { th.random(); info.coremodding.moarmor.armor.EnderArmor.tpdelay = 80; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/3141/buggy-version/java.info.coremodding.moarmor.armor.EnderArmor.java", "BodyUseAPI": [], "Fixed commit": "83db162ba05c29adfd74df88125d66d77ca62e2c", "Url": "https://api.github.com/repos/CoreModding/MoArmor", "Date": "2014-02-27T18:11:53Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((sourcePathArray == null) && (sourceValueText != null)) && (!(sourceValueText.equals(\"\")))) { sourceValue = new it.unibas.spicy.model.correspondence.ConstantValue(sourceValueText); sourceValue.setType(type); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/3652/buggy-version/src.main.java.gr.aueb.connection.ActionNewConnection.java", "BodyUseAPI": [], "Fixed commit": "b8c97e87f71ecac81575d0339d02f0339b7e0e7d", "Url": "https://api.github.com/repos/aueb-wim/WebMIPMap", "Date": "2017-05-29T14:08:46Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((type) == null) return ERROR;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/5343/buggy-version/src.com.javaweb.action.AddTicketAction.java", "BodyUseAPI": [], "Fixed commit": "ea66ae6aa5241d264d49c1649a1cdf8c05ed1cf9", "Url": "https://api.github.com/repos/UniHousing/UnivHousing", "Date": "2015-03-31T01:58:32Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.baswell.routes.RouteFromMethodScheme.getRoute(java.lang.reflect.Method)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(methodNameRoute.isEmpty())) { if ((!(routePath.isEmpty())) && (!(routePath.endsWith(\"/\")))) routePath += \"/\"; routePath += methodNameRoute; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/3796/buggy-version/src.main.java.org.baswell.routes.RouteConfig.java", "BodyUseAPI": [], "Fixed commit": "42916b5d299f22e48061b36b3be7b6a46b13b8e1", "Url": "https://api.github.com/repos/baswerc/routes", "Date": "2015-03-13T13:07:14Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (normMul == null) java.util.Arrays.fill(mults, 1.0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/2203/buggy-version/h2o-algos.src.main.java.hex.glrm.GLRM.java", "BodyUseAPI": [], "Fixed commit": "2e89aad34fb0d5589d6a08ff347d95f323005e30", "Url": "https://api.github.com/repos/h2oai/h2o-3", "Date": "2015-07-24T01:30:36Z"},
{"Line": "=>311", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["line.getOriginalVCFLine().split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((A[7].length()) > 0) INFO = java.lang.String.format(\"EFFECT=%s;HGVS=%s;%s\", effect, annotation, A[7]); else INFO = java.lang.String.format(\"EFFECT=%s;HGVS=%s\", effect, annotation, A[7]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/3319/buggy-version/src.main.java.jannovar.Jannovar.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,java.lang.String,java.lang.String,java.lang.String)", "java.lang.String.format(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "31d0ad11b84b86ae0e9e28c8f1cec1bbb7b2e538", "Url": "https://api.github.com/repos/charite/jannovar", "Date": "2013-12-21T11:44:35Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) == (Build.VERSION_CODES.LOLLIPOP_MR1)) { selectedImage = android.net.Uri.fromFile(new java.io.File(com.yanxing.dialog.ContentUriUtil.getPath(getApplicationContext(), selectedImage))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/8081/buggy-version/photodialoglibrary.src.main.java.com.yanxing.dialog.SelectPhotoActivity.java", "BodyUseAPI": [], "Fixed commit": "6f73fe1886a48fc08f39bf5daf1935218ff9b7a1", "Url": "https://api.github.com/repos/yanxing/android-util", "Date": "2017-03-22T02:49:10Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.example.mick.emotionanalizer.AnalizationHelper.INSTANCE().isRunning())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/6496/buggy-version/app.src.main.java.com.example.mick.service.ForegroundService.java", "BodyUseAPI": [], "Fixed commit": "29f65f52ca6ca4113431fac5f5dc065181ec7576", "Url": "https://api.github.com/repos/remc17green/twitteranalysis", "Date": "2017-05-02T23:17:42Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(modeloAvaliacao.criterios().contains(criterio))) { throw new java.lang.IllegalArgumentException(\"este crit\u00e9rio n\u00e3o pertence a esta avalia\u00e7\u00e3o\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/470/buggy-version/src.main.java.com.github.fabriciofx.probatorio.dominio.Avaliacao.java", "BodyUseAPI": [], "Fixed commit": "d14d1715f695281174cb4ce44e690bac5d8f80f8", "Url": "https://api.github.com/repos/fabriciofx/probatorio", "Date": "2015-09-02T23:10:04Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((amount) < 1) amount = 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/7087/buggy-version/circuits.src.main.java.com.sk89q.craftbook.gates.world.items.ItemDispenser.java", "BodyUseAPI": [], "Fixed commit": "05506c2333c2e99cf8b930289c1685e4cd57d878", "Url": "https://api.github.com/repos/sk89q/craftbook", "Date": "2012-12-10T10:13:00Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((data) < 0) data = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/7087/buggy-version/circuits.src.main.java.com.sk89q.craftbook.gates.world.items.ItemDispenser.java", "BodyUseAPI": [], "Fixed commit": "05506c2333c2e99cf8b930289c1685e4cd57d878", "Url": "https://api.github.com/repos/sk89q/craftbook", "Date": "2012-12-10T10:13:00Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["sandeshm.expeval.lib.Operations.getOperators(java.lang.String[],java.util.List<java.lang.Double>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((operands.size()) == 1) && ((operators.size()) == 0)) return operands.get(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/5820/buggy-version/src.sandeshm.expeval.lib.Operations.java", "BodyUseAPI": ["java.util.List<java.lang.Double>.get(int)"], "Fixed commit": "848704d9d09d5b9c6ef81d3a146f4bfbfb3ddaff", "Url": "https://api.github.com/repos/sandesh6023/expression-evaluator", "Date": "2014-01-24T11:02:37Z"},
{"Line": "=>518", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (properties.get(i).equals(\"heuristics\")) { heuristicsSet = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/2993/buggy-version/src.orego.ui.Orego.java", "BodyUseAPI": [], "Fixed commit": "3837dabf15b60ff3cc20273edb836f34bdd36acb", "Url": "https://api.github.com/repos/Orego/Orego", "Date": "2013-07-19T20:54:31Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<org.cqframework.cql.cql2elm.model.Signature, org.cqframework.cql.cql2elm.model.OperatorEntry.SignatureNode>.containsKey(operator.getSignature())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!result) { for (org.cqframework.cql.cql2elm.model.OperatorEntry.SignatureNode n : signatures.values()) { result = n.subSignatures.contains(operator); if (result) { break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/6049/buggy-version/Src.java.cql-to-elm.src.main.java.org.cqframework.cql.cql2elm.model.OperatorEntry.java", "BodyUseAPI": [], "Fixed commit": "de44b5e387bf04447d4b17703d7236c09369ac70", "Url": "https://api.github.com/repos/cqframework/clinical_quality_language", "Date": "2016-12-30T22:04:08Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.gameParts.get(i).isSpecial()) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/3439/buggy-version/src.LevelBuilder.java", "BodyUseAPI": [], "Fixed commit": "dd49b725f0905021b607a16cf448314929b75461", "Url": "https://api.github.com/repos/Whirligig231/boilermake2014", "Date": "2014-02-09T06:43:57Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.concurrent.ConcurrentHashMap<java.lang.String, org.wso2.andes.kernel.slot.Slot>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (null != slot) { java.lang.Long slotStartTime = slotTimeOutMap.get(storageQueueName); if (((slot.getMessageCount()) >= (slotWindowSize)) || (((java.lang.System.currentTimeMillis()) - slotStartTime) >= (timeOutForMessagesInQueue))) { try { slotCoordinator.updateMessageId(storageQueueName, slot.getStartMessageId(), slot.getEndMessageId()); queueToSlotMap.remove(storageQueueName); slotTimeOutMap.remove(storageQueueName); } catch (org.wso2.andes.kernel.slot.ConnectionException e) { log.error((\"Error occurred while connecting to the thrift coordinator \" + (e.getMessage())), e); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/362/buggy-version/modules.andes-core.broker.src.main.java.org.wso2.andes.kernel.slot.SlotMessageCounter.java", "BodyUseAPI": ["org.wso2.andes.kernel.slot.Slot.getEndMessageId()", "org.wso2.andes.kernel.slot.Slot.getMessageCount()", "org.wso2.andes.kernel.slot.SlotCoordinator.updateMessageId(java.lang.String,slot.getStartMessageId(),slot.getEndMessageId())", "org.wso2.andes.kernel.slot.Slot.getStartMessageId()"], "Fixed commit": "df9af2c12d1ea3e376442cc2223592c5417c67c6", "Url": "https://api.github.com/repos/a5anka/andes", "Date": "2015-08-04T06:30:00Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (maxLength == 0) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/8554/buggy-version/commons.src.main.java.com.makina.ecrins.commons.ui.widget.AlphabetSectionIndexerCursorAdapter.java", "BodyUseAPI": [], "Fixed commit": "eb0baaec3323929ff3463c676249ddc5c9fa5ab7", "Url": "https://api.github.com/repos/PnEcrins/GeoNature-mobile", "Date": "2017-06-13T18:13:38Z"},
{"Line": "=>396", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((channel != null) && (channel.isConnected())) { channel.disconnect(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/7965/buggy-version/src.main.java.com.openshift.internal.client.ApplicationSSHSession.java", "BodyUseAPI": ["com.jcraft.jsch.ChannelExec.disconnect()"], "Fixed commit": "5b15581296112b63daa6d4437ed0a2663f06064a", "Url": "https://api.github.com/repos/bparees/openshift-java-client", "Date": "2015-08-03T14:29:40Z"},
{"Line": "=>388", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((channel != null) && (channel.isConnected())) { channel.disconnect(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/7965/buggy-version/src.main.java.com.openshift.internal.client.ApplicationSSHSession.java", "BodyUseAPI": ["com.jcraft.jsch.ChannelExec.disconnect()"], "Fixed commit": "5b15581296112b63daa6d4437ed0a2663f06064a", "Url": "https://api.github.com/repos/bparees/openshift-java-client", "Date": "2015-08-03T14:29:40Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((name) != null) { if (!(name.equals(other.getName()))) { return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/7965/buggy-version/src.main.java.com.openshift.internal.client.EmbeddedCartridgeResource.java", "BodyUseAPI": [], "Fixed commit": "5b15581296112b63daa6d4437ed0a2663f06064a", "Url": "https://api.github.com/repos/bparees/openshift-java-client", "Date": "2015-08-03T14:29:40Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((listId) <= 0) { listId = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/8956/buggy-version/src.cgeo.geocaching.cgeogpxes.java", "BodyUseAPI": [], "Fixed commit": "0255d51050c2a59aa5e05cda345a5a4bbbed7a11", "Url": "https://api.github.com/repos/cgeo/cgeo", "Date": "2011-08-07T11:52:26Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getIntent().getExtras()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (extras != null) { listId = extras.getInt(\"list\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/8956/buggy-version/src.cgeo.geocaching.cgeogpxes.java", "BodyUseAPI": ["android.os.Bundle.getInt(java.lang.String)"], "Fixed commit": "0255d51050c2a59aa5e05cda345a5a4bbbed7a11", "Url": "https://api.github.com/repos/cgeo/cgeo", "Date": "2011-08-07T11:52:26Z"},
{"Line": "=>850", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mMediaPlayer) != null) { mMediaPlayer.start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/7281/buggy-version/XWalkProxy.src.org.example.xwalkembedded.XWalkExoMediaPlayer.java", "BodyUseAPI": [], "Fixed commit": "a07b0f3e0794524fc021e3f85b219cc4a3e6a8c1", "Url": "https://api.github.com/repos/fujunwei/customer_w", "Date": "2016-06-13T08:43:30Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(mEnableExoPlayer)) || (uri.getScheme().equals(\"file\"))) { startSystemMediaPlayer(); }else { startExoPlayer(uri, headers); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/7281/buggy-version/XWalkProxy.src.org.example.xwalkembedded.XWalkExoMediaPlayer.java", "BodyUseAPI": ["org.example.xwalkembedded.XWalkExoMediaPlayer.startExoPlayer(android.net.Uri,java.util.Map<java.lang.String, java.lang.String>)"], "Fixed commit": "a07b0f3e0794524fc021e3f85b219cc4a3e6a8c1", "Url": "https://api.github.com/repos/fujunwei/customer_w", "Date": "2016-06-13T08:43:30Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (metric == null) { this.metric = null; }else { this.metric = new com.uber.m3.thrift.generated.Metric(metric); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/6342/buggy-version/m3.src.main.java.com.uber.m3.tally.m3.SizedMetric.java", "BodyUseAPI": [], "Fixed commit": "c9932e5d2a7655c57f1db14a0e13bd0781d6572e", "Url": "https://api.github.com/repos/uber-java/tally", "Date": "2017-09-12T17:08:15Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.os.Build.VERSION.SDK_INT) < (android.os.Build.VERSION_CODES.LOLLIPOP)) fr.gouv.etalab.mastodon.services.StreamingFederatedTimelineService.httpsURLConnection.setSSLSocketFactory(new fr.gouv.etalab.mastodon.client.TLSSocketFactory());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/5885/buggy-version/app.src.main.java.fr.gouv.etalab.mastodon.services.StreamingFederatedTimelineService.java", "BodyUseAPI": [], "Fixed commit": "4dc40d3ee4f3f01230819d95389d95d6a4300d0e", "Url": "https://api.github.com/repos/stom79/mastalab", "Date": "2017-11-29T17:26:32Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.os.Build.VERSION.SDK_INT) < (android.os.Build.VERSION_CODES.LOLLIPOP)) fr.gouv.etalab.mastodon.services.StreamingLocalTimelineService.httpsURLConnection.setSSLSocketFactory(new fr.gouv.etalab.mastodon.client.TLSSocketFactory());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/5885/buggy-version/app.src.main.java.fr.gouv.etalab.mastodon.services.StreamingLocalTimelineService.java", "BodyUseAPI": [], "Fixed commit": "4dc40d3ee4f3f01230819d95389d95d6a4300d0e", "Url": "https://api.github.com/repos/stom79/mastalab", "Date": "2017-11-29T17:26:32Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.os.Build.VERSION.SDK_INT) < (android.os.Build.VERSION_CODES.LOLLIPOP)) fr.gouv.etalab.mastodon.services.StreamingService.httpsURLConnection.setSSLSocketFactory(new fr.gouv.etalab.mastodon.client.TLSSocketFactory());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/5885/buggy-version/app.src.main.java.fr.gouv.etalab.mastodon.services.StreamingService.java", "BodyUseAPI": [], "Fixed commit": "4dc40d3ee4f3f01230819d95389d95d6a4300d0e", "Url": "https://api.github.com/repos/stom79/mastalab", "Date": "2017-11-29T17:26:32Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.os.Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.KITKAT)) { initSlideShapeTheme(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/4431/buggy-version/app.src.main.java.org.huxizhijian.hhcomicviewer2.ui.entry.ComicDetailsActivity.java", "BodyUseAPI": [], "Fixed commit": "fb3220e131818c67336c7ad6921875c9badbcf8b", "Url": "https://api.github.com/repos/huxizhijian/HHComicViewer", "Date": "2017-04-06T14:12:31Z"},
{"Line": "=>322", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ibm.json.java.JSONObject.get(java.lang.String)", "com.ibm.json.java.JSONObject.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((streamViewability != null) || ((colocationTag != null) && (!(colocationTag.isEmpty())))) { sb.append(\" config\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/1459/buggy-version/java.src.com.ibm.streamsx.topology.generator.spl.OperatorGenerator.java", "BodyUseAPI": [], "Fixed commit": "caf48411c5f17f837c653bb3ed3b5977f267597b", "Url": "https://api.github.com/repos/wmarshall484/streamsx.topology", "Date": "2015-07-07T19:28:25Z"},
{"Line": "=>887", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.netty.buffer.ByteBuf.setBytes(int,java.nio.channels.ScatteringByteChannel,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (localReadBytes == 0) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/1213/buggy-version/buffer.src.main.java.io.netty.buffer.DefaultCompositeByteBuf.java", "BodyUseAPI": [], "Fixed commit": "501746aeff12dfa288273ae0ce594506bddd1e9a", "Url": "https://api.github.com/repos/netty/netty", "Date": "2012-08-08T08:42:58Z"},
{"Line": "=>891", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.netty.buffer.ByteBuf.setBytes(int,java.nio.channels.ScatteringByteChannel,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (localReadBytes < 0) { if (readBytes == 0) { return -1; }else { break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/1213/buggy-version/buffer.src.main.java.io.netty.buffer.DefaultCompositeByteBuf.java", "BodyUseAPI": [], "Fixed commit": "501746aeff12dfa288273ae0ce594506bddd1e9a", "Url": "https://api.github.com/repos/netty/netty", "Date": "2012-08-08T08:42:58Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pID.equals(\"rebuild-test\")) { return \"p_\" + pID; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/2079/buggy-version/IndexRebuild.src.main.java.com.xingcloud.xa.indextools.IndexRebuilder.java", "BodyUseAPI": [], "Fixed commit": "20895790d85db174fd3853f7a63a42d29fa33d56", "Url": "https://api.github.com/repos/XingCloud/HSecondaryIndex", "Date": "2013-08-22T05:09:02Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getUris()) != null) { removeAllWatchContentUris(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/512/buggy-version/src.main.java.com.mridang.battery.ImprovedExtension.java", "BodyUseAPI": [], "Fixed commit": "ace4328259e0a70538461cfa76eb9ad5b7a756b1", "Url": "https://api.github.com/repos/mridang/dashclock-battery", "Date": "2015-03-29T09:08:00Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getContentResolver().query(android.net.Uri,<nulltype>,<nulltype>,<nulltype>,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if ((cursor != null) && (cursor.moveToFirst())) { android.content.ContentValues values = edu.udacity.xyzreader.util.DbUtils.readValues(cursor); updateViews(values); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/8674/buggy-version/XYZReader.src.main.java.edu.udacity.xyzreader.ui.ArticleDetailActivity.java", "BodyUseAPI": ["edu.udacity.xyzreader.util.DbUtils.readValues(android.database.Cursor)"], "Fixed commit": "e80a84e62ec7558482a4a59f0f0073537e365ce8", "Url": "https://api.github.com/repos/shamim-ahmed/udacity-android-project5", "Date": "2016-03-20T10:57:06Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isBound) { tourService.unregister(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/2940/buggy-version/app.src.main.java.social.entourage.android.map.tour.information.TourInformationFragment.java", "BodyUseAPI": [], "Fixed commit": "78ec275ce4a8bdaa40da5cd94f43a122b3feab62", "Url": "https://api.github.com/repos/ReseauEntourage/entourage-android", "Date": "2016-03-30T12:01:36Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if ((resetPasswordToken == null) || ((resetPasswordToken.length()) < 7)) { net.whydah.admin.auth.AuthenticationService.log.warn(\"UIB returned empty reset_password_token\"); }else { passwordResetOk = sendNotification(email, cellPhone, username, userAction, resetPasswordToken); passwordResetOk = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/2865/buggy-version/src.main.java.net.whydah.admin.auth.AuthenticationService.java", "BodyUseAPI": ["net.whydah.admin.auth.AuthenticationService.sendNotification(java.lang.String,java.lang.String,java.lang.String,net.whydah.admin.createlogon.UserAction,java.lang.String)"], "Fixed commit": "040c60d6d429fcbd365799c8565392e058ede796", "Url": "https://api.github.com/repos/Cantara/Whydah-UserAdminService", "Date": "2015-12-01T15:07:40Z"},
{"Line": "=>547", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.photon.phresco.framework.actions.applications.Configurations.debugEnabled) { com.photon.phresco.framework.actions.applications.Configurations.S_LOGGER.debug(\"Entering Method Configurations.delete()\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/6234/buggy-version/phresco-framework-web.src.main.java.com.photon.phresco.framework.actions.applications.Configurations.java", "BodyUseAPI": [], "Fixed commit": "a5871cb4fa4c870547f55b1a7c6030edb030ad3d", "Url": "https://api.github.com/repos/phresco/framework", "Date": "2012-12-10T14:57:37Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dateToUse == 0) { dateToUse = new java.util.Date().getTime(); }else { this.uiMessageDateToForward = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/6094/buggy-version/app.src.main.java.xyz.encryptany.encryptany.Mediator.java", "BodyUseAPI": [], "Fixed commit": "2b12d554b3d4a42d6215f520121fe767dd7deb0b", "Url": "https://api.github.com/repos/EncryptAny/EncryptAny", "Date": "2017-04-14T15:05:12Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(dir.exists())) { if (!(dir.mkdirs())) { dgm.fixtures.ResultDocumentWriter.log.error((\"Can't create directory: {} \" + (dir.getName()))); throw new java.lang.RuntimeException((\"Can't create directory: \" + (dir.getName()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/3891/buggy-version/degraphmalizer-core.src.main.java.dgm.fixtures.ResultDocumentWriter.java", "BodyUseAPI": ["java.io.File.getName()", "java.io.File.getName()", "org.slf4j.Logger.error(java.lang.String)", "java.io.File.mkdirs()"], "Fixed commit": "9c022f71a836ae1bb576232816b96915a14124e4", "Url": "https://api.github.com/repos/vpro/degraphmalizer", "Date": "2013-04-05T14:02:04Z"},
{"Line": "=>2499", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (identifierEquals(\"COLUMN\")) { lexer.nextToken(); com.alibaba.druid.sql.ast.statement.SQLAlterTableDropColumnItem item = new com.alibaba.druid.sql.ast.statement.SQLAlterTableDropColumnItem(); item.setColumnName(this.exprParser.name()); stmt.getItems().add(item); }else if ((lexer.token()) == (com.alibaba.druid.sql.parser.Token.IDENTIFIER)) { com.alibaba.druid.sql.ast.statement.SQLAlterTableDropColumnItem item = new com.alibaba.druid.sql.ast.statement.SQLAlterTableDropColumnItem(); item.setColumnName(this.exprParser.name()); stmt.getItems().add(item); }else { super.parseAlterDrop(stmt); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/53/buggy-version/src.main.java.com.alibaba.druid.sql.dialect.mysql.parser.MySqlStatementParser.java", "BodyUseAPI": [], "Fixed commit": "16f0f0b828ae5d5762de7a09b1e25f5b83ce0baa", "Url": "https://api.github.com/repos/cquptlujianbo/druid", "Date": "2013-08-01T12:07:33Z"},
{"Line": "=>511", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((getMachineId(stack)) != (-1)) RebuildStructure(player.worldObj, this.machineList.get(getMachineId(stack)), stack, x, y, z, net.minecraftforge.common.util.ForgeDirection.getOrientation(dir));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/3884/buggy-version/src.main.java.zmaster587.libVulpes.items.ItemProjector.java", "BodyUseAPI": ["zmaster587.libVulpes.items.ItemProjector.RebuildStructure(player.worldObj,this.machineList.get(getMachineId(stack)),net.minecraft.item.ItemStack,int,int,int,net.minecraftforge.common.util.ForgeDirection.getOrientation(dir))", "zmaster587.libVulpes.items.ItemProjector.getMachineId(net.minecraft.item.ItemStack)", "java.util.ArrayList<zmaster587.libVulpes.tile.multiblock.TileMultiBlock>.get(int)"], "Fixed commit": "31d7df563c23897c33ff0c4c2b99e2add53e16e0", "Url": "https://api.github.com/repos/zmaster587/libVulpes", "Date": "2017-04-26T23:20:51Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.github.yannici.bedwars.Main.getInstance().getGameManager().getGameOfPlayer(place.getPlayer())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (game.isSpectator(place.getPlayer())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/2545/buggy-version/src.io.github.yannici.bedwars.Shop.Specials.ProtectionWallListener.java", "BodyUseAPI": [], "Fixed commit": "a3654b137616c5b7bb97516f0bce8eef49c9d2b4", "Url": "https://api.github.com/repos/BedwarsRel/BedwarsRel", "Date": "2015-05-26T20:37:09Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.github.yannici.bedwars.Main.getInstance().getGameManager().getGameOfPlayer(interact.getPlayer())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (game.isSpectator(interact.getPlayer())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/2545/buggy-version/src.io.github.yannici.bedwars.Shop.Specials.ProtectionWallListener.java", "BodyUseAPI": [], "Fixed commit": "a3654b137616c5b7bb97516f0bce8eef49c9d2b4", "Url": "https://api.github.com/repos/BedwarsRel/BedwarsRel", "Date": "2015-05-26T20:37:09Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.constellation.engine.register.repository.DomainRepository.findDefaultByUserId(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (defaultDomain == null) { return javax.ws.rs.core.Response.status(Status.FORBIDDEN).build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/1232/buggy-version/modules.cstl-services.src.main.java.org.constellation.rest.api.UserResource.java", "BodyUseAPI": [], "Fixed commit": "bc7306c8cb77f9a6686472316e0094d714ddb771", "Url": "https://api.github.com/repos/Geomatys/constellation", "Date": "2014-11-07T14:06:40Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(showMoviesBy.equals(getString(R.string.pref_sort_by_favorites)))) { fetchMovies(1, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/2335/buggy-version/app.src.main.java.com.moviesapp.amrelmasry.popular_movies_app.MainActivityFragment.java", "BodyUseAPI": [], "Fixed commit": "35a8bba659aeef8f46d2a742e5ed9ac019dc7487", "Url": "https://api.github.com/repos/AmrElmasry/Popular-Movies-app", "Date": "2015-10-04T01:57:12Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (meta != null) meta.removeAll(java.util.Collections.singleton(null));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/1692/buggy-version/deeplearning4j-core.src.main.java.org.deeplearning4j.datasets.datavec.RecordReaderDataSetIterator.java", "BodyUseAPI": ["java.util.List<org.datavec.api.records.metadata.RecordMetaData>.removeAll(java.util.Set<java.lang.Object>)"], "Fixed commit": "630307de32a583a64deb826e085e69133100e444", "Url": "https://api.github.com/repos/deeplearning4j/deeplearning4j", "Date": "2017-04-16T00:46:35Z"},
{"Line": "=>1000", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((errorManager) == null) { return new com.google.javascript.jscomp.JSError[]{ }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/3780/buggy-version/src.com.google.javascript.jscomp.Compiler.java", "BodyUseAPI": [], "Fixed commit": "61cc7c67227b6609b7a12febe4a2c51eafdec02f", "Url": "https://api.github.com/repos/ChadKillingsworth/closure-compiler", "Date": "2014-12-22T18:28:01Z"},
{"Line": "=>1010", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((errorManager) == null) { return new com.google.javascript.jscomp.JSError[]{ }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/3780/buggy-version/src.com.google.javascript.jscomp.Compiler.java", "BodyUseAPI": [], "Fixed commit": "61cc7c67227b6609b7a12febe4a2c51eafdec02f", "Url": "https://api.github.com/repos/ChadKillingsworth/closure-compiler", "Date": "2014-12-22T18:28:01Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (s.toUpperCase().contains(\"FAILED\")) { android.widget.Toast.makeText(getApplicationContext(), ((\"Server Internal Error. (\" + s) + \")\"), Toast.LENGTH_LONG).show(); }else { android.widget.Toast.makeText(getApplicationContext(), \"Message Sent Successfully...\", Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/3228/buggy-version/app.src.main.java.com.pro.ownerapp.view.MessageActivity.java", "BodyUseAPI": ["android.widget.Toast.makeText(getApplicationContext(), ((\"Server Internal Error. (\" + s) + \")\"), Toast.LENGTH_LONG).show()", "android.widget.Toast.makeText(getApplicationContext(),java.lang.String,Toast.LENGTH_LONG)"], "Fixed commit": "a471ebf15c8413b1c5e64ce0fe5d3c47a8749949", "Url": "https://api.github.com/repos/rahulrainaaa/RestaurantOwnerApp", "Date": "2016-06-06T17:27:43Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((e < 0) || (l < 0)) return \"Pivot index must be positive.\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/7873/buggy-version/src.controller.CLI.java", "BodyUseAPI": [], "Fixed commit": "31324e5ea6cffcd9160f4698f05356940965a975", "Url": "https://api.github.com/repos/haitech/pplex", "Date": "2012-10-11T09:57:18Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.equals(Data.showDual)", "lps.get(((p) - 1)).getNoNonBasic()", "lps.get(((p) - 1)).getNoBasic()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (dual && ((e >= lSize) || (l >= eSize))) return \"Invalid dual index\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/7873/buggy-version/src.controller.CLI.java", "BodyUseAPI": [], "Fixed commit": "31324e5ea6cffcd9160f4698f05356940965a975", "Url": "https://api.github.com/repos/haitech/pplex", "Date": "2012-10-11T09:57:18Z"}]}
