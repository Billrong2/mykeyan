{"UNKNOWN to If":[{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.children) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/7780/buggy-version/project2.Trie.java", "BodyUseAPI": [], "Fixed commit": "30989d6630d0be0ea001b0ecc489e6357adcabcf", "Url": "https://api.github.com/repos/craig8196/cs453", "Date": "2015-02-25T21:02:14Z"},
{"Line": "=>650", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (property.startsWith(StringPool.PERIOD)) { property = property.substring(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/202/buggy-version/properties-upgrade-locator.src.com.liferay.upgrade.properties.locator.PropertiesLocator.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "95e869e6d95c5e513f19f1a452ae2feb38f1fd7e", "Url": "https://api.github.com/repos/achaparro/projects", "Date": "2017-04-17T19:22:20Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pinger.Pinger.DEBUG) java.lang.System.out.println(\"Flushing buffer to database\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/8935/buggy-version/pinger.src.pinger.Pinger.java", "BodyUseAPI": [], "Fixed commit": "22eee359b095a3b7b81db6bc32c9ec6ba3865c38", "Url": "https://api.github.com/repos/hubacekjirka/netMonitor", "Date": "2017-10-29T00:03:14Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pinger.Pinger.DEBUG) java.lang.System.out.println(\"Flushing buffer to file\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/8935/buggy-version/pinger.src.pinger.Pinger.java", "BodyUseAPI": [], "Fixed commit": "22eee359b095a3b7b81db6bc32c9ec6ba3865c38", "Url": "https://api.github.com/repos/hubacekjirka/netMonitor", "Date": "2017-10-29T00:03:14Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(wizard instanceof org.molgenis.omx.importer.ImportWizard)) { throw new java.lang.RuntimeException(((((\"Wizard must be of type '\" + (org.molgenis.omx.importer.ImportWizard.class.getSimpleName())) + \"' instead of '\") + (wizard.getClass().getSimpleName())) + \"'\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/3052/buggy-version/molgenis-omx-importer.src.main.java.org.molgenis.omx.importer.ValidationResultWizardPage.java", "BodyUseAPI": ["wizard.getClass().getSimpleName()", "org.molgenis.ui.wizard.Wizard.getClass()"], "Fixed commit": "34451820bf25fcb9a6b1a57ba59490306c1f1b2a", "Url": "https://api.github.com/repos/bartcharbon/molgenis", "Date": "2013-11-01T06:59:15Z"},
{"Line": "=>453", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (buttonCode != (GameContext.POV_CENTER)) { if ((((sTmp.getKey_left()) < 0) && ((sTmp.getKey_jump()) != buttonCode)) && ((sTmp.getKey_left()) != buttonCode)) sTmp.setKey_left(buttonCode); else if (((((sTmp.getKey_right()) < 0) && ((sTmp.getKey_left()) != buttonCode)) && ((sTmp.getKey_jump()) != buttonCode)) && ((sTmp.getKey_right()) != buttonCode)) sTmp.setKey_right(buttonCode); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/6669/buggy-version/core.src.de.johannesbade.kletterhoelle.KletterHoelle.java", "BodyUseAPI": ["de.johannesbade.kletterhoelle.Stickman.setKey_right(int)", "de.johannesbade.kletterhoelle.Stickman.setKey_left(int)"], "Fixed commit": "d2978cfb022312e2bc494c6027877d45bcd89532", "Url": "https://api.github.com/repos/derhannesb/Kletterhoelle", "Date": "2015-01-15T22:08:22Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (autoCreate) { pres = nl.esciencecenter.ptk.presentation.Presentation.createDefault(); nl.esciencecenter.ptk.presentation.Presentation.presentationStore.put(key, pres); return pres; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/8893/buggy-version/source.nl.esciencecenter.ptk.src.nl.esciencecenter.ptk.presentation.Presentation.java", "BodyUseAPI": [], "Fixed commit": "28f1ec7cc2197a25c0f4c46100d2f666b9aa66cc", "Url": "https://api.github.com/repos/NLeSC/vbrowser", "Date": "2013-09-20T11:46:01Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (obj == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/4643/buggy-version/src.main.scala.edu.berkeley.dj.internal.ArrayHelpers.java", "BodyUseAPI": [], "Fixed commit": "09abd88467e68fb58e150e8a826d49e81cefbd23", "Url": "https://api.github.com/repos/matthewfl/dj", "Date": "2015-09-23T01:31:20Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (arr == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/4643/buggy-version/src.main.scala.edu.berkeley.dj.internal.ArrayHelpers.java", "BodyUseAPI": [], "Fixed commit": "09abd88467e68fb58e150e8a826d49e81cefbd23", "Url": "https://api.github.com/repos/matthewfl/dj", "Date": "2015-09-23T01:31:20Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.imageio.ImageIO.read(java.io.ByteArrayInputStream)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (img != null) { img = imageManager.resizeImage(img, imageManager.scaleToFit(img, Mod.MAX_IMAGE_SIZE)); mod.setImage(img); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/4425/buggy-version/src.io.andrewohara.tinkertime.controllers.workflows.tasks.DownloadModImageTask.java", "BodyUseAPI": ["io.andrewohara.common.content.ImageManager.scaleToFit(java.awt.image.BufferedImage,Mod.MAX_IMAGE_SIZE)", "io.andrewohara.common.content.ImageManager.resizeImage(java.awt.image.BufferedImage,imageManager.scaleToFit(img, Mod.MAX_IMAGE_SIZE))"], "Fixed commit": "e2dd620d99bb17716943a100d7f6805a6719ec17", "Url": "https://api.github.com/repos/oharaandrew314/TinkerTime", "Date": "2015-07-26T03:09:27Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (displayArea.getText().isEmpty()) displayArea.setText(((java.lang.String) (resources.get(\"logFileEmpty\"))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/9128/buggy-version/src.main.java.info.bonjean.beluga.gui.pivot.LogsUI.java", "BodyUseAPI": ["org.apache.pivot.wtk.TextArea.setText(((java.lang.String) (resources.get(\"logFileEmpty\"))))"], "Fixed commit": "50951c8ca7ca846c3123d7ade8a3ff8d7f6e6466", "Url": "https://api.github.com/repos/jbonjean/beluga-player", "Date": "2014-05-26T04:16:54Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (result.contains(\"duration\")) { duration = result.getInteger(\"duration\"); changeRequested = changeRequested; }else { duration = -1; if ((smbValue) > 0.0) changeRequested = true; else changeRequested = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/7154/buggy-version/app.src.main.java.info.nightscout.androidaps.plugins.OpenAPSSMB.DetermineBasalResultSMB.java", "BodyUseAPI": [], "Fixed commit": "b0e3482b059e1989e97ffe73fae223ab29f16f22", "Url": "https://api.github.com/repos/PoweRGbg/AndroidAPS", "Date": "2017-05-30T09:57:11Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((smbValue) > 0.0) changeRequested = true; else changeRequested = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/7154/buggy-version/app.src.main.java.info.nightscout.androidaps.plugins.OpenAPSSMB.DetermineBasalResultSMB.java", "BodyUseAPI": [], "Fixed commit": "b0e3482b059e1989e97ffe73fae223ab29f16f22", "Url": "https://api.github.com/repos/PoweRGbg/AndroidAPS", "Date": "2017-05-30T09:57:11Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<ch.qos.logback.classic.spi.ILoggingEvent>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (event.getLevel().isGreaterOrEqual(level)) appender.doAppend(event);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/3692/buggy-version/src.main.java.org.lib4j.logging.DeferredLogger.java", "BodyUseAPI": ["ch.qos.logback.core.Appender<ch.qos.logback.classic.spi.ILoggingEvent>.doAppend(ch.qos.logback.classic.spi.ILoggingEvent)"], "Fixed commit": "e0f0e61fd49ba478aadd4cd3c736787ddbcdcd74", "Url": "https://api.github.com/repos/lib4j/lib4j-logging", "Date": "2017-12-07T00:59:40Z"},
{"Line": "=>305", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.oculusinfo.binning.TileData<T>.getDefaultValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (null == defaultValue) { tileRecord.put(\"default\", null); }else { org.apache.avro.generic.GenericRecord defaultValueRecord = new org.apache.avro.generic.GenericData.Record(recordSchema); setValue(defaultValueRecord, tile.getDefaultValue()); tileRecord.put(\"default\", defaultValueRecord); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/8970/buggy-version/binning-utilities.src.main.java.com.oculusinfo.binning.io.serialization.GenericAvroSerializer.java", "BodyUseAPI": [], "Fixed commit": "e2b12963f6fb905972b1440b5449a6733699c36c", "Url": "https://api.github.com/repos/unchartedsoftware/aperture-tiles", "Date": "2015-06-30T18:51:16Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (resetAssignments) { for (softsat.objects.Variable var : activeVars) { var.randomFlip(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/3120/buggy-version/src.softsat.sat.SampleSat.java", "BodyUseAPI": [], "Fixed commit": "4bca274799f859a80477e52d95f62eeaa1f7c103", "Url": "https://api.github.com/repos/ajratner/softsat", "Date": "2015-06-04T07:38:49Z"},
{"Line": "=>328", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(worldObj.isRemote)) { if ((FlansMod.weaponDrops) == 2) { co.uk.flansmods.common.teams.EntityGunItem gunEntity = new co.uk.flansmods.common.teams.EntityGunItem(worldObj, posX, posY, posZ, new net.minecraft.item.ItemStack(type.getItem()), java.util.Arrays.asList(new net.minecraft.item.ItemStack[]{ ammo })); worldObj.spawnEntityInWorld(gunEntity); }else if ((FlansMod.weaponDrops) == 1) { dropItem(type.getItem().itemID, 1); if ((ammo) != null) entityDropItem(ammo, 0.5F); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/7304/buggy-version/src.minecraft.co.uk.flansmods.common.EntityMG.java", "BodyUseAPI": [], "Fixed commit": "1d2ffc6272005455fdde9f81ba26f2d5f5fdb795", "Url": "https://api.github.com/repos/FlansMods/FlansMod", "Date": "2013-07-01T10:52:52Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.java_websocket.client.WebSocketClient.getConnection()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (tempConnection != null) { android.util.Log.i(com.xuPATHn.xximdemo.core.XXConnection.class.getSimpleName(), ((tempConnection.getReadyState()) + \"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/2690/buggy-version/MyApplication.app.src.main.java.com.xuPATHn.xximdemo.core.XXConnection.java", "BodyUseAPI": ["org.java_websocket.WebSocket.getReadyState()", "android.util.Log.i(java.lang.String,((tempConnection.getReadyState()) + \"\"))"], "Fixed commit": "af5514cd6bfbc0f53e47427c824f0d8d1521c70c", "Url": "https://api.github.com/repos/foreverxiongtao/XXIMDEMO", "Date": "2016-08-08T03:50:27Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (paths == null) { mViewPager.getAdapter().notifyDataSetChanged(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/2581/buggy-version/PhotoPicker.src.main.java.me.iwf.photopicker.fragment.ImagePagerFragment.java", "BodyUseAPI": [], "Fixed commit": "c594d907712d09a44413fec7661717c7bff7e1bd", "Url": "https://api.github.com/repos/kiwikanji/PhotoPicker", "Date": "2016-05-31T01:35:54Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.lookdowndown.jcf.MArrayList<E>.indexOf(E)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (index >= 0) { remove(index); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/6231/buggy-version/src.main.java.com.lookdowndown.jcf.MArrayList.java", "BodyUseAPI": ["com.lookdowndown.jcf.MArrayList<E>.remove(int)"], "Fixed commit": "12023b490b432842fcf686b9977a19594c31e9a6", "Url": "https://api.github.com/repos/lookdowndown/JCFInternals", "Date": "2017-09-27T06:38:48Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.bmat.digitalcharts.admin.dao.TrackDao.search(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((track.getIsrc()) != null) { buffer.append(\"t.isrc = :isrc \"); }else { buffer.append(\"t.isrc IS NULL \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/3607/buggy-version/src.main.java.com.bmat.digitalcharts.admin.dao.TrackDao.java", "BodyUseAPI": [], "Fixed commit": "14e65d83c6bf05e825de16a63acc21da1540bd6a", "Url": "https://api.github.com/repos/natlehmann/marce-ming-charts", "Date": "2016-03-28T21:20:48Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.bmat.digitalcharts.admin.dao.TrackDao.search(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((track.getIsrc()) != null) { query.setParameter(\"isrc\", track.getIsrc()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/3607/buggy-version/src.main.java.com.bmat.digitalcharts.admin.dao.TrackDao.java", "BodyUseAPI": ["org.hibernate.Query.setParameter(java.lang.String,track.getIsrc())", "com.bmat.digitalcharts.admin.model.Track.getIsrc()"], "Fixed commit": "14e65d83c6bf05e825de16a63acc21da1540bd6a", "Url": "https://api.github.com/repos/natlehmann/marce-ming-charts", "Date": "2016-03-28T21:20:48Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (intent != null) { android.net.Uri uri = intent.getParcelableExtra(RingtoneManager.EXTRA_RINGTONE_PICKED_URI); if ((resultCode == (android.app.Activity.RESULT_OK)) && (requestCode == 5)) { ringVib.getRing().setRingtone(uri); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/2830/buggy-version/app.src.main.java.com.example.zhz256.ringtone.MainActivity.java", "BodyUseAPI": ["android.content.Intent.getParcelableExtra(RingtoneManager.EXTRA_RINGTONE_PICKED_URI)"], "Fixed commit": "e815a529ad929b5f8508ad2928a85bd145d90d1b", "Url": "https://api.github.com/repos/zzljosh/Ringtone", "Date": "2016-06-01T03:32:02Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.gris.ege.pager.TouchViewPager.getAdapter()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (aAdapter != null) { aPage = aAdapter.getFragment(mCurrentPage); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/666/buggy-version/src.com.gris.ege.pager.TouchViewPager.java", "BodyUseAPI": ["com.gris.ege.pager.TasksPageAdapter.getFragment(int)"], "Fixed commit": "b9201c155c9363aa0176dab0046a452b3c8a4e93", "Url": "https://api.github.com/repos/Gris87/EGE", "Date": "2013-01-28T13:42:19Z"},
{"Line": "=>467", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isSearchOpen) closeSearch();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/3641/buggy-version/src.main.java.org.amahi.anywhere.fragment.ServerFilesFragment.java", "BodyUseAPI": [], "Fixed commit": "bfadd3962019754cf64d747b8a5de20dd66a9f52", "Url": "https://api.github.com/repos/octacode/android", "Date": "2017-03-08T16:43:28Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.livejournal.karino2.whiteboardcast.FloatingOverlay.pickerYPos()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!(pickerShowAbove)) && ((ypos + ((picker.height()) / 2)) > (height))) pickerShowAbove = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/1153/buggy-version/WhiteBoardCast.src.main.java.com.livejournal.karino2.whiteboardcast.FloatingOverlay.java", "BodyUseAPI": [], "Fixed commit": "516a208e552203b5663f5460b00bf7eeb9541582", "Url": "https://api.github.com/repos/karino2/WhiteBoardCast", "Date": "2014-04-03T04:20:27Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["sav.strategies.vm.SimpleDebugger.run(sav.strategies.vm.VMConfiguration)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (vm != null) { vm = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/6251/buggy-version/app.icsetlv.src.main.java.icsetlv.variable.BreakpointDebugger.java", "BodyUseAPI": [], "Fixed commit": "01471176b508de2f7d3634f2890b7d6a56e2fe97", "Url": "https://api.github.com/repos/sunjun-group/Ziyuan", "Date": "2016-12-31T15:12:41Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sql.contains(\" INFORMATION_SCHEMA.PROFILING \")) && (sql.contains(\"CONCAT(ROUND(SUM(DURATION)/*100,3)\"))) { io.mycat.server.response.InformationSchemaProfiling.response(this); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/7334/buggy-version/src.main.java.io.mycat.server.ServerConnection.java", "BodyUseAPI": [], "Fixed commit": "090675ab513f5251b670f5ecd038e24e32400af5", "Url": "https://api.github.com/repos/zhuam/Mycat-Server", "Date": "2016-08-02T13:33:33Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i instanceof net.fe.unit.RiseTome) { net.fe.unit.RiseTome rise = ((net.fe.unit.RiseTome) (i)); chu.engine.anim.Renderer.drawString(\"default_med\", \"Summons a phantom warrior\", ((net.fe.builderStage.UnitBuilderStage.INFO_X) + 8), ((net.fe.builderStage.UnitBuilderStage.INFO_Y) + 28), 1); }else if (i instanceof net.fe.unit.Weapon) { net.fe.unit.Weapon wep = ((net.fe.unit.Weapon) (i)); chu.engine.anim.Renderer.drawString(\"default_med\", (\"Mt \" + (wep.mt)), ((net.fe.builderStage.UnitBuilderStage.INFO_X) + 8), ((net.fe.builderStage.UnitBuilderStage.INFO_Y) + 20), 1); chu.engine.anim.Renderer.drawString(\"default_med\", (\"Hit \" + (wep.hit)), ((net.fe.builderStage.UnitBuilderStage.INFO_X) + 68), ((net.fe.builderStage.UnitBuilderStage.INFO_Y) + 20), 1); chu.engine.anim.Renderer.drawString(\"default_med\", (\"Crit \" + (wep.crit)), ((net.fe.builderStage.UnitBuilderStage.INFO_X) + 128), ((net.fe.builderStage.UnitBuilderStage.INFO_Y) + 20), 1); int rngmin = 255; int rngmax = 0; for (int rng : wep.range) { if (rng < rngmin) rngmin = rng; if (rng > rngmax) rngmax = rng; } if (rngmin == rngmax) { chu.engine.anim.Renderer.drawString(\"default_med\", (\"Rng \" + rngmin), ((net.fe.builderStage.UnitBuilderStage.INFO_X) + 188), ((net.fe.builderStage.UnitBuilderStage.INFO_Y) + 20), 1); }else { chu.engine.anim.Renderer.drawString(\"default_med\", (((\"Rng \" + rngmin) + \"-\") + rngmax), ((net.fe.builderStage.UnitBuilderStage.INFO_X) + 188), ((net.fe.builderStage.UnitBuilderStage.INFO_Y) + 20), 1); } java.util.ArrayList<java.lang.String> flavor = new java.util.ArrayList<java.lang.String>(); if (wep.name.contains(\"Brave\")) { flavor.add(\"Allows double attacks\"); } if (wep.name.contains(\"reaver\")) { flavor.add(\"Reverses the weapon triangle\"); } if ((wep.name.contains(\"Kill\")) || (wep.name.equals(\"Wo Dao\"))) { flavor.add(\"Has a high critical rate\"); } if ((wep.getCost()) == 10000) { flavor.add(\"A legendary weapon\"); } if ((wep.getCost()) == 15000) { flavor.add(\"Ultimate magic\"); } if ((wep.pref) != null) flavor.add(((wep.pref) + \" only\")); for (java.lang.String stat : wep.modifiers.keySet()) { if ((wep.modifiers.get(stat)) != 0) { flavor.add(((stat + \"+\") + (wep.modifiers.get(stat)))); } } if ((wep.effective.size()) != 0) { java.util.ArrayList<java.lang.String> eff = new java.util.ArrayList<java.lang.String>(); if (wep.effective.contains(\"General\")) { eff.add(\"armored\"); } if (wep.effective.contains(\"Valkyrie\")) { eff.add(\"mounted\"); } if ((wep.effective.contains(\"Falconknight\")) && (!(wep.effective.contains(\"Valkyrie\")))) { eff.add(\"flying\"); } java.lang.String effText = \"\"; for (java.lang.String s : eff) { effText += \", \" + s; } if ((effText.length()) != 0) flavor.add(((\"Effective against \" + (effText.substring(2))) + \" units\")); } if ((flavor.size()) != 0) { java.lang.String flavorText = \"\"; for (java.lang.String s : flavor) { flavorText += s + \". \"; } chu.engine.anim.Renderer.drawString(\"default_med\", flavorText, ((net.fe.builderStage.UnitBuilderStage.INFO_X) + 8), ((net.fe.builderStage.UnitBuilderStage.INFO_Y) + 36), 1); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/4132/buggy-version/src.net.fe.builderStage.UnitBuilderStage.java", "BodyUseAPI": [], "Fixed commit": "45742e47555b32e30f18d0214fba0192c166a9e5", "Url": "https://api.github.com/repos/eliatlarge/FEMultiPlayer-V2", "Date": "2016-02-04T03:53:36Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jp.co.flect.heroku.platformapi.model.AbstractModel.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (o instanceof java.lang.Integer) { return ((java.lang.Integer) (o)).intValue(); }else if (o instanceof java.lang.Number) { int n = ((java.lang.Number) (o)).intValue(); set(name, n); return n; }else if (o instanceof java.lang.String) { try { int n = java.lang.Integer.parseInt(((java.lang.String) (o))); set(name, n); return n; } catch (java.lang.NumberFormatException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/6996/buggy-version/src.main.java.jp.co.flect.heroku.platformapi.model.AbstractModel.java", "BodyUseAPI": [], "Fixed commit": "dd40975078ed68e8e136fed571aacf77a2cc2223", "Url": "https://api.github.com/repos/shunjikonishi/heroku-platform-api", "Date": "2013-09-11T10:30:01Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jp.co.flect.heroku.platformapi.model.AbstractModel.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (o instanceof java.lang.Long) { return ((java.lang.Long) (o)).longValue(); }else if (o instanceof java.lang.Number) { long n = ((java.lang.Number) (o)).longValue(); set(name, n); return n; }else if (o instanceof java.lang.String) { try { long n = java.lang.Long.parseLong(((java.lang.String) (o))); set(name, n); return n; } catch (java.lang.NumberFormatException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/6996/buggy-version/src.main.java.jp.co.flect.heroku.platformapi.model.AbstractModel.java", "BodyUseAPI": [], "Fixed commit": "dd40975078ed68e8e136fed571aacf77a2cc2223", "Url": "https://api.github.com/repos/shunjikonishi/heroku-platform-api", "Date": "2013-09-11T10:30:01Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (defaultValue == null) { defaultValueAsString = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/223/buggy-version/src.main.java.org.talend.geat.InputsUtils.java", "BodyUseAPI": [], "Fixed commit": "7688466dcdf2e2de6d5e49a98950eae4436f8c52", "Url": "https://api.github.com/repos/smallet/GEAT", "Date": "2014-05-28T10:46:20Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Uded.settings.interval) < 180) { intervalString = (Uded.settings.interval) + \" seconds\"; }else { if (((Uded.settings.interval) / 60) < 180) { intervalString = ((Uded.settings.interval) / 60) + \" minutes\"; }else { intervalString = ((Uded.settings.interval) / 3600) + \" hours\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/8314/buggy-version/src.Uded.java", "BodyUseAPI": [], "Fixed commit": "c3df24954c129db4f627720110077d9a669061c0", "Url": "https://api.github.com/repos/fi-content2-games-platform/FIcontent.Gaming.Enabler.UnusualDatabaseEventDetection", "Date": "2015-07-17T08:17:37Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(Uded.dbProblem)) v = Uded.db.getValue(rule.mysqlQuery);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/8314/buggy-version/src.Uded.java", "BodyUseAPI": [], "Fixed commit": "c3df24954c129db4f627720110077d9a669061c0", "Url": "https://api.github.com/repos/fi-content2-games-platform/FIcontent.Gaming.Enabler.UnusualDatabaseEventDetection", "Date": "2015-07-17T08:17:37Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((a instanceof java.lang.Long) || (b instanceof java.lang.Long)) return new java.lang.Long(((a.longValue()) + (b.longValue())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/1999/buggy-version/src.main.java.de.gzockoll.quantity.AbstractQuantity.java", "BodyUseAPI": ["java.lang.Number.longValue()", "java.lang.Number.longValue()"], "Fixed commit": "560172443a17a18ca4fba59df557c20eeb262a1c", "Url": "https://api.github.com/repos/MehrCurry/Quantity", "Date": "2011-11-19T08:11:42Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (maxThread < 9) { maxThread = 9; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/8133/buggy-version/Platforms.Java.src.main.java.org.iotlabs.webserver.SparkInit.java", "BodyUseAPI": [], "Fixed commit": "60d08cb9f21660a0415cad5ab3962cca1cfcb95c", "Url": "https://api.github.com/repos/iot-labs/communication", "Date": "2016-10-03T07:11:50Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isBlank(symbols)) return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/1933/buggy-version/src.main.java.de.mle.turing.Tape.java", "BodyUseAPI": [], "Fixed commit": "a5dfb75769574b0d68b8b103100b56de613c57d6", "Url": "https://api.github.com/repos/mle-enso/turing-machine", "Date": "2017-08-23T13:57:31Z"},
{"Line": "=>686", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) < 22) { return context.getResources().getDrawable(resID); }else { return context.getResources().getDrawable(resID, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/7139/buggy-version/learnforandroid.learnforandroid.Learn.src.com.jmg.lib.lib.java", "BodyUseAPI": [], "Fixed commit": "cf5781411dbfefd40ef73819ea5765f35c80a345", "Url": "https://api.github.com/repos/jhmgbl/learnforandroid2", "Date": "2015-05-15T19:47:44Z"},
{"Line": "=>670", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getSelectedItems().size()) > 1) { com.stealth.utils.Utils.runOnMain(new java.lang.Runnable() { @java.lang.Override public void run() { actionMode.finish(); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/998/buggy-version/AndroidStealth.src.main.java.content.ContentFragment.java", "BodyUseAPI": [], "Fixed commit": "56c1a09e1e5d63e859d2d76162e41199d0bb5396", "Url": "https://api.github.com/repos/AlexKolpa/AndroidStealth", "Date": "2014-04-12T22:30:19Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(express.dao.AdminDAO.defaultAdmins.isEmpty())) { this.datastore.save(express.dao.AdminDAO.defaultAdmins.values()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/4162/buggy-version/src.main.java.express.dao.AdminDAO.java", "BodyUseAPI": ["this.datastore.save(express.dao.AdminDAO.defaultAdmins.values())", "java.util.Map<java.lang.String, express.entity.Admin>.values()"], "Fixed commit": "81851f35b4e1b63a6351b1ea11064b8610c9aa9d", "Url": "https://api.github.com/repos/476678244/express", "Date": "2015-11-06T07:56:16Z"},
{"Line": "=>390", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Stack<java.lang.String>.peek()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (current_dir.equals(\"\")) { actionBar.setTitle(getString(R.string.default_display_name_for_root_folder)); }else { actionBar.setTitle(current_dir); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/6600/buggy-version/src.com.owncloud.android.ui.activity.Uploader.java", "BodyUseAPI": ["android.support.v7.app.ActionBar.setTitle(java.lang.String)"], "Fixed commit": "b0091e503798f0343dbe0858b537630429ea07ca", "Url": "https://api.github.com/repos/owncloud/android", "Date": "2016-03-23T15:17:14Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args.length) == 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/7726/buggy-version/jankenpon.src.main.java.com.github.com.ricardobaumann.jankenpon.Application.java", "BodyUseAPI": [], "Fixed commit": "fbc1a8b0af354c159c9c53d607443c793daff968", "Url": "https://api.github.com/repos/ricardobaumann/code_challenges", "Date": "2016-07-27T16:35:09Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jboss.aerogear.unifiedpush.service.Configuration.getProperty(Configuration.PROP_ENABLE_VERIFICATION,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (shouldVerifiy) entity.setEnabled(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/3922/buggy-version/service.src.main.java.org.jboss.aerogear.unifiedpush.service.impl.ClientInstallationServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "768d42e2384ac61861d6555e62f426abd9baf46b", "Url": "https://api.github.com/repos/C-B4/unifiedpush-server", "Date": "2016-03-13T05:40:40Z"},
{"Line": "=>524", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (totGuard == null) totGuard = ba.True();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/6571/buggy-version/SVPAlib.src.automata.sfa.SFA.java", "BodyUseAPI": [], "Fixed commit": "1a2289cdde40c34377c032db91de8aaac28f8ac9", "Url": "https://api.github.com/repos/lorisdanto/symbolicautomata", "Date": "2015-08-17T02:16:49Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (finalStates.isEmpty()) return automata.sfa.SFA.getEmptySFA(ba);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/6571/buggy-version/SVPAlib.src.automata.sfa.SFA.java", "BodyUseAPI": [], "Fixed commit": "1a2289cdde40c34377c032db91de8aaac28f8ac9", "Url": "https://api.github.com/repos/lorisdanto/symbolicautomata", "Date": "2015-08-17T02:16:49Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (aut.finalStates.isEmpty()) return automata.sfa.SFA.getEmptySFA(ba);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/6571/buggy-version/SVPAlib.src.automata.sfa.SFA.java", "BodyUseAPI": [], "Fixed commit": "1a2289cdde40c34377c032db91de8aaac28f8ac9", "Url": "https://api.github.com/repos/lorisdanto/symbolicautomata", "Date": "2015-08-17T02:16:49Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((t.mStatus) != (ca.polymtl.inf4410.tp2.repartiteur.Task.TaskStatus.DONE)) { for (ca.polymtl.inf4410.tp2.repartiteur.CalculateurThread ct : mCalculateurThreads) { if ((!(ct.isAlive())) && (!(t.mUnfitThreads.contains(ct)))) { ct.launchTask(t); ct.run(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/7285/buggy-version/src.ca.polymtl.inf4410.tp2.repartiteur.Repartiteur.java", "BodyUseAPI": ["t.mUnfitThreads.contains(ca.polymtl.inf4410.tp2.repartiteur.CalculateurThread)", "ca.polymtl.inf4410.tp2.repartiteur.CalculateurThread.launchTask(ca.polymtl.inf4410.tp2.repartiteur.Task)"], "Fixed commit": "82ecf0bedced0ff2ec53f5b3f7891c491d55fbc7", "Url": "https://api.github.com/repos/maperr/inf4410_tp2", "Date": "2016-04-03T13:59:59Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) <= (Build.VERSION_CODES.LOLLIPOP)) { mTimePicker.setCurrentHour(hour); mTimePicker.setCurrentMinute(minutes); }else { mTimePicker.setHour(hour); mTimePicker.setMinute(minutes); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/6189/buggy-version/app.src.main.java.com.makasart.criminalintent.TimePickerFragment.java", "BodyUseAPI": [], "Fixed commit": "762e66ba2145fbfcb54dd62892268f40f96e5489", "Url": "https://api.github.com/repos/MolarMak/CriminalIntent", "Date": "2016-10-29T11:07:14Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["f1.getBody().getUserData()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((obj1.getDescription()) == \"PACMAN\") { objectsPackage.Pacman pac = identifyPacman(obj1); if ((pac.getLives()) > 0) { pac.decrementLives(); } }else if ((obj2.getDescription()) == \"PACMAN\") { objectsPackage.Pacman pac = identifyPacman(obj2); if ((pac.getLives()) > 0) { pac.decrementLives(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/6976/buggy-version/src.main.java.mainPackage.CollisionContactListener.java", "BodyUseAPI": ["mainPackage.CollisionContactListener.identifyPacman(objectsPackage.UniqueObject)"], "Fixed commit": "957e061937248e1d43aec332cd9b046e3dfc2fdf", "Url": "https://api.github.com/repos/LGott/Pacman", "Date": "2016-05-27T00:29:12Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Data.words.size()) != 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/3956/buggy-version/app.src.main.java.com.abc612008.memorize.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "bf7851dcc9528009e554757c48c74bc140fdb06d", "Url": "https://api.github.com/repos/harrynull/Memorize", "Date": "2016-08-22T00:33:04Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.cocoa4android.ui.UIWindow.rootViewController()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (viewController != null) { boolean handled = viewController.onBackPressed(); if (!handled) { java.lang.System.exit(0); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/2129/buggy-version/Cocoa4Android.src.org.cocoa4android.ui.UIAppDelegate.java", "BodyUseAPI": ["org.cocoa4android.ui.UIViewController.onBackPressed()"], "Fixed commit": "857a6da616fc59b39a8817936901c8680353ec81", "Url": "https://api.github.com/repos/youmumzgit/Cocoa4Android", "Date": "2013-01-27T10:02:32Z"},
{"Line": "=>371", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((bit < 1) || (bit > 24)) { jmri.jmrix.grapevine.SerialAddress.log.error((((\"invalid bit number \" + bit) + \" in \") + systemName)); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/8900/buggy-version/java.src.jmri.jmrix.grapevine.SerialAddress.java", "BodyUseAPI": ["org.slf4j.Logger.error(java.lang.String)"], "Fixed commit": "7744fd4206ab894d24cc8ee2949c6e7c4eacde23", "Url": "https://api.github.com/repos/pabender/JMRI", "Date": "2016-03-21T02:16:34Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((attributes.size()) > 0) && (!(attributes.get(0).getAttribute().getName().equals(\"*\")))) { boolean found = false; for (net.sourceforge.myvd.types.Attribute attr : attributes) { if (attr.getAttribute().getName().equalsIgnoreCase(\"objectClass\")) { found = true; } if (!found) { newAttrs.add(new net.sourceforge.myvd.types.Attribute(\"objectClass\")); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/2347/buggy-version/src.main.java.net.sourceforge.myvd.inserts.mapping.EntryFilter.java", "BodyUseAPI": [], "Fixed commit": "42c559102883f4035e559c108607df77313c5940", "Url": "https://api.github.com/repos/TremoloSecurity/MyVirtualDirectory", "Date": "2016-11-18T14:37:57Z"},
{"Line": "=>499", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["runningAgents.get(blockchainNetworkType).getWallet().getTransaction(org.bitcoinj.core.Sha256Hash)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (transaction == null) { org.bitcoinj.core.Wallet wallet = getWallet(blockchainNetworkType, null); transaction = wallet.getTransaction(sha256Hash); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/883/buggy-version/BCH.plugin.crypto_network.fermat-bch-plugin-crypto-network-bitcoin-bitdubai.src.main.java.com.bitdubai.fermat_bch_plugin.layer.crypto_network.bitcoin.developer.bitdubai.version_1.structure.BitcoinCryptoNetworkManager.java", "BodyUseAPI": [], "Fixed commit": "fb5a6e8b02bf3e317778ca85f8021f338fbd4828", "Url": "https://api.github.com/repos/acostarodrigo/fermat", "Date": "2016-02-25T17:08:06Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mFreshIntent) { handleActions(getIntent()); mFreshIntent = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/7117/buggy-version/OpenKeychain.src.main.java.org.sufficientlysecure.keychain.ui.ImportKeysActivity.java", "BodyUseAPI": [], "Fixed commit": "d30a7d8b81d1c063d66441bd953c49f34fbf08f4", "Url": "https://api.github.com/repos/open-keychain/open-keychain", "Date": "2016-01-08T21:30:26Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((implId != null) && (implVersion != null)) { for (org.bonitasoft.studio.connectors.repository.ConnectorImplFileStore implStore : getChildren()) { org.bonitasoft.studio.connector.model.implementation.ConnectorImplementation impl = implStore.getContent(); if (((impl != null) && (implId.equals(impl.getImplementationId()))) && (implVersion.equals(impl.getImplementationVersion()))) { return implStore; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/7595/buggy-version/bundles.plugins.org.bonitasoft.studio.connectors.src.org.bonitasoft.studio.connectors.repository.ConnectorImplRepositoryStore.java", "BodyUseAPI": ["java.lang.String.equals(impl.getImplementationId())", "java.lang.String.equals(impl.getImplementationVersion())"], "Fixed commit": "6449e0535aac80393df7d002e43f22463e4a9760", "Url": "https://api.github.com/repos/bonitasoft/bonita-studio", "Date": "2013-08-20T09:51:18Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ypmf.Path.points()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (points != null) { int mx = (points.get(0).x) - (creature.x); int my = (points.get(0).y) - (creature.y); creature.moveBy(mx, my, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/6137/buggy-version/ypmf.CreatureAi.java", "BodyUseAPI": ["java.util.List<ypmf.Point>.get(int)", "java.util.List<ypmf.Point>.get(int)"], "Fixed commit": "3f92a4940b98c63253ce3f007c515800819ca2ce", "Url": "https://api.github.com/repos/Akhier/Your-Past-My-Future", "Date": "2017-03-11T17:50:23Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (name != null) { return getExtGState(name.getName()); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/1322/buggy-version/validation-model.src.main.java.org.verapdf.model.impl.pd.util.PDResourcesHandler.java", "BodyUseAPI": ["org.verapdf.cos.COSName.getName()", "org.verapdf.model.impl.pd.util.PDResourcesHandler.getExtGState(name.getName())"], "Fixed commit": "473d955f0bc70f938e1192c38b8379d214d06c7e", "Url": "https://api.github.com/repos/timurkamalov/veraPDF-validation", "Date": "2016-09-12T10:32:47Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (name != null) { return getShading(name.getName()); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/1322/buggy-version/validation-model.src.main.java.org.verapdf.model.impl.pd.util.PDResourcesHandler.java", "BodyUseAPI": ["org.verapdf.model.impl.pd.util.PDResourcesHandler.getShading(name.getName())", "org.verapdf.cos.COSName.getName()"], "Fixed commit": "473d955f0bc70f938e1192c38b8379d214d06c7e", "Url": "https://api.github.com/repos/timurkamalov/veraPDF-validation", "Date": "2016-09-12T10:32:47Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (name != null) { return getXObject(name.getName()); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/1322/buggy-version/validation-model.src.main.java.org.verapdf.model.impl.pd.util.PDResourcesHandler.java", "BodyUseAPI": ["org.verapdf.cos.COSName.getName()", "org.verapdf.model.impl.pd.util.PDResourcesHandler.getXObject(name.getName())"], "Fixed commit": "473d955f0bc70f938e1192c38b8379d214d06c7e", "Url": "https://api.github.com/repos/timurkamalov/veraPDF-validation", "Date": "2016-09-12T10:32:47Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (name != null) { return getFont(name.getName()); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/1322/buggy-version/validation-model.src.main.java.org.verapdf.model.impl.pd.util.PDResourcesHandler.java", "BodyUseAPI": ["org.verapdf.model.impl.pd.util.PDResourcesHandler.getFont(name.getName())", "org.verapdf.cos.COSName.getName()"], "Fixed commit": "473d955f0bc70f938e1192c38b8379d214d06c7e", "Url": "https://api.github.com/repos/timurkamalov/veraPDF-validation", "Date": "2016-09-12T10:32:47Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (name != null) { return getPattern(name.getName()); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/1322/buggy-version/validation-model.src.main.java.org.verapdf.model.impl.pd.util.PDResourcesHandler.java", "BodyUseAPI": ["org.verapdf.cos.COSName.getName()", "org.verapdf.model.impl.pd.util.PDResourcesHandler.getPattern(name.getName())"], "Fixed commit": "473d955f0bc70f938e1192c38b8379d214d06c7e", "Url": "https://api.github.com/repos/timurkamalov/veraPDF-validation", "Date": "2016-09-12T10:32:47Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (name != null) { return getColorSpace(name.getName()); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/1322/buggy-version/validation-model.src.main.java.org.verapdf.model.impl.pd.util.PDResourcesHandler.java", "BodyUseAPI": ["org.verapdf.cos.COSName.getName()", "org.verapdf.model.impl.pd.util.PDResourcesHandler.getColorSpace(name.getName())"], "Fixed commit": "473d955f0bc70f938e1192c38b8379d214d06c7e", "Url": "https://api.github.com/repos/timurkamalov/veraPDF-validation", "Date": "2016-09-12T10:32:47Z"},
{"Line": "=>306", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((environment.get(v.var)) == null) { target = environment.allocate(Type.T_INT, v.var); }else { target = environment.get(v.var); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/4544/buggy-version/modules.wyc.src.wyc.stages.CodeGeneration.java", "BodyUseAPI": ["LocalGenerator.Environment.get(v.var)", "LocalGenerator.Environment.allocate(Type.T_INT,v.var)"], "Fixed commit": "df194da264622df84c6e9046bfb90212b7a0c225", "Url": "https://api.github.com/repos/DavePearce/Whiley", "Date": "2012-10-24T21:36:02Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((status.getValue()) != null) { newState.setStatus(org.overlord.dtgov.ui.client.shared.beans.ProcessStatusEnum.valueOf(status.getValue())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/892/buggy-version/dtgov-ui-war.src.main.java.org.overlord.dtgov.ui.client.local.pages.processes.ProcessesFilter.java", "BodyUseAPI": ["org.overlord.dtgov.ui.client.shared.beans.ProcessStatusEnum.valueOf(status.getValue())", "org.overlord.dtgov.ui.client.shared.beans.ProcessesFilterBean.setStatus(org.overlord.dtgov.ui.client.shared.beans.ProcessStatusEnum.valueOf(status.getValue()))", "org.overlord.dtgov.ui.client.local.pages.processes.ProcessStatusListBox.getValue()"], "Fixed commit": "12a3535d0b2fced15a6b64979df222851475f29e", "Url": "https://api.github.com/repos/knrc/dtgov", "Date": "2014-09-27T19:29:51Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((socket) == null) throw new java.lang.IllegalStateException(\"cannot start because this postman was bound to no socket\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/3730/buggy-version/src.main.java.de.teiesti.postie.Postman.java", "BodyUseAPI": [], "Fixed commit": "431c48bfe9766a5147eaefecbb1f1bd9568da58e", "Url": "https://api.github.com/repos/teiesti/postie", "Date": "2014-05-18T22:34:20Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (socket.isClosed()) throw new java.lang.IllegalStateException(\"cannot start because bound socket is already closed\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/3730/buggy-version/src.main.java.de.teiesti.postie.Postman.java", "BodyUseAPI": [], "Fixed commit": "431c48bfe9766a5147eaefecbb1f1bd9568da58e", "Url": "https://api.github.com/repos/teiesti/postie", "Date": "2014-05-18T22:34:20Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isRunning()) throw new java.lang.IllegalStateException(\"cannot start because this postman is already running\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/3730/buggy-version/src.main.java.de.teiesti.postie.Postman.java", "BodyUseAPI": [], "Fixed commit": "431c48bfe9766a5147eaefecbb1f1bd9568da58e", "Url": "https://api.github.com/repos/teiesti/postie", "Date": "2014-05-18T22:34:20Z"},
{"Line": "=>671", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (sharing != null) query.setParameter(\"sharing\", sharing);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/3192/buggy-version/api.src.main.java.org.ednovo.gooru.infrastructure.persistence.hibernate.resource.ResourceRepositoryHibernate.java", "BodyUseAPI": ["org.hibernate.Query.setParameter(java.lang.String,java.lang.String)"], "Fixed commit": "238776629c5d5ae798eb5f2b4115e455823103fa", "Url": "https://api.github.com/repos/viji-m/Gooru-Core-API", "Date": "2015-05-28T12:34:49Z"},
{"Line": "=>663", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sharing != null) { hql += \" AND resource.sharing = :sharing\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/3192/buggy-version/api.src.main.java.org.ednovo.gooru.infrastructure.persistence.hibernate.resource.ResourceRepositoryHibernate.java", "BodyUseAPI": [], "Fixed commit": "238776629c5d5ae798eb5f2b4115e455823103fa", "Url": "https://api.github.com/repos/viji-m/Gooru-Core-API", "Date": "2015-05-28T12:34:49Z"},
{"Line": "=>1540", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(resource.getSharing().equalsIgnoreCase(org.ednovo.gooru.domain.service.resource.PUBLIC))) { updateResource(resource.getGooruOid(), newResource, tags, user); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/3192/buggy-version/api.src.main.java.org.ednovo.gooru.domain.service.resource.ResourceServiceImpl.java", "BodyUseAPI": ["org.ednovo.gooru.domain.service.resource.ResourceServiceImpl.updateResource(resource.getGooruOid(),org.ednovo.gooru.core.api.model.Resource,java.util.List<java.lang.String>,org.ednovo.gooru.core.api.model.User)", "org.ednovo.gooru.core.api.model.Resource.getGooruOid()"], "Fixed commit": "238776629c5d5ae798eb5f2b4115e455823103fa", "Url": "https://api.github.com/repos/viji-m/Gooru-Core-API", "Date": "2015-05-28T12:34:49Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((user) != null) { if ((userScores.size()) > 0) { android.content.Intent i = new android.content.Intent(this, com.example.mjokic.quizapp.activities.GraphActivity.class); i.putParcelableArrayListExtra(\"userScores\", userScores); startActivity(i); return true; }else { es.dmoral.toasty.Toasty.info(getApplicationContext(), getResources().getString(R.string.nothing_to_display_text), Toast.LENGTH_SHORT, true).show(); } }else { es.dmoral.toasty.Toasty.info(getApplicationContext(), getResources().getString(R.string.not_logged_in_display_text), Toast.LENGTH_SHORT, true).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/7126/buggy-version/app.src.main.java.com.example.mjokic.quizapp.activities.HighscoreActivity.java", "BodyUseAPI": [], "Fixed commit": "a067dcb3555e67c0ede2950900af26051b017ed5", "Url": "https://api.github.com/repos/mjokic/QuizAndroidApp", "Date": "2017-10-02T13:25:07Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fromOnCreate) { for (com.team_clicker.idlefarmer.model.Cereal cereal : service.getGame().getCereals()) { if ((cereal.getLevel()) > 0) { java.util.Timer timer = new java.util.Timer(); timer.schedule(new com.team_clicker.idlefarmer.runnable.CerealRun(cereal, service.getGame(), moneyHandler), 0, ((cereal.getGrowthTime()) * 1000)); } } fromOnCreate = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/7268/buggy-version/app.src.main.java.com.team_clicker.idlefarmer.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "34cf4e0c568a7d3f04ada797cd90d1c3d86bc75f", "Url": "https://api.github.com/repos/ClickerTeam/Idle-Farmer", "Date": "2017-05-28T21:21:52Z"},
{"Line": "=>454", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (interrupted) { org.openhab.binding.fritzbox.internal.FritzboxBinding.logger.info(\"Lost connection to Fritzbox because of interrupt\"); }else { org.openhab.binding.fritzbox.internal.FritzboxBinding.logger.error(\"Lost connection to FritzBox\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/6408/buggy-version/bundles.binding.org.openhab.binding.fritzbox.src.main.java.org.openhab.binding.fritzbox.internal.FritzboxBinding.java", "BodyUseAPI": [], "Fixed commit": "9105173619c5d5a721fa4b85a0128e48308e5a67", "Url": "https://api.github.com/repos/J-N-K/openhab1-addons", "Date": "2015-05-04T09:22:21Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mIndex) == null) { mIndex = new com.raizlabs.android.dbflow.sql.index.Index<ModelClass>(mName).on(mOnTable); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/1544/buggy-version/library.src.main.java.com.raizlabs.android.dbflow.sql.migration.IndexMigration.java", "BodyUseAPI": [], "Fixed commit": "340ace4507ce6c1598bf6650ad82dcd66c67a736", "Url": "https://api.github.com/repos/MaTriXy/DBFlow", "Date": "2015-02-14T17:15:18Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(emdDetail.isSubProjectEMD())) { emdDetail.setAliasSubProjectName(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/9205/buggy-version/src.main.java.com.psk.pms.service.EmdServiceImpl.java", "BodyUseAPI": ["com.psk.pms.model.EMDDetail.setAliasSubProjectName(<nulltype>)"], "Fixed commit": "01bfa52e55012697b95d4d31ec3b790386fa74ae", "Url": "https://api.github.com/repos/devintqa/pms", "Date": "2015-05-31T03:42:27Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.security.core.context.SecurityContextHolder.getContext().getAuthentication()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (auth != null) { org.springframework.core.io.Resource resource = new org.springframework.core.io.ClassPathResource(\"/META-INF/env.properties\"); java.util.Properties props = org.springframework.core.io.support.PropertiesLoaderUtils.loadProperties(resource); if (props == null) { throw new java.io.IOException(\"Properties not found\"); } if (((props.getProperty(\"admin.name\").equals(auth.getName())) == false) && ((user.getRole()) != (co.simplon.kif.core.model.User.Role.ADMIN))) { user = userService.findOneByUsername(auth.getName()); } if (((user != null) && (userId != (-1))) && (((user.getRole()) == (co.simplon.kif.core.model.User.Role.ADMIN)) || (props.getProperty(\"admin.name\").equals(auth.getName())))) { user = userService.findById(userId); } booking.setUser(user); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/1354/buggy-version/src.main.java.co.simplon.kif.core.service.BookingService.java", "BodyUseAPI": ["java.lang.String.equals(auth.getName())", "org.springframework.security.core.Authentication.getName()", "org.springframework.security.core.Authentication.getName()", "java.lang.String.equals(auth.getName())", "co.simplon.kif.core.service.UserService.findOneByUsername(auth.getName())", "org.springframework.security.core.Authentication.getName()"], "Fixed commit": "93ab90f4c973c07a518e24607c671e2400d62e6c", "Url": "https://api.github.com/repos/simplon-CQP-Java/kif", "Date": "2016-12-09T16:52:43Z"},
{"Line": "=>731", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (daysInYearToUse) { periodsInOneYear = this.daysInYearType.getValue().longValue(); }else { periodsInOneYear = calculator.calculate(this.repaymentPeriodFrequencyType).longValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/3764/buggy-version/mifosng-provider.src.main.java.org.mifosplatform.portfolio.loanaccount.loanschedule.domain.LoanApplicationTerms.java", "BodyUseAPI": [], "Fixed commit": "a0e82a7ef3324c98ac01da58f991dc18912f30d9", "Url": "https://api.github.com/repos/Musoni/mifosx", "Date": "2015-02-16T12:09:40Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (new java.io.File(target, \"temp\").mkdirs()) { throw new java.lang.IllegalStateException(\"Error during temporary folder creation\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/5995/buggy-version/src.main.java.com.jcabi.mysql.maven.plugin.Instances.java", "BodyUseAPI": [], "Fixed commit": "a4dd49a1605fe7b005438a14381e8a5cb7c327f8", "Url": "https://api.github.com/repos/longtimeago/jcabi-mysql-maven-plugin", "Date": "2014-03-11T17:45:06Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.Statement.executeQuery(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (rs.next()) { ch.so.agi.gretl.steps.Db2DbStep.log.debug(((\"DELETE FROM TABLE \" + destTableName) + \" failed. There are still Rows in the Target-Table!\")); throw new java.sql.SQLException(); }else { ch.so.agi.gretl.steps.Db2DbStep.log.info(\"DELETE succesfull!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/1091/buggy-version/src.main.java.ch.so.agi.gretl.steps.Db2DbStep.java", "BodyUseAPI": [], "Fixed commit": "991395597688a8df33e740c191510cbd24d65cc8", "Url": "https://api.github.com/repos/sogis/gretl", "Date": "2017-09-14T13:21:11Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hash.equals(localNode.getNodeId())) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/3967/buggy-version/org.blockout.network.src.main.java.org.blockout.network.reworked.ChordOverlayChannelHandler.java", "BodyUseAPI": [], "Fixed commit": "e34e3e7b5a249662fe3ce92956d97d4eec2fb012", "Url": "https://api.github.com/repos/coding-mof/p2p-lab-blockout", "Date": "2012-07-23T14:19:22Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (b) { de.ncm.x3.iam.gui.component.universe.JSector.logger.debug(((sector.getName()) + \": is highlighted\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/4148/buggy-version/X3-InteractiveMap_GUI.src.main.java.de.ncm.x3.iam.gui.component.universe.JSector.java", "BodyUseAPI": [], "Fixed commit": "5022b61ca50aa8d8de06e1bcb52b5184dfbfad1c", "Url": "https://api.github.com/repos/niccomatik/X3-InteractiveMap", "Date": "2012-07-19T22:16:41Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_glBuffer) != (org.glob3.mobile.specific.ShortBuffer_Android._boundVertexBuffer)) { android.opengl.GLES20.glBindBuffer(GLES20.GL_ELEMENT_ARRAY_BUFFER, _glBuffer); org.glob3.mobile.specific.ShortBuffer_Android._boundVertexBuffer = _glBuffer; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/844/buggy-version/Android.G3MAndroidSDK.src.org.glob3.mobile.specific.ShortBuffer_Android.java", "BodyUseAPI": [], "Fixed commit": "3e17492972ca3be6bfbba0d9d6cf11cbfa47c38e", "Url": "https://api.github.com/repos/glob3mobile/g3m", "Date": "2016-01-29T16:09:23Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((pos != (-1)) && (pos < (currentHand.size()))) currentHand.set(pos, newDomino);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/7828/buggy-version/app.src.main.java.game.gamehelper.DominoMT.HandMT.java", "BodyUseAPI": ["java.util.ArrayList<game.gamehelper.DominoMT.Domino>.set(int,game.gamehelper.DominoMT.Domino)"], "Fixed commit": "fc9e4c84a4a1f5fdf50297bf0a9b7bfd5058d844", "Url": "https://api.github.com/repos/khawkes/GameHelperV2", "Date": "2015-04-19T16:17:34Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((java.lang.Math.abs((cx - x))) > 2) || ((java.lang.Math.abs((cy - y))) > 2)) || ((board[jumpedRow][jumpedCol].getPiece().getColor()) == (board[x][y].getPiece().getColor()))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/2232/buggy-version/app.src.main.java.timdevries.gamesuite350.CheckersLogic.java", "BodyUseAPI": [], "Fixed commit": "deb09ada99a1cb0c8a0496afd7b9d24a5bb40898", "Url": "https://api.github.com/repos/devriet/GameSuite350", "Date": "2017-04-20T08:00:29Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isSuccess()) { reader = new java.io.BufferedReader(new java.io.InputStreamReader(connection.getInputStream())); }else { reader = new java.io.BufferedReader(new java.io.InputStreamReader(connection.getErrorStream())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/980/buggy-version/src.main.java.com.regalii.regaliator.api.Response.java", "BodyUseAPI": [], "Fixed commit": "c9c208c4940945f5de2631c8b554f247df7e14cd", "Url": "https://api.github.com/repos/regalii/regaliator_java", "Date": "2017-10-02T18:54:32Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (removing.isEmpty()) { this.log().finest(\"Listener not found to remove\"); }else { final java.util.Iterator<com.poixson.utils.xEvents.xHandler.xListenerDAO> it = removing.iterator(); while (it.hasNext()) { this.listeners.remove(it.next()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/2341/buggy-version/src.com.poixson.utils.xEvents.xHandler.java", "BodyUseAPI": ["java.util.Set<com.poixson.utils.xEvents.xHandler.xListenerDAO>.iterator()"], "Fixed commit": "1a21f67f6dca010ac3f91eeb8afba3d9c6800316", "Url": "https://api.github.com/repos/GrowControl/pxnCommon", "Date": "2017-05-19T03:54:11Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((consumeItems) != null) { consumeItems.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/2467/buggy-version/src.main.java.org.jenkinsci.plugins.rabbitmqconsumer.GlobalRabbitmqConfiguration.java", "BodyUseAPI": [], "Fixed commit": "7ab104fe90defe1e7e087addff7bab195d28e6c0", "Url": "https://api.github.com/repos/jenkinsci/rabbitmq-consumer-plugin", "Date": "2013-04-16T01:54:47Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((io.github.kosmologist.easytimetracker.utils.TimeUtils.getElapsedDurationInMilis(io.github.kosmologist.easytimetracker.utils.TimeUtils.getCurrentDateTime(), io.github.kosmologist.easytimetracker.utils.TimeUtils.getEstimatedShiftEndDate(data.get(position).shift.getShiftStartDate()))) < 0) { holder.tvRemainingHoursToCheckOut.setText(\"Remaining Duration: 00:00\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/1458/buggy-version/app.src.main.java.io.github.kosmologist.easytimetracker.adapters.ShiftRecyclerViewAdapter.java", "BodyUseAPI": [], "Fixed commit": "9261c3dfd808a56f651b3999e4777b29d40e428f", "Url": "https://api.github.com/repos/kosmologist/bigbang", "Date": "2016-11-11T14:47:01Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(settings.rubbish.isEmpty())) { java.lang.System.err.println((\"Unrecognized option: \" + (settings.rubbish.get(0)))); java.lang.System.exit(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/1571/buggy-version/src.ru.fizteh.fivt.students.harius.calendar.ZCalendar.java", "BodyUseAPI": ["java.io.PrintStream.println((\"Unrecognized option: \" + (settings.rubbish.get(0))))", "settings.rubbish.get(int)"], "Fixed commit": "b6796f53aedb90dbb7a60c9dea19720cd9738a8b", "Url": "https://api.github.com/repos/dkomanov/fizteh-java-task", "Date": "2012-12-01T09:39:16Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.rapidoid.widget.FormField.display(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (display instanceof org.rapidoid.html.Tag) { return ((org.rapidoid.html.Tag) (display)); }else { return span(display).class_(\"display-wrap\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/8499/buggy-version/rapidoid-pages.src.main.java.org.rapidoid.widget.FormField.java", "BodyUseAPI": ["span(display).class_(java.lang.String)", "org.rapidoid.widget.FormField.span(java.lang.Object)"], "Fixed commit": "d4bffefd255fef0754baad1147f8d96e2cb7c27f", "Url": "https://api.github.com/repos/rapidoid/rapidoid", "Date": "2015-01-25T21:59:05Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mode) != (FormMode.SHOW)) { if (required) { var = org.rapidoid.var.Vars.mandatory(var); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/8499/buggy-version/rapidoid-pages.src.main.java.org.rapidoid.widget.FormField.java", "BodyUseAPI": [], "Fixed commit": "d4bffefd255fef0754baad1147f8d96e2cb7c27f", "Url": "https://api.github.com/repos/rapidoid/rapidoid", "Date": "2015-01-25T21:59:05Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.rapidoid.html.TagWidget<java.lang.Object>.toTag(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (tag != null) { str(ctx, tag, level, inline, extra, out); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/8499/buggy-version/rapidoid-html.src.main.java.org.rapidoid.html.impl.TagRenderer.java", "BodyUseAPI": ["org.rapidoid.html.impl.TagRenderer.str(org.rapidoid.html.TagContext,org.rapidoid.html.Tag,int,boolean,java.lang.Object,java.io.OutputStream)"], "Fixed commit": "d4bffefd255fef0754baad1147f8d96e2cb7c27f", "Url": "https://api.github.com/repos/rapidoid/rapidoid", "Date": "2015-01-25T21:59:05Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Object.toTag(<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (tag != null) { org.rapidoid.html.Tags.traverse(tag, processor); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/8499/buggy-version/rapidoid-html.src.main.java.org.rapidoid.html.Tags.java", "BodyUseAPI": ["org.rapidoid.html.Tags.traverse(org.rapidoid.html.Tag,org.rapidoid.html.TagProcessor<org.rapidoid.html.Tag>)"], "Fixed commit": "d4bffefd255fef0754baad1147f8d96e2cb7c27f", "Url": "https://api.github.com/repos/rapidoid/rapidoid", "Date": "2015-01-25T21:59:05Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getStringExtra(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (tolaunch != null) uriUrl2 = android.net.Uri.parse(i.getStringExtra(\"url\")); else uriUrl2 = android.net.Uri.parse(\"http://commencement.yale.edu/\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/3189/buggy-version/src.edu.yale.yalepublic.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "f8cbb8320ee1bb4d4b5cc6619f255306887a0b4b", "Url": "https://api.github.com/repos/YaleSTC/YalePublic-android", "Date": "2016-03-31T19:39:26Z"},
{"Line": "=>313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (terminateNow) { terminate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/1646/buggy-version/src.main.java.com.elasticbox.jenkins.ElasticBoxSlave.java", "BodyUseAPI": [], "Fixed commit": "f5139595d2c155972ecd57a2b0e80fc2fe8006e7", "Url": "https://api.github.com/repos/jenkinsci/elasticbox-plugin", "Date": "2014-07-30T04:09:49Z"},
{"Line": "=>325", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mixin.eContainer()) instanceof org.eclipse.cmf.occi.core.Extension) { epackageNS = org.eclipse.cmf.occi.core.util.Occi2Ecore.convertOcciScheme2EcoreNamespace(((org.eclipse.cmf.occi.core.Extension) (mixin.eContainer())).getScheme()); epackage = EPackage.Registry.INSTANCE.getEPackage(epackageNS); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/7701/buggy-version/plugins.org.eclipse.cmf.occi.core.src.org.eclipse.cmf.occi.core.util.OcciHelper.java", "BodyUseAPI": ["((org.eclipse.cmf.occi.core.Extension) (mixin.eContainer())).getScheme()", "org.eclipse.cmf.occi.core.Mixin.eContainer()", "org.eclipse.cmf.occi.core.util.Occi2Ecore.convertOcciScheme2EcoreNamespace(((org.eclipse.cmf.occi.core.Extension) (mixin.eContainer())).getScheme())"], "Fixed commit": "850991be9c62ddbd223e644474904649c04b3751", "Url": "https://api.github.com/repos/occiware/OCCI-Studio", "Date": "2017-12-13T17:16:13Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (workDayDTO != null) { databaseManager.updateLessons(workDayDTO, group, versionGrp); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/6650/buggy-version/app.src.main.java.com.example.alex.scheduleandroid.LessonsShowActivity.java", "BodyUseAPI": ["com.example.alex.scheduleandroid.database.DatabaseManager.updateLessons(com.example.alex.scheduleandroid.dto.WorkDayDTO,java.lang.String,int)"], "Fixed commit": "6b4ca823d6f30d2af28fe77688c4eb7c7231da5b", "Url": "https://api.github.com/repos/Algresh/ScheduleAndroid", "Date": "2016-03-14T16:35:49Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.net.ConnectivityManager.getActiveNetworkInfo()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((networkInfo != null) && (networkInfo.isConnected())) { android.view.View loadingIndicator = findViewById(R.id.loading_indicator); loadingIndicator.setVisibility(View.VISIBLE); android.support.v7.widget.SearchView searchView = ((android.support.v7.widget.SearchView) (findViewById(R.id.search_view))); java.lang.String searchString = searchView.getQuery().toString(); fullQueryUrl = makeQueryUrl(searchString); getLoaderManager().restartLoader(com.example.me74.booklist.MainActivity.BOOK_LOADER_ID, null, this); }else { mAdapter.clear(); mEmptyStateTextView.setText(R.string.no_internet_connection); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/1045/buggy-version/app.src.main.java.com.example.me74.booklist.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "4d0953074f302693749684a628f05031a0fc2393", "Url": "https://api.github.com/repos/sun-strider/BookList", "Date": "2017-07-15T11:58:09Z"},
{"Line": "=>476", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fileName != null) && (!(fileName.equals(\"\")))) { java.io.File targetFile = new java.io.File((((settings.UPLOAD_FOLDER) + \"/\") + fileName)); if (!(targetFile.exists())) { throw new cn.edu.uestc.acmicpc.util.exception.AppException(\"Internal exception: uploaded xls file disappeared.\"); } cn.edu.uestc.acmicpc.web.rank.TrainingRankList trainingRankList = parseXlsFile(targetFile, trainingContestEditDto.getTrainingId(), trainingContestEditDto.getType(), trainingContestEditDto.getPlatformType()); trainingContestDto.setRankList(com.alibaba.fastjson.JSON.toJSONString(trainingRankList)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/690/buggy-version/trunk.src.main.java.cn.edu.uestc.acmicpc.web.oj.controller.training.TrainingController.java", "BodyUseAPI": [], "Fixed commit": "ac8d9db61e64fefa5f7133ac1b801dcb2a3406e7", "Url": "https://api.github.com/repos/UESTC-ACM/CDOJ", "Date": "2014-07-20T09:48:20Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<org.randoom.setlx.parameters.ParameterDefinition, org.randoom.setlx.types.Value>.get(org.randoom.setlx.parameters.ParameterDefinition)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((number.compareTo(Rational.ZERO)) == (-1)) { number = number.absoluteValue(state); result.append(\"-\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/7496/buggy-version/interpreter.core.src.main.java.org.randoom.setlx.functions.PD_nDecimalPlaces.java", "BodyUseAPI": ["org.randoom.setlx.types.Value.absoluteValue(org.randoom.setlx.utilities.State)"], "Fixed commit": "4af56ca7771f4d97129ba317aca4be532f6a1432", "Url": "https://api.github.com/repos/FastDeath/setlX", "Date": "2016-05-27T08:45:24Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((profileForm.getTeeShirtSize()) != null) teeShirtSize = profileForm.getTeeShirtSize();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/2942/buggy-version/src.main.java.com.google.devrel.training.conference.spi.ConferenceApi.java", "BodyUseAPI": ["com.google.devrel.training.conference.form.ProfileForm.getTeeShirtSize()"], "Fixed commit": "153e62e29e5c0bc372a871bf10b169ac63de631f", "Url": "https://api.github.com/repos/DanTsk/Conference", "Date": "2017-03-10T12:45:06Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nx > 0) { for (java.lang.String s : sx) { sbox[(n++)] = s.substring(0, ((s.length()) - 4)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/3508/buggy-version/java.src.jmri.jmrit.symbolicprog.ProgDefault.java", "BodyUseAPI": [], "Fixed commit": "08d05820170bcd2442357cbdf87708c31c9c7674", "Url": "https://api.github.com/repos/crosland/JMRI", "Date": "2016-05-19T01:40:56Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (np > 0) { for (java.lang.String s : sp) { sbox[(n++)] = s.substring(0, ((s.length()) - 4)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/3508/buggy-version/java.src.jmri.jmrit.symbolicprog.ProgDefault.java", "BodyUseAPI": [], "Fixed commit": "08d05820170bcd2442357cbdf87708c31c9c7674", "Url": "https://api.github.com/repos/crosland/JMRI", "Date": "2016-05-19T01:40:56Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (bufferedReader != null) { bufferedReader.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/3508/buggy-version/java.src.jmri.jmrit.symbolicprog.CsvImporter.java", "BodyUseAPI": [], "Fixed commit": "08d05820170bcd2442357cbdf87708c31c9c7674", "Url": "https://api.github.com/repos/crosland/JMRI", "Date": "2016-05-19T01:40:56Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (fileReader != null) { fileReader.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/3508/buggy-version/java.src.jmri.jmrit.symbolicprog.CsvImporter.java", "BodyUseAPI": [], "Fixed commit": "08d05820170bcd2442357cbdf87708c31c9c7674", "Url": "https://api.github.com/repos/crosland/JMRI", "Date": "2016-05-19T01:40:56Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sonar.java.model.ExpressionUtils.skipParentheses(tree.expression())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (expression.is(Tree.Kind.IDENTIFIER)) { java.lang.String identifierName = ((org.sonar.plugins.java.api.tree.IdentifierTree) (expression)).name(); if ((\"this\".equals(identifierName)) || (\"super\".equals(identifierName))) { tree.identifier().accept(this); return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/5695/buggy-version/java-frontend.src.main.java.org.sonar.java.se.checks.SyntaxTreeNameFinder.java", "BodyUseAPI": [], "Fixed commit": "0e259bb21092d6dc3953465975e6db740d924945", "Url": "https://api.github.com/repos/SonarSource/sonar-java", "Date": "2017-05-15T16:01:31Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isPaused) pause();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/3001/buggy-version/src.edu.ucsb.cs56.projects.games.tetris.TetrisBoard.java", "BodyUseAPI": [], "Fixed commit": "e5cc8135ae4a35daf882252e1d5db5f457ef6bad", "Url": "https://api.github.com/repos/nikolasjchaconas/cs56-games-tetris", "Date": "2015-03-11T06:51:54Z"},
{"Line": "=>323", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((splits.length) > 1) { album.setYear(java.lang.Integer.parseInt(splits[1])); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/3342/buggy-version/de.freese.jripper.jripper-core.src.main.java.de.freese.jripper.core.cddb.FreeDBProvider.java", "BodyUseAPI": ["de.freese.jripper.core.model.Album.setYear(int)", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "3fa90df7497ba42d5d180481c5473fd71cc7adf0", "Url": "https://api.github.com/repos/tfreese/jripper", "Date": "2013-11-03T09:10:33Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bestR == 2147483647) || (bestS == 2147483647)) { java.lang.System.out.println(\"That many seats cannot be found\"); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/9169/buggy-version/Project3.src.Main.java", "BodyUseAPI": [], "Fixed commit": "0ce4c700a25adbc320d7a8b3406f0adbce7b1d83", "Url": "https://api.github.com/repos/Formicidae/Java-Project-3", "Date": "2017-03-21T23:56:45Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (cur == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/9169/buggy-version/Project3.src.Main.java", "BodyUseAPI": [], "Fixed commit": "0ce4c700a25adbc320d7a8b3406f0adbce7b1d83", "Url": "https://api.github.com/repos/Formicidae/Java-Project-3", "Date": "2017-03-21T23:56:45Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.charAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((count.get(c)) > b) { b = count.get(c); r = c; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/8342/buggy-version/src.base.TextNote.java", "BodyUseAPI": ["java.util.HashMap<java.lang.Character, java.lang.Integer>.get(java.lang.Character)"], "Fixed commit": "c259488bf50f700473b8bbde17c3670e881c122c", "Url": "https://api.github.com/repos/qinm7/comp3021lab", "Date": "2016-10-12T03:03:26Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getServletContext().getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((fileName != null) && (!(fileName.trim().equals(\"\")))) { byte[] fileAsBytes = model.getFile(fileName); out.write(fileAsBytes); }else { resp.sendRedirect(\"http://localhost:8080/list\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/4488/buggy-version/src.controller.DownloadFileServlet.java", "BodyUseAPI": ["model.FileHandler.getFile(java.lang.String)"], "Fixed commit": "9a9398866df3437e8249b5e68a82f4cb43626728", "Url": "https://api.github.com/repos/VOsipenkov/FTP_WEB_SERVER", "Date": "2017-04-02T12:13:17Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cash) { m_apayment.add(new uk.chromis.pos.payment.PaymentInfoCash_original((m_dTotal - dPaidOther), dPaidCash)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/5555/buggy-version/src-pos.uk.chromis.pos.payment.PaymentInfoList.java", "BodyUseAPI": [], "Fixed commit": "fefcc2c6ee6ce37fa7c28feaab564f0e3b17cc6b", "Url": "https://api.github.com/repos/ChromisPos/ChromisPOS", "Date": "2016-04-23T16:39:38Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"\".equals(content)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/2880/buggy-version/helpdesk-web.src.main.java.hu.schonherz.training.helpdesk.web.view.ChatView.java", "BodyUseAPI": [], "Fixed commit": "dea418ade4d9218eb7cbfe090da78d82916b927d", "Url": "https://api.github.com/repos/schonherz-java-ee-2016-q4/project-helpdesk", "Date": "2017-02-11T04:16:56Z"},
{"Line": "=>1398", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ut.dph.controller.HealtheWebController.setOrgDetails(transactionOutManager.getDownloadSummaryDetails(transactionDetails.getId()).gettargetOrgId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((orgDetailFields.size()) > index) { record.setFieldValue(orgDetailFields.get(index).getFieldValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/3134/buggy-version/src.main.java.com.ut.dph.controller.HealtheWebController.java", "BodyUseAPI": ["orgDetailFields.get(index).getFieldValue()", "java.util.List<com.ut.dph.model.transactionRecords>.get(int)", "com.ut.dph.model.transactionRecords.setFieldValue(orgDetailFields.get(index).getFieldValue())"], "Fixed commit": "29114462423b6afbd5d470e3f5dd848b58cf3222", "Url": "https://api.github.com/repos/thenhkid/universalTranslator", "Date": "2016-04-05T23:38:55Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCityAdapter) != null) { mCityAdapter.clearData(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/5552/buggy-version/app.src.main.java.com.example.daniel.weatherinfo.ui.AddCityActivity.java", "BodyUseAPI": [], "Fixed commit": "c9014d3a665d59a70e83b79ff68e68d79c90ce98", "Url": "https://api.github.com/repos/djawny/WeatherInfo", "Date": "2017-05-10T10:05:28Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCityAdapter) != null) { mCityAdapter.clearData(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/5552/buggy-version/app.src.main.java.com.example.daniel.weatherinfo.ui.AddCityActivity.java", "BodyUseAPI": [], "Fixed commit": "c9014d3a665d59a70e83b79ff68e68d79c90ce98", "Url": "https://api.github.com/repos/djawny/WeatherInfo", "Date": "2017-05-10T10:05:28Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.elmakers.mine.bukkit.api.action.CastContext.getTargetEntity()", "com.elmakers.mine.bukkit.api.action.CastContext.getLivingEntity()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((targetEntity == (source.getPassenger())) || (source == (targetEntity.getPassenger()))) { return com.elmakers.mine.bukkit.api.spell.SpellResult.NO_TARGET; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/1852/buggy-version/src.main.java.com.elmakers.mine.bukkit.action.builtin.MountAction.java", "BodyUseAPI": [], "Fixed commit": "46c0f3ce78469c10b7cfdef6c4fb19026d6ac1e8", "Url": "https://api.github.com/repos/elBukkit/MagicPlugin", "Date": "2016-04-05T15:51:07Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (intValue < (Calculator.ZERO_NUMBER)) { withNegativeNumbers = true; negativeNumbers.add(value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/549/buggy-version/src.main.java.Calculator.java", "BodyUseAPI": [], "Fixed commit": "20a5955407c95aedb745d648c4495ddde447e91e", "Url": "https://api.github.com/repos/jcombarros/KataStringCalculator", "Date": "2015-11-07T21:31:22Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dtime > 0) { s += \" I:\" + (((inputbytecount) * 1000) / dtime); s += \" O:\" + (((outputbytecount) * 1000) / dtime); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/4878/buggy-version/src.main.java.waazdoh.cp2p.impl.P2PServer.java", "BodyUseAPI": [], "Fixed commit": "1c6166555e5fa11535f746b10011aac8419848bb", "Url": "https://api.github.com/repos/jeukku/waazdoh.client", "Date": "2013-09-29T07:46:21Z"},
{"Line": "=>459", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasRequiredUserRestriction(action, resourceGroup, resourceType, restrictionEntity)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/584/buggy-version/AMW_business.src.main.java.ch.puzzle.itc.mobiliar.business.security.control.PermissionService.java", "BodyUseAPI": [], "Fixed commit": "e0cc8d0de099ae5960f820695d7acdf3a0f30410", "Url": "https://api.github.com/repos/liimaorg/liima", "Date": "2017-08-15T20:59:13Z"},
{"Line": "=>463", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasRequiredUserRestrictionOnAllContext(context, action, resourceGroup, resourceType, restrictionEntity)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/584/buggy-version/AMW_business.src.main.java.ch.puzzle.itc.mobiliar.business.security.control.PermissionService.java", "BodyUseAPI": [], "Fixed commit": "e0cc8d0de099ae5960f820695d7acdf3a0f30410", "Url": "https://api.github.com/repos/liimaorg/liima", "Date": "2017-08-15T20:59:13Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(vDropMeUser.getHash()))) { com.prasilabs.dropme.customs.LocalPreference.saveLoginDataInShared(context, PojoConstants.UserConstant.HASH_STR, vDropMeUser.getHash()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/4626/buggy-version/app.src.main.java.com.prasilabs.dropme.managers.UserManager.java", "BodyUseAPI": ["com.prasilabs.dropme.backend.dropMeApi.model.VDropMeUser.getHash()", "com.prasilabs.dropme.customs.LocalPreference.saveLoginDataInShared(android.content.Context,PojoConstants.UserConstant.HASH_STR,vDropMeUser.getHash())"], "Fixed commit": "5556954133920ea8c02caab81739fa38983f752b", "Url": "https://api.github.com/repos/praslnx8/DropMe", "Date": "2016-06-30T20:26:38Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((thread) == (java.lang.Thread.currentThread())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/3556/buggy-version/src.main.java.com.therandomlabs.utils.misc.Timer.java", "BodyUseAPI": [], "Fixed commit": "66c960ee73cce1c8796ae5650e95a4da69b60f8f", "Url": "https://api.github.com/repos/TheRandomLabs/TRLUtils", "Date": "2017-04-17T06:16:42Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bytes != null) && ((bytes.length) > 0)) { if ((bytes[0]) == ((byte) (1))) { min = -180; max = 180; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/2863/buggy-version/geowave-index.src.main.java.mil.nga.giat.geowave.index.dimension.LatitudeDefinition.java", "BodyUseAPI": [], "Fixed commit": "d97c6b272e61ca47f355bfaf1708cad4d7c96923", "Url": "https://api.github.com/repos/locationtech/geowave", "Date": "2015-01-28T20:39:16Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (destination.contains(\"null\")) { return; }else { f = new java.io.File(destination); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/1738/buggy-version/src.projekt.MyExcel.java", "BodyUseAPI": [], "Fixed commit": "336a6547bb4762fafaeb0645bd67411ef760e830", "Url": "https://api.github.com/repos/FreakazoidRoflcopter/Assignments", "Date": "2017-10-06T10:10:56Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentMode) == (kex.heuristics.selectors.GreedySelector.MODE.RANDOM_FIT)) { while ((maxHeap.heapsize()) > 0) { kex.heuristics.selectors.GreedySelector.Vertex next = maxHeap.removemax(); if ((next.compareTo(prev)) != 0) { break; } res.add(next.vertexNr); prev = next; } java.util.List<java.lang.Integer> randomFit = new java.util.LinkedList<java.lang.Integer>(); randomFit.add(res.get(rand.nextInt(res.size()))); return randomFit; }else if ((currentMode) == (kex.heuristics.selectors.GreedySelector.MODE.NEXT_FIT)) { while (((rand.nextDouble()) < (nextFitProbability)) && ((maxHeap.heapsize()) > 0)) { prev = maxHeap.removemax(); } java.util.LinkedList<java.lang.Integer> ll = new java.util.LinkedList<java.lang.Integer>(); ll.add(prev.vertexNr); return ll; }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/7790/buggy-version/src.kex.heuristics.selectors.GreedySelector.java", "BodyUseAPI": [], "Fixed commit": "765655857d1f2c701bca205a457b5c1fdca7b6f8", "Url": "https://api.github.com/repos/Realiserad/kex15", "Date": "2015-04-18T14:35:13Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (crs == (_course)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/4933/buggy-version/RujelBase.Sources.net.rujel.ui.AddOnPresenter.java", "BodyUseAPI": [], "Fixed commit": "2b202e53dcd2d783f3df8aca6a2ab4fe867de5b8", "Url": "https://api.github.com/repos/baywind/rujel", "Date": "2011-03-09T08:29:12Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (index >= 0) labelList.get(i).setText(textList.get(index)); else labelList.get(i).setText(\"\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/5510/buggy-version/src.gui.multilabel.MultiLabel.java", "BodyUseAPI": ["javax.swing.JLabel.setText(java.lang.String)", "java.util.LinkedList<java.lang.String>.get(int)"], "Fixed commit": "3aa4671516a6a049ced15a4068b79d8fcd1e9672", "Url": "https://api.github.com/repos/Balck92/eda095_projekt", "Date": "2017-05-10T10:48:27Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.poi.ss.usermodel.Row.getCell(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((cell != null) && ((cell.getCellType()) == (CELL_TYPE_STRING))) { if (cell.getStringCellValue().equalsIgnoreCase(\"null\")) { jsonRow.put(key, JSONObject.NULL); continue; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/1788/buggy-version/src.main.java.moe.imvery.utils.xlsx2json.ExcelParser.java", "BodyUseAPI": ["org.apache.poi.ss.usermodel.Cell.getStringCellValue()", "cell.getStringCellValue().equalsIgnoreCase(java.lang.String)"], "Fixed commit": "e640cfe8f2207038e35bba6e6eac0a29226c4cf4", "Url": "https://api.github.com/repos/noahzark/Xlsx2Json", "Date": "2016-06-04T17:05:36Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((vals.get(\"type\")) == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/4905/buggy-version/planner.src.main.java.edu.isi.wings.catalog.data.api.impl.kb.DataCreationKB.java", "BodyUseAPI": [], "Fixed commit": "cdd053e8b3c5314d8c2fa63dad20fef15814cdbd", "Url": "https://api.github.com/repos/KnowledgeCaptureAndDiscovery/wings", "Date": "2017-02-13T08:57:31Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ing.isEmpty()) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/3063/buggy-version/src.main.java.com.sk89q.craftbook.mechanics.ic.gates.world.items.AutomaticCrafter.java", "BodyUseAPI": [], "Fixed commit": "b2becadf75fcbaee8dc563aa16307987571c3d78", "Url": "https://api.github.com/repos/EngineHub/CraftBook", "Date": "2016-12-27T05:34:53Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((validator) != null) { if ((validator.isValid(cellEditor.getValue())) == null) validator.hideError(); else validator.showError(cellEditor); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/1992/buggy-version/swt-bean-widgets-core.src.main.java.com.magnetstreet.swt.beanwidget.datagrid2.editor.AbstractDataGridCellEditingSupport.java", "BodyUseAPI": [], "Fixed commit": "05de2a9177503a115cc054e8fa5cf217601c4bb9", "Url": "https://api.github.com/repos/martin1yness/swt-bean-widgets", "Date": "2011-07-12T22:35:31Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((validator) != null) validator.hideError();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/1992/buggy-version/swt-bean-widgets-core.src.main.java.com.magnetstreet.swt.beanwidget.datagrid2.editor.AbstractDataGridCellEditingSupport.java", "BodyUseAPI": [], "Fixed commit": "05de2a9177503a115cc054e8fa5cf217601c4bb9", "Url": "https://api.github.com/repos/martin1yness/swt-bean-widgets", "Date": "2011-07-12T22:35:31Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (document.equals(sk.stuba.fiit.perconik.eclipse.ui.Editors.getDocument(editor))) { return editor; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/926/buggy-version/sk.stuba.fiit.perconik.eclipse.src.sk.stuba.fiit.perconik.eclipse.ui.Editors.java", "BodyUseAPI": [], "Fixed commit": "5809da700d33cecb48b05459de3969ec828c60dd", "Url": "https://api.github.com/repos/perconik/perconik", "Date": "2015-03-27T17:43:34Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (viewer.equals(sk.stuba.fiit.perconik.eclipse.ui.Editors.getTextViewer(editor))) { return editor; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/926/buggy-version/sk.stuba.fiit.perconik.eclipse.src.sk.stuba.fiit.perconik.eclipse.ui.Editors.java", "BodyUseAPI": [], "Fixed commit": "5809da700d33cecb48b05459de3969ec828c60dd", "Url": "https://api.github.com/repos/perconik/perconik", "Date": "2015-03-27T17:43:34Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((imageChoosenUri) != null) { uploadImage(product_ID_Inserted); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/3701/buggy-version/app.src.main.java.enf.android.mysqlproductrecyclerview.Add_Product.java", "BodyUseAPI": [], "Fixed commit": "17b2358d2bab7f8ada4e962d2f023f98a16e9c4b", "Url": "https://api.github.com/repos/evanfonseca/MySQLProductRecyclerView", "Date": "2016-06-10T20:23:03Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((imageChoosenUri) != null) { try { mBitmap = MediaStore.Images.Media.getBitmap(this.getContentResolver(), imageChoosenUri); my_img_view.setImageBitmap(mBitmap); } catch (java.io.IOException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/3701/buggy-version/app.src.main.java.enf.android.mysqlproductrecyclerview.Add_Product.java", "BodyUseAPI": [], "Fixed commit": "17b2358d2bab7f8ada4e962d2f023f98a16e9c4b", "Url": "https://api.github.com/repos/evanfonseca/MySQLProductRecyclerView", "Date": "2016-06-10T20:23:03Z"},
{"Line": "=>308", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((edtContent.length()) == 0) { android.widget.Toast.makeText(this, \"\u5185\u5bb9\u4e0d\u80fd\u4e3a\u7a7a\", Toast.LENGTH_SHORT).show(); }else { java.lang.String content = edtContent.getText().toString(); if (org.cnodejs.android.md.storage.SettingShared.isEnableTopicSign(this)) { content += \"\\n\\n\" + (org.cnodejs.android.md.storage.SettingShared.getTopicSignContent(this)); } replyTopicAsyncTask(content); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/2407/buggy-version/app.src.main.java.org.cnodejs.android.md.activity.TopicActivity.java", "BodyUseAPI": ["edtContent.getText().toString()", "android.widget.EditText.getText()"], "Fixed commit": "fcc0da131036317ce0c612eafe17da94b6c55242", "Url": "https://api.github.com/repos/TakWolf/CNode-Material-Design", "Date": "2015-08-06T08:08:41Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((sourceUnit.equals(\"JPY\")) || (sourceUnit.equals(\"VND\"))) || (sourceUnit.equals(\"IDR\"))) || (sourceUnit.equals(\"KHR\"))) { sourceUnit = \"100 \" + sourceUnit; show_result *= 100.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/1042/buggy-version/ManalithBot.src.main.java.org.manalith.ircbot.plugin.curex.CurexRunner.java", "BodyUseAPI": [], "Fixed commit": "b1335d58cf3e6ed344d2403e6b896f5bcd51f529", "Url": "https://api.github.com/repos/darkcircle/ManalithBot", "Date": "2015-01-16T08:09:12Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (targetUnit.equals(\"KRW\")) { if ((((sourceUnit.equals(\"JPY\")) || (sourceUnit.equals(\"VND\"))) || (sourceUnit.equals(\"IDR\"))) || (sourceUnit.equals(\"KHR\"))) { sourceUnit = \"100 \" + sourceUnit; result *= 100.0; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/1042/buggy-version/ManalithBot.src.main.java.org.manalith.ircbot.plugin.curex.CurexRunner.java", "BodyUseAPI": [], "Fixed commit": "b1335d58cf3e6ed344d2403e6b896f5bcd51f529", "Url": "https://api.github.com/repos/darkcircle/ManalithBot", "Date": "2015-01-16T08:09:12Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (selector == 0) { monsterSetFaceHelper(v, R.drawable.grinsmile, 2); }else if (selector == 1) { monsterSetFaceHelper(v, R.drawable.smile, 2); }else if (selector == 2) { monsterSetFaceHelper(v, R.drawable.licksmile, 2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/5416/buggy-version/app.src.main.java.edu.csumb.hashmapsallday.hungrylittlemonsters.FeedMonster.java", "BodyUseAPI": [], "Fixed commit": "0e36ac294565312592a4e8d534eaaa20fe07ecd1", "Url": "https://api.github.com/repos/BRX0102/GrubQuest", "Date": "2016-11-06T17:43:32Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.concurrent.atomic.AtomicInteger.getAndIncrement()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (targetIndex < 1) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/8001/buggy-version/MPAnalyzer.src.jp.ac.osaka_u.ist.sdl.mpanalyzer.ModificationExtractionThread.java", "BodyUseAPI": [], "Fixed commit": "2ded101a64129b87087b8db3fd562f195a6e0e41", "Url": "https://api.github.com/repos/YoshikiHigo/MPAnalyzer", "Date": "2013-11-08T18:15:10Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isValidUser()) { android.content.Intent goHome = new android.content.Intent(this, com.example.akav.atom.HomeActivity.class); mUserName = ((android.widget.EditText) (findViewById(R.id.user_id))); userId = mUserName.getText().toString(); android.net.Uri userNameUri = android.net.Uri.parse(userId); goHome.setData(userNameUri); startActivity(goHome); }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/6817/buggy-version/app.src.main.java.com.example.akav.atom.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "018a896f410e79440a7fbeffdf1d6754572ddb5e", "Url": "https://api.github.com/repos/ATOMWR/ATOM", "Date": "2017-12-24T12:18:40Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((obj == null) || ((obj.getClass()) != (this.getClass()))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/2615/buggy-version/src.net.mrpaul.XA110.ps19.BytePlus.java", "BodyUseAPI": [], "Fixed commit": "4ad5f500c72ce96eaca2e73f525aa5f388f624d8", "Url": "https://api.github.com/repos/NoahGleason/ByteMarkov", "Date": "2016-12-06T16:05:24Z"},
{"Line": "=>723", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (economy) size_high = getXmlElement(thumbInfoData, \"size_low\"); else size_high = getXmlElement(thumbInfoData, \"size_high\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/6413/buggy-version/frontend.src.saccubus.net.NicoClient.java", "BodyUseAPI": [], "Fixed commit": "0469f45113843b4d8e94136bf897f767e7eba44b", "Url": "https://api.github.com/repos/Saccubus/Saccubus1", "Date": "2016-12-15T20:26:47Z"},
{"Line": "=>851", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (size_high > 0) log.println(((\"smile size: \" + (size_high >> 20)) + \"MiB\")); else log.println(\"bug? can't get smile size\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/6413/buggy-version/frontend.src.saccubus.ConvertWorker.java", "BodyUseAPI": ["saccubus.util.Logger.println(java.lang.String)"], "Fixed commit": "0469f45113843b4d8e94136bf897f767e7eba44b", "Url": "https://api.github.com/repos/Saccubus/Saccubus1", "Date": "2016-12-15T20:26:47Z"},
{"Line": "=>2118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((VideoTitle) == null) { log.println(\"bug! VideoTitle is Null.\"); setVideoTitleIfNull(file.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/6413/buggy-version/frontend.src.saccubus.ConvertWorker.java", "BodyUseAPI": [], "Fixed commit": "0469f45113843b4d8e94136bf897f767e7eba44b", "Url": "https://api.github.com/repos/Saccubus/Saccubus1", "Date": "2016-12-15T20:26:47Z"},
{"Line": "=>4208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (path.contains(Tag)) { path = path.replace(Tag, \"\"); if (path.startsWith(\"_\")) { path = path.substring(1); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/6413/buggy-version/frontend.src.saccubus.ConvertWorker.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "0469f45113843b4d8e94136bf897f767e7eba44b", "Url": "https://api.github.com/repos/Saccubus/Saccubus1", "Date": "2016-12-15T20:26:47Z"},
{"Line": "=>4034", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((name.startsWith(((VideoTag) + \"_\"))) || (name.startsWith(((VideoTag) + \"low_\")))) || (name.startsWith(((VideoTag) + \"dmc_\")))) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/6413/buggy-version/frontend.src.saccubus.ConvertWorker.java", "BodyUseAPI": [], "Fixed commit": "0469f45113843b4d8e94136bf897f767e7eba44b", "Url": "https://api.github.com/repos/Saccubus/Saccubus1", "Date": "2016-12-15T20:26:47Z"},
{"Line": "=>843", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["client.getSizeHigh().trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (size_high_str != null) { try { size_high = java.lang.Long.decode(size_high_str); } catch (java.lang.NumberFormatException e) { log.printStackTrace(e); size_high = 0; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/6413/buggy-version/frontend.src.saccubus.ConvertWorker.java", "BodyUseAPI": ["java.lang.Long.decode(java.lang.String)"], "Fixed commit": "0469f45113843b4d8e94136bf897f767e7eba44b", "Url": "https://api.github.com/repos/Saccubus/Saccubus1", "Date": "2016-12-15T20:26:47Z"},
{"Line": "=>977", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.max(long,long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (min_size > dmc_size) { log.println(\"dmc(S) \ufffd_\ufffdE\ufffd\ufffd\ufffd\ufffd\ufffd[\ufffdh\ufffd\ufffd\ufffd~(min_size > dmc_size)\"); sendtext(\"dmc(S) \ufffd_\ufffdE\ufffd\ufffd\ufffd\ufffd\ufffd[\ufffdh\ufffd\ufffd\ufffd~\"); dmcVideoFile = null; }else if (resume_size != dmc_size) { log.println(\"dmc(S) resume\ufffd\ufffd\ufffds!(resume_size != dmc_size)\"); sendtext(\"dmc(S) resume\ufffd\ufffd\ufffds!\"); log.println(((((\"dmc size: \" + (dmc_size >> 20)) + \"MiB, resumed size: \") + (resume_size >> 20)) + \"MiB\")); dmc_size = 0; }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/6413/buggy-version/frontend.src.saccubus.ConvertWorker.java", "BodyUseAPI": ["saccubus.util.Logger.println(java.lang.String)"], "Fixed commit": "0469f45113843b4d8e94136bf897f767e7eba44b", "Url": "https://api.github.com/repos/Saccubus/Saccubus1", "Date": "2016-12-15T20:26:47Z"},
{"Line": "=>994", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dmclowFile == null) dmclowFile = dmcVideoFile;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/6413/buggy-version/frontend.src.saccubus.ConvertWorker.java", "BodyUseAPI": [], "Fixed commit": "0469f45113843b4d8e94136bf897f767e7eba44b", "Url": "https://api.github.com/repos/Saccubus/Saccubus1", "Date": "2016-12-15T20:26:47Z"},
{"Line": "=>887", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dmclowFile == null) dmclowFile = dmcVideoFile;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/6413/buggy-version/frontend.src.saccubus.ConvertWorker.java", "BodyUseAPI": [], "Fixed commit": "0469f45113843b4d8e94136bf897f767e7eba44b", "Url": "https://api.github.com/repos/Saccubus/Saccubus1", "Date": "2016-12-15T20:26:47Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((folder) == null) folder = \".\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/6313/buggy-version/app.src.main.java.souch.smp.RowSong.java", "BodyUseAPI": [], "Fixed commit": "05ba0f1c6cc767d9601aaa39a7fa99795d94845f", "Url": "https://api.github.com/repos/souch/SMP", "Date": "2015-02-15T22:32:30Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.os.Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_MUSIC).getPath()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(musicDir.endsWith(java.io.File.separator))) musicDir += java.io.File.separator;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/6313/buggy-version/app.src.main.java.souch.smp.Settings.java", "BodyUseAPI": [], "Fixed commit": "05ba0f1c6cc767d9601aaa39a7fa99795d94845f", "Url": "https://api.github.com/repos/souch/SMP", "Date": "2015-02-15T22:32:30Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.os.Build.VERSION.SDK_INT) < (android.os.Build.VERSION_CODES.LOLLIPOP)) { builder.setSmallIcon(R.drawable.logo); }else { builder.setSmallIcon(R.drawable.logo_transparent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/818/buggy-version/vector.src.main.java.im.vector.util.NotificationUtils.java", "BodyUseAPI": [], "Fixed commit": "ff8dd20beba671df0b916faae8e643415b350da2", "Url": "https://api.github.com/repos/vector-im/riot-android", "Date": "2016-03-30T16:54:32Z"},
{"Line": "=>525", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (track instanceof my.triviagame.dal.TrackRow) { trackNum++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/1098/buggy-version/dbproject.src.my.triviagame.dal.DAL.java", "BodyUseAPI": [], "Fixed commit": "a79fbdb389bd93dd064fa385c3c0f5b72ea766ce", "Url": "https://api.github.com/repos/grzn/dbc", "Date": "2012-06-16T19:20:36Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isNumeric(java.lang.String.valueOf(mAmountEditText.getText()))) { new com.springwind.phone.newcurrencies.MainActivity.CurrencyConverterTask().execute(((com.springwind.phone.newcurrencies.MainActivity.URL_BASE) + (mKey))); }else { android.widget.Toast.makeText(this, \"Not a numeric value,try again.\", Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/2962/buggy-version/app.src.main.java.com.springwind.phone.newcurrencies.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "ddf44e3f0d30eaa617d0ea55ee374e5f452593df", "Url": "https://api.github.com/repos/userxie/MyCurrencies", "Date": "2017-12-08T10:29:01Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.getWhitespaceFollowedNode(com.puppycrawl.tools.checkstyle.api.DetailAST)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((whitespaceFollowedAst.getNextSibling()) == null) || ((whitespaceFollowedAst.getNextSibling().getType()) != (com.puppycrawl.tools.checkstyle.api.TokenTypes.ANNOTATIONS))) { final int whitespaceColumnNo = com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.getPositionAfter(whitespaceFollowedAst); final int whitespaceLineNo = whitespaceFollowedAst.getLineNo(); if (hasTrailingWhitespace(ast, whitespaceColumnNo, whitespaceLineNo)) { log(whitespaceLineNo, whitespaceColumnNo, com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.MSG_KEY, whitespaceFollowedAst.getText()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/4499/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.java", "BodyUseAPI": ["com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.getPositionAfter(com.puppycrawl.tools.checkstyle.api.DetailAST)", "com.puppycrawl.tools.checkstyle.api.DetailAST.getText()", "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.log(int,int,java.lang.String,whitespaceFollowedAst.getText())", "com.puppycrawl.tools.checkstyle.api.DetailAST.getLineNo()"], "Fixed commit": "dd297ce2c5051a8b0e68034f8372568df71736e4", "Url": "https://api.github.com/repos/sergileon/checkstyle", "Date": "2017-09-05T11:43:02Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((jArray.length()) == 0) return new org.json.JSONObject().toString();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/3611/buggy-version/ames-web-service.src.de.kp.ames.web.core.render.ScRenderer.java", "BodyUseAPI": [], "Fixed commit": "e64ba96484f5efaf39bc458ff7771e32d9bec7ef", "Url": "https://api.github.com/repos/skrusche63/AMES-Web-Service", "Date": "2012-08-27T11:18:05Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(checkMoveValidity())) { unmakeMove(capturedPiece, selectedPiece, target, sourceLocation); if ((checkingPiece) != null) select(checkingPiece); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/1950/buggy-version/src.com.petrifiednightmares.singularityChess.logic.Game.java", "BodyUseAPI": [], "Fixed commit": "d64931fe65b9af6d0dda8aed9d455ae01fb68112", "Url": "https://api.github.com/repos/razorstorm/SingularityChess", "Date": "2012-11-22T22:24:52Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["response.body()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (user == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/5334/buggy-version/app.src.main.java.com.fatel.mamtv1.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "3cacbb08312639608be27d411d61b0b96949cec6", "Url": "https://api.github.com/repos/oat9002/Move-Move-Alarm", "Date": "2016-07-23T12:23:42Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.geoserver.web.GeoServerApplication.get().getCatalog().getStyle(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (null == (style.getLegend())) { style.setLegend(org.geoserver.web.GeoServerApplication.get().getCatalog().getFactory().createLegend()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/731/buggy-version/src.web.core.src.main.java.org.geoserver.web.data.style.StyleDetachableModel.java", "BodyUseAPI": ["org.geoserver.catalog.StyleInfo.setLegend(org.geoserver.web.GeoServerApplication.get().getCatalog().getFactory().createLegend())"], "Fixed commit": "3bc607fcf5e6192954f5a157a0e643299d607ddd", "Url": "https://api.github.com/repos/geocent-yancy/geoserver", "Date": "2012-10-05T18:51:09Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mAdapter) != null) mAdapter.disableForegroundDispatch(this);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/4288/buggy-version/mSprayApp.src.edu.berkeley.cs160.Base.BaseMainActivity.java", "BodyUseAPI": [], "Fixed commit": "8ebd4ea57eef25ff055f9ba86dbe7aadde7d26da", "Url": "https://api.github.com/repos/ldanielw1/cs160-mSpray", "Date": "2013-05-05T00:09:15Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mAdapter) != null) mAdapter.enableForegroundDispatch(this, pendingIntent, null, null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/4288/buggy-version/mSprayApp.src.edu.berkeley.cs160.Base.BaseMainActivity.java", "BodyUseAPI": [], "Fixed commit": "8ebd4ea57eef25ff055f9ba86dbe7aadde7d26da", "Url": "https://api.github.com/repos/ldanielw1/cs160-mSpray", "Date": "2013-05-05T00:09:15Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (status == null) { throw new java.lang.IllegalArgumentException(\"status is null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/324/buggy-version/app.src.main.java.com.transitiasi.model.ShareInfo.java", "BodyUseAPI": [], "Fixed commit": "3c72fdc5b2e7944e51998323596fb5b8a09fea96", "Url": "https://api.github.com/repos/ionutst/transitappiasi", "Date": "2015-11-22T05:38:06Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (result.containsKey(item.getKeyword())) { result.put(item.getKeyword(), ((result.get(item.getKeyword())) + (item.getText()))); }else { result.put(item.getKeyword(), item.getText()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/2606/buggy-version/gallery.gallery-ejb.src.main.java.com.silverpeas.gallery.image.SanselanImageMetadataExtractor.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.put(item.getKeyword(),((result.get(item.getKeyword())) + (item.getText())))", "ImageMetadata.Item.getText()", "java.util.Map<java.lang.String, java.lang.String>.get(item.getKeyword())", "java.util.Map<java.lang.String, java.lang.String>.put(item.getKeyword(),item.getText())", "ImageMetadata.Item.getText()", "ImageMetadata.Item.getKeyword()", "ImageMetadata.Item.getKeyword()", "ImageMetadata.Item.getKeyword()"], "Fixed commit": "b14a7661f8f86eb3deaa657712832dead6b74f41", "Url": "https://api.github.com/repos/Silverpeas/Silverpeas-Components", "Date": "2011-11-17T14:18:26Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class<? extends ru.haruchan.notube.Main>.getResourceAsStream(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (iconStream == null) { throw new ru.haruchan.notube.ProcessingException(\"Icon not found\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/3744/buggy-version/src.main.java.ru.haruchan.notube.Main.java", "BodyUseAPI": [], "Fixed commit": "19daaa4a58f7b4203ac792d6fa6adbd4aa28577e", "Url": "https://api.github.com/repos/ypoluektovich/notube", "Date": "2011-09-09T01:46:13Z"},
{"Line": "=>328", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (tempButton == null) { android.util.Log.e(\"gatekeeper update()\", ((\"Gatekeeper server returned a door (\" + doorName) + \") I don't know about\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/8252/buggy-version/src.edu.rit.csh.agargiulo.Gatekeeper.GatekeeperActivity.java", "BodyUseAPI": [], "Fixed commit": "1e5e7cf7ca7c0d5142ae697c27000555e932b71f", "Url": "https://api.github.com/repos/agargiulo/gatekeeper-android", "Date": "2013-11-20T04:12:07Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (nickList.contains(nick)) { if (!(nickList.contains(newNick))) { es.udc.santiago.ClientHandler cH = this.nickList.get(nick); this.nickList.remove(nick); this.nickList.put(newNick, cH); return true; }else { return false; } }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/7746/buggy-version/2_chat_server.src.es.udc.santiago.model.DataStore.java", "BodyUseAPI": ["java.util.concurrent.ConcurrentHashMap<java.lang.String, es.udc.santiago.ClientHandler>.remove(java.lang.String)", "java.util.concurrent.ConcurrentHashMap<java.lang.String, es.udc.santiago.ClientHandler>.contains(java.lang.String)", "java.util.concurrent.ConcurrentHashMap<java.lang.String, es.udc.santiago.ClientHandler>.get(java.lang.String)"], "Fixed commit": "149505b4f41179669365f04164aac031e01b29d4", "Url": "https://api.github.com/repos/SantiMunin/MV-Coders-on-fire", "Date": "2012-07-05T22:35:25Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isRecording) { centerTouchUp(); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/5018/buggy-version/src.main.java.com.tzwm.deadalarm.CountDownSurfaceView.java", "BodyUseAPI": [], "Fixed commit": "2a1dbdbcb9e3a77ed6645c4d46d26a80c7458d75", "Url": "https://api.github.com/repos/tzwm/DeadAlarm", "Date": "2013-10-06T18:51:09Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Main.singleClickText) { Main.textfield.setText(\"\"); Main.singleClickText = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/2374/buggy-version/src.Main.java", "BodyUseAPI": [], "Fixed commit": "a6318737977b6ccd949e28f8e42fed889816dfb5", "Url": "https://api.github.com/repos/DerekAnton/Ebay-Scrapper", "Date": "2014-05-25T22:30:47Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((alignmentInput.get()) != null) { for (int i = 0; i < (getExternalNodes().size()); i++) getNode(i).setID(alignmentInput.get().getTaxaNames().get(i)); }else { for (int i = 0; i < (getExternalNodes().size()); i++) getNode(i).setID((\"t\" + i)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/3433/buggy-version/src.argbeast.model.SimulatedRecombinationGraph.java", "BodyUseAPI": ["getNode(i).setID(alignmentInput.get().getTaxaNames().get(i))", "alignmentInput.get().getTaxaNames()", "alignmentInput.get().getTaxaNames().get(int)", "argbeast.model.SimulatedRecombinationGraph.get()"], "Fixed commit": "8dbc6f881b7f0f4a7dc221d31d0caece893154d1", "Url": "https://api.github.com/repos/CompEvol/ARGBEAST", "Date": "2014-04-09T23:13:49Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((expression == null) || (expression.isEmpty())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/6518/buggy-version/src.main.java.ru.tehkode.permissions.PermissionEntity.java", "BodyUseAPI": [], "Fixed commit": "68bd2b00c89cc50ae3d68a5c9ab365b1f62e4de1", "Url": "https://api.github.com/repos/lycano/PermissionsEx", "Date": "2011-06-06T15:42:44Z"},
{"Line": "=>296", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (SpellCheck.changed.get(i)[1].equals(\"\")) { SpellCheck.changed.get(i)[1] = \"This word is spelled incorrectly, but we could not find a new word for this incorrect word. Please do not respell or reject this word.\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/6148/buggy-version/SpellCheck.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String[]>.get(int)"], "Fixed commit": "4540069c04eeb0f766897b6f26165de760af17ac", "Url": "https://api.github.com/repos/JFreud/spellCheck", "Date": "2017-01-17T02:24:11Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["seedu.taskboss.commons.core.UnmodifiableObservableList<seedu.taskboss.model.task.ReadOnlyTask>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (taskToMarkDone.getCategories().contains(Category.done)) { throw new seedu.taskboss.logic.commands.exceptions.CommandException(seedu.taskboss.logic.commands.MarkDoneCommand.ERROR_MARKED_TASK); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/5733/buggy-version/src.main.java.seedu.taskboss.logic.commands.MarkDoneCommand.java", "BodyUseAPI": [], "Fixed commit": "f30c124a7540d5796190c1cb24d5973c1654adb2", "Url": "https://api.github.com/repos/CS2103JAN2017-W14-B2/main", "Date": "2017-04-07T19:10:14Z"},
{"Line": "=>472", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dataType.equals(\"Boolean\")) { object = new java.lang.Boolean(false); }else { listener.error(\"Unsupported data type\"); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/2136/buggy-version/TTInterpreter.src.columbia.plt.tt.interpreter.Interpreter.java", "BodyUseAPI": [], "Fixed commit": "047dc00a03547383ff00a5e9251914d0083e3d80", "Url": "https://api.github.com/repos/mymichellle/TT", "Date": "2013-05-09T17:00:51Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ch.ffhs.esa.bewegungsmelder.helpers.KontaktDBHelper.getAllContactsNumbers()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((phoneNumbers.size()) > 0) { handleEmergencySMS(phoneNumbers.get(0)); }else { android.widget.Toast.makeText(context, \"KEIN KONTAKT ERFASST -> KEINE SMS GESENDET!\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/3076/buggy-version/src.ch.ffhs.esa.bewegungsmelder.activities.MainActivity.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.get(int)", "ch.ffhs.esa.bewegungsmelder.activities.MainActivity.LocationReceiver.handleEmergencySMS(java.lang.String)"], "Fixed commit": "f69fbcc1455d059044f1f799de966b5f46952c05", "Url": "https://api.github.com/repos/MichaelKohler/ESA", "Date": "2014-01-06T22:13:38Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mVisitVectorUrl) != null) { if (!(mVisitVectorUrl.contains(url))) { mVisitVectorUrl.add(url); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/5401/buggy-version/cachewebviewlib.src.main.java.ren.yale.android.cachewebviewlib.CacheWebViewClient.java", "BodyUseAPI": [], "Fixed commit": "c4f557d7903b2c28ebd76c8db61003bba9b841f1", "Url": "https://api.github.com/repos/yale8848/CacheWebView", "Date": "2017-12-06T10:52:20Z"},
{"Line": "=>359", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (name.getCurrentLocation().getCreatureList().contains(sphinx)) { if (sphinx.graduate(name)) { gameOn = false; break; } }else { java.lang.System.out.println(\"There is no Sphinx in here!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/2137/buggy-version/src.com.ioopm.Main.java", "BodyUseAPI": ["com.ioopm.Sphinx.graduate(com.ioopm.Avatar)"], "Fixed commit": "0c8f71f2e8ba6c613813fc6af81593e81d61190a", "Url": "https://api.github.com/repos/MartinJohaa/MUD", "Date": "2014-12-01T15:46:33Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(inventorySlots.get(1).getHasStack())) { ((net.minecraft.inventory.Slot) (inventorySlots.get(1))).putStack(inventorySlots.get(slotNum).getStack().splitStack(1)); if ((inventorySlots.get(slotNum).getStack().stackSize) == 0) { inventorySlots.set(slotNum, null); } return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/2108/buggy-version/src.main.java.rreeggkk.nuclearsciences.common.inventory.ContainerRTG.java", "BodyUseAPI": ["rreeggkk.nuclearsciences.common.inventory.ContainerRTG.get(int)", "rreeggkk.nuclearsciences.common.inventory.ContainerRTG.set(int,<nulltype>)", "inventorySlots.get(slotNum).getStack().splitStack(int)", "inventorySlots.get(slotNum).getStack()", "inventorySlots.get(slotNum).getStack()", "rreeggkk.nuclearsciences.common.inventory.ContainerRTG.get(int)", "((net.minecraft.inventory.Slot) (inventorySlots.get(1))).putStack(inventorySlots.get(slotNum).getStack().splitStack(1))", "rreeggkk.nuclearsciences.common.inventory.ContainerRTG.get(int)"], "Fixed commit": "6328468e9af826fa7f127318521e9eec789998a2", "Url": "https://api.github.com/repos/rreeggkk/NuclearSciences", "Date": "2016-08-28T01:29:38Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.math.BigInteger.subtract(java.math.BigInteger)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((absoluteMaximumToInsert.compareTo(java.math.BigInteger.valueOf(maxEdgesToAdd))) < 0) { maxEdgesToAdd = absoluteMaximumToInsert.intValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/185/buggy-version/src.dna.updates.generators.random.RandomEdgeAdditions.java", "BodyUseAPI": ["java.math.BigInteger.intValue()"], "Fixed commit": "bea61b60530c25016694bcd19b0670923469c0ce", "Url": "https://api.github.com/repos/BJahn/DNA", "Date": "2014-03-22T15:43:23Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((maxScroll) < 0) { maxScroll = 0; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/68/buggy-version/VegaLayoutManager.library.src.main.java.com.stone.vega.library.VegaLayoutManager.java", "BodyUseAPI": [], "Fixed commit": "413ef925713d1eaa14f9451110d0f6a8e2680edf", "Url": "https://api.github.com/repos/xmuSistone/VegaLayoutManager", "Date": "2017-09-25T01:27:29Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<java.lang.Double>.subList(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((subset.size()) > 1) { for (int i = 0; i < (subset.size()); i++) { org.eclipse.draw2d.geometry.Point p = fn.calculatePoint(subset.get(i)); if ((p.getDistance(last)) < 2) { org.dawnsci.plotting.draw2d.swtxy.util.Draw2DUtils.logger.debug(\"Removed point {} at parameter {}\", i, subset.get(i)); subset.remove((i--)); } last = p; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/2554/buggy-version/org.dawnsci.plotting.draw2d.src.org.dawnsci.plotting.draw2d.swtxy.util.Draw2DUtils.java", "BodyUseAPI": ["java.util.List<java.lang.Double>.get(int)", "java.util.List<java.lang.Double>.remove(int)", "org.dawnsci.plotting.draw2d.swtxy.util.PointFunction.calculatePoint(java.lang.Double)", "java.util.List<java.lang.Double>.get(int)", "org.slf4j.Logger.debug(java.lang.String,int,java.lang.Double)", "java.util.List<java.lang.Double>.size()"], "Fixed commit": "9ce4b81334df18b7be751a0c784fc8e7cff265d2", "Url": "https://api.github.com/repos/DawnScience/dawn-ui", "Date": "2014-03-06T17:54:58Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((_result) == null) && (resultRef instanceof org.apache.metamodel.util.LazyRef)) { throw new java.lang.RuntimeException(((org.apache.metamodel.util.LazyRef<?>) (resultRef)).getError()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/2288/buggy-version/api.src.main.java.org.datacleaner.api.AnalyzerResultFutureImpl.java", "BodyUseAPI": [], "Fixed commit": "b355132977378d13ffe7f3a96e708b2a672819e5", "Url": "https://api.github.com/repos/datacleaner/DataCleaner", "Date": "2015-04-24T07:33:28Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.lang.String, java.lang.String>.getKey()", "java.util.Map.Entry<java.lang.String, java.lang.String>.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((target != null) && (replacement != null)) { text = text.replace(target, replacement); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/6956/buggy-version/android-logger.src.main.java.software.rsquared.androidlogger.LoggerUtils.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "6236e8a0e95e1dc5cfc33b42db20407f30790df7", "Url": "https://api.github.com/repos/rSquared-software/AndroidLogger", "Date": "2017-09-06T19:12:40Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["software.rsquared.androidlogger.Level.name()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (levelName != null) { text = text.replace(Logger.LEVEL, levelName); text = text.replace(Logger.SHORT_LEVEL, levelName.substring(0, 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/6956/buggy-version/android-logger.src.main.java.software.rsquared.androidlogger.LoggerUtils.java", "BodyUseAPI": ["java.lang.String.replace(Logger.SHORT_LEVEL,java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.String.replace(Logger.LEVEL,java.lang.String)"], "Fixed commit": "6236e8a0e95e1dc5cfc33b42db20407f30790df7", "Url": "https://api.github.com/repos/rSquared-software/AndroidLogger", "Date": "2017-09-06T19:12:40Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.imagecropper.ImageCropperModule.getCurrentActivity()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (activity == null) { promise.reject(\"error\", \"Cannot find activity\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/1150/buggy-version/android.src.main.java.com.imagecropper.ImageCropperModule.java", "BodyUseAPI": [], "Fixed commit": "52cbb9ba838698e62b26a409644a588104ea103d", "Url": "https://api.github.com/repos/WitzHsiao/react-native-image-cropper", "Date": "2016-08-01T11:18:33Z"},
{"Line": "=>321", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (neighbors != null) { for (java.util.Map.Entry<java.lang.String, java.util.Map<edu.cmu.ml.rtw.generic.structure.WeightedStructureRelationBinary, java.lang.Double>> entry : neighbors.entrySet()) { for (java.util.Map.Entry<edu.cmu.ml.rtw.generic.structure.WeightedStructureRelationBinary, java.lang.Double> edge : entry.getValue().entrySet()) { edu.cmu.ml.rtw.generic.structure.WeightedStructureSequence seq = currentPath.clone(); seq.add(edge.getKey(), edge.getValue()); nextPaths.add(seq); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/6578/buggy-version/src.main.java.edu.cmu.ml.rtw.generic.structure.WeightedStructureGraph.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.util.Map<edu.cmu.ml.rtw.generic.structure.WeightedStructureRelationBinary, java.lang.Double>>.entrySet()"], "Fixed commit": "a0a4c6127173fb65632850fefc8673770d496a1d", "Url": "https://api.github.com/repos/cmunell/micro-util", "Date": "2016-03-29T06:12:56Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (diff > 240) { android.widget.Toast.makeText(this, \"Das Datum darf maximal 240 Tage in der Zukunft liegen\", Toast.LENGTH_LONG).show(); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/5983/buggy-version/app.src.main.java.de.android.fhwsapp.Timetable.AddSubject.java", "BodyUseAPI": [], "Fixed commit": "3f479a1df347b136eb9400a60c54c5ed4ffa29da", "Url": "https://api.github.com/repos/nicotin241/FhwsApp", "Date": "2017-09-07T08:26:02Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.jdt.core.compiler.IProblem.getArguments()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((args.length) > 0) { result = processing.app.Language.interpolate(\"editor.status.hiding_enclosing_type\", args[0]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/5451/buggy-version/java.src.processing.mode.java.pdex.ErrorMessageSimplifier.java", "BodyUseAPI": ["processing.app.Language.interpolate(java.lang.String,java.lang.String)"], "Fixed commit": "155e646d54cff2e1dfc60e60de5af4061b215dae", "Url": "https://api.github.com/repos/rzats/processing", "Date": "2016-02-28T12:54:36Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (shape2.isPlaying()) { shape1.start(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/417/buggy-version/app.src.main.java.mygames.lineball.Music.MusicHandler.java", "BodyUseAPI": [], "Fixed commit": "b4be6f97eca6328e67d63d1b2a8f04a18b0de66e", "Url": "https://api.github.com/repos/nicot95/LineBall", "Date": "2015-09-13T17:05:20Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (shape1.isPlaying()) { shape2.start(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/417/buggy-version/app.src.main.java.mygames.lineball.Music.MusicHandler.java", "BodyUseAPI": [], "Fixed commit": "b4be6f97eca6328e67d63d1b2a8f04a18b0de66e", "Url": "https://api.github.com/repos/nicot95/LineBall", "Date": "2015-09-13T17:05:20Z"},
{"Line": "=>361", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((snapshotItems[slot]) != null) insertCount = (itemStack.stackSize) - (snapshotCounts[slot]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/1881/buggy-version/src.com.jaquadro.minecraft.storagedrawers.block.tile.TileEntityDrawers.java", "BodyUseAPI": [], "Fixed commit": "603dd8e2ea4c3c430f31f81b1d60a2845377c11b", "Url": "https://api.github.com/repos/jaquadro/StorageDrawers", "Date": "2014-09-05T03:58:07Z"},
{"Line": "=>364", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (insertCount > 0) { int count = putItemsIntoSlot(slot, itemStack, insertCount); if ((count > 0) && (!(worldObj.isRemote))) worldObj.markBlockForUpdate(xCoord, yCoord, zCoord); }else if (insertCount < 0) { net.minecraft.item.ItemStack rmStack = takeItemsFromSlot(slot, (-insertCount)); if (((rmStack != null) && ((rmStack.stackSize) > 0)) && (!(worldObj.isRemote))) worldObj.markBlockForUpdate(xCoord, yCoord, zCoord); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/1881/buggy-version/src.com.jaquadro.minecraft.storagedrawers.block.tile.TileEntityDrawers.java", "BodyUseAPI": ["com.jaquadro.minecraft.storagedrawers.block.tile.TileEntityDrawers.takeItemsFromSlot(int,int)", "com.jaquadro.minecraft.storagedrawers.block.tile.TileEntityDrawers.putItemsIntoSlot(int,net.minecraft.item.ItemStack,int)"], "Fixed commit": "603dd8e2ea4c3c430f31f81b1d60a2845377c11b", "Url": "https://api.github.com/repos/jaquadro/StorageDrawers", "Date": "2014-09-05T03:58:07Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((org.eclipse.jdt.internal.core.SourceType) (o)).isLambda()) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/7865/buggy-version/org.eclipse.jdt.core.model.org.eclipse.jdt.internal.core.SourceType.java", "BodyUseAPI": [], "Fixed commit": "960798e16a7918e1d1ed1c67404eace672fe5461", "Url": "https://api.github.com/repos/eclipse/eclipse.jdt.core", "Date": "2015-01-20T16:34:53Z"},
{"Line": "=>844", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.os.UserManager.getUserInfo(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((name == null) && (info != null)) { name = java.lang.Integer.toString(info.id); }else if (info == null) { name = context.getString(R.string.unknown); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/2594/buggy-version/src.com.android.settings.applications.RunningState.java", "BodyUseAPI": ["java.lang.Integer.toString(info.id)"], "Fixed commit": "d454eb8b6ae62746845d66761cd1f4089c79db3d", "Url": "https://api.github.com/repos/Voyager2k/android_packages_apps_Settings", "Date": "2014-05-20T02:36:35Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gov.healthit.chpl.dao.DeveloperDAO.getTransparencyMapping(developer.getId(),certificationBody.getId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (mapping != null) { developer.setTransparencyAttestation(mapping.getTransparencyAttestation()); developer.setTransparencyAttestationUrl(mapping.getTransparencyAttestationUrl()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/358/buggy-version/chpl.chpl-service.src.main.java.gov.healthit.chpl.certifiedProduct.validation.CertifiedProductValidatorImpl.java", "BodyUseAPI": ["gov.healthit.chpl.dto.DeveloperDTO.setTransparencyAttestation(mapping.getTransparencyAttestation())", "gov.healthit.chpl.dto.DeveloperDTO.setTransparencyAttestationUrl(mapping.getTransparencyAttestationUrl())", "gov.healthit.chpl.dto.DeveloperACBMapDTO.getTransparencyAttestation()", "gov.healthit.chpl.dto.DeveloperACBMapDTO.getTransparencyAttestationUrl()"], "Fixed commit": "808a85a5335967f0100bc8f2a111654e4466c2b9", "Url": "https://api.github.com/repos/chpladmin/chpl-api", "Date": "2016-03-04T15:09:05Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == 0) { for (int j = 0; j < 5; j++) extraInfo[j] = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/6919/buggy-version/app.src.main.java.com.yzq.android.experimentnine.Activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "bc4097a503bf21267f7e19c21bb2f1fd31743bb8", "Url": "https://api.github.com/repos/Yzhaoqi/ExperimentNine", "Date": "2016-11-29T11:25:57Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((argList.size()) == 1) { return argList.get(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/4628/buggy-version/nars_java.nars.language.Conjunction.java", "BodyUseAPI": ["java.util.ArrayList<nars.language.Term>.get(int)"], "Fixed commit": "5c836e293b26fee149fa554b1ef9cfa7eed1f5c2", "Url": "https://api.github.com/repos/opennars/opennars", "Date": "2014-07-20T03:05:50Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (argList.isEmpty()) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/4628/buggy-version/nars_java.nars.language.Conjunction.java", "BodyUseAPI": [], "Fixed commit": "5c836e293b26fee149fa554b1ef9cfa7eed1f5c2", "Url": "https://api.github.com/repos/opennars/opennars", "Date": "2014-07-20T03:05:50Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ca.owenpeterson.twittegorize.data.TweetDAO.getAllTweets()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((tweets.size()) > 0) { tweet = tweets.get(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/3224/buggy-version/app.src.main.java.ca.owenpeterson.twittegorize.data.TweetDAO.java", "BodyUseAPI": ["java.util.List<ca.owenpeterson.twittegorize.models.Tweet>.get(int)"], "Fixed commit": "d79c8d195c87e123e7849c280f79965ef3fac454", "Url": "https://api.github.com/repos/opeterson/Twittegorize", "Date": "2016-02-11T01:59:34Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ca.owenpeterson.twittegorize.data.TweetManager.getLatestTweet()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (null != latestTweet) { latestTweetId = latestTweet.getTweetId(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/3224/buggy-version/app.src.main.java.ca.owenpeterson.twittegorize.views.fragments.TwitterFeedFragment.java", "BodyUseAPI": ["ca.owenpeterson.twittegorize.models.Tweet.getTweetId()"], "Fixed commit": "d79c8d195c87e123e7849c280f79965ef3fac454", "Url": "https://api.github.com/repos/opeterson/Twittegorize", "Date": "2016-02-11T01:59:34Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (item != 0) { if ((event.getItem().getTypeId()) == item) { if (worldConfig.lightningEnable) { org.bukkit.Location pos = player.getTargetBlock(null, 120).getLocation(); if ((action.equals(action.LEFT_CLICK_BLOCK)) || (action.equals(Action.LEFT_CLICK_AIR))) { for (int i = 0; i < count; i++) { world.strikeLightning(pos); } }else if ((action.equals(Action.RIGHT_CLICK_BLOCK)) || (action.equals(Action.RIGHT_CLICK_AIR))) { for (int i = 0; i < count; i++) { world.strikeLightningEffect(pos); } } }else { player.sendMessage(((org.bukkit.ChatColor.RED) + (configManager.Lightning_is_disabled))); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/8087/buggy-version/com.halvors.WeatherControl.listeners.WeatherControlPlayerListener.java", "BodyUseAPI": [], "Fixed commit": "68ce3fa44deb8c9117d9a9efefa3c18c2f7b888c", "Url": "https://api.github.com/repos/halvors/WeatherControl", "Date": "2011-06-05T15:18:41Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((table.getLength()) == 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/6421/buggy-version/fontbox.src.main.java.org.apache.fontbox.ttf.TTFParser.java", "BodyUseAPI": [], "Fixed commit": "968011b0883d07b0cd426058f94713fc7ba21480", "Url": "https://api.github.com/repos/veraPDF/veraPDF-pdfbox", "Date": "2015-12-06T10:17:49Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.fontbox.ttf.TTFParser.readTableDirectory(org.apache.fontbox.ttf.TrueTypeFont,org.apache.fontbox.ttf.TTFDataStream)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (table != null) { font.addTable(table); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/6421/buggy-version/fontbox.src.main.java.org.apache.fontbox.ttf.TTFParser.java", "BodyUseAPI": ["org.apache.fontbox.ttf.TrueTypeFont.addTable(org.apache.fontbox.ttf.TTFTable)"], "Fixed commit": "968011b0883d07b0cd426058f94713fc7ba21480", "Url": "https://api.github.com/repos/veraPDF/veraPDF-pdfbox", "Date": "2015-12-06T10:17:49Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.mikesantiago.javatextengine.Core.StateManager.game) != null) return com.mikesantiago.javatextengine.Core.StateManager.game.GetPlayer(); else return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/3467/buggy-version/src.com.mikesantiago.javatextengine.Core.StateManager.java", "BodyUseAPI": [], "Fixed commit": "170c5875692abaa45784417ea19fb330013d93ad", "Url": "https://api.github.com/repos/suicvne/JavaRPGEngine", "Date": "2015-06-20T21:33:04Z"},
{"Line": "=>343", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((playerX != 0) || (playerY != 0)) rot = java.lang.Math.atan((playerX / playerY));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/1081/buggy-version/SpaghettiWars.src.gamecomponent.Model.java", "BodyUseAPI": ["java.lang.Math.atan(double)"], "Fixed commit": "d264c2475f324a9ce95a250dd54a822730afa48b", "Url": "https://api.github.com/repos/Xiaoming94/epicFoodWarGameProject", "Date": "2014-04-28T11:23:31Z"},
{"Line": "=>1194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mDailyStats.getReps()) >= 10) && ((mDailyStats.getAverageTime()) > 0)) { return getETA(mFailedSoonCount, mRevCount, mNewCountToday, false); }else if ((mGlobalStats.getAverageTime()) > 0) { return getETA(mFailedSoonCount, mRevCount, mNewCountToday, true); }else { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/6784/buggy-version/src.com.ichi2.anki.Deck.java", "BodyUseAPI": [], "Fixed commit": "752aa8e4ca1f11adcf8e0a16b6b336bf5cd0998a", "Url": "https://api.github.com/repos/flerda/Anki-Android", "Date": "2011-03-25T08:33:56Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (simpleStringFilter.isIgnoreCase()) { property = cb.lower(property); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/4881/buggy-version/frontend.src.main.java.cz.cuni.mff.xrg.odcs.frontend.container.VaadinFilterTranslator.java", "BodyUseAPI": [], "Fixed commit": "e3b4352d7b6db5d49b1718404e336553a54150bd", "Url": "https://api.github.com/repos/UnifiedViews/Core", "Date": "2015-06-04T14:51:23Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.sencha.gxt.widget.core.client.event.SubmitCompleteEvent.getResults()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (com.google.common.base.Strings.isNullOrEmpty(results2)) { org.iplantc.de.commons.client.info.IplantAnnouncer.getInstance().schedule(new org.iplantc.de.commons.client.info.ErrorAnnouncementConfig(appearance.fileUploadsFailed(com.google.common.collect.Lists.newArrayList(field.getValue())))); }else { java.lang.String results = com.sencha.gxt.core.client.util.Format.stripTags(results2); com.google.web.bindery.autobean.shared.Splittable split = com.google.web.bindery.autobean.shared.impl.StringQuoter.split(results); if (split == null) { org.iplantc.de.commons.client.info.IplantAnnouncer.getInstance().schedule(new org.iplantc.de.commons.client.info.ErrorAnnouncementConfig(appearance.fileUploadsFailed(com.google.common.collect.Lists.newArrayList(field.getValue())))); }else { if ((split.isUndefined(\"file\")) || ((split.get(\"file\")) == null)) { field.markInvalid(appearance.fileUploadsFailed(com.google.common.collect.Lists.newArrayList(field.getValue()))); org.iplantc.de.commons.client.info.IplantAnnouncer.getInstance().schedule(new org.iplantc.de.commons.client.info.ErrorAnnouncementConfig(appearance.fileUploadsFailed(com.google.common.collect.Lists.newArrayList(field.getValue())))); }else { eventBus.fireEvent(new org.iplantc.de.diskResource.client.events.FileUploadedEvent(uploadDest, field.getValue(), results)); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/4532/buggy-version/ui.de-lib.src.main.java.org.iplantc.de.diskResource.client.views.dialogs.SimpleFileUploadDialog.java", "BodyUseAPI": ["com.sencha.gxt.core.client.util.Format.stripTags(java.lang.String)"], "Fixed commit": "9450e94f95b5923045a4f7f5833741f915cbe80c", "Url": "https://api.github.com/repos/cyverse-archive/DE", "Date": "2016-03-02T17:23:38Z"},
{"Line": "=>362", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((options.contains(java.nio.file.StandardOpenOption.CREATE_NEW)) && (this.fs.exists(path))) { throw new java.nio.file.FileAlreadyExistsException(path.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/2571/buggy-version/src.main.java.hdfs.jsr203.HadoopFileSystem.java", "BodyUseAPI": ["java.nio.file.Path.toString()"], "Fixed commit": "9b3488e75541b99ad1bf6d8656782ea0254c480b", "Url": "https://api.github.com/repos/damiencarol/jsr203-hadoop", "Date": "2015-03-04T10:08:41Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.xmpbox.schema.DublinCoreSchema.getCreators()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (buffer != null) { org.verapdf.model.tools.XMPChecker.putProperty(properties, org.verapdf.model.tools.XMPChecker.AUTHOR, buffer.toArray(new java.lang.String[buffer.size()])); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/3579/buggy-version/model-implementation.src.main.java.org.verapdf.model.tools.XMPChecker.java", "BodyUseAPI": ["java.util.List<java.lang.String>.size()", "org.verapdf.model.tools.XMPChecker.putProperty(java.util.Map<java.lang.String, java.lang.Object>,java.lang.String,java.lang.String[])", "java.util.List<java.lang.String>.toArray(java.lang.String[])"], "Fixed commit": "f30b787f4f3f1b209c805dc9cd9e944d9e113a8d", "Url": "https://api.github.com/repos/veraPDF/veraPDF-library", "Date": "2015-07-13T07:51:54Z"},
{"Line": "=>335", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!flag) course = courses_of_today.get(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/5040/buggy-version/app.src.main.java.com.example.aitongji.Home.Home_Recycler_Adapter.java", "BodyUseAPI": [], "Fixed commit": "f0112c2b4e42d870b4d1d6877205abc14a2d7b38", "Url": "https://api.github.com/repos/Novemser/iTongJi-App", "Date": "2016-04-26T13:37:07Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((harvestName == null) || (harvestName.isEmpty())) { horizontal.icon(mcjty.theoneprobe.apiimpl.providers.HarvestInfoTools.ICONS, 16, 0, 16, 16, iconStyle).text(((net.minecraft.util.text.TextFormatting.YELLOW) + (harvestTool != null ? harvestTool : \"No tool\"))); }else { horizontal.icon(mcjty.theoneprobe.apiimpl.providers.HarvestInfoTools.ICONS, 16, 0, 16, 16, iconStyle).text((((((net.minecraft.util.text.TextFormatting.YELLOW) + (harvestTool != null ? harvestTool : \"No tool\")) + \" (\") + harvestName) + \")\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/8947/buggy-version/src.main.java.mcjty.theoneprobe.apiimpl.providers.HarvestInfoTools.java", "BodyUseAPI": ["horizontal.icon(mcjty.theoneprobe.apiimpl.providers.HarvestInfoTools.ICONS, 16, 0, 16, 16, iconStyle).text((((((net.minecraft.util.text.TextFormatting.YELLOW) + (harvestTool != null ? harvestTool : \"No tool\")) + \" (\") + harvestName) + \")\"))"], "Fixed commit": "b17af2af86f647458aa4177c1c9c6eaa6d047c8a", "Url": "https://api.github.com/repos/McJtyMods/TheOneProbe", "Date": "2016-11-02T14:13:53Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fr.valtech.bet.service.match.MatchService.findByLevel(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((matches != null) && ((matches.size()) > 0)) { mav.addObject(\"matches\", matches); mav.addObject(\"matchLevel\", ((matches.get(0)) == null ? \"\" : matches.get(0).getMatchLevel().getLabel())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/8674/buggy-version/src.main.java.fr.valtech.bet.web.calendar.CalendarController.java", "BodyUseAPI": ["java.util.List<fr.valtech.bet.domain.model.match.Match>.get(int)", "matches.get(0).getMatchLevel().getLabel()", "matches.get(0).getMatchLevel()", "org.springframework.web.servlet.ModelAndView.addObject(java.lang.String,java.util.List<fr.valtech.bet.domain.model.match.Match>)", "java.util.List<fr.valtech.bet.domain.model.match.Match>.get(int)", "org.springframework.web.servlet.ModelAndView.addObject(java.lang.String,((matches.get(0)) == null ? \"\" : matches.get(0).getMatchLevel().getLabel()))"], "Fixed commit": "2e13dc91039f2860ac5d2bf943a3752a99fffc5e", "Url": "https://api.github.com/repos/anthonycoulon/bet", "Date": "2016-06-02T16:50:20Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (results.isEmpty()) return new com.example.stocks.core.Money(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/8257/buggy-version/src.server.java.com.example.stocks.infrastructure.yahoo.YahooStockQuote.java", "BodyUseAPI": [], "Fixed commit": "9958cab8e280035ec3e6f6fa66e96a89d4724056", "Url": "https://api.github.com/repos/tobyweston/essential_acceptance_testing_code", "Date": "2013-03-15T15:45:09Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(((com.aekan.navya.lpgbooking.LPGApplication) (getApplication())).isSingletonRun)) { ((com.aekan.navya.lpgbooking.LPGApplication) (getApplication())).LPG_AlertBoxInstantiate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/2940/buggy-version/app.src.main.java.com.aekan.navya.lpgbooking.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "f91d2292804ce61e183af711f42b5541c1ac4834", "Url": "https://api.github.com/repos/arun-r80/LPGBooking", "Date": "2017-04-11T12:26:39Z"},
{"Line": "=>653", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.agg.application.dao.AdminAdjustmentDAO.findOne(quote.getId().getQuoteId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((adminAdjustment.getInceptionDate()) != null) { reportDO.setInceptionDate(com.agg.application.service.impl.QuoteServiceImpl.dateFormat.format(adminAdjustment.getInceptionDate())); }else { reportDO.setInceptionDate(com.agg.application.service.impl.QuoteServiceImpl.dateFormat.format(new java.util.Date())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/175/buggy-version/src.main.java.com.agg.application.service.impl.QuoteServiceImpl.java", "BodyUseAPI": ["java.text.SimpleDateFormat.format(adminAdjustment.getInceptionDate())", "com.agg.application.entity.AdminAdjustment.getInceptionDate()", "com.agg.application.model.ReportDO.setInceptionDate(java.lang.String)"], "Fixed commit": "ed9d919151fe8fe42d20fdecb95c049cb12df160", "Url": "https://api.github.com/repos/bidnfix/agg", "Date": "2017-04-13T19:26:05Z"},
{"Line": "=>659", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.agg.application.dao.AdminAdjustmentDAO.findOne(quote.getId().getQuoteId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((adminAdjustment.getExpirationDate()) != null) { reportDO.setExpirationDate(com.agg.application.service.impl.QuoteServiceImpl.dateFormat.format(adminAdjustment.getExpirationDate())); }else { if ((quote.getManfExpired()) == 1) { java.util.Calendar cal = java.util.Calendar.getInstance(); if ((adminAdjustment.getInceptionDate()) != null) { cal.setTime(adminAdjustment.getInceptionDate()); }else { cal.setTime(new java.util.Date()); } cal.add(java.util.Calendar.MONTH, coverageTerm); reportDO.setExpirationDate(com.agg.application.service.impl.QuoteServiceImpl.dateFormat.format(cal.getTime())); }else { int manfCoverageTerm = 0; if ((quote.getCoverageType()) != null) { if (quote.getCoverageType().equalsIgnoreCase(\"PT\")) { manfCoverageTerm = quote.getPtMonths(); }else if (quote.getCoverageType().equalsIgnoreCase(\"PH\")) { manfCoverageTerm = quote.getHMonths(); }else if (quote.getCoverageType().equalsIgnoreCase(\"PL\")) { manfCoverageTerm = quote.getMachineMonths(); } int finalCoverageTerm = coverageTerm - manfCoverageTerm; java.util.Calendar cal = java.util.Calendar.getInstance(); cal.setTime(quote.getManfEndDate()); cal.add(java.util.Calendar.MONTH, finalCoverageTerm); reportDO.setExpirationDate(com.agg.application.service.impl.QuoteServiceImpl.dateFormat.format(cal.getTime())); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/175/buggy-version/src.main.java.com.agg.application.service.impl.QuoteServiceImpl.java", "BodyUseAPI": ["java.text.SimpleDateFormat.format(adminAdjustment.getExpirationDate())", "com.agg.application.model.ReportDO.setExpirationDate(java.lang.String)", "com.agg.application.entity.AdminAdjustment.getInceptionDate()", "com.agg.application.entity.AdminAdjustment.getInceptionDate()", "java.util.Calendar.setTime(adminAdjustment.getInceptionDate())", "com.agg.application.entity.AdminAdjustment.getExpirationDate()"], "Fixed commit": "ed9d919151fe8fe42d20fdecb95c049cb12df160", "Url": "https://api.github.com/repos/bidnfix/agg", "Date": "2017-04-13T19:26:05Z"},
{"Line": "=>690", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.agg.application.dao.AdminAdjustmentDAO.findOne(quote.getId().getQuoteId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((adminAdjustment.getExpirationHours()) > 0) { reportDO.setExpirationHours(adminAdjustment.getExpirationHours()); }else { if ((quote.getManfExpired()) == 1) { reportDO.setExpirationHours((coverageHours + (quote.getMachineMeterHours()))); }else { reportDO.setExpirationHours(coverageHours); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/175/buggy-version/src.main.java.com.agg.application.service.impl.QuoteServiceImpl.java", "BodyUseAPI": ["com.agg.application.entity.AdminAdjustment.getExpirationHours()", "com.agg.application.model.ReportDO.setExpirationHours(adminAdjustment.getExpirationHours())"], "Fixed commit": "ed9d919151fe8fe42d20fdecb95c049cb12df160", "Url": "https://api.github.com/repos/bidnfix/agg", "Date": "2017-04-13T19:26:05Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["algorithms.RabinKarpSubstringSearch.hash(java.lang.String,int)", "algorithms.RabinKarpSubstringSearch.hash(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (patternHash == textHash) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/3891/buggy-version/src.main.java.algorithms.RabinKarpSubstringSearch.java", "BodyUseAPI": [], "Fixed commit": "8f9ff42240c05cabb76b6a2747c31e35ab7dd391", "Url": "https://api.github.com/repos/fredyw/algorithms", "Date": "2015-10-16T05:53:59Z"},
{"Line": "=>350", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (powerType == (org.powertac.common.enumerations.PowerType.ELECTRIC_VEHICLE)) { double storageCapacity = 0; double chargingCapacity = 0; for (org.powertac.evcustomer.customers.Car car : cars) { storageCapacity = java.lang.Math.max(storageCapacity, car.getMaxCapacity()); chargingCapacity = java.lang.Math.max(chargingCapacity, car.getHomeCharging()); } customerInfo = customerInfo.withControllableKW((-chargingCapacity)); customerInfo = customerInfo.withUpRegulationKW((-chargingCapacity)); customerInfo = customerInfo.withDownRegulationKW(chargingCapacity); customerInfo = customerInfo.withStorageCapacity(storageCapacity); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/2215/buggy-version/src.main.java.org.powertac.evcustomer.customers.EvSocialClass.java", "BodyUseAPI": [], "Fixed commit": "b87bd58ff1cf2c86097134570f2b6d67e539210b", "Url": "https://api.github.com/repos/powertac/evcustomer", "Date": "2014-05-22T16:07:28Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getTargetUCS()) <= 0) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/349/buggy-version/SimpleAdx.src.adx-agnet.UcsBidder.java", "BodyUseAPI": [], "Fixed commit": "8efb8d292bc1aaa788430795cd56c78f9fdb98c7", "Url": "https://api.github.com/repos/shayBarel/AdxSadna", "Date": "2016-04-22T13:11:04Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (this.entity.matches(\"\\\\bmovies\\\\b\")) { java.lang.System.out.println(\"yes movies\"); this.entity = this.entity.replaceAll(\"movies\", \"films\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/8163/buggy-version/src.wseproject.query.StructQueryProcessor.java", "BodyUseAPI": [], "Fixed commit": "3da596e5fd21962b3643d5aaf21366e53dd8c311", "Url": "https://api.github.com/repos/saliahmed86/WSE_Project", "Date": "2014-12-15T11:32:53Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (refDoc == null) { java.lang.System.err.println(((\"Problem with link, no refernce found for {\" + content) + \"}\")); return \"-- INVALID -- \"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/6844/buggy-version/src.main.java.org.cacert.policy.HTMLSynthesizer.java", "BodyUseAPI": [], "Fixed commit": "07098f7341377d151217fb0c9fa7908b192a8592", "Url": "https://api.github.com/repos/yellowant/cacert-policy-parser", "Date": "2016-02-14T08:10:10Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(backPointer < prevRead)) { java.lang.System.out.printf(\"************************** ERROR/TODO: Backpointer error in stream %s: backPointer %d prevRead %d\\n\", streamID.toString(), backPointer, prevRead); return resolvedBackpointers; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/1232/buggy-version/src.main.java.org.corfudb.runtime.view.StreamView.java", "BodyUseAPI": ["java.io.PrintStream.printf(java.lang.String,java.lang.String,long,long)"], "Fixed commit": "5e565ceef6d66ad8f4f8fa51851e36266995c28b", "Url": "https://api.github.com/repos/slfritchie/CorfuDB", "Date": "2016-08-24T22:14:06Z"},
{"Line": "=>1089", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((line.charAt(0)) == '\\r') line = line.substring(1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/6856/buggy-version/app.src.main.java.com.postech.isb.util.IsbSession.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "4666635432d8994b75b7b7c74c965a74fc52b3d4", "Url": "https://api.github.com/repos/clover3/isb", "Date": "2017-01-12T13:22:47Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((runtime) != null) { runtime.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/8577/buggy-version/src.com.xmlcalabash.drivers.Main.java", "BodyUseAPI": [], "Fixed commit": "793ca03430eefe18065187a5bb1fc678c8f42b49", "Url": "https://api.github.com/repos/rdeltour/xmlcalabash1", "Date": "2014-09-11T19:31:57Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value < 290) { trigger = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/7642/buggy-version/java.no.nordicsemi.android.nrftoolbox.hrs.HRSActivity.java", "BodyUseAPI": [], "Fixed commit": "653e6de54e39b3d86cd4e53167b2c6763ee78b31", "Url": "https://api.github.com/repos/JihoonAndyKim/MoyoAndroid", "Date": "2017-02-23T15:22:38Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((tmp.length) >= 2) { abs[i] = java.lang.Integer.parseInt(tmp[1]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/836/buggy-version/app.src.main.java.com.example.sriramhariharan.cyfallsapp2016.ClssPkg.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "4bc1733de94c14ea86094f8ac1373d13922f3f4d", "Url": "https://api.github.com/repos/MZX102208/CyFallsApp", "Date": "2017-01-04T01:09:36Z"},
{"Line": "=>723", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((trimLabel.length()) == 0) && (((pi != null) && (!(pi.isBlankPreserved()))) && (!(org.zkoss.zk.ui.metainfo.Parser.isNativeText(pi))))) continue; else if ((label.trim().isEmpty()) && (!isAllBlankPreserved)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/3540/buggy-version/zk.src.org.zkoss.zk.ui.metainfo.Parser.java", "BodyUseAPI": [], "Fixed commit": "ed730959b6dfdc94e6677587a57eb9c1f5acc97b", "Url": "https://api.github.com/repos/DevChu/zk", "Date": "2015-05-19T04:34:45Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.URL.toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(path.endsWith(\"/\"))) { path += \"/\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/6407/buggy-version/acs-core.src.main.java.com.arrow.acs.ManifestUtils.java", "BodyUseAPI": [], "Fixed commit": "23a11d1e35ed1bf004bfa0695be2c5cc85afdae4", "Url": "https://api.github.com/repos/arrow-acs/acs-sdk-java", "Date": "2017-10-27T20:19:09Z"},
{"Line": "=>549", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (playerName == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/239/buggy-version/VotingPlugin.src.com.Ben12345rocks.VotingPlugin.Utils.java", "BodyUseAPI": [], "Fixed commit": "6dfb6959e92089a6b4c7a41415f09bd72e3f4dcf", "Url": "https://api.github.com/repos/Ben12345rocks/VotingPlugin", "Date": "2016-07-21T18:19:55Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isFull())) { result = super.offer(e); if (result) { this.size.incrementAndGet(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/3862/buggy-version/bonecp.src.main.java.com.jolbox.boneop.BoundedLinkedTransferQueue.java", "BodyUseAPI": [], "Fixed commit": "3fff3388d2894ceda877e683053db86b4562d015", "Url": "https://api.github.com/repos/georgecao/bonecp", "Date": "2013-11-19T08:53:45Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.exchange.investorassistant.content.data.Deal.getDealType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (dtype == (Deal.DealType.purchase)) { _pdao.remove(pitem, _selectedAccountId); }else { _pdao.insert(pitem, _selectedAccountId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/762/buggy-version/app.src.main.java.com.exchange.investorassistant.ui.AddDealActivity.java", "BodyUseAPI": [], "Fixed commit": "4449dcab55ca509a800fbb5d8ce31ae10f976565", "Url": "https://api.github.com/repos/diman4ik/InvestorAssistant", "Date": "2016-05-25T13:29:52Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.powermatcher.fpai.agents.FpaiAgent.getLastBidUpdate()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (lastBidUpdate == null) { net.powermatcher.fpai.agents.LOGGER.info(\"Ignoring price update while no bid has been sent\"); }else if ((lastBidUpdate.getBidNumber()) != (priceUpdate.getBidNumber())) { net.powermatcher.fpai.agents.LOGGER.info(\"Ignoring price update on old bid (lastBid={} priceUpdate={})\", lastBidUpdate.getBidNumber(), priceUpdate.getBidNumber()); }else { synchronized(lock) { handlePriceUpdate(priceUpdate.getPrice()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/1056/buggy-version/net.powermatcher.fpai.controller.src.net.powermatcher.fpai.agents.FpaiAgent.java", "BodyUseAPI": ["net.powermatcher.fpai.agents.LOGGER.info(java.lang.String,lastBidUpdate.getBidNumber(),priceUpdate.getBidNumber())", "net.powermatcher.api.messages.BidUpdate.getBidNumber()", "net.powermatcher.api.messages.BidUpdate.getBidNumber()"], "Fixed commit": "c4a4d6d4d2200a7cb38a81039d21bdafd24458ae", "Url": "https://api.github.com/repos/flexiblepower/fpai-apps", "Date": "2016-03-02T11:55:28Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (publishBid) { publishBid(bid); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/1056/buggy-version/net.powermatcher.fpai.controller.src.net.powermatcher.fpai.agents.FpaiAgent.java", "BodyUseAPI": [], "Fixed commit": "c4a4d6d4d2200a7cb38a81039d21bdafd24458ae", "Url": "https://api.github.com/repos/flexiblepower/fpai-apps", "Date": "2016-03-02T11:55:28Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ints.contains(46)) { java.lang.System.out.println(\"46 should not be present!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/2934/buggy-version/labs.ch01.new.com.example.cs3102.Main.java", "BodyUseAPI": [], "Fixed commit": "2f5956d533ee19224da5e00ac1d78db6ffad12de", "Url": "https://api.github.com/repos/zedr/2017-cs3102-java", "Date": "2017-11-11T18:29:51Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ints.contains(0)) { java.lang.System.out.println(\"0 should not be present!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/2934/buggy-version/labs.ch01.new.com.example.cs3102.Main.java", "BodyUseAPI": [], "Fixed commit": "2f5956d533ee19224da5e00ac1d78db6ffad12de", "Url": "https://api.github.com/repos/zedr/2017-cs3102-java", "Date": "2017-11-11T18:29:51Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)", "java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)", "java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (((id == null) || (pin == null)) || (name == null)) { throw new org.ow2.chameleon.fuchsia.core.exceptions.BinderException(\"Not enough information provided to create GPIO Importer\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/6018/buggy-version/importers.raspberrypi.src.main.java.org.ow2.chameleon.fuchsia.raspberry.pi.internal.GPIOPojo.java", "BodyUseAPI": [], "Fixed commit": "69d2ce2346572a96eabf3b024d6f933707b09950", "Url": "https://api.github.com/repos/ow2-chameleon/fuchsia", "Date": "2014-03-03T14:06:26Z"},
{"Line": "=>560", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(fName.isEmpty())) { for (java.lang.String x : pList) { if ((!(x.contains(fName))) && (!(x.isEmpty()))) { l = (l + \"&\") + x; } } }else { l = params.substring(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/2429/buggy-version/src.com.dotmarketing.cms.content.submit.action.SubmitContentAction.java", "BodyUseAPI": ["java.lang.String.contains(java.lang.String)"], "Fixed commit": "dfc7267fe9c8ccdc06ed34b50b9c6165ff7363e1", "Url": "https://api.github.com/repos/dotCMS/dotCMS", "Date": "2013-03-12T17:57:24Z"},
{"Line": "=>295", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wilson.world.manager.ConfigManager.getInstance().getConfigAsInt(java.lang.String,int)", "org.wilson.world.manager.TaskManager.getSortedTasks()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((all.size()) > limit) { return all.subList(0, limit); }else { return all; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/5129/buggy-version/src.main.java.org.wilson.world.manager.TaskManager.java", "BodyUseAPI": ["java.util.List<org.wilson.world.model.Task>.subList(int,int)"], "Fixed commit": "ac583feec140a14b929c45fbc860507f89ec9888", "Url": "https://api.github.com/repos/liumiaowilson/world", "Date": "2016-07-17T10:36:30Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((config) != null) && ((config.settings) != null)) && ((config.settings.options) != null)) { for (com.podio.sdk.domain.field.Category.Option option : config.settings.options) { if (option.isPicked) { pushData.add(option.getPushData()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/2984/buggy-version/sdk.src.com.podio.sdk.domain.field.Category.java", "BodyUseAPI": [], "Fixed commit": "450d6541e7c25eb92bca8f1e7399eb31e8dbbcc6", "Url": "https://api.github.com/repos/podio/podio-android", "Date": "2014-05-13T10:32:06Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (userForEdit != null) { userForEdit = users.get(users.indexOf(userForEdit)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/5777/buggy-version/src.main.java.com.codenvy.employee.client.presenter.impl.UsersListPresenterImpl.java", "BodyUseAPI": ["java.util.List<com.codenvy.employee.client.entity.User>.indexOf(com.codenvy.employee.client.entity.User)", "java.util.List<com.codenvy.employee.client.entity.User>.get(users.indexOf(userForEdit))"], "Fixed commit": "99f1972643ee75fe875bac54a8ee1bb9904e9cb5", "Url": "https://api.github.com/repos/AndrienkoAleksandr/EmployeePersonalData", "Date": "2014-08-26T07:38:21Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (loc != null) { if ((GriefPrevention.instance.allowBuild(p, loc, Material.CHEST)) != null) { return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/5069/buggy-version/src.main.java.de.epiceric.shopchest.listeners.ShopInteractListener.java", "BodyUseAPI": ["GriefPrevention.instance.allowBuild(org.bukkit.entity.Player,org.bukkit.Location,Material.CHEST)"], "Fixed commit": "4e94006815600db8606c342a12972cfd46c12b41", "Url": "https://api.github.com/repos/freethemice/ShopChest", "Date": "2017-04-22T04:05:08Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["valandur.webapi.util.Util.getPathParts(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((pathParts.size()) == 0) { return java.util.Optional.empty(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/6942/buggy-version/src.main.java.valandur.webapi.servlet.ServletService.java", "BodyUseAPI": [], "Fixed commit": "d99ae49ece00e24c89c839b7f11d10d17c85bfb9", "Url": "https://api.github.com/repos/Valandur/Web-API", "Date": "2017-07-26T21:04:27Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.retloh.service.impl.FtpServerUserManagerImpl.selectByPrimaryKey(user.getId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (ftpuser != null) { ftpuser.setName(user.getLoginName()); ftpuser.setPassword(user.getPassword()); ftpserver.updateByPrimaryKey(ftpuser); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/7678/buggy-version/src.main.java.com.retloh.controller.TUserController.java", "BodyUseAPI": ["com.retloh.model.FtpUser.setName(user.getLoginName())", "com.retloh.model.FtpUser.setPassword(user.getPassword())", "com.retloh.service.impl.FtpServerUserManagerImpl.updateByPrimaryKey(com.retloh.model.FtpUser)"], "Fixed commit": "01f447fd9a7387c09f6a30d64cb9237433413594", "Url": "https://api.github.com/repos/alisonY/retloh", "Date": "2017-06-28T15:36:43Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mod > 0) { bi.seek((4 - mod)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/8955/buggy-version/core.src.main.java.com.mcintyret.jvm.core.opcode.branch.LookupSwitch.java", "BodyUseAPI": ["com.mcintyret.jvm.core.util.ByteIterator.seek(int)"], "Fixed commit": "2748b93ac818d6af51649cec7e5717b4b08ff7c7", "Url": "https://api.github.com/repos/mcintyret/jvm", "Date": "2015-12-28T19:45:00Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.starstore.clerkpda.ui.MainActivity.adapter) == null) { com.starstore.clerkpda.ui.MainActivity.adapter = new com.starstore.clerkpda.adapter.ExchangeAdapter(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/6328/buggy-version/app.src.main.java.com.starstore.clerkpda.ui.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "6a30a04497e01712672314150f8e537fb442be83", "Url": "https://api.github.com/repos/galaxy-solar/starstore_clerkpda", "Date": "2017-10-26T10:25:25Z"},
{"Line": "=>676", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (datastoreType instanceof org.datacleaner.configuration.jaxb.PojoDatastoreType) { ds = createDatastore(name, ((org.datacleaner.configuration.jaxb.PojoDatastoreType) (datastoreType)), temporaryConfiguration); }else if (datastoreType instanceof org.datacleaner.configuration.jaxb.CouchdbDatastoreType) { ds = createDatastore(name, ((org.datacleaner.configuration.jaxb.CouchdbDatastoreType) (datastoreType))); }else if (datastoreType instanceof org.datacleaner.configuration.jaxb.MongodbDatastoreType) { ds = createDatastore(name, ((org.datacleaner.configuration.jaxb.MongodbDatastoreType) (datastoreType))); }else if (datastoreType instanceof org.datacleaner.configuration.jaxb.ElasticSearchDatastoreType) { ds = createDatastore(name, ((org.datacleaner.configuration.jaxb.ElasticSearchDatastoreType) (datastoreType))); }else if (datastoreType instanceof org.datacleaner.configuration.jaxb.CassandraDatastoreType) { ds = createDatastore(name, ((org.datacleaner.configuration.jaxb.CassandraDatastoreType) (datastoreType))); }else if (datastoreType instanceof org.datacleaner.configuration.jaxb.HbaseDatastoreType) { ds = createDatastore(name, ((org.datacleaner.configuration.jaxb.HbaseDatastoreType) (datastoreType))); }else if (datastoreType instanceof org.datacleaner.configuration.jaxb.SalesforceDatastoreType) { ds = createDatastore(name, ((org.datacleaner.configuration.jaxb.SalesforceDatastoreType) (datastoreType))); }else if (datastoreType instanceof org.datacleaner.configuration.jaxb.SugarCrmDatastoreType) { ds = createDatastore(name, ((org.datacleaner.configuration.jaxb.SugarCrmDatastoreType) (datastoreType))); }else if (datastoreType instanceof org.datacleaner.configuration.jaxb.CompositeDatastoreType) { continue; }else { throw new java.lang.UnsupportedOperationException((\"Unsupported datastore type: \" + datastoreType)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/5061/buggy-version/engine.xml-config.src.main.java.org.datacleaner.configuration.JaxbConfigurationReader.java", "BodyUseAPI": [], "Fixed commit": "196a26b6f46c8a6131b5ef6bd2782f68ae76a5ce", "Url": "https://api.github.com/repos/datacleaner/DataCleaner", "Date": "2015-04-08T15:04:11Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.stratos.cloud.controller.application.parser.DefaultApplicationParser.getDefinedGroups(org.apache.stratos.cloud.controller.application.parser.ApplicationContext)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (definedGroups != null) { java.util.Set<java.util.Map.Entry<java.lang.String, org.apache.stratos.cloud.controller.application.parser.GroupContext>> groupEntries = definedGroups.entrySet(); org.apache.stratos.cloud.controller.application.parser.DefaultApplicationParser.log.debug(\"Defined Groups: [ \"); for (java.util.Map.Entry<java.lang.String, org.apache.stratos.cloud.controller.application.parser.GroupContext> groupEntry : groupEntries) { org.apache.stratos.cloud.controller.application.parser.DefaultApplicationParser.log.debug((\"Group alias: \" + (groupEntry.getKey()))); } org.apache.stratos.cloud.controller.application.parser.DefaultApplicationParser.log.debug(\" ]\"); }else { org.apache.stratos.cloud.controller.application.parser.DefaultApplicationParser.log.debug((\"No Group definitions found in app id \" + (applicationCtxt.getApplicationId()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/455/buggy-version/components.org.apache.stratos.cloud.controller.src.main.java.org.apache.stratos.cloud.controller.application.parser.DefaultApplicationParser.java", "BodyUseAPI": ["java.util.Map<java.lang.String, org.apache.stratos.cloud.controller.application.parser.GroupContext>.entrySet()"], "Fixed commit": "5aac10ea462943c4d0eb68ab6564046528d81b18", "Url": "https://api.github.com/repos/apache/stratos", "Date": "2014-09-26T21:57:58Z"},
{"Line": "=>334", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isSpielplanEntered(matchday, match)) getSpiel(matchday, match).setErgebnis(ergebnis);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/1129/buggy-version/src.model.Gruppe.java", "BodyUseAPI": ["model.Gruppe.getSpiel(int,int)", "model.Spiel.setErgebnis(model.Ergebnis)"], "Fixed commit": "4ffbe18d5c9bb26769ee01a2034a35c418357b64", "Url": "https://api.github.com/repos/Valeeeeeeee/fussball", "Date": "2015-03-09T08:38:05Z"},
{"Line": "=>457", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isSpielplanEntered(matchday, match)) getSpiel(matchday, match).setErgebnis(ergebnis);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/1129/buggy-version/src.model.Liga.java", "BodyUseAPI": ["model.Liga.getSpiel(int,int)", "model.Spiel.setErgebnis(model.Ergebnis)"], "Fixed commit": "4ffbe18d5c9bb26769ee01a2034a35c418357b64", "Url": "https://api.github.com/repos/Valeeeeeeee/fussball", "Date": "2015-03-09T08:38:05Z"},
{"Line": "=>357", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isSpielplanEntered(matchday, match)) getSpiel(matchday, match).setErgebnis(ergebnis);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/1129/buggy-version/src.model.KORunde.java", "BodyUseAPI": ["model.Spiel.setErgebnis(model.Ergebnis)", "model.KORunde.getSpiel(int,int)"], "Fixed commit": "4ffbe18d5c9bb26769ee01a2034a35c418357b64", "Url": "https://api.github.com/repos/Valeeeeeeee/fussball", "Date": "2015-03-09T08:38:05Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cn.nukkit.event.player.PlayerInteractEvent.getAction()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (action == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/993/buggy-version/nukkit.src.main.java.com.boydti.fawe.nukkit.core.WorldEditListener.java", "BodyUseAPI": [], "Fixed commit": "da1a8a9d1c45cb0b19318b240cbb27300953654d", "Url": "https://api.github.com/repos/CraftYourBukkit/FastAsyncWorldedit", "Date": "2017-06-24T09:41:05Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (control.isDisposed()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/7796/buggy-version/net.jeeeyul.pdetools.src.net.jeeeyul.pdetools.snapshot.capture.SnapshotHook.java", "BodyUseAPI": [], "Fixed commit": "a87205162c422bced6069b54b2e91cbbc38bee9f", "Url": "https://api.github.com/repos/jeeeyul/pde-tools", "Date": "2015-07-30T09:07:51Z"},
{"Line": "=>311", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.buffer[buffi]) == '\\ufeff') { buffi++; continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/4092/buggy-version/src.main.java.org.thymeleaf.templateparser.TemplatePreprocessingReader.java", "BodyUseAPI": [], "Fixed commit": "7c732eca33c255727cc9961fa5a4bef3b5629b4b", "Url": "https://api.github.com/repos/thymeleaf/thymeleaf", "Date": "2013-10-05T21:12:17Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mixin.hasCodeNode()) { mixin.getBlock().push(mixin.getCodeNode()); mixin.setCodeNode(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/8739/buggy-version/src.main.java.de.neuland.jade4j.parser.Parser.java", "BodyUseAPI": ["de.neuland.jade4j.parser.MixinNode.getCodeNode()", "mixin.getBlock().push(mixin.getCodeNode())", "de.neuland.jade4j.parser.MixinNode.setCodeNode(<nulltype>)", "de.neuland.jade4j.parser.MixinNode.getBlock()"], "Fixed commit": "ecafda064c73d8e1fa5eb603c0e8bb2910232772", "Url": "https://api.github.com/repos/neuland/jade4j", "Date": "2015-11-27T12:35:24Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (val == null) (N)--;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/7747/buggy-version/src.search.BinarySearchSymbolTable.java", "BodyUseAPI": [], "Fixed commit": "347319ef59ed8b9ce9c583c9d0206a1b7588f761", "Url": "https://api.github.com/repos/ishakir/Algorithms", "Date": "2014-12-01T14:15:39Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hotPointsEnabled) { return new ru.spbau.mit.placenotifier.customizers.AlternativeCustomizeEngine(title, new ru.spbau.mit.placenotifier.customizers.AddressPickerCustomizeEngine(context), new ru.spbau.mit.placenotifier.customizers.HotPointPickerCustomizeEngine(context), new ru.spbau.mit.placenotifier.customizers.PlacePickerCustomizeEngine(producer, id)); }else { return new ru.spbau.mit.placenotifier.customizers.AlternativeCustomizeEngine(title, new ru.spbau.mit.placenotifier.customizers.AddressPickerCustomizeEngine(context), new ru.spbau.mit.placenotifier.customizers.PlacePickerCustomizeEngine(producer, id)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/9066/buggy-version/app.src.main.java.ru.spbau.mit.placenotifier.customizers.Customizers.java", "BodyUseAPI": [], "Fixed commit": "8c0baad593980844191003183ce92a16b2ec960c", "Url": "https://api.github.com/repos/ArtyomLobanov/place-notifier", "Date": "2017-02-27T10:12:42Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.daniel.bankomat.activator.Activator.getPlayer(org.bukkit.command.CommandSender,java.lang.String[],int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (player == null) { sender.sendMessage(\"No player available, are you op or CONSOLE?\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/5457/buggy-version/src.de.daniel.bankomat.commands.SampleCommand.java", "BodyUseAPI": [], "Fixed commit": "fbd79c6b8975bbf011d4652a4a7af473a140ddc7", "Url": "https://api.github.com/repos/srbinas/bankomat", "Date": "2017-04-21T11:50:34Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (outbound.isOpen()) { outbound.send(\"%s:null:null:null:%s:null\", event.eventType, event.poiId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/4755/buggy-version/app.controllers.WebSocket.java", "BodyUseAPI": ["controllers.WebSocket.send(java.lang.String,event.eventType,event.poiId)"], "Fixed commit": "57acc1832829ee9c65df320cc50eb56fc0f2e95d", "Url": "https://api.github.com/repos/dasa123/GisWeb", "Date": "2014-09-04T22:58:17Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (outbound.isOpen()) { outbound.send(\"%s:%s:%s:%s:%s:%s\", event.eventType, event.googleId, event.latitude, event.longitude, event.poiId, event.taskCompleted); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/4755/buggy-version/app.controllers.WebSocket.java", "BodyUseAPI": ["controllers.WebSocket.send(java.lang.String,event.eventType,event.googleId,event.latitude,event.longitude,event.poiId,event.taskCompleted)"], "Fixed commit": "57acc1832829ee9c65df320cc50eb56fc0f2e95d", "Url": "https://api.github.com/repos/dasa123/GisWeb", "Date": "2014-09-04T22:58:17Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.votors.runningx.GpsRec.gcjPointer) == null) { com.votors.runningx.GpsRec.gcjPointer = new com.votors.runningx.GpsRec.GCJPointer(lat, lng); }else { com.votors.runningx.GpsRec.gcjPointer.latitude = lat; com.votors.runningx.GpsRec.gcjPointer.longitude = lng; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/4222/buggy-version/app.src.main.java.com.votors.runningx.GpsRec.java", "BodyUseAPI": [], "Fixed commit": "3d32b5b439d02ce5c3a8b3610f40d13b73519721", "Url": "https://api.github.com/repos/zwChan/RunningX", "Date": "2016-01-10T15:04:27Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.votors.runningx.GpsRec.gcjPointer) == null) { com.votors.runningx.GpsRec.gcjPointer = new com.votors.runningx.GpsRec.GCJPointer(lat, lng); }else { com.votors.runningx.GpsRec.gcjPointer.latitude = lat; com.votors.runningx.GpsRec.gcjPointer.longitude = lng; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/4222/buggy-version/app.src.main.java.com.votors.runningx.GpsRec.java", "BodyUseAPI": [], "Fixed commit": "3d32b5b439d02ce5c3a8b3610f40d13b73519721", "Url": "https://api.github.com/repos/zwChan/RunningX", "Date": "2016-01-10T15:04:27Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.dk.tim.file.RegexTool.generateCorrectFileName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (newFileName != null) { org.dk.tim.log.Logger.logToSystemLog((\"Applying file name fix - new name is: \" + newFileName)); java.lang.String newFilePath = ((file.getParent()) + \"\\\\\") + newFileName; java.io.File newFile = new java.io.File(newFilePath); fileTool.renameFile(file, newFile); return newFile; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/7031/buggy-version/AutoMoveFiles.src.org.dk.tim.file.FileManager.java", "BodyUseAPI": ["org.dk.tim.log.Logger.logToSystemLog(java.lang.String)"], "Fixed commit": "2f7c5c53bbe099b39da8dcd7a80b4513c6638f99", "Url": "https://api.github.com/repos/TimGrewy/AutoMoveFiles", "Date": "2015-10-25T20:40:14Z"},
{"Line": "=>273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dayOfMonth < 10) { sDay = \"0\" + (java.lang.String.valueOf(dayOfMonth)); }else { sDay = java.lang.String.valueOf(dayOfMonth); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/1277/buggy-version/app.src.main.java.com.example.i7.jobbalagom.fragments.AddShiftFragment.java", "BodyUseAPI": ["java.lang.String.valueOf(int)", "java.lang.String.valueOf(int)"], "Fixed commit": "eaa69db1e4826db58430dbfef3c1f35ef4b97f59", "Url": "https://api.github.com/repos/Baxtex/Jobba_Lagom", "Date": "2016-05-28T14:52:00Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currentKey.equals(newKey)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/2612/buggy-version/src.duplicatesearcher.analysis.frequency.TermFrequencyCounter.java", "BodyUseAPI": [], "Fixed commit": "e34c9e746fecf54786457e016de9edb7786817e2", "Url": "https://api.github.com/repos/mantono/DuplicateSearcher", "Date": "2016-06-22T11:42:24Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (frequency.containsKey(newKey)) addition = frequency.get(newKey);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/2612/buggy-version/src.duplicatesearcher.analysis.frequency.TermFrequencyCounter.java", "BodyUseAPI": ["java.util.Map<duplicatesearcher.Token, java.lang.Integer>.get(duplicatesearcher.Token)"], "Fixed commit": "e34c9e746fecf54786457e016de9edb7786817e2", "Url": "https://api.github.com/repos/mantono/DuplicateSearcher", "Date": "2016-06-22T11:42:24Z"},
{"Line": "=>568", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.felix.ipojo.extender.TypeDeclaration.getComponentName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (name == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/128/buggy-version/everest-ipojo.src.main.java.org.ow2.chameleon.everest.ipojo.IpojoRootResource.java", "BodyUseAPI": [], "Fixed commit": "970be1eceab42ddc6d859b086ce0736ef342458e", "Url": "https://api.github.com/repos/ow2-chameleon/everest", "Date": "2013-08-22T14:43:07Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (computer == 'X') { starter = 'O'; }else { starter = 'X'; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/7516/buggy-version/src.lab5TicTacToe.AI.java", "BodyUseAPI": [], "Fixed commit": "736a2c2c0d3139f2d85d8f6863b1066214aa4a5f", "Url": "https://api.github.com/repos/Ylvakiller/Theme05lab05", "Date": "2014-10-27T11:29:33Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mScannerView) != null) { mScannerView.stopCamera(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/328/buggy-version/app.src.main.java.com.android.shopr.HomeActivity.java", "BodyUseAPI": [], "Fixed commit": "8d9646162300000c563eaefa50a698850b32bd76", "Url": "https://api.github.com/repos/abhinav272/Demo", "Date": "2016-12-27T11:40:37Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mScannerView) != null) { mScannerView.stopCamera(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/328/buggy-version/app.src.main.java.com.android.shopr.HomeActivity.java", "BodyUseAPI": [], "Fixed commit": "8d9646162300000c563eaefa50a698850b32bd76", "Url": "https://api.github.com/repos/abhinav272/Demo", "Date": "2016-12-27T11:40:37Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (firstDeployMove == null) pieceHelper.setFirstCoordinate(null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/2839/buggy-version/src.battleships.backend.actionhelpers.DeployMoveValidationHelper.java", "BodyUseAPI": [], "Fixed commit": "a3759d8f80dd846fd7de2e72c9ecdaec9bfc02a5", "Url": "https://api.github.com/repos/Grupp2/GameBoard-API-Games", "Date": "2014-05-21T12:51:06Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["nl.inversion.domoticz.Utils.PhoneConnectionUtil.startSsidScan()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((results != null) && ((results.size()) > 0)) { entries = new java.lang.CharSequence[results.size()]; int i = 0; for (android.net.wifi.ScanResult result : results) { entries[i] = result.SSID; i++; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/7549/buggy-version/app.src.main.java.nl.inversion.domoticz.Utils.PhoneConnectionUtil.java", "BodyUseAPI": ["java.util.List<android.net.wifi.ScanResult>.size()"], "Fixed commit": "9faa392ddab37ff6cf7bd586220226e4d1608521", "Url": "https://api.github.com/repos/RoadXY/Domoticz-Android", "Date": "2015-04-27T17:27:51Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((co.length()) > 0) { double c = java.lang.Double.parseDouble(co); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/4194/buggy-version/src.myMath.Monom.java", "BodyUseAPI": ["java.lang.Double.parseDouble(java.lang.String)"], "Fixed commit": "674dd8d227d2cbbf66af50c7f96e8431cebc6830", "Url": "https://api.github.com/repos/benmoshe/Polynoms", "Date": "2017-11-20T09:18:30Z"},
{"Line": "=>505", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.sucy.skill.SkillAPI.isLoaded())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/7495/buggy-version/src.com.sucy.skill.api.player.PlayerData.java", "BodyUseAPI": [], "Fixed commit": "cfe912cc6a957f5782cf356d881752dd97def6d8", "Url": "https://api.github.com/repos/ervinnnchai/SkillAPI", "Date": "2015-11-30T12:18:25Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (m_processorsEnabled.contains(proc)) { proc.process(time, speedMPH); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/196/buggy-version/src.infoprivacy.simulator.ProcessorSupervisor.java", "BodyUseAPI": ["infoprivacy.simulator.Processor.process(java.util.Date,double)"], "Fixed commit": "88ac02c69153a73d3c0e709942a3ea39c2d99958", "Url": "https://api.github.com/repos/joehms22/InformationPrivacyProject", "Date": "2013-11-04T20:13:49Z"},
{"Line": "=>2118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (shiftextension) answer.addWord(w);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/953/buggy-version/src.main.java.com.googlecode.javaewah32.EWAHCompressedBitmap32.java", "BodyUseAPI": [], "Fixed commit": "68190acc819cf381b2ba71697ddced6ed9eb50b9", "Url": "https://api.github.com/repos/lemire/javaewah", "Date": "2015-12-17T23:41:57Z"},
{"Line": "=>2112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (shiftextension) answer.addWord(w);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/953/buggy-version/src.main.java.com.googlecode.javaewah.EWAHCompressedBitmap.java", "BodyUseAPI": [], "Fixed commit": "68190acc819cf381b2ba71697ddced6ed9eb50b9", "Url": "https://api.github.com/repos/lemire/javaewah", "Date": "2015-12-17T23:41:57Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (includeQuotes) { if (isContextMode && (\"VALUE\".equals(key))) { value = org.talend.core.utils.TalendQuoteUtils.removeQuotesIfExist(value); }else { value = org.talend.core.utils.TalendQuoteUtils.addQuotesIfNotExist(value); } }else { value = org.talend.core.utils.TalendQuoteUtils.removeQuotesIfExist(value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/2313/buggy-version/main.plugins.org.talend.core.runtime.src.main.java.org.talend.core.hadoop.repository.HadoopRepositoryUtil.java", "BodyUseAPI": [], "Fixed commit": "815dd57b8ee6ba796acec3cd202b00c05ea2a5fc", "Url": "https://api.github.com/repos/Talend/tcommon-studio-se", "Date": "2016-02-22T10:51:53Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (poses.contains(source.getPos())) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/6755/buggy-version/src.main.java.com.teamwizardry.refraction.common.light.ReflectionTracker.java", "BodyUseAPI": [], "Fixed commit": "c1ffeed84a551e4fb81a12f30cc4042b783619c2", "Url": "https://api.github.com/repos/TeamWizardry/TMT-Refraction", "Date": "2016-11-13T22:51:55Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((val.length) < (start.val.length)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/1269/buggy-version/com.ibm.wala.core.src.com.ibm.wala.util.strings.Atom.java", "BodyUseAPI": [], "Fixed commit": "989c92d04fa043c813c01c860efdba52d6072c67", "Url": "https://api.github.com/repos/ponder-lab/WALA", "Date": "2017-12-19T20:42:27Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mBottomBar.isShowing()) mBottomBar.hide();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/2046/buggy-version/app.src.main.java.com.joe.zatuji.module.homepage.HomeActivity.java", "BodyUseAPI": ["com.github.rubensousa.floatingtoolbar.FloatingToolbar.hide()"], "Fixed commit": "a5dda4373e485a7f4120f202e65d15b4a6b9a593", "Url": "https://api.github.com/repos/JoeSteven/Zatuji", "Date": "2016-07-08T11:17:00Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) > 19) mFab.hide();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/2046/buggy-version/app.src.main.java.com.joe.zatuji.module.homepage.HomeActivity.java", "BodyUseAPI": [], "Fixed commit": "a5dda4373e485a7f4120f202e65d15b4a6b9a593", "Url": "https://api.github.com/repos/JoeSteven/Zatuji", "Date": "2016-07-08T11:17:00Z"},
{"Line": "=>333", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(ident.isFakePlayer())) result.add(new com.forgeessentials.api.permissions.GroupEntry(GROUP_PLAYERS, 1, 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/1086/buggy-version/src.main.java.com.forgeessentials.api.permissions.ServerZone.java", "BodyUseAPI": [], "Fixed commit": "6e6f95a43e7a2b014d5431d540acb0b754017c27", "Url": "https://api.github.com/repos/ForgeEssentials/ForgeEssentials", "Date": "2015-09-14T05:31:22Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (data == 13) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/8332/buggy-version/ClassRoomServer.src.server.ServerThread.java", "BodyUseAPI": [], "Fixed commit": "da241de567a15edc8e924334be95c32d1f6e82cc", "Url": "https://api.github.com/repos/ajchuang/CloudClassRoom", "Date": "2014-05-11T21:07:05Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getJSONObject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(respData.has(com.owncloud.android.lib.resources.users.GetRemoteUserInfoOperation.NODE_ID))) { userInfo.setId(respData.getString(com.owncloud.android.lib.resources.users.GetRemoteUserInfoOperation.NODE_ID)); }else { userInfo.setId(credentials.getUsername()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/8410/buggy-version/src.com.owncloud.android.lib.resources.users.GetRemoteUserInfoOperation.java", "BodyUseAPI": ["com.owncloud.android.lib.common.UserInfo.setId(respData.getString(com.owncloud.android.lib.resources.users.GetRemoteUserInfoOperation.NODE_ID))", "org.json.JSONObject.getString(java.lang.String)"], "Fixed commit": "cf54152a5d4213c094f9e02c4ee89fb23480cc51", "Url": "https://api.github.com/repos/nextcloud/android-library", "Date": "2017-01-25T11:03:38Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (se.crafted.chrisb.ecoCreature.drops.aspects.BonusChanceAspect.bonus.isValid()) { se.crafted.chrisb.ecoCreature.commons.LoggerUtil.getInstance().debug((((\"applying bonus multiplier \" + (se.crafted.chrisb.ecoCreature.drops.aspects.BonusChanceAspect.bonus.getMultiplier())) + \" to \") + percentage)); percentage *= se.crafted.chrisb.ecoCreature.drops.aspects.BonusChanceAspect.bonus.getMultiplier(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/285/buggy-version/src.main.java.se.crafted.chrisb.ecoCreature.drops.aspects.BonusChanceAspect.java", "BodyUseAPI": ["se.crafted.chrisb.ecoCreature.drops.categories.Bonus.getMultiplier()", "se.crafted.chrisb.ecoCreature.drops.categories.Bonus.getMultiplier()", "se.crafted.chrisb.ecoCreature.commons.LoggerUtil.getInstance().debug((((\"applying bonus multiplier \" + (se.crafted.chrisb.ecoCreature.drops.aspects.BonusChanceAspect.bonus.getMultiplier())) + \" to \") + percentage))"], "Fixed commit": "87f200eadbbf46042393983ff1d06b10994654a5", "Url": "https://api.github.com/repos/mung3r/ecoCreature", "Date": "2015-01-10T04:06:28Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (turn.equals(enemyPosition)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/8735/buggy-version/racing.src.com.doublev.racing.model.RaceData.java", "BodyUseAPI": [], "Fixed commit": "3a40b5c538e4f42c1db37eccc3b5185ad6862f59", "Url": "https://api.github.com/repos/arewa/racing", "Date": "2014-05-28T06:18:18Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (availableTurns.contains(turn)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/8735/buggy-version/racing.src.com.doublev.racing.model.RaceData.java", "BodyUseAPI": [], "Fixed commit": "3a40b5c538e4f42c1db37eccc3b5185ad6862f59", "Url": "https://api.github.com/repos/arewa/racing", "Date": "2014-05-28T06:18:18Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toLowerCase()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (res.contains(\"codechef\")) { return R.drawable.codechef; }else if (res.contains(\"hackerrank\")) { return R.drawable.hackerrank; }else if (res.contains(\"hackerearth\")) { return R.drawable.hackerearth; }else if (res.contains(\"codeforces\")) { return R.drawable.codeforces; }else if (res.contains(\"topcoder\")) { return R.drawable.topcoder; }else if (res.contains(\"spoj\")) { return R.drawable.spoj; }else if (res.contains(\"kaggle\")) { return R.drawable.kaggle; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/434/buggy-version/app.src.main.java.com.amrendra.codefiesta.utils.AppUtils.java", "BodyUseAPI": ["java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)"], "Fixed commit": "c1c0deccc543126170df4d37a22a154661682af5", "Url": "https://api.github.com/repos/amrendra18/codezera", "Date": "2016-05-14T22:37:59Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sbml.wrapper.ReactionWrapper.getListOfModification()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (mList == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/4443/buggy-version/src.org.sbml.layoutconverter.FBCConverter.java", "BodyUseAPI": [], "Fixed commit": "3ccf909579e94fda3fc7fb130a99236c5f3de27f", "Url": "https://api.github.com/repos/funasoul/celldesigner-parser", "Date": "2016-08-17T03:32:06Z"},
{"Line": "=>703", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((WAVL_Node.parentNode) != null) { WAVL_Node = WAVL_Node.parentNode; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/8385/buggy-version/src.WAVLTree.java", "BodyUseAPI": [], "Fixed commit": "02840fc416a1c206356e730aacac5584444e8278", "Url": "https://api.github.com/repos/shachar183/Practical_exercise_1", "Date": "2016-12-04T02:20:23Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sendMode) == (SendMode.UPDATE)) { demandsModel.replaceDemand(singleDemand.getDemand()); demandsModel.setUseLocalList(true); }else { demandsModel.addDemand(singleDemand.getDemand()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/3430/buggy-version/app.src.main.java.neeedo.imimaprx.htw.de.neeedo.rest.demand.PostCreateUpdateDemandAsyncTask.java", "BodyUseAPI": [], "Fixed commit": "da9625c1f41eefa00678ed043f3a6fea484f91ba", "Url": "https://api.github.com/repos/neeedo/neeedo-android", "Date": "2015-07-29T07:33:24Z"},
{"Line": "=>309", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((com.pi4j.io.gpio.WiringPiGpioProviderBase.pinModeCache[pin.getAddress()]) == (PinMode.DIGITAL_INPUT)) { if ((listeners.size()) > 0) { if (!(com.pi4j.wiringpi.GpioInterrupt.hasListener(this))) { com.pi4j.wiringpi.GpioInterrupt.addListener(this); } com.pi4j.wiringpi.GpioInterrupt.enablePinStateChangeCallback(pin.getAddress()); }else { com.pi4j.wiringpi.GpioInterrupt.disablePinStateChangeCallback(pin.getAddress()); if (com.pi4j.wiringpi.GpioInterrupt.hasListener(this)) { com.pi4j.wiringpi.GpioInterrupt.removeListener(this); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/5638/buggy-version/pi4j-core.src.main.java.com.pi4j.io.gpio.WiringPiGpioProviderBase.java", "BodyUseAPI": ["com.pi4j.wiringpi.GpioInterrupt.disablePinStateChangeCallback(pin.getAddress())", "com.pi4j.wiringpi.GpioInterrupt.enablePinStateChangeCallback(pin.getAddress())", "com.pi4j.io.gpio.Pin.getAddress()", "com.pi4j.io.gpio.Pin.getAddress()"], "Fixed commit": "24baeca8baf4a89e79e0ae55eea738b1a3e3bccb", "Url": "https://api.github.com/repos/Pi4J/pi4j", "Date": "2016-03-21T10:41:01Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((googleMap) != null) { mgr.saveMapState(googleMap); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/2812/buggy-version/app.src.main.java.com.example.emile1.findaparty.Activity.SearchFragment.java", "BodyUseAPI": [], "Fixed commit": "79f9b33c21f5f89436c925ad637aff84a8ee177c", "Url": "https://api.github.com/repos/emileNetter/appli", "Date": "2017-03-07T15:49:25Z"},
{"Line": "=>13", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((Epsilon.adminModeConfig.get(((\"player.\" + (player.getUniqueId())) + \".adminModeInv\"))) != null) { player.getInventory().setContents(((org.bukkit.inventory.ItemStack[]) (Epsilon.adminModeConfig.get(((\"player.\" + (player.getUniqueId())) + \".adminModeInv\"))))); }else { player.getInventory().clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/2502/buggy-version/src.com.epsilon.administration.AdminMode.java", "BodyUseAPI": ["player.getInventory().setContents(((org.bukkit.inventory.ItemStack[]) (Epsilon.adminModeConfig.get(((\"player.\" + (player.getUniqueId())) + \".adminModeInv\")))))", "Epsilon.adminModeConfig.get(((\"player.\" + (player.getUniqueId())) + \".adminModeInv\"))", "org.bukkit.entity.Player.getInventory()", "org.bukkit.entity.Player.getInventory()", "org.bukkit.entity.Player.getUniqueId()", "player.getInventory().clear()"], "Fixed commit": "e2d8079e56b9f03f661eeaa1c9d55afd527877ed", "Url": "https://api.github.com/repos/ComputerDude/Epsilon", "Date": "2017-02-12T04:26:28Z"},
{"Line": "=>1043", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((v.getType().hashCode()) == (hash_INS)) && ((v.getEffect()) < 4)) v.setEffect(4); else if (((v.getType().hashCode()) == (hash_DEL)) && ((v.getEffect()) < 5)) v.setEffect(5); else if ((v.getType().hashCode()) == (hash_SNV)) if ((transafter[0].equals(transafter[1])) && ((v.getEffect()) < 2)) v.setEffect(2); else if ((!(transafter[0].equals(transafter[1]))) && ((v.getEffect()) < 3)) v.setEffect(3);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/6428/buggy-version/filereaders.individual.EctypalElement.java", "BodyUseAPI": ["filereaders.individual.vcf.Variant.getType()", "filereaders.individual.vcf.Variant.setEffect(int)", "filereaders.individual.vcf.Variant.setEffect(int)", "filereaders.individual.vcf.Variant.getEffect()", "v.getType().hashCode()", "v.getType().hashCode()", "filereaders.individual.vcf.Variant.getEffect()", "filereaders.individual.vcf.Variant.getType()", "filereaders.individual.vcf.Variant.setEffect(int)", "filereaders.individual.vcf.Variant.setEffect(int)", "filereaders.individual.vcf.Variant.getEffect()"], "Fixed commit": "f7dacca94bf582a76548585df12a1efb91d6c56b", "Url": "https://api.github.com/repos/ljuan/gbhit", "Date": "2013-08-04T10:02:08Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["IC.Symbols.SymbolTable.getSymbol(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((symbol.getKind()) == (IC.Types.Kind.Method)) || ((symbol.getKind()) == (IC.Types.Kind.StaticMethod))) throw new IC.SemanticChecks.SemanticError(method.getLine(), \"Method overloading is not supported\"); else if ((symbol.getKind()) == (IC.Types.Kind.MemberVariable)) throw new IC.SemanticChecks.SemanticError(method.getLine(), \"Method and Field with the same name are not supported\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/7641/buggy-version/src.IC.SemanticChecks.SymbolTableBuilder.java", "BodyUseAPI": ["IC.Symbols.Symbol.getKind()"], "Fixed commit": "5fb035e5a83ee252cb236b0c30f79a29a5af0dc9", "Url": "https://api.github.com/repos/sharon-rozinsky/ICCompiler", "Date": "2015-01-03T16:53:27Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((location.getLocation()) == null) { if ((scope instanceof IC.AST.StaticMethod) && (!(scope.getEnclosingScopeSymTable().symbolContained(name)))) { throw new IC.SemanticChecks.SemanticError(location.getLine(), \"referencing a non static member variable from static method\"); }else if (unresolvedRefrences.contains(location)) { throw new IC.SemanticChecks.SemanticError(location.getLine(), \"referencing an undefined variable\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/7641/buggy-version/src.IC.SemanticChecks.SymbolTableChecker.java", "BodyUseAPI": ["IC.AST.VariableLocation.getLine()", "java.util.Set<IC.AST.VariableLocation>.contains(IC.AST.VariableLocation)", "IC.AST.VariableLocation.getLine()"], "Fixed commit": "5fb035e5a83ee252cb236b0c30f79a29a5af0dc9", "Url": "https://api.github.com/repos/sharon-rozinsky/ICCompiler", "Date": "2015-01-03T16:53:27Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((countdown) != null) { countdown.cancel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/154/buggy-version/app.src.main.java.com.iceit.framework.ActivationFragment.java", "BodyUseAPI": [], "Fixed commit": "1d3dd971eb1ac69380cca81f2a8369cc7561d97f", "Url": "https://api.github.com/repos/ChrisGrigg/ICE_IT-2", "Date": "2015-11-10T21:43:07Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((process.getAmount().compareTo(account)) <= 0) { throw new com.bloatit.framework.exceptions.lowlevel.RedirectException(new com.bloatit.web.url.CheckContributionPageUrl(process)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/8710/buggy-version/main.src.main.java.com.bloatit.web.linkable.contribution.StaticCheckContributionPage.java", "BodyUseAPI": [], "Fixed commit": "deb90aa9a3b7b739298a71e6553a19f723c1d983", "Url": "https://api.github.com/repos/BloatIt/bloatit", "Date": "2011-04-18T17:07:28Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (gotAddress) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/3603/buggy-version/src.chatroom.Server.java", "BodyUseAPI": [], "Fixed commit": "5bb20af2798830f323efcb6b105fa6d4ddc7b6fb", "Url": "https://api.github.com/repos/cgaldamez14/chat-room", "Date": "2016-04-21T21:30:40Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (operation instanceof com.owncloud.android.operations.GetSharesForFileOperation) { if ((result.getCode()) == (com.owncloud.android.lib.common.operations.RemoteOperationResult.ResultCode.MAINTENANCE_MODE)) { message = res.getString(R.string.maintenance_mode); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/2352/buggy-version/src.com.owncloud.android.utils.ErrorMessageAdapter.java", "BodyUseAPI": [], "Fixed commit": "1b1f635ba8677d83fe1fb3c105a2482ba7fb1104", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2016-12-28T09:27:05Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javafx.stage.FileChooser.showOpenDialog(javafx.stage.Stage)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (file == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/6918/buggy-version/CS4773Assignment3.src.planet.detail.PlanetController.java", "BodyUseAPI": [], "Fixed commit": "21fb627f90c2ba168a2ca4a836ba13b48edf027c", "Url": "https://api.github.com/repos/LordFoxon/PlanetEditor", "Date": "2017-11-08T23:50:48Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javafx.stage.FileChooser.showOpenDialog(javafx.stage.Stage)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (file == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/6918/buggy-version/CS4773Assignment3.src.planet.detail.PlanetController.java", "BodyUseAPI": [], "Fixed commit": "21fb627f90c2ba168a2ca4a836ba13b48edf027c", "Url": "https://api.github.com/repos/LordFoxon/PlanetEditor", "Date": "2017-11-08T23:50:48Z"},
{"Line": "=>565", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (hit == null) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/9131/buggy-version/src.RayTracer.java", "BodyUseAPI": [], "Fixed commit": "85b45a5381e4f354f5653c50c93ff227f0337de7", "Url": "https://api.github.com/repos/itaiyifrach/RayCasting", "Date": "2017-06-04T17:09:32Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_move.style()) != (org.jpokemon.pokemon.move.MoveStyle.STATUS)) { _messages.add(((((targetSlot.leader().name()) + \" took \") + (_damage)) + \" damage!\")); targetSlot.takeDamage(_damage); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/277/buggy-version/src.jpkmn.game.battle.turn.AttackTurn.java", "BodyUseAPI": [], "Fixed commit": "eb3a1a3c4977a3a69a6312dc542a0886c62c429c", "Url": "https://api.github.com/repos/zachtaylor/JPokemon", "Date": "2012-11-19T02:17:27Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (latLng == null) { this.lat = null; this.lng = null; }else { this.lat = latLng.getLat(); this.lng = latLng.getLng(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/6405/buggy-version/rmt.src.main.java.de.flower.rmt.model.Venue.java", "BodyUseAPI": ["de.flower.common.util.geo.LatLng.getLat()", "de.flower.common.util.geo.LatLng.getLng()"], "Fixed commit": "4b19d730507857540b836d29413f1c1b7244b0cf", "Url": "https://api.github.com/repos/flowerrrr/RMT", "Date": "2012-04-23T21:27:31Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.vivi7865.RedisTPS.RedisTPS.pool) == null) { getLogger().warning(\"Not connected to Redis!\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/8435/buggy-version/src.main.java.com.vivi7865.RedisTPS.RedisTPS.java", "BodyUseAPI": [], "Fixed commit": "26142b478b00e639da6159431b15d5cc6f571ae8", "Url": "https://api.github.com/repos/addstar/RedisTPS", "Date": "2014-08-24T13:28:09Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<org.exquery.http.HttpMethod, java.util.List<org.exquery.restxq.RestXqService>>.get(org.exquery.http.HttpMethod)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (services != null) { visitor.visit(method, services); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/1174/buggy-version/exquery-restxq.src.main.java.org.exquery.restxq.impl.RestXqServicesMap.java", "BodyUseAPI": ["org.exquery.restxq.impl.RestXqServicesMap.RestXqServiceMapVisitor.visit(org.exquery.http.HttpMethod,java.util.List<org.exquery.restxq.RestXqService>)"], "Fixed commit": "1425a621bbd5a3ef9211f6e60e8f31f40bc16557", "Url": "https://api.github.com/repos/exquery/exquery", "Date": "2012-08-12T12:07:15Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (damage > (guardian.getOwner().getHP())) { damage = guardian.getOwner().getHP(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/5329/buggy-version/workspace.CardFantasyCore.src.cfvbaibai.cardfantasy.engine.skill.Guard.java", "BodyUseAPI": ["guardian.getOwner().getHP()", "cfvbaibai.cardfantasy.engine.CardInfo.getOwner()"], "Fixed commit": "45fb9870309409283d411019d618bef6730b12a1", "Url": "https://api.github.com/repos/cfvbaibai/CardFantasy", "Date": "2015-07-28T13:50:27Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.vehicle.VehicleEntityCollisionEvent.getVehicle()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((!(vehicle instanceof org.bukkit.entity.StorageMinecart)) && (!(vehicle instanceof org.bukkit.entity.PoweredMinecart))) && (vehicle.isEmpty())) break minecartRemoveEntities;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/7252/buggy-version/src.main.java.com.sk89q.craftbook.bukkit.VehicleCore.java", "BodyUseAPI": [], "Fixed commit": "0cd592bb25b21b2c55ce295726f0198496cdde8c", "Url": "https://api.github.com/repos/MCRUS/craftbook", "Date": "2013-01-04T01:08:27Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((viableSystems.size()) > 0) { return ((FullSystem[]) (viableSystems.toArray())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/7902/buggy-version/EclipseWorkBench.src.Algorithms.java", "BodyUseAPI": ["java.util.ArrayList<FullSystem>.toArray()"], "Fixed commit": "9946b84981fd770a859921217b6e1b954c6ecc61", "Url": "https://api.github.com/repos/josephthweatt/OPSRA-PV-System-Creator", "Date": "2016-04-15T22:31:09Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((viableSystems.size()) > 0) { rankSystems(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/7902/buggy-version/EclipseWorkBench.src.Pricing.java", "BodyUseAPI": [], "Fixed commit": "9946b84981fd770a859921217b6e1b954c6ecc61", "Url": "https://api.github.com/repos/josephthweatt/OPSRA-PV-System-Creator", "Date": "2016-04-15T22:31:09Z"},
{"Line": "=>1473", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((connection.getDatabase()) != null) { final com.orientechnologies.orient.core.db.record.ridbag.sbtree.OSBTreeCollectionManager collectionManager = connection.getDatabase().getSbTreeCollectionManager(); if (collectionManager != null) collectionManager.clearChangedIds(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/1962/buggy-version/server.src.main.java.com.orientechnologies.orient.server.network.protocol.binary.ONetworkProtocolBinary.java", "BodyUseAPI": ["connection.getDatabase().getSbTreeCollectionManager()", "com.orientechnologies.orient.server.OClientConnection.getDatabase()"], "Fixed commit": "1090317881a941b4bf6b8c6896bbac53259e22f7", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2017-11-24T11:29:04Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.amazonaws.util.json.JSONArray.getJSONObject(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(sgNames.containsKey(instanceGroup.get(\"groupName\")))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/1810/buggy-version/src.main.java.uk.co.bluesuntech.ec2.EC2EnvironmentCreator.java", "BodyUseAPI": [], "Fixed commit": "ea38ac3931c4bc045b474312602f15f30cc6d5e4", "Url": "https://api.github.com/repos/scaryclam/aws-controller", "Date": "2015-08-08T11:35:46Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((comps[0].length()) == 0) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/8951/buggy-version/src.main.java.it.uniroma1.lcl.adw.textual.similarity.TextualSimilarity.java", "BodyUseAPI": [], "Fixed commit": "4f9f862db75e58c168e52bf6580ee9483121abc8", "Url": "https://api.github.com/repos/openedinc/ADW", "Date": "2015-05-13T18:33:04Z"},
{"Line": "=>954", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (closeSession) { database.unlockMeta(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/3917/buggy-version/h2.src.main.org.h2.engine.Session.java", "BodyUseAPI": [], "Fixed commit": "30ad944bdd195c64a009a723614a2a44b69f1ebb", "Url": "https://api.github.com/repos/k5mwe/h2database", "Date": "2016-03-29T09:19:20Z"},
{"Line": "=>358", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.fasterxml.jackson.databind.node.ObjectNode.path(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (startExon.isMissingNode()) { for (int i = 0; i < (exons.size()); i++) { if (!(exons.get(i).path(\"cds\").isMissingNode())) { transcript.put(\"start_exon\", i); startExon = transcript.path(\"start_exon\"); break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/4265/buggy-version/dcc-import-gene.src.main.java.org.icgc.dcc.imports.gene.writer.GeneWriter.java", "BodyUseAPI": [], "Fixed commit": "ebe4338de58889a7e1f26ffe6668bc5d70cf2ba5", "Url": "https://api.github.com/repos/icgc-dcc/dcc-import", "Date": "2016-02-26T20:12:48Z"},
{"Line": "=>369", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.fasterxml.jackson.databind.node.ObjectNode.path(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (endExon.isMissingNode()) { for (int i = (exons.size()) - 1; i > 0; i--) { if (!(exons.get(i).path(\"cds\").isMissingNode())) { transcript.put(\"end_exon\", i); endExon = transcript.path(\"end_exon\"); break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/4265/buggy-version/dcc-import-gene.src.main.java.org.icgc.dcc.imports.gene.writer.GeneWriter.java", "BodyUseAPI": [], "Fixed commit": "ebe4338de58889a7e1f26ffe6668bc5d70cf2ba5", "Url": "https://api.github.com/repos/icgc-dcc/dcc-import", "Date": "2016-02-26T20:12:48Z"},
{"Line": "=>353", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.fasterxml.jackson.databind.node.ObjectNode.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((exons.size()) > 0) { transcript.put(\"length\", exons.get(((exons.size()) - 1)).get(\"cdna_end\").asText()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/4265/buggy-version/dcc-import-gene.src.main.java.org.icgc.dcc.imports.gene.writer.GeneWriter.java", "BodyUseAPI": ["exons.get(((exons.size()) - 1)).get(\"cdna_end\").asText()", "lombok.val.get(((exons.size()) - 1))", "exons.get(((exons.size()) - 1)).get(java.lang.String)", "lombok.val.size()", "com.fasterxml.jackson.databind.node.ObjectNode.put(java.lang.String,exons.get(((exons.size()) - 1)).get(\"cdna_end\").asText())"], "Fixed commit": "ebe4338de58889a7e1f26ffe6668bc5d70cf2ba5", "Url": "https://api.github.com/repos/icgc-dcc/dcc-import", "Date": "2016-02-26T20:12:48Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((activity.pause_button_position) == position) { activity.pause_button_position = -1; }else if ((activity.pause_button_position) > position) { activity.pause_button_position = (activity.pause_button_position) - 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/4239/buggy-version/app.src.main.java.com.justaudio.utils.CustomDialog.java", "BodyUseAPI": [], "Fixed commit": "dbe16c20a87f3b727a4e3211509ba440308452e6", "Url": "https://api.github.com/repos/sixscorpions/justaudio_android", "Date": "2017-03-22T10:37:13Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(strings.hasNext())) return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/5387/buggy-version/common-java.src.main.java.org.daisy.pipeline.braille.Utilities.java", "BodyUseAPI": [], "Fixed commit": "4bdafe5ec47302bd7800dc60ebe67f8519c17f57", "Url": "https://api.github.com/repos/daisy-consortium/pipeline-mod-braille", "Date": "2012-10-15T14:38:28Z"},
{"Line": "=>284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(list.isEmpty())) { cacheList = new java.util.ArrayList(list); return list.get(Utilities.r.nextInt(list.size())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/4949/buggy-version/src.language.Dictionary.java", "BodyUseAPI": ["Utilities.r.nextInt(list.size())", "java.util.List<language.Word>.size()", "java.util.List<language.Word>.get(Utilities.r.nextInt(list.size()))"], "Fixed commit": "987d632f156ec941ff3d4db03019b13540c81cc5", "Url": "https://api.github.com/repos/OliverAbdulrahim/Hangman", "Date": "2015-09-20T00:45:01Z"},
{"Line": "=>382", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((blockBankOption) == (th.zirata.BuildScreen.BLOCK_BANK_TURRET)) { c = th.zirata.TurretBlock.class; }else if ((blockBankOption) == (th.zirata.BuildScreen.BLOCK_BANK_ARMOR)) { c = th.zirata.ArmorBlock.class; }else if ((blockBankOption) == (th.zirata.BuildScreen.BLOCK_BANK_ENERGY)) { c = th.zirata.EnergyBlock.class; }else { c = th.zirata.MultiplierBlock.class; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/2968/buggy-version/app.src.main.java.th.zirata.BuildScreen.java", "BodyUseAPI": [], "Fixed commit": "3372847dc5736fb395da4078e02b6751760c90da", "Url": "https://api.github.com/repos/mbfrahry/Zirata", "Date": "2015-09-24T00:03:13Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (spawnEntry.livingClass.equals(handler.getKey())) { spawnEntry.saveToConfig(config); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/4706/buggy-version/src.jas.common.spawner.creature.handler.CreatureHandlerRegistry.java", "BodyUseAPI": ["jas.common.spawner.creature.entry.SpawnListEntry.saveToConfig(jas.common.config.LivingConfiguration)"], "Fixed commit": "552423c2c1a0dc4d487bf33888e575d4120a845c", "Url": "https://api.github.com/repos/Crudedragos/JustAnotherSpawner", "Date": "2013-06-11T17:21:18Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (spawnEntry.livingClass.equals(handler.getKey())) { spawnEntry.saveToConfig(config); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/4706/buggy-version/src.jas.common.spawner.creature.handler.CreatureHandlerRegistry.java", "BodyUseAPI": ["jas.common.spawner.creature.entry.SpawnListEntry.saveToConfig(jas.common.config.LivingConfiguration)"], "Fixed commit": "552423c2c1a0dc4d487bf33888e575d4120a845c", "Url": "https://api.github.com/repos/Crudedragos/JustAnotherSpawner", "Date": "2013-06-11T17:21:18Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!openQuotes) && (c == '[')) return sb.toString();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/3502/buggy-version/src.main.java.net.platinumdigitalgroup.jvdf.VDFPreprocessor.java", "BodyUseAPI": [], "Fixed commit": "e3ac56a60a5b4e13567614cb40ee4fdbe17cc1d7", "Url": "https://api.github.com/repos/PlatinumDigitalGroup/JVDF", "Date": "2017-09-16T22:47:22Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((geoLocationService) != null) geoLocationService.cancelTimer();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/9130/buggy-version/src.ch.hsr.faith.android.app.activities.SettingsActivity.java", "BodyUseAPI": [], "Fixed commit": "62fd4fe039be620e269d5f3035d523176c3fb9f5", "Url": "https://api.github.com/repos/SE2Prj-FAITH/FAITH-AndroidApp", "Date": "2014-05-01T20:30:02Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (clazz == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/5768/buggy-version/constretto-core.src.main.java.org.constretto.internal.introspect.Constructors.java", "BodyUseAPI": [], "Fixed commit": "7bfd3e37908aab31b1d7bc886529473493946600", "Url": "https://api.github.com/repos/zapodot/constretto-core", "Date": "2013-06-25T15:56:16Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.recombinaseInfo) != null) { unaffectedSystems = this.recombinaseInfo.getUnaffectedSystems(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/8760/buggy-version/src.org.jax.mgi.fewi.summary.RecombinaseSummary.java", "BodyUseAPI": [], "Fixed commit": "624a15eb3e956742062325640330f416b0dd4b6b", "Url": "https://api.github.com/repos/mgijax/fewi", "Date": "2016-03-24T13:24:17Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.recombinaseInfo) != null) { affectedSystems = this.recombinaseInfo.getAffectedSystems(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/8760/buggy-version/src.org.jax.mgi.fewi.summary.RecombinaseSummary.java", "BodyUseAPI": [], "Fixed commit": "624a15eb3e956742062325640330f416b0dd4b6b", "Url": "https://api.github.com/repos/mgijax/fewi", "Date": "2016-03-24T13:24:17Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((transferStatus.getDirection()) == (TransferStatus.Direction.Send)) { intent.setClass(mService, net.nitroshare.android.transfer.TransferService.class); intent.putExtra(TransferService.EXTRA_ID, transferStatus.getId()); builder.addAction(new android.support.v4.app.NotificationCompat.Action.Builder(R.drawable.ic_action_retry, mService.getString(R.string.service_transfer_action_retry), android.app.PendingIntent.getService(mService, transferStatus.getId(), intent, 0)).build()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/1541/buggy-version/app.src.main.java.net.nitroshare.android.transfer.TransferNotificationManager.java", "BodyUseAPI": ["android.content.Intent.putExtra(TransferService.EXTRA_ID,transferStatus.getId())", "android.app.PendingIntent.getService(android.app.Service,transferStatus.getId(),android.content.Intent,int)", "android.support.v4.app.NotificationCompat.Action.Builder.build()", "net.nitroshare.android.transfer.TransferStatus.getId()", "net.nitroshare.android.transfer.TransferStatus.getId()", "NotificationCompat.Builder.addAction(new android.support.v4.app.NotificationCompat.Action.Builder(R.drawable.ic_action_retry, mService.getString(R.string.service_transfer_action_retry), android.app.PendingIntent.getService(mService, transferStatus.getId(), intent, 0)).build())"], "Fixed commit": "c14839b7e43fea9a99336b083e5d58e04ae2f65c", "Url": "https://api.github.com/repos/nitroshare/nitroshare-android", "Date": "2017-10-11T06:36:01Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (CurrencyInfoKey.EURO_ALL_DESCRIPTION.toString().equals(item.getDescription())) { updatedItem.setDescription(getString(R.string.eur_all_description)); updatedItem.setWatermark(getString(R.string.eur_all_watermark)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/9194/buggy-version/src.com.appsimple.detectorbilletesfalsos.NoteInfoActivity.java", "BodyUseAPI": [], "Fixed commit": "d402d2c98c53e93a05702f848a472bb884747164", "Url": "https://api.github.com/repos/maxifantino/DetectorBilletesFalsos", "Date": "2016-02-10T17:36:12Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (type == (TYPE_FLAG)) { this.boxCollider = new game.base.physics.BoxCollider(5, 30); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/8641/buggy-version/src.game.map.Brick.java", "BodyUseAPI": [], "Fixed commit": "9ccc126a56953a0ea9ffb7f3c5bbaa5655c24e58", "Url": "https://api.github.com/repos/vuanhlevis/Moriavnfake", "Date": "2017-08-14T12:41:31Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (text.contains(\"\\\">Recently played\")) { streamInfo[1] = text.substring(((text.indexOf(\"\\\" title=\\\"\")) + 9), text.indexOf(\"\\\">Recently played\")); }else { streamInfo[1] = text.substring(((text.indexOf(\"\\\" title=\\\"\")) + 9), text.indexOf(\"\\\">Now Playing:\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/7697/buggy-version/src.control.Control_http_Shoutcast_2.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.substring(int,int)", "java.lang.String.indexOf(java.lang.String)", "java.lang.String.indexOf(java.lang.String)", "java.lang.String.indexOf(java.lang.String)", "java.lang.String.indexOf(java.lang.String)"], "Fixed commit": "9e0762d1e770fb6e30c9e6d95f1bab49f4801dc3", "Url": "https://api.github.com/repos/Eule/StreamRipStar", "Date": "2012-07-01T17:49:46Z"},
{"Line": "=>380", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((text.trim().length()) > 6) { streamInfo[6] = text.trim().substring(6); }else { streamInfo[6] = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/7697/buggy-version/src.control.Control_http_Shoutcast_2.java", "BodyUseAPI": ["java.lang.String.trim()", "java.lang.String.substring(int)"], "Fixed commit": "9e0762d1e770fb6e30c9e6d95f1bab49f4801dc3", "Url": "https://api.github.com/repos/Eule/StreamRipStar", "Date": "2012-07-01T17:49:46Z"},
{"Line": "=>994", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.orange.common.mongodb.MongoDBClient.findOne(DBConstants.T_PRODUCT,DBConstants.F_ID,org.bson.types.ObjectId)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (dbObject == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/2948/buggy-version/src.com.orange.groupbuy.manager.ProductManager.java", "BodyUseAPI": [], "Fixed commit": "3b3ec257217e727b05f0c1835c0b62d5eadb0483", "Url": "https://api.github.com/repos/gckjdev/Common_Java_GroupBuy", "Date": "2011-09-26T08:14:46Z"},
{"Line": "=>556", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((java.lang.String.valueOf(size).length()) >= 5) return java.lang.String.valueOf(size).substring(0, 4);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/451/buggy-version/daoju001.src.main.java.com.banzhuan.util.StringUtil.java", "BodyUseAPI": ["java.lang.String.valueOf(double)", "java.lang.String.substring(int,int)"], "Fixed commit": "09b40dd053e2261e4a23d774476a0d86bba61a6f", "Url": "https://api.github.com/repos/bigheadbro/daoju001", "Date": "2014-02-26T12:45:44Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (modelUpdating) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/6173/buggy-version/gina-core.src.main.java.org.openflexo.gina.view.widget.impl.FIBGenericTextWidgetImpl.java", "BodyUseAPI": [], "Fixed commit": "736668f79ed74234a8e9a14af2de3683459bb754", "Url": "https://api.github.com/repos/openflexo-team/gina", "Date": "2016-03-23T15:04:29Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (widgetUpdating) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/6173/buggy-version/gina-core.src.main.java.org.openflexo.gina.view.widget.impl.FIBGenericTextWidgetImpl.java", "BodyUseAPI": [], "Fixed commit": "736668f79ed74234a8e9a14af2de3683459bb754", "Url": "https://api.github.com/repos/openflexo-team/gina", "Date": "2016-03-23T15:04:29Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((listOfInformation.size()) > 0) { cs247.group15.data.Properties.setLastUpdate(listOfInformation.get(((listOfInformation.size()) - 1)).getDate().getTime()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/7839/buggy-version/App.src.cs247.group15.app.CS247Service.java", "BodyUseAPI": ["java.util.List<cs247.group15.data.ImportantInformation>.size()", "listOfInformation.get(((listOfInformation.size()) - 1)).getDate()", "cs247.group15.data.Properties.setLastUpdate(listOfInformation.get(((listOfInformation.size()) - 1)).getDate().getTime())", "listOfInformation.get(((listOfInformation.size()) - 1)).getDate().getTime()", "java.util.List<cs247.group15.data.ImportantInformation>.get(((listOfInformation.size()) - 1))"], "Fixed commit": "1d916f14aecd565d6a6cabb36960662a79a16fba", "Url": "https://api.github.com/repos/CS247Group15/CS247", "Date": "2012-05-19T21:56:49Z"},
{"Line": "=>312", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.mobicents.slee.resource.sip11.SipResourceAdaptor.getTransactionWrapper(gov.nist.javax.sip.stack.SIPServerTransaction)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((inviteSTW != null) && (inviteSTW.isActivity())) { activity = inviteSTW; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/4726/buggy-version/resources.sip11.ra.src.main.java.org.mobicents.slee.resource.sip11.SipResourceAdaptor.java", "BodyUseAPI": [], "Fixed commit": "848d82aefb56c96177cc85b0a430bc9c2d96ea91", "Url": "https://api.github.com/repos/Mobicents/jain-slee.sip", "Date": "2013-02-27T15:11:18Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((wrongDate != 0) && (wrongDate == (dtos.size()))) { com.google.common.base.Throwables.propagate(new fr.valtech.bet.service.exception.BetException(java.lang.String.format(\"The user %s entered a wrong score\", user.getUsername()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/7335/buggy-version/src.main.java.fr.valtech.bet.service.match.MatchServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "d223d52cf5ef5c27877a93d75fe3f31676518ae8", "Url": "https://api.github.com/repos/anthonycoulon/bet", "Date": "2014-06-13T19:14:21Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (config.isClustered()) { return ((config.getAgentAutoScaleProperties().getProperty(org.ngrinder.agent.service.autoscale.PROP_AGENT_AUTO_SCALE_CONTROLLER_IP)) + \":\") + (config.getAgentAutoScaleProperties().getProperty(org.ngrinder.agent.service.autoscale.PROP_AGENT_AUTO_SCALE_CONTROLLER_PORT)); }else { return config.getAgentAutoScaleProperties().getProperty(org.ngrinder.agent.service.autoscale.PROP_AGENT_AUTO_SCALE_CONTROLLER_IP); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/4985/buggy-version/ngrinder-controller.src.main.java.org.ngrinder.agent.service.autoscale.AwsAgentAutoScaleAction.java", "BodyUseAPI": ["org.ngrinder.infra.config.Config.getAgentAutoScaleProperties()", "config.getAgentAutoScaleProperties().getProperty(org.ngrinder.agent.service.autoscale.PROP_AGENT_AUTO_SCALE_CONTROLLER_IP)", "config.getAgentAutoScaleProperties().getProperty(org.ngrinder.agent.service.autoscale.PROP_AGENT_AUTO_SCALE_CONTROLLER_IP)", "org.ngrinder.infra.config.Config.getAgentAutoScaleProperties()", "config.getAgentAutoScaleProperties().getProperty(org.ngrinder.agent.service.autoscale.PROP_AGENT_AUTO_SCALE_CONTROLLER_PORT)", "org.ngrinder.infra.config.Config.getAgentAutoScaleProperties()"], "Fixed commit": "3efd1a56dacf0b310590e5e88f6c158fc24366c5", "Url": "https://api.github.com/repos/SRCB-Cloud-Part/ngrinder", "Date": "2015-08-24T05:36:37Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.lang.String, java.lang.Object>.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((value instanceof java.lang.Integer) || (value instanceof java.lang.Double)) valueStr = java.lang.String.valueOf(value); else if (value instanceof java.lang.String) valueStr = (\"\\\\\\\"\" + (value.toString())) + \"\\\\\\\"\"; else throw new java.lang.IllegalAccessError(((\"Type \" + (value.getClass())) + \" is illegal.\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/8014/buggy-version/graphql-client.src.main.java.co.rishe.graphql.GraphQuery.java", "BodyUseAPI": ["java.lang.Object.toString()", "java.lang.Object.getClass()", "java.lang.String.valueOf(java.lang.Object)"], "Fixed commit": "23026f397d84fc3b4d0c9d1dfe3f420ec613db9f", "Url": "https://api.github.com/repos/k3rn3l-p4n1c/Paranoid-Android", "Date": "2016-12-18T16:15:12Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cpuScore == 11) { java.lang.System.out.println((((\"GAME OVER! YOU\\'RE FINAL SCORE: \" + playerScore) + \" || CPU score || \") + cpuScore)); }else if (playerScore == 11) { java.lang.System.out.println((((\"CONGRATULATIONS--VICTORY FOR THE USER! YOU\\'RE FINAL SCORE: \" + playerScore) + \" || CPU score || \") + cpuScore)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/2096/buggy-version/src.PingPong.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)", "java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "d6db573b7bb1ec8433bfbb2df1bd2ec74b1fe424", "Url": "https://api.github.com/repos/Calcious/java-exercises", "Date": "2016-11-18T17:12:05Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (keybd == (mainKeyboard)) { currentKeyboard = Constants.CurrentKeyboard_MAIN; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/2574/buggy-version/SourceCode.ILIT.AndroidApp.IndicKeyboard.app.src.main.java.org.buildmlearn.indickeyboard.MainKeyboard.java", "BodyUseAPI": [], "Fixed commit": "0c405563e20c1648c2d6b7822c485d57c4364f98", "Url": "https://api.github.com/repos/BuildmLearn/Indic-Language-Input-Tool-ILIT", "Date": "2016-06-15T14:11:20Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (gameObject.intact) gameObject.update(currentLevel);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/3212/buggy-version/src.ch.m226.golf.Game.java", "BodyUseAPI": ["ch.m226.golf.game_objects.GameObject.update(ch.m226.golf.Level)"], "Fixed commit": "b1bb2a3165d74f2dae0ef057fca2edac9ffa1bae", "Url": "https://api.github.com/repos/florian-plattner/M226_Golf", "Date": "2017-02-04T15:51:27Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (subscribedInterests.isEmpty()) { subscribedInterests.put(interest, new com.netflix.eureka.server.service.InterestNotificationMultiplexer.InterestSubscriber(interest)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/2314/buggy-version/eureka-server.src.main.java.com.netflix.eureka.server.service.InterestNotificationMultiplexer.java", "BodyUseAPI": ["java.util.Map<com.netflix.eureka.interests.Interest<com.netflix.eureka.registry.InstanceInfo>, com.netflix.eureka.server.service.InterestNotificationMultiplexer.InterestSubscriber>.put(com.netflix.eureka.interests.Interest<com.netflix.eureka.registry.InstanceInfo>,com.netflix.eureka.server.service.InterestNotificationMultiplexer.InterestSubscriber)"], "Fixed commit": "f0aa3c53f5b1b0d4701e19aeac07492424961132", "Url": "https://api.github.com/repos/tbak/eureka", "Date": "2014-09-08T04:26:49Z"},
{"Line": "=>284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((result.getName()) instanceof org.develnext.jphp.core.syntax.generators.manually.FulledNameToken) { name = ((org.develnext.jphp.core.syntax.generators.manually.FulledNameToken) (result.getName())).getLastName().getName().toLowerCase(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/8498/buggy-version/jphp-core.src.org.develnext.jphp.core.syntax.generators.manually.SimpleExprGenerator.java", "BodyUseAPI": ["((org.develnext.jphp.core.syntax.generators.manually.FulledNameToken) (result.getName())).getLastName()", "((org.develnext.jphp.core.syntax.generators.manually.FulledNameToken) (result.getName())).getLastName().getName().toLowerCase()", "((org.develnext.jphp.core.syntax.generators.manually.FulledNameToken) (result.getName())).getLastName().getName()", "org.develnext.jphp.core.syntax.generators.manually.CallExprToken.getName()"], "Fixed commit": "80570cd9dc35fbed924468720e0349b1c34dae83", "Url": "https://api.github.com/repos/POPSuL/jphp", "Date": "2014-05-16T02:03:32Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.LinkedList<java.lang.String>.removeFirst()", "com.googlecode.lanterna.TerminalTextUtils.getStringCharacterIndex(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((characterIndex >= 0) && (characterIndex < characterIndexMax)) && (com.googlecode.lanterna.TerminalTextUtils.isCharCJK(row.charAt(characterIndex)))) { characterIndex++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/1294/buggy-version/src.main.java.com.googlecode.lanterna.TerminalTextUtils.java", "BodyUseAPI": [], "Fixed commit": "6814655fd3cab5e01ffb09effe358d579f88eb8c", "Url": "https://api.github.com/repos/avl42/lanterna", "Date": "2016-02-23T02:23:31Z"},
{"Line": "=>827", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((allhui[i][j]) == 0) willprint[i] = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/2225/buggy-version/ClosedPHM.java", "BodyUseAPI": [], "Fixed commit": "a9c7e625bb77ece80e0831762d68ce5cad9e8c44", "Url": "https://api.github.com/repos/mayank0403/Data-Mining-Assignment", "Date": "2016-11-11T23:31:58Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mLastLocation) != null) { ReloadTheaterList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/3876/buggy-version/app.src.main.java.com.nutstep.movie.activity.TheaterFindActivity.java", "BodyUseAPI": [], "Fixed commit": "c4340707b7154bc07f60b6470265171c2ebd17f3", "Url": "https://api.github.com/repos/Peanutbutteer/movie", "Date": "2016-05-25T10:33:19Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (request.getSession().isNew()) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/500/buggy-version/SecurityContext.src.main.java.com.nurelm.securitycontext.SecurityContextInterceptor.java", "BodyUseAPI": [], "Fixed commit": "4801ff613d9046660f7582defa7917d23746b436", "Url": "https://api.github.com/repos/ninjapanzer/Spring-Deps", "Date": "2012-05-08T16:01:13Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((set) == null) { return new java.util.LinkedHashSet(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/500/buggy-version/EntityTools.src.main.java.com.paul.entitytools.Conversion.SetModel.java", "BodyUseAPI": [], "Fixed commit": "4801ff613d9046660f7582defa7917d23746b436", "Url": "https://api.github.com/repos/ninjapanzer/Spring-Deps", "Date": "2012-05-08T16:01:13Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(value.isValid())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/4559/buggy-version/src.main.java.sci2s.mrfingerprint.MatchingMapper.java", "BodyUseAPI": [], "Fixed commit": "1ef2096888470ad5c7785de6c4e651b3c0599461", "Url": "https://api.github.com/repos/dperaltac/bigdata-fingerprint", "Date": "2016-06-28T16:39:48Z"},
{"Line": "=>381", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((norm) < 0) || ((lsc.norm) < 0)) return -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/4559/buggy-version/src.main.java.sci2s.mrfingerprint.LocalStructureCylinder.java", "BodyUseAPI": [], "Fixed commit": "1ef2096888470ad5c7785de6c4e651b3c0599461", "Url": "https://api.github.com/repos/dperaltac/bigdata-fingerprint", "Date": "2016-06-28T16:39:48Z"},
{"Line": "=>475", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(range.getColumnNames().isEmpty())) { com.google.common.base.Predicate<com.palantir.atlasdb.keyvalue.api.Cell> columnInNames = com.google.common.base.Predicates.compose(com.google.common.base.Predicates.in(range.getColumnNames()), com.palantir.atlasdb.keyvalue.impl.Cells.getColumnFunction()); reads = com.google.common.collect.Maps.filterKeys(reads, columnInNames); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/5978/buggy-version/atlasdb-impl-shared.src.main.java.com.palantir.atlasdb.transaction.impl.SerializableTransaction.java", "BodyUseAPI": ["com.google.common.base.Predicates.in(range.getColumnNames())", "com.palantir.atlasdb.keyvalue.api.RangeRequest.getColumnNames()", "com.google.common.base.Predicates.compose(com.google.common.base.Predicates.in(range.getColumnNames()),com.palantir.atlasdb.keyvalue.impl.Cells.getColumnFunction())"], "Fixed commit": "142b3a6b3d909f4d9f7220f8a436259568b40538", "Url": "https://api.github.com/repos/EvilMcJerkface/atlasdb", "Date": "2016-05-25T21:52:16Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (stashClient != null) { stashClient.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/9160/buggy-version/src.main.java.org.sonar.plugins.stash.StashIssueReportingPostJob.java", "BodyUseAPI": ["org.sonar.plugins.stash.client.StashClient.close()"], "Fixed commit": "acdc7d7f4a50341c6f6dbf94a3a913e02e43d279", "Url": "https://api.github.com/repos/AmadeusITGroup/sonar-stash", "Date": "2016-11-22T11:35:26Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (color.equals(new java.awt.Color(71, 130, 32))) { return new Consumable(Consumable.Type.LARVA, x, y); }else if (color.equals(new java.awt.Color(246, 150, 121))) { return new Platform(Platform.Type.BRICK, x, y); }else if (color.equals(java.awt.Color.GREEN)) { return new Platform(Platform.Type.GRASS, x, y); }else if (color.equals(java.awt.Color.LIGHT_GRAY)) { return new Platform(Platform.Type.DIRT, x, y); }else if (color.equals(new java.awt.Color(151, 149, 92))) { return new Platform(Platform.Type.SAND, x, y); }else if (color.equals(new java.awt.Color(246, 49, 121))) { return new EnemySpawner(EnemyID.SPIKES, x, y); }else if (color.equals(new java.awt.Color(17, 149, 92))) { return new Platform(Platform.Type.CACTUS, x, y); }else if (color.equals(new java.awt.Color(125, 125, 125))) { return new Platform(Platform.Type.COBBLE, x, y); }else if (color.equals(new java.awt.Color(81, 81, 81))) { return new Platform(Platform.Type.STONE, x, y); }else if (color.equals(new java.awt.Color(0, 78, 0))) { return new Platform(Platform.Type.LEAVES, x, y); }else if (color.equals(java.awt.Color.YELLOW)) { spawnX = x; spawnY = y; }else if (color.equals(java.awt.Color.RED)) { return new EnemySpawner(EnemyID.WASP, x, y); }else if (color.equals(java.awt.Color.ORANGE)) { return new Goal(x, y, getNextLevel()); }else { throw new java.lang.IllegalArgumentException((((((\"Unknown Color\" + (color.toString())) + \" \") + x) + \" \") + y)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/2870/buggy-version/Project.Level.java", "BodyUseAPI": ["java.awt.Color.equals(java.awt.Color)", "java.awt.Color.equals(java.awt.Color)", "java.awt.Color.toString()", "java.awt.Color.equals(java.awt.Color)", "java.awt.Color.equals(java.awt.Color)", "java.awt.Color.equals(java.awt.Color)", "java.awt.Color.equals(java.awt.Color)", "java.awt.Color.equals(java.awt.Color)", "java.awt.Color.equals(java.awt.Color)", "java.awt.Color.equals(java.awt.Color)", "java.awt.Color.equals(java.awt.Color)", "java.awt.Color.equals(java.awt.Color)", "java.awt.Color.equals(java.awt.Color)"], "Fixed commit": "c2dabe3d4de62db542fd44047367e55b53eccb8c", "Url": "https://api.github.com/repos/Arne2/GameDesign", "Date": "2016-11-28T13:52:00Z"},
{"Line": "=>362", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isHead) { setupRender(itemStack, x, y, z, 0.125, 0.1875, 0.0, 0.875, 0.875, 0.125); setupRender(itemStack, x, y, z, 0.0, 0.1875, 0.125, 1.0, 0.3125, 1.0); }else { setupRender(itemStack, x, y, z, 0.0, 0.1875, 0.0, 1.0, 0.3125, 1.0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/529/buggy-version/src.main.java.carpentersblocks.renderer.BlockHandlerCarpentersBed.java", "BodyUseAPI": [], "Fixed commit": "02db578babc813eb355494ce24131cdd7ac35c33", "Url": "https://api.github.com/repos/Mineshopper/carpentersblocks", "Date": "2014-07-19T06:28:23Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pieces[(destRow + 1)][destCol]) != null) pieces[(destRow + 1)][destCol].hp -= damage;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/490/buggy-version/app.src.main.java.askim.eratactics.gamelogic.Board.java", "BodyUseAPI": [], "Fixed commit": "4aab2cb63afe8c61ebf42eda01a6846dd276a416", "Url": "https://api.github.com/repos/addykim/Era-Tactics", "Date": "2016-04-05T02:53:49Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pieces[destRow][(destCol + 1)]) != null) pieces[destRow][(destCol + 1)].hp -= damage;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/490/buggy-version/app.src.main.java.askim.eratactics.gamelogic.Board.java", "BodyUseAPI": [], "Fixed commit": "4aab2cb63afe8c61ebf42eda01a6846dd276a416", "Url": "https://api.github.com/repos/addykim/Era-Tactics", "Date": "2016-04-05T02:53:49Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pieces[destRow][(destCol - 1)]) != null) pieces[destRow][(destCol - 1)].hp -= damage;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/490/buggy-version/app.src.main.java.askim.eratactics.gamelogic.Board.java", "BodyUseAPI": [], "Fixed commit": "4aab2cb63afe8c61ebf42eda01a6846dd276a416", "Url": "https://api.github.com/repos/addykim/Era-Tactics", "Date": "2016-04-05T02:53:49Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pieces[(destRow - 1)][destCol]) != null) pieces[(destRow - 1)][destCol].hp -= damage;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/490/buggy-version/app.src.main.java.askim.eratactics.gamelogic.Board.java", "BodyUseAPI": [], "Fixed commit": "4aab2cb63afe8c61ebf42eda01a6846dd276a416", "Url": "https://api.github.com/repos/addykim/Era-Tactics", "Date": "2016-04-05T02:53:49Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (try64First) throw err;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/3695/buggy-version/src.java.org.lwjgl.Sys.java", "BodyUseAPI": [], "Fixed commit": "f760abeb81154ad2976c9879d50500a058150bf1", "Url": "https://api.github.com/repos/tfg13/lwjgl", "Date": "2014-09-13T10:39:22Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<com.wojtechnology.sunami.FireMixtape>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (current.isSoundcloud) { itemHolder.duration.setTextColor(mContext.getResources().getColor(R.color.accentColor)); }else { itemHolder.duration.setTextColor(mContext.getResources().getColor(R.color.primaryColorDark)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/7759/buggy-version/SunApp.app.src.main.java.com.wojtechnology.sunami.ListAdapter.java", "BodyUseAPI": [], "Fixed commit": "7789268da27d9dbf70ae2f13dd0c4b61c7969382", "Url": "https://api.github.com/repos/Wojtechnology/Sunami", "Date": "2015-07-26T01:51:34Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(mRemovedBlocks.contains(blockId))) { mRemovedBlocks.add(blockId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/4218/buggy-version/servers.src.main.java.tachyon.worker.block.BlockHeartbeatReporter.java", "BodyUseAPI": ["java.util.List<java.lang.Long>.add(long)"], "Fixed commit": "f42b4dc5e0c27d89706f5976d9b1ad461917e215", "Url": "https://api.github.com/repos/carsonwang/tachyon", "Date": "2015-06-23T18:25:57Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (intent != null) { org.traccar.client.AutostartReceiver.completeWakefulIntent(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/7065/buggy-version/app.src.main.java.org.traccar.client.TrackingService.java", "BodyUseAPI": ["org.traccar.client.AutostartReceiver.completeWakefulIntent(android.content.Intent)"], "Fixed commit": "3e786e474d9b67081b5edf17afcc18cca76ee5ef", "Url": "https://api.github.com/repos/traccar/traccar-client-android", "Date": "2015-08-17T02:35:24Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<java.lang.String>.subList(int,int)", "java.util.List<java.lang.String>.subList(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(leadingArgs.equals(eLeadingArgs))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/8704/buggy-version/BikeScheme.src.bikescheme.Event.java", "BodyUseAPI": [], "Fixed commit": "0cf15d7bcbb5916a577e4202d68ba088935ccde3", "Url": "https://api.github.com/repos/IGGeorgiev/BikeScheme", "Date": "2015-11-28T14:58:14Z"},
{"Line": "=>388", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (columns == null) { this.columnsRoot = new org.ohmage.request.observer.StreamReadRequest.ColumnNode<java.lang.String>(); }else { this.columnsRoot = columns; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/1474/buggy-version/src.org.ohmage.request.observer.StreamReadRequest.java", "BodyUseAPI": [], "Fixed commit": "fe652437b0f4133742c79b663bddec2598a8ecea", "Url": "https://api.github.com/repos/cens/ohmageServer", "Date": "2012-10-25T17:54:07Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((me.ccrama.redditslide.UserSubscriptions.getMultireddits()) != null) && (!(me.ccrama.redditslide.UserSubscriptions.getMultireddits().isEmpty()))) refreshLayout.setColorSchemeColors(me.ccrama.redditslide.Visuals.Palette.getColors(me.ccrama.redditslide.UserSubscriptions.getMultireddits().get(id).getDisplayName(), getActivity()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/4561/buggy-version/app.src.main.java.me.ccrama.redditslide.Fragments.MultiredditView.java", "BodyUseAPI": [], "Fixed commit": "086e160831629071ecd2dc7553255e55c9b3ce86", "Url": "https://api.github.com/repos/Nxt3/Slide", "Date": "2016-04-06T01:16:46Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((frame.isVisible()) == false) frame.setVisible(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/7038/buggy-version/src.net.unitedfield.pglue.P4PCamera.java", "BodyUseAPI": ["javax.swing.JFrame.setVisible(boolean)"], "Fixed commit": "4d6be2357e5a0c88d559690593f531a5a05c73e2", "Url": "https://api.github.com/repos/yasutonakanishi/Processinglue", "Date": "2013-08-24T01:34:01Z"},
{"Line": "=>3954", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (config instanceof railo.runtime.config.ConfigServer) { railo.runtime.config.ConfigWeb[] webs = ((railo.runtime.config.ConfigServer) (config)).getConfigWebs(); if ((webs.length) == 0) return; if ((webs.length) == 1) { _updateContext(webs[0], is, realpath, closeStream, filesDeployed); return; } try { byte[] barr = railo.commons.io.IOUtil.toBytes(is); for (int i = 0; i < (webs.length); i++) { _updateContext(webs[i], new java.io.ByteArrayInputStream(barr), realpath, true, filesDeployed); } } finally { if (closeStream) railo.commons.io.IOUtil.closeEL(is); } return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/959/buggy-version/railo-java.railo-core.src.railo.runtime.config.ConfigWebAdmin.java", "BodyUseAPI": [], "Fixed commit": "40c53e1ae60fa2734e178c342c5a5799df64f2c2", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2013-05-07T08:10:02Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((slot.size()) == 0) { com.xingcloud.xa.hbase.model.KeyRange keyRange = new com.xingcloud.xa.hbase.model.KeyRange(startRowKey, true, endRowKey, false); slot.add(keyRange); org.apache.drill.exec.store.HBaseRecordReader.logger.info((\"Slot size is 0 to skip uid range, add key range: \" + keyRange)); org.apache.drill.exec.store.Filter skipScanFilter = new com.xingcloud.xa.hbase.filter.SkipScanFilter(slot, uidRange); filterList.addFilter(skipScanFilter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/3824/buggy-version/sandbox.prototype.exec.java-exec.src.main.java.org.apache.drill.exec.store.HBaseRecordReader.java", "BodyUseAPI": ["java.util.List<com.xingcloud.xa.hbase.model.KeyRange>.add(com.xingcloud.xa.hbase.model.KeyRange)"], "Fixed commit": "438ac0cce771dddbd57b5eadb86657715d63282a", "Url": "https://api.github.com/repos/XingCloud/incubator-drill", "Date": "2013-11-04T03:31:13Z"},
{"Line": "=>791", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["allItemGroupProperties.iterator().next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((displayProperties.dispayGroupFrame()) && ((displayProperties.getFrameTitle()) != null)) && ((displayProperties.getFrameTitle().length()) > 0)) { org.eclipse.swt.widgets.Group group = new org.eclipse.swt.widgets.Group(_mainPane, org.eclipse.swt.SWT.NONE); group.setLayout(new org.eclipse.swt.layout.FillLayout()); group.setText(displayProperties.getFrameTitle()); group.setLayoutData(new org.eclipse.swt.layout.GridData((((org.eclipse.swt.layout.GridData.FILL_BOTH) | (org.eclipse.swt.layout.GridData.GRAB_HORIZONTAL)) | (org.eclipse.swt.layout.GridData.GRAB_VERTICAL)))); filterTree = new org.entirej.applicationframework.rwt.table.EJRWTAbstractFilteredTree(group, style) { @java.lang.Override public void filter(java.lang.String filter) { if (((filteredContentProvider) != null) && (((filter == null) && ((filteredContentProvider.getFilter()) != null)) || (!(filter.equals(filteredContentProvider.getFilter()))))) { filteredContentProvider.setFilter(filter); refresh(filter); } } }; }else { filterTree = new org.entirej.applicationframework.rwt.table.EJRWTAbstractFilteredTree(_mainPane, style) { @java.lang.Override public void filter(java.lang.String filter) { if (((filteredContentProvider) != null) && (((filter == null) && ((filteredContentProvider.getFilter()) != null)) || (!(filter.equals(filteredContentProvider.getFilter()))))) { filteredContentProvider.setFilter(filter); refresh(filter); } } }; filterTree.setLayoutData(new org.eclipse.swt.layout.GridData((((org.eclipse.swt.layout.GridData.FILL_BOTH) | (org.eclipse.swt.layout.GridData.GRAB_HORIZONTAL)) | (org.eclipse.swt.layout.GridData.GRAB_VERTICAL)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/3042/buggy-version/entirej-rwt.src.org.entirej.applicationframework.rwt.renderers.blocks.EJRWTTreeRecordBlockRenderer.java", "BodyUseAPI": ["org.eclipse.swt.widgets.Group.setText(displayProperties.getFrameTitle())", "org.entirej.framework.core.properties.interfaces.EJItemGroupProperties.getFrameTitle()"], "Fixed commit": "f401bd3d1f92240e617f164cfd65ea4729c8581b", "Url": "https://api.github.com/repos/entirej/rap", "Date": "2015-10-23T14:21:38Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((args.length) < 1) || ((args.length) > 1)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/978/buggy-version/src.main.java.ninja.kps.gladiatorgadgets.CommandListener.java", "BodyUseAPI": [], "Fixed commit": "283d026e8a596e91630aca4364226dc520a1f9dd", "Url": "https://api.github.com/repos/kylesferrazza/GladiatorGadgets", "Date": "2014-12-21T04:23:32Z"},
{"Line": "=>397", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((org.eclipse.dawnsci.analysis.dataset.impl.AbstractDataset.squeezeShape(dataset.getShape(), false).length) == 0) { dataset = dataset.getSliceView().squeeze(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/383/buggy-version/org.eclipse.dawnsci.hdf5.src.org.eclipse.dawnsci.hdf5.operation.HierarchicalFileExecutionVisitor.java", "BodyUseAPI": ["org.eclipse.dawnsci.analysis.api.dataset.IDataset.getSliceView()", "dataset.getSliceView().squeeze()"], "Fixed commit": "2b34cf56ed78202e9434555486415cf598e2eeea", "Url": "https://api.github.com/repos/eclipse/dawnsci", "Date": "2015-06-12T10:49:31Z"},
{"Line": "=>409", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((dataset.getRank()) == 0) { int[] shape = new int[newShape.length]; java.util.Arrays.fill(shape, 1); dataset.setShape(shape); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/383/buggy-version/org.eclipse.dawnsci.hdf5.src.org.eclipse.dawnsci.hdf5.operation.HierarchicalFileExecutionVisitor.java", "BodyUseAPI": ["org.eclipse.dawnsci.analysis.api.dataset.IDataset.setShape(int[])"], "Fixed commit": "2b34cf56ed78202e9434555486415cf598e2eeea", "Url": "https://api.github.com/repos/eclipse/dawnsci", "Date": "2015-06-12T10:49:31Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (cue != null) { srtObject.addCue(cue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/6589/buggy-version/src.main.java.fr.noop.subtitle.srt.SrtParser.java", "BodyUseAPI": ["fr.noop.subtitle.srt.SrtObject.addCue(fr.noop.subtitle.srt.SrtCue)"], "Fixed commit": "da520dd87e3d122aac3131e069110b2c3b339f5a", "Url": "https://api.github.com/repos/noophq/subtitle", "Date": "2016-05-11T09:14:41Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Long.parseLong(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (set.contains(longValue)) { set.remove(longValue); }else { set.add(longValue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/4367/buggy-version/jsoar-core.src.main.java.org.jsoar.kernel.smem.DefaultSemanticMemoryParams.java", "BodyUseAPI": ["java.util.Set<T>.remove(java.lang.Long)", "java.util.Set<T>.add(java.lang.Long)"], "Fixed commit": "8d55f7ffe55c748d7d4b21a0246d93522655c87e", "Url": "https://api.github.com/repos/soartech/jsoar", "Date": "2013-08-08T21:15:47Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["il.ac.huji.chores.MyChoresFragment.getCoinsMap()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((coinsMap.size()) == 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/8997/buggy-version/Chores.src.il.ac.huji.chores.MyChoresFragment.java", "BodyUseAPI": [], "Fixed commit": "ec5929d6dfabd25ec4e6a1681d9425103c0e0347", "Url": "https://api.github.com/repos/Luftzig/Chores", "Date": "2013-09-26T15:02:10Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (descByFields.fields.get(0).equals(\"id\")) { query.field(\"id\").greaterThan(toMongoId(range.referencePoint().get())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/5606/buggy-version/liurushi-fundamental-service.src.main.java.com.beautysight.liurushi.fundamental.infrastructure.persistence.mongo.AbstractMongoRepository.java", "BodyUseAPI": [], "Fixed commit": "7fdb423e187978937c590876225e4cde6e078ebd", "Url": "https://api.github.com/repos/18luohan/beautysight-liurushi", "Date": "2015-11-06T01:56:28Z"},
{"Line": "=>389", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((files.size()) == 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/2930/buggy-version/components.formats-common.src.loci.common.Location.java", "BodyUseAPI": [], "Fixed commit": "85aed7d3bc7213c35c591398416e2764efbddd71", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2014-04-17T19:37:16Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((timer) != null) { timer.cancel(); timer = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/1890/buggy-version/src.main.java.jfxtras.labs.animation.Timer.java", "BodyUseAPI": [], "Fixed commit": "40e22c648d14865256a98ff383ef65fcf81ff191", "Url": "https://api.github.com/repos/JFXtras/jfxtras-labs", "Date": "2013-08-16T06:57:46Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((timer) == null) { timer = new java.util.Timer(isDaemon); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/1890/buggy-version/src.main.java.jfxtras.labs.animation.Timer.java", "BodyUseAPI": [], "Fixed commit": "40e22c648d14865256a98ff383ef65fcf81ff191", "Url": "https://api.github.com/repos/JFXtras/jfxtras-labs", "Date": "2013-08-16T06:57:46Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.DefaultListSelectionModel.getMinSelectionIndex()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (sel >= (getSize())) sel = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/811/buggy-version/josm-todo.src.org.openstreetmap.josm.plugins.todo.TodoListModel.java", "BodyUseAPI": [], "Fixed commit": "14a517b9de89e0a717b3df6951e9ebbda6266791", "Url": "https://api.github.com/repos/AndrewBuck/JOSM-todo", "Date": "2012-03-02T00:37:52Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.DefaultListSelectionModel.getMinSelectionIndex()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (sel > i) sel--;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/811/buggy-version/josm-todo.src.org.openstreetmap.josm.plugins.todo.TodoListModel.java", "BodyUseAPI": [], "Fixed commit": "14a517b9de89e0a717b3df6951e9ebbda6266791", "Url": "https://api.github.com/repos/AndrewBuck/JOSM-todo", "Date": "2012-03-02T00:37:52Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.extrahardmode.config.RootConfig.getPotionEffect(RootNode.ZOMBIES_DEBILITATE_PLAYERS_EFFECT,world.getName())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (effect != null) effect.applyEffect(player, false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/4518/buggy-version/src.main.java.com.extrahardmode.features.monsters.Zombies.java", "BodyUseAPI": ["com.extrahardmode.service.config.customtypes.PotionEffectHolder.applyEffect(com.extrahardmode.features.monsters.Player,boolean)"], "Fixed commit": "d97aadcff406be06fdcc70ba53be0b3a02a93b92", "Url": "https://api.github.com/repos/Di3mex/ExtraHardMode", "Date": "2014-10-11T02:35:20Z"},
{"Line": "=>332", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.Float.isInfinite(speed)) || (java.lang.Float.isNaN(speed))) speed = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/8578/buggy-version/src.edu.ucla.cens.mobility.MobilityDbAdapter.java", "BodyUseAPI": [], "Fixed commit": "897fd0170cb333012e023906b742ae7ac6cdbf55", "Url": "https://api.github.com/repos/cens/MobilityPhone", "Date": "2012-07-31T19:03:03Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.emerson.omerrules.androidgeofencing.GeofenceParser.getInstance()) != null) { com.emerson.omerrules.androidgeofencing.GeofenceParser.getInstance().loadGeoFences(geoFences); for (com.emerson.omerrules.androidgeofencing.GeoFence geoFence : geoFences.keySet()) { addFence(geoFence); android.util.Log.d(com.emerson.omerrules.androidgeofencing.MapsActivity.TAG, \"LOADING FILE FENCES\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/5928/buggy-version/app.src.main.java.com.emerson.omerrules.androidgeofencing.MapsActivity.java", "BodyUseAPI": [], "Fixed commit": "bd72e506a0662c22d7cd06ef312b2b5ad5626c89", "Url": "https://api.github.com/repos/OmerUygurOzer/AndroidGeoFencing", "Date": "2016-07-22T21:45:06Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (format.equals(\"antlr\")) { java.io.File f = new java.io.File(msg.fileName); if (f.exists()) { displayFileName = f.getName(); } }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/2473/buggy-version/tool.src.org.antlr.v4.tool.ErrorManager.java", "BodyUseAPI": [], "Fixed commit": "7b18bd3e0a6142262086f2f4572247cb6ae819d1", "Url": "https://api.github.com/repos/ewanmellor/antlr4", "Date": "2017-10-29T19:03:35Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cs446.mindme.MainActivity.getActivity()) != null) { toggleVisibility(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/8305/buggy-version/app.src.main.java.cs446.mindme.WidgetService.java", "BodyUseAPI": [], "Fixed commit": "4975c441940fcdca37f99abbe449151ebca7df05", "Url": "https://api.github.com/repos/MountRandee/MindMe", "Date": "2015-07-17T19:07:03Z"},
{"Line": "=>395", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.fasterxml.jackson.databind.JsonNode.get(IStore.dbIdName)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (fieldData.isObject()) fieldData = fieldData.get(\"value\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/4497/buggy-version/Java-Core.src.main.java.prompto.type.CategoryType.java", "BodyUseAPI": ["com.fasterxml.jackson.databind.JsonNode.get(java.lang.String)"], "Fixed commit": "6b3df4acdd683730806bdf564a7fc7db41d49c71", "Url": "https://api.github.com/repos/prompto/prompto-java", "Date": "2016-04-25T11:23:29Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.Math.abs(error)) > (java.lang.Math.PI)) { error -= 2 * (java.lang.Math.PI); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/1888/buggy-version/lab5.src.LocalNavigation.LocalNavigation.java", "BodyUseAPI": [], "Fixed commit": "9604d2b5c7ceca51bb6062532463680b759062f3", "Url": "https://api.github.com/repos/vkee/rss_team2", "Date": "2015-03-05T19:14:44Z"},
{"Line": "=>353", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pl.edu.uksw.sipandroidphone.SIPAddressValidator.isValidSipAddress(address)) { initiateCall(); }else { updateStatus(\"Invalid SIP Address\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/1295/buggy-version/app.src.main.java.pl.edu.uksw.sipandroidphone.SipPhoneActivity.java", "BodyUseAPI": [], "Fixed commit": "501fd7d1d1eb1fdc51f3948e4ec3b29784472f07", "Url": "https://api.github.com/repos/AndroidUKSW/SIPAndroidPhone", "Date": "2016-12-11T19:10:50Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (javassist.Modifier.isFinal(affectedMethod.getModifiers())) { logger.warn(((((((\"could not find method \" + (contractBehavior.getName())) + \" in affected class \") + (affectedClass.getName())) + \" for contract class \") + (contractInfo.getContractClass().getName())) + \" and cannot insert a delegate, as the overridden method is final\")); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/9102/buggy-version/c4j.src.main.java.de.vksi.c4j.internal.util.AffectedBehaviorLocator.java", "BodyUseAPI": [], "Fixed commit": "ca740fb7544cc7cb3ad939d8f3ff5f24a28aa6e0", "Url": "https://api.github.com/repos/C4J-Team/C4J", "Date": "2012-09-15T19:54:29Z"},
{"Line": "=>365", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (prefs.contains(Settings.MAP_TYPE)) { setMapType(prefs.getInt(Settings.MAP_TYPE, GoogleMap.MAP_TYPE_NORMAL)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/267/buggy-version/CreuRoja.src.main.java.com.cruzroja.android.ui.activities.MainActivity.java", "BodyUseAPI": ["android.content.SharedPreferences.getInt(Settings.MAP_TYPE,GoogleMap.MAP_TYPE_NORMAL)", "com.cruzroja.android.ui.activities.MainActivity.setMapType(prefs.getInt(Settings.MAP_TYPE, GoogleMap.MAP_TYPE_NORMAL))"], "Fixed commit": "34d215daa882a6ef609a0f04d8935cdf992003ed", "Url": "https://api.github.com/repos/darthsuicune/CreuRoja", "Date": "2014-01-30T13:59:45Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((words.length) == 0) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/6373/buggy-version/NutritionTracker.NutritionTracker.app.src.main.java.net.tigerparents.nut.DataBaseHelper.java", "BodyUseAPI": [], "Fixed commit": "c1e4cbbca72f4bf02ea093675778cc880ca4f70d", "Url": "https://api.github.com/repos/PATHoqin2012/nutrition1", "Date": "2014-04-16T00:25:11Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (contentValues != null) getDataBase().insert(table_name, null, contentValues);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/6373/buggy-version/NutritionTracker.NutritionTracker.app.src.main.java.net.tigerparents.nut.DataBaseHelper.java", "BodyUseAPI": ["android.database.sqlite.SQLiteDatabase.insert(java.lang.String,<nulltype>,android.content.ContentValues)"], "Fixed commit": "c1e4cbbca72f4bf02ea093675778cc880ca4f70d", "Url": "https://api.github.com/repos/PATHoqin2012/nutrition1", "Date": "2014-04-16T00:25:11Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((entry.getAnswers().size()) == 2) throw new pt.uc.dei.aor.project.business.exception.IllegalAnswerOptionsException();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/912/buggy-version/business.src.main.java.pt.uc.dei.aor.project.business.service.ScriptEntryBusinessService.java", "BodyUseAPI": [], "Fixed commit": "ff0d7b8b1fcc4146996a0f30b5ce1477862fab79", "Url": "https://api.github.com/repos/kwakiutlCS/jobapplication", "Date": "2015-08-24T19:09:59Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((deck.deckSize()) < 2) { GraphicsGame.finishGame(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/782/buggy-version/src.GraphicsGame.java", "BodyUseAPI": [], "Fixed commit": "800919165f535beeb09fb649004a6bb5d543a65b", "Url": "https://api.github.com/repos/mmscibor/GameSet", "Date": "2014-05-09T04:23:17Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.fasterxml.jackson.databind.ObjectMapper.readTree(com.fasterxml.jackson.core.JsonParser)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(objectNode.isEmpty(null))) { T next = com.github.dockerjava.core.async.JsonStreamProcessor.OBJECT_MAPPER.treeToValue(objectNode, clazz); resultCallback.onNext(next); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/1487/buggy-version/src.main.java.com.github.dockerjava.core.async.JsonStreamProcessor.java", "BodyUseAPI": ["com.fasterxml.jackson.databind.ObjectMapper.treeToValue(com.fasterxml.jackson.databind.node.ObjectNode,java.lang.Class<T>)"], "Fixed commit": "15400193ae77b45e9c8b88d5c5f8b0a38cf5a396", "Url": "https://api.github.com/repos/KostyaSha/docker-java", "Date": "2016-02-16T22:28:02Z"},
{"Line": "=>299", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (heufybot.utils.FileUtils.touchFile(settingsPath)) { try { javax.xml.parsers.DocumentBuilderFactory docFactory = javax.xml.parsers.DocumentBuilderFactory.newInstance(); javax.xml.parsers.DocumentBuilder docBuilder = docFactory.newDocumentBuilder(); org.w3c.dom.Document doc = docBuilder.newDocument(); org.w3c.dom.Element root = doc.createElement(\"recepients\"); doc.appendChild(root); javax.xml.transform.TransformerFactory transformerFactory = javax.xml.transform.TransformerFactory.newInstance(); javax.xml.transform.Transformer transformer = transformerFactory.newTransformer(); transformer.setOutputProperty(javax.xml.transform.OutputKeys.INDENT, \"yes\"); javax.xml.transform.dom.DOMSource source = new javax.xml.transform.dom.DOMSource(doc); javax.xml.transform.stream.StreamResult result = new javax.xml.transform.stream.StreamResult(new java.io.File(settingsPath)); transformer.transform(source, result); } catch (java.lang.Exception e) { heufybot.core.Logger.error(\"Module: Tell\", \"Message database could not be written.\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/4428/buggy-version/modules.Tell.src.heufybot.modules.Tell.java", "BodyUseAPI": [], "Fixed commit": "fda21abfd8eeb9fd67fd9f9c0751721082e5eb41", "Url": "https://api.github.com/repos/Heufneutje/RE_HeufyBot", "Date": "2013-12-08T18:53:18Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(eventType.isAssignableFrom(event.getClass()))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/8972/buggy-version/src.main.java.nl.dykam.dev.reutil.ReUtil.java", "BodyUseAPI": [], "Fixed commit": "f40349c3b7493e2e15b2964371426dbfaa5e7ee7", "Url": "https://api.github.com/repos/Dykam/ReUtil", "Date": "2014-01-14T01:19:51Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) == 18) delayMillis = 475;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/4106/buggy-version/src.main.java.com.micabyte.android.graphics.MicaSurfaceView.java", "BodyUseAPI": [], "Fixed commit": "def85043e06c74517fbd880aaed996c0f87aea4f", "Url": "https://api.github.com/repos/micabyte/lib_base", "Date": "2014-09-19T20:19:33Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.geosdi.geoplatform.gui.client.widget.WorkspacesComboBox.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (gpWorkspace == null) { workspaceName = workspaceSimpleComboBox.getRawValue(); }else { workspaceName = gpWorkspace.getWorkspaceName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/7340/buggy-version/geoplatform-gui.extensions.gp-publisher-widget.src.main.java.org.geosdi.geoplatform.gui.client.widget.AbstractPublisherWidget.java", "BodyUseAPI": ["org.geosdi.geoplatform.gui.client.model.GPWorkspace.getWorkspaceName()"], "Fixed commit": "d6f7f39f923975d627d76f682796a26c497512df", "Url": "https://api.github.com/repos/geosdi/geo-platform", "Date": "2015-06-01T13:34:20Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (\"patch\".equalsIgnoreCase(ext)) { parent = root + (com.heaven.core.util.FileUtils.INCREMENT_PATH); }else if (\"apatch\".equalsIgnoreCase(ext)) { parent = root + (com.heaven.core.util.FileUtils.HOT_FIX_PATH); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/7076/buggy-version/app.src.main.java.com.heaven.core.util.FileUtils.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)"], "Fixed commit": "ff46f801c3a8097968069a3f3e854028361be490", "Url": "https://api.github.com/repos/heavenisme/BaseCore", "Date": "2016-11-07T08:49:12Z"},
{"Line": "=>870", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((touchPointIndex < 0) || (touchPointIndex > ((getValueCount()) - 1))) return -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/7494/buggy-version/MPChartLib.src.com.github.mikephil.charting.BarLineChartBase.java", "BodyUseAPI": [], "Fixed commit": "1440a7c234fd840f39de66ec43893c4e2eaec025", "Url": "https://api.github.com/repos/PhilJay/MPAndroidChart", "Date": "2014-05-23T15:03:10Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isPageRequested()) { dispatch(request); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/8629/buggy-version/src.Application_Controller.AppController.java", "BodyUseAPI": [], "Fixed commit": "410ab4cc37de00c6b50871ee1472209ddaee114a", "Url": "https://api.github.com/repos/Garigis/CIT360", "Date": "2016-12-09T07:12:52Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.joy.launcher2.util.Util.hasSdcard())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/8060/buggy-version/src.com.joy.launcher2.download.DownloadManager.java", "BodyUseAPI": [], "Fixed commit": "391461315b93ab5a9dc83e106db19a28da8c1f89", "Url": "https://api.github.com/repos/heyongjian/joy_launcher", "Date": "2013-11-05T08:37:02Z"},
{"Line": "=>488", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.joy.launcher2.util.Util.hasSdcard())) { java.lang.CharSequence errorStrings = mContext.getResources().getText(R.string.insert_sd_card); android.widget.Toast.makeText(mContext, errorStrings, Toast.LENGTH_SHORT).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/8060/buggy-version/src.com.joy.launcher2.joyfolder.JoyFolder.java", "BodyUseAPI": [], "Fixed commit": "391461315b93ab5a9dc83e106db19a28da8c1f89", "Url": "https://api.github.com/repos/heyongjian/joy_launcher", "Date": "2013-11-05T08:37:02Z"},
{"Line": "=>3115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.joy.launcher2.util.Util.hasSdcard())) { java.lang.CharSequence errorStrings = getResources().getText(R.string.insert_sd_card); android.widget.Toast.makeText(this, errorStrings, Toast.LENGTH_SHORT).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/8060/buggy-version/src.com.joy.launcher2.Launcher.java", "BodyUseAPI": [], "Fixed commit": "391461315b93ab5a9dc83e106db19a28da8c1f89", "Url": "https://api.github.com/repos/heyongjian/joy_launcher", "Date": "2013-11-05T08:37:02Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.joy.launcher2.util.Util.hasSdcard()) { com.joy.launcher2.push.PushDownloadManager.PushDownLoadTask downloader = com.joy.launcher2.push.PushDownloadManager.getInstances().newDownLoadTask(null, info, callback, false); downloader.run(); }else { if (!isSilent) { java.lang.CharSequence insertSDcard = mContext.getResources().getText(R.string.insert_sd_card); android.widget.Toast.makeText(mContext, insertSDcard, Toast.LENGTH_SHORT).show(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/8060/buggy-version/src.com.joy.launcher2.push.PushService.java", "BodyUseAPI": [], "Fixed commit": "391461315b93ab5a9dc83e106db19a28da8c1f89", "Url": "https://api.github.com/repos/heyongjian/joy_launcher", "Date": "2013-11-05T08:37:02Z"},
{"Line": "=>452", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(hasPost())) { showPost(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/2351/buggy-version/src.org.wordpress.android.ui.reader.ReaderPostDetailFragment.java", "BodyUseAPI": [], "Fixed commit": "ff6974d6fa7d71d6fc60ba6e976b4fba60e584a9", "Url": "https://api.github.com/repos/wordpress-mobile/GraphView", "Date": "2014-05-06T15:00:10Z"},
{"Line": "=>1616", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ucar.unidata.data.GeoSelection.getScreenBound()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (rect == null) { rect = dataChoice.getDataSelection().getGeoSelection().getScreenBound(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/1734/buggy-version/src.ucar.unidata.data.grid.GeoGridDataSource.java", "BodyUseAPI": [], "Fixed commit": "2131ef77ad74e5361ad29b2202f51f70deaa637f", "Url": "https://api.github.com/repos/Unidata/IDV", "Date": "2013-12-24T06:04:39Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["template.getName().trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(org.apache.commons.lang.StringUtils.isAlphanumeric(tempplateName))) { java.lang.String msg = \"Only Alphanumeric characters and underscores are allowed in database privilege template name\"; org.wso2.carbon.rssmanager.core.service.RSSAdmin.log.error(msg); throw new org.wso2.carbon.rssmanager.core.exception.RSSManagerException(msg); }else this.getEnvironmentAdaptor().addDatabasePrivilegeTemplate(environmentName, template);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/7521/buggy-version/components.rss-manager.org.wso2.carbon.rssmanager.core.src.main.java.org.wso2.carbon.rssmanager.core.service.RSSAdmin.java", "BodyUseAPI": [], "Fixed commit": "aa0a73a3246bca8125e6158db6fbe5ac9fe38428", "Url": "https://api.github.com/repos/poshtha/carbon-storage-management", "Date": "2014-09-17T13:35:32Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((oi.getDriveAxisLeft()) == 0.0) this.getPIDController().setSetpoint(drive.getGyroOutput());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/311/buggy-version/src.main.java.org.usfirst.frc.team449.robot.drive.talonCluster.commands.ArcadeDriveDefaultTTA.java", "BodyUseAPI": [], "Fixed commit": "0ccff23679b86dcb67f0ff3b4b771a3a54b1d720", "Url": "https://api.github.com/repos/blair-robot-project/robot2017", "Date": "2017-01-24T20:47:30Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.nascenia.biyeta.utils.Utils.isOnline(getActivity())) startActivity(new android.content.Intent(getContext(), com.nascenia.biyeta.activity.Search_Filter.class)); else com.nascenia.biyeta.utils.Utils.ShowAlert(getActivity(), getString(R.string.no_internet_connection));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/3353/buggy-version/app.src.main.java.com.nascenia.biyeta.fragment.Search.java", "BodyUseAPI": [], "Fixed commit": "72d8ae952de5fd37d622ec014673636ceb9d23eb", "Url": "https://api.github.com/repos/Ovi-nascenia/b-ye", "Date": "2017-04-06T06:14:56Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((notes) == null) notes = note + \"\\n----------\\n\"; else notes += note + \"\\n----------\\n\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/6020/buggy-version/ContactImpl.java", "BodyUseAPI": [], "Fixed commit": "271be803f14750d43a7425ae338a8cccaebf63ef", "Url": "https://api.github.com/repos/ahormoz/ContactManager", "Date": "2014-02-23T17:06:09Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getString(context.getString(R.string.pref_key_country),java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (locale.equals(\"\")) locale = context.getResources().getConfiguration().locale.getCountry();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/5045/buggy-version/app.src.main.java.com.udacity.nanodegree.nghianja.spotifystreamer.SpotifyStreamerApp.java", "BodyUseAPI": [], "Fixed commit": "4852182eed1c4f914c86a27cd838e857debb1d99", "Url": "https://api.github.com/repos/nghianja/SpotifyStreamer", "Date": "2015-09-17T13:09:38Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (response == null) return -999.0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/8651/buggy-version/app.src.main.java.ch.ethz.inf.vs.a2.sensor.RawHttpSensor.java", "BodyUseAPI": [], "Fixed commit": "8fde5ab69792da0d4de2f9a4c80d3628b3fb5b47", "Url": "https://api.github.com/repos/ebhardjan/VS_vatrifon_Webservices", "Date": "2015-10-18T14:07:26Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (response == null) return -999.0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/8651/buggy-version/app.src.main.java.ch.ethz.inf.vs.a2.sensor.JsonSensor.java", "BodyUseAPI": [], "Fixed commit": "8fde5ab69792da0d4de2f9a4c80d3628b3fb5b47", "Url": "https://api.github.com/repos/ebhardjan/VS_vatrifon_Webservices", "Date": "2015-10-18T14:07:26Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (move < (-20)) { cleanLongClick(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/4471/buggy-version/app.src.main.java.cbgm.de.listapi.listener.CBSwipeListener.java", "BodyUseAPI": [], "Fixed commit": "2e1b3e5b2c0443e421a55fd3b2a31d02b53a51b2", "Url": "https://api.github.com/repos/cbgm/ListAPI", "Date": "2017-11-08T08:41:44Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isTwoPane)) { navigationView.getMenu().getItem(currentSection).setChecked(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/5721/buggy-version/app.src.main.java.com.rocdev.guardianreader.activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "77e4435994fb8a579ebf40f198ecd5239d77c34a", "Url": "https://api.github.com/repos/pieeet/GuardianReader", "Date": "2017-06-08T07:32:26Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((goal.equals(done)) && (type.equals(\"sportTodo\"))) { context.loadTodo(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/2501/buggy-version/TodoPlus.app.src.main.java.zli.todoplus.TodoListAdapter.java", "BodyUseAPI": [], "Fixed commit": "342d94f2243c6cbac9567433b7fa47bdc9ad7748", "Url": "https://api.github.com/repos/fabianbaechli/android_app", "Date": "2017-09-07T11:08:33Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.asciidoctor.Asciidoctor.renderFile(java.io.File,org.asciidoctor.Options)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (renderedFile != null) { output.append(renderedFile).append(java.lang.System.getProperty(\"line.separator\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/6602/buggy-version/src.main.java.org.asciidoctor.cli.AsciidoctorInvoker.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "a308889fb436cd523a021b0f02409e05fdcc1bc8", "Url": "https://api.github.com/repos/mojavelinux/asciidoctor-java-integration", "Date": "2013-07-02T19:47:24Z"},
{"Line": "=>893", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.java.sip.communicator.impl.protocol.jabber.extensions.colibri.ColibriConferenceIQ.Channel.getSourceGroups()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((sourceGroups != null) && (!(getSourceGroups().isEmpty()))) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/2925/buggy-version/src.net.java.sip.communicator.impl.protocol.jabber.extensions.colibri.ColibriConferenceIQ.java", "BodyUseAPI": [], "Fixed commit": "f70ec469ef98dbd4f274ea417770b739efe24183", "Url": "https://api.github.com/repos/jitsi/jitsi", "Date": "2014-11-25T14:45:31Z"},
{"Line": "=>493", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["services.command.CommandService.getCommandByName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (command instanceof services.command.CombatCommand) { return ((services.command.CombatCommand) (command)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/6125/buggy-version/src.services.command.CommandService.java", "BodyUseAPI": [], "Fixed commit": "3ff8d7b9407961f614808a1788724a9f2db0af02", "Url": "https://api.github.com/repos/portocol/NGECore2", "Date": "2014-04-07T04:22:44Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["intent.getExtras().get(Light.EXTRA_DATA)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((values.get(Light_Data.LIGHT_LUX)) != null) { com.aware.plugin.lux_meter.ContextCard.current = java.lang.Double.parseDouble(values.get(Light_Data.LIGHT_LUX).toString()); com.aware.plugin.lux_meter.ContextCard.avg = (com.aware.plugin.lux_meter.ContextCard.avg) + (com.aware.plugin.lux_meter.ContextCard.current); com.aware.plugin.lux_meter.ContextCard.counter = (com.aware.plugin.lux_meter.ContextCard.counter) + 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/1165/buggy-version/lux_meter.src.main.java.com.aware.plugin.lux_meter.ContextCard.java", "BodyUseAPI": ["android.content.ContentValues.get(Light_Data.LIGHT_LUX)", "java.lang.Double.parseDouble(values.get(Light_Data.LIGHT_LUX).toString())", "values.get(Light_Data.LIGHT_LUX).toString()"], "Fixed commit": "95b6990381fae8a10a8cb855db632d3f245ca626", "Url": "https://api.github.com/repos/heppu/com.aware.plugin.lux_meter", "Date": "2014-12-01T04:03:31Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (iGrid >= 1) { i = (iGrid - 1) / 2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/5256/buggy-version/src.com.lunasoft.dynasty.tools.mapeditor.HexGridDimensions.java", "BodyUseAPI": [], "Fixed commit": "a19334295d9287158397a0541679b6bd61810f65", "Url": "https://api.github.com/repos/jamesrjones/Dynasty", "Date": "2013-04-11T15:30:38Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cascading.operation.OperationCall<cascading.operation.expression.ScriptOperation.Context>.getArgumentFields()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (argumentFields.isNone()) context.parameterTypes = new java.lang.Class[0];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/5986/buggy-version/cascading-core.src.main.java.cascading.operation.expression.ScriptOperation.java", "BodyUseAPI": [], "Fixed commit": "9879c4a16a6a78a1623911689788eff0716246c3", "Url": "https://api.github.com/repos/gerashegalov/cascading", "Date": "2014-08-22T18:51:58Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(java.util.Arrays.asList(com.darrelld.simpleglacier.Main.validCommands).contains(com.darrelld.simpleglacier.Main.command))) { throw new java.lang.Error(((com.darrelld.simpleglacier.Main.command) + \" is not a valid command\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/1871/buggy-version/com.darrelld.simpleglacier.Main.java", "BodyUseAPI": [], "Fixed commit": "6fee342f42e3659841bb4b3a37ebdff621a1776c", "Url": "https://api.github.com/repos/darrell-d/freeze", "Date": "2015-05-08T20:14:25Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((checkDefinitionId) != null) && (!(checkDefinitionId.equals(checkDefinitionId)))) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/8446/buggy-version/src.main.java.de.zalando.zmon.scheduler.ng.alerts.AlertDefinition.java", "BodyUseAPI": [], "Fixed commit": "dbaa915fb4f981d7140c0efb53e022b5fad27da2", "Url": "https://api.github.com/repos/zalando-zmon/zmon-scheduler", "Date": "2016-06-06T10:08:10Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.server.ServerGameRoom.getBattle()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (winner.equals(battle.getDefender())) associatedHex.getArmies().remove(battle.getOffender()); else associatedHex.getArmies().remove(battle.getDefender());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/3574/buggy-version/KingNThings.src.com.server.handlers.BattleRequestHandler.java", "BodyUseAPI": ["com.model.Battle.getOffender()", "associatedHex.getArmies().remove(battle.getDefender())", "com.model.Battle.getDefender()", "associatedHex.getArmies().remove(battle.getOffender())"], "Fixed commit": "255ebefa480f91351c52a81467fcb1bc07bd1a02", "Url": "https://api.github.com/repos/jasonfleischer/KingsNThings", "Date": "2014-04-07T19:16:00Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mPatterns) != (getListFromStash())) { mPatterns = getListFromStash(); java.util.Collections.sort(mPatterns, new com.geekeclectic.android.stashcache.StashPatternComparator()); com.geekeclectic.android.stashcache.StashPatternListFragment.PatternAdapter adapter = new com.geekeclectic.android.stashcache.StashPatternListFragment.PatternAdapter(mPatterns); setListAdapter(adapter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/4495/buggy-version/StashCache.app.src.main.java.com.geekeclectic.android.stashcache.StashPatternListFragment.java", "BodyUseAPI": [], "Fixed commit": "ff7e0bf25e894911c10784e56cb1b6d110cc141a", "Url": "https://api.github.com/repos/sylkai/stash_cache", "Date": "2015-03-28T21:34:09Z"},
{"Line": "=>318", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.Statement.executeQuery(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (getCurt.next()) { currentLifes = getCurt.getInt(\"Lifecount\"); getCurt.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/5342/buggy-version/src.database.Score.java", "BodyUseAPI": ["java.sql.ResultSet.close()", "java.sql.ResultSet.getInt(java.lang.String)"], "Fixed commit": "bf83423008227bc7e480a3175bd1dde8ef71b497", "Url": "https://api.github.com/repos/RookStudios/Lernkartei", "Date": "2016-05-18T07:23:45Z"},
{"Line": "=>333", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((potentialPolygon.size()) > 2) { if (validPos) { potentialPolygon.add(mouseDrawPos.cpy()); } if (!(isConvex(potentialPolygon))) { shapeRenderer.setColor(Color.RED); }else { shapeRenderer.setColor(Color.WHITE); } potentialPolygon.remove(((potentialPolygon.size()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/421/buggy-version/core.src.com.mygdx.game.GameScreen.java", "BodyUseAPI": ["java.util.ArrayList<com.badlogic.gdx.math.Vector2>.remove(((potentialPolygon.size()) - 1))", "com.mygdx.game.GameScreen.isConvex(java.util.ArrayList<com.badlogic.gdx.math.Vector2>)", "java.util.ArrayList<com.badlogic.gdx.math.Vector2>.size()", "java.util.ArrayList<com.badlogic.gdx.math.Vector2>.add(mouseDrawPos.cpy())"], "Fixed commit": "ba0d3694bc47fbc4a12c96eafe9d57b4f4dc654e", "Url": "https://api.github.com/repos/2015-HHSS-ICS4UI-01/finalproject-whohasthetalkingball", "Date": "2016-01-19T21:40:39Z"},
{"Line": "=>2141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ourneighborschild.ChildDB.getChildren(soFamily.getID())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(famChildren.isEmpty())) { java.lang.StringBuilder schools = new java.lang.StringBuilder(buildChildSchoolString(famChildren.get(0))); for (int cn = 1; cn < (famChildren.size()); cn++) schools.append((\"\\r\" + (buildChildSchoolString(famChildren.get(cn))))); famSchools = schools.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/4991/buggy-version/src.ourneighborschild.SortFamilyDialog.java", "BodyUseAPI": ["java.util.List<ourneighborschild.ONCChild>.size()", "ourneighborschild.SortFamilyDialog.buildChildSchoolString(famChildren.get(cn))", "java.lang.StringBuilder.append((\"\\r\" + (buildChildSchoolString(famChildren.get(cn)))))", "ourneighborschild.SortFamilyDialog.buildChildSchoolString(famChildren.get(0))", "java.util.List<ourneighborschild.ONCChild>.get(int)", "java.util.List<ourneighborschild.ONCChild>.get(int)"], "Fixed commit": "53d88f3696e499ae0392eabc6ddaafef0f08bc8a", "Url": "https://api.github.com/repos/oneilljw/ONC-Client", "Date": "2017-09-26T15:59:29Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((map) != null) { java.lang.System.out.println(\"Drawing map\"); displayMap(); displayWaypoints(); }else { java.lang.System.out.println(\"Map is still null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/6032/buggy-version/src.main.java.path_planning.PlannerNode.java", "BodyUseAPI": [], "Fixed commit": "9d784b5d3a40d7b3afecb52308343a533d855cda", "Url": "https://api.github.com/repos/rss-2014-team-6/rss-team-6-path-planning", "Date": "2014-04-14T21:09:41Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sb.length()) > 0) { sb.deleteCharAt(((sb.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/1039/buggy-version/src.main.java.it.cnr.isti.hpc.erd.ErdAnnotation.java", "BodyUseAPI": ["java.lang.StringBuilder.deleteCharAt(int)", "java.lang.StringBuilder.length()"], "Fixed commit": "afb5be798099f596b2dc12546a8d8618ab98787f", "Url": "https://api.github.com/repos/diegoceccarelli/erd-challenge", "Date": "2014-05-27T12:23:50Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((composites) != null) && ((composites.size()) > 0)) { onCompositesReady(); getSupportActionBar().setTitle(currentGallery); controller.loadCaptions(composites.get(currentPosition), currentPosition); detailsFragment.setGalleryItem(composites.get(currentPosition).galleryItem); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/8966/buggy-version/ezimgur.src.com.ezimgur.view.activity.GalleryCompactActivity.java", "BodyUseAPI": ["com.ezimgur.control.IGalleryController.loadCaptions(composites.get(currentPosition),int)", "com.ezimgur.view.activity.ItemDetailsFragment.setGalleryItem(composites.get(currentPosition).galleryItem)", "java.util.List<com.ezimgur.datacontract.GalleryItemComposite>.get(int)", "java.util.List<com.ezimgur.datacontract.GalleryItemComposite>.get(int)"], "Fixed commit": "abec5d0cd9da79d2c0e65842443a2e7a07d2e138", "Url": "https://api.github.com/repos/eggman87/ezimgur-open", "Date": "2013-12-26T20:59:51Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((future) != null) { return future; }else if (((future) == null) && ((internalBuf.position()) > 0)) { internalBuf.flip(); future = outputStream().write(internalBuf); internalBuf.clear(); return future; }else { return noOp; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/4039/buggy-version/client.src.main.java.com.ibm.crail.CrailBufferedOutputStream.java", "BodyUseAPI": [], "Fixed commit": "8dbca01e966d1dd384206c2c7e0f308cc0669bd5", "Url": "https://api.github.com/repos/zrlio/crail", "Date": "2017-04-19T15:22:01Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((file.isFile()) && (!(file.canExecute()))) return hudson.util.FormValidation.error(jenkins.plugins.shiningpanda.Messages.FormValidationUtil_Python_NotExecutable());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/7911/buggy-version/src.main.java.jenkins.plugins.shiningpanda.utils.FormValidationUtil.java", "BodyUseAPI": [], "Fixed commit": "635d1f0ff2748d4d261ba0ff4ebc8c4c111bec4f", "Url": "https://api.github.com/repos/jenkinsci/shiningpanda-plugin", "Date": "2012-11-04T20:56:20Z"},
{"Line": "=>1120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.mitre.provenance.db.neo4j.Neo4JStorage.db) == null) org.mitre.provenance.db.neo4j.Neo4JStorage.initialize();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/8230/buggy-version/src.main.java.org.mitre.provenance.db.neo4j.Neo4JStorage.java", "BodyUseAPI": [], "Fixed commit": "f5b59a380d4bf5fd3d8017bcef722109a130fa8a", "Url": "https://api.github.com/repos/plus-provenance/plus", "Date": "2014-04-24T13:14:24Z"},
{"Line": "=>1195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.mitre.provenance.db.neo4j.Neo4JStorage.db) == null) org.mitre.provenance.db.neo4j.Neo4JStorage.initialize();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/8230/buggy-version/src.main.java.org.mitre.provenance.db.neo4j.Neo4JStorage.java", "BodyUseAPI": [], "Fixed commit": "f5b59a380d4bf5fd3d8017bcef722109a130fa8a", "Url": "https://api.github.com/repos/plus-provenance/plus", "Date": "2014-04-24T13:14:24Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.financial.tools.recorderserver.business.FinancialManager.getFinancialRecord(request.getFinancialRecordId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(org.apache.commons.lang3.StringUtils.isBlank(financialRecord.getUserNames()))) { userNameList = com.google.common.collect.Lists.newArrayList(financialRecord.getUserNames().split(FinancialRecorderConstants.USER_NAME_SEPARATE)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/4411/buggy-version/FinancialRecorderServer.src.main.java.com.financial.tools.recorderserver.service.FinancialService.java", "BodyUseAPI": ["com.google.common.collect.Lists.newArrayList(financialRecord.getUserNames().split(FinancialRecorderConstants.USER_NAME_SEPARATE))", "financialRecord.getUserNames().split(FinancialRecorderConstants.USER_NAME_SEPARATE)", "com.financial.tools.recorderserver.entity.FinancialRecord.getUserNames()"], "Fixed commit": "e58abe35dddc3af5d2aef5e3e570fc7c001a4e60", "Url": "https://api.github.com/repos/fbird/FinancialRecorder", "Date": "2013-04-16T00:37:19Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(net.minecraft.server.MinecraftServer.getServer().isCallingFromMinecraftThread())) { throw new java.lang.IllegalStateException((((\"Detected attempt to add entity '\" + entityIn) + \"\\' to tracker asynchronously.\\n\") + \" This is very bad as it can cause ConcurrentModificationException's during server tick.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/236/buggy-version/src.main.java.org.spongepowered.common.mixin.core.entity.MixinEntityTracker.java", "BodyUseAPI": [], "Fixed commit": "9e5f22fbd85cf62df463d210184b2fc6ca837375", "Url": "https://api.github.com/repos/ZephireNZ/SpongeCommon", "Date": "2016-07-14T02:25:59Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(net.minecraft.server.MinecraftServer.getServer().isCallingFromMinecraftThread())) { throw new java.lang.IllegalStateException((((\"Detected attempt to untrack entity '\" + entityIn) + \"\\' asynchronously.\\n\") + \"This is very bad as it can cause ConcurrentModificationException's during server tick.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/236/buggy-version/src.main.java.org.spongepowered.common.mixin.core.entity.MixinEntityTracker.java", "BodyUseAPI": [], "Fixed commit": "9e5f22fbd85cf62df463d210184b2fc6ca837375", "Url": "https://api.github.com/repos/ZephireNZ/SpongeCommon", "Date": "2016-07-14T02:25:59Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.getWhitespaceFollowedNode(com.puppycrawl.tools.checkstyle.api.DetailAST)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((whitespaceFollowedAst.getNextSibling()) == null) || ((whitespaceFollowedAst.getNextSibling().getType()) != (com.puppycrawl.tools.checkstyle.api.TokenTypes.ANNOTATIONS))) { final int whitespaceColumnNo = com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.getPositionAfter(whitespaceFollowedAst); final int whitespaceLineNo = whitespaceFollowedAst.getLineNo(); if (hasTrailingWhitespace(ast, whitespaceColumnNo, whitespaceLineNo)) { log(whitespaceLineNo, whitespaceColumnNo, com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.MSG_KEY, whitespaceFollowedAst.getText()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/8669/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.java", "BodyUseAPI": ["com.puppycrawl.tools.checkstyle.api.DetailAST.getText()", "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.getPositionAfter(com.puppycrawl.tools.checkstyle.api.DetailAST)", "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.log(int,int,java.lang.String,whitespaceFollowedAst.getText())", "com.puppycrawl.tools.checkstyle.api.DetailAST.getLineNo()"], "Fixed commit": "2c73c554d39b795d05ed40f0def56e2b504a942a", "Url": "https://api.github.com/repos/sergileon/checkstyle", "Date": "2017-09-05T11:43:02Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.hadoop.fs.Path.getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((pathName.split(\"=\").length) != 2) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/7389/buggy-version/indexing-hadoop.src.main.java.io.druid.indexer.path.PartitionPathSpec.java", "BodyUseAPI": [], "Fixed commit": "558672c64899694c165666a3d0b64edf2dff848f", "Url": "https://api.github.com/repos/sirpkt/druid", "Date": "2016-05-10T07:10:58Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (applyWavesEffect) initWaves();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/3159/buggy-version/src.main.java.gwt.material.design.client.custom.MaterialWidget.java", "BodyUseAPI": [], "Fixed commit": "3b460e5f2edb8dbc69851524c9e3ad5f9af23b93", "Url": "https://api.github.com/repos/akubasa/gwt-material", "Date": "2015-04-24T05:41:41Z"},
{"Line": "=>973", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cx.ath.dekosuke.ftbt.FutabaThreadAdapter.getContext()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((fthread.toast) != null) { fthread.toast.cancel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/5521/buggy-version/src.cx.ath.dekosuke.ftbt.FutabaThread.java", "BodyUseAPI": ["android.widget.Toast.cancel()"], "Fixed commit": "98db532a504fa9bd47af6cecd79d3ba984baf465", "Url": "https://api.github.com/repos/dekosuke/ftbt", "Date": "2011-06-26T05:26:17Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["co.cask.cdap.client.AuthorizationClient.doExecuteRequest(co.cask.common.http.HttpRequest,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((java.net.HttpURLConnection.HTTP_NOT_FOUND) == (httpResponse.getResponseCode())) { if (!(listAllRoles().contains(new co.cask.cdap.proto.security.Role(principal.getName())))) { throw new co.cask.cdap.common.NotFoundException((\"Role: \" + (principal.getName()))); } throw new co.cask.cdap.common.NotFoundException(entityId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/4102/buggy-version/cdap-client.src.main.java.co.cask.cdap.client.AuthorizationClient.java", "BodyUseAPI": [], "Fixed commit": "26e5c98e18ac305a804915c1c486d96ea5172656", "Url": "https://api.github.com/repos/caskdata/cdap", "Date": "2016-06-20T18:32:15Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (expr instanceof net.unicoen.node.UniCharacterLiteral) { return ((net.unicoen.node.UniCharacterLiteral) (expr)).value; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/231/buggy-version/src.main.java.net.unicoen.interpreter.Engine.java", "BodyUseAPI": [], "Fixed commit": "b813002e194e6ac33576525e10751dfe3a86d4e7", "Url": "https://api.github.com/repos/UnicoenProject/Junicoen", "Date": "2016-07-20T10:30:17Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.isFinishing())) { startActivity(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/5206/buggy-version/src.com.Ichif1205.jupiter.SplashActivity.java", "BodyUseAPI": [], "Fixed commit": "8241e17e4cbc6d73cd7cc1f74d90dca3847bfee3", "Url": "https://api.github.com/repos/wkodate/JupiterAndroid", "Date": "2015-04-05T14:54:06Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.yan.pullrefreshlayout.PullRefreshLayoutUtil.isRecyclerViewToTop(recyclerView)) && (com.yan.pullrefreshlayout.PullRefreshLayoutUtil.isRecyclerViewToBottom(recyclerView))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/3719/buggy-version/pullrefreshlayout.src.main.java.com.yan.pullrefreshlayout.PullRefreshLayout.java", "BodyUseAPI": [], "Fixed commit": "1585f9995e760d8b3778b2e9ea5335f252c2ecbc", "Url": "https://api.github.com/repos/genius158/PullRefreshLayout", "Date": "2017-08-21T10:08:43Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((gameboard.gameState.getCurrSide()) == (GameState.MIN_PLAYER)) { gameboard.gameState.revertOneMove(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/5197/buggy-version/src.wuziqi.MainUI.java", "BodyUseAPI": ["wuziqi.GameState.revertOneMove()"], "Fixed commit": "2b861e6412b8dd61775b1409b3ef0e75a7aa9555", "Url": "https://api.github.com/repos/projectcs2103t/5inRow", "Date": "2015-05-18T15:08:04Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.muzima.service.ObservationParserUtility.getObservationEntity(com.muzima.api.model.Concept,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (observation == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/4658/buggy-version/src.main.java.com.muzima.service.HTMLFormObservationCreator.java", "BodyUseAPI": [], "Fixed commit": "d5e95ded31c49ea85a199d052751383fcc7c0f0d", "Url": "https://api.github.com/repos/muzima/muzima-android", "Date": "2015-08-11T19:48:51Z"},
{"Line": "=>546", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((com.codename1.ui.html.HTMLComponent.DEFAULT_FONT) == null) { com.codename1.ui.html.HTMLComponent.DEFAULT_FONT = new com.codename1.ui.html.HTMLFont(null, com.codename1.ui.Font.createSystemFont(Font.FACE_SYSTEM, Font.STYLE_PLAIN, Font.SIZE_MEDIUM)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/265/buggy-version/CodenameOne.src.com.codename1.ui.html.HTMLComponent.java", "BodyUseAPI": [], "Fixed commit": "55fb05eedf67ceba686f27092f7599ecc1350822", "Url": "https://api.github.com/repos/codenameone/CodenameOne", "Date": "2016-06-10T16:33:16Z"},
{"Line": "=>540", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((com.codename1.ui.html.HTMLComponent.INDENT_OL) < 0) { com.codename1.ui.html.HTMLComponent.INDENT_OL = com.codename1.ui.Font.getDefaultFont().stringWidth(\"8888. \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/265/buggy-version/CodenameOne.src.com.codename1.ui.html.HTMLComponent.java", "BodyUseAPI": [], "Fixed commit": "55fb05eedf67ceba686f27092f7599ecc1350822", "Url": "https://api.github.com/repos/codenameone/CodenameOne", "Date": "2016-06-10T16:33:16Z"},
{"Line": "=>543", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((com.codename1.ui.html.HTMLComponent.INDENT_UL) < 0) { com.codename1.ui.html.HTMLComponent.INDENT_UL = com.codename1.ui.Font.getDefaultFont().charWidth('W'); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/265/buggy-version/CodenameOne.src.com.codename1.ui.html.HTMLComponent.java", "BodyUseAPI": [], "Fixed commit": "55fb05eedf67ceba686f27092f7599ecc1350822", "Url": "https://api.github.com/repos/codenameone/CodenameOne", "Date": "2016-06-10T16:33:16Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wildfly.build.ArtifactResolver.getArtifact(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (dependencyArtifact == null) { dependencyArtifact = buildArtifactResolver.getArtifact((dependency + \":zip\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/5409/buggy-version/feature-pack-build-maven-plugin.src.main.java.org.wildfly.build.featurepack.FeaturePackBuilder.java", "BodyUseAPI": [], "Fixed commit": "6f201bc3ff1a1cba878344b7373c04ac5d88deb7", "Url": "https://api.github.com/repos/wildfly/wildfly-build-tools", "Date": "2017-05-11T00:16:43Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(active)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/1641/buggy-version/src.main.java.io.jsync.spi.cluster.impl.HazelcastClusterManager.java", "BodyUseAPI": [], "Fixed commit": "5bf9ac87c2d25eca2997f02aeca47ad3dd049514", "Url": "https://api.github.com/repos/BestellenSoftware/jsync.io", "Date": "2016-03-11T06:41:01Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["evaluator.Evaluator.eval(((evaluator.Omistamine) (node)).getAvaldis(),java.util.Map<java.lang.String, evaluator.Avaldis>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (v\u00e4\u00e4rtus instanceof java.lang.Integer) { avaldis = ((evaluator.Avaldis) (new evaluator.T\u00e4isarvLiteraal(((int) (v\u00e4\u00e4rtus))))); }else if (v\u00e4\u00e4rtus instanceof java.lang.Double) { avaldis = ((evaluator.Avaldis) (new evaluator.KomagaLiteraal(((double) (v\u00e4\u00e4rtus))))); }else if (v\u00e4\u00e4rtus instanceof java.lang.String) { avaldis = ((evaluator.Avaldis) (new evaluator.S\u00f5neLiteraal(((java.lang.String) (v\u00e4\u00e4rtus))))); }else if (v\u00e4\u00e4rtus instanceof java.lang.Boolean) { avaldis = ((evaluator.Avaldis) (new evaluator.T\u00f5ev\u00e4\u00e4rtusLiteraal(((boolean) (v\u00e4\u00e4rtus))))); }else { java.lang.System.out.println((\"Evaluator.jooksuta Omistamine. Avaldis ei v\u00e4\u00e4rtustunud. Klass on \" + (v\u00e4\u00e4rtus.getClass().getName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/9054/buggy-version/src.evaluator.Evaluator.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)", "java.lang.Object.getClass()", "java.lang.Class<? extends java.lang.Object>.getName()"], "Fixed commit": "dd5282c06d641276262e25cdd4836bd5c863a17e", "Url": "https://api.github.com/repos/joosepnorma/tiiger", "Date": "2014-05-25T13:01:06Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["evaluator.Evaluator.eval(fun.getParameetrid().get(0),java.util.Map<java.lang.String, evaluator.Avaldis>)", "evaluator.Evaluator.eval(fun.getParameetrid().get(1),java.util.Map<java.lang.String, evaluator.Avaldis>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((a instanceof java.lang.Double) && (b instanceof java.lang.Integer)) { java.lang.System.out.println(\"Esimene on Integer, esimene Double\"); java.util.List<java.lang.Double> tegurid = new java.util.ArrayList<>(); tegurid.add(((double) (a))); tegurid.add(((double) ((int) (a)))); if (tehteM\u00e4rgid.contains(fNimi)) { return arvutaDouble(fNimi, tegurid); }else if (v\u00f5rdlusOperatsioonid.contains(fNimi)) { return v\u00f5rdleDouble(fNimi, tegurid); } java.lang.System.out.println(\"Evaluator.t\u00e4idaFunktsioon error\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/9054/buggy-version/src.evaluator.Evaluator.java", "BodyUseAPI": [], "Fixed commit": "dd5282c06d641276262e25cdd4836bd5c863a17e", "Url": "https://api.github.com/repos/joosepnorma/tiiger", "Date": "2014-05-25T13:01:06Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isConnected())) { connectImpl(); setConnected(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/8558/buggy-version/src.com.invertor.modbus.ModbusMaster.java", "BodyUseAPI": [], "Fixed commit": "e6883483245e5cfb756affce632bb7f4e3417d31", "Url": "https://api.github.com/repos/kochedykov/jlibmodbus", "Date": "2017-04-25T18:31:00Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.datamelt.coordination.JobManager.getNextJobs()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((nextJobIds.size()) > 0) { java.lang.String jobId = nextJobIds.get(0); com.datamelt.etl.Job job = jobManager.getJob(jobId); sendClientMessage(((((\"next job(s): \" + nextJobIds) + \" at [\") + (job.getScheduledStartTime().getTime())) + \"]\")); }else { sendClientMessage(\"no next job\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/8853/buggy-version/src.com.datamelt.coordination.ClientHandler.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.get(int)", "com.datamelt.coordination.ClientHandler.sendClientMessage(((((\"next job(s): \" + nextJobIds) + \" at [\") + (job.getScheduledStartTime().getTime())) + \"]\"))"], "Fixed commit": "bf03172b2142a1dec9ed87caa84d7bcb432ff8af", "Url": "https://api.github.com/repos/uwegeercken/jobrunner", "Date": "2017-12-22T22:30:28Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((aUser.getName()) == null) { android.util.Log.i(\"20150121 1\", \"null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/85/buggy-version/source.src.com.v2tech.view.conference.VideoAttendeeListLayout.java", "BodyUseAPI": [], "Fixed commit": "5b736023ddfbd2e6b24483ac187dfc07a9d7f580", "Url": "https://api.github.com/repos/jiangzhen1984/V2TechConferenceClient", "Date": "2015-01-21T04:02:17Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((wr.a) != null) { aUser = wr.a.getUser(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/85/buggy-version/source.src.com.v2tech.view.conference.VideoAttendeeListLayout.java", "BodyUseAPI": ["com.v2tech.vo.Attendee.getUser()"], "Fixed commit": "5b736023ddfbd2e6b24483ac187dfc07a9d7f580", "Url": "https://api.github.com/repos/jiangzhen1984/V2TechConferenceClient", "Date": "2015-01-21T04:02:17Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (logObject.toString().contains(SessionContext.appConfig.basicAuth_userId)) { logObject = logObject.toString().replaceAll(((\"http://\" + (SessionContext.appConfig.basicAuth_userId)) + \"@\"), \"http://\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/1134/buggy-version/src.main.java.org.spo.fw.log.Logger1.java", "BodyUseAPI": ["java.lang.String.replaceAll(((\"http://\" + (SessionContext.appConfig.basicAuth_userId)) + \"@\"),java.lang.String)", "java.lang.Object.toString()"], "Fixed commit": "4657e5522f7c8c6dfa5871bbd4ef1321cc4d0f5a", "Url": "https://api.github.com/repos/premganz/SeleniumPageObjects", "Date": "2015-08-18T10:56:41Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jayway.jsonpath.JsonPath.read(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((coordinates.indexOf('.')) > (coordinates.indexOf(','))) { int len = coordinates.length(); for (int i = 0; i < len; i++) { char c = coordinates.charAt(i); if (c == '.') changed_coordinates += ','; else if (c == ',') changed_coordinates += '.'; else changed_coordinates += c; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/3480/buggy-version/src.main.java.ge.edu.freeuni.sdp.iot.service.weather.service.WeatherService.java", "BodyUseAPI": ["java.lang.String.charAt(int)", "java.lang.String.length()"], "Fixed commit": "31d4a92579b4292744d1e29eb4108a994483fea4", "Url": "https://api.github.com/repos/freeuni-sdp/iot-weather", "Date": "2016-07-11T21:06:29Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (definition.endsWith(\",\\\\\")) { return com.liferay.portal.kernel.util.StringUtil.replace(content, definition, definition.substring(0, ((definition.length()) - 2))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/2329/buggy-version/modules.util.source-formatter.src.main.java.com.liferay.source.formatter.checks.BNDDefinitionKeysCheck.java", "BodyUseAPI": ["com.liferay.portal.kernel.util.StringUtil.replace(java.lang.String,java.lang.String,java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "ae3feb8a76e19e493b226bf3acb993eb8c2cdf02", "Url": "https://api.github.com/repos/BChenLR/liferay-portal", "Date": "2017-07-20T17:14:14Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.baderlab.wordcloud.internal.CloudParameters.getCloudName()", "org.baderlab.wordcloud.internal.SemanticSummaryManager.getCurNetwork()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((networkParams.getNetwork().getDefaultNodeTable().getColumn(cloudName)) != null) { networkParams.getNetwork().getDefaultNodeTable().deleteColumn(cloudName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/3867/buggy-version/src.main.java.org.baderlab.wordcloud.internal.DeleteCloudAction.java", "BodyUseAPI": ["org.baderlab.wordcloud.internal.SemanticSummaryParameters.getNetwork()", "networkParams.getNetwork().getDefaultNodeTable().deleteColumn(java.lang.String)", "networkParams.getNetwork().getDefaultNodeTable()"], "Fixed commit": "fb6da8cd4a089a12c5731d5ad26b884667acf9e8", "Url": "https://api.github.com/repos/BaderLab/WordCloudPlugin", "Date": "2014-08-01T15:56:04Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((filter) == null) { filter = \"INCLUDE\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/2382/buggy-version/security.src.main.java.it.geosolutions.geoserver.sira.security.config.Rule.java", "BodyUseAPI": [], "Fixed commit": "782c5ca8813a86aad93fffd5bb8f309f30e8643e", "Url": "https://api.github.com/repos/tdipisa/csi-sira", "Date": "2016-03-01T17:28:54Z"},
{"Line": "=>405", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (libHasFavourites) { for (int i = librarySize; i >= 0; i--) { if ((gamesList.get(i).isFavorite()) && ((gamesList.get(i).getGameName()) != null)) { c++; favGameListName.add(gamesList.get(i).getGameName()); } } java.lang.String[] array = favGameListName.toArray(new java.lang.String[favGameListName.size()]); java.util.Arrays.sort(array); for (int i = 0; i < (favGameListName.size()); i++) { int h = 0; while (!(gamesList.get(h).getName().equals(array[i]))) { h++; } if (gamesList.get(h).isFavorite()) { libraryUI.getGridManager().addGame(gamesList.get(h)); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/8336/buggy-version/src.aurora.V1.core.screen_logic.LibraryLogic.java", "BodyUseAPI": [], "Fixed commit": "0c53681d4e54a315932f7f812bfc94192e345c06", "Url": "https://api.github.com/repos/sguergachi/AuroraGameHub", "Date": "2014-08-24T23:53:18Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((controller.PasswordChangerController.getInstance().getStage()) == null) controller.PasswordChangerController.getInstance().initStage();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/4477/buggy-version/src.controller.MainController.java", "BodyUseAPI": [], "Fixed commit": "9d10398a34846cc524cadfbeec761a5364afe57c", "Url": "https://api.github.com/repos/JiMadness/IWS_ScoreCard", "Date": "2016-07-25T05:52:53Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gg.al.character.Character.getComponent(int,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (statComponent != null) statComponent.statusEffects.put(effectName, effect);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/6478/buggy-version/core.src.gg.al.character.Character.java", "BodyUseAPI": ["statComponent.statusEffects.put(java.lang.String,gg.al.logic.component.data.StatusEffect)"], "Fixed commit": "6b482b864c7307f5b5213ea177736fa0f49071f2", "Url": "https://api.github.com/repos/EtherWorks/arcadelegends-gg", "Date": "2017-06-12T09:09:46Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gg.al.character.Character.getComponent(int,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (statComponent != null) statComponent.damages.add(damage);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/6478/buggy-version/core.src.gg.al.character.Character.java", "BodyUseAPI": ["statComponent.damages.add(gg.al.logic.component.data.Damage)"], "Fixed commit": "6b482b864c7307f5b5213ea177736fa0f49071f2", "Url": "https://api.github.com/repos/EtherWorks/arcadelegends-gg", "Date": "2017-06-12T09:09:46Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(clearNextAppend)) { if ((textEquation.getText().charAt(((textEquation.length()) - 1))) != '.') { textEquation.append(\".\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/1268/buggy-version/app.src.main.java.self.calculator.TextController.java", "BodyUseAPI": [], "Fixed commit": "13fa9aeb537e40084f54d5713ac5caf78310a0b9", "Url": "https://api.github.com/repos/beckert3/Calculator", "Date": "2017-03-22T17:51:28Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.github.teamsweq.dpzones.ClassManager.getClass(org.bukkit.entity.Player)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (oldClass != null) { io.github.teamsweq.dpzones.ClassManager.removeClass(player, oldClass); io.github.teamsweq.dpzones.ClassManager.invokeMethod(oldClass, \"UNASSIGN\", player); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/4093/buggy-version/DPZones.src.main.java.io.github.teamsweq.dpzones.ClassManager.java", "BodyUseAPI": ["io.github.teamsweq.dpzones.ClassManager.removeClass(org.bukkit.entity.Player,java.lang.Class<? extends io.github.teamsweq.dpzones.ZonesClass>)", "io.github.teamsweq.dpzones.ClassManager.invokeMethod(java.lang.Class<? extends io.github.teamsweq.dpzones.ZonesClass>,java.lang.String,org.bukkit.entity.Player)"], "Fixed commit": "024e459c117e7ba8020276c3c485fda75371aa81", "Url": "https://api.github.com/repos/TeamSweq/DPZones", "Date": "2014-11-27T01:23:36Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Class<? extends io.github.teamsweq.dpzones.ZonesClass>, java.util.List<java.util.UUID>>.get(java.lang.Class<? extends io.github.teamsweq.dpzones.ZonesClass>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (players != null) { players.remove(player.getUniqueId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/4093/buggy-version/DPZones.src.main.java.io.github.teamsweq.dpzones.ClassManager.java", "BodyUseAPI": ["java.util.List<java.util.UUID>.remove(player.getUniqueId())"], "Fixed commit": "024e459c117e7ba8020276c3c485fda75371aa81", "Url": "https://api.github.com/repos/TeamSweq/DPZones", "Date": "2014-11-27T01:23:36Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((waitFor(com.github.rosjava.android_remocons.headless_launcher.NfcLauncherActivity.Step.VALIDATE_CONCERT, 15)) == false) { if ((errorString.length()) == 0) { throw new java.lang.Exception(((\"Cannot connect to \" + (ssid)) + \": Aborting app launch\")); }else { throw new java.lang.Exception((((\"Cannot connect to \" + (ssid)) + \": \") + (errorString))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/6129/buggy-version/headless_launcher.src.main.java.com.github.rosjava.android_remocons.headless_launcher.NfcLauncherActivity.java", "BodyUseAPI": [], "Fixed commit": "e5c509416ae5fc12c3c7f0d273b288549d564f74", "Url": "https://api.github.com/repos/rosjava/android_remocons", "Date": "2014-05-28T02:00:25Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((position % 2) == 0) { holder.itemView.setLayoutParams(new android.view.ViewGroup.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, java.lang.Math.max(100, random.nextInt(400)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/1375/buggy-version/app.src.main.java.bskyb.com.hello.appium.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "83572f5e697a9dd3799f686b7ceae49d974ce202", "Url": "https://api.github.com/repos/hoomi/Test_Appium", "Date": "2016-05-11T12:19:13Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((position % 2) == 0) { view.setLayoutParams(new android.view.ViewGroup.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, java.lang.Math.max(100, random.nextInt(400)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/1375/buggy-version/app.src.main.java.bskyb.com.hello.appium.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "83572f5e697a9dd3799f686b7ceae49d974ce202", "Url": "https://api.github.com/repos/hoomi/Test_Appium", "Date": "2016-05-11T12:19:13Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((adversary) != null) { java.lang.Boolean response = java.lang.Boolean.parseBoolean(tokenizer.nextToken()); adversary.notifyMatchResponse(response); if (!response) { adversary = null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/4123/buggy-version/P4_Server.src.Client.java", "BodyUseAPI": [], "Fixed commit": "437c160c9d115641192b776233fec9810852c166", "Url": "https://api.github.com/repos/Baltosss/Puissance4", "Date": "2015-01-13T21:03:07Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getCurrentUser()) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/3448/buggy-version/mobile.src.com.example.csen704.activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "f57875b12e431707a9f9281be559febc583bfb17", "Url": "https://api.github.com/repos/MohamedBassem/CSEN704", "Date": "2014-12-20T15:10:12Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (n != 0) { res.add(Numerals.morph(n, thousand.plurals)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/7950/buggy-version/Numerals.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(java.lang.String)", "Numerals.morph(int,java.lang.String[])"], "Fixed commit": "c0403b09c8550766a5b7cf5cde47a2a4d3e7ad0c", "Url": "https://api.github.com/repos/PastorGL/numerals-in-words-ru", "Date": "2013-12-23T11:50:57Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (n != 0) { res.add(Numerals.morph(n, thousand.plurals)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/7950/buggy-version/Numerals.java", "BodyUseAPI": ["Numerals.morph(int,java.lang.String[])", "java.util.ArrayList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "c0403b09c8550766a5b7cf5cde47a2a4d3e7ad0c", "Url": "https://api.github.com/repos/PastorGL/numerals-in-words-ru", "Date": "2013-12-23T11:50:57Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (null != (leg.getServiceProviderId())) legEntity.setSp(liquid.persistence.domain.ServiceProviderEntity.newInstance(liquid.persistence.domain.ServiceProviderEntity.class, leg.getServiceProviderId()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/3709/buggy-version/web-console.src.main.java.liquid.controller.LegController.java", "BodyUseAPI": ["liquid.shipping.domain.Leg.getServiceProviderId()", "liquid.shipping.persistence.domain.LegEntity.setSp(liquid.persistence.domain.ServiceProviderEntity.newInstance(liquid.persistence.domain.ServiceProviderEntity.class, leg.getServiceProviderId()))", "liquid.persistence.domain.ServiceProviderEntity.newInstance(java.lang.Class,leg.getServiceProviderId())"], "Fixed commit": "04044719d20c213df8eff5256af3096ff53972c5", "Url": "https://api.github.com/repos/redbrick9/liquid", "Date": "2014-08-27T02:19:33Z"},
{"Line": "=>815", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((null != dataHandler) && (null != (dataHandler.getStore()))) { dataHandler.getStore().storeRoomStateEvent(roomId, event); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/1289/buggy-version/matrix-sdk.src.main.java.org.matrix.androidsdk.data.RoomState.java", "BodyUseAPI": ["dataHandler.getStore().storeRoomStateEvent(java.lang.String,org.matrix.androidsdk.rest.model.Event)", "org.matrix.androidsdk.MXDataHandler.getStore()"], "Fixed commit": "66a1c4a964c1be77db0f2767f608befce6f5fac9", "Url": "https://api.github.com/repos/matrix-org/matrix-android-sdk", "Date": "2017-05-05T07:51:41Z"},
{"Line": "=>1058", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (reducedSet.isOff((i - 1))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/5010/buggy-version/eppic-cli.src.main.java.eppic.assembly.Assembly.java", "BodyUseAPI": [], "Fixed commit": "eb4527b0d732369e584b660967275b0cfa6bed5e", "Url": "https://api.github.com/repos/eppic-team/eppic", "Date": "2017-04-17T04:57:33Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["nl.openweb.hippo.groovy.annotations.Updater.name()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (parent.hasNode(name)) { parent.getNode(name).remove(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/5433/buggy-version/updatersync.src.main.java.nl.openweb.hippo.groovy.GroovyFilesServiceImpl.java", "BodyUseAPI": ["javax.jcr.Node.getNode(java.lang.String)", "parent.getNode(name).remove()"], "Fixed commit": "1990555ac7af7f11180976488c9de1ce2223669b", "Url": "https://api.github.com/repos/openweb-nl/hippo-groovy-updater", "Date": "2017-09-22T23:15:03Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isBlank(updater.xpath())) { nl.openweb.hippo.groovy.YamlGenerator.addNotEmptyProperty(PropertyName.HIPPOSYS_PATH, updater.path(), properties); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/5433/buggy-version/bootstrapgenerator.src.main.java.nl.openweb.hippo.groovy.YamlGenerator.java", "BodyUseAPI": ["nl.openweb.hippo.groovy.YamlGenerator.addNotEmptyProperty(PropertyName.HIPPOSYS_PATH,updater.path(),java.util.Map<java.lang.String, java.lang.Object>)", "nl.openweb.hippo.groovy.annotations.Updater.path()"], "Fixed commit": "1990555ac7af7f11180976488c9de1ce2223669b", "Url": "https://api.github.com/repos/openweb-nl/hippo-groovy-updater", "Date": "2017-09-22T23:15:03Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (i == 0) { edu.columbia.cs.nlp.YaraParser.Accessories.Utils.avgMatrices(((edu.columbia.cs.nlp.YaraParser.Learning.NeuralNetwork.Layers.FirstHiddenLayer) (layer(i))).getWordEmbeddings().getW(), ((edu.columbia.cs.nlp.YaraParser.Learning.NeuralNetwork.Layers.FirstHiddenLayer) (avgLayers.get(i))).getWordEmbeddings().getW(), r1, r2); edu.columbia.cs.nlp.YaraParser.Accessories.Utils.avgMatrices(((edu.columbia.cs.nlp.YaraParser.Learning.NeuralNetwork.Layers.FirstHiddenLayer) (layer(i))).getPosEmbeddings().getW(), ((edu.columbia.cs.nlp.YaraParser.Learning.NeuralNetwork.Layers.FirstHiddenLayer) (avgLayers.get(i))).getPosEmbeddings().getW(), r1, r2); edu.columbia.cs.nlp.YaraParser.Accessories.Utils.avgMatrices(((edu.columbia.cs.nlp.YaraParser.Learning.NeuralNetwork.Layers.FirstHiddenLayer) (layer(i))).getDepEmbeddings().getW(), ((edu.columbia.cs.nlp.YaraParser.Learning.NeuralNetwork.Layers.FirstHiddenLayer) (avgLayers.get(i))).getDepEmbeddings().getW(), r1, r2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/4238/buggy-version/src.edu.columbia.cs.nlp.YaraParser.Learning.NeuralNetwork.MLPNetwork.java", "BodyUseAPI": ["((edu.columbia.cs.nlp.YaraParser.Learning.NeuralNetwork.Layers.FirstHiddenLayer) (avgLayers.get(i))).getWordEmbeddings()", "java.util.ArrayList<edu.columbia.cs.nlp.YaraParser.Learning.NeuralNetwork.Layers.Layer>.get(int)", "((edu.columbia.cs.nlp.YaraParser.Learning.NeuralNetwork.Layers.FirstHiddenLayer) (layer(i))).getWordEmbeddings().getW()", "edu.columbia.cs.nlp.YaraParser.Learning.NeuralNetwork.MLPNetwork.layer(int)", "((edu.columbia.cs.nlp.YaraParser.Learning.NeuralNetwork.Layers.FirstHiddenLayer) (avgLayers.get(i))).getPosEmbeddings().getW()", "((edu.columbia.cs.nlp.YaraParser.Learning.NeuralNetwork.Layers.FirstHiddenLayer) (avgLayers.get(i))).getDepEmbeddings()", "edu.columbia.cs.nlp.YaraParser.Learning.NeuralNetwork.MLPNetwork.layer(int)", "((edu.columbia.cs.nlp.YaraParser.Learning.NeuralNetwork.Layers.FirstHiddenLayer) (avgLayers.get(i))).getDepEmbeddings().getW()", "edu.columbia.cs.nlp.YaraParser.Learning.NeuralNetwork.MLPNetwork.layer(int)", "edu.columbia.cs.nlp.YaraParser.Accessories.Utils.avgMatrices(((edu.columbia.cs.nlp.YaraParser.Learning.NeuralNetwork.Layers.FirstHiddenLayer) (layer(i))).getWordEmbeddings().getW(),((edu.columbia.cs.nlp.YaraParser.Learning.NeuralNetwork.Layers.FirstHiddenLayer) (avgLayers.get(i))).getWordEmbeddings().getW(),double,double)", "java.util.ArrayList<edu.columbia.cs.nlp.YaraParser.Learning.NeuralNetwork.Layers.Layer>.get(int)", "edu.columbia.cs.nlp.YaraParser.Accessories.Utils.avgMatrices(((edu.columbia.cs.nlp.YaraParser.Learning.NeuralNetwork.Layers.FirstHiddenLayer) (layer(i))).getDepEmbeddings().getW(),((edu.columbia.cs.nlp.YaraParser.Learning.NeuralNetwork.Layers.FirstHiddenLayer) (avgLayers.get(i))).getDepEmbeddings().getW(),double,double)", "((edu.columbia.cs.nlp.YaraParser.Learning.NeuralNetwork.Layers.FirstHiddenLayer) (layer(i))).getDepEmbeddings().getW()", "edu.columbia.cs.nlp.YaraParser.Learning.NeuralNetwork.Layers.Layer.getWordEmbeddings()", "((edu.columbia.cs.nlp.YaraParser.Learning.NeuralNetwork.Layers.FirstHiddenLayer) (layer(i))).getPosEmbeddings().getW()", "edu.columbia.cs.nlp.YaraParser.Learning.NeuralNetwork.Layers.Layer.getPosEmbeddings()", "((edu.columbia.cs.nlp.YaraParser.Learning.NeuralNetwork.Layers.FirstHiddenLayer) (avgLayers.get(i))).getWordEmbeddings().getW()", "java.util.ArrayList<edu.columbia.cs.nlp.YaraParser.Learning.NeuralNetwork.Layers.Layer>.get(int)", "edu.columbia.cs.nlp.YaraParser.Accessories.Utils.avgMatrices(((edu.columbia.cs.nlp.YaraParser.Learning.NeuralNetwork.Layers.FirstHiddenLayer) (layer(i))).getPosEmbeddings().getW(),((edu.columbia.cs.nlp.YaraParser.Learning.NeuralNetwork.Layers.FirstHiddenLayer) (avgLayers.get(i))).getPosEmbeddings().getW(),double,double)", "((edu.columbia.cs.nlp.YaraParser.Learning.NeuralNetwork.Layers.FirstHiddenLayer) (avgLayers.get(i))).getPosEmbeddings()", "edu.columbia.cs.nlp.YaraParser.Learning.NeuralNetwork.Layers.Layer.getDepEmbeddings()"], "Fixed commit": "a66da80a31abdf00f11a2f7d30c5a8be6329c7c9", "Url": "https://api.github.com/repos/rasoolims/Cura-Parser", "Date": "2016-08-20T03:59:29Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (context.hasValue(id)) return context.getValue(id); else { prompto.grammar.INamed named = context.getRegistered(id); if (named instanceof prompto.runtime.Context.MethodDeclarationMap) { prompto.declaration.ConcreteMethodDeclaration decl = ((prompto.declaration.ConcreteMethodDeclaration) (((prompto.runtime.Context.MethodDeclarationMap) (named)).values().iterator().next())); prompto.type.MethodType type = new prompto.type.MethodType(decl); return new prompto.value.ClosureValue(context, type); }else throw new prompto.error.SyntaxError((\"No instance or method with name:\" + (id))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/8075/buggy-version/Java-Core.src.main.java.prompto.expression.InstanceExpression.java", "BodyUseAPI": ["prompto.runtime.Context.getValue(prompto.grammar.Identifier)", "prompto.runtime.Context.getRegistered(prompto.grammar.Identifier)"], "Fixed commit": "e684c340fcde6b7528689c24787dec78713b3007", "Url": "https://api.github.com/repos/prompto/prompto-java", "Date": "2016-11-19T01:45:21Z"},
{"Line": "=>1914", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isSdx) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/8443/buggy-version/plugins.network-elements.netscaler.src.com.cloud.network.resource.NetscalerResource.java", "BodyUseAPI": [], "Fixed commit": "d3af2dbecacf260acda9f84a51a42838cc0f798c", "Url": "https://api.github.com/repos/apache/cloudstack", "Date": "2014-07-22T21:28:01Z"},
{"Line": "=>1873", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (reread != null) { java.lang.Object value = field.get(reread); field.set(o, value); aNew = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/9191/buggy-version/src.de.caluga.morphium.Morphium.java", "BodyUseAPI": ["java.lang.reflect.Field.get(java.lang.Object)"], "Fixed commit": "8df89f501bde7b28e9a543fae6391894051341e8", "Url": "https://api.github.com/repos/sboesebeck/morphium", "Date": "2017-04-26T08:13:41Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (value.hasOwner()) value.downgradeLinkFromOwner();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/2764/buggy-version/src.main.java.com.bluesky.visualprogramming.core.nativeproc.map.MapObject.java", "BodyUseAPI": ["com.bluesky.visualprogramming.core._Object.downgradeLinkFromOwner()"], "Fixed commit": "c6513c38740032f58f8f211b79684f351e4d6ec6", "Url": "https://api.github.com/repos/jackhatedance/visual-programming", "Date": "2014-03-19T15:32:59Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["it.sinergis.datacatalogue.services.DatasetsService.getFieldValueFromJsonText(java.lang.String,Constants.DSET_ID_FIELD)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNumeric(idDataset)) { boolean deleted = gsc007Dao.delete(java.lang.Long.parseLong(idDataset)); if (deleted) { return createJsonStatus(Constants.STATUS_DONE, Constants.DATASETS_DELETED, null, req); }else { throw new it.sinergis.datacatalogue.exception.DCException(it.sinergis.datacatalogue.common.Constants.ER702, req); } }else { throw new it.sinergis.datacatalogue.exception.DCException(it.sinergis.datacatalogue.common.Constants.ER707, req); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/4614/buggy-version/server.src.main.java.it.sinergis.datacatalogue.services.DatasetsService.java", "BodyUseAPI": ["it.sinergis.datacatalogue.persistence.services.Gsc007DatasetPersistence.delete(long)", "java.lang.Long.parseLong(java.lang.String)"], "Fixed commit": "79543f462fda05f19dacbcac33a982196f1f896f", "Url": "https://api.github.com/repos/GeoSmartCity-CIP/gsc-datacatalogue", "Date": "2016-02-17T15:28:32Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["atm.repository.AccountRepository.selectAccount(account.getAccountNumber())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (null == bankAccount) { result.put(\"resultKey\", false); result.put(\"accountKey\", account); return result; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/7467/buggy-version/src.main.java.atm.service.AccountValidation.java", "BodyUseAPI": [], "Fixed commit": "8e3b7b24a9bd020b70b01b46f199192b5238f228", "Url": "https://api.github.com/repos/sjshin000/ATM_spring", "Date": "2016-04-12T03:15:40Z"},
{"Line": "=>460", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Calendar.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (setDatum(calendar1.get(java.util.Calendar.DAY_OF_MONTH), ((calendar1.get(java.util.Calendar.MONTH)) + 1), calendar1.get(java.util.Calendar.YEAR))) { this.dag = calendar1.get(java.util.Calendar.DAY_OF_MONTH); this.maand = (calendar1.get(java.util.Calendar.MONTH)) + 1; this.jaar = calendar1.get(java.util.Calendar.YEAR); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/7482/buggy-version/opdracht1a.Datum.CalendarDatum.java", "BodyUseAPI": ["java.util.Calendar.get(int)", "java.util.Calendar.get(int)", "java.util.Calendar.get(int)"], "Fixed commit": "b52923bff18d5721835b2147582e547600dce781", "Url": "https://api.github.com/repos/jonasbu/JavaPract-opdr1", "Date": "2015-12-06T22:32:37Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<java.lang.String>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (line.startsWith(\"- \")) { infoLines.set(j, (\"- \" + (t(line.substring(2))))); }else { infoLines.set(j, line.replace(\"{missing_items}\", t(\"gui.refinedstorage:crafting_monitor.missing_items\")).replace(\"{items_crafting}\", t(\"gui.refinedstorage:crafting_monitor.items_crafting\")).replace(\"{items_processing}\", t(\"gui.refinedstorage:crafting_monitor.items_processing\")).replace(\"{none}\", t(\"misc.refinedstorage:none\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/4494/buggy-version/src.main.java.refinedstorage.gui.GuiCraftingMonitor.java", "BodyUseAPI": ["java.lang.String.substring(int)", "java.lang.String.replace(java.lang.String,t(\"gui.refinedstorage:crafting_monitor.items_crafting\"))", "line.replace(\"{missing_items}\", t(\"gui.refinedstorage:crafting_monitor.missing_items\")).replace(\"{items_crafting}\", t(\"gui.refinedstorage:crafting_monitor.items_crafting\")).replace(\"{items_processing}\", t(\"gui.refinedstorage:crafting_monitor.items_processing\")).replace(java.lang.String,t(\"misc.refinedstorage:none\"))", "refinedstorage.gui.GuiCraftingMonitor.t(java.lang.String)", "java.util.List<java.lang.String>.set(int,(\"- \" + (t(line.substring(2)))))", "java.util.List<java.lang.String>.set(int,line.replace(\"{missing_items}\", t(\"gui.refinedstorage:crafting_monitor.missing_items\")).replace(\"{items_crafting}\", t(\"gui.refinedstorage:crafting_monitor.items_crafting\")).replace(\"{items_processing}\", t(\"gui.refinedstorage:crafting_monitor.items_processing\")).replace(\"{none}\", t(\"misc.refinedstorage:none\")))", "line.replace(\"{missing_items}\", t(\"gui.refinedstorage:crafting_monitor.missing_items\")).replace(\"{items_crafting}\", t(\"gui.refinedstorage:crafting_monitor.items_crafting\")).replace(java.lang.String,t(\"gui.refinedstorage:crafting_monitor.items_processing\"))", "java.lang.String.replace(java.lang.String,t(\"gui.refinedstorage:crafting_monitor.missing_items\"))"], "Fixed commit": "505b316f69b49b9d519a2e0f711c83ef75e87f5c", "Url": "https://api.github.com/repos/raoulvdberge/refinedstorage", "Date": "2016-05-07T14:29:45Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.unicef.rapidreg.utils.StreamUtil.isFileExists(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (audiofileExists) { initPlayAudioUI(); showDeleteIconWhenIsEditMode(); }else if (activity.getCurrentFeature().isInEditMode()) { initAudioRecordUI(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/8284/buggy-version/app.src.main.java.org.unicef.rapidreg.widgets.viewholder.AudioUploadViewHolder.java", "BodyUseAPI": [], "Fixed commit": "d4f026f27f38636fda870bf6d96e15ae70f61f39", "Url": "https://api.github.com/repos/UnicefNY/RapidReg", "Date": "2016-07-06T08:21:27Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.team7.objects.Navigator.tryToRemoveUnit(com.team7.objects.unit.Unit)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isDeadAfterEffect) { currentTileInPath.setDecal(new com.team7.objects.Decal(\"Skull\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/298/buggy-version/Sprint1.src.com.team7.objects.Navigator.java", "BodyUseAPI": [], "Fixed commit": "58dc55c17353991fc17e934c386360fa98fc26d0", "Url": "https://api.github.com/repos/COP4331-Team7/Sprint1", "Date": "2017-02-06T00:20:31Z"},
{"Line": "=>284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.CharSequence.charAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (chr == '?') { }else { if (hourIdx >= 0) { dayView += hourView; } hourIdx = org.hedera.LocalEZPageview.decodeHour(chr); hourView = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/6567/buggy-version/java.main.org.hedera.LocalEZPageview.java", "BodyUseAPI": ["org.hedera.LocalEZPageview.decodeHour(char)"], "Fixed commit": "c1d8dea26ed8c10830c0ca5033b1faf898766878", "Url": "https://api.github.com/repos/antoine-tran/Hedera", "Date": "2014-12-05T13:21:55Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result >= 240) { medal.setResource(Resources.INSTANCE.goldTrophy()); }else if ((result < 240) && (result >= 150)) { medal.setResource(Resources.INSTANCE.silverTrophy()); }else { medal.setResource(Resources.INSTANCE.bronzeTrophy()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/7236/buggy-version/src.main.java.org.redhatchallenge.rhc2013.client.ScoreScreen.java", "BodyUseAPI": [], "Fixed commit": "065c9d16e38f5d497df4a6ac20a469e2437518ad", "Url": "https://api.github.com/repos/redhatchallenge/rhc2013", "Date": "2013-09-26T03:24:23Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(result.next())) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/1272/buggy-version/src.Data.DBManager.java", "BodyUseAPI": [], "Fixed commit": "33a45ddf52771031453bc393169a371e155cb971", "Url": "https://api.github.com/repos/JennGoodman/Class-Planner", "Date": "2016-04-20T21:51:17Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JOptionPane.showConfirmDialog(<nulltype>,java.lang.String,java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (result == 0) themesDir.mkdir();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/1731/buggy-version/src.examinium.Themes.java", "BodyUseAPI": [], "Fixed commit": "f1663d0faf5485d5d69dca2b448eb1f991e9f0c4", "Url": "https://api.github.com/repos/franterminator/Examinium", "Date": "2016-11-13T18:33:34Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((moreSearchResults) != null) { videos.addAll(new java.util.ArrayList<Models.Video>(java.util.Arrays.asList(moreSearchResults))); Results.notifyDataSetChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/83/buggy-version/app.src.main.java.ir.dideo.dideo.searchResultFragment.java", "BodyUseAPI": [], "Fixed commit": "619bdb206959c7eb8ea0cc0d06c86ba3fd1213f1", "Url": "https://api.github.com/repos/alireza-ansaripour/dideo", "Date": "2016-07-13T00:29:37Z"},
{"Line": "=>312", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(new java.io.File(newDestPath).mkdirs())) { throw new java.io.IOException(\"Unable to create temporary path for extension build\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/566/buggy-version/appinventor.components.src.com.google.appinventor.components.scripts.ExternalComponentGenerator.java", "BodyUseAPI": [], "Fixed commit": "5704019481026f299fcf907be823236af8e5e5be", "Url": "https://api.github.com/repos/ColinTree/appinventor-sources", "Date": "2017-10-21T14:39:03Z"},
{"Line": "=>2165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (self.getClass().getSimpleName().equals(\"ChatGroupActivity\")) { if (ChatGroupActivity.group_id.equals(ChatGroupActivity.pending_group_id)) { com.llp.lunchkaki.activities.ChatGroupActivity.getMessagesNew(ChatGroupActivity.group_id); new com.llp.lunchkaki.models.User().getFooterNumber(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/70/buggy-version/app.src.main.java.com.llp.lunchkaki.activities.AbstractActivity.java", "BodyUseAPI": [], "Fixed commit": "6b49ddd832a47bb09e5e5200b2216431a25592d3", "Url": "https://api.github.com/repos/brianfwz/lkk", "Date": "2016-05-12T13:38:37Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.intermine.objectstore.query.ResultsRow<?>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.intermine.bio.postprocess.PostProcessUtil.isInstance(model, feature, \"Transcript\")) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/677/buggy-version/bio.postprocess.main.src.org.intermine.bio.postprocess.TransferSequences.java", "BodyUseAPI": [], "Fixed commit": "7d6dd675f0b3e836b1a364515f3d873ec57f7efe", "Url": "https://api.github.com/repos/danielabutano/intermine", "Date": "2016-03-04T12:09:16Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) < (Build.VERSION_CODES.LOLLIPOP)) { clientBuilder.sslSocketFactory(new nerd.tuxmobil.fahrplan.congress.net.TLSSocketFactory(), trustManager); }else { clientBuilder.sslSocketFactory(nerd.tuxmobil.fahrplan.congress.net.CustomHttpClient.createSSLSocketFactory(trustManager), trustManager); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/4522/buggy-version/app.src.main.java.nerd.tuxmobil.fahrplan.congress.net.CustomHttpClient.java", "BodyUseAPI": [], "Fixed commit": "aa39823e2a5742a0e3418cf85ec457681cd556e8", "Url": "https://api.github.com/repos/stefanmedack/CampFahrplan", "Date": "2017-10-27T15:11:16Z"},
{"Line": "=>5815", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Context.getSystemService(Context.WIFI_SERVICE)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (manager.isWifiEnabled()) { handleScreenStateChanged(((message.arg1) != 0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/4289/buggy-version/service.java.com.android.server.wifi.WifiStateMachine.java", "BodyUseAPI": [], "Fixed commit": "901947d01f684f4b28e5daafe9a7018076d1cd3c", "Url": "https://api.github.com/repos/EpirexDevProjects/android_frameworks_opt_net_wifi", "Date": "2016-06-15T23:52:09Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.gargoylesoftware.htmlunit.html.HtmlPage.getFirstByXPath(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (okButton != null) { okButton.click(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/7255/buggy-version/code.br.ufpe.cin.reviewer.searchprovider.engineeringvillage.src.br.ufpe.cin.reviewer.searchprovider.engineeringvillage.EngineeringVillageSearchProvider.java", "BodyUseAPI": ["com.gargoylesoftware.htmlunit.html.HtmlButton.click()"], "Fixed commit": "61ebad965f238c2cd4ea1cc391a007448ab66a17", "Url": "https://api.github.com/repos/bfsc/reviewer", "Date": "2013-05-28T03:33:12Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["modele_TP1.Recherche.rechercheMot(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (rechercheMot != null) resultat.add(rechercheMot);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/4876/buggy-version/modeleTP1.src.main.java.modele_TP1.Requete.java", "BodyUseAPI": ["java.util.List<modele_TP1.Mot>.add(modele_TP1.Mot)"], "Fixed commit": "3d2d9576053a14b805eb79a5032eae527d1f1d4e", "Url": "https://api.github.com/repos/FabienneMarquis/TP1_POO4", "Date": "2016-01-05T20:29:26Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.erlide.engine.internal.model.root.ErlProject.getChildNamed(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (external == null) { external = new org.erlide.engine.internal.model.erlang.ErlOtpExternalReferenceEntryList(this, name); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/945/buggy-version/org.erlide.model.src.org.erlide.engine.internal.model.root.ErlProject.java", "BodyUseAPI": [], "Fixed commit": "0dc5192f815969bc9070007533c98ea86a1fd2fc", "Url": "https://api.github.com/repos/vladdu/erlide", "Date": "2014-04-16T06:54:00Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.devtools.build.lib.vfs.Path.getRelative(input.getExecPathString())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(file.exists())) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/4943/buggy-version/src.main.java.com.google.devtools.build.lib.remote.RemoteSpawnStrategy.java", "BodyUseAPI": [], "Fixed commit": "81817b6932c32b78903cc7ece3353e26eb4f42ec", "Url": "https://api.github.com/repos/Asana/bazel", "Date": "2016-08-31T12:02:17Z"},
{"Line": "=>889", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (logOut != null) { logOut.println(msg); }else { java.lang.System.out.println(\"NUll pointer exception\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/5588/buggy-version/src.java.org.apache.cassandra.tools.WapModifyAndGenerateSSTablesUtility.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "8db626a1f1634d295cbeb92f2a8c93c48a096669", "Url": "https://api.github.com/repos/WorksApplications/cassandra", "Date": "2017-02-07T02:27:27Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["resolver.getResource(rootPath).getURL().getPath()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (rootPathAbs.contains(\"!\")) { java.lang.String[] splits = rootPathAbs.split(\"!\"); rootPathAbs = splits[((splits.length) - 1)]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/6443/buggy-version/data-hub.src.main.java.com.marklogic.hub.commands.LoadModulesCommand.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "9afdf770ceb60f9ac2d57ebd5c6c4988a922912c", "Url": "https://api.github.com/repos/maeisabelle/marklogic-data-hub", "Date": "2016-02-19T20:24:57Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (url.contains(\"https://outlook.office365.com/owa/?realm=kent.ac.uk\")) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/4562/buggy-version/app.src.main.java.kent.kentapp.Email.java", "BodyUseAPI": [], "Fixed commit": "474a433d94a8e9f2275a1cec5f5d04ee78fa6726", "Url": "https://api.github.com/repos/james-horrocks/CO600-Project", "Date": "2016-03-31T12:10:27Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (url.contains(\"https://sso.id.kent.ac.uk\")) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/4562/buggy-version/app.src.main.java.kent.kentapp.Email.java", "BodyUseAPI": [], "Fixed commit": "474a433d94a8e9f2275a1cec5f5d04ee78fa6726", "Url": "https://api.github.com/repos/james-horrocks/CO600-Project", "Date": "2016-03-31T12:10:27Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (url.contains(\"https://dan.kent.ac.uk\")) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/4562/buggy-version/app.src.main.java.kent.kentapp.Email.java", "BodyUseAPI": [], "Fixed commit": "474a433d94a8e9f2275a1cec5f5d04ee78fa6726", "Url": "https://api.github.com/repos/james-horrocks/CO600-Project", "Date": "2016-03-31T12:10:27Z"},
{"Line": "=>790", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (workDirWasCreated) if (!(workDir.delete())) java.lang.System.err.println((\"Could not remove temporary directory \" + (workDir)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/6681/buggy-version/src.main.java.at.cibiv.codoc.CoverageDecompressor.java", "BodyUseAPI": [], "Fixed commit": "b6934a1cce7ce0d891a29ce7489122cfd41cfcfa", "Url": "https://api.github.com/repos/popitsch/codoc", "Date": "2014-05-20T09:33:25Z"},
{"Line": "=>606", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (workDirWasCreated) if (((workDir) != null) && (workDir.exists())) org.apache.commons.io.FileUtils.forceDelete(workDir);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/6681/buggy-version/src.main.java.at.cibiv.codoc.CoverageDecompressor.java", "BodyUseAPI": [], "Fixed commit": "b6934a1cce7ce0d891a29ce7489122cfd41cfcfa", "Url": "https://api.github.com/repos/popitsch/codoc", "Date": "2014-05-20T09:33:25Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(session.isLoggedIn())) { logoutUser(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/452/buggy-version/app.src.main.java.fyp.cnc.cnc_fyp.activity.NavBarTemplate.java", "BodyUseAPI": [], "Fixed commit": "8a265658bb18d36ac75ae6cc53ed353f5404fc83", "Url": "https://api.github.com/repos/alexng820/CNC_FYP", "Date": "2017-03-30T08:48:49Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (adapter.submission.getSelftext().isEmpty()) { android.support.design.widget.Snackbar.make(rv, \"Submission has no content\", Snackbar.LENGTH_SHORT).show(); }else { android.view.LayoutInflater inflater = getActivity().getLayoutInflater(); final android.view.View dialoglayout = inflater.inflate(R.layout.parent_comment_dialog, null); final com.afollestad.materialdialogs.AlertDialogWrapper.Builder builder = new com.afollestad.materialdialogs.AlertDialogWrapper.Builder(getActivity()); adapter.setViews(adapter.submission.getDataNode().get(\"selftext_html\").asText(), adapter.submission.getSubredditName(), ((me.ccrama.redditslide.SpoilerRobotoTextView) (dialoglayout.findViewById(R.id.firstTextView))), ((me.ccrama.redditslide.Views.CommentOverflow) (dialoglayout.findViewById(R.id.commentOverflow)))); builder.setView(dialoglayout); builder.show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/5847/buggy-version/app.src.main.java.me.ccrama.redditslide.Fragments.CommentPage.java", "BodyUseAPI": ["me.ccrama.redditslide.Adapters.CommentAdapter.setViews(adapter.submission.getDataNode().get(\"selftext_html\").asText(),adapter.submission.getSubredditName(),((me.ccrama.redditslide.SpoilerRobotoTextView) (dialoglayout.findViewById(R.id.firstTextView))),((me.ccrama.redditslide.Views.CommentOverflow) (dialoglayout.findViewById(R.id.commentOverflow))))", "adapter.submission.getDataNode()", "adapter.submission.getDataNode().get(\"selftext_html\").asText()", "adapter.submission.getDataNode().get(java.lang.String)", "adapter.submission.getSubredditName()"], "Fixed commit": "9dafc928fcf1efe7a8e07844a708e7297ce20f7d", "Url": "https://api.github.com/repos/ccrama/Slide", "Date": "2016-03-20T06:48:26Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!ran) out.println((\"No program found with name \" + (result[0])));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/3814/buggy-version/src.main.java.echode.api.Echode.java", "BodyUseAPI": [], "Fixed commit": "590133386330aabc7f089c9b3952ceec3d041a5b", "Url": "https://api.github.com/repos/echodeteam/echode", "Date": "2014-07-22T15:32:27Z"},
{"Line": "=>276", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (((parent == null) || ((parent.getParent()) == null)) || (parent.getKey().equals(\"user-groups\"))) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/1198/buggy-version/src.org.rapla.entities.domain.PermissionContainer.java", "BodyUseAPI": [], "Fixed commit": "2d7159da08b1df41be3df61de01616c8e1593d91", "Url": "https://api.github.com/repos/rapla/rapla", "Date": "2014-08-21T09:04:03Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isFall) { if (sintef.android.controller.utils.PreferencesHelper.isFallDetectionEnabled()) { de.greenrobot.event.EventBus.getDefault().post(EventTypes.FALL_DETECTED); } de.greenrobot.event.EventBus.getDefault().post(EventTypes.FALL_DETECTED_FOR_RECORDING); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/2831/buggy-version/controller.src.main.java.sintef.android.controller.algorithm.AlgorithmMain.java", "BodyUseAPI": [], "Fixed commit": "fa07ad7e7bd33db6c3379d10c354c6a7a398e63e", "Url": "https://api.github.com/repos/SINTEF-SIT/project_gravity", "Date": "2015-04-09T09:49:45Z"},
{"Line": "=>396", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (automark) automarkSet(li, lj, ans[(li + 1)][(lj + 1)]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/8827/buggy-version/src.sct.View.PlayView.java", "BodyUseAPI": [], "Fixed commit": "189cafb5ee1456d9ca3baea1f4f3c724dbe615e1", "Url": "https://api.github.com/repos/scturtle/anSudoku", "Date": "2011-07-30T03:05:18Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (result.next()) { id = result.getInt(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/6608/buggy-version/src.com.elle.ProjectManager.dao.IssueDAO.java", "BodyUseAPI": ["java.sql.ResultSet.getInt(int)"], "Fixed commit": "1c0ef5e2ebe91385307da9f478bf1886d090a9e3", "Url": "https://api.github.com/repos/cigreja/ProjectManager", "Date": "2016-04-07T23:34:14Z"},
{"Line": "=>569", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.cwru.sepia.agent.minimax.AstarAgent.findPath(java.util.List<edu.cwru.sepia.environment.model.state.ResourceNode.ResourceView>,edu.cwru.sepia.agent.minimax.GameUnit,edu.cwru.sepia.agent.minimax.GameUnit)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((aStarPath != null) && (!(aStarPath.isEmpty()))) { edu.cwru.sepia.agent.minimax.AstarAgent.MapLocation nextLoc = aStarPath.pop(); actions.add(edu.cwru.sepia.action.Action.createPrimitiveMove(player.getID(), getMoveDirection(player, nextLoc))); }else { for (edu.cwru.sepia.util.Direction direction : validDirections) { if (possibleMove((playerX + (direction.xComponent())), (playerY + (direction.yComponent())), entities)) { actions.add(edu.cwru.sepia.action.Action.createPrimitiveMove(player.getID(), direction)); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/8569/buggy-version/src.edu.cwru.sepia.agent.minimax.GameState.java", "BodyUseAPI": ["java.util.Stack<edu.cwru.sepia.agent.minimax.AstarAgent.MapLocation>.pop()"], "Fixed commit": "99fb7be6f7166d348f45a25f4306363b48d6070b", "Url": "https://api.github.com/repos/ShaunHoward/eecs391_pr02", "Date": "2015-03-05T19:05:24Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.solarnetwork.node.consumption.currentcost.CCConsumptionDatumDataSource.parseMessage(byte[])"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (ccDatum == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/5869/buggy-version/net.solarnetwork.node.consumption.currentcost.src.net.solarnetwork.node.consumption.currentcost.CCConsumptionDatumDataSource.java", "BodyUseAPI": [], "Fixed commit": "d74bbfd554a3b45d2a2f4d560ed86a7c394c449b", "Url": "https://api.github.com/repos/SolarNetwork/solarnetwork-node", "Date": "2013-04-26T00:50:50Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(checkIfNewWeekStarted(challenge))) { kudosService.retrieveSystemKudos(creator, challenge.getAmount(), challenge.getName(), Transaction.Status.CANCELED_CHALLENGE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/3946/buggy-version/src.main.java.kudos.services.ChallengeService.java", "BodyUseAPI": ["kudos.services.KudosService.retrieveSystemKudos(kudos.model.User,challenge.getAmount(),challenge.getName(),Transaction.Status.CANCELED_CHALLENGE)", "kudos.model.Challenge.getAmount()", "kudos.model.Challenge.getName()"], "Fixed commit": "000f27b79bc6cf174f221cefd56e3f738418d9d8", "Url": "https://api.github.com/repos/open-kudos/open-kudos-api", "Date": "2016-07-12T07:57:50Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(checkIfNewWeekStarted(challenge))) { kudosService.retrieveSystemKudos(challenge.getCreatorUser(), challenge.getAmount(), challenge.getName(), Transaction.Status.EXPIRED_CHALLENGE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/3946/buggy-version/src.main.java.kudos.services.ChallengeService.java", "BodyUseAPI": ["kudos.model.Challenge.getAmount()", "kudos.model.Challenge.getCreatorUser()", "kudos.services.KudosService.retrieveSystemKudos(challenge.getCreatorUser(),challenge.getAmount(),challenge.getName(),Transaction.Status.EXPIRED_CHALLENGE)", "kudos.model.Challenge.getName()"], "Fixed commit": "000f27b79bc6cf174f221cefd56e3f738418d9d8", "Url": "https://api.github.com/repos/open-kudos/open-kudos-api", "Date": "2016-07-12T07:57:50Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(checkIfNewWeekStarted(challenge))) { kudosService.retrieveSystemKudos(creator, challenge.getAmount(), challenge.getName(), Transaction.Status.DECLINED_CHALLENGE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/3946/buggy-version/src.main.java.kudos.services.ChallengeService.java", "BodyUseAPI": ["kudos.services.KudosService.retrieveSystemKudos(kudos.model.User,challenge.getAmount(),challenge.getName(),Transaction.Status.DECLINED_CHALLENGE)", "kudos.model.Challenge.getName()", "kudos.model.Challenge.getAmount()"], "Fixed commit": "000f27b79bc6cf174f221cefd56e3f738418d9d8", "Url": "https://api.github.com/repos/open-kudos/open-kudos-api", "Date": "2016-07-12T07:57:50Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.arjvik.arjmart.api.ItemDAO.getItem(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (item == null) return javax.ws.rs.core.Response.status(Status.NOT_FOUND).build();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/4208/buggy-version/src.com.arjvik.arjmart.api.ItemResource.java", "BodyUseAPI": [], "Fixed commit": "75b390b654e2282f5427b351a976ae58fbeccfc7", "Url": "https://api.github.com/repos/ArjMart/API", "Date": "2017-08-16T17:21:24Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((piece.getTime(lineupID)) != 0L) { android.widget.TextView result = new android.widget.TextView(context); result.setText(com.vbh.virtualboathouse.Piece.msTimeToString(piece.getTime(lineupID), false)); llH.addView(result); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/367/buggy-version/src.com.vbh.virtualboathouse.PieceView.java", "BodyUseAPI": ["com.vbh.virtualboathouse.Piece.getTime(long)", "android.widget.TextView.setText(com.vbh.virtualboathouse.Piece.msTimeToString(piece.getTime(lineupID), false))", "com.vbh.virtualboathouse.Piece.msTimeToString(piece.getTime(lineupID),boolean)"], "Fixed commit": "b87fa6a0ff4ce73796cca4069c568f7d4f4835c2", "Url": "https://api.github.com/repos/sfjordan/VirtualBH", "Date": "2014-05-07T05:21:46Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((times.get(lineupID)) == null) return 0L; else return times.get(lineupID);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/367/buggy-version/src.com.vbh.virtualboathouse.Piece.java", "BodyUseAPI": ["java.util.Map<java.lang.Long, java.lang.Long>.get(long)"], "Fixed commit": "b87fa6a0ff4ce73796cca4069c568f7d4f4835c2", "Url": "https://api.github.com/repos/sfjordan/VirtualBH", "Date": "2014-05-07T05:21:46Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(new java.io.File(gcloudDir).exists())) { gcloudDir = \"/usr/lib/google-cloud-sdk\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/325/buggy-version/src.main.java.com.google.appengine.Utils.java", "BodyUseAPI": [], "Fixed commit": "174d2e7277e779c095396b86aca759aa91adf033", "Url": "https://api.github.com/repos/GoogleCloudPlatform/gcloud-maven-plugin", "Date": "2016-08-16T02:21:33Z"},
{"Line": "=>360", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.length()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((((_outputTail) + len) + len) >= (_outputEnd)) { _writeLongQuoted(text); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/6244/buggy-version/src.main.java.com.fasterxml.jackson.dataformat.csv.impl.CsvWriter.java", "BodyUseAPI": [], "Fixed commit": "5aab3128cd1d2357f201e69401ed5a1a4ce93096", "Url": "https://api.github.com/repos/FasterXML/jackson-dataformat-csv", "Date": "2012-05-17T04:49:07Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.questCompleted) == true) { this.dialogueLabel.setText(UserInterface.UserInterfaceFacade.business.getFriendlyNPC().getCompletedQuestString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/1535/buggy-version/src.UserInterface.historyRoomController.java", "BodyUseAPI": [], "Fixed commit": "7b006219c302a5959ad9de9bc5cb55d0e866714b", "Url": "https://api.github.com/repos/Semestergruppe23/worldofzuul2", "Date": "2017-12-08T17:00:19Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dx != 0) || (dy != 0)) this.maybeFireLoadMore();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/375/buggy-version/app.src.main.java.com.kilogramm.mattermost.ui.MatterRecyclerView.java", "BodyUseAPI": [], "Fixed commit": "67501750c1500113f687c7f60a0fb0a92517991f", "Url": "https://api.github.com/repos/Kilograpp/Mattermost-Android-Native", "Date": "2017-01-19T12:56:43Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(java.lang.Double.isNaN(this.distance))) { obj.put(\"Distance\", this.distance); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/3485/buggy-version/src.com.gedutech.ridesyncer.models.User.java", "BodyUseAPI": ["org.json.JSONObject.put(java.lang.String,double)"], "Fixed commit": "c949779ea5f2647e7977222f8cf2527a6af9495b", "Url": "https://api.github.com/repos/GEDUtech/ridesyncer", "Date": "2014-04-24T04:17:43Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((getVariable(args[x])) == null) { setPrivateVariable(args[x], arguments[x]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/6566/buggy-version/src.edu.gordian.scopes.DefinedMethod.java", "BodyUseAPI": ["edu.gordian.scopes.DefinedMethod.setPrivateVariable(java.lang.String,arguments[x])"], "Fixed commit": "67ddafbcf5cae470a154ffa6c38668d4e20e82ec", "Url": "https://api.github.com/repos/Team4334/gordian", "Date": "2013-07-05T18:51:08Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((javax.swing.SwingUtilities.isRightMouseButton(e)) && ((a = stage.eventOnObject(e)) != null)) { readySETgo.User.setSelected(a); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/5688/buggy-version/src.readySETgo.panels.StagePanel.java", "BodyUseAPI": [], "Fixed commit": "81cc214cb69032a0acd4218ad13a251e4befaa5b", "Url": "https://api.github.com/repos/BenjaminMarshall/ReadySETgo", "Date": "2016-11-27T23:11:21Z"},
{"Line": "=>853", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.Cursor.getString(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((path != null) && ((path.length()) > 0)) { result.add(path); java.lang.String xmpPath = de.k3b.io.FileUtils.replaceExtension(path, \".xmp\"); if (new java.io.File(xmpPath).exists()) { result.add(xmpPath); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/3900/buggy-version/app.src.main.java.de.k3b.android.androFotoFinder.queries.FotoSql.java", "BodyUseAPI": ["de.k3b.io.FileUtils.replaceExtension(java.lang.String,java.lang.String)", "java.util.ArrayList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "5c33ae40e5beb20c9aaf3b2d568030866e5eebfb", "Url": "https://api.github.com/repos/k3b/APhotoManager", "Date": "2017-02-16T15:18:14Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.raw_sql.indexOf(\";\", ((this.raw_sql.length()) - 1))) != (-1)) { this.raw_sql = this.raw_sql.substring(0, ((this.raw_sql.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/6987/buggy-version/src.com.vco.ExtractDBStep.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "df84e750f7a4795b3e69bf19b21fb9eff1f5fba9", "Url": "https://api.github.com/repos/VCO-Systems/vBatch", "Date": "2014-04-08T03:15:36Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.vco.ExtractDBStep.replaceSqlToken(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (sqlTokensReplaced == 0) { VBatchManager.log.debug(java.text.MessageFormat.format(\"[Extract] QUERY : {0}\", this.raw_sql)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/6987/buggy-version/src.com.vco.ExtractDBStep.java", "BodyUseAPI": [], "Fixed commit": "df84e750f7a4795b3e69bf19b21fb9eff1f5fba9", "Url": "https://api.github.com/repos/VCO-Systems/vBatch", "Date": "2014-04-08T03:15:36Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (numberOfResults == 16) (classSuccessfulCount[(calculatedClass - 1)])++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/7689/buggy-version/src.Arrhythmia.java", "BodyUseAPI": [], "Fixed commit": "fb79237ef37bf93f828ff1040647e497d0fe9800", "Url": "https://api.github.com/repos/mateusz94/PSZT", "Date": "2016-01-23T15:13:30Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((appVersion1st) == null) || ((appVersion2nd) == null)) || ((appVersion3rd) == null)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/4834/buggy-version/src.main.java.com.cubeia.poker.domain.settings.AppVersion.java", "BodyUseAPI": [], "Fixed commit": "213b35232ebc05fcf9a1c6de6cfcb640a4694d75", "Url": "https://api.github.com/repos/loganlomackon/Pokerhouse", "Date": "2017-06-21T13:57:27Z"},
{"Line": "=>1767", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (sourceType.equals(\"table\")) query.setSources(((java.util.List<java.lang.String>) (c.get(\"table\")))); else if (sourceType.equals(\"logger\")) query.setSources(((java.util.List<java.lang.String>) (c.get(\"logger\")))); else if (sourceType.equals(\"stream\")) query.setSources(((java.util.List<java.lang.String>) (c.get(\"stream\"))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/2627/buggy-version/araqne-logdb-client.src.main.java.org.araqne.logdb.client.LogDbClient.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "f9f81f4d5031727f1754d715674816cbd3e694f0", "Url": "https://api.github.com/repos/araqne/logdb", "Date": "2014-12-17T13:54:18Z"},
{"Line": "=>331", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (type instanceof pt.gov.dgarq.roda.common.convert.db.model.structure.type.SimpleTypeBoolean) { if (data != null) { ps.setBoolean(index, java.lang.Boolean.valueOf(data)); }else { ps.setNull(index, java.sql.Types.BOOLEAN); } }else if (type instanceof pt.gov.dgarq.roda.common.convert.db.model.structure.type.SimpleTypeXML) { if (data != null) { java.sql.SQLXML sqlxml = ps.getConnection().createSQLXML(); sqlxml.setString(data); ps.setSQLXML(index, sqlxml); }else { ps.setNull(index, java.sql.Types.SQLXML); } }else { throw new pt.gov.dgarq.roda.common.convert.db.model.exception.InvalidDataException(((type.getClass().getSimpleName()) + \" not applicable to simple cell or not yet supported\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/8647/buggy-version/src.main.java.pt.gov.dgarq.roda.common.convert.db.modules.jdbc.out.JDBCExportModule.java", "BodyUseAPI": ["type.getClass().getSimpleName()", "pt.gov.dgarq.roda.common.convert.db.model.structure.type.Type.getClass()"], "Fixed commit": "ef08b3cc6ca8888ab94e2fd862da539772375e5d", "Url": "https://api.github.com/repos/miguelsc/db-preservation-toolkit", "Date": "2013-12-03T15:34:20Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((numBuilder.length()) == 0) { builder.append(\"#\"); return --pos; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/706/buggy-version/app.src.main.java.com.tpb.projects.util.Data.java", "BodyUseAPI": [], "Fixed commit": "89a4d9af6f4eee3aa153052445e6d6c105096026", "Url": "https://api.github.com/repos/tpb1908/AndroidProjectsClient", "Date": "2017-01-08T21:53:19Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (decimalPartStart < (str.length())) number = coordinatesConversionRatio.multiply(new java.math.BigDecimal(java.lang.Long.valueOf(str.substring(decimalPartStart)))).longValue();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/558/buggy-version/src.main.java.org.cirqwizard.excellon.ExcellonParser.java", "BodyUseAPI": ["java.math.BigDecimal.longValue()", "java.lang.Long.valueOf(java.lang.String)", "java.math.BigDecimal.multiply(java.math.BigDecimal)", "java.lang.String.substring(int)"], "Fixed commit": "bb41b180e9780c35fc27590f5c1e44b11af13aee", "Url": "https://api.github.com/repos/simonsalykov/cirqwizard", "Date": "2016-07-12T21:21:20Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getChangeWeight()) { t.setWeight(getWeightFieldValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/2816/buggy-version/src.com.ghsoft.treetaskapp.NewTask.java", "BodyUseAPI": [], "Fixed commit": "2bf5f83836180f8ef3909098494e03fdce792f78", "Url": "https://api.github.com/repos/gh123man/Tree-Task", "Date": "2014-05-19T11:28:16Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Pattern.matcher(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(matcher.matches())) throw new java.lang.IllegalArgumentException((ssn + \" is not a valid SSN\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/4619/buggy-version/src.main.java.com.vmware.Employee.java", "BodyUseAPI": [], "Fixed commit": "ebdf42effe93e956c6ecf0d4c07b02c69c641dc5", "Url": "https://api.github.com/repos/nipuna23/michaelangelo", "Date": "2014-10-03T17:51:26Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JTextField.getText()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (directory.contains(\"\\\\\")) { parentDirectory = directory.substring(0, directoryField.getText().lastIndexOf(\"\\\\\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/162/buggy-version/src.GUI.Output.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "df16996a856edd894832ec8f104804f94bcf66fa", "Url": "https://api.github.com/repos/FrancisLawlor/4ChanThreadScraper", "Date": "2016-08-06T17:17:58Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["imat.gui.IMatTreeTable.getPathForLocation(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (path == null) { dtde.dropComplete(false); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/6669/buggy-version/src.imat.gui.IMatTreeTable.java", "BodyUseAPI": [], "Fixed commit": "3d870b93bb4420e547089f4630a77dedd16ee38a", "Url": "https://api.github.com/repos/Ndushi/iMat", "Date": "2013-03-08T09:19:35Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((B[16]) != null) { invoice.setDuedate(new java.text.SimpleDateFormat(\"dd-MM-yyyy\", new java.util.Locale(\"us\", \"us\")).format(util.convertStringToDate(util.ConvertString(B[16])))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/5217/buggy-version/src.java.com.smi.travel.datalayer.view.dao.impl.InvoiceImpl.java", "BodyUseAPI": ["com.smi.travel.util.UtilityFunction.ConvertString(java.lang.Object)", "java.text.SimpleDateFormat.format(util.convertStringToDate(util.ConvertString(B[16])))", "com.smi.travel.util.UtilityFunction.convertStringToDate(util.ConvertString(B[16]))", "com.smi.travel.datalayer.report.model.InvoiceReport.setDuedate(java.lang.String)"], "Fixed commit": "468d589c8981bc4fa5faa16c36e8004d16a8a3c3", "Url": "https://api.github.com/repos/iCONEXT/SMI_Travel", "Date": "2015-12-04T03:54:49Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, bank.Account>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((selectedAccount.getDebt()) != 0) selectedAccount.addStateList((\"\ub300\ucd9c \uc774\uc790 : \" + ((selectedAccount.getDebt()) * (negativeInterest))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/3483/buggy-version/src.bank.Bank.java", "BodyUseAPI": ["bank.Account.getDebt()", "bank.Account.addStateList((\"\ub300\ucd9c \uc774\uc790 : \" + ((selectedAccount.getDebt()) * (negativeInterest))))"], "Fixed commit": "32ee273e77b0982b9356695cb78024d7f1f346a9", "Url": "https://api.github.com/repos/KMU-bank/KMU-Bank", "Date": "2015-12-06T16:17:48Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((stopAlarmTimer) != null) stopAlarmTimer.cancel();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/7348/buggy-version/src.com.frankandrobot.reminderer.alarm.AlarmRingerService.java", "BodyUseAPI": [], "Fixed commit": "b76fc4c48fdd46a6f177765266af21843dee0561", "Url": "https://api.github.com/repos/frankandrobot/Reminderer", "Date": "2013-10-17T01:55:54Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cpw.mods.fml.common.FMLCommonHandler.instance().getSidedDelegate().getServer()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (server != null) { net.minecraft.server.management.ServerConfigurationManager manager = server.getConfigurationManager(); if (manager != null) allPlayers = manager.getAllUsernames(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/7954/buggy-version/src.FE_SRC_COMMON.com.ForgeEssentials.permission.FlatFilePlayers.java", "BodyUseAPI": ["net.minecraft.server.MinecraftServer.getConfigurationManager()"], "Fixed commit": "c2cf4866f0b5578060ada2a6e4112ab5cc32e2b4", "Url": "https://api.github.com/repos/ForgeEssentials/ForgeEssentialsMain", "Date": "2013-03-08T04:43:31Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((msg.getRetweeted_status()) != null) { et.setText((((\"//@\" + (msg.getUser().getScreen_name())) + \": \") + (msg.getText()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/6975/buggy-version/src.org.qii.weiciyuan.ui.send.RepostNewActivity.java", "BodyUseAPI": ["org.qii.weiciyuan.bean.MessageBean.getText()", "msg.getUser().getScreen_name()", "org.qii.weiciyuan.bean.MessageBean.getUser()", "android.widget.EditText.setText((((\"//@\" + (msg.getUser().getScreen_name())) + \": \") + (msg.getText())))"], "Fixed commit": "ec199a4882a168d1d2917647e9c3b79f4f927185", "Url": "https://api.github.com/repos/qii/weiciyuan", "Date": "2012-08-29T08:54:26Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (visitCount == null) { visitCount = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/1200/buggy-version/src.main.java.com.rupp.sample.web.SessionTrack.java", "BodyUseAPI": [], "Fixed commit": "245d68be42363a859422057bd9b3b2487b00e7e1", "Url": "https://api.github.com/repos/sophea/servlet", "Date": "2017-01-11T08:55:34Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((phpIssue.line()) > 0) { location.at(inputFile.selectLine(phpIssue.line())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/2204/buggy-version/sonar-php-plugin.src.main.java.org.sonar.plugins.php.PHPSensor.java", "BodyUseAPI": ["org.sonar.api.batch.fs.InputFile.selectLine(phpIssue.line())", "org.sonar.api.batch.sensor.issue.NewIssueLocation.at(inputFile.selectLine(phpIssue.line()))", "org.sonar.plugins.php.api.visitors.Issue.line()"], "Fixed commit": "5944d6431a80f5f8c63f43303f4d27568ce69bbf", "Url": "https://api.github.com/repos/SonarSource/sonar-php", "Date": "2016-09-15T15:36:44Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (firstShape) { final org.osmdroid.bonuspack.overlays.Polygon polygon = new org.osmdroid.bonuspack.overlays.Polygon(this); final com.github.lassana.osmdroid_shape_extention.ShapeAsPointsBuilder shapeBuilder = new com.github.lassana.osmdroid_shape_extention.ShapeAsPointsBuilder(); shapeBuilder.GRC(new org.osmdroid.util.GeoPoint((-36.76736), 174.83433)); shapeBuilder.CWA(new org.osmdroid.util.GeoPoint((-36.93842), 174.55269), new org.osmdroid.util.GeoPoint((-36.872), 174.48986), new org.osmdroid.util.GeoPoint((-36.8055), 174.42714), 0.08333); shapeBuilder.CCA(new org.osmdroid.util.GeoPoint((-36.68503), 174.62581), new org.osmdroid.util.GeoPoint((-36.66514), 174.64464), new org.osmdroid.util.GeoPoint((-36.68342), 174.66586), 0.025); shapeBuilder.CCA(new org.osmdroid.util.GeoPoint((-36.66372), 174.69231), new org.osmdroid.util.GeoPoint((-36.64542), 174.67103), new org.osmdroid.util.GeoPoint((-36.65486), 174.69992), 0.025); shapeBuilder.GRC(new org.osmdroid.util.GeoPoint((-36.66072), 174.74381)); shapeBuilder.CWA(new org.osmdroid.util.GeoPoint((-36.61911), 174.79094), new org.osmdroid.util.GeoPoint((-36.70106), 174.77139), new org.osmdroid.util.GeoPoint((-36.76736), 174.83433), 0.08333); polygon.setPoints(shapeBuilder.toList()); polygon.setFillColor(-1593900801); polygon.setStrokeColor(Color.MAGENTA); polygon.setStrokeWidth(1.0F); map.getOverlays().add(polygon); map.invalidate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/8473/buggy-version/app.src.main.java.com.github.lassana.osmdroid_shapes_sample.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "9474b888e69c6d822ec30642b09e2e439a155094", "Url": "https://api.github.com/repos/lassana/osmdroid-shape-extension", "Date": "2016-03-30T09:22:25Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (secondShape) { final org.osmdroid.bonuspack.overlays.Polygon polygon = new org.osmdroid.bonuspack.overlays.Polygon(this); final com.github.lassana.osmdroid_shape_extention.ShapeAsPointsBuilder shapeBuilder = new com.github.lassana.osmdroid_shape_extention.ShapeAsPointsBuilder(); shapeBuilder.CIR(new org.osmdroid.util.GeoPoint((-37.63036), 176.17192), (0.41 * 1852)); polygon.setPoints(shapeBuilder.toList()); polygon.setFillColor(-1610612481); polygon.setStrokeColor(Color.BLACK); polygon.setStrokeWidth(1.0F); map.getOverlays().add(polygon); map.invalidate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/8473/buggy-version/app.src.main.java.com.github.lassana.osmdroid_shapes_sample.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "9474b888e69c6d822ec30642b09e2e439a155094", "Url": "https://api.github.com/repos/lassana/osmdroid-shape-extension", "Date": "2016-03-30T09:22:25Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fourthShape) { final java.util.List<org.osmdroid.util.GeoPoint> list = new com.github.lassana.osmdroid_shape_extention.ShapeAsPointsBuilder().CWA(new org.osmdroid.util.GeoPoint((-36.47342), 175.11544), new org.osmdroid.util.GeoPoint((-37.00453), 174.81372), new org.osmdroid.util.GeoPoint((-37.30819), 175.43739), 0.0).GRC(new org.osmdroid.util.GeoPoint((-37.30819), 175.43739)).GRC(new org.osmdroid.util.GeoPoint((-37.48728), 175.36483)).GRC(new org.osmdroid.util.GeoPoint((-37.51325), 175.32081)).GRC(new org.osmdroid.util.GeoPoint((-37.53881), 175.23578)).GRC(new org.osmdroid.util.GeoPoint((-37.56194), 175.15847)).CWA(new org.osmdroid.util.GeoPoint((-37.57336), 174.9815), new org.osmdroid.util.GeoPoint((-37.00453), 174.81372), new org.osmdroid.util.GeoPoint((-37.30016), 174.18424), 0.0).GRC(new org.osmdroid.util.GeoPoint((-37.30016), 174.18424)).CCA(new org.osmdroid.util.GeoPoint((-37.23606), 174.38047), new org.osmdroid.util.GeoPoint((-37.00453), 174.81372), new org.osmdroid.util.GeoPoint((-36.61017), 174.98258), 0.0).CCA(new org.osmdroid.util.GeoPoint((-36.61017), 174.98258), new org.osmdroid.util.GeoPoint((-36.78679), 174.63123), new org.osmdroid.util.GeoPoint((-36.95164), 174.26911), 0.0).GRC(new org.osmdroid.util.GeoPoint((-36.95164), 174.26911)).CWA(new org.osmdroid.util.GeoPoint((-36.96623), 174.04694), new org.osmdroid.util.GeoPoint((-36.78679), 174.63123), new org.osmdroid.util.GeoPoint((-36.47342), 175.11544), 0.0).GRC(new org.osmdroid.util.GeoPoint((-36.47342), 175.11544)).toList(); final org.osmdroid.bonuspack.overlays.Polygon polygon = new org.osmdroid.bonuspack.overlays.Polygon(this); polygon.setPoints(list); polygon.setFillColor(-1610547456); polygon.setStrokeColor(Color.GREEN); polygon.setStrokeWidth(1.0F); map.getOverlays().add(polygon); map.invalidate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/8473/buggy-version/app.src.main.java.com.github.lassana.osmdroid_shapes_sample.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "9474b888e69c6d822ec30642b09e2e439a155094", "Url": "https://api.github.com/repos/lassana/osmdroid-shape-extension", "Date": "2016-03-30T09:22:25Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (thirdShape) { final java.util.List<org.osmdroid.util.GeoPoint> list = new com.github.lassana.osmdroid_shape_extention.ShapeAsPointsBuilder().GRC(new org.osmdroid.util.GeoPoint((-37.68375), 175.31544)).GRC(new org.osmdroid.util.GeoPoint((-37.78622), 175.30456)).GRC(new org.osmdroid.util.GeoPoint((-37.85433), 175.30497)).GRC(new org.osmdroid.util.GeoPoint((-37.83211), 175.23553)).CWA(new org.osmdroid.util.GeoPoint((-37.68842), 175.28242), new org.osmdroid.util.GeoPoint((-37.84936), 175.33861), new org.osmdroid.util.GeoPoint((-37.68375), 175.31544), 0.0).toList(); final org.osmdroid.bonuspack.overlays.Polygon polygon = new org.osmdroid.bonuspack.overlays.Polygon(this); polygon.setPoints(list); polygon.setFillColor(-1593900801); polygon.setStrokeColor(Color.MAGENTA); polygon.setStrokeWidth(1.0F); map.getOverlays().add(polygon); map.invalidate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/8473/buggy-version/app.src.main.java.com.github.lassana.osmdroid_shapes_sample.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "9474b888e69c6d822ec30642b09e2e439a155094", "Url": "https://api.github.com/repos/lassana/osmdroid-shape-extension", "Date": "2016-03-30T09:22:25Z"},
{"Line": "=>330", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sqlRequest.getBackdoorToggles()) != null) org.apache.kylin.common.debug.BackdoorToggles.addToggles(sqlRequest.getBackdoorToggles());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/9069/buggy-version/server-base.src.main.java.org.apache.kylin.rest.service.QueryService.java", "BodyUseAPI": ["org.apache.kylin.rest.request.SQLRequest.getBackdoorToggles()", "org.apache.kylin.common.debug.BackdoorToggles.addToggles(sqlRequest.getBackdoorToggles())"], "Fixed commit": "9898a07b1451c29b25fb295b22ed62015073df93", "Url": "https://api.github.com/repos/apache/kylin", "Date": "2016-12-28T02:20:31Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (lib.raffleprize.contains(\":\")) { java.lang.String[] ids = lib.raffleprize.split(\":\"); short id = java.lang.Short.parseShort(ids[0]); short data = java.lang.Short.parseShort(ids[1]); material = org.spout.api.material.Material.get(id, data); }else { short id = java.lang.Short.parseShort(lib.raffleprize); material = org.spout.api.material.Material.get(id); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/5735/buggy-version/TLDRaffle.src.main.java.com.github.thelonedevil.TLDRaffle.TLDRafflePlugin.java", "BodyUseAPI": ["lib.raffleprize.split(java.lang.String)", "java.lang.Short.parseShort(lib.raffleprize)"], "Fixed commit": "7f5016d24c67cdd32adb5a403569826fc9d45516", "Url": "https://api.github.com/repos/TLDProgramming/TLDSuite", "Date": "2013-07-27T17:50:04Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((java.lang.Math.abs(distance)) > ((helper.getDecoratedMeasurement(targetView)) / 2.0F)) && ((java.lang.Math.abs(distance)) < ((helper.getDecoratedMeasurement(targetView)) * 1.5F))) { distance = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/5143/buggy-version/gravitysnaphelper.src.main.java.com.github.rubensousa.gravitysnaphelper.GravitySnapHelper.java", "BodyUseAPI": [], "Fixed commit": "951ac35a8848d709f9bbbbb48839634b87d10ed4", "Url": "https://api.github.com/repos/rubensousa/RecyclerViewSnap", "Date": "2016-09-25T01:46:00Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((java.lang.Math.abs(distance)) > ((helper.getDecoratedMeasurement(targetView)) / 2.0F)) && ((java.lang.Math.abs(distance)) < ((helper.getDecoratedMeasurement(targetView)) * 1.5F))) { distance = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/5143/buggy-version/gravitysnaphelper.src.main.java.com.github.rubensousa.gravitysnaphelper.GravitySnapHelper.java", "BodyUseAPI": [], "Fixed commit": "951ac35a8848d709f9bbbbb48839634b87d10ed4", "Url": "https://api.github.com/repos/rubensousa/RecyclerViewSnap", "Date": "2016-09-25T01:46:00Z"},
{"Line": "=>1042", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.dotmarketing.business.APILocator.getContentletAPI().getBinaryFile(java.lang.String,field.getVelocityVarName(),com.liferay.portal.model.User)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (inputFile != null) { java.io.File acopyFolder = new java.io.File((((((((com.dotmarketing.business.APILocator.getFileAPI().getRealAssetPathTmpBinary()) + (java.io.File.separator)) + (user.getUserId())) + (java.io.File.separator)) + (field.getFieldContentlet())) + (java.io.File.separator)) + (com.dotmarketing.util.UUIDGenerator.generateUuid()))); if (!(acopyFolder.exists())) acopyFolder.mkdir(); java.lang.String shortFileName = com.liferay.util.FileUtil.getShortFileName(inputFile.getAbsolutePath()); java.io.File binaryFile = new java.io.File((((((((com.dotmarketing.business.APILocator.getFileAPI().getRealAssetPathTmpBinary()) + (java.io.File.separator)) + (user.getUserId())) + (java.io.File.separator)) + (field.getFieldContentlet())) + (java.io.File.separator)) + (shortFileName.trim()))); com.liferay.util.FileUtil.copyFile(inputFile, binaryFile); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/8057/buggy-version/src.com.dotmarketing.portlets.contentlet.action.EditContentletAction.java", "BodyUseAPI": ["com.liferay.util.FileUtil.getShortFileName(java.lang.String)", "java.io.File.getAbsolutePath()", "com.liferay.util.FileUtil.copyFile(java.io.File,java.io.File)"], "Fixed commit": "e4fd6e591e9bf5e30b5c011e0b245be1989a25c9", "Url": "https://api.github.com/repos/dotCMS/dotCMS", "Date": "2013-11-27T12:10:28Z"},
{"Line": "=>450", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((object.getClass()) == (com.alibaba.fastjson.JSONObject.class)) { key = key.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/1143/buggy-version/src.main.java.com.alibaba.fastjson.parser.DefaultJSONParser.java", "BodyUseAPI": [], "Fixed commit": "d560b4e2d413c2141daca21acacc7324dc51ce9f", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2013-07-18T10:20:43Z"},
{"Line": "=>610", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(kmelia.getPublicationAccessController().isUserAuthorized(kmelia.getUserId(), kmeliaPublication.getPk()))) { return \"/admin/jsp/accessForbidden.jsp\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/5029/buggy-version/kmelia.kmelia-war.src.main.java.com.stratelia.webactiv.kmelia.servlets.KmeliaRequestRouter.java", "BodyUseAPI": [], "Fixed commit": "0413abc2f06d916191c69dc8ae17f5e7436fe9aa", "Url": "https://api.github.com/repos/SilverYoCha/Silverpeas-Components", "Date": "2015-07-07T11:45:50Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.fenixedu.academic.domain.student.Registration.getRegistrationYear()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (registrationYear == null) { getLogger().debug(\"Ignoring Registration [{}]: registration year is null\", registrationInfo); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/8341/buggy-version/src.main.java.org.fenixedu.ulisboa.specifications.task.BlockEnrolmentsByStudentsWithoutEnrolmentsInPreviousYear.java", "BodyUseAPI": [], "Fixed commit": "6b5335b8aa875b6a9496a2180b120329617a22ee", "Url": "https://api.github.com/repos/qub-it/fenixedu-ulisboa-specifications", "Date": "2015-09-14T17:21:14Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.activatedCoins.size()) > 0) { this.currencyListView.removeFooterView(this.footer); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/3387/buggy-version/ZiftrWallet.src.com.ziftr.android.ziftrwallet.fragment.ZWAccountsFragment.java", "BodyUseAPI": [], "Fixed commit": "7db91a39f5231d5b51ab762bcc574fc4507a463a", "Url": "https://api.github.com/repos/ZiftrCOIN/android-ziftrwallet", "Date": "2015-07-28T14:14:16Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (image != null) com.neuSep17.dao.PictureManager.cacheImage(image, com.neuSep17.dao.PictureManager.getFullName(photoURL.getFile()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/5508/buggy-version/src.com.neuSep17.dao.PictureManager.java", "BodyUseAPI": ["com.neuSep17.dao.PictureManager.cacheImage(java.awt.image.BufferedImage,java.lang.String)"], "Fixed commit": "a124b3b23fcd80d55b872efa4b756906af81d1a4", "Url": "https://api.github.com/repos/iShiBin/inventory-management", "Date": "2017-12-05T22:49:13Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((existsResourceDo.getThumbnails()) != null) && ((existsResourceDo.getThumbnails().getUrl()) != null)) { thumbnailUrl = existsResourceDo.getThumbnails().getUrl(); }else { thumbnailUrl = ((org.ednovo.gooru.client.mvp.shelf.collection.tab.resource.exists.ExistsResourceView.DEFULT_IMAGE_PREFIX) + (category)) + (org.ednovo.gooru.client.mvp.shelf.collection.tab.resource.exists.ExistsResourceView.PNG); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/2989/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.shelf.collection.tab.resource.exists.ExistsResourceView.java", "BodyUseAPI": ["existsResourceDo.getThumbnails().getUrl()", "org.ednovo.gooru.application.shared.model.content.ExistsResourceDo.getThumbnails()"], "Fixed commit": "7bbe14acf7e886ec6181eb4a668dc82fb04bc62d", "Url": "https://api.github.com/repos/anilgooru/Gooru-Web", "Date": "2015-08-11T06:56:57Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.xdebugger.impl.ui.tree.nodes.WatchesRootNode.getAllChildren()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (children != null) { for (com.intellij.xdebugger.impl.ui.tree.nodes.WatchNode node : rootNode.getAllChildren()) { expressionsToSave.add(node.getExpression().getExpression()); } if (properties.setWatchExpressions(expressionsToSave.toArray(new java.lang.String[expressionsToSave.size()]))) { lineBreakpointImpl.fireBreakpointChanged(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/2451/buggy-version/google-cloud-tools-plugin.src.com.google.gct.idea.debugger.ui.BreakpointConfigurationPanel.java", "BodyUseAPI": [], "Fixed commit": "fd1f74133247426237c0e20752b87ea2aff57f29", "Url": "https://api.github.com/repos/GoogleCloudPlatform/google-cloud-intellij", "Date": "2016-03-16T17:15:42Z"},
{"Line": "=>370", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.sap.furcas.runtime.referenceresolving.ForeachPropertyInitUpdater.produceElement(java.lang.Object,com.sap.furcas.metamodel.FURCAS.textblocks.TextBlock,org.eclipse.emf.ecore.EObject,getOppositeEndFinder(),com.sap.furcas.metamodel.FURCAS.textblocks.ForEachExecution)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (producedElement != null) { if ((!((foreachPredicatePropertyInit.getPropertyReference().getStrucfeature()) instanceof org.eclipse.emf.ecore.EReference)) || (!(((org.eclipse.emf.ecore.EReference) (foreachPredicatePropertyInit.getPropertyReference().getStrucfeature())).isContainment()))) { elementToUpdate.eResource().getContents().add(producedElement); } newFeatureValue.add(producedElement); if (nextForEachExecution != null) { nextForEachExecution = getNextForeachExecution(foreachExecutionsIterator, elementToUpdate); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/2693/buggy-version/DSLEngineering.com.sap.furcas.runtime.referenceresolving.src.com.sap.furcas.runtime.referenceresolving.ForeachPropertyInitUpdater.java", "BodyUseAPI": ["java.util.Collection<java.lang.Object>.add(org.eclipse.emf.ecore.EObject)", "elementToUpdate.eResource().getContents().add(org.eclipse.emf.ecore.EObject)"], "Fixed commit": "a35588c6879c5b2800e56dfce90cc54567ebdaae", "Url": "https://api.github.com/repos/FURCAS-dev/FURCAS", "Date": "2011-04-08T12:36:35Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.widget.ListAdapter.getCount()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (adjPosition < adapterCount) { if ((mAdapter.getItemViewType(adjPosition)) == 0) { return com.bulletnoid.android.widget.StaggeredGridView.HeaderFooterListAdapter.REFRESHABLE_LIST_TYPE; }else { return (mAdapter.getItemViewType(adjPosition)) + (com.bulletnoid.android.widget.StaggeredGridView.HeaderFooterListAdapter.FOOTER_TYPE); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/4622/buggy-version/src.com.bulletnoid.android.widget.StaggeredGridView.HeaderFooterListAdapter.java", "BodyUseAPI": ["android.widget.ListAdapter.getItemViewType(int)", "android.widget.ListAdapter.getItemViewType(int)"], "Fixed commit": "cf0bcc017edee04252aaf2e0c9e216bd9cee8718", "Url": "https://api.github.com/repos/bulletnoid/StaggeredGridView", "Date": "2013-10-12T13:48:17Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mMaxWaveAreaRadius) != waveAreaRadius) { mMaxWaveAreaRadius = waveAreaRadius; resetWave(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/3910/buggy-version/src.com.phodev.andtools.widget.WaterWaveView.java", "BodyUseAPI": [], "Fixed commit": "b1c91d0a2de476b48b220e9f89e5f47962817c53", "Url": "https://api.github.com/repos/shenkaige/andtools", "Date": "2014-12-10T06:07:55Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((columnFrom >= 0) && (columnFrom <= 3)) && (columnTo >= 0)) && (columnTo <= 3)) { if (!(super.columnHasCards(columnTo))) { if ((super.getTopCard(columnFrom).value) == 14) { super.addCardToCol(columnTo, super.getTopCard(columnFrom)); super.removeCardFromCol(columnFrom); }else { errors.add(\"Cannot move card - this is HARD mode\"); } }else { errors.add(\"Cannot move card, column not empty.\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/9088/buggy-version/src.main.java.models.HardGame.java", "BodyUseAPI": ["models.Game.addCardToCol(int,super.getTopCard(columnFrom))", "models.Game.removeCardFromCol(int)", "models.Game.columnHasCards(int)", "models.Game.getTopCard(int)", "models.Game.getTopCard(int)"], "Fixed commit": "313ff83f8c1fcffda568b1a673486a42839a629a", "Url": "https://api.github.com/repos/cs361fall2017/team21", "Date": "2017-11-11T17:57:23Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((room.map) != null) { this.view.setFloorMapForRoom(room.map); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/3383/buggy-version/app.src.main.java.it.unimi.unimiplaces.presenters.RoomDetailPresenter.java", "BodyUseAPI": ["it.unimi.unimiplaces.views.RoomDetailViewInterface.setFloorMapForRoom(room.map)"], "Fixed commit": "67ab151141294cad30fa2ff20c8054a16e2de1df", "Url": "https://api.github.com/repos/diegocstn/spazi-unimi-android-app", "Date": "2015-10-13T07:32:50Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((marker.getNumber()) == 1) { error(Msg.FIRST_MARKER_NOT_SOI); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/4979/buggy-version/src.main.java.ufxcoder.formats.jpeg.JpegProcessor.java", "BodyUseAPI": [], "Fixed commit": "5372b70ecfbaa8a6f8b587e024954e37ff1c3acf", "Url": "https://api.github.com/repos/marco-schmidt/ufxcoder", "Date": "2017-12-18T21:29:33Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((text.getVisibility()) == (android.view.View.INVISIBLE)) { timeSpinner.setSelection(com.akrolsmir.bakegami.SortPreference.TIME.indexOf(\"today\")); timeSpinner.setVisibility(View.VISIBLE); text.setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/8702/buggy-version/src.com.akrolsmir.bakegami.SortPreference.java", "BodyUseAPI": ["android.widget.TextView.setVisibility(View.VISIBLE)"], "Fixed commit": "7070c7c027faa98853c70e3b0e65ca9c9033789c", "Url": "https://api.github.com/repos/akrolsmir/Bakegami", "Date": "2014-09-23T11:26:52Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (firstIssueCreationDate != null) { firstIssueCreationDateString = formatter.format(firstIssueCreationDate.toDate()); }else { firstIssueCreationDateString = \"None\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/2237/buggy-version/src.main.java.com.github.trohovsky.jira.analyzer.IssuesPerMonthStrategy.java", "BodyUseAPI": ["java.text.SimpleDateFormat.format(firstIssueCreationDate.toDate())", "org.joda.time.DateTime.toDate()"], "Fixed commit": "afffc7ac505a6f2b0f93091bc93a98732ea0a4e2", "Url": "https://api.github.com/repos/trohovsky/jira-analyzer", "Date": "2015-07-24T14:30:26Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (indexOfOrderBy != (-1)) { jqlQuery = jqlQuery.substring(0, (indexOfOrderBy - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/2237/buggy-version/src.main.java.com.github.trohovsky.jira.analyzer.IssuesPerMonthStrategy.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "afffc7ac505a6f2b0f93091bc93a98732ea0a4e2", "Url": "https://api.github.com/repos/trohovsky/jira-analyzer", "Date": "2015-07-24T14:30:26Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nth < 0) nth = -nth;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/2848/buggy-version/src.main.java.de.uulm.sqa.algorithms.Fibonacci.java", "BodyUseAPI": [], "Fixed commit": "7b25ab0a5f2e24f0ac25b9d9d972b54c2a709a70", "Url": "https://api.github.com/repos/RaisHamido/SQA_Exercises", "Date": "2016-08-12T08:25:48Z"},
{"Line": "=>1132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((data.length) == 0) { new ErrorMessage(\"No books found.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/7258/buggy-version/src.LibraryGUI.java", "BodyUseAPI": [], "Fixed commit": "819e33d2da23bfdc9b978077b44c3292e2795636", "Url": "https://api.github.com/repos/Peggytastic/304Library", "Date": "2013-03-31T18:35:57Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((mArgs.length) == 3) && (\"--extract\".equals(mArgs[0]))) { org.openmobilealliance.arc.sax2j.extract.Extractor lExtractor = new org.openmobilealliance.arc.sax2j.extract.Extractor(mArgs[1], mArgs[2], \".xml.json\"); lExtractor.setProgressWriter(new org.openmobilealliance.arc.sax2j.ConsoleProgressWriter()); lExtractor.extract(); }else if (((mArgs.length) >= 2) && (!(\"--extract\".equals(mArgs[0])))) { java.lang.String lSchemaFile = mArgs[0]; mSchema = new org.openmobilealliance.arc.sax2j.xml.XmlSchema(new java.io.File(lSchemaFile)); mSchema.setProgressWriter(mProgress); mSchema.parse(); for (int i = 1; i < (mArgs.length); i++) { convert(mArgs[i]); } }else { java.lang.System.out.println((\"Usage: sax2j <schema.xsd> <source.xml> ...\\n\" + \" or sax2j --extract <source.txt> <targetprefix>\\n\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/8186/buggy-version/src.org.openmobilealliance.arc.sax2j.Main.java", "BodyUseAPI": ["org.openmobilealliance.arc.sax2j.Main.convert(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "6e9427435e6300ac541f36b97d9294f4b9323bb5", "Url": "https://api.github.com/repos/kw217/sax2j", "Date": "2015-02-19T16:15:40Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getRom()) == null) { return ((((((((((((((\"Avtalenavn: \" + (this.getName())) + \"\\nAvtalebeskrivelse: \") + (this.getDescription())) + \"\\nStarttid: \") + (this.getStartTime())) + \"\\nSluttid: \") + (this.getEndTime())) + \"\\nDato: \") + (this.getDate().toString())) + \"\\nSted: \") + (this.getPlace())) + \"\\nRom: \") + \"\\nOpprettet av: \") + (this.getMadeBy().getBrukernavn())) + \"\"; }else { return (((((((((((((((\"Avtalenavn: \" + (this.getName())) + \"\\nAvtalebeskrivelse: \") + (this.getDescription())) + \"\\nStarttid: \") + (this.getStartTime())) + \"\\nSluttid: \") + (this.getEndTime())) + \"\\nDato: \") + (this.getDate().toString())) + \"\\nSted: \") + (this.getPlace())) + \"\\nRom: \") + (this.getRom().getSted())) + \"\\nOpprettet av: \") + (this.getMadeBy().getBrukernavn())) + \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/6182/buggy-version/src.fp2014.Appointment.java", "BodyUseAPI": [], "Fixed commit": "b0cd0e03bc0385b5c1353a53adb6385cdfffb669", "Url": "https://api.github.com/repos/gruppe28/fp2014", "Date": "2014-03-17T13:17:07Z"},
{"Line": "=>587", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.moyersoftware.contender.BuildConfig.DEBUG) { createGame(); }else if (android.text.TextUtils.isEmpty(mCode)) { if ((mService) != null) { try { android.os.Bundle buyIntentBundle = mService.getBuyIntent(3, getPackageName(), \"host_game\", \"inapp\", \"\"); android.app.PendingIntent pendingIntent = buyIntentBundle.getParcelable(\"BUY_INTENT\"); startIntentSenderForResult(pendingIntent.getIntentSender(), 1001, new android.content.Intent(), java.lang.Integer.valueOf(0), java.lang.Integer.valueOf(0), java.lang.Integer.valueOf(0)); } catch (java.lang.Exception e) { com.moyersoftware.contender.util.Util.Log((\"exception: \" + e)); e.printStackTrace(); } }else { android.widget.Toast.makeText(this, \"Can't pay to host the game right now\", Toast.LENGTH_SHORT).show(); } }else { okhttp3.OkHttpClient client = new okhttp3.OkHttpClient(); okhttp3.RequestBody formBody = new okhttp3.FormBody.Builder().add(\"text\", mCode).build(); okhttp3.Request request = new okhttp3.Request.Builder().url(Util.SET_CODE_EXPIRED_URL).post(formBody).build(); client.newCall(request).enqueue(new okhttp3.Callback() { @java.lang.Override public void onFailure(okhttp3.Call call, java.io.IOException e) { com.moyersoftware.contender.util.Util.Log((\"Can't set code as expired: \" + e)); } @java.lang.Override public void onResponse(okhttp3.Call call, okhttp3.Response response) throws java.io.IOException { if (!(response.isSuccessful())) return; java.lang.String responseTxt = response.body().string(); if (responseTxt.equals(\"success\")) { runOnUiThread(new java.lang.Runnable() { @java.lang.Override public void run() { createGame(); } }); } } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/124/buggy-version/app.src.main.java.com.moyersoftware.contender.game.HostActivity.java", "BodyUseAPI": [], "Fixed commit": "e18c44a3adae05769fb06ef67c08153394fba088", "Url": "https://api.github.com/repos/sheyko-d/Contender", "Date": "2016-08-05T17:02:10Z"},
{"Line": "=>799", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(friendship.isPending())) { com.moyersoftware.contender.menu.data.Friend friend = new com.moyersoftware.contender.menu.data.Friend(dataSnapshot.getKey(), user.getName(), user.getUsername(), user.getImage(), user.getEmail(), false); if (!(mFriendIds.contains(friend.getId()))) { mFriends.add(friend); mFriendIds.add(friend.getId()); } if ((mFriendsAdapter) != null) { mFriendsAdapter.notifyDataSetChanged(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/124/buggy-version/app.src.main.java.com.moyersoftware.contender.game.GameBoardActivity.java", "BodyUseAPI": [], "Fixed commit": "e18c44a3adae05769fb06ef67c08153394fba088", "Url": "https://api.github.com/repos/sheyko-d/Contender", "Date": "2016-08-05T17:02:10Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (value.isURIResource()) encodedValue = com.sun.jersey.api.uri.UriComponent.encode(value.asResource().getURI(), UriComponent.Type.UNRESERVED);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/9074/buggy-version/src.main.java.org.graphity.core.util.StateBuilder.java", "BodyUseAPI": ["com.sun.jersey.api.uri.UriComponent.encode(value.asResource().getURI(),UriComponent.Type.UNRESERVED)", "value.asResource().getURI()", "com.hp.hpl.jena.rdf.model.RDFNode.asResource()"], "Fixed commit": "c0d35433cfdd2959fe8e018ed655c28f393bc848", "Url": "https://api.github.com/repos/AtomGraph/Core", "Date": "2016-05-03T23:20:32Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (value.isLiteral()) encodedValue = com.sun.jersey.api.uri.UriComponent.encode(value.asLiteral().getString(), UriComponent.Type.UNRESERVED);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/9074/buggy-version/src.main.java.org.graphity.core.util.StateBuilder.java", "BodyUseAPI": ["com.sun.jersey.api.uri.UriComponent.encode(value.asLiteral().getString(),UriComponent.Type.UNRESERVED)", "value.asLiteral().getString()", "com.hp.hpl.jena.rdf.model.RDFNode.asLiteral()"], "Fixed commit": "c0d35433cfdd2959fe8e018ed655c28f393bc848", "Url": "https://api.github.com/repos/AtomGraph/Core", "Date": "2016-05-03T23:20:32Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (value.isLiteral()) encodedValue = com.sun.jersey.api.uri.UriComponent.encode(value.asLiteral().getString(), UriComponent.Type.UNRESERVED);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/9074/buggy-version/src.main.java.org.graphity.core.util.StateBuilder.java", "BodyUseAPI": ["com.hp.hpl.jena.rdf.model.RDFNode.asLiteral()", "value.asLiteral().getString()", "com.sun.jersey.api.uri.UriComponent.encode(value.asLiteral().getString(),UriComponent.Type.UNRESERVED)"], "Fixed commit": "c0d35433cfdd2959fe8e018ed655c28f393bc848", "Url": "https://api.github.com/repos/AtomGraph/Core", "Date": "2016-05-03T23:20:32Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (value.isURIResource()) encodedValue = com.sun.jersey.api.uri.UriComponent.encode(value.asResource().getURI(), UriComponent.Type.UNRESERVED);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/9074/buggy-version/src.main.java.org.graphity.core.util.StateBuilder.java", "BodyUseAPI": ["com.hp.hpl.jena.rdf.model.RDFNode.asResource()", "value.asResource().getURI()", "com.sun.jersey.api.uri.UriComponent.encode(value.asResource().getURI(),UriComponent.Type.UNRESERVED)"], "Fixed commit": "c0d35433cfdd2959fe8e018ed655c28f393bc848", "Url": "https://api.github.com/repos/AtomGraph/Core", "Date": "2016-05-03T23:20:32Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (((cell != null) && (((com.weidian.proxy.hbase.common.BaseHbaseDao.offset) + (com.weidian.proxy.hbase.common.BaseHbaseDao.length)) <= (value.length))) && (((iv.indexOf(\"\ufffd\")) >= 0) || ((iv.indexOf(\"\\u0000\")) >= 0))) { return org.apache.hadoop.hbase.util.Bytes.toInt(org.apache.hadoop.hbase.CellUtil.cloneValue(cell)); }else { if (\"\".equals(iv)) { return null; } return iv.toString().charAt(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/1933/buggy-version/src.main.java.com.weidian.proxy.hbase.common.BaseHbaseDao.java", "BodyUseAPI": ["org.apache.hadoop.hbase.CellUtil.cloneValue(org.apache.hadoop.hbase.Cell)", "org.apache.hadoop.hbase.util.Bytes.toInt(org.apache.hadoop.hbase.CellUtil.cloneValue(cell))", "java.lang.String.equals(java.lang.String)", "java.lang.String.charAt(int)", "java.lang.String.toString()"], "Fixed commit": "82ce7372702a1e97ab0fefeffc35469d70b815ac", "Url": "https://api.github.com/repos/jiangfuqiang/hbaseorm", "Date": "2017-12-21T06:33:14Z"},
{"Line": "=>346", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (clazzName.equals(\"date\")) { return java.util.Date.class; }else if (clazzName.equals(\"timestamp\")) { return java.sql.Timestamp.class; }else if (clazzName.equals(\"char\")) { return char.class; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/1933/buggy-version/src.main.java.com.weidian.proxy.hbase.common.BaseHbaseDao.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "82ce7372702a1e97ab0fefeffc35469d70b815ac", "Url": "https://api.github.com/repos/jiangfuqiang/hbaseorm", "Date": "2017-12-21T06:33:14Z"},
{"Line": "=>2017", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((from instanceof wyjc.io.Type.Negation) || (to instanceof wyjc.io.Type.Negation)) { }else if (from instanceof wyjc.io.Type.Union) { buildCoercion(((wyjc.io.Type.Union) (from)), to, freeSlot, constants, bytecodes); }else { throw new java.lang.RuntimeException((((\"invalid coercion encountered: \" + from) + \" => \") + to)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/5840/buggy-version/src.wyjc.io.ClassFileBuilder.java", "BodyUseAPI": ["wyjc.io.ClassFileBuilder.buildCoercion(wyjc.io.Type,wyjc.io.Type,int,java.util.HashMap<wyjc.io.ClassFileBuilder.Constant, java.lang.Integer>,java.util.ArrayList<wyjc.io.Bytecode>)"], "Fixed commit": "21e5dce5680ca0c9d8b2ce8793fccf40b13761e3", "Url": "https://api.github.com/repos/Whiley/WhileyCompiler", "Date": "2011-09-16T22:30:48Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((amount.signum()) <= 0) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/5795/buggy-version/src.lcx.DatabaseInterface.java", "BodyUseAPI": [], "Fixed commit": "39c168d3f7d29abb3c0ee98c99c0f258fd49723e", "Url": "https://api.github.com/repos/EstiaanJ/LCX-Server", "Date": "2016-07-15T14:37:12Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pool) != null) { pool.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/6141/buggy-version/src.main.java.ca.uwaterloo.asw4j.internal.InstructionClassNode.java", "BodyUseAPI": [], "Fixed commit": "0ed87c6ab9a4f9c9a45c6ae54e1a6a946002c241", "Url": "https://api.github.com/repos/LindenY/asw4j", "Date": "2014-12-31T09:08:43Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (android.text.TextUtils.isEmpty(UserInfoManager.userInfo.getUserId())) { com.xgf.wineserver.utils.UserInfoManager.setUserInfo(mContext); com.xgf.wineserver.network.logic.OrderLogic.getRobOrder(mContext, mHeartBeatHandler, UserInfoManager.userInfo.getUserId(), mLon, mLat); }else { com.xgf.wineserver.network.logic.OrderLogic.getRobOrder(mContext, mHeartBeatHandler, UserInfoManager.userInfo.getUserId(), mLon, mLat); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/6700/buggy-version/src.com.xgf.wineserver.service.MsgService.java", "BodyUseAPI": [], "Fixed commit": "099d14664f69f2b4e4b8a925e9c3eed4702a683b", "Url": "https://api.github.com/repos/xiguofeng/WineServer", "Date": "2015-09-09T05:37:10Z"},
{"Line": "=>410", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(plugin.getDbCtrl().isTableActive(Table.SESSION))) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/6224/buggy-version/src.main.java.com.cypherx.xauth.PlayerManager.java", "BodyUseAPI": [], "Fixed commit": "d8e11546b9e31bc27b58415fc09830df72d78dbc", "Url": "https://api.github.com/repos/CypherX/xAuth", "Date": "2012-05-28T22:09:12Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((com.stlfaboy.risewithsun.SunRise.hours) < 0) || ((com.stlfaboy.risewithsun.SunRise.minutes) < 0)) { if ((com.stlfaboy.risewithsun.SunRise.minutes) < 0) { com.stlfaboy.risewithsun.SunRise.hours = (com.stlfaboy.risewithsun.SunRise.hours) - 1; com.stlfaboy.risewithsun.SunRise.minutes += 60; } long TargetTz = java.lang.Math.round((((float) (Long)) / 15.0)); com.stlfaboy.risewithsun.SunRise.hours = (((int) (TargetTz)) - (tzt / 3600000)) + (com.stlfaboy.risewithsun.SunRise.hours); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/6988/buggy-version/app.src.main.java.com.stlfaboy.risewithsun.SunRise.java", "BodyUseAPI": [], "Fixed commit": "b9d920f5bc9cc63e35d3811f8a5a761e87fab140", "Url": "https://api.github.com/repos/stlfatboy/RiseWithSun", "Date": "2016-10-06T19:56:21Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(model.getEntries().isEmpty())) table.setInput(model.getEntries());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/1549/buggy-version/BibEditorPlugin.src.edu.uchicago.cs.hao.bibeditor.editors.EditorUI.java", "BodyUseAPI": ["edu.uchicago.cs.hao.bibeditor.filemodel.BibModel.getEntries()", "org.eclipse.jface.viewers.TableViewer.setInput(model.getEntries())"], "Fixed commit": "9e1c3479d38d4e02480571882693eba149fd4f56", "Url": "https://api.github.com/repos/harperjiang/TeXDojo", "Date": "2016-11-02T22:06:28Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((model.getEntries().size()) > 0) { edu.uchicago.cs.hao.bibeditor.filemodel.BibEntry first = model.getEntries().get(0); table.setSelection(new org.eclipse.jface.viewers.StructuredSelection(first)); updateTextContent(first.toString()); }else { updateTextContent(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/1549/buggy-version/BibEditorPlugin.src.edu.uchicago.cs.hao.bibeditor.editors.EditorUI.java", "BodyUseAPI": ["model.getEntries().get(int)", "edu.uchicago.cs.hao.bibeditor.filemodel.BibModel.getEntries()"], "Fixed commit": "9e1c3479d38d4e02480571882693eba149fd4f56", "Url": "https://api.github.com/repos/harperjiang/TeXDojo", "Date": "2016-11-02T22:06:28Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (null != entry) model.addEntry(entry);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/1549/buggy-version/BibEditorPlugin.src.edu.uchicago.cs.hao.bibeditor.filemodel.BibParser.java", "BodyUseAPI": ["edu.uchicago.cs.hao.bibeditor.filemodel.BibModel.addEntry(edu.uchicago.cs.hao.bibeditor.filemodel.BibEntry)"], "Fixed commit": "9e1c3479d38d4e02480571882693eba149fd4f56", "Url": "https://api.github.com/repos/harperjiang/TeXDojo", "Date": "2016-11-02T22:06:28Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.geo2tag.tracker.utils.TrackerUtil.isServiceRunning(org.geo2tag.tracker.TrackerActivity,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (trackerState) mBtnService.setText(getResources().getString(R.string.btnStop));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/8917/buggy-version/src.tracker.src.org.geo2tag.tracker.TrackerActivity.java", "BodyUseAPI": [], "Fixed commit": "259541b5ec6d3f406e2cc35c5ab5dcd832330a8b", "Url": "https://api.github.com/repos/geo2tag/tracker", "Date": "2013-07-12T15:38:54Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getClientEngine().getSecurityContext()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (securityContext != null) { callable = securityContext.createSecureCallable(getEndpoint().getSubject(), callable); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/5879/buggy-version/hazelcast.src.main.java.com.hazelcast.executor.client.PartitionCallableRequest.java", "BodyUseAPI": ["com.hazelcast.security.SecurityContext.createSecureCallable(getEndpoint().getSubject(),java.util.concurrent.Callable)"], "Fixed commit": "b06233d28b92ed718a12b98917172a0693865711", "Url": "https://api.github.com/repos/hazelcast/hazelcast", "Date": "2014-05-26T13:34:57Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liangmayong.appbox.core.AppNative.getNativePath(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((targetDir == null) || (\"\".equals(targetDir))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/8952/buggy-version/appbox.src.main.java.com.liangmayong.appbox.core.AppNative.java", "BodyUseAPI": [], "Fixed commit": "e16de778c8d799d2f0ec464a5cbcae3e488f5741", "Url": "https://api.github.com/repos/LiangMaYong/android-appbox", "Date": "2016-09-20T10:07:11Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(appFile.exists())) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/8952/buggy-version/appbox.src.main.java.com.liangmayong.appbox.core.AppNative.java", "BodyUseAPI": [], "Fixed commit": "e16de778c8d799d2f0ec464a5cbcae3e488f5741", "Url": "https://api.github.com/repos/LiangMaYong/android-appbox", "Date": "2016-09-20T10:07:11Z"},
{"Line": "=>360", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value == 1) { Settings.System.putInt(getContentResolver(), Settings.System.RECENTS_CLEAR_ALL_LOCATION, 1); summary = R.string.recents_clear_all_location_top_left; }else if (value == 2) { Settings.System.putInt(getContentResolver(), Settings.System.RECENTS_CLEAR_ALL_LOCATION, 2); summary = R.string.recents_clear_all_location_top_center; }else if (value == 3) { Settings.System.putInt(getContentResolver(), Settings.System.RECENTS_CLEAR_ALL_LOCATION, 3); summary = R.string.recents_clear_all_location_bottom_right; }else if (value == 4) { Settings.System.putInt(getContentResolver(), Settings.System.RECENTS_CLEAR_ALL_LOCATION, 4); summary = R.string.recents_clear_all_location_bottom_left; }else if (value == 5) { Settings.System.putInt(getContentResolver(), Settings.System.RECENTS_CLEAR_ALL_LOCATION, 5); summary = R.string.recents_clear_all_location_bottom_center; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/616/buggy-version/src.com.android.settings.slim.RecentPanel.java", "BodyUseAPI": [], "Fixed commit": "d0c432a7c813652fbc6ba825e109a8d7dde8ab7e", "Url": "https://api.github.com/repos/TeamOrion/packages_apps_Settings", "Date": "2015-12-03T21:15:55Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.floodlightcontroller.core.internal.IOFSwitchService.getSwitch(org.projectfloodlight.openflow.types.DatapathId)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (sw == null) { return java.util.Collections.singletonMap(\"ERROR\", (\"Switch was not online: \" + dpid)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/4692/buggy-version/src.main.java.net.floodlightcontroller.statistics.web.BandwidthResource.java", "BodyUseAPI": [], "Fixed commit": "1658c15b4e1abc8a8879cf9336a39bc66ff55f69", "Url": "https://api.github.com/repos/floodlight/floodlight", "Date": "2016-08-16T21:42:16Z"},
{"Line": "=>461", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (iUserName == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/8038/buggy-version/core.src.main.java.com.orientechnologies.orient.core.metadata.security.OSecurityShared.java", "BodyUseAPI": [], "Fixed commit": "106af4fd23da73a40c3a96ce95d7d20e4435e9f2", "Url": "https://api.github.com/repos/PhantomYdn/orientdb", "Date": "2014-09-15T22:57:21Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mContext) == null) { mContext = getApplicationContext(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/5230/buggy-version/src.com.alandk.xosomienbac.activity.ThongkeItnhieuActivity.java", "BodyUseAPI": [], "Fixed commit": "2bd07a0f1468fc01cdf2c958a32335a6d95182bd", "Url": "https://api.github.com/repos/phucdkbk/xosoclient", "Date": "2014-10-05T09:29:12Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((o1.release_date) == null) && ((o2.release_date) == null)) { return 0; }else if ((o1.release_date) == null) { return 1; }else if ((o2.release_date) == null) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/8468/buggy-version/app.src.main.java.com.example.dmajc.cinephile_movieinfo.adapters.PersonCreditsAdapter.java", "BodyUseAPI": [], "Fixed commit": "ebef707db6aa0d3ac6a75bdf27b2d8a321ae1f8d", "Url": "https://api.github.com/repos/Tetrominos/Cinephile-MovieInfo", "Date": "2017-09-08T11:06:55Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dshell.grammar.ArgumentPattern.ResolveStringInterpolation(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (ResolvedValue == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/116/buggy-version/src.dshell.grammar.ArgumentPattern.java", "BodyUseAPI": [], "Fixed commit": "5482deebf5c8b38f10b2304e510c26721499e547", "Url": "https://api.github.com/repos/sekiguchi-nagisa/DShell", "Date": "2014-02-21T06:23:43Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (foundDollar) { sBuilder.append(\" + \\\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/116/buggy-version/src.dshell.grammar.ArgumentPattern.java", "BodyUseAPI": [], "Fixed commit": "5482deebf5c8b38f10b2304e510c26721499e547", "Url": "https://api.github.com/repos/sekiguchi-nagisa/DShell", "Date": "2014-02-21T06:23:43Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (foundBrace) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/116/buggy-version/src.dshell.grammar.ArgumentPattern.java", "BodyUseAPI": [], "Fixed commit": "5482deebf5c8b38f10b2304e510c26721499e547", "Url": "https://api.github.com/repos/sekiguchi-nagisa/DShell", "Date": "2014-02-21T06:23:43Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (fout != null) fout.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/7475/buggy-version/NoItem.src.net.worldoftomorrow.nala.ni.AutoUpdater.java", "BodyUseAPI": ["java.io.FileOutputStream.close()"], "Fixed commit": "19a3c61d21224ddcdc892b64f83af0ba0d23804d", "Url": "https://api.github.com/repos/nala3/NoItem", "Date": "2012-09-29T15:36:44Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (in != null) in.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/7475/buggy-version/NoItem.src.net.worldoftomorrow.nala.ni.AutoUpdater.java", "BodyUseAPI": ["java.io.BufferedInputStream.close()"], "Fixed commit": "19a3c61d21224ddcdc892b64f83af0ba0d23804d", "Url": "https://api.github.com/repos/nala3/NoItem", "Date": "2012-09-29T15:36:44Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (generatedAddr == null) { android.widget.Toast.makeText(this, \"Error: An error occurred. The address was not created.\", Toast.LENGTH_LONG); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/6746/buggy-version/src.com.teambitcoin.coinwallet.AddressScreen.java", "BodyUseAPI": [], "Fixed commit": "6c9c6ac7fdaf98bffe488575046433e155f80ace", "Url": "https://api.github.com/repos/cwallet/coinwallet", "Date": "2014-02-09T20:40:52Z"},
{"Line": "=>368", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (str.isEmpty()) { return str; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/5317/buggy-version/src.main.java.com.addicticks.net.httpsupload.Utils.java", "BodyUseAPI": [], "Fixed commit": "8ee9cf8ccb138f8cabb7b13a74e7c1e3bec2932c", "Url": "https://api.github.com/repos/Addicticks/httpsupload", "Date": "2016-01-15T15:50:21Z"},
{"Line": "=>365", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (str == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/5317/buggy-version/src.main.java.com.addicticks.net.httpsupload.Utils.java", "BodyUseAPI": [], "Fixed commit": "8ee9cf8ccb138f8cabb7b13a74e7c1e3bec2932c", "Url": "https://api.github.com/repos/Addicticks/httpsupload", "Date": "2016-01-15T15:50:21Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((responseText) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/5317/buggy-version/src.main.java.com.addicticks.net.httpsupload.HttpsFileUploaderResult.java", "BodyUseAPI": [], "Fixed commit": "8ee9cf8ccb138f8cabb7b13a74e7c1e3bec2932c", "Url": "https://api.github.com/repos/Addicticks/httpsupload", "Date": "2016-01-15T15:50:21Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(accountGroups.isEmpty())) disjunction.add(org.jbei.ice.lib.dao.hibernate.Restrictions.in(\"group\", accountGroups));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/1243/buggy-version/src.main.java.org.jbei.ice.lib.dao.hibernate.EntryDAO.java", "BodyUseAPI": ["org.jbei.ice.lib.dao.hibernate.Restrictions.in(java.lang.String,java.util.Set<org.jbei.ice.lib.group.Group>)", "org.jbei.ice.lib.dao.hibernate.Disjunction.add(org.jbei.ice.lib.dao.hibernate.Restrictions.in(\"group\", accountGroups))"], "Fixed commit": "b6e3771a387973b1850ef9e81f7dbe95d29c1de4", "Url": "https://api.github.com/repos/JBEI/ice", "Date": "2015-08-04T16:25:06Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.w3c.dom.NamedNodeMap.item(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (\"http://www.w3.org/XML/1998/namespace\".equals(attr.getNamespaceURI())) { addAttribute(new net.sf.saxon.s9api.QName(\"xml\", attr.getNamespaceURI(), attr.getLocalName()), attr.getNodeValue()); }else { addAttribute(new net.sf.saxon.s9api.QName(attr.getNamespaceURI(), attr.getLocalName()), attr.getNodeValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/7117/buggy-version/braille-css-calabash.src.main.java.org.daisy.braillecss.calabash.ApplyStylesheetProvider.java", "BodyUseAPI": ["org.w3c.dom.Node.getNodeValue()", "org.w3c.dom.Node.getLocalName()", "org.w3c.dom.Node.getNamespaceURI()", "org.daisy.braillecss.calabash.ApplyStylesheetProvider.ApplyStylesheet.MyTreeWriter.addAttribute(net.sf.saxon.s9api.QName,java.lang.String)", "org.w3c.dom.Node.getLocalName()", "org.daisy.braillecss.calabash.ApplyStylesheetProvider.ApplyStylesheet.MyTreeWriter.addAttribute(net.sf.saxon.s9api.QName,java.lang.String)", "org.w3c.dom.Node.getNamespaceURI()", "org.w3c.dom.Node.getNodeValue()"], "Fixed commit": "51d1a41322b92d92fd9796636b7cf2dc405080f5", "Url": "https://api.github.com/repos/daisy-consortium/pipeline-mod-braille", "Date": "2012-07-27T15:17:49Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["rekkura.util.Colut.get(rekkura.logic.model.Dob[],int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (((posSecond) > 0) && (second == null)) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/5117/buggy-version/src.rekkura.logic.model.Unification.java", "BodyUseAPI": [], "Fixed commit": "1e59094a13ec5ff99ecdcf5d8bb626427d9f3c96", "Url": "https://api.github.com/repos/ptpham/rekkura", "Date": "2013-09-08T18:36:07Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["rekkura.util.Colut.get(rekkura.logic.model.Dob[],int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (((posFirst) > 0) && (first == null)) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/5117/buggy-version/src.rekkura.logic.model.Unification.java", "BodyUseAPI": [], "Fixed commit": "1e59094a13ec5ff99ecdcf5d8bb626427d9f3c96", "Url": "https://api.github.com/repos/ptpham/rekkura", "Date": "2013-09-08T18:36:07Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (exception != null) exception.printStackTrace();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/6406/buggy-version/src.main.java.org.altbeacon.beacon.utils.eddystoneeid.EidResolver.java", "BodyUseAPI": ["java.lang.Exception.printStackTrace()"], "Fixed commit": "b94c741d45ba90d2b582a5a962cdc2bd3938189e", "Url": "https://api.github.com/repos/UHMC/android-beacon-library", "Date": "2016-07-28T02:01:15Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dumpLite) { registry.dumpLite(checkOutPath, writer); }else { registry.dump(checkOutPath, writer); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/6894/buggy-version/core.org.wso2.carbon.registry.core.src.main.java.org.wso2.carbon.registry.synchronization.operation.UpdateCommand.java", "BodyUseAPI": [], "Fixed commit": "52f0aa0d9b2407e0336630728736d54c568a9771", "Url": "https://api.github.com/repos/erandasooriyabandara/carbon4-kernel", "Date": "2014-08-18T04:36:35Z"},
{"Line": "=>273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dumpLite) { registry.dumpLite(checkOutPath, writer); }else { registry.dump(checkOutPath, writer); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/6894/buggy-version/core.org.wso2.carbon.registry.core.src.main.java.org.wso2.carbon.registry.synchronization.operation.CheckOutCommand.java", "BodyUseAPI": [], "Fixed commit": "52f0aa0d9b2407e0336630728736d54c568a9771", "Url": "https://api.github.com/repos/erandasooriyabandara/carbon4-kernel", "Date": "2014-08-18T04:36:35Z"},
{"Line": "=>295", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((modelSpinner.getSelectedItem()) != null) { java.lang.String modelName = modelSpinner.getSelectedItem().toString(); if (modelName.equals(getString(R.string.select_model))) { return \"\"; }else { for (java.util.Map.Entry<java.lang.String, java.lang.String> entry : modelMap.entrySet()) { if (entry.getValue().equals(modelName)) { return entry.getKey(); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/3281/buggy-version/evercamPlay.src.main.java.io.evercam.androidapp.addeditcamera.ModelSelectorFragment.java", "BodyUseAPI": ["modelSpinner.getSelectedItem().toString()", "android.widget.Spinner.getSelectedItem()"], "Fixed commit": "d2f6d412affdc359f2355d993613f11a708bb4ad", "Url": "https://api.github.com/repos/evercam/evercam-android", "Date": "2016-02-23T14:47:25Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(prefix.equals(\"\"))) prefix += \" \";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/641/buggy-version/src.main.java.de.dustplanet.colorme.listeners.ColorMePlayerListener.java", "BodyUseAPI": [], "Fixed commit": "d3b27e3c1dee343d74c6a0f80c78520630ce6061", "Url": "https://api.github.com/repos/xGhOsTkiLLeRx/ColorMe", "Date": "2012-12-19T17:36:11Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(globalPrefix.equals(\"\"))) globalPrefix += \" \";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/641/buggy-version/src.main.java.de.dustplanet.colorme.listeners.ColorMePlayerListener.java", "BodyUseAPI": [], "Fixed commit": "d3b27e3c1dee343d74c6a0f80c78520630ce6061", "Url": "https://api.github.com/repos/xGhOsTkiLLeRx/ColorMe", "Date": "2012-12-19T17:36:11Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(groupPrefix.equals(\"\"))) groupPrefix += \" \";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/641/buggy-version/src.main.java.de.dustplanet.colorme.listeners.ColorMePlayerListener.java", "BodyUseAPI": [], "Fixed commit": "d3b27e3c1dee343d74c6a0f80c78520630ce6061", "Url": "https://api.github.com/repos/xGhOsTkiLLeRx/ColorMe", "Date": "2012-12-19T17:36:11Z"},
{"Line": "=>347", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (java.lang.Float.isNaN(camera.position.x)) { java.lang.System.out.println(\"NaN TODO fix\"); camera.position.set(0, 0, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/5692/buggy-version/src.planets.src.se.exuvo.planets.systems.InputSystem.java", "BodyUseAPI": ["camera.position.set(int,int,int)"], "Fixed commit": "17a7406d90672fbf0af018a6357f48084e9d8ed5", "Url": "https://api.github.com/repos/jesajx/inda12-proj", "Date": "2013-05-11T18:06:39Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (attachments != null) { debugLogFileWriter.appendnl((\"SendGMailTask started for attachments: \" + (attachments.toString()))); }else { debugLogFileWriter.appendnl(\"No attachments.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/9012/buggy-version/AndiCar.src.main.java.andicar.n.service.SendGMailTask.java", "BodyUseAPI": [], "Fixed commit": "80b684a06bb47f279587c78a5265f05a773125b2", "Url": "https://api.github.com/repos/mkeresztes/AndiCar", "Date": "2017-11-01T06:49:01Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dungeon.map.astared[door.x][door.z]) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/8331/buggy-version/java.jaredbgreat.dldungeons.planner.astar.DoorChecker.java", "BodyUseAPI": [], "Fixed commit": "45c983c0ef3774140fdc8227c1204c1bd4dde3af", "Url": "https://api.github.com/repos/BlackJar72/DoomlikeDungeons", "Date": "2016-01-24T20:35:22Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (obj != null) { com.forgeessentials.commands.util.Kit kit = ((com.forgeessentials.commands.util.Kit) (obj)); com.forgeessentials.commands.util.CommandDataManager.kits.put(kit.getName(), kit); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/6927/buggy-version/src.main.java.com.forgeessentials.commands.util.CommandDataManager.java", "BodyUseAPI": [], "Fixed commit": "8572dbc8d1765fcb0b10492d035f7979e0e10b3b", "Url": "https://api.github.com/repos/ForgeEssentials/ForgeEssentialsMain", "Date": "2014-11-07T10:11:55Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mat.isNull()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/7362/buggy-version/src.main.de.Lathanael.Commands.Entomb.java", "BodyUseAPI": [], "Fixed commit": "7dfe86f33dbf0a9e93665ee3b844edebfa3adb8f", "Url": "https://api.github.com/repos/Lathanael/FunCommands", "Date": "2011-10-02T16:08:54Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (designErrors.isEmpty()) design.fillInUnusedPackages(designErrors);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/4229/buggy-version/trunk.ant-contrib.src.java.net.sf.antcontrib.design.VerifyDesignDelegate.java", "BodyUseAPI": ["net.sf.antcontrib.design.Design.fillInUnusedPackages(java.util.Vector)"], "Fixed commit": "42a503c77e088bbcfdc299c27436cf260fd1d47b", "Url": "https://api.github.com/repos/crazy-max/ant-contrib", "Date": "2006-10-25T21:22:43Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.inhuasoft.smart.server.LinphonePreferences.instance().getAccountCount()) < 1) { com.inhuasoft.smart.server.LinphonePreferences.instance().CreatedAccount(com.inhuasoft.smart.server.LoginActivity.getDeviceNo(), com.inhuasoft.smart.server.LoginActivity.getDeviceNo(), \"115.28.9.71\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/8924/buggy-version/src.com.inhuasoft.smart.server.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "b25dc72f8f7ec9823e7a287ca5d2923b8d5d182d", "Url": "https://api.github.com/repos/371816210/linserverproject", "Date": "2014-07-10T08:42:37Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((listForSearch.size()) > 0) { final java.util.List<com.awesomeapp.yartists.model.Artist> filteredArtistList = filter(listForSearch, newText); adapter.animateTo(filteredArtistList); recyclerArtists.scrollToPosition(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/4344/buggy-version/app.src.main.java.com.awesomeapp.yartists.activities.MainActivity.java", "BodyUseAPI": ["com.awesomeapp.yartists.activities.MainActivity.3.filter(java.util.List<com.awesomeapp.yartists.model.Artist>,java.lang.String)"], "Fixed commit": "d6712d6a28624e50c314b27e06c6d487658129c6", "Url": "https://api.github.com/repos/vladguriev/YArtists", "Date": "2016-04-24T23:31:24Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isReversed) sb.append(\"NOT \");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/5116/buggy-version/core-metadata.src.main.java.org.apache.kylin.metadata.filter.BuiltInFunctionTupleFilter.java", "BodyUseAPI": [], "Fixed commit": "eb686a9428d930a60ec87883a2c253fb07f80a72", "Url": "https://api.github.com/repos/eventd/kylin", "Date": "2016-12-02T10:34:29Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Long.intValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (repeatedCount < 0) { repeatedCount = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/386/buggy-version/lts-core.src.main.java.com.github.ltsopensource.queue.support.NonRelyJobUtils.java", "BodyUseAPI": [], "Fixed commit": "402e4576adc49f7f8ef72a3ece2116cfb2aad206", "Url": "https://api.github.com/repos/laudukang/light-task-scheduler", "Date": "2017-07-26T15:31:56Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event.gui) instanceof net.minecraft.client.gui.GuiMultiplayer) { event.gui = new com.mordrum.mcore.client.gui.SomeGUI(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/6573/buggy-version/src.main.java.com.mordrum.mcore.client.ClientProxy.java", "BodyUseAPI": [], "Fixed commit": "c3e6e3e888013a3492e55df2adf88cf97a366652", "Url": "https://api.github.com/repos/sirsavary/mordrum-mcore", "Date": "2016-04-05T23:48:12Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((b.cells.size()) > 0) { for (int i : b.cells.get(0).getBoxAvail()) { b.initialValues.add(i); } java.lang.System.out.println(((\"Box\" + count) + \" Possible Solutions\")); java.lang.System.out.println(b.initialValues); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/1601/buggy-version/Puzzle.java", "BodyUseAPI": ["b.cells.get(0).getBoxAvail()", "java.io.PrintStream.println(b.initialValues)", "b.initialValues.add(int)", "b.cells.get(int)"], "Fixed commit": "ed670348325b5f60f417da7d8b15f4a60ed72a3c", "Url": "https://api.github.com/repos/daajdk/hw4", "Date": "2013-12-17T07:22:31Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((b.cells.size()) > 0) { for (int i : b.cells.get(0).getBoxAvail()) { b.initialValues.add(i); } java.lang.System.out.println(((\"Box\" + count) + \" Possible Solutions\")); java.lang.System.out.println(b.initialValues); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/1601/buggy-version/part2.java", "BodyUseAPI": ["b.initialValues.add(int)", "b.cells.get(0).getBoxAvail()", "java.io.PrintStream.println(b.initialValues)", "b.cells.get(int)"], "Fixed commit": "ed670348325b5f60f417da7d8b15f4a60ed72a3c", "Url": "https://api.github.com/repos/daajdk/hw4", "Date": "2013-12-17T07:22:31Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((currentPos.length) > 0) largeurTree = currentPos[max(currentPos)]; else largeurTree = 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/6647/buggy-version/projetMA1.src.graphicInterface.DrawPanel.java", "BodyUseAPI": ["graphicInterface.DrawPanel.max(int[])"], "Fixed commit": "fe442fc99545ebd33457b3e3b13d0f70691a8f50", "Url": "https://api.github.com/repos/Chakalmax/projetMa1", "Date": "2017-08-10T13:51:33Z"},
{"Line": "=>341", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fs.iterator().next()", "net.sf.json.JSONObject.getJSONArray(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((cells.size()) > (f.getPartitions().size())) { int numNewcells = (cells.size()) - (f.getPartitions().size()); f.setPartitionLimit(cells.size()); for (int i = 0; i < numNewcells; i++) { f.addNewPartition(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/5047/buggy-version/notification-consumer-services.src.main.java.uk.ac.bbsrc.tgac.miso.notification.consumer.service.mechanism.PacBioNotificationMessageConsumerMechanism.java", "BodyUseAPI": ["uk.ac.bbsrc.tgac.miso.notification.consumer.service.mechanism.SequencerPartitionContainer.setPartitionLimit(cells.size())", "f.getPartitions().size()", "net.sf.json.JSONArray.size()", "uk.ac.bbsrc.tgac.miso.notification.consumer.service.mechanism.SequencerPartitionContainer.getPartitions()", "uk.ac.bbsrc.tgac.miso.notification.consumer.service.mechanism.SequencerPartitionContainer.addNewPartition()", "net.sf.json.JSONArray.size()"], "Fixed commit": "96ac2b959fb204d98c686a7a96f529e270da94e4", "Url": "https://api.github.com/repos/oicr-gsi/miso-lims", "Date": "2015-06-18T15:47:46Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.dreamlink.communication.util.NetWorkUtil.getLocalIpAddress()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((ip == null) || (ip.equals(\"\"))) { }else if (ip.endsWith(com.dreamlink.communication.util.NetWorkUtil.getLocalIpAddress())) { sendDataToClient(packet); }else { ip = com.dreamlink.communication.util.NetWorkUtil.getLocalIpAddress(); packet = getSearchPacket(); sendDataToClient(packet); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/5024/buggy-version/src.com.dreamlink.communication.search.SearchClientLan.java", "BodyUseAPI": ["java.lang.String.endsWith(com.dreamlink.communication.util.NetWorkUtil.getLocalIpAddress())"], "Fixed commit": "6b56b162472c98b0d06452dd510d29bc491e8be5", "Url": "https://api.github.com/repos/liangPATHofei1100/AndroidCommunication", "Date": "2013-10-21T14:03:51Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((locationFloor) == (elevatorSystem.getMinFloor())) { (locationFloor)++; state = com.daugherty.elevatorsystem.model.Elevator.MOVING_UP; }else { (locationFloor)--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/5215/buggy-version/src.main.java.com.daugherty.elevatorsystem.model.Elevator.java", "BodyUseAPI": [], "Fixed commit": "590a11feea971f7dbe325ed5b405ae57116d09d6", "Url": "https://api.github.com/repos/enriqueserrano/elevatorchallenge", "Date": "2016-08-20T01:08:20Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((locationFloor) == (elevatorSystem.getMaxFloor())) { (locationFloor)--; state = com.daugherty.elevatorsystem.model.Elevator.MOVING_DOWN; }else { (locationFloor)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V80/5215/buggy-version/src.main.java.com.daugherty.elevatorsystem.model.Elevator.java", "BodyUseAPI": [], "Fixed commit": "590a11feea971f7dbe325ed5b405ae57116d09d6", "Url": "https://api.github.com/repos/enriqueserrano/elevatorchallenge", "Date": "2016-08-20T01:08:20Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (prop.getQuotaAvailableBytes().getContent().isEmpty()) { this.quotaAvailableBytes = java.lang.Long.MAX_VALUE; }else { this.quotaAvailableBytes = java.lang.Long.valueOf(prop.getQuotaAvailableBytes().getContent().get(0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/992/buggy-version/src.main.java.com.github.sardine.DavQuota.java", "BodyUseAPI": [], "Fixed commit": "c83306efc2d2759141a4715b340f741b16697cc6", "Url": "https://api.github.com/repos/iterate-ch/sardine", "Date": "2016-06-15T11:32:52Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (prop.getQuotaUsedBytes().getContent().isEmpty()) { this.quotaUsedBytes = 0L; }else { this.quotaUsedBytes = java.lang.Long.valueOf(prop.getQuotaUsedBytes().getContent().get(0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/992/buggy-version/src.main.java.com.github.sardine.DavQuota.java", "BodyUseAPI": [], "Fixed commit": "c83306efc2d2759141a4715b340f741b16697cc6", "Url": "https://api.github.com/repos/iterate-ch/sardine", "Date": "2016-06-15T11:32:52Z"},
{"Line": "=>7", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((words[i].length()) != 0) { java.lang.String nextInitial = \"\" + (words[i].charAt(0)); result = result + (nextInitial.toUpperCase()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/1868/buggy-version/ex03.Initials.java", "BodyUseAPI": ["java.lang.String.charAt(int)"], "Fixed commit": "36b86d3708534312c5faef3a04ea9861ed7b0e48", "Url": "https://api.github.com/repos/BBK-PiJ-2015-50/day11", "Date": "2016-02-13T16:03:44Z"},
{"Line": "=>275", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((completeErrorStack.size()) == 1) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/2043/buggy-version/src.parser.PBO.java", "BodyUseAPI": [], "Fixed commit": "5489f1d86cdbc47b24a64c22aa7d0dfa422c74fa", "Url": "https://api.github.com/repos/spmkd/logAnalyzer", "Date": "2015-10-01T12:45:15Z"},
{"Line": "=>630", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cursor == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/1781/buggy-version/app.src.main.java.chongxuocmanhinh.sound_plusplus.MediaAdapter.java", "BodyUseAPI": [], "Fixed commit": "768e73d359158976a81fa7d7c6be88c9c5024853", "Url": "https://api.github.com/repos/tinifyphan/Sound_plusplus", "Date": "2016-12-08T14:37:34Z"},
{"Line": "=>387", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (shouldCheckForRedundantSeparator && ((prefix.charAt(((prefix.length()) - 1))) == (suffix.charAt(0)))) { suffix = suffix.substring(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/4158/buggy-version/java.org.apache.juli.FileHandler.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "3a11370325d76da68e956644798e4b9148f8a3a4", "Url": "https://api.github.com/repos/katya-stoycheva/tomcat", "Date": "2017-07-11T14:34:35Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eu.execom.labs.pomodorospringreact.repository.PomodoroDao.findById(long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((pomodoro.getPauseStartTime()) != null) { return stop(pomodoroId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/3508/buggy-version/service.src.main.java.eu.execom.labs.pomodorospringreact.service.PomodoroServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "b795bfba0b86c926a8a449a2af5a84f50b7a27af", "Url": "https://api.github.com/repos/execom-eu/execom-labs-team-pomodoro-spring-reactjs", "Date": "2017-11-02T07:26:29Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (parentEngine.pluginManager.onOverrideUrlLoading(url)) { return true; }else if (parentEngine.pluginManager.shouldOpenExternalUrl(url)) { parentEngine.getCordovaWebView().showWebPage(url, true, false, null); return true; }else if (!(parentEngine.pluginManager.shouldAllowNavigation(url))) { org.apache.cordova.LOG.w(org.crosswalk.engine.XWalkCordovaResourceClient.TAG, (\"Blocked (possibly sub-frame) navigation to non-allowed URL: \" + url)); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/3001/buggy-version/src.android.XWalkCordovaResourceClient.java", "BodyUseAPI": ["parentEngine.pluginManager.shouldOpenExternalUrl(java.lang.String)", "org.crosswalk.engine.XWalkWebViewEngine.getCordovaWebView()", "parentEngine.getCordovaWebView().showWebPage(java.lang.String,boolean,boolean,<nulltype>)", "org.apache.cordova.LOG.w(java.lang.String,java.lang.String)", "parentEngine.pluginManager.shouldAllowNavigation(java.lang.String)"], "Fixed commit": "38ebe3e7b621d6feda21d0e73216037d6aa13db3", "Url": "https://api.github.com/repos/dpogue/cordova-crosswalk-engine-lite", "Date": "2015-03-06T23:50:28Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (runDirectory.contains(java.io.File.separator)) { folderName = runDirectory.substring(((runDirectory.lastIndexOf(java.io.File.separator)) + (com.hartwig.healthchecks.common.report.metadata.MetadataExtractor.ONE)), runDirectory.length()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/4359/buggy-version/common.src.main.java.com.hartwig.healthchecks.common.report.metadata.MetadataExtractor.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.lastIndexOf(java.lang.String)", "java.lang.String.length()"], "Fixed commit": "9655bbc1c424c45d762bed9d9a12a87a3755af98", "Url": "https://api.github.com/repos/hartwigmedical/health-checks", "Date": "2016-07-21T14:12:22Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bps != 8) && (bps != 16)) { throw new javax.imageio.IIOException((((bps + \"-bit samples \") + \"are not supported for Horizontal \") + \"differencing Predictor\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/4538/buggy-version/plugin.tiff.src.main.java.it.geosolutions.imageioimpl.plugins.tiff.TIFFDeflateDecompressor.java", "BodyUseAPI": [], "Fixed commit": "ae9548d08646d33988b334e6c28bd51cb2d4973f", "Url": "https://api.github.com/repos/geosolutions-it/imageio-ext", "Date": "2016-09-29T08:43:21Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (chats.isEmpty()) { messagesSoFar = new java.util.ArrayList<java.util.List<java.lang.String>>(); }else { currentChat = chats.get(0); messagesSoFar = currentChat.getMessages(); if (messagesSoFar == null) messagesSoFar = new java.util.ArrayList<java.util.List<java.lang.String>>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/6079/buggy-version/app.src.main.java.swapify.com.swapify.ChatActivity.java", "BodyUseAPI": ["java.util.List<swapify.com.swapify.Chat>.get(int)"], "Fixed commit": "9645debf503939f67779c07fa757874ee822d7ec", "Url": "https://api.github.com/repos/riaj/Swapify", "Date": "2015-11-17T10:41:36Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(fab.isShown())) { fab.show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/5237/buggy-version/app.src.main.java.com.dawgandpony.pd2skills.Fragments.BuildListFragment.java", "BodyUseAPI": ["com.melnykov.fab.FloatingActionButton.show()"], "Fixed commit": "bfb83f0c3fbe11dc221344c2481a6866b24cfe33", "Url": "https://api.github.com/repos/jamieadkins95/Heistr", "Date": "2015-08-19T11:54:40Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((staffNames.length) == 0) { android.net.NetworkInfo netInfo = cm.getActiveNetworkInfo(); if ((netInfo != null) && (netInfo.isConnected())) { new com.aciliit.isoticketmanager.TicketDetailActivity.getAllStaff().execute(); }else { showNoConnectionAlert(this); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/1723/buggy-version/app.src.main.java.com.aciliit.isoticketmanager.TicketDetailActivity.java", "BodyUseAPI": [], "Fixed commit": "7710b194972eec7c30b7e6eb82bc90f18a3a1ee4", "Url": "https://api.github.com/repos/yongkang13/ISO_Ticket_Manager", "Date": "2015-07-19T14:44:48Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((search_instructions) != null) { search_instructions.setVisibility(View.VISIBLE); no_results.setVisibility(View.GONE); loadingPanel.setVisibility(View.GONE); mListView.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/2194/buggy-version/PennMobile.src.main.java.com.pennapps.labs.pennmobile.SearchFavoriteTab.java", "BodyUseAPI": [], "Fixed commit": "9e3d929cbc293720cbca8adcdcd6fd31ed1f0367", "Url": "https://api.github.com/repos/pennlabs/penn-mobile-android", "Date": "2016-11-19T20:57:20Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (roleString == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/5613/buggy-version/src.main.java.co.edu.unicartagena.platf.rest.converters.RoleTypeConverter.java", "BodyUseAPI": [], "Fixed commit": "b689cd2503b5d9068c03c5a222ea0863480278aa", "Url": "https://api.github.com/repos/ryctabo/udc-project-api", "Date": "2016-07-18T10:02:08Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(com.riyagayasen.easyaccordion.WidgetHelper.isNullOrBlank(paragraphBackgroundColor))) paragraph.setBackgroundColor(paragraphBackgroundColor);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/8929/buggy-version/easyaccordion.src.main.java.com.riyagayasen.easyaccordion.AccordionView.java", "BodyUseAPI": ["android.widget.RelativeLayout.setBackgroundColor(int)"], "Fixed commit": "2683aeb236ca15971e1a6461ef5008d264f2ec2d", "Url": "https://api.github.com/repos/riyagayasen/Android_accordion_view", "Date": "2016-12-28T12:18:46Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(com.riyagayasen.easyaccordion.WidgetHelper.isNullOrBlank(headingBackgroundColor))) headingLayout.setBackgroundColor(headingBackgroundColor);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/8929/buggy-version/easyaccordion.src.main.java.com.riyagayasen.easyaccordion.AccordionView.java", "BodyUseAPI": ["android.widget.LinearLayout.setBackgroundColor(int)"], "Fixed commit": "2683aeb236ca15971e1a6461ef5008d264f2ec2d", "Url": "https://api.github.com/repos/riyagayasen/Android_accordion_view", "Date": "2016-12-28T12:18:46Z"},
{"Line": "=>1292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.geoserver.catalog.impl.CatalogImpl.getDefaultWorkspace()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (ws != null) { result = getStyleByName(ws, name); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/1513/buggy-version/src.main.src.main.java.org.geoserver.catalog.impl.CatalogImpl.java", "BodyUseAPI": ["org.geoserver.catalog.impl.CatalogImpl.getStyleByName(org.geoserver.catalog.WorkspaceInfo,java.lang.String)"], "Fixed commit": "c0fa69df55fcffb526c2bd47e642bdb44809aa19", "Url": "https://api.github.com/repos/nmco/geoserver", "Date": "2015-10-06T01:21:37Z"},
{"Line": "=>1047", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (wsName == null) { writer.setValue(name); }else { writer.setValue(((wsName + \":\") + name)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/1513/buggy-version/src.main.src.main.java.org.geoserver.config.util.XStreamPersister.java", "BodyUseAPI": ["com.thoughtworks.xstream.io.HierarchicalStreamWriter.setValue(java.lang.String)"], "Fixed commit": "c0fa69df55fcffb526c2bd47e642bdb44809aa19", "Url": "https://api.github.com/repos/nmco/geoserver", "Date": "2015-10-06T01:21:37Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.os.Build.VERSION.SDK_INT) >= 19) { getWindow().getDecorView().setSystemUiVisibility((((((((android.view.View.SYSTEM_UI_FLAG_LAYOUT_STABLE) | (android.view.View.SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION)) | (android.view.View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN)) | (android.view.View.SYSTEM_UI_FLAG_HIDE_NAVIGATION)) | (android.view.View.SYSTEM_UI_FLAG_FULLSCREEN)) | (android.view.View.SYSTEM_UI_FLAG_IMMERSIVE_STICKY)) | (android.view.View.INVISIBLE))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/3644/buggy-version/app.src.main.java.gearapp.sstudio.com.gearapp.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "1d3d63a7ed71f9f013b82d34e92e28d1089b407c", "Url": "https://api.github.com/repos/Skyrisu/Gear", "Date": "2014-12-03T14:07:51Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<java.lang.Integer>.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (size == 0) return -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/8369/buggy-version/simulator.de.upb.mf.simulator.utilities.NodeIdManager.java", "BodyUseAPI": [], "Fixed commit": "8080525b673e7f22590a480fd3793b2294e5d388", "Url": "https://api.github.com/repos/Krakomat/Simulator", "Date": "2015-09-15T08:55:26Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dna.graph.generators.network.m1.M1Batch.getIdentifier(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (edgeWeightMap.containsKey(identifier)) { e.setWeight(new dna.graph.weights.intW.IntWeight(edgeWeightMap.get(identifier))); edgeWeightMap.remove(identifier); }else { e.setWeight(new dna.graph.weights.intW.IntWeight(1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/105/buggy-version/src.dna.graph.generators.network.m1.M1Batch.java", "BodyUseAPI": ["dna.graph.weights.IWeightedEdge.setWeight(dna.graph.weights.intW.IntWeight)", "java.util.HashMap<java.lang.String, java.lang.Integer>.get(java.lang.String)", "java.util.HashMap<java.lang.String, java.lang.Integer>.remove(java.lang.String)"], "Fixed commit": "704eafc61e3f9c3284fa3ee5f14d112abbd8221b", "Url": "https://api.github.com/repos/Rwilmes/DNA", "Date": "2016-03-11T08:08:36Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((grid.getBackground()) != null) { setBackground(grid.getBackground()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/8201/buggy-version/src.vooga.scroller.level_editor.Level.java", "BodyUseAPI": [], "Fixed commit": "2d5ee11dc42bcc6455a69f7a938fef0302b20a6b", "Url": "https://api.github.com/repos/duke-compsci308-spring2013/vooga", "Date": "2013-04-22T17:23:17Z"},
{"Line": "=>308", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((edtContent.length()) == 0) { android.widget.Toast.makeText(this, \"\u5185\u5bb9\u4e0d\u80fd\u4e3a\u7a7a\", Toast.LENGTH_SHORT).show(); }else { java.lang.String content = edtContent.getText().toString(); if (org.cnodejs.android.md.storage.SettingShared.isEnableTopicSign(this)) { content += \"\\n\\n\" + (org.cnodejs.android.md.storage.SettingShared.getTopicSignContent(this)); } replyTopicAsyncTask(content); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/8061/buggy-version/app.src.main.java.org.cnodejs.android.md.activity.TopicActivity.java", "BodyUseAPI": ["edtContent.getText().toString()", "android.widget.EditText.getText()"], "Fixed commit": "0511fa76c48a006cc4bf7ac1b5b8475c8a2a163e", "Url": "https://api.github.com/repos/TakWolf/CNode-Material-Design", "Date": "2015-08-06T08:08:40Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (igv.getGenomeIds().contains(genomeID)) { igv.selectGenomeFromList(genomeID); }else { java.lang.String genomePath = genomeID; if (!(org.broad.igv.batch.ParsingUtils.pathExists(genomePath))) { java.lang.String workingDirectory = new java.io.File(\"tmp\").getParent(); genomePath = org.broad.igv.batch.FileUtils.getAbsolutePath(genomeID, workingDirectory); } if (org.broad.igv.batch.ParsingUtils.pathExists(genomePath)) { try { igv.loadGenome(genomePath, null); } catch (java.io.IOException e) { throw new java.lang.RuntimeException((\"Error loading genome: \" + genomeID)); } }else { org.broad.igv.ui.util.MessageUtils.showMessage((\"Warning: Could not locate genome: \" + genomeID)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/4260/buggy-version/src.org.broad.igv.batch.CommandExecutor.java", "BodyUseAPI": ["org.broad.igv.ui.IGV.loadGenome(java.lang.String,<nulltype>)", "org.broad.igv.ui.IGV.selectGenomeFromList(java.lang.String)", "org.broad.igv.ui.util.MessageUtils.showMessage(java.lang.String)", "org.broad.igv.batch.FileUtils.getAbsolutePath(java.lang.String,java.lang.String)"], "Fixed commit": "62a39bd5f9c1f3b1339506dbb85291c3fb7b9a32", "Url": "https://api.github.com/repos/broadinstitute/IGV", "Date": "2012-05-24T02:45:27Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.os.Bundle.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((description != \"null\") && (!(description.equals(\"null\")))) { notificationDescription.setText(android.text.Html.fromHtml(description)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/307/buggy-version/app.src.main.java.com.upc.fib.racopocket.Activities.NotificationDetailsActivity.java", "BodyUseAPI": ["android.text.Html.fromHtml(java.lang.String)", "android.widget.TextView.setText(android.text.Html.fromHtml(description))"], "Fixed commit": "9cb73ec407120bec5a38ef0e37f3f19f63f76cbd", "Url": "https://api.github.com/repos/JosepRivaille/RacoPocket", "Date": "2016-09-08T20:59:50Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((frontend.UserDataImpl.logInUsers.get(sessionId)) != null) { frontend.UserDataImpl.logInUsers.get(sessionId).visit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/6965/buggy-version/src.main.java.frontend.UserDataImpl.java", "BodyUseAPI": ["frontend.UserDataImpl.logInUsers.get(sessionId).visit()", "java.util.Map<java.lang.String, dbService.UserDataSet>.get(java.lang.String)"], "Fixed commit": "24eec1ce47e302d002ebf56b32c476ba11721b03", "Url": "https://api.github.com/repos/gKSD/server", "Date": "2014-04-08T20:22:00Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((gui.Gui.getInstance()) != null) { utils.SysTray.getInstance().createTrayIcon(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/8890/buggy-version/Qora.src.Start.java", "BodyUseAPI": [], "Fixed commit": "a909a6379ebb77bd70961192d38711e7aabf2ab8", "Url": "https://api.github.com/repos/Qoracoin/Qora", "Date": "2015-07-10T14:53:33Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.mail.Message.getReceivedDate()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (receivedDate != null) { java.lang.System.out.println((\"Received : \" + (receivedDate.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/6562/buggy-version/src.main.java.com.maPATHnnicu.networkprogramming.Main.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)", "java.util.Date.toString()"], "Fixed commit": "7af09d85be9411c47aebb606215db74406e3c9d5", "Url": "https://api.github.com/repos/maPATHnnicu/network-programming", "Date": "2017-05-10T08:47:11Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.mail.Message.getSentDate()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (sentDate != null) { java.lang.System.out.println((\"Sent : \" + (sentDate.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/6562/buggy-version/src.main.java.com.maPATHnnicu.networkprogramming.Main.java", "BodyUseAPI": ["java.util.Date.toString()", "java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "7af09d85be9411c47aebb606215db74406e3c9d5", "Url": "https://api.github.com/repos/maPATHnnicu/network-programming", "Date": "2017-05-10T08:47:11Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cloud.benchflow.experimentmanager.services.internal.dao.TrialModelDAO.getTrialModel(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (trialModel != null) { trialModel.incrementRetries(); datastore.save(trialModel); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/2677/buggy-version/benchflow-experiment-manager.application.src.main.java.cloud.benchflow.experimentmanager.services.internal.dao.TrialModelDAO.java", "BodyUseAPI": ["cloud.benchflow.experimentmanager.services.internal.dao.TrialModelDAO.save(cloud.benchflow.experimentmanager.models.TrialModel)", "cloud.benchflow.experimentmanager.models.TrialModel.incrementRetries()"], "Fixed commit": "7cacf41c3f371caf0d5342a5ae06efff789ac0f7", "Url": "https://api.github.com/repos/benchflow/benchflow", "Date": "2017-05-11T23:15:39Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (tempDirAbsolutePath.startsWith(java.io.File.separator)) tempDirAbsolutePath = \"file://\" + tempDirAbsolutePath;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/9185/buggy-version/src.semgen.visualizations.SemGenCommunicatingWebBrowser.java", "BodyUseAPI": [], "Fixed commit": "9f962e3beb37440cc813c01a538a7b46d166f84b", "Url": "https://api.github.com/repos/SemBioProcess/SemGen", "Date": "2015-05-30T10:26:34Z"},
{"Line": "=>363", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (RPG.whatclass.equalsIgnoreCase(\"Fighter\")) RPG.strength = (RPG.strength) + 10; else RPG.magic = (RPG.magic) + 10;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/2863/buggy-version/src.rpg.RPGFrame.java", "BodyUseAPI": [], "Fixed commit": "3dcdad43348eabcdc955053da63a6ca87ba26be0", "Url": "https://api.github.com/repos/goddardmorse/RPG", "Date": "2013-07-19T22:53:31Z"},
{"Line": "=>309", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONArray.getJSONArray(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (jsonValueSnak.getString(0).equals(\"value\")) { org.wikidata.wdtk.datamodel.interfaces.ValueSnak currentValueSnak = this.getValueSnak(jsonValueSnak); valueSnaks.add(currentValueSnak); }else { org.wikidata.wdtk.dumpfiles.JsonConverter.logger.debug((\"Unsupported snak type in reference: \" + jsonValueSnak)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/6734/buggy-version/wdtk-dumpfiles.src.main.java.org.wikidata.wdtk.dumpfiles.JsonConverter.java", "BodyUseAPI": ["org.slf4j.Logger.debug((\"Unsupported snak type in reference: \" + jsonValueSnak))", "org.wikidata.wdtk.dumpfiles.JsonConverter.getValueSnak(org.json.JSONArray)"], "Fixed commit": "e6def5c499ae3dd93c91c942361023d1c54d95eb", "Url": "https://api.github.com/repos/Wikidata/Wikidata-Toolkit", "Date": "2014-03-24T16:02:14Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((inputStream.read()) == (-1)) { throw new co.nstant.in.cbor.CborException(\"unexpected end of stream\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/1071/buggy-version/src.main.java.co.nstant.in.cbor.builder.AbstractBuilder.java", "BodyUseAPI": [], "Fixed commit": "c6c48f5bac8102dec5e2b937179025ffbcafdf83", "Url": "https://api.github.com/repos/c-rack/cbor-java", "Date": "2015-05-20T19:40:26Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (placementLocation != null) alignmentLocation.derive(null, null, null, ((double) (0)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/6810/buggy-version/src.main.java.org.openpnp.machine.reference.ZevatechCenteringStage.java", "BodyUseAPI": [], "Fixed commit": "564a015a766621a06b2df766108fbddb200bbfd2", "Url": "https://api.github.com/repos/tracklogic/openpnp", "Date": "2016-11-23T18:17:47Z"},
{"Line": "=>1410", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (inlined) { if ((node.next) != null) { java.lang.String skipChars = \",;:'.)]}>!?\"; java.lang.String nextChar = org.w3c.tidy.TidyUtils.getString(node.next.textarray, node.next.start, 1); if ((nextChar != null) && (!(skipChars.contains(nextChar)))) { addC(' ', ((linelen)++)); } } }else { condFlushLine(fout, indent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/7390/buggy-version/src.main.java.org.w3c.tidy.PPrint.java", "BodyUseAPI": [], "Fixed commit": "bf03c015113778fca402bfe0d3f2e271887f48c4", "Url": "https://api.github.com/repos/joakime/xmlfresh-maven-plugin", "Date": "2012-11-02T12:59:27Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (countNoise != 0) { penalty = ((double) (countNoise)) / ((double) (rel.size())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/6144/buggy-version/src.experimentalcode.students.baierst.EvaluateVRC.java", "BodyUseAPI": [], "Fixed commit": "49b49c580c557abaf30bb86a9096800229013225", "Url": "https://api.github.com/repos/elki-project/elki", "Date": "2014-05-27T02:38:47Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cluster.isNoise()) && ((noiseOption.equals(NoiseOption.IGNORE_NOISE)) || (noiseOption.equals(NoiseOption.IGNORE_NOISE_WITH_PENALTY)))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/6144/buggy-version/src.experimentalcode.students.baierst.EvaluateVRC.java", "BodyUseAPI": [], "Fixed commit": "49b49c580c557abaf30bb86a9096800229013225", "Url": "https://api.github.com/repos/elki-project/elki", "Date": "2014-05-27T02:38:47Z"},
{"Line": "=>512", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jax.mgi.indexer.HdpIndexerSQL.isHuman(java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((isHumanMarker && (!(isHuman(orthologKey)))) || ((!isHumanMarker) && (isHuman(orthologKey)))) { addMarkerCoordinates(doc, orthologKey, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/2387/buggy-version/src.org.jax.mgi.indexer.HdpIndexerSQL.java", "BodyUseAPI": ["org.jax.mgi.indexer.HdpIndexerSQL.addMarkerCoordinates(org.jax.mgi.shr.DistinctSolrInputDocument,java.lang.Integer,boolean)"], "Fixed commit": "d38d84db9bdb268a518afeca6b8f1f60ce4006ef", "Url": "https://api.github.com/repos/mgijax/feindexer", "Date": "2016-05-30T19:46:01Z"},
{"Line": "=>1811", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.entity.Player.getUniqueId()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(plugin.getPlayers().hasIsland(playerUUID))) { com.wasteofplastic.askyblock.util.Util.sendMessage(player, ((org.bukkit.ChatColor.RED) + (plugin.myLocale(player.getUniqueId()).errorNoIsland))); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/4697/buggy-version/src.com.wasteofplastic.askyblock.commands.IslandCmd.java", "BodyUseAPI": ["com.wasteofplastic.askyblock.util.Util.sendMessage(org.bukkit.entity.Player,((org.bukkit.ChatColor.RED) + (plugin.myLocale(player.getUniqueId()).errorNoIsland)))", "com.wasteofplastic.askyblock.ASkyBlock.myLocale(player.getUniqueId())"], "Fixed commit": "e8e25573824794c901d99febc301aad2f08c5fb3", "Url": "https://api.github.com/repos/tastybento/askyblock", "Date": "2017-05-03T03:33:36Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (DEBUG) { java.lang.System.out.println((\"total items in table is: \" + (mydb.getAllmacrosInfo()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/3920/buggy-version/Source.app.src.main.java.fitness.cs115.a115fitnessapp.meal_viewAllMeals.java", "BodyUseAPI": [], "Fixed commit": "61dbc712b8db8135b0b1022bedabdcfb987e5040", "Url": "https://api.github.com/repos/henry-pan/NutriFit", "Date": "2016-11-19T23:47:17Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.sqlite.SQLiteDatabase.rawQuery(java.lang.String,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(arrTblNames.contains(c.getString(c.getColumnIndex(\"name\"))))) { arrTblNames.add(c.getString(c.getColumnIndex(\"name\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/3920/buggy-version/Source.app.src.main.java.fitness.cs115.a115fitnessapp.meal_viewAllMeals.java", "BodyUseAPI": ["android.database.Cursor.getColumnIndex(java.lang.String)", "java.util.ArrayList<java.lang.String>.add(c.getString(c.getColumnIndex(\"name\")))", "android.database.Cursor.getString(c.getColumnIndex(\"name\"))"], "Fixed commit": "61dbc712b8db8135b0b1022bedabdcfb987e5040", "Url": "https://api.github.com/repos/henry-pan/NutriFit", "Date": "2016-11-19T23:47:17Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (wrong > 0) { ratio = correct / wrong; }else { ratio = correct; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/1382/buggy-version/core.src.com.mygdx.game.Player.java", "BodyUseAPI": [], "Fixed commit": "34fd2630a51ff8d620cb92b058a60e1f57daa928", "Url": "https://api.github.com/repos/moulie415/Equation-Dragger", "Date": "2017-03-04T00:19:47Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (geogCSHandler == null) { ucar.nc2.iosp.geotiff.epsg.GTGeogCS geogCS = projCS.getSourceGeogCS(); if (geogCS == null) { return null; } geogCSHandler = new ucar.nc2.iosp.geotiff.cs.GeogCSGridMappingAdapter(geogCS); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/3422/buggy-version/geotiff-iosp.src.main.java.ucar.nc2.iosp.geotiff.GeoTiffCoordSys.java", "BodyUseAPI": [], "Fixed commit": "468142e68a8bc52bde344bece87503777804b1b1", "Url": "https://api.github.com/repos/USGS-CIDA/geotiff-iosp", "Date": "2013-03-06T22:32:19Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (jetbrick.web.mvc.multipart.FileUpload.class.isAssignableFrom(cls)) { fileUpload.register(cls); }else { throw new java.lang.IllegalStateException((\"@Managed annotation is illegal in class: \" + (cls.getName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/4061/buggy-version/jetbrick-webmvc.src.main.java.jetbrick.web.mvc.WebConfigBuilder.java", "BodyUseAPI": ["jetbrick.web.mvc.multipart.DelegatedFileUpload.register(java.lang.Class<?>)", "java.lang.Class<?>.getName()"], "Fixed commit": "1684fb5b35ae71fced85d57e28efea3dc82ae018", "Url": "https://api.github.com/repos/subchen/jetbrick-webmvc", "Date": "2014-11-06T14:36:22Z"},
{"Line": "=>359", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bSimulateMode) { java.lang.Thread.sleep(((int) (dt))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/1839/buggy-version/JavaCode.CTserial.src.main.java.erigo.ctserial.CTserial.java", "BodyUseAPI": [], "Fixed commit": "a5aef9c0681fd1c4b7a46cb55cc2115ef1e6d525", "Url": "https://api.github.com/repos/cycronix/cloudturbine", "Date": "2016-12-16T23:40:45Z"},
{"Line": "=>843", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isRequestor(message)) { if (maps == null) { org.apache.cxf.message.Message m = message.getExchange().getOutMessage(); maps = org.apache.cxf.ws.addressing.ContextUtils.retrieveMAPs(m, false, true, false); if (maps != null) { org.apache.cxf.message.Exchange ex = uncorrelatedExchanges.get(maps.getMessageID().getValue()); if (ex == (message.getExchange())) { uncorrelatedExchanges.remove(maps.getMessageID().getValue()); org.apache.cxf.ws.addressing.soap.MAPCodec.LOG.log(java.util.logging.Level.WARNING, \"RESPONSE_NOT_USING_WSADDRESSING\"); } } }else if ((((maps.getRelatesTo()) == null) && ((maps.getAction()) != null)) && (Names.WSA_DEFAULT_FAULT_ACTION.equals(maps.getAction().getValue()))) { org.apache.cxf.message.Message m = message.getExchange().getOutMessage(); maps = org.apache.cxf.ws.addressing.ContextUtils.retrieveMAPs(m, false, true, false); if (maps != null) { uncorrelatedExchanges.remove(maps.getMessageID().getValue()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/885/buggy-version/rt.ws.addr.src.main.java.org.apache.cxf.ws.addressing.soap.MAPCodec.java", "BodyUseAPI": ["org.apache.cxf.binding.soap.SoapMessage.getExchange()", "message.getExchange().getOutMessage()", "org.apache.cxf.binding.soap.SoapMessage.getExchange()", "org.apache.cxf.binding.soap.SoapMessage.getExchange()", "message.getExchange().getOutMessage()"], "Fixed commit": "c39da5b4bb0f03358c62a64b853f90b887f62d52", "Url": "https://api.github.com/repos/mulesoft/cxf", "Date": "2015-09-16T16:58:14Z"},
{"Line": "=>860", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (maps != null) { uncorrelatedExchanges.remove(maps.getMessageID().getValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/885/buggy-version/rt.ws.addr.src.main.java.org.apache.cxf.ws.addressing.soap.MAPCodec.java", "BodyUseAPI": ["org.apache.cxf.ws.addressing.AddressingProperties.getMessageID()", "java.util.Map<java.lang.String, org.apache.cxf.message.Exchange>.remove(maps.getMessageID().getValue())", "maps.getMessageID().getValue()"], "Fixed commit": "c39da5b4bb0f03358c62a64b853f90b887f62d52", "Url": "https://api.github.com/repos/mulesoft/cxf", "Date": "2015-09-16T16:58:14Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(response.isEmpty())) { return response; }else { throw new com.needle.web.MainController.ResourceNotFoundException(\"No results found, please search another artist.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/6287/buggy-version/src.main.java.com.needle.web.MainController.java", "BodyUseAPI": [], "Fixed commit": "9aee05b4a89bd404d8d7d66c57f5553260788d54", "Url": "https://api.github.com/repos/jaredhandra/needle", "Date": "2017-04-10T15:21:42Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (selectionIncludesLockedLines()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/7247/buggy-version/beast.src.main.java.edu.pse.beast.codearea.InputToCode.UserInsertToCode.java", "BodyUseAPI": [], "Fixed commit": "dd41bc46ee64e1a6d71596214fc1794a357c2b5c", "Url": "https://api.github.com/repos/Skypr/BEAST", "Date": "2017-02-12T12:16:50Z"},
{"Line": "=>2919", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.codename1.ui.Component.getComponentForm()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((dragActivated) && ((p.getDraggedComponent()) == null)) { dragActivated = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/3486/buggy-version/CodenameOne.src.com.codename1.ui.Component.java", "BodyUseAPI": [], "Fixed commit": "ae7e4633f877e7f52b661d37c475108d83b1a65a", "Url": "https://api.github.com/repos/codenameone/CodenameOne", "Date": "2016-05-30T14:04:48Z"},
{"Line": "=>708", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<java.lang.String>.iterator()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (i.hasNext()) text.append(SearchUtil.SPACE_SEPARATOR);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/2750/buggy-version/components.insight.SRC.org.openmicroscopy.shoola.agents.dataBrowser.view.SearchPanel.java", "BodyUseAPI": [], "Fixed commit": "400f37faf01b57f5fcca014ab8c7340309a2e82a", "Url": "https://api.github.com/repos/openmicroscopy/openmicroscopy", "Date": "2015-03-02T08:26:12Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jivesoftware.smack.packet.Message.getBody()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (body != null) { android.util.Log.v(com.skyteam.easy.chat.ChatService.TAG, (\"Received message: \" + body)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/5413/buggy-version/src.com.skyteam.easy.chat.ChatService.java", "BodyUseAPI": ["android.util.Log.v(java.lang.String,java.lang.String)"], "Fixed commit": "2b8cff35644fca267b5b1273f36914fb6f98286a", "Url": "https://api.github.com/repos/xjcook/easychat", "Date": "2012-11-29T13:02:52Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(acceptInitial(x))) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/757/buggy-version/src.de.tum.in.dss.psquare.PSquared.java", "BodyUseAPI": [], "Fixed commit": "64c0760a4b243ac59c31780ef01811dc18c7703b", "Url": "https://api.github.com/repos/jacksonicson/psquared", "Date": "2013-05-02T10:45:38Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.hazelcast.core.IMap<java.lang.Integer, net.zyclonite.gw2live.model.WvwEvent>.get(wvwevent.hashCode())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (wvwevent.getOwner().equalsIgnoreCase(oldWveevent.getOwner())) { wvwevent.setTimestamp(oldWveevent.getTimestamp()); }else { wvwevent.setTimestamp(timestamp); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/4143/buggy-version/src.net.zyclonite.gw2live.threads.WvwEventMatcher.java", "BodyUseAPI": ["net.zyclonite.gw2live.model.WvwEvent.setTimestamp(oldWveevent.getTimestamp())", "net.zyclonite.gw2live.model.WvwEvent.setTimestamp(java.util.Date)", "net.zyclonite.gw2live.model.WvwEvent.getTimestamp()"], "Fixed commit": "3285d8070662a788e27abaad825e7436e8a283cc", "Url": "https://api.github.com/repos/zyclonite/gw2live", "Date": "2013-10-17T10:21:14Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getConfig().getStringList(\"message\")) == null) { saveDefaultConfig(); }else { saveConfig(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/7245/buggy-version/src.me.raydond123.customdonate.CustomDonate.java", "BodyUseAPI": [], "Fixed commit": "db848910e9155b492a89fa67fb28f548d06f315d", "Url": "https://api.github.com/repos/Raydond123/CustomDonate", "Date": "2015-03-27T01:11:11Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.alibaba.fastjson.util.TypeUtils.computeGetters(java.lang.Class<?>,java.util.Map<java.lang.String, java.lang.String>,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((getters.size()) > 256) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/2022/buggy-version/src.main.java.com.alibaba.fastjson.serializer.ASMSerializerFactory.java", "BodyUseAPI": [], "Fixed commit": "2e4a7a70c8165281e49fc7a901d54ceac4226a22", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2015-08-21T17:28:31Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pd) != null) { if ((recordGetDone) >= 3) pd.dismiss(); else timer.start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/7265/buggy-version/app.src.main.java.ie.teamchile.smartapp.activities.ClinicTimeRecordActivity.java", "BodyUseAPI": [], "Fixed commit": "91de8813b3f66abb04090a93aa14649291ec5a3e", "Url": "https://api.github.com/repos/otormaigh/SMART", "Date": "2015-09-26T12:26:32Z"},
{"Line": "=>664", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.immotor.controller.PackageRepository.findByTypeAndStatus(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (null != p) { com.immotor.controller.PackageConsume pc = packageConsumeRepository.findByUserIdAndCode(uID, p.getCode()); if (pc == null) return new com.immotor.controller.ResultMsg(ResultStatusCode.COUPON_EXIST.getCode(), ResultStatusCode.COUPON_EXIST.getMsg(), p); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/3065/buggy-version/power-station.src.main.java.com.immotor.controller.UserController.java", "BodyUseAPI": ["com.immotor.controller.PackageConsumeRepository.findByUserIdAndCode(java.lang.Long,p.getCode())", "java.lang.Package.getCode()"], "Fixed commit": "b0ab7fd8cbf265226b2a5f2c3c4584aca0ad3abb", "Url": "https://api.github.com/repos/immotor-bill/power", "Date": "2017-12-27T06:39:21Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(sharedPreferences.getString(KEY_SETTINGS_GROUP, \"2\"))", "java.lang.Integer.parseInt(sharedPreferences.getString(KEY_SETTINGS_ROW, \"2\"))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((groupSize == 3) && (row > 3)) { row = 3; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/3373/buggy-version/app.src.main.java.jimmy.gg.flashingnumbers.LevelManager.Numbers.java", "BodyUseAPI": [], "Fixed commit": "fb376f4f76f9daced39e906e41a00a10c4b3875e", "Url": "https://api.github.com/repos/GGJirka/Memory-Marathon-App", "Date": "2017-03-05T09:41:15Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (location != null) { com.radix.nowplayinglog.models.Song songWithLocation = new com.radix.nowplayinglog.models.Song(existingSong, location); publishSong(songWithLocation); }else { android.util.Log.e(com.radix.nowplayinglog.service.ListenerServiceT.TAG, \"Location collection returned null using the fused location api for song. Publishing the regular version\"); publishSong(existingSong); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/2654/buggy-version/app.src.main.java.com.radix.nowplayinglog.service.ListenerServiceT.java", "BodyUseAPI": [], "Fixed commit": "db27fcfb6149e4e80dab7a3ca0f12f89f6f309cd", "Url": "https://api.github.com/repos/radixdev/whats-that-song", "Date": "2017-11-30T14:44:29Z"},
{"Line": "=>1388", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (BASIC_TOKEN_TYPE.equals(mAuthTokenType)) { updateAccountAuthentication(); success = true; }else { success = updateAccount(username); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/4676/buggy-version/src.com.owncloud.android.authentication.AuthenticatorActivity.java", "BodyUseAPI": [], "Fixed commit": "aa215aff80af28e63ad8befe71d4dda47fa01805", "Url": "https://api.github.com/repos/hannesa2/owncloud-android", "Date": "2017-09-27T10:34:04Z"},
{"Line": "=>1378", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(BASIC_TOKEN_TYPE.equals(mAuthTokenType))) { mUsernameInput.setText(username); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/4676/buggy-version/src.com.owncloud.android.authentication.AuthenticatorActivity.java", "BodyUseAPI": [], "Fixed commit": "aa215aff80af28e63ad8befe71d4dda47fa01805", "Url": "https://api.github.com/repos/hannesa2/owncloud-android", "Date": "2017-09-27T10:34:04Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (line.contains(\"6/47\")) debugger = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/3219/buggy-version/PortParser.thcsw002Parser.java", "BodyUseAPI": [], "Fixed commit": "3cdae5e4194571cff17639adb0e6d1fdb32160e8", "Url": "https://api.github.com/repos/waflores/PortParser", "Date": "2012-10-12T14:18:16Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((armoredOutputStream) != null) { armoredOutputStream.flush(); armoredOutputStream.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/4338/buggy-version/src.main.java.name.neuhalfen.projects.crypto.bouncycastle.openpgp.encrypting.PGPEncryptingStream.java", "BodyUseAPI": [], "Fixed commit": "7327248932e73b753fa220093fbf556d6aa04373", "Url": "https://api.github.com/repos/neuhalje/bouncy-gpg", "Date": "2017-02-08T20:46:50Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.N)) { java.lang.String authority = (org.ttrssreader.BuildConfig.APPLICATION_ID) + \".provider\"; android.net.Uri uri = android.support.v4.content.FileProvider.getUriForFile(c.getContext(), authority, startPath); intent.setData(uri); }else { intent.setData(android.net.Uri.parse((uriPrefix + (startPath.getPath())))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/7648/buggy-version/ttrssreader.src.main.java.org.ttrssreader.preferences.FileBrowserHelper.java", "BodyUseAPI": [], "Fixed commit": "b4e1b0a4e81f99ef28c46c116cb90ffd19a4e85d", "Url": "https://api.github.com/repos/yuanrunmao/ttrss-reader-fork", "Date": "2017-03-23T05:34:21Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (oldVersion == 251) { config.set(\"configversion\", \"2.5.2\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/2395/buggy-version/src.main.java.com.pantherman594.gssentials.Updater.java", "BodyUseAPI": [], "Fixed commit": "53b73684f759de443e1f92095dd166844d45194f", "Url": "https://api.github.com/repos/PantherMan594/BungeeEssentials", "Date": "2016-01-25T21:27:52Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.neo4j.rest.graphdb.index.RestIndex<org.neo4j.graphdb.Node>.get(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (nodes.getSingle().hasRelationship()) { return nodes.getSingle(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/1655/buggy-version/corelib-solr.src.main.java.eu.europeana.corelib.solr.server.impl.Neo4jServerImpl.java", "BodyUseAPI": ["org.neo4j.graphdb.index.IndexHits<org.neo4j.graphdb.Node>.getSingle()"], "Fixed commit": "2e3ac45227f295c8843d30e14142843e1cbe30c3", "Url": "https://api.github.com/repos/europeana/corelib", "Date": "2014-10-09T14:39:21Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((var.equals(\"wid\")) || (var.equals(\"sid\"))) { haystack = exp; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/6558/buggy-version/src.main.java.org.agmip.ace.util.AceFunctions.java", "BodyUseAPI": [], "Fixed commit": "12e944ab5432c2fadaed875e808df2e81d078a2a", "Url": "https://api.github.com/repos/MengZhang/ace-core", "Date": "2014-08-05T14:54:55Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["guild.getMember(user).getVoiceState().getChannel()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (voiceChannel == null) { return org.springframework.http.ResponseEntity.status(HttpStatus.BAD_REQUEST).body(\"You have to be in a channel.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/4615/buggy-version/src.main.java.pothi_discord.rest.guilds.GuildsController.java", "BodyUseAPI": [], "Fixed commit": "f63ab7cdf8c8dd356708b058cf9d403076e2aa50", "Url": "https://api.github.com/repos/p0thi/pothi_discord_music", "Date": "2017-08-05T18:39:12Z"},
{"Line": "=>354", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(com.vmware.bdd.utils.CommonUtil.isBlank(spec.getLocalRepoURL()))) { newSpec.setLocalRepoURL(spec.getLocalRepoURL()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/8635/buggy-version/server.cluster-mgmt.src.main.java.com.vmware.bdd.specpolicy.ClusterSpecFactory.java", "BodyUseAPI": ["com.vmware.bdd.apitypes.ClusterCreate.getLocalRepoURL()", "com.vmware.bdd.apitypes.ClusterCreate.setLocalRepoURL(spec.getLocalRepoURL())"], "Fixed commit": "67c4ae89e9a34f2145a14d9a516e8a186426086b", "Url": "https://api.github.com/repos/vmware-serengeti/serengeti-ws", "Date": "2014-08-29T02:50:26Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(new java.io.File((((((MinecraftAppData) + (Slash)) + \"versions\") + (Slash)) + (LauncherName))).exists())) { new java.io.File((((((MinecraftAppData) + (Slash)) + \"versions\") + (Slash)) + (LauncherName))).mkdir(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/6579/buggy-version/Launcher.src.fr.minepod.launcher.Downloader.java", "BodyUseAPI": ["java.io.File.mkdir()"], "Fixed commit": "74d9fa6c9d9850228159a5c87a03a6306436db60", "Url": "https://api.github.com/repos/MinePod/Launcher", "Date": "2013-07-29T16:20:05Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.scienjus.authorization.manager.impl.RedisTokenManager.getToken(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (token != null) { redis.delete(formatKey(key)); redis.delete(formatToken(token)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/8770/buggy-version/src.main.java.com.scienjus.authorization.manager.impl.RedisTokenManager.java", "BodyUseAPI": ["org.springframework.data.redis.core.StringRedisTemplate.delete(java.lang.String)", "com.scienjus.authorization.manager.impl.RedisTokenManager.formatToken(java.lang.String)"], "Fixed commit": "cde263139fea703b1e5eb552837053c5bf00b3b5", "Url": "https://api.github.com/repos/ScienJus/spring-authorization-manager", "Date": "2015-10-28T06:52:00Z"},
{"Line": "=>1297", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pHistory) != null) { vHistory = new de.cismet.lagis.gui.main.View(\"Historie\", icoRessort, pHistory); }else { final javax.swing.JPanel p = new javax.swing.JPanel(new java.awt.BorderLayout()); p.add(new javax.swing.JLabel(\"... no History for you ...\"), java.awt.BorderLayout.CENTER); vHistory = new de.cismet.lagis.gui.main.View(\"Historie\", icoRessort, p); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/6802/buggy-version/src.main.java.de.cismet.lagis.gui.main.LagisApp.java", "BodyUseAPI": [], "Fixed commit": "42b4c76ba61105125dd565b4d6697f4d2ea4efbc", "Url": "https://api.github.com/repos/cismet/lagis-client", "Date": "2015-07-17T13:07:43Z"},
{"Line": "=>1252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pHistory) != null) { widgets.add(pHistory); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/6802/buggy-version/src.main.java.de.cismet.lagis.gui.main.LagisApp.java", "BodyUseAPI": [], "Fixed commit": "42b4c76ba61105125dd565b4d6697f4d2ea4efbc", "Url": "https://api.github.com/repos/cismet/lagis-client", "Date": "2015-07-17T13:07:43Z"},
{"Line": "=>1243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isJavaFxAvailable) { pHistory = new de.cismet.lagis.gui.main.HistoryPanel(); de.cismet.lagis.gui.main.LagisApp.configManager.addConfigurable(pHistory); de.cismet.lagis.gui.main.LagisApp.configManager.configure(pHistory); }else { de.cismet.lagis.gui.main.LagisApp.LOG.error(\"Error. No Histroy Component available\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/6802/buggy-version/src.main.java.de.cismet.lagis.gui.main.LagisApp.java", "BodyUseAPI": [], "Fixed commit": "42b4c76ba61105125dd565b4d6697f4d2ea4efbc", "Url": "https://api.github.com/repos/cismet/lagis-client", "Date": "2015-07-17T13:07:43Z"},
{"Line": "=>308", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["MixinUtils.Helper.getParameters()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (parameters != null) { for (net.vtst.ow.eclipse.less.less.MixinParameter parameter : parameters.getParameter()) { if (((parameter.getIdent()) != null) && (!(prototype.parameterNames.contains(parameter.getIdent().getIdent())))) { warning(messages.format(\"illegal_parameter_label\", parameter.getIdent().getIdent()), parameter, LessPackage.eINSTANCE.getMixinParameter_Ident(), 0); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/3716/buggy-version/src.eclipse.net.vtst.ow.eclipse.less.src.net.vtst.ow.eclipse.less.validation.LessJavaValidator.java", "BodyUseAPI": ["net.vtst.ow.eclipse.less.less.MixinParameters.getParameter()"], "Fixed commit": "aa94ab2d3103eb59f887fc58045cf97647d929e7", "Url": "https://api.github.com/repos/vtst/ow", "Date": "2013-03-15T08:22:05Z"},
{"Line": "=>355", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["MixinUtils.Helper.getParameters()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (parameters == null) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/3716/buggy-version/src.eclipse.net.vtst.ow.eclipse.less.src.net.vtst.ow.eclipse.less.validation.LessJavaValidator.java", "BodyUseAPI": [], "Fixed commit": "aa94ab2d3103eb59f887fc58045cf97647d929e7", "Url": "https://api.github.com/repos/vtst/ow", "Date": "2013-03-15T08:22:05Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((args.length) == 0) { if (staffChatters.contains(sender.getName())) { sender.sendMessage(((org.bukkit.ChatColor.GOLD) + \"You are no longer talking in staff chat.\")); staffChatters.remove(sender.getName()); }else { sender.sendMessage(((org.bukkit.ChatColor.GOLD) + \"You are now chatting in staff! Use /staffchat to swap back.\")); staffChatters.add(sender.getName()); } }else { java.lang.StringBuilder message = new java.lang.StringBuilder(); java.lang.String playerName = (sender instanceof org.bukkit.entity.Player) ? ((org.bukkit.entity.Player) (sender)).getDisplayName() : sender.getName(); for (int i = 0; i < (args.length); i++) { message.append(args[i]); if (i != ((args.length) - 1)) { message.append(\" \"); } } for (org.bukkit.entity.Player p : getServer().getOnlinePlayers()) { if (p.hasPermission(\"transmission.staffchat\")) { p.sendMessage(java.lang.String.format(((((((((org.bukkit.ChatColor.DARK_AQUA) + \"[S]<\") + (org.bukkit.ChatColor.WHITE)) + \"%1$s\") + (org.bukkit.ChatColor.DARK_AQUA)) + \"> \") + (org.bukkit.ChatColor.RESET)) + \"%2$s\"), playerName, message)); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/2554/buggy-version/src.at.junction.transmission.Transmission.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "be399e216504f2d4014502ea222fe8a64e1f6b7d", "Url": "https://api.github.com/repos/JunctionAt/Transmission", "Date": "2013-12-24T22:45:12Z"},
{"Line": "=>363", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((runState) == null) { return java.util.Collections.emptyList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/4392/buggy-version/src.main.java.org.opentripplanner.routing.algorithm.AStar.java", "BodyUseAPI": [], "Fixed commit": "7c8be8c74bba66a5dfafecf8f2fd8784801bc37d", "Url": "https://api.github.com/repos/geohawk/OpenTripPlanner", "Date": "2017-08-29T12:20:25Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.block.Block.getType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((type == (org.bukkit.Material.WOODEN_DOOR)) || (type == (org.bukkit.Material.IRON_DOOR_BLOCK))) { if ((door.getRelative(BlockFace.DOWN).getType()) == type) door = door.getRelative(BlockFace.DOWN); if (me.fetusdip.LapisPortals.EnderPortals.getFileHandler().isPortalDoor(door)) block = door.getRelative(BlockFace.DOWN); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/1415/buggy-version/src.me.fetusdip.LapisPortals.PlayerListener.java", "BodyUseAPI": [], "Fixed commit": "d25da1d4a8eb6c09d6611bb2c9fb87a9afe58683", "Url": "https://api.github.com/repos/avere001/LapisPortals", "Date": "2014-07-25T20:37:59Z"},
{"Line": "=>285", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.sqlite.SQLiteDatabase.rawQuery(java.lang.String,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((c.getInt(c.getColumnIndex(Controllers.LocalStorageAdapter.KEY_STATUS))) != 0) { o.setIsActive(true); }else { o.setIsActive(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/178/buggy-version/app.src.main.java.Controllers.LocalStorageAdapter.java", "BodyUseAPI": [], "Fixed commit": "ad5b3d2d73ad421145070bdaef43957ea7dd164e", "Url": "https://api.github.com/repos/florist-gump/Reminders", "Date": "2015-11-13T14:56:30Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!foundSubscription) { org.bitcoin.protocols.subscriptions.Protos.Subscription newSubscription = Protos.Subscription.newBuilder().setMerchantId(retrievedRecurringPaymentDetails.getMerchantId()).setSubscriptionId(retrievedRecurringPaymentDetails.getSubscriptionId()).setSubscriptionContracts(paymentDetailsContract).build(); subscriptions.add(newSubscription); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/5825/buggy-version/core.src.main.java.com.google.bitcoin.store.RecurringPaymentProtobufSerializer.java", "BodyUseAPI": [], "Fixed commit": "7d86819af4fed85f8613c3c851a5a1e0967dc02f", "Url": "https://api.github.com/repos/killbill/bitcoinj", "Date": "2014-02-14T20:42:42Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.net.Uri.parse(url).getHost()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((host != null) && (host.equals(\"enable\"))) { fireMRAIDEnabled(); }else if ((host != null) && (host.equals(\"open\"))) { implementation.dispatch_mraid_call(url, userInteracted); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/4938/buggy-version/sdk.src.com.appnexus.opensdk.AdWebView.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "0be82b521895b0bf7786a2066c8bda4aa8cf7fba", "Url": "https://api.github.com/repos/appnexus/mobile-sdk-android", "Date": "2016-06-08T21:35:02Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((webView) != null) { customClose = webView.isMRAIDUseCustomClose(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/4938/buggy-version/sdk.src.com.appnexus.opensdk.InterstitialAdActivity.java", "BodyUseAPI": [], "Fixed commit": "0be82b521895b0bf7786a2066c8bda4aa8cf7fba", "Url": "https://api.github.com/repos/appnexus/mobile-sdk-android", "Date": "2016-06-08T21:35:02Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.LOLLIPOP)) { getWindow().addFlags(WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS); getWindow().setStatusBarColor(getResources().getColor(R.color.colorPrimaryDark)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/9166/buggy-version/app.src.main.java.com.codepath.packagetwitter.CourierActivity.java", "BodyUseAPI": [], "Fixed commit": "fcd15e6337925ff77c5057e21929f93f798ebb1c", "Url": "https://api.github.com/repos/Pratyusha-Duvvuri/Package_Tracker", "Date": "2017-08-07T07:48:33Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.LOLLIPOP)) { getWindow().addFlags(WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS); getWindow().setStatusBarColor(getResources().getColor(R.color.colorPrimaryDark)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/9166/buggy-version/app.src.main.java.com.codepath.packagetwitter.PackageCreationPart2Activity.java", "BodyUseAPI": [], "Fixed commit": "fcd15e6337925ff77c5057e21929f93f798ebb1c", "Url": "https://api.github.com/repos/Pratyusha-Duvvuri/Package_Tracker", "Date": "2017-08-07T07:48:33Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Gdx.app.getType()) == (com.badlogic.gdx.Application.ApplicationType.Android)) { Gdx.input.setInputProcessor(stage); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/3957/buggy-version/core.Main.com.vertextrigger.screen.AbstractGameScreen.java", "BodyUseAPI": [], "Fixed commit": "b3d97bcf4f3f56494e0111719b7d6327be537342", "Url": "https://api.github.com/repos/Tanyel-Bariser/Vertex-Trigger", "Date": "2016-01-31T15:30:49Z"},
{"Line": "=>909", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.getParentFile()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((!(parentFile.exists())) && (!(parentFile.mkdirs()))) { throw new com.gitblit.GitBlitException(java.text.MessageFormat.format(\"Failed to create folder ''{0}''\", parentFile.getAbsolutePath())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/3141/buggy-version/src.com.gitblit.GitBlit.java", "BodyUseAPI": ["java.io.File.getAbsolutePath()", "java.text.MessageFormat.format(java.lang.String,java.lang.String)"], "Fixed commit": "c1a4cc7028954084019a7863085fa5d01aeafa9a", "Url": "https://api.github.com/repos/gitblit/gitblit", "Date": "2011-12-27T22:31:03Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles(java.io.FilenameFilter)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (flist == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/7544/buggy-version/src.javi.FileDescriptor.java", "BodyUseAPI": [], "Fixed commit": "b3ca6412cd5816cad5b86f89c5dd26b2b36c89a4", "Url": "https://api.github.com/repos/jhjensen/javi", "Date": "2016-01-02T21:21:36Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((result.count) == 0) { throw new java.lang.IllegalArgumentException(\"Sequence contains no elements\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/5761/buggy-version/rxjava-core.src.main.java.rx.operators.OperationAverage.java", "BodyUseAPI": [], "Fixed commit": "1e37030f62f1be14e8d7d42fd0cfa28d98d8815b", "Url": "https://api.github.com/repos/Netflix/RxJava", "Date": "2013-11-08T05:42:31Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((result.count) == 0) { throw new java.lang.IllegalArgumentException(\"Sequence contains no elements\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/5761/buggy-version/rxjava-core.src.main.java.rx.operators.OperationAverage.java", "BodyUseAPI": [], "Fixed commit": "1e37030f62f1be14e8d7d42fd0cfa28d98d8815b", "Url": "https://api.github.com/repos/Netflix/RxJava", "Date": "2013-11-08T05:42:31Z"},
{"Line": "=>358", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((((((textures1[0]) == null) || ((textures1[1]) == null)) || ((textures1[2]) == null)) || ((textures1[3]) == null)) || ((textures1[4]) == null)) || ((textures1[5]) == null)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/4914/buggy-version/src.main.java.twintro.minecraft.modbuilder.editor.interfaces.BlockModelChooseWindow.java", "BodyUseAPI": [], "Fixed commit": "289904dd94c9cfe5081286ebfa8854d950c6371a", "Url": "https://api.github.com/repos/arjanadriaanse/mc-modbuilder", "Date": "2016-01-10T20:29:13Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (skipUserTask) { task.complete(null, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/4395/buggy-version/modules.activiti-engine.src.main.java.org.activiti.engine.impl.bpmn.behavior.UserTaskActivityBehavior.java", "BodyUseAPI": [], "Fixed commit": "15ab72410f151970ef264b0275232b19d6739a2e", "Url": "https://api.github.com/repos/studerw/Activiti", "Date": "2016-09-13T15:29:04Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) != null) { android.content.Intent intent = new android.content.Intent(getActivity(), be.lode.jukebox.front.android.choosejukebox.ChooseJukeboxActivity.class); getActivity().startActivity(intent); getActivity().finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/5520/buggy-version/app.src.main.java.be.lode.jukebox.front.android.login.LoginFragment.java", "BodyUseAPI": [], "Fixed commit": "0e4f3f0efb6856e0d9292605d931b289860ce924", "Url": "https://api.github.com/repos/Sorbjar/jukebox-front-android", "Date": "2015-05-14T16:16:33Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tauxHorraire.getText().toString().isEmpty()) || ((tauxHorraire.getText().toString()) == null)) { tHorraire = 0.0F; }else { tHorraire = java.lang.Float.valueOf(tauxHorraire.getText().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/8441/buggy-version/app.src.main.java.inm5001.rapidoservices.interfaceGraphique.RechercheActivity.java", "BodyUseAPI": ["android.widget.EditText.getText()", "tauxHorraire.getText().toString()", "java.lang.Float.valueOf(tauxHorraire.getText().toString())"], "Fixed commit": "f4d8724625e11b164ec3b16a7cc61a6d353c67ad", "Url": "https://api.github.com/repos/FrancisBernier/RapidoServices", "Date": "2016-11-14T23:42:07Z"},
{"Line": "=>1754", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (selectedKey_Keydata.getText().contains(\":\")) { java.lang.String part1 = selectedKey_Keydata.getText().substring(((selectedKey_Keydata.getText().indexOf(\"Bit - \")) + 6)); keyAlgorithm = part1.substring(0, selectedKey_Keydata.getText().indexOf(' ')).trim(); }else { keyAlgorithm = selectedKey_Keydata.getText().substring(((selectedKey_Keydata.getText().lastIndexOf('-')) + 1)).trim(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/8216/buggy-version/org.jcryptool.visual.extendedrsa.src.org.jcryptool.visual.extendedrsa.Identity.java", "BodyUseAPI": ["java.lang.String.trim()", "selectedKey_Keydata.getText().indexOf(java.lang.String)", "selectedKey_Keydata.getText().substring(((selectedKey_Keydata.getText().lastIndexOf('-')) + 1))", "org.eclipse.swt.widgets.Combo.getText()", "org.eclipse.swt.widgets.Combo.getText()", "org.eclipse.swt.widgets.Combo.getText()", "selectedKey_Keydata.getText().indexOf(char)", "org.eclipse.swt.widgets.Combo.getText()", "org.eclipse.swt.widgets.Combo.getText()", "selectedKey_Keydata.getText().lastIndexOf(char)", "java.lang.String.substring(int,selectedKey_Keydata.getText().indexOf(' '))", "selectedKey_Keydata.getText().substring(((selectedKey_Keydata.getText().indexOf(\"Bit - \")) + 6))", "selectedKey_Keydata.getText().substring(((selectedKey_Keydata.getText().lastIndexOf('-')) + 1)).trim()"], "Fixed commit": "fb31b924a5db8a165e60d3f3e366020f271fc75e", "Url": "https://api.github.com/repos/cschnepf2/JCT_ExtRSA", "Date": "2013-01-23T10:23:46Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (fis != null) { fis.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/5933/buggy-version/src.main.java.tk.bnbm.clockdrive4j.model.Road.java", "BodyUseAPI": ["java.io.FileInputStream.close()"], "Fixed commit": "4ef3254cfb34d853445cc30f98e19cf79dbb9589", "Url": "https://api.github.com/repos/kazuhito-m/clockdrive4j", "Date": "2013-02-07T08:50:24Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/1226/buggy-version/src.gui.org.deidentifier.arx.gui.view.impl.explore.ViewSolutionSpace.java", "BodyUseAPI": [], "Fixed commit": "71df772b90f270fbe2c16587779dbe4099c72e38", "Url": "https://api.github.com/repos/arx-deidentifier/arx", "Date": "2015-02-06T12:20:15Z"},
{"Line": "=>1080", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, org.github.sipuada.UserAgent>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (userAgent == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/532/buggy-version/src.org.github.sipuada.Sipuada.java", "BodyUseAPI": [], "Fixed commit": "a96b344828ebf8ecaa0653fe1a02daace96f0607", "Url": "https://api.github.com/repos/Sipuada/sipuada", "Date": "2016-03-04T06:22:42Z"},
{"Line": "=>1071", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, org.github.sipuada.UserAgent>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (userAgent == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/532/buggy-version/src.org.github.sipuada.Sipuada.java", "BodyUseAPI": [], "Fixed commit": "a96b344828ebf8ecaa0653fe1a02daace96f0607", "Url": "https://api.github.com/repos/Sipuada/sipuada", "Date": "2016-03-04T06:22:42Z"},
{"Line": "=>1098", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, org.github.sipuada.UserAgent>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (userAgent == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/532/buggy-version/src.org.github.sipuada.Sipuada.java", "BodyUseAPI": [], "Fixed commit": "a96b344828ebf8ecaa0653fe1a02daace96f0607", "Url": "https://api.github.com/repos/Sipuada/sipuada", "Date": "2016-03-04T06:22:42Z"},
{"Line": "=>1089", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, org.github.sipuada.UserAgent>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (userAgent == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/532/buggy-version/src.org.github.sipuada.Sipuada.java", "BodyUseAPI": [], "Fixed commit": "a96b344828ebf8ecaa0653fe1a02daace96f0607", "Url": "https://api.github.com/repos/Sipuada/sipuada", "Date": "2016-03-04T06:22:42Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getPermissionNode()) == null) || (getPermissionNode().isEmpty())) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/6104/buggy-version/src.main.java.com.forgeessentials.core.commands.ForgeEssentialsCommandBase.java", "BodyUseAPI": [], "Fixed commit": "95c4f9fd1ad1782909fbc6ea16a6e0aace9e13c4", "Url": "https://api.github.com/repos/ForgeEssentials/ForgeEssentialsMain", "Date": "2014-11-20T04:07:18Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(type.contains(TickType.RENDER))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/4253/buggy-version/src.powercrystals.minefactoryreloaded.MineFactoryReloadedClient.java", "BodyUseAPI": [], "Fixed commit": "3bfd95e1d1fc32352450a7bc2a66a64894f80e64", "Url": "https://api.github.com/repos/skyboy/MineFactoryReloaded", "Date": "2014-03-22T13:50:19Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((notificationLL) != null) { for (int i = 0; i < (notificationLL.size()); i++) { if (!(notificationLL.get(i).readReceipt())) { counter = counter++; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/3786/buggy-version/wear.src.main.java.com.project.level4.notificationhistory.WearMainActivity.java", "BodyUseAPI": [], "Fixed commit": "bb45d3e1f1ed3930dc3d5747574b8794a95f5723", "Url": "https://api.github.com/repos/RobertCMcAlpine/NotificationCenter", "Date": "2017-10-25T14:26:26Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["intervals.Unit.getRightOp()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (rhs instanceof intervals.IntConstant) { vi = new intervals.VarInterval(variableName, new intervals.Interval(((intervals.IntConstant) (rhs)).value, ((intervals.IntConstant) (rhs)).value)); }else if ((rhs instanceof intervals.Local) || (rhs instanceof intervals.ArrayRef)) { intervals.VarInterval rhsVi = flowSetContain(in, rhs.toString()); if (rhsVi != null) { vi = new intervals.VarInterval(variableName, rhsVi.getInterval()); }else { vi = new intervals.VarInterval(variableName, new intervals.Interval(Interval.NEGATIVE_INF, Interval.POSITIVE_INF)); } }else if (rhs instanceof intervals.InvokeExpr) { vi = new intervals.VarInterval(variableName, new intervals.Interval(Interval.NEGATIVE_INF, Interval.POSITIVE_INF)); }else if (rhs instanceof intervals.BinopExpr) { if (rhs instanceof intervals.AddExpr) { intervals.Value op1 = ((intervals.AddExpr) (rhs)).getOp1(); intervals.Value op2 = ((intervals.AddExpr) (rhs)).getOp2(); vi = addExprInterval(variableName, op1, op2, in); }else if (rhs instanceof intervals.SubExpr) { intervals.Value op1 = ((intervals.SubExpr) (rhs)).getOp1(); intervals.Value op2 = ((intervals.SubExpr) (rhs)).getOp2(); vi = subExprInterval(variableName, op1, op2, in); }else if (rhs instanceof intervals.MulExpr) { intervals.Value op1 = ((intervals.MulExpr) (rhs)).getOp1(); intervals.Value op2 = ((intervals.MulExpr) (rhs)).getOp2(); vi = mulExprInterval(variableName, op1, op2, in); }else if (rhs instanceof intervals.DivExpr) { intervals.Value op1 = ((intervals.DivExpr) (rhs)).getOp1(); intervals.Value op2 = ((intervals.DivExpr) (rhs)).getOp2(); vi = divExprInterval(variableName, op1, op2, in); } }else if (rhs instanceof intervals.NegExpr) { intervals.Value op = ((intervals.NegExpr) (rhs)).getOp(); vi = negExprInterval(variableName, op, in); }else { vi = new intervals.VarInterval(variableName, new intervals.Interval(Interval.NEGATIVE_INF, Interval.POSITIVE_INF)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/4294/buggy-version/SwAnalysisProj.src.intervals.LocalsInterval.java", "BodyUseAPI": ["intervals.Value.toString()", "intervals.LocalIntervalsAnalysis.flowSetContain(intervals.FlowSet,rhs.toString())"], "Fixed commit": "bae377c20947b748daed8b07453fba517c124af9", "Url": "https://api.github.com/repos/arizigler/arraychecker", "Date": "2013-03-10T21:42:12Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.currentBlock) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/5039/buggy-version/base.src.main.java.edu.umass.cs.ciir.waltz.dociter.movement.AChildrenMover.java", "BodyUseAPI": [], "Fixed commit": "ad6633af9a228b4b52d2e50309a7796e3c99d516", "Url": "https://api.github.com/repos/jjfiv/waltz", "Date": "2015-09-23T18:34:15Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.dmarcini.bt.btlehomelight.dialogs.AreYouSureDialogFragment.getArguments()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (param != null) { this.msg = param.getString(de.dmarcini.bt.btlehomelight.dialogs.AreYouSureDialogFragment.HEADLINE, \"sure?\"); }else { this.msg = \"sure?\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/51/buggy-version/ANDROID.btLeHomeLightApp.src.main.java.de.dmarcini.bt.btlehomelight.dialogs.AreYouSureDialogFragment.java", "BodyUseAPI": ["android.os.Bundle.getString(java.lang.String,java.lang.String)"], "Fixed commit": "9a167a1236818b5bbf1e6c963d1441550e252445", "Url": "https://api.github.com/repos/dmarc0001/BluethoothLE-homeLight", "Date": "2016-03-14T11:58:34Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (id == null) throw new java.lang.IllegalArgumentException(\"Cannot delete a null id!\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/1977/buggy-version/guice.hibernate.src.main.java.com.peterphi.std.guice.hibernate.dao.HibernateDao.java", "BodyUseAPI": [], "Fixed commit": "ab54175c40e4056b23a23a64a4325426a9e7cab7", "Url": "https://api.github.com/repos/petergeneric/stdlib", "Date": "2014-05-30T14:02:32Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args.length) == 0) { cdm.printHelp(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/8609/buggy-version/src.main.java.com.datastax.cdm.CassandraDatasetManager.java", "BodyUseAPI": [], "Fixed commit": "e540d8f7afcc3f50ac285a226781843e87b803f0", "Url": "https://api.github.com/repos/riptano/cdm-java", "Date": "2016-07-21T22:06:47Z"},
{"Line": "=>824", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.aMatrix) != null) initialGuessAffine = inverseGuessAffineInv(target); else initialGuessAffine = target;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/6494/buggy-version/src.main.java.jitk.spline.ThinPlateR2LogRSplineKernelTransform.java", "BodyUseAPI": [], "Fixed commit": "1f38baf206980f98360ece196262f9fea7ab928e", "Url": "https://api.github.com/repos/saalfeldlab/jitk-tps", "Date": "2016-04-25T15:42:14Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["br.com.soapboxrace.dao.OwnedCarDao.findByIdPersona(long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((ownedCarList.size()) > 0) { return ownedCarList.get(personaEntity.getCurCarIndex()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/625/buggy-version/src.main.java.br.com.soapboxrace.bo.PersonaBO.java", "BodyUseAPI": ["java.util.List<br.com.soapboxrace.jpa.OwnedCarEntity>.get(personaEntity.getCurCarIndex())"], "Fixed commit": "25267947bb74ce07e576a2ce218b834ff148d534", "Url": "https://api.github.com/repos/berkay2578/soapbox-race", "Date": "2016-05-15T18:12:30Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["br.com.soapboxrace.bo.PersonaBO.defaultcar(long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (ownedCarEntity != null) { return br.com.soapboxrace.jaxb.util.MarshalXML.marshal(ownedCarEntity); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/625/buggy-version/src.main.java.br.com.soapboxrace.engine.Personas.java", "BodyUseAPI": ["br.com.soapboxrace.jaxb.util.MarshalXML.marshal(br.com.soapboxrace.jpa.OwnedCarEntity)"], "Fixed commit": "25267947bb74ce07e576a2ce218b834ff148d534", "Url": "https://api.github.com/repos/berkay2578/soapbox-race", "Date": "2016-05-15T18:12:30Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((name.length()) != 0) { if ((ingredientName.equalsIgnoreCase(name)) || (ingredientName.toLowerCase().startsWith(name.toLowerCase()))) { return ingredient; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/5774/buggy-version/Kitchen.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.startsWith(java.lang.String)", "java.lang.String.toLowerCase()"], "Fixed commit": "a5514a72781fab9acd52835b2f0bfa5f08453784", "Url": "https://api.github.com/repos/zulkarnainshah/Pizza-Ordering", "Date": "2017-04-21T12:04:35Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((com.dafttech.eventmanager.EventFilter) (field.getAnnotation(com.dafttech.eventmanager.EventFilter.class))).name().equals(filterName)) return field;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/1088/buggy-version/src.com.dafttech.eventmanager.EventListenerContainer.java", "BodyUseAPI": [], "Fixed commit": "668d4ff049e4e9885a821b7a91eca1f8232f4033", "Url": "https://api.github.com/repos/LolHens/EventManager", "Date": "2013-09-21T09:34:18Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((com.dafttech.eventmanager.EventFilter) (method.getAnnotation(com.dafttech.eventmanager.EventFilter.class))).name().equals(filterName)) return method;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/1088/buggy-version/src.com.dafttech.eventmanager.EventListenerContainer.java", "BodyUseAPI": [], "Fixed commit": "668d4ff049e4e9885a821b7a91eca1f8232f4033", "Url": "https://api.github.com/repos/LolHens/EventManager", "Date": "2013-09-21T09:34:18Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (forgeExchangeResult != null) { mLogger.debug(\"Forge exchange returned with code {}\", forgeExchangeResult.getCode()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/5593/buggy-version/app.src.main.java.com.bolyartech.forge.skeleton.dagger.basic.app.MyAppUnitManager.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String,forgeExchangeResult.getCode())", "com.bolyartech.forge.base.exchange.forge.ForgeExchangeResult.getCode()"], "Fixed commit": "502c0d586bc50720b1f7b2543bbcc2690c4bbd79", "Url": "https://api.github.com/repos/ogrebgr/forge-android-skeleton-basic", "Date": "2016-10-13T14:48:39Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newCurrAccount == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/400/buggy-version/app.src.main.java.ekylibre.zero.account.AccountAdapter.java", "BodyUseAPI": [], "Fixed commit": "72b9456d5785996d73e33ab9dc12cb124831f62f", "Url": "https://api.github.com/repos/ekylibre/zero-android", "Date": "2016-12-21T16:07:32Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.wso2.emm.agent.services.MessageProcessor.replyPayload) != null) { org.wso2.emm.agent.services.MessageProcessor.replyPayload.add(firmwareOperation); }else { org.wso2.emm.agent.services.MessageProcessor.replyPayload = new java.util.ArrayList(); org.wso2.emm.agent.services.MessageProcessor.replyPayload.add(firmwareOperation); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/8588/buggy-version/modules.mobile-agents.android.client.client.src.main.java.org.wso2.emm.agent.services.MessageProcessor.java", "BodyUseAPI": [], "Fixed commit": "7744e0e27ed6d791a5ffcc14188deaf5473cedfa", "Url": "https://api.github.com/repos/wso2-attic/product-emm", "Date": "2016-06-15T23:15:35Z"},
{"Line": "=>332", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Object.getStatus()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(this.status.equals(status))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/6773/buggy-version/app.src.main.java.net.brainas.android.app.domain.models.Task.java", "BodyUseAPI": [], "Fixed commit": "62d6d1168e84c8e788aa9697c75b254670395531", "Url": "https://api.github.com/repos/i-ushakov/brainas-android", "Date": "2016-06-21T08:44:46Z"},
{"Line": "=>329", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Object.getStatus()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (((status == null) && ((this.status) != null)) || ((status != null) && ((this.status) == null))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/6773/buggy-version/app.src.main.java.net.brainas.android.app.domain.models.Task.java", "BodyUseAPI": [], "Fixed commit": "62d6d1168e84c8e788aa9697c75b254670395531", "Url": "https://api.github.com/repos/i-ushakov/brainas-android", "Date": "2016-06-21T08:44:46Z"},
{"Line": "=>298", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (command instanceof services.command.CombatCommand) { try { processCommand(actor, target, ((services.command.BaseSWGCommand) (command.clone())), actionCounter, commandArgs); } catch (java.lang.CloneNotSupportedException e) { e.printStackTrace(); } }else processCommand(actor, target, command, actionCounter, commandArgs);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/5632/buggy-version/src.services.command.CommandService.java", "BodyUseAPI": ["services.command.CommandService.processCommand(resources.objects.creature.CreatureObject,engine.resources.objects.SWGObject,((services.command.BaseSWGCommand) (command.clone())),int,java.lang.String)", "services.command.CommandService.processCommand(resources.objects.creature.CreatureObject,engine.resources.objects.SWGObject,services.command.BaseSWGCommand,int,java.lang.String)", "services.command.BaseSWGCommand.clone()"], "Fixed commit": "34c4dbafda17fc5c56d273900b690d385291b675", "Url": "https://api.github.com/repos/LordAlfonso/NGECore2", "Date": "2014-04-21T13:50:45Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getArguments().getSerializable(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (chord != null) { org.greenrobot.eventbus.EventBus.getDefault().post(new com.example.webprog26.guitarchords.guitar_chords_engine.events.FillChordWithDataEvent(chord)); mChordsShapesAdapter = new com.example.webprog26.guitarchords.guitar_chords_engine.adapter.ChordsShapesAdapter(chord.getChordShapes(), getActivity()); org.greenrobot.eventbus.EventBus.getDefault().post(new com.example.webprog26.guitarchords.guitar_chords_engine.events.LoadShapesFromDatabaseEvent(chord)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/3566/buggy-version/app.src.main.java.com.example.webprog26.guitarchords.fragments.ChordFragment.java", "BodyUseAPI": ["org.greenrobot.eventbus.EventBus.getDefault().post(com.example.webprog26.guitarchords.guitar_chords_engine.events.LoadShapesFromDatabaseEvent)", "com.example.webprog26.guitarchords.guitar_chords_engine.models.Chord.getChordShapes()", "org.greenrobot.eventbus.EventBus.getDefault().post(com.example.webprog26.guitarchords.guitar_chords_engine.events.FillChordWithDataEvent)"], "Fixed commit": "f3c68de8402e28675845098c6906ea0adc481761", "Url": "https://api.github.com/repos/webprog26/Guitar-Chords", "Date": "2017-05-17T06:54:46Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getEventType()) == (NEW_PARCEL)) { (acceptedParcels)++; }else if ((e.getEventType()) == (ADD_VEHICLE)) { (totalVehicles)++; }else if ((e.getEventType()) == (NEW_VEHICLE)) { final rinde.sim.core.model.pdp.PDPModel.PDPModelEvent ev = ((rinde.sim.core.model.pdp.PDPModel.PDPModelEvent) (e)); lastArrivalTimeAtDepot.put(ev.vehicle, simulator.getCurrentTime()); }else if ((e.getEventType()) == (TIME_OUT)) { simFinish = true; scenarioEndTime = ((rinde.sim.scenario.TimedEvent) (e)).time; }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/3062/buggy-version/problem.src.main.java.rinde.sim.problem.common.StatsTracker.java", "BodyUseAPI": ["rinde.sim.event.Event.getEventType()", "rinde.sim.event.Event.getEventType()", "rinde.sim.event.Event.getEventType()"], "Fixed commit": "6bee10d89abd9da95608a4d9241de64a084ab5e1", "Url": "https://api.github.com/repos/rinde/RinSim", "Date": "2012-12-12T11:16:27Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["item.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (text.equals(\"\")) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/2901/buggy-version/app.src.main.java.com.github.PATHofei_dev.suspensionnotification.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "b97b5b1a650ab9d05654cc789b65a4e6642cbaeb", "Url": "https://api.github.com/repos/PATHofei-dev/SuspendNotification", "Date": "2017-03-26T11:58:27Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (j != (ntokens.length)) isMismatch = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/7659/buggy-version/src.com.elements.Stage.java", "BodyUseAPI": [], "Fixed commit": "9a657365ba1ca94ef36d01e84ba153f418b7369d", "Url": "https://api.github.com/repos/nromblon/CSC617M_Activity_Current", "Date": "2017-10-18T12:20:33Z"},
{"Line": "=>1578", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (targetOption != (beast.app.treeannotator.TreeAnnotator.Target.USER_TARGET_TREE)) targetTree.initAndValidate();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/2457/buggy-version/src.beast.app.treeannotator.TreeAnnotator.java", "BodyUseAPI": [], "Fixed commit": "9a5c80e4ff6d45af908b324c4f7392a01b6dea47", "Url": "https://api.github.com/repos/tgvaughan/beast2", "Date": "2016-10-13T01:02:16Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((mProgressBar.getMax()) - (rotateTime)) >= 5900) { mProgressBar.setProgress(mProgressBar.getMax()); }else { mProgressBar.setProgress(((mProgressBar.getMax()) - (rotateTime))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/2533/buggy-version/app.src.main.java.com.example.internmacbook.duckclock.DuckFragment.java", "BodyUseAPI": ["android.widget.ProgressBar.setProgress(((mProgressBar.getMax()) - (rotateTime)))", "android.widget.ProgressBar.getMax()", "android.widget.ProgressBar.setProgress(mProgressBar.getMax())", "android.widget.ProgressBar.getMax()"], "Fixed commit": "561d501139590cfa0f33494c0a03d9f1d809d114", "Url": "https://api.github.com/repos/cjomalley12/Duck-Clock", "Date": "2016-08-09T14:17:36Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((listener) != null) listener.triggersRefresh();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/1383/buggy-version/gs-concurrency.src.main.java.org.genericsystem.concurrency.Cache.java", "BodyUseAPI": [], "Fixed commit": "de653966e9ae1462bca005c89709d245ca9816bf", "Url": "https://api.github.com/repos/genericsystem/genericsystem2014", "Date": "2014-12-02T10:39:05Z"},
{"Line": "=>531", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((st.countTokens()) < 4) { throw new java.lang.IllegalArgumentException(\"Attempting to create a Zone from an incomplete tokenizer\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/1395/buggy-version/src.main.java.org.joda.time.tz.ZoneInfoCompiler.java", "BodyUseAPI": [], "Fixed commit": "76fa43737656d859f0943f5326cf2b8565c4b032", "Url": "https://api.github.com/repos/Guardiola31337/joda-time", "Date": "2015-11-21T09:47:03Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.CMPUT301W15T02.teamtoapp.MainManager.isConnectedToServer()) { com.CMPUT301W15T02.teamtoapp.Model.Cache.getInstance().loadRemovals(); com.CMPUT301W15T02.teamtoapp.Model.Cache.getInstance().loadUpdates(); for (com.CMPUT301W15T02.teamtoapp.Model.Claim claim : com.CMPUT301W15T02.teamtoapp.Model.Cache.getInstance().getUpdates()) { com.CMPUT301W15T02.teamtoapp.ElasticSearchManager.updateClaim(claim); } for (com.CMPUT301W15T02.teamtoapp.Model.Claim claim : com.CMPUT301W15T02.teamtoapp.Model.Cache.getInstance().getRemovals()) { com.CMPUT301W15T02.teamtoapp.ElasticSearchManager.deleteClaim(claim.getClaimId()); } com.CMPUT301W15T02.teamtoapp.Model.Cache.getInstance().clearCache(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/6824/buggy-version/TeamToApp.src.com.CMPUT301W15T02.teamtoapp.NetworkReceiver.java", "BodyUseAPI": [], "Fixed commit": "4fe195414300ba6b6790322c89ade6ba0f1d20d5", "Url": "https://api.github.com/repos/CMPUT301W15T02/TeamTo", "Date": "2015-04-04T00:26:34Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (0 == resultCode) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/3503/buggy-version/src.de.najidev.mensaupb.activities.SettingsActivity.java", "BodyUseAPI": [], "Fixed commit": "1fdd7d70eb5437ca100e4c203514817b3a696df4", "Url": "https://api.github.com/repos/rejinka/MensaUPB", "Date": "2012-05-02T17:01:08Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<java.lang.Object>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((str.length) < 6) { view.setViewName(\"/backend/express/express_upload\"); return view; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/112/buggy-version/src.main.java.selling.sunshine.controller.ExpressController.java", "BodyUseAPI": [], "Fixed commit": "95c8cbf29746ff919333c9639fa4fba7d6986ad5", "Url": "https://api.github.com/repos/sunshinezxf/Selling", "Date": "2016-06-24T01:44:08Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (item instanceof org.xlbean.XlBean) { if (!(((org.xlbean.XlBean) (item)).isValuesEmpty())) { return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/192/buggy-version/src.main.java.org.xlbean.XlBean.java", "BodyUseAPI": [], "Fixed commit": "8afd179cde49063a0b1931b48b071e1f537a4b41", "Url": "https://api.github.com/repos/aji3/xlbean", "Date": "2017-11-12T10:07:25Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((resp.getStatus()) == (com.jinjunhang.framework.service.ServerResponse.NO_PERMISSION)) { showVipBuyMessage(getActivity(), resp.getErrorMessage()); }else { com.jinjunhang.framework.lib.Utils.showMessage(getActivity(), resp.getErrorMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/6575/buggy-version/app.src.main.java.com.jinjunhang.onlineclass.ui.fragment.album.AlbumListFragment.java", "BodyUseAPI": ["com.jinjunhang.framework.service.PagedServerResponse.getErrorMessage()", "com.jinjunhang.framework.service.PagedServerResponse.getErrorMessage()", "com.jinjunhang.onlineclass.ui.fragment.album.AlbumListFragment.showVipBuyMessage(getActivity(),resp.getErrorMessage())", "com.jinjunhang.framework.lib.Utils.showMessage(getActivity(),resp.getErrorMessage())"], "Fixed commit": "b945215a3dc8a2c771983b998fafdadac83e450d", "Url": "https://api.github.com/repos/jjhlzn/OnlineClassAndroid", "Date": "2016-07-19T09:02:01Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((newlink = linkSearch(nextsp.getName(), torswitch.getName())) == null) { newlink = new com.vmturbo.NS.Link(nextsp, torswitch, capacity, 0.0, Link.LinkType.TORTOSPINE); linkList.add(newlink); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/4841/buggy-version/src.com.vmturbo.NS.TopologySetup.java", "BodyUseAPI": [], "Fixed commit": "91c3416aaa81ac947000efeec2f70ce6066faefe", "Url": "https://api.github.com/repos/kunalmahajanvmturbo/javanetworksimulator", "Date": "2015-09-18T04:35:02Z"},
{"Line": "=>1769", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sender) != (call)) { call.tell(new org.mobicents.servlet.restcomm.telephony.Hangup(), self()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/7642/buggy-version/restcomm.restcomm.interpreter.src.main.java.org.mobicents.servlet.restcomm.interpreter.VoiceInterpreter.java", "BodyUseAPI": [], "Fixed commit": "0e4d904363aa3773398659e2fa664871e6c03e88", "Url": "https://api.github.com/repos/RestComm/Restcomm-Connect", "Date": "2015-03-31T11:34:17Z"},
{"Line": "=>585", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.mobicents.servlet.restcomm.interpreter.VoiceInterpreter.state()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (state != (finishDialing)) fsm.transition(message, finishDialing);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/7642/buggy-version/restcomm.restcomm.interpreter.src.main.java.org.mobicents.servlet.restcomm.interpreter.VoiceInterpreter.java", "BodyUseAPI": [], "Fixed commit": "0e4d904363aa3773398659e2fa664871e6c03e88", "Url": "https://api.github.com/repos/RestComm/Restcomm-Connect", "Date": "2015-03-31T11:34:17Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.lang.String, java.lang.Object>.getKey()", "java.util.Map.Entry<java.lang.String, java.lang.Object>.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((MessageHeaders.ID.equals(messageHeaderName)) && (messageHeaderValue != null)) { messageAttributes.put(messageHeaderName, getStringMessageAttribute(messageHeaderValue.toString())); }else if (messageHeaderValue instanceof java.lang.String) { messageAttributes.put(messageHeaderName, getStringMessageAttribute(((java.lang.String) (messageHeaderValue)))); }else if (messageHeaderValue instanceof java.lang.Number) { messageAttributes.put(messageHeaderName, getNumberMessageAttribute(messageHeaderValue)); }else if (messageHeaderValue instanceof java.nio.ByteBuffer) { messageAttributes.put(messageHeaderName, getBinaryMessageAttribute(((java.nio.ByteBuffer) (messageHeaderValue)))); }else { this.logger.warn(java.lang.String.format((\"Message header with name '%s' and type '%s' cannot be sent as\" + \" message attribute because it is not supported by SNS.\"), messageHeaderName, (messageHeaderValue != null ? messageHeaderValue.getClass().getName() : \"\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/4689/buggy-version/spring-cloud-aws-messaging.src.main.java.org.springframework.cloud.aws.messaging.core.TopicMessageChannel.java", "BodyUseAPI": ["java.lang.Class<? extends java.lang.Object>.getName()", "java.util.HashMap<java.lang.String, com.amazonaws.services.sns.model.MessageAttributeValue>.put(java.lang.String,com.amazonaws.services.sns.model.MessageAttributeValue)", "java.util.HashMap<java.lang.String, com.amazonaws.services.sns.model.MessageAttributeValue>.put(java.lang.String,com.amazonaws.services.sns.model.MessageAttributeValue)", "this.logger.warn(java.lang.String)", "java.lang.String.format(java.lang.String,java.lang.String,java.lang.Object)", "org.springframework.cloud.aws.messaging.core.TopicMessageChannel.getStringMessageAttribute(java.lang.String)", "java.util.HashMap<java.lang.String, com.amazonaws.services.sns.model.MessageAttributeValue>.put(java.lang.String,com.amazonaws.services.sns.model.MessageAttributeValue)", "java.util.HashMap<java.lang.String, com.amazonaws.services.sns.model.MessageAttributeValue>.put(java.lang.String,com.amazonaws.services.sns.model.MessageAttributeValue)", "java.lang.Object.getClass()", "org.springframework.cloud.aws.messaging.core.TopicMessageChannel.getNumberMessageAttribute(java.lang.Object)", "java.lang.Object.toString()"], "Fixed commit": "bf837878e439cdc274fbf69c774a18b85312e9c8", "Url": "https://api.github.com/repos/gregturn/spring-cloud-aws", "Date": "2015-10-13T21:17:30Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.pine.model.TableType.valueOf(request.getParameter(\"tabletype\").toUpperCase())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (type == (org.pine.model.TableType.ENUMERATION)) { java.util.List<java.lang.String> keyName = new java.util.ArrayList<java.lang.String>(); keyName.add(name); org.pine.dao.Dao.insertKeys(tableId, keyName); keys = org.pine.dao.Dao.getKeys(tableId); }else { keys = org.pine.dao.Dao.insertKeysFromOneTableToAnother(copyTableId, tableId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/1692/buggy-version/src.org.pine.servlets.app.create.AddTable.java", "BodyUseAPI": [], "Fixed commit": "b7db7c7f5d3aded1144888fed97cdcdbbb9a78a5", "Url": "https://api.github.com/repos/barik87/pine", "Date": "2013-07-03T12:18:56Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (id == (-1)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/1939/buggy-version/src.cn.net.yto.ui.menu.SignListItemClickListener.java", "BodyUseAPI": [], "Fixed commit": "fc9de775da27e42f2b1e1acd5451be958b4cbaf1", "Url": "https://api.github.com/repos/kit-team/xuebao", "Date": "2013-01-08T10:55:59Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.widget.ImageView.getWidth()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (viewSize == 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/3025/buggy-version/OpenKeychain.src.main.java.org.sufficientlysecure.keychain.ui.transfer.view.TransferFragment.java", "BodyUseAPI": [], "Fixed commit": "8ae6c849f8806f210409ee8917cc5b326de6afa3", "Url": "https://api.github.com/repos/open-keychain/open-keychain", "Date": "2017-06-13T09:00:47Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentTask) == null) { t.setText(\"Add some items!\"); }else { t.setText(currentTask.getText()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/3864/buggy-version/src.com.breatheeasy.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "da48289eb60ca62c3678f4058c44bfff057a7919", "Url": "https://api.github.com/repos/mpgarate/Breathe-Android", "Date": "2014-05-14T13:20:04Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (t == null) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/3864/buggy-version/src.com.breatheeasy.Task.java", "BodyUseAPI": [], "Fixed commit": "da48289eb60ca62c3678f4058c44bfff057a7919", "Url": "https://api.github.com/repos/mpgarate/Breathe-Android", "Date": "2014-05-14T13:20:04Z"},
{"Line": "=>467", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (posts.get(((java.lang.Integer.valueOf(params[2])) - 1)).content.startsWith(\"%%%%%\")) { content = posts.get(((java.lang.Integer.valueOf(params[2])) - 1)).content.substring(\"%%%%%\".length()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/1768/buggy-version/app.src.main.java.org.qinshuihepan.bbs.ui.PostContentActivity.java", "BodyUseAPI": ["java.lang.Integer.valueOf(java.lang.String)", "posts.get(((java.lang.Integer.valueOf(params[2])) - 1)).content.substring(int)", "java.util.ArrayList<org.qinshuihepan.bbs.model.BasePost>.get(int)"], "Fixed commit": "7defb1569c308c727b7935046aa283ca45ebffab", "Url": "https://api.github.com/repos/fenjuly/Qshp", "Date": "2014-10-01T09:41:24Z"},
{"Line": "=>655", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((parent._chdinf.first) != null) parent._chdinf.last = this._prev; else parent._chdinf.last = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/4105/buggy-version/zk.src.org.zkoss.zk.ui.HtmlShadowElement.java", "BodyUseAPI": [], "Fixed commit": "049dd4d2057796a442f58eecd0b0cc66969b07ff", "Url": "https://api.github.com/repos/zkoss/zk", "Date": "2015-04-17T01:40:35Z"},
{"Line": "=>296", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.io.FileUtils.readLines(java.io.File,Charsets.UTF_8)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (lines.get(0).startsWith(\" Multiplier Set:\")) { lines.remove(0); index = (lines.indexOf(((\" Multiplier Create: '\" + (core.getMessages(\"es\").getString(\"Help.Multiplier Create\"))) + \"'\"))) + 1; lines.add(index, \" Multiplier Set: '%prefix% &cPor favor usa &f/coins multiplier set <cantidad> <activador> <minutos> (server)'\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/3943/buggy-version/src.net.nifheim.beelzebu.coins.core.utils.FileManager.java", "BodyUseAPI": ["java.util.List<java.lang.String>.remove(int)", "java.util.List<java.lang.String>.add(int,java.lang.String)", "java.util.List<java.lang.String>.indexOf(((\"  Multiplier Create: '\" + (core.getMessages(\"es\").getString(\"Help.Multiplier Create\"))) + \"'\"))"], "Fixed commit": "33d3b1e0e7c7332da252628bfbe274f2f4f90176", "Url": "https://api.github.com/repos/Beelzebu/Coins", "Date": "2017-11-02T23:10:27Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lastAction) == (Calculator.OPERATION_ACTION)) { op[1] = 0; }else { op[whereResult] = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/623/buggy-version/src.Calculator.java", "BodyUseAPI": [], "Fixed commit": "82961e3bc7a05941a95a76d58b377a7050bb16c1", "Url": "https://api.github.com/repos/gorz/Windows7Calculator", "Date": "2014-02-27T18:09:00Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((history.getStatus()) > (-1)) { history.setStatusValue(ExecutionInfo.ExecutionStatus.getEnum(history.getStatus()).getMemo()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/7104/buggy-version/elastic-jobx-console.src.main.java.com.dangdang.ddframe.job.console.service.impl.JobTriggerHistoryServiceImpl.java", "BodyUseAPI": ["ExecutionInfo.ExecutionStatus.getEnum(history.getStatus()).getMemo()", "com.dangdang.ddframe.job.console.domain.JobTriggerHistory.setStatusValue(ExecutionInfo.ExecutionStatus.getEnum(history.getStatus()).getMemo())", "ExecutionInfo.ExecutionStatus.getEnum(history.getStatus())", "com.dangdang.ddframe.job.console.domain.JobTriggerHistory.getStatus()"], "Fixed commit": "5677a12e63c224e10e98c044b214c100941cd5df", "Url": "https://api.github.com/repos/artoderk/elastic-jobx", "Date": "2016-09-22T09:52:14Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (foodEntry.has(\"backendId\")) { try { values.put(\"backendId\", foodEntry.getString(\"backendId\")); } catch (org.json.JSONException e) { e.printStackTrace(); values.put(\"backendId\", \"\"); } }else { try { values.put(\"backendId\", foodEntry.getString(\"id\")); } catch (org.json.JSONException e) { e.printStackTrace(); values.put(\"backendId\", \"\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/540/buggy-version/app.src.main.java.de.winterapps.appxpired.localDatabase.java", "BodyUseAPI": ["org.json.JSONObject.getString(java.lang.String)", "org.json.JSONObject.getString(java.lang.String)", "android.content.ContentValues.put(java.lang.String,foodEntry.getString(\"backendId\"))", "android.content.ContentValues.put(java.lang.String,foodEntry.getString(\"id\"))"], "Fixed commit": "f95fcad9558349b5fc0a51eb2c2f872e2c4aa9f3", "Url": "https://api.github.com/repos/Shark919/appXpired", "Date": "2016-04-21T07:22:02Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((target) == null) { throw new tw.mics.spigot.plugin.randomevent.exception.ExecuteSetParameterException(\"This execute have to add --target @all or --target player_name\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/5443/buggy-version/src.main.java.tw.mics.spigot.plugin.randomevent.execute.MessageExec.java", "BodyUseAPI": [], "Fixed commit": "513a2e26797c48e122e079834e54eac9d673ebfb", "Url": "https://api.github.com/repos/MkIIServer/RandomEvent", "Date": "2017-01-29T20:32:16Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((message) == null) { throw new tw.mics.spigot.plugin.randomevent.exception.ExecuteSetParameterException(\"This execute have to add --msg Messages\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/5443/buggy-version/src.main.java.tw.mics.spigot.plugin.randomevent.execute.MessageExec.java", "BodyUseAPI": [], "Fixed commit": "513a2e26797c48e122e079834e54eac9d673ebfb", "Url": "https://api.github.com/repos/MkIIServer/RandomEvent", "Date": "2017-01-29T20:32:16Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (hasValidSequenceNumber(section)) { section = this.sectionRepository.save(section); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/7654/buggy-version/src.main.java.edu.ucdavis.dss.ipa.services.jpa.JpaSectionService.java", "BodyUseAPI": ["edu.ucdavis.dss.ipa.repositories.SectionRepository.save(edu.ucdavis.dss.ipa.services.jpa.Section)"], "Fixed commit": "e14b1cc86b28c027b6edda5f7a85de2d83ce73a9", "Url": "https://api.github.com/repos/ucdavis/ipa-web", "Date": "2017-05-16T19:41:59Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.fasterxml.jackson.core.JsonParser.nextValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (token.equals(JsonToken.END_OBJECT)) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/3678/buggy-version/converter.json.src.main.java.org.theeuropeanlibrary.maia.converter.json.serializer.AnnotationBasedJsonDeserializer.java", "BodyUseAPI": [], "Fixed commit": "069d9c1d52a8a4689ed5c1e41f9f9e2ae092191e", "Url": "https://api.github.com/repos/TheEuropeanLibrary/MAIA", "Date": "2014-11-25T16:40:54Z"},
{"Line": "=>725", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["us.ichun.module.tabula.common.project.ProjectInfo.getObjectByIdent(cube.parentIdentifier)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (info1 != null) { info1.removeChild(cube); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/8083/buggy-version/src.main.java.us.ichun.mods.tabula.client.mainframe.Mainframe.java", "BodyUseAPI": ["us.ichun.module.tabula.common.project.components.CubeInfo.removeChild(us.ichun.module.tabula.common.project.components.CubeInfo)"], "Fixed commit": "1d7c951f468ded2677d93b751c62b2e915e20df2", "Url": "https://api.github.com/repos/iChun/Tabula", "Date": "2014-11-25T13:51:48Z"},
{"Line": "=>755", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.dotmarketing.db.DbConnectionFactory.isMsSql()) query.append(\" lower(cast(workflow_task.description as varchar(max))) like ? ) and \"); else query.append(\" lower(workflow_task.description) like ? ) and \");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/4184/buggy-version/src.com.dotmarketing.portlets.workflows.business.WorkflowFactoryImpl.java", "BodyUseAPI": [], "Fixed commit": "8315f514ec17f61cc09ed23931dc02bd64d9fef5", "Url": "https://api.github.com/repos/trackcc/dotCMS", "Date": "2013-09-23T19:51:29Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((dataAtPos.getNicknameEn().length()) == 0) { title.setText(dataAtPos.getFullNameEn()); }else { title.setText(((((dataAtPos.getFullNameEn()) + \" (\") + (dataAtPos.getNicknameEn())) + \")\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/6942/buggy-version/app.src.main.java.com.appman.intern.adapters.ContactListAdapter.java", "BodyUseAPI": ["com.appman.intern.models.AppContactData.getNicknameEn()", "com.appman.intern.models.AppContactData.getFullNameEn()", "android.widget.TextView.setText(dataAtPos.getFullNameEn())", "com.appman.intern.models.AppContactData.getFullNameEn()", "android.widget.TextView.setText(((((dataAtPos.getFullNameEn()) + \" (\") + (dataAtPos.getNicknameEn())) + \")\"))"], "Fixed commit": "01ce491bbdc60d34dedcfe137e75b3968272d212", "Url": "https://api.github.com/repos/ultimagz/AppManHR", "Date": "2016-07-15T07:32:11Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(min.owner.equals(node.name))) { min.owner = superClass; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/4418/buggy-version/src.main.java.org.parabot.core.asm.adapters.AddSuperAdapter.java", "BodyUseAPI": [], "Fixed commit": "489bf495e12cb111f5fed773771dc1b61b27ba0e", "Url": "https://api.github.com/repos/Parabot/Parabot", "Date": "2016-01-26T21:12:11Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((mCurrentState) == (com.crust87.videocropview.VideoCropView.STATE_ERROR)) || ((mCurrentState) == (com.crust87.videocropview.VideoCropView.STATE_IDLE))) || ((mCurrentState) == (com.crust87.videocropview.VideoCropView.STATE_PREPARING))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/1968/buggy-version/videoCropView.src.main.java.com.crust87.videocropview.VideoCropView.java", "BodyUseAPI": [], "Fixed commit": "c0e92ac85e38a943b67c27fb4ebd8769e4cd2ece", "Url": "https://api.github.com/repos/crust87/Android-VideoCropView", "Date": "2015-12-17T03:53:13Z"},
{"Line": "=>350", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ctx.getParent().getParent().getParent().getParent().getChild(0)) != null) { java.lang.System.out.println((\"STORE \" + (ctx.getParent().getParent().getParent().getParent().getChild(0).getText()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/9113/buggy-version/EvalTree.java", "BodyUseAPI": ["ctx.getParent().getParent()", "HelloParser.FormalParameterCallContext.getParent()", "ctx.getParent().getParent().getParent().getParent()", "ctx.getParent().getParent().getParent()", "ctx.getParent().getParent().getParent().getParent().getChild(int)", "java.io.PrintStream.println((\"STORE \" + (ctx.getParent().getParent().getParent().getParent().getChild(0).getText())))", "ctx.getParent().getParent().getParent().getParent().getChild(0).getText()"], "Fixed commit": "eb3f2a4654d0823d378ef5b07f34f3690d661559", "Url": "https://api.github.com/repos/vishaljohri/Compiler", "Date": "2016-04-28T23:59:37Z"},
{"Line": "=>329", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ctx.getParent().getChild(0)) != null) { java.lang.System.out.println((\"STORE \" + (ctx.getParent().getChild(0).getText()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/9113/buggy-version/EvalTree.java", "BodyUseAPI": ["ctx.getParent().getChild(int)", "java.io.PrintStream.println((\"STORE \" + (ctx.getParent().getChild(0).getText())))", "HelloParser.FuncCallContext.getParent()", "ctx.getParent().getChild(0).getText()"], "Fixed commit": "eb3f2a4654d0823d378ef5b07f34f3690d661559", "Url": "https://api.github.com/repos/vishaljohri/Compiler", "Date": "2016-04-28T23:59:37Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((groups.get(key)) != null) { java.lang.String temp = (\"(\" + (groups.get(key).replace(\"\\\\\", \"\\\\\\\\\\\\\\\\\"))) + \")\"; sample = sample.replaceAll((\"\\\\\\\\\" + key), temp); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/8688/buggy-version/src.Model.Analyzer.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)", "java.util.TreeMap<java.lang.Integer, java.lang.String>.get(int)", "java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "f8bc1078cd5b176e786387a58b348c421f0506d1", "Url": "https://api.github.com/repos/mcekiera/RegExtractor", "Date": "2015-06-15T13:19:03Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ipVersion) == 6) { java.lang.String[] parts = cidr.split(\"/\"); if ((parts.length) != 2) { return false; } try { int length = java.lang.Integer.parseInt(parts[1]); byte[] addrBytes = ((java.net.Inet6Address) (java.net.InetAddress.getByName(parts[0]))).getAddress(); int i; for (i = length; i < 128; i++) { if (((((int) (addrBytes[(i / 8)])) & 255) & (1 << (7 - (i % 8)))) != 0) { return false; } } return true; } catch (java.lang.Exception e) { return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/3627/buggy-version/opendaylight.networkconfiguration.neutron.src.main.java.org.opendaylight.controller.networkconfig.neutron.NeutronSubnet.java", "BodyUseAPI": [], "Fixed commit": "f5a373c5378af41f62a2c36ced4046fbdb77e00b", "Url": "https://api.github.com/repos/mandeepdhami/controller", "Date": "2014-11-04T20:07:31Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ipVersion) == 4) { try { org.apache.commons.net.util.SubnetUtils util = new org.apache.commons.net.util.SubnetUtils(cidr); org.apache.commons.net.util.SubnetUtils.SubnetInfo info = util.getInfo(); if (!(info.getNetworkAddress().equals(info.getAddress()))) { return false; } } catch (java.lang.Exception e) { return false; } return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/3627/buggy-version/opendaylight.networkconfiguration.neutron.src.main.java.org.opendaylight.controller.networkconfig.neutron.NeutronSubnet.java", "BodyUseAPI": [], "Fixed commit": "f5a373c5378af41f62a2c36ced4046fbdb77e00b", "Url": "https://api.github.com/repos/mandeepdhami/controller", "Date": "2014-11-04T20:07:31Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["event.getPlayer().getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((this.partialday.get(p)) != doc) { this.playerinvest.put(p, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/4603/buggy-version/src.nickrak.doc.DaysOfChristmas.java", "BodyUseAPI": ["java.util.concurrent.ConcurrentHashMap<java.lang.String, java.lang.Integer>.put(java.lang.String,int)"], "Fixed commit": "67636e98acef0eb0df7cb993dcd60808ce93f3e2", "Url": "https://api.github.com/repos/nickrak/DaysOfChristmas", "Date": "2011-12-15T18:14:33Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(r.getLocalName().startsWith(\"\\\"\"))) { visitRule(r); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/4666/buggy-version/src.nez.cc.LPegGrammarGenerator.java", "BodyUseAPI": ["nez.cc.LPegGrammarGenerator.visitRule(nez.expr.Rule)"], "Fixed commit": "b1e43a4a3f11232d25cf9118d336d157800d3410", "Url": "https://api.github.com/repos/shun-honda/nez", "Date": "2015-03-05T00:09:10Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(r.getLocalName().startsWith(\"\\\"\"))) { java.lang.String localName = r.getLocalName(); file.writeIndent(((((\"local \" + localName) + \" = lpeg.V\\\"\") + localName) + \"\\\"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/4666/buggy-version/src.nez.cc.LPegGrammarGenerator.java", "BodyUseAPI": ["nez.expr.Rule.getLocalName()"], "Fixed commit": "b1e43a4a3f11232d25cf9118d336d157800d3410", "Url": "https://api.github.com/repos/shun-honda/nez", "Date": "2015-03-05T00:09:10Z"},
{"Line": "=>1096", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (firstEvent) { invalidateComputedArea(); updateScrollbars(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/4092/buggy-version/com.notlob.jgrid.src.com.notlob.jgrid.Grid.java", "BodyUseAPI": [], "Fixed commit": "81dc9ad4f4c531c858b764cef60d41b04e05bc29", "Url": "https://api.github.com/repos/GrandmasterTash/jGrid", "Date": "2015-07-01T11:06:47Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.raphfrk.craftproxylite.Globals.isQuiet())) { ptc.printLogMessage((\"Sent hostname as : \" + (clientInfo.getHostname()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/8371/buggy-version/com.raphfrk.craftproxylite.Packet01Login.java", "BodyUseAPI": [], "Fixed commit": "21db565101040beaef8f8af6e2b75dcbdb5f872e", "Url": "https://api.github.com/repos/Raphfrk/CraftProxyLite", "Date": "2011-04-26T20:04:25Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((clientInfo.getHostname()) == null) { clientInfo.setHostname(com.raphfrk.craftproxylite.ReconnectCache.get(clientInfo.getUsername())); if (((clientInfo.getHostname()) == null) || (clientInfo.getHostname().equals(\"\"))) { clientInfo.setHostname(defaultHostname); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/8371/buggy-version/com.raphfrk.craftproxylite.PassthroughConnection.java", "BodyUseAPI": ["com.raphfrk.craftproxylite.ClientInfo.getHostname()", "com.raphfrk.craftproxylite.ReconnectCache.get(clientInfo.getUsername())", "clientInfo.getHostname().equals(java.lang.String)", "com.raphfrk.craftproxylite.ClientInfo.getHostname()", "com.raphfrk.craftproxylite.ClientInfo.setHostname(com.raphfrk.craftproxylite.ReconnectCache.get(clientInfo.getUsername()))", "com.raphfrk.craftproxylite.ClientInfo.setHostname(java.lang.String)", "com.raphfrk.craftproxylite.ClientInfo.getUsername()"], "Fixed commit": "21db565101040beaef8f8af6e2b75dcbdb5f872e", "Url": "https://api.github.com/repos/Raphfrk/CraftProxyLite", "Date": "2011-04-26T20:04:25Z"},
{"Line": "=>431", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jedit.ruby.parser.FCallNode.getArgs()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (nodeArgs instanceof org.jedit.ruby.parser.ListNode) { org.jedit.ruby.parser.ListNode list = ((org.jedit.ruby.parser.ListNode) (nodeArgs)); for (org.jedit.ruby.parser.Node child : list.childNodes()) { child.accept(this); } return null; }else { nodeArgs.accept(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/2610/buggy-version/src.org.jedit.ruby.parser.RubyNodeRubyVisitor.java", "BodyUseAPI": ["org.jedit.ruby.parser.Node.accept(org.jedit.ruby.parser.RubyNodeRubyVisitor)"], "Fixed commit": "e5bd2a30cc8336fce49ea10a1f2adaa0455a4a16", "Url": "https://api.github.com/repos/robmckinnon/jedit-ruby-plugin", "Date": "2012-08-22T15:39:58Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((change >= 5) && ((change % 5) >= 0)) { int fives = ((int) (change)) / 5; change = change % 5; java.lang.System.out.println((fives + \" five dollar bills\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/6878/buggy-version/src.MakeChange.MakeChangeProject.java", "BodyUseAPI": [], "Fixed commit": "13a8637209c3bcbc43734f52c5f4be8545f9c2cb", "Url": "https://api.github.com/repos/TravisWay/MakeChangeProject", "Date": "2017-06-03T18:39:48Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sonar.api.component.ResourcePerspectives.as(java.lang.Class,sourceCode.inputFile())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (issuable != null) { org.sonar.api.issue.Issuable.IssueBuilder builder = issuable.newIssueBuilder(); builder.ruleKey(issue.ruleKey()).line(issue.line()).message(issue.message()); if (issue.hasEffortToFix()) { builder.effortToFix(issue.cost()); } issuable.addIssue(builder.build()); }else { org.sonar.plugins.web.core.WebSensor.LOG.warn(\"Cannot save issue {}, because\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/2048/buggy-version/src.main.java.org.sonar.plugins.web.core.WebSensor.java", "BodyUseAPI": ["org.sonar.api.issue.Issuable.newIssueBuilder()", "org.sonar.api.issue.Issuable.addIssue(builder.build())"], "Fixed commit": "9ada6beb525dc70f909be5c3dbefe0beebcc8ad4", "Url": "https://api.github.com/repos/SonarSource/sonar-web", "Date": "2015-07-08T13:23:18Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.hasAltimetry) { if (ch.hgdev.toposuite.utils.MathUtils.isIgnorable(result.getPoint().getAltitude())) { vATextView.setText(ch.hgdev.toposuite.App.getContext().getString(R.string.no_value)); }else { vATextView.setText(ch.hgdev.toposuite.utils.DisplayUtils.formatGap(result.getvA())); } }else { vATextView.setText(ch.hgdev.toposuite.App.getContext().getString(R.string.no_value)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/4853/buggy-version/TopoSuite.src.ch.hgdev.toposuite.calculation.activities.freestation.ArrayListOfResultsAdapter.java", "BodyUseAPI": [], "Fixed commit": "30ea9a53c748e6e0368a9aa10353a6829bd98f70", "Url": "https://api.github.com/repos/hgdev-ch/toposuite-android", "Date": "2014-09-01T20:20:58Z"},
{"Line": "=>2030", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getRGBChannelCount()) == 1) || ((getRGBChannelCount()) == (getSizeC()))) { if (((getSizeC()) > 1) && ((getSizeT()) > 1)) { ms.dimensionOrder += \"C\"; } for (java.lang.Long nBytes : bytes) { java.lang.String axis = bytesPerAxis.get(nBytes); if ((ms.dimensionOrder.indexOf(axis)) == (-1)) { ms.dimensionOrder += axis; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/1954/buggy-version/components.formats-gpl.src.loci.formats.in.LIFReader.java", "BodyUseAPI": [], "Fixed commit": "88eafcd9083fdc1206ce88c338c92f531d4258af", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2016-04-07T03:01:17Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((com.github.moduth.blockcanary.BlockCanaryInternals.getContext().concernPackages()) != null) { com.github.moduth.blockcanary.ui.BlockCanaryUtils.CONCERN_LIST.addAll(com.github.moduth.blockcanary.BlockCanaryInternals.getContext().concernPackages()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/7907/buggy-version/blockcanary-android.src.main.java.com.github.moduth.blockcanary.ui.BlockCanaryUtils.java", "BodyUseAPI": [], "Fixed commit": "88432a96d8fb956341daabffd0c279f2fa743bdb", "Url": "https://api.github.com/repos/markzhai/AndroidPerformanceMonitor", "Date": "2016-11-02T15:02:31Z"},
{"Line": "=>306", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(line.contains(\"Version\"))) { signatureBuilder.append(line.trim()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/6046/buggy-version/src.eu.siacs.conversations.crypto.PgpEngine.java", "BodyUseAPI": ["java.lang.String.trim()", "java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "2b941d19f8cc9a517806a27d1ac976afbaa1677a", "Url": "https://api.github.com/repos/max-weller/Conversations", "Date": "2014-09-03T13:33:44Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(lines[i].contains(\"Version\"))) { encryptedMessageBody.append(lines[i].trim()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/6046/buggy-version/src.eu.siacs.conversations.crypto.PgpEngine.java", "BodyUseAPI": ["java.lang.String.trim()", "java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "2b941d19f8cc9a517806a27d1ac976afbaa1677a", "Url": "https://api.github.com/repos/max-weller/Conversations", "Date": "2014-09-03T13:33:44Z"},
{"Line": "=>791", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.californium.reverseproxy.resources.Periods.getPmax()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (periodMax > rtt) { for (org.eclipse.californium.reverseproxy.resources.Task t : tasks) { this.subscriberList.get(t.getClient()).setAllowed(true); } return new org.eclipse.californium.reverseproxy.resources.ScheduleResults(periodMin, periodMax, rtt, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/5641/buggy-version/californium-reverseproxy.src.main.java.org.eclipse.californium.reverseproxy.resources.ReverseProxyResource.java", "BodyUseAPI": [], "Fixed commit": "dc19eecc72581624e7e20014449e831d9fe877b6", "Url": "https://api.github.com/repos/Tanganelli/californium", "Date": "2015-09-11T12:22:26Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((jsInterface.getReaderTask()) != null) { jsInterface.getReaderTask().closeReader(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/813/buggy-version/app.src.main.java.com.mobile.mipago.mipago.MainActivity.java", "BodyUseAPI": ["com.mobile.mipago.mipago.JavaScriptInterface.getReaderTask()", "jsInterface.getReaderTask().closeReader()"], "Fixed commit": "bc2ac5e4dd2c28f6f7e7281014cae66c1ae3bf54", "Url": "https://api.github.com/repos/facualep/mipagoAndroid", "Date": "2014-09-23T04:43:20Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((jsInterface.getReaderTask()) != null) { jsInterface.getReaderTask().closeReader(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/813/buggy-version/app.src.main.java.com.mobile.mipago.mipago.MainActivity.java", "BodyUseAPI": ["com.mobile.mipago.mipago.JavaScriptInterface.getReaderTask()", "jsInterface.getReaderTask().closeReader()"], "Fixed commit": "bc2ac5e4dd2c28f6f7e7281014cae66c1ae3bf54", "Url": "https://api.github.com/repos/facualep/mipagoAndroid", "Date": "2014-09-23T04:43:20Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(currentPath.getParentFile().getAbsolutePath().equals(\"/\"))) { tmp[0] = (currentPath.getParentFile().getAbsolutePath()) + \"/\"; }else { tmp[0] = currentPath.getParentFile().getAbsolutePath(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/8928/buggy-version/Utils-Library.src.main.java.de.mkrtchyan.utils.FileChooserDialog.java", "BodyUseAPI": ["java.io.File.getAbsolutePath()", "java.io.File.getParentFile()", "java.io.File.getParentFile()", "java.io.File.getAbsolutePath()"], "Fixed commit": "e75679abeb83639ca93ac9ab7e36e5f43b5a86a6", "Url": "https://api.github.com/repos/ashotmkrtchyan1995/Recovery-Tools", "Date": "2014-04-01T20:24:55Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.NavigableMap<byte[], java.util.List<bowtie.core.internal.FileIndexEntry>>.get(entry.getStartKey())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (entries == null) { entries = new java.util.ArrayList<bowtie.core.internal.FileIndexEntry>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/3671/buggy-version/src.main.java.bowtie.core.internal.FileIndex.java", "BodyUseAPI": [], "Fixed commit": "8d2294c13188ea15380dc2c168460bcf856cecc8", "Url": "https://api.github.com/repos/dbaneman/bowtie", "Date": "2014-06-28T18:22:40Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, org.eclipse.gmf.runtime.notation.View>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (diagramView == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/4368/buggy-version/plugins.External.Z3.edu.toronto.cs.se.modelepedia.z3.src.edu.toronto.cs.se.modelepedia.z3.mavo.MAVORefiner.java", "BodyUseAPI": [], "Fixed commit": "9067b4f3bcc8351816372c623ad875f33d78032b", "Url": "https://api.github.com/repos/adisandro/MMINT", "Date": "2014-11-17T21:01:46Z"},
{"Line": "=>672", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.granite.gravity.adapters.AdapterFactory.getServiceAdapter(flex.messaging.messages.CommandMessage)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (adapter != null) { reply = ((flex.messaging.messages.AcknowledgeMessage) (adapter.manage(channel, message))); }else { org.granite.gravity.osgi.impl.OSGiGravity.log.warn((\"Can't find adapter for destination: \" + (message.getDestination()))); reply = new flex.messaging.messages.AcknowledgeMessage(message); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/2612/buggy-version/gravity.src.main.java.org.granite.gravity.osgi.impl.OSGiGravity.java", "BodyUseAPI": ["org.granite.gravity.adapters.ServiceAdapter.manage(org.granite.gravity.Channel,flex.messaging.messages.CommandMessage)"], "Fixed commit": "c50883334a9e031960a6e28867d4a72f2ffea5d0", "Url": "https://api.github.com/repos/diorcety/GraniteDS-OSGi", "Date": "2011-08-30T11:44:42Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((generatedKey.length) == 0) return org.inlighting.gentle.util.sql.SqlExecutor.insert(connection, tableName, data, false); else return org.inlighting.gentle.util.sql.SqlExecutor.insert(connection, tableName, data, generatedKey[0]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/3849/buggy-version/src.main.java.org.inlighting.gentle.util.sql.SqlUtil.java", "BodyUseAPI": ["org.inlighting.gentle.util.sql.SqlExecutor.insert(java.sql.Connection,java.lang.String,org.inlighting.gentle.util.sql.SqlDataInterface,boolean)"], "Fixed commit": "b809855aba9125c671630663c9f901e0eb593b00", "Url": "https://api.github.com/repos/Smith-Cruise/gentle-restful", "Date": "2017-08-21T09:51:15Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lastIdx) >= (buffer.length)) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/7003/buggy-version/src.getmaskbedfasta.BufferedFastaReader.java", "BodyUseAPI": [], "Fixed commit": "38a46e85cc0f7217a236b537f7943b48faa74f12", "Url": "https://api.github.com/repos/njdbickhart/GetMaskBedFasta", "Date": "2015-12-08T18:15:00Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isImageUpdated) { deleteFile((((imageFolder) + \"/\") + (imageInfo.getOldImageShortPath()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/6763/buggy-version/src.imageData.ImageUploadServlet.java", "BodyUseAPI": [], "Fixed commit": "a078ee87572ad95a444952e575bb4bbfcbb9968a", "Url": "https://api.github.com/repos/darshandpatel/Psych_Server", "Date": "2016-12-02T02:41:53Z"},
{"Line": "=>748", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.topsun.posclient.sales.core.service.IPartSaleService.getCardRuleByCardType(member.getCardType())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (null == cardRule) { org.eclipse.jface.dialogs.MessageDialog.openError(cardNo.getShell(), MessageResources.message_ui_tips, ((\"\u5361\u7c7b\u578b\u4e0d\u5339\u914d\uff0c\u5f53\u524d\u4f1a\u5458\u5361\u7c7b\u578b\u3010\" + (member.getCardType())) + \"\u3011\u5728\u672c\u5730\u5361\u7c7b\u578b\u6570\u636e\u4e2d\u4e0d\u5b58\u5728\")); cardNo.forceFocus(); cardNo.setText(\"\"); phone.setText(\"\"); vipPoint.setText(\"\"); userName.setText(\"\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/8648/buggy-version/com.topsun.posclient.sales.ui.src.com.topsun.posclient.sales.ui.view.SalesView.java", "BodyUseAPI": [], "Fixed commit": "c490f085af10b4fc3f9f643e8a67800ae7d38e98", "Url": "https://api.github.com/repos/tandong8888/topsun", "Date": "2013-12-03T04:05:48Z"},
{"Line": "=>869", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.topsun.posclient.sales.core.service.IPartSaleService.getCardRuleByCardType(member.getCardType())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (null == cardRule) { org.eclipse.jface.dialogs.MessageDialog.openError(cardNo.getShell(), MessageResources.message_ui_tips, ((\"\u5361\u7c7b\u578b\u4e0d\u5339\u914d\uff0c\u5f53\u524d\u4f1a\u5458\u5361\u7c7b\u578b\u3010\" + (member.getCardType())) + \"\u3011\u5728\u672c\u5730\u5361\u7c7b\u578b\u6570\u636e\u4e2d\u4e0d\u5b58\u5728\")); cardNo.forceFocus(); cardNo.setText(\"\"); phone.setText(\"\"); vipPoint.setText(\"\"); userName.setText(\"\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/8648/buggy-version/com.topsun.posclient.sales.ui.src.com.topsun.posclient.sales.ui.view.SalesView.java", "BodyUseAPI": [], "Fixed commit": "c490f085af10b4fc3f9f643e8a67800ae7d38e98", "Url": "https://api.github.com/repos/tandong8888/topsun", "Date": "2013-12-03T04:05:48Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((coords.size()) < 2) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/6489/buggy-version/opentripplanner-graph-builder.src.main.java.org.opentripplanner.graph_builder.impl.map.StreetMatcher.java", "BodyUseAPI": [], "Fixed commit": "01db686d9b7046ef2b525c438b1b7665c4c63182", "Url": "https://api.github.com/repos/2xminteractive/OpenTripPlanner", "Date": "2012-05-18T02:20:41Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (routeGeometry == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/6489/buggy-version/opentripplanner-graph-builder.src.main.java.org.opentripplanner.graph_builder.impl.map.StreetMatcher.java", "BodyUseAPI": [], "Fixed commit": "01db686d9b7046ef2b525c438b1b7665c4c63182", "Url": "https://api.github.com/repos/2xminteractive/OpenTripPlanner", "Date": "2012-05-18T02:20:41Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(selectedSkills.contains(availSkills.getItemAtPosition(position).toString()))) { selectedSkills.add(availSkills.getItemAtPosition(position).toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/7079/buggy-version/app.src.main.java.beautifuldonkey.survivorsguide.CharacterNewActivity.java", "BodyUseAPI": ["availSkills.getItemAtPosition(position).toString()", "android.widget.ListView.getItemAtPosition(int)", "java.util.ArrayList<java.lang.String>.add(availSkills.getItemAtPosition(position).toString())"], "Fixed commit": "59c7a7ce018b74d9d2a5d402ba256b189844e280", "Url": "https://api.github.com/repos/beautifuldonkey/SurvivorsGuide", "Date": "2015-07-06T23:39:16Z"},
{"Line": "=>800", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.oracle.truffle.r.runtime.RRuntime.convertScalarVectors(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (value instanceof com.oracle.truffle.r.runtime.env.REnvironment) { append(\"<environment>\"); }else if (value instanceof com.oracle.truffle.r.runtime.data.REmpty) { append(\"\"); }else if (value instanceof com.oracle.truffle.r.runtime.data.RPromise.EagerPromise) { return appendConstant(((com.oracle.truffle.r.runtime.data.RPromise.EagerPromise) (value)).getEagerValue()); }else if (value instanceof com.oracle.truffle.r.runtime.data.RPromise) { com.oracle.truffle.r.runtime.data.RPromise promise = ((com.oracle.truffle.r.runtime.data.RPromise) (value)); if (promise.isEvaluated()) { return appendConstant(promise.getValue()); }else { append(\"<unevaluated>\"); } }else if (value instanceof com.oracle.truffle.api.interop.TruffleObject) { append(\"<truffle object>\"); }else { throw com.oracle.truffle.r.runtime.RInternalError.shouldNotReachHere(((\"unexpected type while deparsing constant: \" + value) == null ? \"null\" : value.getClass().getSimpleName())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/181/buggy-version/com.oracle.truffle.r.runtime.src.com.oracle.truffle.r.runtime.RDeparse.java", "BodyUseAPI": ["java.lang.Class<? extends java.lang.Object>.getSimpleName()", "com.oracle.truffle.r.runtime.RInternalError.shouldNotReachHere(((\"unexpected type while deparsing constant: \" + value) == null ? \"null\" : value.getClass().getSimpleName()))", "java.lang.Object.getClass()"], "Fixed commit": "c8dede341ae8d5de64e099a8cabb86dcb0429ad1", "Url": "https://api.github.com/repos/oracle/fastr", "Date": "2017-10-25T14:22:38Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (input == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/2837/buggy-version/src.main.java.org.mule.tools.devkit.sonar.utils.ClassParserUtils.java", "BodyUseAPI": [], "Fixed commit": "907b83b656f693ef29da357d708745613263443c", "Url": "https://api.github.com/repos/mulesoft-labs/connector-certification-tools", "Date": "2015-11-30T14:18:00Z"},
{"Line": "=>437", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isShutdownNow) { site.counter = null; site.fetcher = null; site = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/8344/buggy-version/src.main.java.org.eweb4j.spiderman.spider.Spiderman.java", "BodyUseAPI": [], "Fixed commit": "db5c32057d6a4f735287c44ff9c24f436b086cac", "Url": "https://api.github.com/repos/laiweiwei/spiderman", "Date": "2013-01-17T11:58:18Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (playground.agarwalamit.mixedTraffic.patnaIndia.policies.PatnaPolicyControler.addBikeTrack) outputDir = (playground.agarwalamit.mixedTraffic.patnaIndia.policies.PatnaPolicyControler.dir) + \"/bikeTrack/\"; else outputDir = (playground.agarwalamit.mixedTraffic.patnaIndia.policies.PatnaPolicyControler.dir) + \"/baseCaseCtd/\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/3532/buggy-version/playgrounds.agarwalamit.src.main.java.playground.agarwalamit.mixedTraffic.patnaIndia.policies.PatnaPolicyControler.java", "BodyUseAPI": [], "Fixed commit": "cab395bb7c95e0ee503a59f9d5dd05b02a5eb2e7", "Url": "https://api.github.com/repos/matsim-org/matsim", "Date": "2016-08-24T09:42:00Z"},
{"Line": "=>493", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((dataset.rawData[r][c]) >= (-0.01)) && ((dataset.rawData[r][c]) <= 1)) { dataset.rawData[r][c] = 0; }else if ((dataset.rawData[r][c]) == ((-3.4) * (java.lang.Math.pow(10, 38)))) { dataset.rawData[r][c] = -999; }else if ((dataset.rawData[r][c]) == 9) { dataset.rawData[r][c] = -999; }else { java.lang.System.out.println(\"This shouldn't be reached\"); java.lang.System.out.println((\"This value reached it though: \" + (dataset.rawData[r][c]))); java.lang.System.exit((-1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/6644/buggy-version/genetica-libraries.src.main.java.umcg.genetica.math.matrix.MatrixHandeling.java", "BodyUseAPI": ["java.io.PrintStream.println((\"This value reached it though: \" + (dataset.rawData[r][c])))"], "Fixed commit": "87b7c51df47344f263998a53569b3013d6b903d7", "Url": "https://api.github.com/repos/PatrickDeelen/systemsgenetics", "Date": "2013-07-16T13:23:55Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(plugin.config.DISABLE_BUFF.contains(a.getTypeId()))) { l.getWorld().dropItemNaturally(l, a); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/2046/buggy-version/src.nu.nerd.kitchensink.KitchenSinkListener.java", "BodyUseAPI": ["l.getWorld().dropItemNaturally(nu.nerd.kitchensink.Location,org.bukkit.inventory.ItemStack)"], "Fixed commit": "7d21a770facbee77a32c2d41366eb848576985d2", "Url": "https://api.github.com/repos/NerdNu/KitchenSink", "Date": "2012-11-06T03:33:15Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ProxyRuntime.INSTANCE.getConfig().getConfig(ConfigEnum.CLUSTER)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (clusterConfig.getCluster().isEnable()) { io.mycat.proxy.man.packet.LeaderNotifyPacket pkg = new io.mycat.proxy.man.packet.LeaderNotifyPacket(io.mycat.proxy.man.packet.LeaderNotifyPacket.LOAD_CHARACTER, source.getRepBean().getReplicaBean().getName(), java.lang.Integer.toString(source.getIndex())); LeaderNotifyPacketCommand.INSTANCE.sendNotifyCmd(pkg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/6142/buggy-version/source.src.main.java.io.mycat.mycat2.beans.heartbeat.MySQLHeartbeat.java", "BodyUseAPI": [], "Fixed commit": "d6bf42c535588579295d62f8a9715d817fcca647", "Url": "https://api.github.com/repos/gaulzhw/Mycat2", "Date": "2017-09-28T09:34:12Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.avuna.httpd.http.Headers.getHeaders(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (hdrs == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/285/buggy-version/src.org.avuna.httpd.http.Headers.java", "BodyUseAPI": [], "Fixed commit": "1ecd9b8ea35e88b9b97b5857a6fa9d5f3c8dac21", "Url": "https://api.github.com/repos/paullaz/Avuna-HTTPD", "Date": "2015-06-26T08:17:33Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((customPotion) != null) { customPotion = flag.customPotion.clone(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/6336/buggy-version/src.main.java.haveric.recipeManager.flag.flags.FlagPotionItem.java", "BodyUseAPI": [], "Fixed commit": "ee9eff68f8a5e05eff4a5cce1698624e19e7e24c", "Url": "https://api.github.com/repos/haveric/RecipeManager2", "Date": "2017-07-13T01:57:23Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((android.widget.TextView) (findViewById(R.id.nextStartCharades))).getText().equals(getResources().getString(R.string.Start))) { ((android.widget.TextView) (findViewById(R.id.nextStartCharades))).setText(getResources().getString(R.string.Next)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/6357/buggy-version/app.src.main.java.com.concon.talkabout.talkabout.CharadesGameplay.java", "BodyUseAPI": [], "Fixed commit": "ec025ffd21c1e043c9e6e61804abbd23562722d5", "Url": "https://api.github.com/repos/pablitoh/talkabout", "Date": "2015-03-30T14:27:06Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.old_box.StorageEngine.StorageEngine.retrieve(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((data.getContentType()) != null) { com.sun.net.httpserver.Headers headers = t.getResponseHeaders(); headers.add(\"Content-Type\", data.getContentType()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/3734/buggy-version/src.main.java.com.old_box.fileStore.Main.java", "BodyUseAPI": ["com.sun.net.httpserver.Headers.add(java.lang.String,data.getContentType())", "com.old_box.StorageEngine.Backends.StorageEntry.getContentType()"], "Fixed commit": "5a23c45b2dc4ee72a5991a89b6346b73ec779883", "Url": "https://api.github.com/repos/Tebro/FileStore", "Date": "2016-01-14T07:51:51Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((mContext) instanceof com.uri.team21.culinarycommrade.recipe)) { ingredients.remove(position); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/8316/buggy-version/app.src.main.java.com.uri.team21.culinarycommrade.ingredientAdapter.java", "BodyUseAPI": [], "Fixed commit": "e4bc590b03db9c21c69fe8dbe9f4c746c575ee31", "Url": "https://api.github.com/repos/SPK44/culinarycomrade", "Date": "2017-05-08T17:02:53Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((mContext) instanceof com.uri.team21.culinarycommrade.recipe)) { ingredients.remove(position); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/8316/buggy-version/app.src.main.java.com.uri.team21.culinarycommrade.ingredientAdapter.java", "BodyUseAPI": [], "Fixed commit": "e4bc590b03db9c21c69fe8dbe9f4c746c575ee31", "Url": "https://api.github.com/repos/SPK44/culinarycomrade", "Date": "2017-05-08T17:02:53Z"},
{"Line": "=>1142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mIsMenuAdd)) { mWindowManager.addView(mMenuView, mMenuWmParams); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/2240/buggy-version/app.src.main.java.com.hardwork.fg607.relaxfinger.service.FloatingBallService.java", "BodyUseAPI": [], "Fixed commit": "fe2dfb37d66b581171f60e1f9b7b5a7290dbcc45", "Url": "https://api.github.com/repos/fg607/RelaxFinger", "Date": "2016-04-11T05:47:07Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((minutes) > 0) && ((minutes) < 240)) startActivity(timerIntent);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/6977/buggy-version/app.src.main.java.com.benedyktgmail.ziolkowski.scrabbletimer.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "d943d3f00e9e93611a47db59a8c14045709a888f", "Url": "https://api.github.com/repos/benedyktz/ScrabbleTimer", "Date": "2017-10-02T19:37:39Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (onFinished != null) { onFinished.run(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/4340/buggy-version/src.main.Animation.java", "BodyUseAPI": ["java.lang.Runnable.run()"], "Fixed commit": "1d35e90dea1ed84a515df8ec60536b9345fe7157", "Url": "https://api.github.com/repos/SuperPenguin/Bejeweled-AI-Project", "Date": "2016-01-03T05:30:48Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((main.Animation.invalidateAll) != null) { main.Animation.invalidateAll.run(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/4340/buggy-version/src.main.Animation.java", "BodyUseAPI": [], "Fixed commit": "1d35e90dea1ed84a515df8ec60536b9345fe7157", "Url": "https://api.github.com/repos/SuperPenguin/Bejeweled-AI-Project", "Date": "2016-01-03T05:30:48Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (args.get(0).equals(\"git\")) { modules.Commands.gitCommand(channel); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/4771/buggy-version/src.main.java.modules.CommandManager.java", "BodyUseAPI": [], "Fixed commit": "b2ebd969492abc9016ef3acb5901afc8b98ed7f9", "Url": "https://api.github.com/repos/phost1111/PhostDiscoBot", "Date": "2017-01-31T15:48:35Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((args.size()) > 1) modules.Commands.setTimezoneCommand(channel.getGuild(), args.get(1)); else utils.MessageSender.sendMessage(\"Use the command like this: ```\u2665settimezone <yourTimezone>```\", channel);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/4771/buggy-version/src.main.java.modules.CommandManager.java", "BodyUseAPI": ["modules.Commands.setTimezoneCommand(channel.getGuild(),java.lang.String)", "java.util.ArrayList<java.lang.String>.get(int)"], "Fixed commit": "b2ebd969492abc9016ef3acb5901afc8b98ed7f9", "Url": "https://api.github.com/repos/phost1111/PhostDiscoBot", "Date": "2017-01-31T15:48:35Z"},
{"Line": "=>438", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dtm.Mensaje.getMensaje()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (texto.contains(\"RF15P2\")) { terminarRF15(texto.substring(7)); }else if (texto.contains(\"RFC11\")) { responderRFC11(cola1); }else if (texto.contains(\"RFC12\")) { responderRFC12(cola1, texto.substring(7)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/759/buggy-version/REST.src.dtm.JMSManager.java", "BodyUseAPI": ["dtm.JMSManager.Listener1.terminarRF15(java.lang.String)", "java.lang.String.substring(int)", "java.lang.String.contains(java.lang.String)", "dtm.JMSManager.Listener1.responderRFC12(javax.jms.Queue,java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.String.substring(int)"], "Fixed commit": "4ac049c4afbd2b84428053fa651e75663725d15e", "Url": "https://api.github.com/repos/jscardona12/Iteracion5", "Date": "2016-05-24T01:38:12Z"},
{"Line": "=>461", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dtm.Mensaje.getMensaje()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (texto.contains(\"RF15P2\")) { terminarRF15(texto.substring(7)); }else if (texto.contains(\"RFC11\")) { responderRFC11(cola2); }else if (texto.contains(\"RFC12\")) { responderRFC12(cola2, texto.substring(7)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/759/buggy-version/REST.src.dtm.JMSManager.java", "BodyUseAPI": ["java.lang.String.substring(int)", "java.lang.String.contains(java.lang.String)", "java.lang.String.substring(int)", "dtm.JMSManager.Listener2.responderRFC12(javax.jms.Queue,java.lang.String)", "java.lang.String.contains(java.lang.String)", "dtm.JMSManager.Listener2.terminarRF15(java.lang.String)"], "Fixed commit": "4ac049c4afbd2b84428053fa651e75663725d15e", "Url": "https://api.github.com/repos/jscardona12/Iteracion5", "Date": "2016-05-24T01:38:12Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<io.github.ldears.ld26.models.ItemType, java.awt.Point>.get(io.github.ldears.ld26.models.ItemType)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((sp != null) && (pos != null)) found |= ((sp.x) == (pos.x)) && ((sp.y) == (pos.y));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/154/buggy-version/ld26.src.io.github.ldears.ld26.models.GameModel.java", "BodyUseAPI": [], "Fixed commit": "d634a4e0d9c0bd6b26f4f473377c49cc281c4bc2", "Url": "https://api.github.com/repos/LD-26-IO-Team/ld26", "Date": "2013-04-29T12:12:34Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (electricity > (loadShedding)) { setResidual((electricity - (loadShedding))); loadShedding = 0; }else { loadShedding = (loadShedding) - electricity; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/1397/buggy-version/src.graph.vertex.Node.java", "BodyUseAPI": ["graph.vertex.Node.setResidual(double)"], "Fixed commit": "653f15da33575f32f268cfc5342f3599dc47b52e", "Url": "https://api.github.com/repos/muztaba/SmartGridOptimization", "Date": "2015-08-03T17:33:04Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.lareferencia.backend.repositories.NetworkSnapshotRepository.findLastGoodKnowByNetworkID(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (lgkSnapshot != null) lgkSnapshotID = lgkSnapshot.getId();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/2854/buggy-version/backend.src.main.java.org.lareferencia.backend.rest.BackEndController.java", "BodyUseAPI": ["org.lareferencia.backend.domain.NetworkSnapshot.getId()"], "Fixed commit": "4651ec9385fa347a2bf74bcc419f20a195943e22", "Url": "https://api.github.com/repos/lareferencia/main", "Date": "2016-12-10T00:19:51Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((wordList.size()) > 0) { java.lang.String lastWord = wordList.get(((wordList.size()) - 1)); char lastChar = lastWord.charAt(((lastWord.length()) - 1)); if (firstChar != lastChar) return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/8435/buggy-version/app.src.main.java.com.cswithandroid.unit6.codingame.TreeDictionary.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.get(int)", "java.util.ArrayList<java.lang.String>.size()"], "Fixed commit": "ae3398a978e17e44d1c7fc471c12c9066ecc7634", "Url": "https://api.github.com/repos/sahiljain112/mini-hackathon", "Date": "2016-10-01T13:04:42Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((nextDosageDateTime.getMinuteOfHour()) != 0) { messages.add(iVRMessage.getNumberFilename(nextDosageDateTime.getMinuteOfHour())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/4030/buggy-version/src.main.java.org.motechproject.tama.ivr.builder.IVRDayMessageBuilder.java", "BodyUseAPI": ["org.motechproject.tama.ivr.IVRMessage.getNumberFilename(nextDosageDateTime.getMinuteOfHour())", "org.joda.time.DateTime.getMinuteOfHour()", "java.util.List<java.lang.String>.add(iVRMessage.getNumberFilename(nextDosageDateTime.getMinuteOfHour()))"], "Fixed commit": "d8dc8249f2a555408b308ea83bce46e6e20b331a", "Url": "https://api.github.com/repos/motech/TAMA-Web", "Date": "2011-09-19T09:20:06Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((java.lang.Integer.parseInt(message[ChatServer.READ_CNT])) > 0) t.put(message);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/2635/buggy-version/chat.ChatListener.java", "BodyUseAPI": ["tuplespaces.TupleSpace.put(java.lang.String[])"], "Fixed commit": "367ea25b236ff184190667bd53f6ecadf4058159", "Url": "https://api.github.com/repos/Rappel87/tuplespace", "Date": "2014-12-18T12:52:09Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (readCount == 1) { channelTuple[ChatServer.MSG_CNT] = java.lang.Integer.toString((msgCount - 1)); channelTuple[ChatServer.FIRST_MSG_ID] = java.lang.Integer.toString(((java.lang.Integer.parseInt(channelTuple[ChatServer.FIRST_MSG_ID])) + 1)); channelTuple[ChatServer.IS_FULL] = ChatServer.IS_NOT_FULL_TXT; }else { java.lang.System.out.println((\"ERROR : readCount negative or null: \" + readCount)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/2635/buggy-version/chat.ChatListener.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "367ea25b236ff184190667bd53f6ecadf4058159", "Url": "https://api.github.com/repos/Rappel87/tuplespace", "Date": "2014-12-18T12:52:09Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((convertView == null) || ((convertView.getTag()) != groupType)) { switch (groupType) { case 0 : convertView = inflater.inflate(R.layout.list_group, null); break; case 1 : convertView = inflater.inflate(R.layout.list_group, null); break; case 2 : convertView = inflater.inflate(R.layout.list_group, null); break; case 3 : convertView = inflater.inflate(R.layout.list_group, null); break; default : break; } }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/5660/buggy-version/DocNect.app.src.main.java.docnect.adapters.ExpandableListAdapterWithImage.java", "BodyUseAPI": [], "Fixed commit": "6047130cccb235b6bec1b51d86c5c9d078716431", "Url": "https://api.github.com/repos/martiener1/DocNect", "Date": "2016-06-09T07:40:29Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(stake.equals(Stake.noStake))) && ((stake.value) != (nextStake))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/881/buggy-version/src.main.java.betix.core.data.Team.java", "BodyUseAPI": [], "Fixed commit": "5317a54ee6d1b3ded98283f1f6ece0dc353c4f1f", "Url": "https://api.github.com/repos/macypa/betix", "Date": "2015-02-21T08:14:50Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["((android.widget.TextView) (listItem.findViewById(R.id.assignee_ref))).getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(assigneeRef.isEmpty())) usersRef.child(assigneeKey).child(\"user_tasks\").child(assigneeRef).removeValue();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/4265/buggy-version/app.src.main.java.com.example.ishita.assigntasks.TasksFragment.java", "BodyUseAPI": ["usersRef.child(assigneeKey).child(\"user_tasks\").child(java.lang.String)", "usersRef.child(assigneeKey).child(\"user_tasks\").child(assigneeRef).removeValue()"], "Fixed commit": "eae11633fe9c82d437aac1c2354c875d510bd179", "Url": "https://api.github.com/repos/geekskool/android-teamwork", "Date": "2016-03-22T08:24:15Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (compound.hasKey(riskyken.cosmeticWings.common.wings.WingData.TAG_WING_SCALE)) { this.wingScale = compound.getFloat(riskyken.cosmeticWings.common.wings.WingData.TAG_WING_SCALE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/30/buggy-version/src.main.java.riskyken.cosmeticWings.common.wings.WingData.java", "BodyUseAPI": ["net.minecraft.nbt.NBTTagCompound.getFloat(java.lang.String)"], "Fixed commit": "8476750196075d7de67cd34230f998fe867bb216", "Url": "https://api.github.com/repos/RiskyKen/Cosmetic-Wings", "Date": "2014-10-12T09:58:57Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (compound.hasKey(riskyken.cosmeticWings.common.wings.WingData.TAG_SPAWN_PARTICLES)) { this.spawnParticles = compound.getBoolean(riskyken.cosmeticWings.common.wings.WingData.TAG_SPAWN_PARTICLES); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/30/buggy-version/src.main.java.riskyken.cosmeticWings.common.wings.WingData.java", "BodyUseAPI": ["net.minecraft.nbt.NBTTagCompound.getBoolean(java.lang.String)"], "Fixed commit": "8476750196075d7de67cd34230f998fe867bb216", "Url": "https://api.github.com/repos/RiskyKen/Cosmetic-Wings", "Date": "2014-10-12T09:58:57Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (compound.hasKey(riskyken.cosmeticWings.common.wings.WingData.TAG_WING_TYPE)) { this.wingType = riskyken.cosmeticWings.common.wings.WingType.values()[compound.getByte(riskyken.cosmeticWings.common.wings.WingData.TAG_WING_TYPE)]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/30/buggy-version/src.main.java.riskyken.cosmeticWings.common.wings.WingData.java", "BodyUseAPI": ["net.minecraft.nbt.NBTTagCompound.getByte(java.lang.String)"], "Fixed commit": "8476750196075d7de67cd34230f998fe867bb216", "Url": "https://api.github.com/repos/RiskyKen/Cosmetic-Wings", "Date": "2014-10-12T09:58:57Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mjson.Json.at(java.lang.String,mjson.Json.object())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (outcome.isObject()) { result = outcome.at(\"label\", \"\").asString(); }else if (outcome.isString()) { java.lang.String outcomeStr = outcome.asString(); if (outcomeStr.contains(\"#\")) { result = outcomeStr.split(\"#\")[1]; }else { result = outcomeStr; } }else { throw new java.lang.RuntimeException((\"Misconfiguration of outcome detected in Activity: \" + activity)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/6684/buggy-version/src.java.org.sharegov.cirm.utils.SRJsonActivityUtil.java", "BodyUseAPI": ["outcome.at(\"label\", \"\").asString()", "mjson.Json.isString()", "mjson.Json.at(java.lang.String,java.lang.String)", "mjson.Json.asString()"], "Fixed commit": "f439b7845396e726c128205d99fc83bd269a2119", "Url": "https://api.github.com/repos/sharegov/opencirm", "Date": "2016-07-09T02:21:37Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((tokens[1].charAt(0)) == '\"') { attrName = tokens[1].split(\"\\\"\")[1]; }else if ((tokens[1].charAt(0)) == '\\'') { attrName = tokens[1].split(\"'\")[1]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/3769/buggy-version/data.src.data.arff.ArffReader.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)", "java.lang.String.charAt(int)", "java.lang.String.split(java.lang.String)"], "Fixed commit": "f09d3c06c208391bd647fb608ca71a3f8125ae47", "Url": "https://api.github.com/repos/mbernste/machine-learning", "Date": "2013-12-18T21:46:23Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getPicture()) != null) { map.put(\"picture\", getPicture()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/749/buggy-version/Winez.app.src.main.java.com.example.owner.winez.Model.Wine.java", "BodyUseAPI": [], "Fixed commit": "3702b1c5b126e8b3aa9106b07c9a416f2dd30633", "Url": "https://api.github.com/repos/Mgolbraikh/FinalAndroidColman", "Date": "2017-02-09T20:56:46Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (newCharge > 0) { com.endicott.edu.simulators.Accountant.payBill(runId, newCharge); com.endicott.edu.simulators.NewsManager.createNews(runId, hoursAlive, (((\"Charge for \" + (sport.getName())) + \" $\") + newCharge)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/1432/buggy-version/src.com.endicott.edu.simulators.SportManager.java", "BodyUseAPI": ["com.endicott.edu.simulators.Accountant.payBill(java.lang.String,int)", "com.endicott.edu.simulators.NewsManager.createNews(java.lang.String,int,(((\"Charge for \" + (sport.getName())) + \" $\") + newCharge))"], "Fixed commit": "9c7f90e6a79ca4e4c478b8d2218369876caf3158", "Url": "https://api.github.com/repos/allanbrock/enccollegesim", "Date": "2017-10-16T17:35:33Z"},
{"Line": "=>399", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (tmpFile1.delete()) { fr.ens.transcriptome.eoulsan.EoulsanLogger.getLogger().warning((\"Cannot remove BWA temporary file: \" + tmpFile1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/8707/buggy-version/src.main.java.fr.ens.transcriptome.eoulsan.bio.readsmappers.BWAReadsMapper.java", "BodyUseAPI": ["fr.ens.transcriptome.eoulsan.EoulsanLogger.getLogger().warning(java.lang.String)"], "Fixed commit": "b1524d7ae4fe886bd91e0633b410c3cb31a7e755", "Url": "https://api.github.com/repos/GenomicParisCentre/eoulsan", "Date": "2014-11-29T11:42:05Z"},
{"Line": "=>403", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (tmpFile2.delete()) { fr.ens.transcriptome.eoulsan.EoulsanLogger.getLogger().warning((\"Cannot remove BWA temporary file: \" + tmpFile2)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/8707/buggy-version/src.main.java.fr.ens.transcriptome.eoulsan.bio.readsmappers.BWAReadsMapper.java", "BodyUseAPI": ["fr.ens.transcriptome.eoulsan.EoulsanLogger.getLogger().warning(java.lang.String)"], "Fixed commit": "b1524d7ae4fe886bd91e0633b410c3cb31a7e755", "Url": "https://api.github.com/repos/GenomicParisCentre/eoulsan", "Date": "2014-11-29T11:42:05Z"},
{"Line": "=>317", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(tmpFile.delete())) { fr.ens.transcriptome.eoulsan.EoulsanLogger.getLogger().warning((\"Cannot remove BWA temporary file: \" + tmpFile)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/8707/buggy-version/src.main.java.fr.ens.transcriptome.eoulsan.bio.readsmappers.BWAReadsMapper.java", "BodyUseAPI": ["fr.ens.transcriptome.eoulsan.EoulsanLogger.getLogger().warning(java.lang.String)"], "Fixed commit": "b1524d7ae4fe886bd91e0633b410c3cb31a7e755", "Url": "https://api.github.com/repos/GenomicParisCentre/eoulsan", "Date": "2014-11-29T11:42:05Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<Storage.Task>.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (itemsToDisplay == 0) { return GUI.ResultGenerator.UNSUCCESSFUL_DISPLAY_NO_TASKS; }else if (itemsToDisplay == 1) { return GUI.ResultGenerator.successfulDisplaySingleTask(tasks); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/4764/buggy-version/src.GUI.ResultGenerator.java", "BodyUseAPI": [], "Fixed commit": "cbcfb2a16654be45d265276c6ff260afcc726e01", "Url": "https://api.github.com/repos/cs2103aug2014-t15-1j/main", "Date": "2014-10-08T14:04:35Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (in.hasNextInt()) { try { game.insertChar(in.nextInt()); } catch (is.aadoj.TicTacToe.TicTacToe.TicTacToeException ex) { java.lang.System.out.println(ex.getMessage()); } }else { java.lang.System.out.println(\"Illegal input!, input integer\"); in.next(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/5032/buggy-version/src.main.java.is.aadoj.TicTacToe.TicTacToeConsoleUI.java", "BodyUseAPI": ["java.util.Scanner.next()", "is.aadoj.TicTacToe.TicTacToe.insertChar(int)", "java.util.Scanner.nextInt()"], "Fixed commit": "1db8b51b2bcecfa7fa187d8e8c329ae340705bac", "Url": "https://api.github.com/repos/AADOJ/Late-Term-Assignment", "Date": "2014-10-31T19:16:02Z"},
{"Line": "=>604", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (null != annotations) { mapArguments.getAnnotations().addAll(annotations); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/7602/buggy-version/src.main.java.uk.co.jemos.podam.api.PodamFactoryImpl.java", "BodyUseAPI": ["mapArguments.getAnnotations().addAll(java.util.List<java.lang.annotation.Annotation>)"], "Fixed commit": "d384ad6dc92d643090dea8f2041c505eca24f193", "Url": "https://api.github.com/repos/mtedone/podam", "Date": "2017-01-10T18:26:43Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ptResolver_injected) != null) { return ptResolver_injected; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/6492/buggy-version/src.main.java.com.celements.web.plugin.cmd.ExternalJavaScriptFilesCommand.java", "BodyUseAPI": [], "Fixed commit": "932c8af231be33ed2f8cd7e4771b0997c23438b5", "Url": "https://api.github.com/repos/celements/celements-core", "Date": "2017-09-04T12:48:09Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((i5.las2peer.webConnector.serviceManagement.ServiceRepositoryManager.timer) != null) { i5.las2peer.webConnector.serviceManagement.ServiceRepositoryManager.timer.cancel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/46/buggy-version/src.main.java.i5.las2peer.webConnector.serviceManagement.ServiceRepositoryManager.java", "BodyUseAPI": [], "Fixed commit": "bf5069688d75d5d5d1aa47d773f24df77acf780a", "Url": "https://api.github.com/repos/rwth-acis/las2peer-WebConnector", "Date": "2016-04-29T12:12:42Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(line.contains(\",\"))) && (!(line.contains(\"=\")))) { line = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/5713/buggy-version/harnesses.ReImInfer-OOPSLA2012.ReImInferGrader.src.ReImInferGrader.java", "BodyUseAPI": [], "Fixed commit": "d850a118c71a5da7bf4f0f329be09e15f1a93e70", "Url": "https://api.github.com/repos/kcsl/immutability-benchmark", "Date": "2016-11-09T17:27:29Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.persistence.EntityManager.createQuery(java.lang.String,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((query.getResultList().size()) > 0) slotsUntilChange = query.getResultList().get(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/6858/buggy-version/OsceManager.src.main.java.ch.unibas.medizin.osce.domain.Osce.java", "BodyUseAPI": ["query.getResultList().get(int)", "javax.persistence.TypedQuery<java.lang.Integer>.getResultList()"], "Fixed commit": "76a5db6abc7be290f36af6f27d9aa74873ed888b", "Url": "https://api.github.com/repos/nikotsunami/osce", "Date": "2014-02-11T14:31:50Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.persistence.TypedQuery<com.jrew.geocatch.repository.model.DomainProperty>.getResultList()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (result != null) { result.size(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/6156/buggy-version/geo-catch-repository.src.main.java.com.jrew.geocatch.repository.dao.database.DomainPropertyDbManagerJPAImpl.java", "BodyUseAPI": ["java.util.List<com.jrew.geocatch.repository.model.DomainProperty>.size()"], "Fixed commit": "27025fd6f605dedd72971e8cb23ff3103ccc5752", "Url": "https://api.github.com/repos/vadzim-kazak/geo-catch", "Date": "2014-04-16T13:49:08Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pageId.equals(\"home-not-configured\")) { com.apb.beacon.ApplicationSettings.setWizardState(this, AppConstants.WIZARD_FLAG_HOME_NOT_COMPLETED); android.content.Intent i = new android.content.Intent(this, com.apb.beacon.wizard.WizardActivity.class); startActivity(i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/5705/buggy-version/src.main.java.com.apb.beacon.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "8448b373a4c3a10a3b890272e24e9c126a8450f4", "Url": "https://api.github.com/repos/TeamPanicButton/PanicButton", "Date": "2014-03-24T22:28:04Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == stringRepresentation) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/719/buggy-version/jsystem-core-projects.jsystemApp.src.main.java.jsystem.extensions.paramproviders.StringBufferParameterProvider.java", "BodyUseAPI": [], "Fixed commit": "d45b3e3b575ec95ed998389f752a60a0e2c0e8f2", "Url": "https://api.github.com/repos/Top-Q/jsystem", "Date": "2013-04-15T08:45:29Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == o) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/719/buggy-version/jsystem-core-projects.jsystemApp.src.main.java.jsystem.extensions.paramproviders.StringBufferParameterProvider.java", "BodyUseAPI": [], "Fixed commit": "d45b3e3b575ec95ed998389f752a60a0e2c0e8f2", "Url": "https://api.github.com/repos/Top-Q/jsystem", "Date": "2013-04-15T08:45:29Z"},
{"Line": "=>353", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (js.has(\"synopsis\")) { java.lang.String description = js.getString(\"synopsis\"); movie.setDescription(description); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/2670/buggy-version/src.com.example.movies_lefkowitz.DetailFragment.java", "BodyUseAPI": ["org.json.JSONObject.getString(java.lang.String)"], "Fixed commit": "5cb06cfb5a4d935772cdf923bdd6358900a8727c", "Url": "https://api.github.com/repos/midaslefkowitz/Movies_Lefkowitz", "Date": "2014-08-18T21:32:58Z"},
{"Line": "=>337", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pageIndex < 0) { return com.orientechnologies.common.util.OCommonConst.EMPTY_LONG_ARRAY; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/2553/buggy-version/core.src.main.java.com.orientechnologies.orient.core.storage.impl.local.paginated.OClusterPositionMap.java", "BodyUseAPI": [], "Fixed commit": "87433bf2f269efed66e8dab49b4f8fc4925d8474", "Url": "https://api.github.com/repos/matanshukry/orientdb", "Date": "2015-03-06T11:25:58Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((actorService.checkAuthority(\"AUDITOR\")) || (actorService.checkAuthority(\"ADMIN\"))) matches = matchService.findAllUserInvolvesIncludeCancelled(userId); else matches = matchService.findAllUserInvolves(userId);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/6040/buggy-version/WorkSpace.Acme-Barter.src.main.java.controllers.MatchController.java", "BodyUseAPI": [], "Fixed commit": "28b56d294524d88a228c4cb47e1fb2fdb46c9a3e", "Url": "https://api.github.com/repos/DPIRPSG/DP10Entrega", "Date": "2016-04-21T16:55:39Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_parms._min_rows) < 0) hex.tree.SharedTree.error(\"_min_rows\", \"Requested min_rows must be greater than 0\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/9151/buggy-version/h2o-algos.src.main.java.hex.tree.SharedTree.java", "BodyUseAPI": [], "Fixed commit": "718d611cf2ca830f741a44e85136091811eaf940", "Url": "https://api.github.com/repos/h2oai/h2o-3", "Date": "2015-04-03T18:25:35Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mBookmarkList) != null) mBookmarkList.setAdapter(null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/8124/buggy-version/src.com.ferg.awful.UserCPFragment.java", "BodyUseAPI": [], "Fixed commit": "2cfc0c5eeb4a4c51fefefe0ad4bfc4846edbc304", "Url": "https://api.github.com/repos/Awful/Awful.apk", "Date": "2011-06-29T17:10:02Z"},
{"Line": "=>619", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.concurrent.ConcurrentMap<org.apache.hadoop.yarn.api.records.ContainerId, org.apache.hadoop.yarn.server.nodemanager.containermanager.container.Container>.get(org.apache.hadoop.yarn.api.records.ContainerId)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (c == null) { org.apache.hadoop.yarn.server.nodemanager.containermanager.monitor.ContainersMonitorImpl.LOG.info(((\"Container \" + (containerId.toString())) + \" not exists in context!\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/3885/buggy-version/hadoop-2.2.0-src.hadoop-yarn-project.hadoop-yarn.hadoop-yarn-server.hadoop-yarn-server-nodemanager.src.main.java.org.apache.hadoop.yarn.server.nodemanager.containermanager.monitor.ContainersMonitorImpl.java", "BodyUseAPI": [], "Fixed commit": "9fef67849f0556d04605a47928f4695921cdf7b8", "Url": "https://api.github.com/repos/flyhighzy/Hadoop-YARN-Dynamic-container", "Date": "2014-06-05T07:07:39Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((data) != null) { if ((data) instanceof redis.clients.jedis.exceptions.JedisDataException) { throw new redis.clients.jedis.exceptions.JedisDataException(((redis.clients.jedis.exceptions.JedisDataException) (data))); } response = builder.build(data); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/4224/buggy-version/src.main.java.redis.clients.jedis.Response.java", "BodyUseAPI": [], "Fixed commit": "fb723db86de2078751ba8c12e1d730abbe122357", "Url": "https://api.github.com/repos/gabeki/jedis", "Date": "2011-12-14T04:43:52Z"},
{"Line": "=>2170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((type.ret()) instanceof wyjc.Type.Void) { bytecodes.add(new wyjc.Bytecode.LoadConst(null)); }else { addWriteConversion(type.ret(), bytecodes); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/86/buggy-version/modules.wyjc.src.wyjc.Wyil2JavaBuilder.java", "BodyUseAPI": ["wyjc.Wyil2JavaBuilder.addWriteConversion(type.ret(),java.util.ArrayList<wyjc.Bytecode>)", "Type.FunctionOrMethod.ret()"], "Fixed commit": "afb18ef182632268144274ef1e0c0682335baa3e", "Url": "https://api.github.com/repos/Whiley/WhileyCompiler", "Date": "2014-02-14T13:11:08Z"},
{"Line": "=>302", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((X) == ((int) (X))) && ((Y) == ((int) (Y)))) { return (((\"(\" + (X)) + \",\") + (Y)) + \")\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/8986/buggy-version/src.backend.ast.figure.components.Point.java", "BodyUseAPI": [], "Fixed commit": "32661b34857b648befe4d31e0f46a19b756875b7", "Url": "https://api.github.com/repos/Oddmajo/GeometryUI", "Date": "2016-11-17T21:33:37Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((score) >= 87) return \"B+\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/7030/buggy-version/src.edu.ucsb.cs56.S12.esterkin.Game.java", "BodyUseAPI": [], "Fixed commit": "9bc3bb843237654d51cbeaedd4fd952b77853a24", "Url": "https://api.github.com/repos/ucsb-cs56-projects/cs56-games-guess-the-capital", "Date": "2016-02-19T04:21:08Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((score) >= 83) return \"B\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/7030/buggy-version/src.edu.ucsb.cs56.S12.esterkin.Game.java", "BodyUseAPI": [], "Fixed commit": "9bc3bb843237654d51cbeaedd4fd952b77853a24", "Url": "https://api.github.com/repos/ucsb-cs56-projects/cs56-games-guess-the-capital", "Date": "2016-02-19T04:21:08Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((score) >= 77) return \"C+\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/7030/buggy-version/src.edu.ucsb.cs56.S12.esterkin.Game.java", "BodyUseAPI": [], "Fixed commit": "9bc3bb843237654d51cbeaedd4fd952b77853a24", "Url": "https://api.github.com/repos/ucsb-cs56-projects/cs56-games-guess-the-capital", "Date": "2016-02-19T04:21:08Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((score) >= 70) return \"C-\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/7030/buggy-version/src.edu.ucsb.cs56.S12.esterkin.Game.java", "BodyUseAPI": [], "Fixed commit": "9bc3bb843237654d51cbeaedd4fd952b77853a24", "Url": "https://api.github.com/repos/ucsb-cs56-projects/cs56-games-guess-the-capital", "Date": "2016-02-19T04:21:08Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((score) >= 80) return \"B-\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/7030/buggy-version/src.edu.ucsb.cs56.S12.esterkin.Game.java", "BodyUseAPI": [], "Fixed commit": "9bc3bb843237654d51cbeaedd4fd952b77853a24", "Url": "https://api.github.com/repos/ucsb-cs56-projects/cs56-games-guess-the-capital", "Date": "2016-02-19T04:21:08Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((score) >= 63) return \"D\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/7030/buggy-version/src.edu.ucsb.cs56.S12.esterkin.Game.java", "BodyUseAPI": [], "Fixed commit": "9bc3bb843237654d51cbeaedd4fd952b77853a24", "Url": "https://api.github.com/repos/ucsb-cs56-projects/cs56-games-guess-the-capital", "Date": "2016-02-19T04:21:08Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((score) >= 67) return \"D+\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/7030/buggy-version/src.edu.ucsb.cs56.S12.esterkin.Game.java", "BodyUseAPI": [], "Fixed commit": "9bc3bb843237654d51cbeaedd4fd952b77853a24", "Url": "https://api.github.com/repos/ucsb-cs56-projects/cs56-games-guess-the-capital", "Date": "2016-02-19T04:21:08Z"},
{"Line": "=>250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((score) >= 73) return \"C\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/7030/buggy-version/src.edu.ucsb.cs56.S12.esterkin.Game.java", "BodyUseAPI": [], "Fixed commit": "9bc3bb843237654d51cbeaedd4fd952b77853a24", "Url": "https://api.github.com/repos/ucsb-cs56-projects/cs56-games-guess-the-capital", "Date": "2016-02-19T04:21:08Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fabRect.contains(((int) (ev.getX())), ((int) (ev.getY())))) { return false; }else { return (minInterceptionLayoutY < ((int) (com.nineoldandroids.view.ViewHelper.getY(mInterceptionLayout)))) || (moving && (((mScrollable.getCurrentScrollY()) - diffY) < 0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/8502/buggy-version/observablescrollview-samples.src.main.java.com.github.ksoichiro.android.observablescrollview.samples.SlidingUpBaseActivity.java", "BodyUseAPI": [], "Fixed commit": "32c78d528a813689475d97f81588257a195e9481", "Url": "https://api.github.com/repos/ksoichiro/Android-ObservableScrollView", "Date": "2015-03-16T04:45:41Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fi.istrange.traveler.dao.CredentialDao.fetchByUsername(java.lang.String,org.jooq.DSLContext)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(isCheckSuccessful(credentials, hashedPassword))) { throw new javax.ws.rs.NotAuthorizedException(\"Invalid credentials\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/5584/buggy-version/src.main.java.fi.istrange.traveler.auth.Authenticator.java", "BodyUseAPI": [], "Fixed commit": "c1a144d209736f0381b4f1ef46ff5b6e3b477472", "Url": "https://api.github.com/repos/kujiraOo/traveler-back", "Date": "2017-04-18T20:43:48Z"},
{"Line": "=>315", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pointer_start) >= 0) pointer_start = (codechicken.multipart.handler.MultipartSaveLoad.loadingWorld().getWorldTime()) - (pointer_start);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/3212/buggy-version/common.mrtjp.projectred.integration.InstancedRsGateLogic.java", "BodyUseAPI": [], "Fixed commit": "572220710dd5ccb9bc2a06e71f682b1237daa0f9", "Url": "https://api.github.com/repos/Vexatos/ProjectRed", "Date": "2013-09-22T13:40:35Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.gedappgui.gedappgui.LessonSteps.getBitmapFromAsset(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (lesson_img != null) { lesson_imageView.setImageBitmap(lesson_img); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/3209/buggy-version/GEDAppGUI.app.src.main.java.com.gedappgui.gedappgui.LessonSteps.java", "BodyUseAPI": ["android.widget.ImageView.setImageBitmap(android.graphics.Bitmap)"], "Fixed commit": "b044bbbce77167cd361cc53d446f7dbd35a09ca8", "Url": "https://api.github.com/repos/MyannaHarris/GEDMobileApp", "Date": "2017-04-10T00:36:27Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mFlight.getAction()) == (net.bertware.flybsca.api.FlightAction.DEPARTING)) { ((android.widget.TextView) (findViewById(R.id.text_datetime_estimated_departure_title))).setText(R.string.detail_estimated_departure); ((android.widget.TextView) (findViewById(R.id.text_datetime_planned))).setText(java.lang.String.format(getString(R.string.detail_flight_departure_planned), dtf.print(mFlight.getPlannedDateTime()))); }else { ((android.widget.TextView) (findViewById(R.id.text_datetime_estimated_departure_title))).setText(R.string.detail_estimated_arrival); ((android.widget.TextView) (findViewById(R.id.text_datetime_planned))).setText(java.lang.String.format(getString(R.string.detail_flight_arrival_planned), dtf.print(mFlight.getPlannedDateTime()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/1471/buggy-version/FlyBSCA.src.main.java.net.bertware.flybsca.FlightDetailActivity.java", "BodyUseAPI": ["org.joda.time.format.DateTimeFormatter.print(mFlight.getPlannedDateTime())", "((android.widget.TextView) (findViewById(R.id.text_datetime_planned))).setText(java.lang.String)", "((android.widget.TextView) (findViewById(R.id.text_datetime_planned))).setText(java.lang.String)", "org.joda.time.format.DateTimeFormatter.print(mFlight.getPlannedDateTime())", "net.bertware.flybsca.api.Flight.getPlannedDateTime()", "net.bertware.flybsca.api.Flight.getPlannedDateTime()", "java.lang.String.format(getString(R.string.detail_flight_departure_planned),dtf.print(mFlight.getPlannedDateTime()))", "java.lang.String.format(getString(R.string.detail_flight_arrival_planned),dtf.print(mFlight.getPlannedDateTime()))"], "Fixed commit": "c717fe98796f177a6a8ab50afed8aecc89b46b0d", "Url": "https://api.github.com/repos/Bertware/FlyBSCA", "Date": "2017-07-01T22:02:46Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!enabled) mods.panicMod.onUpdate();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/5358/buggy-version/src.tk.wurst_client.WurstClient.java", "BodyUseAPI": [], "Fixed commit": "ce8ab31e83ea6e2d7b40cebcdb3c62c3ec8bc8de", "Url": "https://api.github.com/repos/Wurst-Imperium/Wurst-MC-1.10", "Date": "2016-11-03T14:49:54Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mBuffer.isEmpty())) { mShouldClose = true; }else { mContext.unbindService(this); dataService = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/3575/buggy-version/src.org.ohmage.probemanager.ProbeWriter.java", "BodyUseAPI": [], "Fixed commit": "a0b7f6b7affd156daecbf9f09330e524dd70170c", "Url": "https://api.github.com/repos/ohmage/ohmage-probe-library", "Date": "2014-05-23T21:54:23Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mShouldClose) close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/3575/buggy-version/src.org.ohmage.probemanager.ProbeWriter.java", "BodyUseAPI": [], "Fixed commit": "a0b7f6b7affd156daecbf9f09330e524dd70170c", "Url": "https://api.github.com/repos/ohmage/ohmage-probe-library", "Date": "2014-05-23T21:54:23Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fErrors.isEmpty()) { return this.getClass().getName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/717/buggy-version/src.main.java.org.junit.runners.model.MultipleFailureException.java", "BodyUseAPI": [], "Fixed commit": "6738849f73271f6a497a4b016f61aab039cedef0", "Url": "https://api.github.com/repos/ShengyuanLu/junit", "Date": "2015-07-02T04:44:58Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(solver.isSolving())) { restartSolver(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/71/buggy-version/hqp-engine.src.main.java.org.jboss.qa.brms.hqp.HudsonQueueSolverImpl.java", "BodyUseAPI": [], "Fixed commit": "257b9e8a34ff26846a236fb2f26cee23f9c6d9ae", "Url": "https://api.github.com/repos/rsynek/hudson-queue-planning", "Date": "2012-11-24T17:10:02Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(optimizer.isSuccess())) { exceptions.addAll(optimizer.getExceptions()); return newResult; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/6501/buggy-version/src.com.cirnoteam.cmm.semantic.Compiler.java", "BodyUseAPI": ["java.util.List<java.lang.Exception>.addAll(optimizer.getExceptions())", "com.cirnoteam.cmm.semantic.Optimizer.getExceptions()"], "Fixed commit": "d83298b0f02470e6513a846a256443fa97e5a929", "Url": "https://api.github.com/repos/yifanc62/CMMCompiler", "Date": "2017-12-11T10:59:54Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (key == null) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/4561/buggy-version/volleyplus.src.main.java.com.android.volley.cache.DiskLruCacheUtil.java", "BodyUseAPI": [], "Fixed commit": "36cecac31c9f665d0bc5695c50c89e294461775c", "Url": "https://api.github.com/repos/jaydenyu93/VolleyPlus", "Date": "2017-01-06T15:34:22Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (args[1].equals(p.getName())) { p.sendMessage(((((\"[\" + (org.bukkit.ChatColor.BLUE)) + (plugin.getDescription().getName())) + (org.bukkit.ChatColor.RESET)) + \"] You cannot remove your name from the list. To turn off the plugin, use /pp toggle.\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/968/buggy-version/src.bl4ckscor3.plugin.playerping.commands.CMDPlayerPing.java", "BodyUseAPI": ["org.bukkit.entity.Player.sendMessage(((((\"[\" + (org.bukkit.ChatColor.BLUE)) + (plugin.getDescription().getName())) + (org.bukkit.ChatColor.RESET)) + \"] You cannot remove your name from the list. To turn off the plugin, use /pp toggle.\"))"], "Fixed commit": "fe479692ddf226467da56931144721e66e8277b9", "Url": "https://api.github.com/repos/bl4ckscor3/PlayerPing", "Date": "2015-02-07T23:29:52Z"},
{"Line": "=>319", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (operation instanceof com.owncloud.android.operations.GetSharesForFileOperation) { if ((result.getCode()) == (com.owncloud.android.lib.common.operations.RemoteOperationResult.ResultCode.MAINTENANCE_MODE)) { message = res.getString(R.string.maintenance_mode); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/2969/buggy-version/src.com.owncloud.android.utils.ErrorMessageAdapter.java", "BodyUseAPI": [], "Fixed commit": "517fcbd6d3c56adb73c6587277276014b7b649d5", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2016-12-28T09:27:05Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getDataSelection().getTimes()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (selectedTimes != null) { int len = selectedTimes.size(); if (((usTime.get(((int) (selectedTimes.get(0))))) != (wsTime.get(((int) (selectedTimes.get(0)))))) || ((usTime.get(((int) (selectedTimes.get((len - 1)))))) != (wsTime.get(((int) (selectedTimes.get((len - 1)))))))) { userErrorMessage(\"w grid selected times are different from u grid \"); return false; } }else if ((wdc.getSelectedDateTimes()) != null) { selectedTimes = wdc.getSelectedDateTimes(); int len = selectedTimes.size(); if (((usTime.get(0)) != (wsTime.get(0))) || ((usTime.get((len - 1))) != (wsTime.get((len - 1))))) { userErrorMessage(\"w grid selected times are different from u grid \"); return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/7920/buggy-version/src.ucar.unidata.idv.control.VolumeVectorControl.java", "BodyUseAPI": ["java.util.List.get(int)", "java.util.List.size()", "java.util.List.get(java.lang.Object)", "java.util.List.get(int)", "java.util.List.get(java.lang.Object)", "java.util.List.get(java.lang.Object)", "java.util.List.get(int)", "java.util.List.get(java.lang.Object)", "java.util.List.get(int)"], "Fixed commit": "068437bd47c9182aff061d8557929efd9376472b", "Url": "https://api.github.com/repos/Unidata/IDV", "Date": "2016-03-15T20:06:29Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((description.length()) >= threshhold) { this.description = description.substring(0, (threshhold - 1)); }else { this.description = description; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/5635/buggy-version/persistence.src.main.java.org.openstack.atlas.service.domain.events.entities.Event.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "6ad8c7b42f03152111cee67a683d008cdb3cbf61", "Url": "https://api.github.com/repos/lbrackspace/atlas-lb", "Date": "2013-02-06T16:01:21Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.location.getBlock().getType()) == (org.bukkit.Material.CHEST)) { org.bukkit.block.Chest chest = ((org.bukkit.block.Chest) (this.location.getBlock().getState())); chest.getInventory().clear(); this.location.getBlock().setType(Material.AIR); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/7683/buggy-version/me.kevinnovak.treasurehunt.TreasureChest.java", "BodyUseAPI": ["this.location.getBlock().getState()", "org.bukkit.Location.getBlock()", "org.bukkit.Location.getBlock()", "this.location.getBlock().setType(Material.AIR)"], "Fixed commit": "fdaf594bbfdb2eaafff8cb6683aa7ba1f901edcb", "Url": "https://api.github.com/repos/KevinNovak/TreasureHunt", "Date": "2017-07-02T05:39:34Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sprite instanceof bubolo.graphics.TankSprite) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/4747/buggy-version/bubolo.src.bubolo.graphics.Graphics.java", "BodyUseAPI": [], "Fixed commit": "8937e855873e7c2e681bada47a94561178356bce", "Url": "https://api.github.com/repos/BU-CS673/bubolo", "Date": "2014-04-08T22:55:59Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((videoInfo != null) && (!(videoInfo.errors.isEmpty()))) { android.util.Log.e(org.schabi.newpipe.VideoItemDetailFragment.TAG, \"OCCURRED ERRORS DURING EXTRACTION:\"); for (java.lang.Exception e : videoInfo.errors) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/8665/buggy-version/app.src.main.java.org.schabi.newpipe.VideoItemDetailFragment.java", "BodyUseAPI": [], "Fixed commit": "d0bab6183ac0d557885f6db70505b59fa5aca254", "Url": "https://api.github.com/repos/TeamNewPipe/NewPipe", "Date": "2016-02-24T21:12:13Z"},
{"Line": "=>622", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (needOr) { sql.append(\" OR \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/864/buggy-version/src.org.ohmage.query.impl.DocumentQueries.java", "BodyUseAPI": [], "Fixed commit": "973c94269b9952a91eb0b1b55fd0c4f2cb22e2c9", "Url": "https://api.github.com/repos/cens/ohmageServer", "Date": "2012-04-03T19:24:28Z"},
{"Line": "=>594", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (needOr) { sql.append(\" OR \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/864/buggy-version/src.org.ohmage.query.impl.DocumentQueries.java", "BodyUseAPI": [], "Fixed commit": "973c94269b9952a91eb0b1b55fd0c4f2cb22e2c9", "Url": "https://api.github.com/repos/cens/ohmageServer", "Date": "2012-04-03T19:24:28Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eu.se_bastiaan.popcorntimeremote.fragments.PlayerControllerFragment.2.getClient()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (client == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/8632/buggy-version/app.src.main.java.eu.se_bastiaan.popcorntimeremote.fragments.PlayerControllerFragment.java", "BodyUseAPI": [], "Fixed commit": "9c1365e434c5bf058a8d78f9664666fb449a623a", "Url": "https://api.github.com/repos/se-bastiaan/PopcornTimeRemote-Android", "Date": "2014-11-22T10:00:17Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/8632/buggy-version/app.src.main.java.eu.se_bastiaan.popcorntimeremote.fragments.PlayerControllerFragment.java", "BodyUseAPI": [], "Fixed commit": "9c1365e434c5bf058a8d78f9664666fb449a623a", "Url": "https://api.github.com/repos/se-bastiaan/PopcornTimeRemote-Android", "Date": "2014-11-22T10:00:17Z"},
{"Line": "=>346", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/8632/buggy-version/app.src.main.java.eu.se_bastiaan.popcorntimeremote.fragments.MovieControllerFragment.java", "BodyUseAPI": [], "Fixed commit": "9c1365e434c5bf058a8d78f9664666fb449a623a", "Url": "https://api.github.com/repos/se-bastiaan/PopcornTimeRemote-Android", "Date": "2014-11-22T10:00:17Z"},
{"Line": "=>306", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fr.robincarozzani.pamaja.Launcher.masterKey) != null) { for (int i = 0; i < (fr.robincarozzani.pamaja.Launcher.masterKey.length); ++i) { fr.robincarozzani.pamaja.Launcher.masterKey[i] = 0; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/7034/buggy-version/Pamaja.src.fr.robincarozzani.pamaja.Launcher.java", "BodyUseAPI": [], "Fixed commit": "8456952d0b42e574861c1e2c11cfc87d358ecf56", "Url": "https://api.github.com/repos/RobinCarozzani/Pamaja", "Date": "2016-03-13T18:33:32Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isDefined(componentId))) { java.lang.String[] context = ((java.lang.String[]) (pageContext.getRequest().getAttribute(com.stratelia.webactiv.util.viewGenerator.html.pdc.BaseClassificationPdCTag.BROWSING_CONTEXT))); componentId = context[3]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/7714/buggy-version/web-core.src.main.java.com.stratelia.webactiv.util.viewGenerator.html.pdc.BaseClassificationPdCTag.java", "BodyUseAPI": [], "Fixed commit": "df2a97851c126f89d8b02b97f6bf37cf296bd450", "Url": "https://api.github.com/repos/Silverpeas/Silverpeas-Core", "Date": "2011-08-05T14:48:41Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.learnit.LearnIt.data_types.DBHelper.writeToDB(edtWord.getText().toString(),edtTrans.getText().toString())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (exitCode == (com.learnit.LearnIt.data_types.DBHelper.EXIT_CODE_OK)) { de.keyboardsurfer.android.widget.crouton.Crouton.makeText(this, getString(R.string.crouton_word_saved, edtWord.getText().toString()), Style.CONFIRM).show(); }else if (exitCode == (com.learnit.LearnIt.data_types.DBHelper.EXIT_CODE_WORD_ALREADY_IN_DB)) { de.keyboardsurfer.android.widget.crouton.Crouton.makeText(this, getString(R.string.crouton_word_already_present, edtWord.getText().toString()), Style.ALERT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/8797/buggy-version/src.com.learnit.LearnIt.activities.EditWord.java", "BodyUseAPI": [], "Fixed commit": "5dde92d98d855fd7b05e6dc74ba1e17e689a8385", "Url": "https://api.github.com/repos/niosus/LearnIt", "Date": "2014-05-17T16:30:16Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.netease.LDNetDiagnoUtils.Client.client) != null) { android.util.Log.i(\"client-----------\", Client.client.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/979/buggy-version/app.src.main.java.com.qiniu.liuhanlin.android_detection.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "41de7c1210ca30bc1a2ed75c84df09a08549bb02", "Url": "https://api.github.com/repos/jiaojunjiahanlin/android-detection", "Date": "2016-11-09T05:43:42Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((emp.getPicture()) != null) { java.lang.String picture = new java.lang.String(emp.getPicture(), \"UTF-8\"); session.setAttribute(\"activeUserPicture\", picture); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/3306/buggy-version/SiriusOrderClient.src.com.sirius.order.client.action.LoginAction.java", "BodyUseAPI": ["com.sirius.employeews.employee.wsdl.EmployeeBean.getPicture()"], "Fixed commit": "2776a795d8200d2f1946e722bc865ee10da2a07b", "Url": "https://api.github.com/repos/corte128/Sirius_Order_Project_Workspace", "Date": "2017-09-22T18:19:13Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(file.exists())) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/8153/buggy-version/Shared.src.org.bimserver.plugins.classloaders.FileJarClassLoader.java", "BodyUseAPI": [], "Fixed commit": "c109cd9e267f4dce3c3973304f48579376c4050b", "Url": "https://api.github.com/repos/catenda/BIMserver", "Date": "2013-12-16T14:30:29Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((employeeOps) != null) { employeeOps.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/5089/buggy-version/EmployeeApplication.app.src.main.java.com.atish.employeeapplication.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "d5e392fd36ba7ad5356c6245c36c7368908585f8", "Url": "https://api.github.com/repos/atish1111/AndroidApp", "Date": "2017-04-04T13:38:24Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((employeeOps) != null) { employeeOps.open(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/5089/buggy-version/EmployeeApplication.app.src.main.java.com.atish.employeeapplication.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "d5e392fd36ba7ad5356c6245c36c7368908585f8", "Url": "https://api.github.com/repos/atish1111/AndroidApp", "Date": "2017-04-04T13:38:24Z"},
{"Line": "=>634", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((otherEntity instanceof asteroids.model.Ship) && (entity instanceof asteroids.model.Bullet)) { if ((((asteroids.model.Bullet) (entity)).getBulletSource()) == otherEntity) continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/1603/buggy-version/src.asteroids.model.World.java", "BodyUseAPI": [], "Fixed commit": "391ef244b09a7d0871d48e1c14556726683a67b2", "Url": "https://api.github.com/repos/DriesDM/OOPProject", "Date": "2017-04-20T13:25:00Z"},
{"Line": "=>631", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((entity instanceof asteroids.model.Ship) && (otherEntity instanceof asteroids.model.Bullet)) { if ((((asteroids.model.Bullet) (otherEntity)).getBulletSource()) == entity) continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/1603/buggy-version/src.asteroids.model.World.java", "BodyUseAPI": [], "Fixed commit": "391ef244b09a7d0871d48e1c14556726683a67b2", "Url": "https://api.github.com/repos/DriesDM/OOPProject", "Date": "2017-04-20T13:25:00Z"},
{"Line": "=>299", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((editMessage.getText().toString().length()) == 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/3425/buggy-version/app.src.main.java.ru.velkonost.lume.activity.MessageActivity.java", "BodyUseAPI": [], "Fixed commit": "ca2e98199a6064ec05b4497e6102e920751c03a5", "Url": "https://api.github.com/repos/Velkonost/Lume", "Date": "2017-01-06T10:32:06Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (init) init = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/514/buggy-version/app.src.main.java.tk.ubublik.redivansion.gamelogic.graphics.Polygon.java", "BodyUseAPI": [], "Fixed commit": "d10ed6d9d31c9c2dd1f2b1f570d6f7c9ac31d830", "Url": "https://api.github.com/repos/bublikdrdrdr/Redivansion", "Date": "2017-09-08T22:14:35Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (iObject instanceof com.orientechnologies.orient.core.sql.query.OLiveQuery<?>) className = iObject.getClass().getName().getBytes(\"UTF-8\"); else if (iObject instanceof com.orientechnologies.orient.core.sql.query.OSQLSynchQuery<?>) className = com.orientechnologies.orient.core.serialization.serializer.stream.OStreamSerializerAnyStreamable.QUERY_COMMAND_CLASS_ASBYTES; else if (iObject instanceof com.orientechnologies.orient.core.sql.OCommandSQL) className = com.orientechnologies.orient.core.serialization.serializer.stream.OStreamSerializerAnyStreamable.SQL_COMMAND_CLASS_ASBYTES; else if (iObject instanceof com.orientechnologies.orient.core.command.script.OCommandScript) className = com.orientechnologies.orient.core.serialization.serializer.stream.OStreamSerializerAnyStreamable.SCRIPT_COMMAND_CLASS_ASBYTES; else { if (iObject == null) className = null; else className = iObject.getClass().getName().getBytes(\"UTF-8\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/3978/buggy-version/core.src.main.java.com.orientechnologies.orient.core.serialization.serializer.stream.OStreamSerializerAnyStreamable.java", "BodyUseAPI": ["iObject.getClass().getName()", "com.orientechnologies.orient.core.command.OCommandRequestText.getClass()", "iObject.getClass().getName().getBytes(java.lang.String)", "iObject.getClass().getName().getBytes(java.lang.String)", "iObject.getClass().getName()", "com.orientechnologies.orient.core.command.OCommandRequestText.getClass()"], "Fixed commit": "7672f7af9115dbeb0121ea3d113c40ea3c9b1286", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2016-08-08T16:27:48Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Matcher.group(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (title == null) { title = matcher.group(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/6628/buggy-version/app.src.main.java.com.door43.translationstudio.rendering.HtmlRenderer.java", "BodyUseAPI": [], "Fixed commit": "27f425a02c4567c157c5e9119719700b601cfd37", "Url": "https://api.github.com/repos/jshuma/ts-android", "Date": "2015-12-03T02:55:26Z"},
{"Line": "=>2053", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sb.length()) > 0) { if (i > 0) { java.lang.String p = parts[(i - 1)]; java.lang.String t = com.skynav.cap2tt.app.Converter.parseText(p, false); if (t != null) sb.append(t); else throw new java.lang.IllegalStateException(getReporter().message(\"x.021\", \"unexpected text field parse state: part {0}\", p).toText()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/6259/buggy-version/ttt-cap2tt.src.main.java.com.skynav.cap2tt.app.Converter.java", "BodyUseAPI": ["java.lang.StringBuffer.append(java.lang.String)"], "Fixed commit": "7beab3d50564cdd98aa9a83c747752f35f89faf2", "Url": "https://api.github.com/repos/skynav/ttt", "Date": "2015-09-28T02:11:49Z"},
{"Line": "=>2822", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.charAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (c == '\\t') c = '_';", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/6259/buggy-version/ttt-cap2tt.src.main.java.com.skynav.cap2tt.app.Converter.java", "BodyUseAPI": [], "Fixed commit": "7beab3d50564cdd98aa9a83c747752f35f89faf2", "Url": "https://api.github.com/repos/skynav/ttt", "Date": "2015-09-28T02:11:49Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.bestread.app.bestread.SessionManager.Authorization()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(authUrl.isEmpty())) { android.content.Intent intent = new android.content.Intent(android.content.Intent.ACTION_VIEW, android.net.Uri.parse(authUrl)); startActivity(intent); }else { android.widget.Toast toast = android.widget.Toast.makeText(getApplicationContext(), \"Couldn't Authorize Maybe No Internet ?\", Toast.LENGTH_SHORT); toast.show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/4978/buggy-version/app.src.main.java.com.bestread.app.bestread.MainActivity.java", "BodyUseAPI": ["android.net.Uri.parse(java.lang.String)"], "Fixed commit": "5c5478588241da82815a9765859e8f510aa83150", "Url": "https://api.github.com/repos/alfredsamy/BestRead", "Date": "2016-12-05T12:18:06Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((port > 0) && (port < 65535)) { spark.Spark.port(port); }else { org.vitrivr.cineast.api.websocket.WebsocketAPI.LOGGER.warn(\"The specified port {} is not valid. Fallback to default port.\", port); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/148/buggy-version/src.org.vitrivr.cineast.api.websocket.WebsocketAPI.java", "BodyUseAPI": ["spark.Spark.port(int)", "org.apache.logging.log4j.Logger.warn(java.lang.String,int)"], "Fixed commit": "aabe2fa55a24a2c32f8b15f26dd66651464744de", "Url": "https://api.github.com/repos/ppanopticon/cineast", "Date": "2017-01-23T23:10:18Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<com.hadjiminap.kwimobile.Lesson>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((less_on.getLength()) == 4) { lessons[time][day].setText(android.text.Html.fromHtml((((((((((((((((((\"<b> \" + (less_on.getSubject().get(0))) + \"</b><br /><small>\") + (changes[0])) + (less_on.getRooms().get(0))) + \"</font>\") + \" \") + (changes[1])) + (less_on.getRooms().get(1))) + \"</font>\") + \" <br />\") + (changes[2])) + (less_on.getRooms().get(2))) + \" \") + \"</font>\") + (changes[3])) + (less_on.getRooms().get(3))) + \"</small></font></p>\"))); }else if ((less_on.getLength()) == 5) { lessons[time][day].setText(android.text.Html.fromHtml((((((((((((((((((((((\"<b> \" + (less_on.getSubject().get(0))) + \"</b><br /><small>\") + (changes[0])) + (less_on.getRooms().get(0))) + \"</font>\") + \" \") + (changes[1])) + (less_on.getRooms().get(1))) + \"</font>\") + \" <br />\") + (changes[2])) + (less_on.getRooms().get(2))) + \" \") + \"</font>\") + (changes[3])) + (less_on.getRooms().get(3))) + \"</font>\") + \" <br />\") + (changes[4])) + (less_on.getRooms().get(4))) + \"</small></font></p>\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/2264/buggy-version/app.src.main.java.com.hadjiminap.kwimobile.Timetable.java", "BodyUseAPI": ["less_on.getSubject().get(int)", "android.text.Html.fromHtml((((((((((((((((((\"<b> \" + (less_on.getSubject().get(0))) + \"</b><br /><small>\") + (changes[0])) + (less_on.getRooms().get(0))) + \"</font>\") + \" \") + (changes[1])) + (less_on.getRooms().get(1))) + \"</font>\") + \" <br />\") + (changes[2])) + (less_on.getRooms().get(2))) + \" \") + \"</font>\") + (changes[3])) + (less_on.getRooms().get(3))) + \"</small></font></p>\"))", "less_on.getRooms().get(int)", "com.hadjiminap.kwimobile.Lesson.getLength()", "com.hadjiminap.kwimobile.Lesson.getRooms()", "lessons[time][day].setText(android.text.Html.fromHtml((((((((((((((((((\"<b> \" + (less_on.getSubject().get(0))) + \"</b><br /><small>\") + (changes[0])) + (less_on.getRooms().get(0))) + \"</font>\") + \" \") + (changes[1])) + (less_on.getRooms().get(1))) + \"</font>\") + \" <br />\") + (changes[2])) + (less_on.getRooms().get(2))) + \" \") + \"</font>\") + (changes[3])) + (less_on.getRooms().get(3))) + \"</small></font></p>\")))", "less_on.getRooms().get(int)", "com.hadjiminap.kwimobile.Lesson.getRooms()", "less_on.getRooms().get(int)", "less_on.getRooms().get(int)", "less_on.getRooms().get(int)", "less_on.getRooms().get(int)", "lessons[time][day].setText(android.text.Html.fromHtml((((((((((((((((((((((\"<b> \" + (less_on.getSubject().get(0))) + \"</b><br /><small>\") + (changes[0])) + (less_on.getRooms().get(0))) + \"</font>\") + \" \") + (changes[1])) + (less_on.getRooms().get(1))) + \"</font>\") + \" <br />\") + (changes[2])) + (less_on.getRooms().get(2))) + \" \") + \"</font>\") + (changes[3])) + (less_on.getRooms().get(3))) + \"</font>\") + \" <br />\") + (changes[4])) + (less_on.getRooms().get(4))) + \"</small></font></p>\")))", "com.hadjiminap.kwimobile.Lesson.getSubject()", "com.hadjiminap.kwimobile.Lesson.getRooms()", "android.text.Html.fromHtml((((((((((((((((((((((\"<b> \" + (less_on.getSubject().get(0))) + \"</b><br /><small>\") + (changes[0])) + (less_on.getRooms().get(0))) + \"</font>\") + \" \") + (changes[1])) + (less_on.getRooms().get(1))) + \"</font>\") + \" <br />\") + (changes[2])) + (less_on.getRooms().get(2))) + \" \") + \"</font>\") + (changes[3])) + (less_on.getRooms().get(3))) + \"</font>\") + \" <br />\") + (changes[4])) + (less_on.getRooms().get(4))) + \"</small></font></p>\"))", "com.hadjiminap.kwimobile.Lesson.getRooms()", "less_on.getSubject().get(int)", "com.hadjiminap.kwimobile.Lesson.getRooms()", "com.hadjiminap.kwimobile.Lesson.getSubject()", "com.hadjiminap.kwimobile.Lesson.getRooms()", "less_on.getRooms().get(int)", "com.hadjiminap.kwimobile.Lesson.getRooms()", "com.hadjiminap.kwimobile.Lesson.getRooms()", "com.hadjiminap.kwimobile.Lesson.getRooms()", "less_on.getRooms().get(int)", "less_on.getRooms().get(int)"], "Fixed commit": "7e4e82f6b8d50b9458e2699ba1860c3df4a70642", "Url": "https://api.github.com/repos/Hadjimina/KWI_Mobile", "Date": "2014-12-11T15:28:26Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!skipOrgCheck) { hql += generateOrgAuthQuery(\"collection.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/8668/buggy-version/api.src.main.java.org.ednovo.gooru.infrastructure.persistence.hibernate.CollectionRepositoryHibernate.java", "BodyUseAPI": [], "Fixed commit": "34229d84841a9062542e6931c467443cdbd6ff96", "Url": "https://api.github.com/repos/prakashraja89/Gooru-Core-API", "Date": "2015-08-04T15:33:54Z"},
{"Line": "=>331", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(review.getProfilePhotoUrl().isEmpty())) { com.squareup.picasso.Picasso.with(getActivity()).load(review.getProfilePhotoUrl()).noPlaceholder().into(mProfilePhotoImageView); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/7076/buggy-version/app.src.main.java.com.huynhtinh.android.nekofee.controler.fragment.CafeFragment.java", "BodyUseAPI": ["model.Review.getProfilePhotoUrl()", "com.squareup.picasso.Picasso.with(getActivity()).load(review.getProfilePhotoUrl()).noPlaceholder().into(android.widget.ImageView)", "com.squareup.picasso.Picasso.with(getActivity()).load(review.getProfilePhotoUrl())", "com.squareup.picasso.Picasso.with(getActivity()).load(review.getProfilePhotoUrl()).noPlaceholder()"], "Fixed commit": "49749fbe807c530714f785ba80be667cd69aa62d", "Url": "https://api.github.com/repos/TinhHuynh/Nekofee", "Date": "2017-06-03T11:42:43Z"},
{"Line": "=>602", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isRhoTip[node.getChild((childIndex ^ 1)).getNr()])) { init.conditionsOnP[saNodeState] = g.conditionsOnP[saNodeState]; init.conditionsOnG[saNodeState] = g.conditionsOnG[saNodeState].scalarMultiply(((psi[((saNodeState * (totalIntervals)) + index)]) * (1 - (r[((saNodeState * (totalIntervals)) + index)])))); }else { init.conditionsOnP[saNodeState] = (g.conditionsOnP[saNodeState]) * (1 - (rho[((saNodeState * (totalIntervals)) + index)])); init.conditionsOnG[saNodeState] = g.conditionsOnG[saNodeState].scalarMultiply(((rho[((saNodeState * (totalIntervals)) + index)]) * (1 - (r[((saNodeState * (totalIntervals)) + index)])))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/6584/buggy-version/src.beast.evolution.speciation.BirthDeathMigrationModel.java", "BodyUseAPI": [], "Fixed commit": "ab3197762aebe4c990553d0b23a135c889d904da", "Url": "https://api.github.com/repos/jscire/bdmm", "Date": "2017-04-27T16:14:53Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.HttpURLConnection.getResponseCode()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (state > 400) { bis = new java.io.BufferedInputStream(conn.getErrorStream()); }else { bis = new java.io.BufferedInputStream(conn.getInputStream()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/5630/buggy-version/app.src.main.java.com.zpauly.githubapp.utils.HtmlImageGetter.java", "BodyUseAPI": [], "Fixed commit": "651fff771bede184c763eb57d0ec6ad8e6961b86", "Url": "https://api.github.com/repos/zpauly/GitHub_Android", "Date": "2016-09-11T08:53:24Z"},
{"Line": "=>343", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(intent.getBooleanExtra(\"WIFI\", false))) { toggleWindowTouchable(); android.os.Handler handler = new android.os.Handler(); handler.postDelayed(new java.lang.Runnable() { public void run() { tabHost.setCurrentTab(0); } }, 1250); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/8996/buggy-version/app.src.main.java.group5.battleship.src.views.GameActivity.java", "BodyUseAPI": [], "Fixed commit": "32f1809afdb6e89bad6331c70ecbe49993d2f87e", "Url": "https://api.github.com/repos/hribhrib/BattleShip", "Date": "2017-05-18T19:00:27Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((announcement.getPicture()) == null) { announcement.setPicture(((android.graphics.Bitmap) (extrasEntrada.getParcelable(\"picture\")))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/7817/buggy-version/app.src.main.java.views.AnnouncementRegisterActivity.java", "BodyUseAPI": ["models.Announcement.setPicture(((android.graphics.Bitmap) (extrasEntrada.getParcelable(\"picture\"))))"], "Fixed commit": "e4d92b258c73650c20e6a043d71f790de6eda633", "Url": "https://api.github.com/repos/fjmartins/express-delivery", "Date": "2016-05-16T18:46:38Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.remove(GMLTokens.LOCATION)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (java.lang.Integer.class.isInstance(address)) { address = java.lang.Double.valueOf(((double) (((java.lang.Integer) (address)).intValue()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/8520/buggy-version/src.peersim.dht.topology.gml.GMLParser.java", "BodyUseAPI": [], "Fixed commit": "9d2cdc2040f5b7efe82cdca87e96bdcc28457897", "Url": "https://api.github.com/repos/tbaumeist/peersim-generic-DHT", "Date": "2017-11-27T06:28:23Z"},
{"Line": "=>322", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.wst.sse.core.internal.provisional.text.ITextRegion.getType()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (regionType == (org.eclipse.angularjs.internal.core.documentModel.parser.AngularRegionContext.ANGULAR_EXPRESSION_CONTENT)) { return org.eclipse.angularjs.internal.ui.AngularELWordFinder.findWord(textViewer.getDocument(), offset); }else if (DOMRegionContext.XML_CONTENT.equals(regionType)) { return org.eclipse.angularjs.internal.ui.AngularELWordFinder.findWord(textViewer.getDocument(), offset); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/1356/buggy-version/org.eclipse.angularjs.ui.src.org.eclipse.angularjs.internal.ui.taginfo.HTMLAngularTagInfoHoverProcessor.java", "BodyUseAPI": ["DOMRegionContext.XML_CONTENT.equals(java.lang.String)"], "Fixed commit": "866c1faaa56edf79582f44018d05522e394bc827", "Url": "https://api.github.com/repos/angelozerr/angularjs-eclipse", "Date": "2014-08-22T11:26:07Z"},
{"Line": "=>354", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dir.getName().matches(currentDirName)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/1949/buggy-version/src.nameserver.meta.Meta.java", "BodyUseAPI": [], "Fixed commit": "a90aa74030c04fe017bd86d07eb1d6a773e229ac", "Url": "https://api.github.com/repos/dshnightmare/DistributedFileSystem", "Date": "2014-07-04T15:46:54Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.water.billing.service.biz.CustomerService.findById(customer.getId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (customerInDB != null) customer.setMeters(customerInDB.getMeters());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/1973/buggy-version/src.main.java.org.water.billing.controller.biz.CustomerController.java", "BodyUseAPI": ["org.water.billing.entity.biz.Customer.setMeters(customerInDB.getMeters())", "org.water.billing.entity.biz.Customer.getMeters()"], "Fixed commit": "972e3f27f08f7f97dc438dfddf20e32861a6f4e5", "Url": "https://api.github.com/repos/szc1978/WaterBilling", "Date": "2017-07-02T09:41:54Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.estAssis()) bus.demanderPlaceDebout(this);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/2017/buggy-version/src.tec.PassagerStandard.java", "BodyUseAPI": [], "Fixed commit": "e6f45abc2aad75c873102614a56afb2a8c8c3f94", "Url": "https://api.github.com/repos/eemanon/LeVraiJauge4", "Date": "2017-12-18T18:29:15Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (numeroArret == (this.destination)) bus.demanderSortie(this);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/2017/buggy-version/src.tec.PassagerStandard.java", "BodyUseAPI": [], "Fixed commit": "e6f45abc2aad75c873102614a56afb2a8c8c3f94", "Url": "https://api.github.com/repos/eemanon/LeVraiJauge4", "Date": "2017-12-18T18:29:15Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sessionFactory) == null) start();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/4267/buggy-version/src.main.java.com.acuo.persist.core.Neo4jPersistService.java", "BodyUseAPI": [], "Fixed commit": "7c9d1a9ddbdc9142bb91d829cb7006fc92393ea5", "Url": "https://api.github.com/repos/anaxo-io/acuo-persist", "Date": "2016-11-29T09:55:30Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (cleanStdErr.equals(\"\")) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/8651/buggy-version/src.net.bitpot.railways.parser.RailsRoutesParser.java", "BodyUseAPI": [], "Fixed commit": "5994217510ea137f15e6368cb6f7e6f154a0c691", "Url": "https://api.github.com/repos/basgren/railways", "Date": "2014-10-30T23:10:35Z"},
{"Line": "=>792", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.example.fantasyfootballrankings.ClassFiles.ManageInput.confirmInternet(cont)) { if (((android.widget.TextView) (((android.app.Activity) (cont)).findViewById(R.id.hostName))).getText().toString().contains(\"ESPN\")) { clearDataESPNInit(((android.widget.TextView) (v)), newImport, cont); } }else { android.widget.Toast.makeText(cont, \"No internet connection available, can't refresh the league\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/9116/buggy-version/FFR.src.com.example.fantasyfootballrankings.Pages.ImportLeague.java", "BodyUseAPI": ["android.widget.Toast.makeText(android.content.Context,java.lang.String,Toast.LENGTH_SHORT)", "android.widget.Toast.makeText(cont, \"No internet connection available, can't refresh the league\", Toast.LENGTH_SHORT).show()", "com.example.fantasyfootballrankings.Pages.ImportLeague.22.clearDataESPNInit(android.view.View,com.example.fantasyfootballrankings.ClassFiles.StorageClasses.ImportedTeam,android.content.Context)"], "Fixed commit": "0f637eaa87b21ce084c9100780ca553281fa894c", "Url": "https://api.github.com/repos/jbailey2010/FFR", "Date": "2013-09-19T16:25:12Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cacheMap.put(key, entity)) == null) { monitor.increaseAddedCount(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/8922/buggy-version/src.main.java.com.heimuheimu.naivecache.localcache.SimpleNaiveLocalCacheClient.java", "BodyUseAPI": [], "Fixed commit": "8980edf7dc15a2a758c0cf9d882e63adff27bc72", "Url": "https://api.github.com/repos/heimuheimu/naivecache", "Date": "2017-10-19T08:35:11Z"},
{"Line": "=>1825", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.hadoop.ipc.Server.LOG.isDebugEnabled()) { org.apache.hadoop.ipc.Server.LOG.debug(\"Authentication via certificate CN\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/5558/buggy-version/hadoop-common-project.hadoop-common.src.main.java.org.apache.hadoop.ipc.Server.java", "BodyUseAPI": ["org.apache.commons.logging.Log.debug(java.lang.String)"], "Fixed commit": "1b4dbb6bdfeb4efe2a8a951a106338c636bb733d", "Url": "https://api.github.com/repos/kouzant/hops", "Date": "2016-12-09T10:23:21Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this) instanceof no.runsafe.framework.IPumpProvider) return ((no.runsafe.framework.IPumpProvider) (this)).getInstance();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/3527/buggy-version/src.no.runsafe.framework.RunsafePlugin.java", "BodyUseAPI": [], "Fixed commit": "0eaa6c7ea6b66e3044e5663901cc35d0e81df04c", "Url": "https://api.github.com/repos/Runsafe/Framework", "Date": "2012-07-30T21:47:50Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (source.isEmpty()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/3634/buggy-version/infrastructure.infrastructure.src.main.java.alabno.msfeedback.haskellupdater.HaskellMarkerUpdater.java", "BodyUseAPI": [], "Fixed commit": "cd595458968113144a1c23dc2110f463bd7626b2", "Url": "https://api.github.com/repos/ke00n/alabno", "Date": "2016-11-29T11:11:00Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (annotation.isEmpty()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/3634/buggy-version/infrastructure.infrastructure.src.main.java.alabno.msfeedback.haskellupdater.HaskellMarkerUpdater.java", "BodyUseAPI": [], "Fixed commit": "cd595458968113144a1c23dc2110f463bd7626b2", "Url": "https://api.github.com/repos/ke00n/alabno", "Date": "2016-11-29T11:11:00Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((isDead[i]) == true) { isDeadCounter++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/6625/buggy-version/src.h13_Methods.H13_Final_02_Orchard.java", "BodyUseAPI": [], "Fixed commit": "3d64bc50fa0f3d9a46a7099708b5a1e8cb97ded4", "Url": "https://api.github.com/repos/2025989/inleiding-java", "Date": "2015-10-30T14:22:15Z"},
{"Line": "=>434", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((analysisRequester) instanceof org.concord.energy3d.simulation.SolarDailyAnalysis) { line += ((org.concord.energy3d.simulation.SolarDailyAnalysis) (analysisRequester)).toJson(); }else if ((analysisRequester) instanceof org.concord.energy3d.simulation.SolarAnnualAnalysis) { line += ((org.concord.energy3d.simulation.SolarAnnualAnalysis) (analysisRequester)).toJson(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/9080/buggy-version/src.main.java.org.concord.energy3d.logger.TimeSeriesLogger.java", "BodyUseAPI": [], "Fixed commit": "49918a5f3e024fd9965ca53758241efd210d0108", "Url": "https://api.github.com/repos/concord-consortium/energy3d", "Date": "2016-05-11T01:35:58Z"},
{"Line": "=>403", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.concord.energy3d.scene.SceneManager.getInstance().getSelectedPart()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (((analyzedPart != null) && (!(analyzedPart instanceof org.concord.energy3d.model.Tree))) && (!(analyzedPart instanceof org.concord.energy3d.model.Human))) { if ((analysisRequester) instanceof org.concord.energy3d.simulation.EnergyDailyAnalysis) { line += ((org.concord.energy3d.simulation.EnergyDailyAnalysis) (analysisRequester)).toJson(); }else if ((analysisRequester) instanceof org.concord.energy3d.gui.DailyEnergyGraph) { line += ((org.concord.energy3d.gui.DailyEnergyGraph) (analysisRequester)).toJson(); if (org.concord.energy3d.scene.SceneManager.getInstance().areBuildingLabelsVisible()) { java.lang.String result = org.concord.energy3d.model.Building.getBuildingSolarPotentials(); if (result != null) { line += \", \\\"Solar Potential\\\": \" + result; } } }else if ((analysisRequester) instanceof org.concord.energy3d.simulation.EnergyAnnualAnalysis) { line += ((org.concord.energy3d.simulation.EnergyAnnualAnalysis) (analysisRequester)).toJson(); }else if ((analysisRequester) instanceof org.concord.energy3d.simulation.EnergyAngularAnalysis) { line += ((org.concord.energy3d.simulation.EnergyAngularAnalysis) (analysisRequester)).toJson(); }else if ((analysisRequester) instanceof org.concord.energy3d.simulation.Cost) { line += ((org.concord.energy3d.simulation.Cost) (analysisRequester)).toJson(); } }else { if ((analysisRequester) instanceof org.concord.energy3d.simulation.Cost) { line += ((org.concord.energy3d.simulation.Cost) (analysisRequester)).toJson(); }else if ((analysisRequester) instanceof org.concord.energy3d.gui.DailyEnergyGraph) { line += ((org.concord.energy3d.gui.DailyEnergyGraph) (analysisRequester)).toJson(); if (org.concord.energy3d.scene.SceneManager.getInstance().areBuildingLabelsVisible()) { java.lang.String result = org.concord.energy3d.model.Building.getBuildingSolarPotentials(); if (result != null) { line += \", \\\"Solar Potential\\\": \" + result; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/9080/buggy-version/src.main.java.org.concord.energy3d.logger.TimeSeriesLogger.java", "BodyUseAPI": [], "Fixed commit": "49918a5f3e024fd9965ca53758241efd210d0108", "Url": "https://api.github.com/repos/concord-consortium/energy3d", "Date": "2016-05-11T01:35:58Z"},
{"Line": "=>912", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.concord.energy3d.scene.SceneManager.getInstance().getSelectedPart()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (selectedPart instanceof org.concord.energy3d.model.Door) { s = (\"<html>U-Value of \" + partInfo) + \"<hr><font size=2>Examples:<br>US 1.20 (uninsulated metal), US 0.60 (insulated metal), US 0.50 (wood)</html>\"; }else { s = (\"<html>U-Value of \" + partInfo) + \"<hr><font size=2>Examples:<br>US 1.30 (single glass), US 0.81 (double glass), US 0.53 (triple glass)</html>\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/9080/buggy-version/src.main.java.org.concord.energy3d.gui.PopupMenuFactory.java", "BodyUseAPI": [], "Fixed commit": "49918a5f3e024fd9965ca53758241efd210d0108", "Url": "https://api.github.com/repos/concord-consortium/energy3d", "Date": "2016-05-11T01:35:58Z"},
{"Line": "=>310", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(ready)) && (iterator.hasSuspendedClients())) { com.datatorrent.bufferserver.internal.LogicalNode.logger.info(\"The odd case happend\"); service.submit(new java.lang.Runnable() { @java.lang.Override public void run() { addedData(); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/3231/buggy-version/bufferserver.src.main.java.com.datatorrent.bufferserver.internal.LogicalNode.java", "BodyUseAPI": [], "Fixed commit": "6a1c986553d89648b98f96c150245df1c7e920c5", "Url": "https://api.github.com/repos/ilooner/incubator-apex-core", "Date": "2015-10-07T02:29:22Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (get == (-1)) get = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/2501/buggy-version/src.main.java.com.minegusta.mgbosses.powers.abilities.RemoveArmour.java", "BodyUseAPI": [], "Fixed commit": "27578dfafe8bc40b3d69cff6b00b2fdd67ef79a0", "Url": "https://api.github.com/repos/janie177/MGBosses", "Date": "2014-06-03T17:36:41Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((nameValue.length) == 2) { java.lang.String name = nameValue[0]; java.lang.String value = nameValue[1]; getParameters().put(name, value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/8021/buggy-version/src.main.java.org.biouno.unochoice.CascadeChoiceParameterDefinition.java", "BodyUseAPI": [], "Fixed commit": "fe0d91d90a0937b1583b721016055420bf670d23", "Url": "https://api.github.com/repos/biouno/uno-choice-plugin", "Date": "2014-05-15T01:11:42Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == (org.e2k.DisplayView.DISPLAYCOUNT)) i = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/6611/buggy-version/src.org.e2k.DisplayView.java", "BodyUseAPI": [], "Fixed commit": "c1f1b31022eda232128c1ec284209577bc766361", "Url": "https://api.github.com/repos/IanWraith/Rivet", "Date": "2012-10-28T15:05:16Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i >= (org.e2k.DisplayView.DISPLAYCOUNT)) i = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/6611/buggy-version/src.org.e2k.DisplayView.java", "BodyUseAPI": [], "Fixed commit": "c1f1b31022eda232128c1ec284209577bc766361", "Url": "https://api.github.com/repos/IanWraith/Rivet", "Date": "2012-10-28T15:05:16Z"},
{"Line": "=>632", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eu.compassresearch.ast.actions.AAlphabetisedParallelismParallelAction.getLeftNamesetExpression()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (rightNameSet != null) rightNameSet.apply(nameSetChecker, question);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/5601/buggy-version/core.typechecker.src.main.java.eu.compassresearch.core.typechecker.visitors.CmlActionTypeChecker.java", "BodyUseAPI": ["eu.compassresearch.ast.expressions.PVarsetExpression.apply(org.overture.ast.analysis.QuestionAnswerAdaptor<org.overture.typechecker.TypeCheckInfo, org.overture.ast.types.PType>,org.overture.typechecker.TypeCheckInfo)"], "Fixed commit": "3a1f53cbe4d112725ff111dd8bb00e57332f0c86", "Url": "https://api.github.com/repos/symphonytool/symphony", "Date": "2013-12-17T10:07:53Z"},
{"Line": "=>625", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eu.compassresearch.ast.actions.AAlphabetisedParallelismParallelAction.getLeftNamesetExpression()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (leftNameSet != null) leftNameSet.apply(nameSetChecker, question);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/5601/buggy-version/core.typechecker.src.main.java.eu.compassresearch.core.typechecker.visitors.CmlActionTypeChecker.java", "BodyUseAPI": ["eu.compassresearch.ast.expressions.PVarsetExpression.apply(org.overture.ast.analysis.QuestionAnswerAdaptor<org.overture.typechecker.TypeCheckInfo, org.overture.ast.types.PType>,org.overture.typechecker.TypeCheckInfo)"], "Fixed commit": "3a1f53cbe4d112725ff111dd8bb00e57332f0c86", "Url": "https://api.github.com/repos/symphonytool/symphony", "Date": "2013-12-17T10:07:53Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (list.getJSONObject(i).has(\"img_url\")) tempObject.setImgURL(list.getJSONObject(i).getString(\"img_url\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/1871/buggy-version/src.de.meisterfuu.animexx.Home.ContactsActivityList.java", "BodyUseAPI": ["list.getJSONObject(i).getString(java.lang.String)", "org.json.JSONArray.getJSONObject(int)", "de.meisterfuu.animexx.Home.ContactActivityObject.setImgURL(list.getJSONObject(i).getString(\"img_url\"))"], "Fixed commit": "249e5010e42c39dc2299917ee0667975c98d5873", "Url": "https://api.github.com/repos/meisterfuu/Animexx-Android-App", "Date": "2012-05-09T12:58:55Z"},
{"Line": "=>12", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState == null) { getSupportFragmentManager().beginTransaction().add(R.id.main_fragment_container, new com.compmaestros.moviecomrade.MainFragment()).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/3948/buggy-version/app.src.main.java.com.compmaestros.moviecomrade.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "612e0ff4f6a7c98729816e246f2a6fe02a0aa550", "Url": "https://api.github.com/repos/YogeshUmeshVaity/MovieComrade", "Date": "2016-02-05T12:30:48Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (checkString == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/3787/buggy-version/src.main.java.de.fau.amos.PlanningPreset.java", "BodyUseAPI": [], "Fixed commit": "117bcc30b6abe065d167dedad42191348e6827b5", "Url": "https://api.github.com/repos/Jather90/AMOS_proj5", "Date": "2014-06-25T14:47:49Z"},
{"Line": "=>470", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.rocketmq.store.DefaultMessageStore.appendToCommitLog(long,byte[])"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!isAppendSuccess) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/4495/buggy-version/store.src.main.java.org.apache.rocketmq.store.ha.HAService.java", "BodyUseAPI": [], "Fixed commit": "9dc543b2980aec6afd8909a17b70efa06267dd85", "Url": "https://api.github.com/repos/aftersss/incubator-rocketmq", "Date": "2017-05-10T11:41:44Z"},
{"Line": "=>648", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((binPosRates.size()) + 1) == (binCountPos.length)) { long missingSumCnt = (binCountPos[((binCountPos.length) - 1)]) + (binCountNeg[((binCountNeg.length) - 1)]); if (missingSumCnt > 0) { binPosRates.add((((binCountPos[((binCountPos.length) - 1)]) * 1.0) / missingSumCnt)); }else { binPosRates.add(java.lang.Double.NaN); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/7089/buggy-version/src.main.java.ml.shifu.shifu.core.processor.StatsModelProcessor.java", "BodyUseAPI": ["java.util.List<java.lang.Double>.add(double)", "java.util.List<java.lang.Double>.add(double)"], "Fixed commit": "e3feb751f08c67babe7a32bc455750ec997fa407", "Url": "https://api.github.com/repos/m4rkl1u/shifu", "Date": "2017-06-07T07:12:43Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result == \"\") { result = stringBuilder.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/7969/buggy-version/GetIt.src.main.java.com.ewaterhouse.getit.FullscreenActivity.java", "BodyUseAPI": [], "Fixed commit": "2a090eff9d0a9ecd46f6ba1654360eda439b6aa5", "Url": "https://api.github.com/repos/ewaterhouse/GetIt", "Date": "2013-08-23T22:27:53Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["resolvedArtifact.getArtifact().getClassifier()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (clover.org.apache.commons.lang.StringUtils.isNotBlank(classifier)) { symbolicName += \".\" + classifier; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/3811/buggy-version/src.main.java.org.reficio.p2.utils.WrapRequestProperties.java", "BodyUseAPI": [], "Fixed commit": "4aeb805a90f684abc3921113756ae3517f3b0286", "Url": "https://api.github.com/repos/reficio/p2-maven-plugin", "Date": "2013-08-25T14:14:38Z"},
{"Line": "=>336", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (expression instanceof com.github.sommeri.less4j.core.ast.NamedColorWithAlphaExpression) { com.github.sommeri.less4j.core.ast.NamedColorWithAlphaExpression namedColorWithAlphaExpression = ((com.github.sommeri.less4j.core.ast.NamedColorWithAlphaExpression) (expression)); value = ca.concordia.cssanalyser.cssmodel.declaration.value.DeclarationValueFactory.getDeclarationValue(property, namedColorWithAlphaExpression.getColorName(), ValueType.IDENT); }else { com.github.sommeri.less4j.core.ast.ColorExpression.ColorWithAlphaExpression colorWithAlpha = ((com.github.sommeri.less4j.core.ast.ColorExpression.ColorWithAlphaExpression) (expression)); value = ca.concordia.cssanalyser.cssmodel.declaration.value.DeclarationValueFactory.getDeclarationValue(property, colorWithAlpha.toString(), ValueType.COLOR); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/9005/buggy-version/src.main.java.ca.concordia.cssanalyser.parser.less.LessStyleSheetAdapter.java", "BodyUseAPI": [], "Fixed commit": "13179fe1e515fb6e741f51078abb74555ba08b63", "Url": "https://api.github.com/repos/dmazinanian/css-analyser", "Date": "2016-06-20T19:13:58Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.camelight.android.util.DeviceUtil.getPixelFromDip(cacheBean_.context_,float)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (cur_width > dst_width_pixel) { sign = -1.0F; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/2039/buggy-version/src.com.camelight.android.business.FrontLightGuideInteraction.java", "BodyUseAPI": [], "Fixed commit": "d15d4738bf1b049f79f472a5ad3c6c07048eefc0", "Url": "https://api.github.com/repos/ziggzagg/Camelight", "Date": "2015-03-23T11:51:46Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (maxConnections > 5) { maximumPoolsize = maxConnections; }else { maximumPoolsize = 5; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/26/buggy-version/AdvancedCore.src.com.Ben12345rocks.AdvancedCore.mysql.api.ConnectionManager.java", "BodyUseAPI": [], "Fixed commit": "30b17ea9338eebe3fe6bbc6db038d6b32e04d075", "Url": "https://api.github.com/repos/Ben12345rocks/AdvancedCore", "Date": "2017-09-17T22:01:22Z"},
{"Line": "=>1316", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (found == 0) { s3.NewJFrame.jTextArea1.append((\"\\n\" + (put.put(file.getAbsolutePath(), cred.getAccess_key(), cred.getSecret_key(), cred.getBucket(), cred.getEndpoint(), simple_what)))); found = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/8009/buggy-version/src.s3.NewJFrame.java", "BodyUseAPI": [], "Fixed commit": "b17ae171d85e4c72188c00f31bb92b8e187c7a72", "Url": "https://api.github.com/repos/rusher81572/s3", "Date": "2013-12-05T07:37:17Z"},
{"Line": "=>816", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"\u041f\u043b\u043e\u0449\u0430\u0434 \u0426\u0435\u043d\u0442\u0440\u0430\u043b\u043d\u0430 \u0433\u0430\u0440\u0430 \u0413\u0430\u0440\u0430 \u0417\u0430\u0445\u0430\u0440\u043d\u0430 \u0444\u0430\u0431\u0440\u0438\u043a\u0430\".equals(directionName)) { directionName = \"\u041f\u043b\u043e\u0449\u0430\u0434 \u0426\u0435\u043d\u0442\u0440\u0430\u043b\u043d\u0430 \u0433\u0430\u0440\u0430 - \u0413\u0430\u0440\u0430 \u0417\u0430\u0445\u0430\u0440\u043d\u0430 \u0444\u0430\u0431\u0440\u0438\u043a\u0430\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/1716/buggy-version/sofbus24.src.main.java.bg.znestorov.sofbus24.utils.Utils.java", "BodyUseAPI": [], "Fixed commit": "1ee9606a85b7c77e3b5470dd619ef3018453fca4", "Url": "https://api.github.com/repos/zdravko-nestorov/Sofbus-24-GitHub", "Date": "2016-08-08T22:56:42Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.oop1.io.SaveManager.loadGame(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((state.getAvatar().getInventory()) != null) state.getAvatar().setInventory(state.getAvatar().getInventory()); else state.getAvatar().setInventory(new com.oop1.entity.Inventory());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/2616/buggy-version/src.com.oop1.io.SaveManager.java", "BodyUseAPI": ["com.oop1.engine.GameState.getAvatar()", "com.oop1.engine.GameState.getAvatar()", "state.getAvatar().setInventory(com.oop1.entity.Inventory)", "state.getAvatar().setInventory(state.getAvatar().getInventory())", "state.getAvatar().getInventory()", "com.oop1.engine.GameState.getAvatar()"], "Fixed commit": "1e1a50fa19a097ae7f84a85582ed7af277263b69", "Url": "https://api.github.com/repos/OOP-Team-Project/RPG-Interation-1", "Date": "2016-02-07T08:11:55Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (max < min) { final int tmpMin = min; min = max; max = tmpMin; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/61/buggy-version/round-3.src.main.java.net.laby.game.GameRegion.java", "BodyUseAPI": [], "Fixed commit": "2a49927478c31d84acf418e297dfc893e7f2f350", "Url": "https://api.github.com/repos/qlow/devathlon16", "Date": "2016-07-31T00:42:58Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (outAttrs != null) { outAttrs.imeOptions = (outAttrs.imeOptions) | (android.view.inputmethod.EditorInfo.IME_FLAG_NO_EXTRACT_UI); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/1564/buggy-version/backends.gdx-backend-android.src.com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20.java", "BodyUseAPI": [], "Fixed commit": "359ca5fef366bf50826d6da4d0a0821987760002", "Url": "https://api.github.com/repos/lefay1982/libgdx", "Date": "2014-06-17T11:16:09Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (outAttrs != null) { outAttrs.imeOptions = (outAttrs.imeOptions) | (android.view.inputmethod.EditorInfo.IME_FLAG_NO_EXTRACT_UI); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/1564/buggy-version/backends.gdx-backend-android.src.com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20API18.java", "BodyUseAPI": [], "Fixed commit": "359ca5fef366bf50826d6da4d0a0821987760002", "Url": "https://api.github.com/repos/lefay1982/libgdx", "Date": "2014-06-17T11:16:09Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (drawable instanceof android.graphics.drawable.NinePatchDrawable) { return drawable; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/8093/buggy-version/roundedimageview.src.main.java.com.makeramen.roundedimageview.RoundedDrawable.java", "BodyUseAPI": [], "Fixed commit": "258d22b123df4d2a89e4a3f7cce64f448e25641a", "Url": "https://api.github.com/repos/yiranshaPATHo/RoundedImageView", "Date": "2015-03-30T04:04:44Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ld.getId(i)) <= 0) { ld.setId(i, (i + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/8093/buggy-version/roundedimageview.src.main.java.com.makeramen.roundedimageview.RoundedDrawable.java", "BodyUseAPI": ["android.graphics.drawable.LayerDrawable.setId(int,int)"], "Fixed commit": "258d22b123df4d2a89e4a3f7cce64f448e25641a", "Url": "https://api.github.com/repos/yiranshaPATHo/RoundedImageView", "Date": "2015-03-30T04:04:44Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((out) != null) { out.flush(); out.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/3620/buggy-version/src.main.java.daaa.qdscraper.model.GamelistXML.java", "BodyUseAPI": [], "Fixed commit": "3531985fdc3edf329650070ce0ff67cbdc575d05", "Url": "https://api.github.com/repos/daaa57150/QDScraper", "Date": "2016-06-04T09:34:28Z"},
{"Line": "=>1072", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.tab.getGateway()) != null) { if (pwdGrp.equals(this.tab.getGateway().getPwdGroup())) { this.pwdTxt.setText(pwd); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/4923/buggy-version/src.main.java.jp.co.tabocom.teratermstation.ui.EnvTabItem.java", "BodyUseAPI": ["jp.co.tabocom.teratermstation.model.Tab.getGateway()", "java.lang.String.equals(this.tab.getGateway().getPwdGroup())", "this.tab.getGateway().getPwdGroup()"], "Fixed commit": "e4aab32a44e20d46fd1fed342ef2e18a32b3b1d9", "Url": "https://api.github.com/repos/turbou/TeratermStation", "Date": "2015-10-29T04:26:58Z"},
{"Line": "=>556", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.caseStatus) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/2339/buggy-version/src.java.is.idega.idegaweb.egov.cases.presentation.CasesBoardViewer.java", "BodyUseAPI": [], "Fixed commit": "3e2bdd371d11d51a15cf777801a010543ba61b87", "Url": "https://api.github.com/repos/idega/is.idega.idegaweb.egov.cases", "Date": "2013-04-24T14:49:24Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.glassfish.hk2.api.Injectee.getParent()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (annotated.getClass().equals(java.lang.reflect.Constructor.class)) { annotations = ((java.lang.reflect.Constructor) (annotated)).getParameterAnnotations()[injectee.getPosition()]; }else { annotations = annotated.getDeclaredAnnotations(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/5475/buggy-version/core-server.src.main.java.org.glassfish.jersey.server.internal.inject.ParamInjectionResolver.java", "BodyUseAPI": ["java.lang.reflect.AnnotatedElement.getDeclaredAnnotations()"], "Fixed commit": "926273f6a64cf96f25f190834e2379a25dd38cff", "Url": "https://api.github.com/repos/jersey/jersey", "Date": "2012-08-30T08:28:25Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (spec.toLowerCase().startsWith(\"file:\")) { spec = spec.substring(\"file:\".length()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/5198/buggy-version/sdks.java.core.src.main.java.org.apache.beam.sdk.io.LocalFileSystem.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "2643e99ded3a3ca2a09f212bff89794a8d4fcbbf", "Url": "https://api.github.com/repos/flaviocf/beam", "Date": "2017-06-30T17:14:34Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang3.SystemUtils.IS_OS_WINDOWS) { spec = spec.replaceAll(\"^/+\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/5198/buggy-version/sdks.java.core.src.main.java.org.apache.beam.sdk.io.LocalFileSystem.java", "BodyUseAPI": [], "Fixed commit": "2643e99ded3a3ca2a09f212bff89794a8d4fcbbf", "Url": "https://api.github.com/repos/flaviocf/beam", "Date": "2017-06-30T17:14:34Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (environmentVars != null) { this.environmentVars.putAll(environmentVars); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/3478/buggy-version/src.main.java.pl.allegro.tdr.gruntmaven.executable.Executable.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.putAll(java.util.Map<java.lang.String, java.lang.String>)"], "Fixed commit": "af4557694c8cf56d166c3ef66dfc297fcbbc2cd0", "Url": "https://api.github.com/repos/allegro/grunt-maven-plugin", "Date": "2014-06-18T09:58:38Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(background.hasParent())) { attachChild(background); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/5082/buggy-version/src.gamedev.scenes.QuestScene.java", "BodyUseAPI": ["gamedev.scenes.QuestScene.attachChild(org.andengine.entity.sprite.Sprite)"], "Fixed commit": "56eb57d70f45930f1ae25fb37dc4076c2227eba5", "Url": "https://api.github.com/repos/wanze/GameDevProject", "Date": "2014-01-25T12:31:47Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(background.isDisposed())) { background.dispose(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/5082/buggy-version/src.gamedev.scenes.QuestScene.java", "BodyUseAPI": ["org.andengine.entity.sprite.Sprite.dispose()"], "Fixed commit": "56eb57d70f45930f1ae25fb37dc4076c2227eba5", "Url": "https://api.github.com/repos/wanze/GameDevProject", "Date": "2014-01-25T12:31:47Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.naming.directory.BasicAttributes.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (attr == null) { myAttri.put(new javax.naming.directory.BasicAttribute(key, prop.getValue())); }else { attr.add(prop.getValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/6510/buggy-version/api.src.main.java.org.intalio.tempo.security.ldap.LDAPRBACAdmin.java", "BodyUseAPI": ["javax.naming.directory.Attribute.add(prop.getValue())"], "Fixed commit": "2a515a1e58e1dfa05ff7c1f2c10e2221ec16f2df", "Url": "https://api.github.com/repos/intalio/security", "Date": "2012-12-04T10:42:51Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(servicePath.equals(\"/\"))) { indexToInsert = path.indexOf(servicePath); indexToInsert = (indexToInsert == (-1)) ? 0 : indexToInsert; indexToInsert += servicePath.length(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/4201/buggy-version/apis.s3.src.main.java.org.jclouds.s3.binders.BindAsHostPrefixIfConfigured.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.StringBuilder.indexOf(java.lang.String)"], "Fixed commit": "ca63b9cfa35acc807d6b3be1ae5e9487a3e46de8", "Url": "https://api.github.com/repos/jclouds/jclouds", "Date": "2011-05-30T03:08:35Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["elec332.core.world.WorldHelper.getTileAt(sender.worldObj,elec332.core.util.BlockLoc)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (tile != null) { tile.onPacketReceivedFromClient(sender, ID, message.networkPackageObject.getCompoundTag(\"data\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/3366/buggy-version/src.main.java.elec332.core.network.PacketTileDataToServer.java", "BodyUseAPI": ["elec332.core.network.IElecCoreNetworkTile.onPacketReceivedFromClient(net.minecraft.entity.player.EntityPlayerMP,int,message.networkPackageObject.getCompoundTag(\"data\"))"], "Fixed commit": "9f9d30c30f457c62b41fc26f71f88ce330597768", "Url": "https://api.github.com/repos/Elecs-Mods/ElecCore", "Date": "2015-11-04T13:16:10Z"},
{"Line": "=>384", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mydevices.exists()) { fsc = mydevices.listFiles(fscFilter); if ((fsc.length) > 0) return fsc[0].getAbsolutePath(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/7655/buggy-version/src.org.system.DeviceEntry.java", "BodyUseAPI": ["java.io.File.listFiles(java.io.FilenameFilter)"], "Fixed commit": "5cbe8231fdc3cd92ad218e359dcce3be109daeb9", "Url": "https://api.github.com/repos/Androxyde/Flashtool", "Date": "2017-01-19T18:41:24Z"},
{"Line": "=>369", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mydevices.exists()) { fsc = mydevices.listFiles(fscFilter); if ((fsc.length) > 0) return fsc[0].getAbsolutePath(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/7655/buggy-version/src.org.system.DeviceEntry.java", "BodyUseAPI": ["java.io.File.listFiles(java.io.FilenameFilter)"], "Fixed commit": "5cbe8231fdc3cd92ad218e359dcce3be109daeb9", "Url": "https://api.github.com/repos/Androxyde/Flashtool", "Date": "2017-01-19T18:41:24Z"},
{"Line": "=>301", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((inputLevel) < 0) sample = sample / (java.lang.Math.abs(inputLevel));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/3805/buggy-version/src.org.e2k.InputThread.java", "BodyUseAPI": [], "Fixed commit": "d6f13086716c708476a9e06cd1ddca2fd775fedf", "Url": "https://api.github.com/repos/IanWraith/Rivet", "Date": "2012-06-12T07:05:01Z"},
{"Line": "=>454", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (partitionInfo != null) { partitionIndex = taskIdGroup.indexOf(taskId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/2903/buggy-version/hadoop.src.main.java.org.apache.carbondata.hadoop.CarbonInputFormat.java", "BodyUseAPI": [], "Fixed commit": "0b403123e7bd5eb1866b5ae10d7181cbd4ec05c0", "Url": "https://api.github.com/repos/lionelcao/carbondata", "Date": "2017-07-02T11:18:26Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.carbondata.core.metadata.schema.table.CarbonTable.getPartitionInfo(carbonTable.getFactTableName())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (partitionInfo != null) { org.apache.carbondata.core.scan.partition.Partitioner partitioner = org.apache.carbondata.core.scan.partition.PartitionUtil.getPartitioner(partitionInfo); if (matchedPartitions != null) { if ((matchedPartitions.cardinality()) == 0) { return new java.util.ArrayList<org.apache.hadoop.mapreduce.InputSplit>(); }else if ((matchedPartitions.cardinality()) == (partitioner.numPartitions())) { matchedPartitions = null; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/2903/buggy-version/hadoop.src.main.java.org.apache.carbondata.hadoop.CarbonInputFormat.java", "BodyUseAPI": ["org.apache.carbondata.core.scan.partition.PartitionUtil.getPartitioner(org.apache.carbondata.core.metadata.schema.PartitionInfo)"], "Fixed commit": "0b403123e7bd5eb1866b5ae10d7181cbd4ec05c0", "Url": "https://api.github.com/repos/lionelcao/carbondata", "Date": "2017-07-02T11:18:26Z"},
{"Line": "=>446", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (partitionInfo != null) { taskIdGroup = partitionInfo.getTaskIdInPartitionOrder(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/2903/buggy-version/hadoop.src.main.java.org.apache.carbondata.hadoop.CarbonInputFormat.java", "BodyUseAPI": ["org.apache.carbondata.core.metadata.schema.PartitionInfo.getTaskIdInPartitionOrder()"], "Fixed commit": "0b403123e7bd5eb1866b5ae10d7181cbd4ec05c0", "Url": "https://api.github.com/repos/lionelcao/carbondata", "Date": "2017-07-02T11:18:26Z"},
{"Line": "=>316", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cancelled) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/6613/buggy-version/src.main.java.org.cytoscape.aracneAlgorithm.internal.AracneAlgorithmTask.java", "BodyUseAPI": [], "Fixed commit": "8228a34f152726fbb1963712d8f5b7f219086f15", "Url": "https://api.github.com/repos/schwikowskilab/aracne-cyni", "Date": "2013-07-11T17:14:41Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (theCmd == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/4453/buggy-version/src.net.amoebaman.utils.CommandController.java", "BodyUseAPI": [], "Fixed commit": "2050beb857af505c0b5bf01b824a1e4d67df53b9", "Url": "https://api.github.com/repos/AmoebaMan/Utils", "Date": "2014-03-17T12:33:38Z"},
{"Line": "=>11", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((finishAfterRounds) == null) return -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/1672/buggy-version/sharedbusinesslayer.src.main.java.com.weddingcrashers.servermodels.GameSettings.java", "BodyUseAPI": [], "Fixed commit": "b08cbdd2686532d534a437fc618ec79eba74500f", "Url": "https://api.github.com/repos/dmpliamplias/Dominion", "Date": "2017-12-02T16:07:58Z"},
{"Line": "=>480", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentState) != (view.GamePlayState.STATES.PAUSE_GAME)) currentState = view.GamePlayState.STATES.END_TURN;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/1599/buggy-version/src.view.GamePlayState.java", "BodyUseAPI": [], "Fixed commit": "1ca6ac5c210961ef46a60e3828593d07898188c4", "Url": "https://api.github.com/repos/spyl94/drasus", "Date": "2013-01-23T17:26:49Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.denimgroup.threadfix.data.entities.ScheduledScan.getFrequency()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((ScheduledScan.ScheduledFrequencyType.getFrequency(frequency)) == (ScheduledScan.ScheduledFrequencyType.DAILY)) { scheduledScan.setDay(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/3755/buggy-version/threadfix-main.src.main.java.com.denimgroup.threadfix.service.ScheduledScanServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "957cf8f0c18cda79b766bfdc25c86f83b6f2b653", "Url": "https://api.github.com/repos/denimgroup/threadfix", "Date": "2014-05-05T22:09:10Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((_lastVisited) == null) && ((_currentNode.getSize()) > 0)) { _toReturn = _currentNode; return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/4445/buggy-version/gobblin-core.src.main.java.gobblin.source.extractor.extract.google.webmaster.UrlTriePostOrderIterator.java", "BodyUseAPI": [], "Fixed commit": "35f478e9f89ac24ce373a2c7cc3c16d8cde12bba", "Url": "https://api.github.com/repos/enjoyear/gobblin", "Date": "2016-11-29T00:26:58Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Pattern.matcher(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(m.find())) { urlDownload = \"http:\" + urlDownload; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/7282/buggy-version/src.goncalojoaocorreia.kickass.api.Search.java", "BodyUseAPI": [], "Fixed commit": "e579cbbc4ec495e7d306b640ff619663498e605c", "Url": "https://api.github.com/repos/GoncaloJoaoCorreia/kickassAPI", "Date": "2015-09-24T14:34:32Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getUserDetail().isAccessAdmin()) { return getUserDetail().getAccessLevel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/3464/buggy-version/war-core.src.main.java.com.stratelia.silverpeas.silverStatisticsPeas.control.SilverStatisticsPeasSessionController.java", "BodyUseAPI": [], "Fixed commit": "9b8581262d3dc0cebd9a0087f3d6ba4c483eeaaf", "Url": "https://api.github.com/repos/Silverpeas/Silverpeas-Core", "Date": "2016-07-06T14:02:47Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.lastIndexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (splitIndex < 0) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/1453/buggy-version/Tools.opsc.src.opsc.PythonCompiler.java", "BodyUseAPI": [], "Fixed commit": "90a907429e44a1241aca26a4aab3dc441068fe06", "Url": "https://api.github.com/repos/LelleAnd/ops", "Date": "2016-06-18T21:46:48Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.ui.texteditor.ITextEditor.getEditorInput()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (editorInput instanceof org.eclipse.ui.IStorageEditorInput) { org.eclipse.ui.IStorageEditorInput storageInput = ((org.eclipse.ui.IStorageEditorInput) (editorInput)); org.eclipse.core.runtime.IPath path = storageInput.getStorage().getFullPath(); java.io.File file = path.toFile(); if (!(file.exists())) { org.eclipse.core.resources.IFile iFile = org.eclipse.core.resources.ResourcesPlugin.getWorkspace().getRoot().getFile(path); file = iFile.getLocation().toFile(); } store = org.eclipse.core.filesystem.EFS.getStore(file.toURI()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/1411/buggy-version/plugins.com.aptana.ruby.debug.ui.src.com.aptana.ruby.debug.ui.RubyLineBreakpointAdapter.java", "BodyUseAPI": [], "Fixed commit": "109715c99511be7232445e5d07574621e5d31b36", "Url": "https://api.github.com/repos/aptana/studio3-ruby", "Date": "2011-04-25T15:33:29Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.block.Sign.getLine(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((result.length()) == 15) result += getSign().getLine(2);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/6320/buggy-version/src.com.winthier.simpleshop.ShopSign.java", "BodyUseAPI": [], "Fixed commit": "e6fac5cf7b82cd842bdc8855706263d351297364", "Url": "https://api.github.com/repos/StarTux/SimpleShop", "Date": "2014-01-07T18:04:22Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.emc.mongoose.load.generator.BasicLoadGenerator.GeneratorTask.isStarted())) { com.emc.mongoose.ui.log.LogUtil.exception(com.emc.mongoose.load.generator.BasicLoadGenerator.LOG, Level.ERROR, cause, \"Unexpected failure\"); e.printStackTrace(java.lang.System.err); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/7243/buggy-version/load.generator.src.main.java.com.emc.mongoose.load.generator.BasicLoadGenerator.java", "BodyUseAPI": [], "Fixed commit": "2af05c622273074f03f9a29c7f6d86598d39b653", "Url": "https://api.github.com/repos/emc-mongoose/mongoose", "Date": "2017-01-13T19:38:51Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.emc.mongoose.load.generator.BasicLoadGenerator.GeneratorTask.isStarted())) { com.emc.mongoose.ui.log.LogUtil.exception(com.emc.mongoose.load.generator.BasicLoadGenerator.LOG, Level.ERROR, e, \"Unexpected failure\"); e.printStackTrace(java.lang.System.err); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/7243/buggy-version/load.generator.src.main.java.com.emc.mongoose.load.generator.BasicLoadGenerator.java", "BodyUseAPI": [], "Fixed commit": "2af05c622273074f03f9a29c7f6d86598d39b653", "Url": "https://api.github.com/repos/emc-mongoose/mongoose", "Date": "2017-01-13T19:38:51Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (tw.getPathString().equals(path)) { matchingPath = new com.gitblit.models.PathModel.PathChangeModel(tw.getPathString(), tw.getPathString(), 0, tw.getRawMode(0), tw.getObjectId(0).getName(), commit.getId().getName(), org.eclipse.jgit.diff.DiffEntry.ChangeType.MODIFY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/6522/buggy-version/src.com.gitblit.wicket.panels.HistoryPanel.java", "BodyUseAPI": [], "Fixed commit": "0ad6d9ea8d22dcf15cc9c29bb68a33c7b9309674", "Url": "https://api.github.com/repos/gitblit/gitblit", "Date": "2012-11-28T22:06:09Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((data.length) == 2) { file = data[1]; }else { file = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/8872/buggy-version/src.wave.surfer.Surfer.java", "BodyUseAPI": [], "Fixed commit": "4181602ab8c03f75edc868222025ed508aa3a6de", "Url": "https://api.github.com/repos/SebDuret/WaveSurfer", "Date": "2014-05-31T20:39:18Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eu.transkribus.core.util.CoreUtils.bound(int,int,int)", "eu.transkribus.core.util.CoreUtils.bound(int,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (o > e) { containedText = \"\"; }else { containedText = txt.substring(o, e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/6326/buggy-version/src.main.java.eu.transkribus.core.model.beans.customtags.CustomTag.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "19cfac1ce54574437433a7233ef382da3ce1f627", "Url": "https://api.github.com/repos/Transkribus/TranskribusCore", "Date": "2016-08-18T10:50:32Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((contextFile) != null) { getLog().warn(((\"Could not find the configured context file: \" + (contextFile.getAbsolutePath())) + \" . Going to proceed with default configuration.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/99/buggy-version/tomcat7-maven-plugin.src.main.java.org.apache.tomcat.maven.plugin.tomcat7.run.RunMojo.java", "BodyUseAPI": [], "Fixed commit": "ee4eba0787f68f51dff80c02dd66465229ec021f", "Url": "https://api.github.com/repos/ccronemberger/tomcat-maven-plugin", "Date": "2015-05-21T14:14:28Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((param.getClazz()) != null) { java.lang.Object value = param.getClazz().cast(param.getValue()); query.setParameter(param.getKey(), value); }else { query.setParameter(param.getKey(), param.getValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/4537/buggy-version/sawa.src.main.java.com.jialu.sawa.utility.MiniDao.java", "BodyUseAPI": ["com.jialu.sawa.vo.MiniPair.getKey()", "com.jialu.sawa.vo.MiniPair.getValue()", "org.hibernate.Query.setParameter(param.getKey(),param.getValue())", "com.jialu.sawa.vo.MiniPair.getValue()", "param.getClazz().cast(param.getValue())", "org.hibernate.Query.setParameter(param.getKey(),java.lang.Object)", "com.jialu.sawa.vo.MiniPair.getKey()", "com.jialu.sawa.vo.MiniPair.getClazz()"], "Fixed commit": "0e296106a8dcc88c0f492be81f4757e12072e138", "Url": "https://api.github.com/repos/shouaya/sawa", "Date": "2017-09-26T17:26:54Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.firebase.auth.FirebaseAuth.getInstance().getCurrentUser().getUid()", "java.util.ArrayList<Logic.Post>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (post.getUserId().equals(userId)) { sendMsg.setVisibility(View.GONE); }else { sendMsg.setOnClickListener(new android.view.View.OnClickListener() { @java.lang.Override public void onClick(android.view.View v) { if ((mPostClickListener) != null) { mPostClickListener.onMessageClick(post.getUserName()); } } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/535/buggy-version/app.src.main.java.il.co.programfiles.sublet.PostsManager.java", "BodyUseAPI": ["il.co.programfiles.sublet.PostClickListener.onMessageClick(post.getUserName())", "Logic.Post.getUserName()", "android.widget.ImageButton.setOnClickListener(android.view.View.OnClickListener)"], "Fixed commit": "1aeaf1e6f51ede89498e3b5150606f8114125b22", "Url": "https://api.github.com/repos/GuyChabra/Sublet", "Date": "2017-04-01T17:23:59Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(android.text.TextUtils.isEmpty(mCurrentPhotoPath))) || (!(android.text.TextUtils.isEmpty(mCurrentVideoPath)))) { note.setTitle((\"Snapshot@\" + (mAddressOutput))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/6641/buggy-version/app.src.main.java.uk.co.feixie.mynote.activity.AddNoteActivity.java", "BodyUseAPI": [], "Fixed commit": "16e706f445b279827b638939d13c82eee699522f", "Url": "https://api.github.com/repos/xiefeieric/MyNote", "Date": "2015-11-19T17:04:50Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Main.getArena.get(arenaName).getGameProgress().equalsIgnoreCase(\"Countdown\")) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/6898/buggy-version/src.com.lekohd.blockparty.system.Start.java", "BodyUseAPI": [], "Fixed commit": "dbd215b402892227fbea6237f3024c5c5f7208fe", "Url": "https://api.github.com/repos/LekoHD/Name", "Date": "2014-04-27T16:59:18Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(question.getAnswers().get(0).isEmpty())) { firstChoiceLabel.setText(question.getAnswers().get(0)); }else { firstChoiceLabel.setVisible(false); firstChoice.setVisible(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/5320/buggy-version/src.main.java.org.redhatchallenge.rhc2013.client.MultipleChoiceWidget.java", "BodyUseAPI": [], "Fixed commit": "93f9eef37753a8d676edda4c37ed7b5de7fcd0c1", "Url": "https://api.github.com/repos/redhatchallenge/rhc2013", "Date": "2013-09-20T08:56:19Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(question.getAnswers().get(3).isEmpty())) { fourthChoiceLabel.setText(question.getAnswers().get(3)); }else { fourthChoiceLabel.setVisible(false); fourthChoice.setVisible(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/5320/buggy-version/src.main.java.org.redhatchallenge.rhc2013.client.MultipleChoiceWidget.java", "BodyUseAPI": [], "Fixed commit": "93f9eef37753a8d676edda4c37ed7b5de7fcd0c1", "Url": "https://api.github.com/repos/redhatchallenge/rhc2013", "Date": "2013-09-20T08:56:19Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(question.getAnswers().get(2).isEmpty())) { thirdChoiceLabel.setText(question.getAnswers().get(2)); }else { thirdChoiceLabel.setVisible(false); thirdChoice.setVisible(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/5320/buggy-version/src.main.java.org.redhatchallenge.rhc2013.client.MultipleChoiceWidget.java", "BodyUseAPI": [], "Fixed commit": "93f9eef37753a8d676edda4c37ed7b5de7fcd0c1", "Url": "https://api.github.com/repos/redhatchallenge/rhc2013", "Date": "2013-09-20T08:56:19Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(question.getAnswers().get(1).isEmpty())) { secondChoiceLabel.setText(question.getAnswers().get(1)); }else { secondChoiceLabel.setVisible(false); secondChoice.setVisible(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/5320/buggy-version/src.main.java.org.redhatchallenge.rhc2013.client.MultipleChoiceWidget.java", "BodyUseAPI": [], "Fixed commit": "93f9eef37753a8d676edda4c37ed7b5de7fcd0c1", "Url": "https://api.github.com/repos/redhatchallenge/rhc2013", "Date": "2013-09-20T08:56:19Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gwt.event.logical.shared.ValueChangeEvent<java.lang.String>.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (historyToken.equalsIgnoreCase(\"registration\")) { authenticationService.getRegStatus(new com.google.gwt.user.client.rpc.AsyncCallback<java.util.List<org.redhatchallenge.rhc2013.shared.RegStatus>>() { @java.lang.Override public void onFailure(java.lang.Throwable throwable) { throwable.printStackTrace(); } @java.lang.Override public void onSuccess(java.util.List<org.redhatchallenge.rhc2013.shared.RegStatus> regStatuses) { java.lang.Boolean status; for (org.redhatchallenge.rhc2013.shared.RegStatus r : regStatuses) { if ((r.getStatus_id()) == 1) { status = r.getReg_status_bool(); if (status.equals(java.lang.Boolean.FALSE)) { ContentContainer.INSTANCE.setContent(new org.redhatchallenge.rhc2013.client.RegisterScreen()); }else { ContentContainer.INSTANCE.setContent(new org.redhatchallenge.rhc2013.client.MessageScreen(messages.registrationClose())); } } } } }); }else if (historyToken.equalsIgnoreCase(\"studyref\")) { ContentContainer.INSTANCE.setContent(new org.redhatchallenge.rhc2013.client.StudyReferenceScreen()); }else if (historyToken.equalsIgnoreCase(\"login\")) { ContentContainer.INSTANCE.setContent(new org.redhatchallenge.rhc2013.client.LoginScreen()); }else if (historyToken.equalsIgnoreCase(\"tc\")) { ContentContainer.INSTANCE.setContent(new org.redhatchallenge.rhc2013.client.TCScreen()); }else if (historyToken.equalsIgnoreCase(\"profile\")) { ContentContainer.INSTANCE.setContent(new org.redhatchallenge.rhc2013.client.ProfileScreen()); }else if (historyToken.equalsIgnoreCase(\"details\")) { ContentContainer.INSTANCE.setContent(new org.redhatchallenge.rhc2013.client.ContestDetailsScreen()); }else if (historyToken.equalsIgnoreCase(\"forget-password\")) { ContentContainer.INSTANCE.setContent(new org.redhatchallenge.rhc2013.client.TriggerPasswordResetScreen()); }else if (historyToken.substring(0, 10).equalsIgnoreCase(\"resetToken\")) { ContentContainer.INSTANCE.setContent(new org.redhatchallenge.rhc2013.client.ResetPasswordScreen(historyToken.substring(11))); }else if (historyToken.substring(0, 12).equalsIgnoreCase(\"confirmToken\")) { authenticationService.setConfirmationStatus(historyToken.substring(13), new com.google.gwt.user.client.rpc.AsyncCallback<java.lang.Boolean>() { @java.lang.Override public void onFailure(java.lang.Throwable caught) { ContentContainer.INSTANCE.setContent(new org.redhatchallenge.rhc2013.client.MessageScreen(((\"<h1>\" + (messages.confirmationTokenError())) + \"</h1>\"))); } @java.lang.Override public void onSuccess(java.lang.Boolean result) { if (result) { ContentContainer.INSTANCE.setContent(new org.redhatchallenge.rhc2013.client.MessageScreen(((\"<h2>\" + (messages.confirmedAccount())) + \"</h2>\"))); }else { ContentContainer.INSTANCE.setContent(new org.redhatchallenge.rhc2013.client.MessageScreen(((\"<h2>\" + (messages.confirmationTokenError())) + \"</h2>\"))); } } }); }else { ContentContainer.INSTANCE.setContent(new org.redhatchallenge.rhc2013.client.IndexScreen()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/5320/buggy-version/src.main.java.org.redhatchallenge.rhc2013.client.Entry.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.String.substring(int)", "java.lang.String.substring(int,int)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "ContentContainer.INSTANCE.setContent(org.redhatchallenge.rhc2013.client.ResetPasswordScreen)", "java.lang.String.substring(int)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "org.redhatchallenge.rhc2013.client.AuthenticationServiceAsync.setConfirmationStatus(java.lang.String,com.google.gwt.user.client.rpc.AsyncCallback<java.lang.Boolean>)"], "Fixed commit": "93f9eef37753a8d676edda4c37ed7b5de7fcd0c1", "Url": "https://api.github.com/repos/redhatchallenge/rhc2013", "Date": "2013-09-20T08:56:19Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["weka.core.Instances.attribute(targetUri.toString())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (target != null) { targetIndex = trainingSet.attribute(targetUri.toString()).index(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/5122/buggy-version/jaqpot3-standalone.src.main.java.org.opentox.jaqpot3.qsar.trainer.LeveragesTrainer.java", "BodyUseAPI": [], "Fixed commit": "73736e3ac01f35bc5babdd9c024d26d3c95d2303", "Url": "https://api.github.com/repos/alphaville/jaqpot3", "Date": "2011-06-02T20:19:51Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (errorMarker != null) { if (nextType != null) errorMarker.error((((\"Unexpected \" + (nextType.toString())) + \". \") + (info.toString()))); else errorMarker.error(info.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/4791/buggy-version/src.main.java.in.twbs.pure.lang.parser.PureParser.java", "BodyUseAPI": ["PsiBuilder.Marker.error((((\"Unexpected \" + (nextType.toString())) + \". \") + (info.toString())))", "PsiBuilder.Marker.error(info.toString())"], "Fixed commit": "9327c3212446a368968ca04c01926f37361af81e", "Url": "https://api.github.com/repos/ikarienator/pure-idea", "Date": "2014-07-11T09:32:14Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((name.length()) > 16) name = name.substring(0, 16);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/8427/buggy-version/src.main.java.com.titankingdoms.dev.titanchat.core.participant.PlayerParticipant.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "6ee7dcce4e8375d941e8d767ef73ce52e346fbef", "Url": "https://api.github.com/repos/TitanDevelopment/TitanChat", "Date": "2013-08-12T10:43:23Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, com.shastram.web8085.client.InstructionParser>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (ix == null) { java.lang.Character ch = line.charAt(0); if (ch == '\\u00a0') { return new com.shastram.web8085.client.ParseToken(Type.COMMENT, line); } return new com.shastram.web8085.client.ParseToken(Type.SYNTAX_ERROR, line); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/1922/buggy-version/src.com.shastram.web8085.client.Parser.java", "BodyUseAPI": [], "Fixed commit": "f4816ee1aaab7b08e1c8eb97fd9eeae13034ee4d", "Url": "https://api.github.com/repos/karamana/web8085", "Date": "2012-05-18T05:13:23Z"},
{"Line": "=>1435", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (odataNetwork.getProperty(\"VMNetworkId\").hasNullValue()) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/7687/buggy-version/src.main.java.org.ow2.sirocco.cloudmanager.connector.spf.SPFCloudProviderConnector.java", "BodyUseAPI": [], "Fixed commit": "3341d8488d972688b919ec8330623c7a5a2d5c25", "Url": "https://api.github.com/repos/akantcheff/sirocco-scvmm-connector", "Date": "2014-01-27T13:53:52Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getGunHeat()) == 0) && ((java.lang.Math.abs(getGunTurnRemaining())) < 10)) { setFire(java.lang.Math.min((400 / (enemy.getDistance())), 3)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/581/buggy-version/robo.PartsBot.java", "BodyUseAPI": [], "Fixed commit": "4c90611bcd5714a22a39b9096136fa5485577525", "Url": "https://api.github.com/repos/LordDarkula/Taskmaster", "Date": "2016-05-19T21:48:06Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((seatRepository.findOne(seat.getId()).getState()) != (com.unb.tracker.model.Seat.AVAILABLE)) { com.unb.tracker.web.SeatController.LOG.warn(\"student {} is trying to choose an unavailable seat\", user.getUsername()); throw new com.unb.tracker.exception.BadRequestException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/6038/buggy-version/src.main.java.com.unb.tracker.web.SeatController.java", "BodyUseAPI": [], "Fixed commit": "4bbb1721b8d5c85af04e88064f1290be9b983ba8", "Url": "https://api.github.com/repos/SWE-4103-Group-3/Project", "Date": "2017-11-19T18:26:44Z"},
{"Line": "=>309", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (end >= (d.getLength())) { end = (d.getLength()) - 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/4494/buggy-version/net.sf.eclipsefp.haskell.buildwrapper.src.net.sf.eclipsefp.haskell.buildwrapper.types.Location.java", "BodyUseAPI": ["org.eclipse.jface.text.IDocument.getLength()"], "Fixed commit": "6eb527005d07bbc2ee25abadb9770120f83ae578", "Url": "https://api.github.com/repos/JPMoresmau/eclipsefp", "Date": "2013-12-19T16:33:38Z"},
{"Line": "=>480", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wso2.carbon.identity.application.mgt.ApplicationManagementService.getServiceProviderNameByClientId(java.lang.String,java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (IdentityApplicationConstants.DEFAULT_SP_CONFIG.equals(spAppName)) { org.wso2.carbon.apimgt.keymgt.service.APIKeyMgtSubscriberService.log.debug((\"Avoided removing the default app : \" + spAppName)); org.wso2.carbon.apimgt.keymgt.service.APIKeyMgtSubscriberService.log.debug(\"However, OAuth details for the default app will be removed.\"); org.wso2.carbon.identity.oauth.OAuthAdminService oAuthAdminService = new org.wso2.carbon.identity.oauth.OAuthAdminService(); oAuthAdminService.removeOAuthApplicationData(consumerKey); }else { org.wso2.carbon.apimgt.keymgt.service.APIKeyMgtSubscriberService.log.debug((\"Removing Service Provider with name : \" + spAppName)); appMgtService.deleteApplication(spAppName, tenantDomain, tenantAwareUsername); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/4004/buggy-version/components.apimgt.org.wso2.carbon.apimgt.keymgt.src.main.java.org.wso2.carbon.apimgt.keymgt.service.APIKeyMgtSubscriberService.java", "BodyUseAPI": ["org.apache.commons.logging.Log.debug(java.lang.String)", "org.apache.commons.logging.Log.debug(java.lang.String)", "org.wso2.carbon.identity.application.mgt.ApplicationManagementService.deleteApplication(java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "1811f8e73ed436f3c8f928348f91c49c43ff7678", "Url": "https://api.github.com/repos/bhathiya/carbon-apimgt", "Date": "2017-07-21T11:11:57Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (me.redraskal.arcadia.Arcadia.getPlugin(me.redraskal.arcadia.Arcadia.class).mainConfiguration.fetch().getBoolean(\"allow-game-voting\")) { new me.redraskal.arcadia.runnable.GameVotingRunnable(); }else { new me.redraskal.arcadia.runnable.GameSwitchRunnable(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/2884/buggy-version/src.main.java.me.redraskal.arcadia.runnable.GameRunnable.java", "BodyUseAPI": [], "Fixed commit": "ddbafae1ae591875209c8336a1202ac0971e1598", "Url": "https://api.github.com/repos/ArcadiaPlugins/Arcadia-Spigot", "Date": "2017-06-29T02:53:51Z"},
{"Line": "=>900", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.kylek.ripe.ui.RIPEController.parseRecipe(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (parsed == null) { content += mRipe.getErrorMessage(); content += \"<br/><br/><br/>\\n<a id=\\'back_link\\' href=\\'\\'>Back to form</a>\\n\"; return content; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/636/buggy-version/src.com.kylek.ripe.ui.RipeServer.java", "BodyUseAPI": [], "Fixed commit": "d781197d7010a2ae340d0143372a940c0a4255ae", "Url": "https://api.github.com/repos/kkamperschroer/ripe", "Date": "2013-05-26T23:45:16Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((numberOfChips) - currentHighBet) <= 0) { java.lang.System.out.println(\">> Would you like to see (all in) or fold: \"); }else { if (!open) { java.lang.System.out.print(\">> Would you like to raise or fold: \"); }else { java.lang.System.out.print(\">> Would you like to raise, see or fold: \"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/7236/buggy-version/HumanPokerPlayer.java", "BodyUseAPI": [], "Fixed commit": "4034e621e86aebf259ff499adfceba1674e4d457", "Url": "https://api.github.com/repos/COMP30050DHK/PokerBot", "Date": "2017-04-21T13:26:18Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((numberOfChips) - currentHighBet) <= 0) { validInput = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/7236/buggy-version/HumanPokerPlayer.java", "BodyUseAPI": [], "Fixed commit": "4034e621e86aebf259ff499adfceba1674e4d457", "Url": "https://api.github.com/repos/COMP30050DHK/PokerBot", "Date": "2017-04-21T13:26:18Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sourceState.getRefines()) != null) return ret;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/3177/buggy-version/ac.soton.eventb.statemachinesJ.generator.src.ac.soton.eventb.statemachinesJ.generator.rules.State2TypingInvariantsRule.java", "BodyUseAPI": [], "Fixed commit": "fe580038fabe93c50721fd90fc34a91d020c4c10", "Url": "https://api.github.com/repos/mgt1g13/Statemachine-Java-Generator", "Date": "2014-06-19T15:19:35Z"},
{"Line": "=>424", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.pentaho.platform.repository2.unified.webservices.DefaultUnifiedRepositoryWebService.getLocalePropertiesForFileById(file.getId(),java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (propertiesWrapper != null) { java.util.Properties properties = propertiesWrapper.getProperties(); if ((properties != null) && (!(properties.isEmpty()))) { for (java.lang.String key : properties.stringPropertyNames()) { keyValueList.add(getStringKeyStringValueDto(key, properties.getProperty(key))); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/3751/buggy-version/extensions.src.org.pentaho.platform.web.http.api.resources.services.FileService.java", "BodyUseAPI": ["org.pentaho.platform.repository2.unified.webservices.PropertiesWrapper.getProperties()"], "Fixed commit": "c27b99bd83949bd29ab9e75f2beccddb5546c9ca", "Url": "https://api.github.com/repos/rfellows/pentaho-platform", "Date": "2014-09-11T18:38:39Z"},
{"Line": "=>453", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ng.name.isEmpty()) { prefix = ((((\"N\" + number) + (gate.plugin.learningframework.features.FeatureExtraction.NAMESEP)) + annType) + (gate.plugin.learningframework.features.FeatureExtraction.NAMESEP)) + featureName; }else { prefix = ng.name; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/8564/buggy-version/src.gate.plugin.learningframework.features.FeatureExtraction.java", "BodyUseAPI": [], "Fixed commit": "5e29267dd2320635c71092888681512a4e9f1b52", "Url": "https://api.github.com/repos/GenevieveGorrell/gateplugin-LearningFramework", "Date": "2016-02-05T20:12:07Z"},
{"Line": "=>502", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(al.name.isEmpty())) { tmpName = (al.name) + i; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/8564/buggy-version/src.gate.plugin.learningframework.features.FeatureExtraction.java", "BodyUseAPI": [], "Fixed commit": "5e29267dd2320635c71092888681512a4e9f1b52", "Url": "https://api.github.com/repos/GenevieveGorrell/gateplugin-LearningFramework", "Date": "2016-02-05T20:12:07Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.persistence.EntityManager.find(java.lang.Class,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (user != null) em.refresh(user);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/6246/buggy-version/src.edu.neu.lovesports.orm.dao.UserDAO.java", "BodyUseAPI": ["javax.persistence.EntityManager.refresh(edu.neu.lovesports.orm.models.User)"], "Fixed commit": "9f9b740e2f24bac4aec0a3a2b5eeb3da417be98a", "Url": "https://api.github.com/repos/LoveSports/ORM-by-JW", "Date": "2015-04-26T01:48:28Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (map == null) map = Profile.DEFAULT_MAP;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/1104/buggy-version/src.com.patrick_vane.unrealscript.editor.executable.UDKGame.java", "BodyUseAPI": [], "Fixed commit": "86379d7ad2412a9d0dfe5864143fcf6d8f484a37", "Url": "https://api.github.com/repos/patrickvane/unrealscript_editor", "Date": "2013-03-26T14:49:51Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (map == null) map = Profile.DEFAULT_MAP;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/1104/buggy-version/src.com.patrick_vane.unrealscript.editor.executable.UDKEditor.java", "BodyUseAPI": [], "Fixed commit": "86379d7ad2412a9d0dfe5864143fcf6d8f484a37", "Url": "https://api.github.com/repos/patrickvane/unrealscript_editor", "Date": "2013-03-26T14:49:51Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.PushbackInputStream.read()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (b >= 0) { is.unread(b); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/6537/buggy-version/src.main.com.mucommander.ui.viewer.FilePreloadWorker.java", "BodyUseAPI": ["java.io.PushbackInputStream.unread(int)"], "Fixed commit": "d106cea6b67e843edb6939fdb5d8f5c3f9879cc8", "Url": "https://api.github.com/repos/trol73/mucommander", "Date": "2016-08-05T16:02:30Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((player.currHandSum()) > 21) { playerWin = false; endRound(); }else if ((dealer.currHandSum()) > 21) { playerWin = true; player.win(); endRound(); }else if ((player.currHandSum()) == (dealer.currHandSum())) { playerWin = false; tie = true; player.refund(); endRound(); }else if ((player.currHandSum()) > (dealer.currHandSum())) { playerWin = true; player.win(); endRound(); }else { playerWin = false; endRound(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/677/buggy-version/Blackjack.src.main.java.blackjack.game.Round.java", "BodyUseAPI": ["blackjack.game.GamePlayer.win()", "blackjack.game.GamePlayer.currHandSum()", "blackjack.game.GamePlayer.refund()", "blackjack.game.GamePlayer.currHandSum()", "blackjack.game.GamePlayer.win()"], "Fixed commit": "64cdbec211600c7c3cf07ae174f4dd4276ff7742", "Url": "https://api.github.com/repos/aeuzent/java", "Date": "2015-08-21T16:39:58Z"},
{"Line": "=>834", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["T.join()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (joins == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/5276/buggy-version/snowstORM.src.net.yetibyte.snowstorm.DatabaseAccessor.java", "BodyUseAPI": [], "Fixed commit": "dec1c5d84b106e8dff88fb69ec8d0b48ad1c40c9", "Url": "https://api.github.com/repos/Yeti47/snowstORM", "Date": "2017-10-16T19:21:49Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Scanner.useDelimiter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (contentScanner.hasNext()) { content = contentScanner.next(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/5201/buggy-version/src.main.java.bb.tokenizer.ETemplateGen.java", "BodyUseAPI": ["java.util.Scanner.next()"], "Fixed commit": "0f713d0adfea650c16e68b2a867143f281fccd6c", "Url": "https://api.github.com/repos/carsongross/barbarossa-templates", "Date": "2017-06-27T23:37:59Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.content.get(\"renderIntoMethod\").length()) > 0) { toReturn = toReturn + \" try {\\n\"; toReturn = toReturn + (content.get(\"renderIntoMethod\")); toReturn = ((toReturn + \"} catch (IOException e) {\\n\") + \" throw new RuntimeException(e);\\n\") + \" }\\n\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/5201/buggy-version/src.main.java.bb.tokenizer.ETemplateGen.java", "BodyUseAPI": [], "Fixed commit": "0f713d0adfea650c16e68b2a867143f281fccd6c", "Url": "https://api.github.com/repos/carsongross/barbarossa-templates", "Date": "2017-06-27T23:37:59Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (endsWith(r, \".jpg\", \".jpeg\")) { return \"image/jpeg\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/3297/buggy-version/core.src.main.java.org.httpobjects.util.MimeTypeTool.java", "BodyUseAPI": [], "Fixed commit": "5062bbd00aaabcf44c53af91cc7acc8170a4ec24", "Url": "https://api.github.com/repos/chrisalbright/httpobjects", "Date": "2012-11-06T06:24:49Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (endsWith(r, \".gif\")) { return \"image/gif\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/3297/buggy-version/core.src.main.java.org.httpobjects.util.MimeTypeTool.java", "BodyUseAPI": [], "Fixed commit": "5062bbd00aaabcf44c53af91cc7acc8170a4ec24", "Url": "https://api.github.com/repos/chrisalbright/httpobjects", "Date": "2012-11-06T06:24:49Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.xeiam.xchange.ripple.service.polling.RippleTradeServiceRaw.getOrderDetails(java.lang.String,notification.getHash())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (orderDetails == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/1770/buggy-version/xchange-ripple.src.main.java.com.xeiam.xchange.ripple.service.polling.RippleTradeServiceRaw.java", "BodyUseAPI": [], "Fixed commit": "de3a3b440b0f190dfdf7a36b8652dd253557d5ae", "Url": "https://api.github.com/repos/stachon/XChange", "Date": "2015-07-29T06:38:47Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isOuter && (!(parsed.isEmpty()))) { throw new java.lang.Exception(\"unexpected additional characters\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/9065/buggy-version/calc.java", "BodyUseAPI": [], "Fixed commit": "10a7a094fd3e2a2468f7ae81d1b5996b069a34c9", "Url": "https://api.github.com/repos/michaelj23/javaCalculator", "Date": "2015-02-22T01:03:45Z"},
{"Line": "=>736", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mScrollableView) != null) && ((mScrollableView) instanceof android.widget.ScrollView)) { top = mScrollableView.getScrollY(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/1743/buggy-version/app.src.main.java.com.sothree.slidinguppanel.SlidingUpPanelLayout.java", "BodyUseAPI": [], "Fixed commit": "7b869394e9d197e6f56a833804426577dcb8458a", "Url": "https://api.github.com/repos/dlukashev/AndroidSlidingUpPanel-foursquare-map-demo", "Date": "2015-06-21T17:12:49Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.BufferedReader.readLine()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (ln == null) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/7032/buggy-version/engine.src.core.com.jme3.shader.plugins.GLSLLoader.java", "BodyUseAPI": [], "Fixed commit": "6d60d7075c9dd15e4734d34c46ee3b7dbf37d962", "Url": "https://api.github.com/repos/chototsu/MikuMikuStudio", "Date": "2013-11-22T20:58:27Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((user.favorites) == null) user.favorites = new java.util.ArrayList();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/4444/buggy-version/app.src.main.java.com.b5.findfurryfriends.firebase.DataWrapper.java", "BodyUseAPI": [], "Fixed commit": "c671b488687b5a798236578c6e7ca65e23033e23", "Url": "https://api.github.com/repos/jyang14/FindFurryFriends", "Date": "2017-05-08T14:41:25Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (defaultValue.endsWith(\"::character varying\")) { defaultValue = defaultValue.substring(1, ((defaultValue.length()) - (\"'::character varying\".length()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/2343/buggy-version/domain.src.main.java.joist.domain.orm.queries.columns.StringAliasColumn.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "a388b27716b4613aea1cf76e343b1aadea6a7afd", "Url": "https://api.github.com/repos/mdietz198/joist", "Date": "2012-09-05T19:30:02Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isTabletLayout()) { refreshDetails(results.get(0)); }else { mResult = results.get(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/4723/buggy-version/app.src.main.java.mx.evin.udacity.popularmovies.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "c135ef8d104c0421a990ce136dcc2cd0e69ea317", "Url": "https://api.github.com/repos/Evin1-/PopularMovies", "Date": "2016-02-12T03:50:51Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.openbravo.data.loader.DataRead.getBytes(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (b != null) { properties.loadFromXML(new java.io.ByteArrayInputStream(dr.getBytes(i))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/5782/buggy-version/src-data.com.openbravo.data.loader.Datas.java", "BodyUseAPI": [], "Fixed commit": "fd16320cf53aca71779f452de9d9786ab3942ab2", "Url": "https://api.github.com/repos/nordpos/nordpos", "Date": "2017-09-26T17:40:21Z"},
{"Line": "=>530", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (super.containsTermRecursively(target)) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/3257/buggy-version/nars_java.nars.language.CompoundTerm.java", "BodyUseAPI": [], "Fixed commit": "4ccce62d19bf234a8bd00b8951d47523e50dea83", "Url": "https://api.github.com/repos/opennars/opennars", "Date": "2014-11-29T02:58:08Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!repeated) { levelmodel.DummyObject d = dummyTypeSelector.createNewDummyObject(); level.getDummyObjects().newDummy((x + (scrollX)), (y + (scrollY)), d); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/1380/buggy-version/src.leveledit.MapView.java", "BodyUseAPI": [], "Fixed commit": "97abe5ea885832e2d42bc13fc2c35630f72e07f3", "Url": "https://api.github.com/repos/jonath0000/level-edit", "Date": "2014-01-10T09:53:18Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.wpi.cs.wpisuitetng.modules.requirementmanager.tabs.MainTabView.indexAtLocation(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((index >= 0) && (index < (view.getTabCount()))) { java.awt.Component tab = view.getComponentAt(index); if (tab instanceof edu.wpi.cs.wpisuitetng.modules.requirementmanager.list.views.ListRequirementsView) { ((edu.wpi.cs.wpisuitetng.modules.requirementmanager.list.views.ListRequirementsView) (tab)).getModelController().refreshData(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/4562/buggy-version/RequirementManager.src.edu.wpi.cs.wpisuitetng.modules.requirementmanager.tabs.MainTabController.java", "BodyUseAPI": ["edu.wpi.cs.wpisuitetng.modules.requirementmanager.tabs.MainTabView.getComponentAt(int)"], "Fixed commit": "87e70b1ad538bc237021e96cc9d11d4faa03ea18", "Url": "https://api.github.com/repos/gsisko/wpi-suite-tng", "Date": "2013-04-02T19:39:00Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.wpi.cs.wpisuitetng.modules.requirementmanager.list.views.ListTabView.indexAtLocation(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((index >= 0) && (index < (this.getTabCount()))) { java.awt.Component tab = this.getComponentAt(index); if (tab instanceof edu.wpi.cs.wpisuitetng.modules.requirementmanager.iteration.IterationListPanel) { ((edu.wpi.cs.wpisuitetng.modules.requirementmanager.iteration.IterationListPanel) (tab)).getRetrieveAllController().refreshData(); }else { ((edu.wpi.cs.wpisuitetng.modules.requirementmanager.filter.FilterListPanel) (tab)).getRetrieveAllController().refreshData(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/4562/buggy-version/RequirementManager.src.edu.wpi.cs.wpisuitetng.modules.requirementmanager.list.views.ListTabView.java", "BodyUseAPI": ["edu.wpi.cs.wpisuitetng.modules.requirementmanager.list.views.ListTabView.getComponentAt(int)"], "Fixed commit": "87e70b1ad538bc237021e96cc9d11d4faa03ea18", "Url": "https://api.github.com/repos/gsisko/wpi-suite-tng", "Date": "2013-04-02T19:39:00Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (line < (l.start_)) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/6050/buggy-version/src.main.java.com.inqwell.any.EvalExpr.java", "BodyUseAPI": [], "Fixed commit": "525d4e7d025fd06bc1def20f9ac0e23b21f0783c", "Url": "https://api.github.com/repos/inqwell/inq", "Date": "2016-09-01T18:52:18Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (overwrite) { featureStore.removeFeatures(Filter.INCLUDE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/4247/buggy-version/src.geotools.src.main.java.org.geogit.geotools.porcelain.SLExport.java", "BodyUseAPI": [], "Fixed commit": "9d82b81f5d3f8e8d84de3d6f472d4f025832d7f6", "Url": "https://api.github.com/repos/groldan/GeoGit", "Date": "2013-01-16T21:56:21Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (overwrite) { featureStore.removeFeatures(Filter.INCLUDE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/4247/buggy-version/src.geotools.src.main.java.org.geogit.geotools.porcelain.PGExport.java", "BodyUseAPI": [], "Fixed commit": "9d82b81f5d3f8e8d84de3d6f472d4f025832d7f6", "Url": "https://api.github.com/repos/groldan/GeoGit", "Date": "2013-01-16T21:56:21Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((engine.getCount2()) == 1) && ((engine.getTwoAmount()) != (-1))) { ship = engine.getShipDouble()[engine.getTwoAmount()]; if (ship.make(x, y)) { setFill(Color.BLUE); func.marketYellow(x, y); if ((engine.getSaveX()) == (x)) { func.marketYellow(x, ((y) - 1)); func.marketYellow(x, ((y) + 1)); }else if ((engine.getSaveY()) == (y)) { func.marketYellow(((x) - 1), y); func.marketYellow(((x) + 1), y); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/8238/buggy-version/src.sample.MyRectangle.java", "BodyUseAPI": ["sample.Engine.getSaveY()", "sample.Engine.getSaveX()", "sample.Engine.getShipDouble()", "sample.Engine.getTwoAmount()"], "Fixed commit": "6239d1df4485e942b5a35bbcdf686297f78ac684", "Url": "https://api.github.com/repos/Grinadir/SeaBattle4.0", "Date": "2015-05-03T18:37:01Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.sunbird.notification.utils.JsonUtil.isStringNullOREmpty(org.sunbird.notification.sms.providerimpl.Msg91SmsProvider.sender)) { org.sunbird.notification.sms.providerimpl.Msg91SmsProvider.sender = org.sunbird.notification.utils.PropertiesCache.getInstance().getProperty(\"sunbird.msg.91.sender\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/9164/buggy-version/sunbird-notification.src.main.java.org.sunbird.notification.sms.providerimpl.Msg91SmsProvider.java", "BodyUseAPI": [], "Fixed commit": "737781706a0e8f068a63d612fc3f925f0dd5e357", "Url": "https://api.github.com/repos/project-sunbird/sunbird-utils", "Date": "2017-12-21T12:18:37Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState == null) getSupportFragmentManager().beginTransaction().replace(R.id.container, new com.example.android.sunshine.MainActivity.PlaceHolderFragment()).commit();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/1334/buggy-version/Sunshine.app.src.main.java.com.example.android.sunshine.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "dd56c9b72a03c020b6119e6e432b8c08f2036622", "Url": "https://api.github.com/repos/octacode/Sunshine-1", "Date": "2017-06-04T09:19:53Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fileSize == 0) { throw new com.facebook.presto.spi.PrestoException(com.facebook.presto.hive.HiveErrorCode.HIVE_BAD_DATA, (\"ORC file is empty: \" + path)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/8134/buggy-version/presto-hive.src.main.java.com.facebook.presto.hive.orc.DwrfPageSourceFactory.java", "BodyUseAPI": [], "Fixed commit": "678db4410eb64295d2cf2e8eb4fba74bf65b2ad4", "Url": "https://api.github.com/repos/shantanusharma/presto", "Date": "2017-12-27T19:19:00Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(recordList.isEmpty())) { if ((recordList.get(((recordList.size()) - 1)).getRunId()) <= untilRunId) recordList.remove(((recordList.size()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/6384/buggy-version/src.oj.OJ.java", "BodyUseAPI": ["recordList.get(((recordList.size()) - 1)).getRunId()", "java.util.ArrayList<record.Record>.size()", "java.util.ArrayList<record.Record>.size()", "java.util.ArrayList<record.Record>.get(((recordList.size()) - 1))", "java.util.ArrayList<record.Record>.remove(((recordList.size()) - 1))"], "Fixed commit": "507600fcb91df34b28a60ad5e3b31ffd3dfac208", "Url": "https://api.github.com/repos/foreverbell/OJMon", "Date": "2013-05-04T13:17:14Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((type == (java.lang.Boolean.class)) || (type == (boolean.class))) { final java.lang.Boolean v = java.lang.Boolean.valueOf(rs.getBoolean(i)); return ((S) (rs.wasNull() ? null : v)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/8576/buggy-version/src.org.kered.dko.Util.java", "BodyUseAPI": [], "Fixed commit": "c611e2a2e08f7274109be19f470499050a7ee06f", "Url": "https://api.github.com/repos/keredson/DKO", "Date": "2013-12-10T16:54:05Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type == (java.lang.String.class)) { return ((S) (rs.getString(i))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/8576/buggy-version/src.org.kered.dko.Util.java", "BodyUseAPI": [], "Fixed commit": "c611e2a2e08f7274109be19f470499050a7ee06f", "Url": "https://api.github.com/repos/keredson/DKO", "Date": "2013-12-10T16:54:05Z"},
{"Line": "=>2104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((personWrapper.getSiadap()) != null) { for (module.siadap.domain.SiadapEvaluationUniverse evalUniverse : personWrapper.getSiadap().getSiadapEvaluationUniverses()) { if (((evalUniverse.getHarmonizationAssessment()) != null) && ((evalUniverse.getHarmonizationAssessment()) == false)) { return true; } if (((evalUniverse.getHarmonizationAssessmentForExcellencyAward()) != null) && ((evalUniverse.getHarmonizationAssessmentForExcellencyAward()) == false)) { return true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/4174/buggy-version/src.main.java.module.siadap.domain.wrappers.UnitSiadapWrapper.java", "BodyUseAPI": ["personWrapper.getSiadap().getSiadapEvaluationUniverses()", "module.siadap.domain.wrappers.PersonSiadapWrapper.getSiadap()"], "Fixed commit": "35ca4c29f0a873923cc7691c5420c4d879b52fee", "Url": "https://api.github.com/repos/ist-dsi/siadap", "Date": "2015-03-13T17:00:03Z"},
{"Line": "=>2041", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((personToHarmonize.getSiadap()) != null) { personToHarmonize.getSiadap().markAsHarmonized(currentDate, siadapUniverse); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/4174/buggy-version/src.main.java.module.siadap.domain.wrappers.UnitSiadapWrapper.java", "BodyUseAPI": ["personToHarmonize.getSiadap().markAsHarmonized(org.joda.time.LocalDate,module.siadap.domain.SiadapUniverse)", "module.siadap.domain.wrappers.PersonSiadapWrapper.getSiadap()"], "Fixed commit": "35ca4c29f0a873923cc7691c5420c4d879b52fee", "Url": "https://api.github.com/repos/ist-dsi/siadap", "Date": "2015-03-13T17:00:03Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (values == null) return result;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/2256/buggy-version/src.java.main.edu.cmu.ml.proppr.prove.wam.plugins.FactsPlugin.java", "BodyUseAPI": [], "Fixed commit": "38762d7fdc97096238a571dd51c374988157fef6", "Url": "https://api.github.com/repos/TeamCohen/ProPPR", "Date": "2014-11-21T18:51:44Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["one.kii.kiimate.model.core.dai.ModelPublicationDai.loadPublications(ModelPublicationDai.ChannelSet)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (publications.isEmpty()) { throw new one.kii.summer.io.exception.NotFound(one.kii.summer.beans.utils.UniqueFinder.find(channelSet)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/19/buggy-version/model-core-impl.src.main.java.com.sinewang.kiimate.model.core.api.DefaultVisitModelApi.java", "BodyUseAPI": [], "Fixed commit": "8378ed70bf09a9e54439862e43f53ee2f81a6aa0", "Url": "https://api.github.com/repos/SINeWang/kiimate", "Date": "2017-06-26T03:16:58Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (pos > 0) return (flattenedKey.substring(0, pos)) + (flattenedKey.substring((pos + (com.hortonworks.streamline.streams.runtime.storm.bolt.query.WindowedQueryBolt.EVENT_PREFIX.length()))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/199/buggy-version/streams.runners.storm.runtime.src.main.java.com.hortonworks.streamline.streams.runtime.storm.bolt.query.WindowedQueryBolt.java", "BodyUseAPI": ["java.lang.String.substring(int)", "java.lang.String.substring(int,int)"], "Fixed commit": "b3dc0ed430735671cda0ea3eb0ac75f6824a5a8f", "Url": "https://api.github.com/repos/hmcl/Streams", "Date": "2017-04-18T01:21:45Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (pos == 0) return flattenedKey.substring(com.hortonworks.streamline.streams.runtime.storm.bolt.query.WindowedQueryBolt.EVENT_PREFIX.length());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/199/buggy-version/streams.runners.storm.runtime.src.main.java.com.hortonworks.streamline.streams.runtime.storm.bolt.query.WindowedQueryBolt.java", "BodyUseAPI": [], "Fixed commit": "b3dc0ed430735671cda0ea3eb0ac75f6824a5a8f", "Url": "https://api.github.com/repos/hmcl/Streams", "Date": "2017-04-18T01:21:45Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.faces.component.behavior.ClientBehaviorContext.getComponent()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (comp instanceof javax.faces.component.ActionSource2) { script = script.replaceAll(\"this\", ((\"dojo.byId(\\\"\" + (comp.getClientId())) + \"\\\")\")); }else { java.lang.String jsfNode = ((org.dojoserverfaces.widget.DojoWidget) (comp)).getJsfNode(); if ((jsfNode != null) && ((jsfNode.length()) > 0)) { script = script.replaceAll(\"this\", (\"this.\" + jsfNode)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/4073/buggy-version/dojoserverfaces-core.src.main.java.org.dojoserverfaces.widget.property.EventHandlerProperty.java", "BodyUseAPI": ["javax.faces.component.UIComponent.getClientId()", "java.lang.String.replaceAll(java.lang.String,((\"dojo.byId(\\\"\" + (comp.getClientId())) + \"\\\")\"))"], "Fixed commit": "f48011210db986ac259e4150ac848921c86ca44f", "Url": "https://api.github.com/repos/zhangzxm/DojoServerFaces", "Date": "2011-05-09T07:42:43Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.faces.context.FacesContext.getPartialViewContext()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((pvContext.isPartialRequest()) && (pvContext.isAjaxRequest())) { java.lang.String sourceId = requestParams.get(\"javax.faces.source\"); if (!(component.getClientId(context).equals(sourceId))) return; component.queueEvent(new javax.faces.event.ActionEvent(component)); }else if (requestParams.containsKey(component.getClientId(context))) { component.queueEvent(new javax.faces.event.ActionEvent(component)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/4073/buggy-version/dojoserverfaces-core.src.main.java.org.dojoserverfaces.widget.ActionPostBackHandler.java", "BodyUseAPI": [], "Fixed commit": "f48011210db986ac259e4150ac848921c86ca44f", "Url": "https://api.github.com/repos/zhangzxm/DojoServerFaces", "Date": "2011-05-09T07:42:43Z"},
{"Line": "=>12", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.stream.IntStream.reduce(java.util.function.IntBinaryOperator)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (reduce.isPresent()) { return reduce.getAsInt(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/325/buggy-version/src.main.java.MountainHelper.java", "BodyUseAPI": ["java.util.OptionalInt.getAsInt()"], "Fixed commit": "d3b8dd5ebe0578aacf7e5bb74ec0b4d174e65e72", "Url": "https://api.github.com/repos/binu-manoharan/codingame", "Date": "2016-09-03T13:07:54Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (null != schemaId) { builder = new uk.gov.gchq.gaffer.store.schema.Schema.Builder().id(schemaId).json(uk.gov.gchq.gaffer.commonutil.StreamUtil.openStreams(uk.gov.gchq.gaffer.operation.export.resultcache.handler.util.GafferResultCacheUtil.class, \"gafferResultCache/schema\")); }else { builder = new uk.gov.gchq.gaffer.store.schema.Schema.Builder().json(uk.gov.gchq.gaffer.commonutil.StreamUtil.openStreams(uk.gov.gchq.gaffer.operation.export.resultcache.handler.util.GafferResultCacheUtil.class, \"gafferResultCache/schema\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/7446/buggy-version/core.graph.src.main.java.uk.gov.gchq.gaffer.operation.export.resultcache.handler.util.GafferResultCacheUtil.java", "BodyUseAPI": ["uk.gov.gchq.gaffer.store.schema.Schema.Builder.id(java.lang.String)", "new uk.gov.gchq.gaffer.store.schema.Schema.Builder().id(schemaId).json(uk.gov.gchq.gaffer.commonutil.StreamUtil.openStreams(uk.gov.gchq.gaffer.operation.export.resultcache.handler.util.GafferResultCacheUtil.class, \"gafferResultCache/schema\"))"], "Fixed commit": "5ef9c2e48b3a573f797680623dda9f8407c02973", "Url": "https://api.github.com/repos/gchq/Gaffer", "Date": "2017-10-27T08:42:00Z"},
{"Line": "=>1263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.arivu.log.AsyncLogger.get(java.util.Map<java.lang.String, java.lang.Object>,java.lang.String,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (object instanceof java.util.Collection) { split = ((java.util.Collection<java.lang.String>) (object)); }else { split = ((java.util.Collection<java.lang.String>) (org.arivu.log.AsyncLogger.convert(((java.util.Map<java.lang.String, java.lang.String>) (org.arivu.log.AsyncLogger.get(json, \"appenders\", null)))))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/2681/buggy-version/lightninglog.src.main.java.org.arivu.log.AsyncLogger.java", "BodyUseAPI": [], "Fixed commit": "b6828c9102a58f2bf8545df1424321ceba991b3d", "Url": "https://api.github.com/repos/parthipan1/arivu", "Date": "2016-09-14T13:05:13Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((artists) != null) { mArtistsAdapter.addAll(artists); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/3952/buggy-version/app.src.main.java.si.vei.pedram.spotifystreamer.fragments.ArtistSearchFragment.java", "BodyUseAPI": [], "Fixed commit": "f65dc2e4b35b924e21f32b84429db20504ebf71e", "Url": "https://api.github.com/repos/PedramVeisi/SpotifyStreamer", "Date": "2015-08-14T05:16:04Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.lumeer.engine.api.data.DataDocument.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (value == null) { throw new io.lumeer.engine.api.exception.ViewMetadataNotFoundException(io.lumeer.engine.util.ErrorMessageBuilder.viewMetadataValueNotFoundString(viewId, (\"configuration.\" + attributeName))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/397/buggy-version/war.src.main.java.io.lumeer.engine.controller.ViewFacade.java", "BodyUseAPI": [], "Fixed commit": "743b199d99ca8602663e07b3f6a568bd1d3d2f1b", "Url": "https://api.github.com/repos/Lumeer/engine", "Date": "2016-12-17T22:33:12Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (line.startsWith(\"d \")) currentMaterial.color.a = java.lang.Float.valueOf(line.split(\" \")[1]); else if (line.startsWith(\"map_Kd \")) { currentMaterial.textureName = line.split(\" \")[1]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/1297/buggy-version/src.mEngine.util.rendering.ModelHelper.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)", "java.lang.String.split(java.lang.String)", "java.lang.Float.valueOf(java.lang.String)", "java.lang.String.startsWith(java.lang.String)"], "Fixed commit": "9db8e831172f979a5818e4f8c5afa63c0af434c0", "Url": "https://api.github.com/repos/mGameLabs/mEngine", "Date": "2014-05-18T18:59:47Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mLastUploadedLocation) == null) { mLastUploadedLocation = com.hmsoft.locationlogger.data.locatrack.LocatrackDb.last(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/8921/buggy-version/mobile.src.main.java.com.hmsoft.locationlogger.data.locatrack.LocatrackOnlineStorer.java", "BodyUseAPI": [], "Fixed commit": "ebd99b3c83465b80f3432edec9a870e651aa9860", "Url": "https://api.github.com/repos/hmrs-cr/android-nmea-logger", "Date": "2015-08-11T02:27:21Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["exchange.getIn().getHeader(Exchange.HTTP_URI,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((context.endsWith(\".js\")) || (context.endsWith(\".html\"))) { response.setStatus(HttpServletResponse.SC_NOT_FOUND); if (nz.co.fortytwo.signalk.processor.RestSubscribeProcessor.logger.isDebugEnabled()) nz.co.fortytwo.signalk.processor.RestSubscribeProcessor.logger.debug(\"Returning SC_NOT_FOUND\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/9039/buggy-version/src.main.java.nz.co.fortytwo.signalk.processor.RestSubscribeProcessor.java", "BodyUseAPI": [], "Fixed commit": "e5c2e9f60f93da592ef956787bbd0f8fbb3fa376", "Url": "https://api.github.com/repos/SignalK/signalk-server-java", "Date": "2015-04-01T19:58:50Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.nextencia.rrdiagram.grammar.model.Repetition.getExpression()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((repetitionExpression instanceof net.nextencia.rrdiagram.grammar.model.RuleReference) && (((net.nextencia.rrdiagram.grammar.model.RuleReference) (repetitionExpression)).getRuleName().equals(ruleLink.getRuleName()))) { java.lang.Integer maxRepetitionCount = repetition.getMaxRepetitionCount(); if ((maxRepetitionCount == null) || (maxRepetitionCount > 1)) { rrElement = new net.nextencia.rrdiagram.grammar.rrdiagram.RRLoop(ruleLink.toRRElement(grammarToRRDiagram), null, repetition.getMinRepetitionCount(), (maxRepetitionCount == null ? null : maxRepetitionCount)); i++; } }else if (repetitionExpression instanceof net.nextencia.rrdiagram.grammar.model.Sequence) { net.nextencia.rrdiagram.grammar.model.Expression[] subExpressions = ((net.nextencia.rrdiagram.grammar.model.Sequence) (repetitionExpression)).getExpressions(); if (((((subExpressions.length) == 2) && ((subExpressions[0]) instanceof net.nextencia.rrdiagram.grammar.model.Literal)) && ((subExpressions[1]) instanceof net.nextencia.rrdiagram.grammar.model.RuleReference)) && (((net.nextencia.rrdiagram.grammar.model.RuleReference) (subExpressions[1])).getRuleName().equals(ruleLink.getRuleName()))) { java.lang.Integer maxRepetitionCount = repetition.getMaxRepetitionCount(); if ((maxRepetitionCount == null) || (maxRepetitionCount > 1)) { rrElement = new net.nextencia.rrdiagram.grammar.rrdiagram.RRLoop(ruleLink.toRRElement(grammarToRRDiagram), subExpressions[0].toRRElement(grammarToRRDiagram), repetition.getMinRepetitionCount(), (maxRepetitionCount == null ? null : maxRepetitionCount)); i++; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/140/buggy-version/src.main.java.net.nextencia.rrdiagram.grammar.model.Sequence.java", "BodyUseAPI": ["net.nextencia.rrdiagram.grammar.model.RuleReference.getRuleName()", "net.nextencia.rrdiagram.grammar.model.RuleReference.toRRElement(net.nextencia.rrdiagram.grammar.model.GrammarToRRDiagram)", "net.nextencia.rrdiagram.grammar.model.RuleReference.toRRElement(net.nextencia.rrdiagram.grammar.model.GrammarToRRDiagram)", "((net.nextencia.rrdiagram.grammar.model.RuleReference) (subExpressions[1])).getRuleName().equals(ruleLink.getRuleName())"], "Fixed commit": "56a07cc8ec35000e0d5361a6b0b30e3d1add0cf1", "Url": "https://api.github.com/repos/Chrriis/RRDiagram", "Date": "2017-06-22T13:56:32Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.HttpURLConnection.getResponseCode()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (code < 400) { try (java.io.InputStream is = huc.getInputStream()) { org.apache.commons.io.FileUtils.copyInputStreamToFile(is, dest); eu.transkribus.core.util.UrlUtils.logger.info((\"File loaded from URL: \" + source)); } catch (java.io.IOException ioe) { throw new java.io.IOException((\"Could not get connection to URL: \" + source), ioe); } }else { eu.transkribus.core.util.UrlUtils.logger.error((((\"Could not download file at \" + source) + \": HTTP Status = \") + code)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/152/buggy-version/src.main.java.eu.transkribus.core.util.UrlUtils.java", "BodyUseAPI": ["org.slf4j.Logger.error(java.lang.String)"], "Fixed commit": "b6264c3e030dfb1c14abfbff0a76c85588e65990", "Url": "https://api.github.com/repos/Transkribus/TranskribusCore", "Date": "2017-09-07T10:21:11Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((pi.getData()) == null) || ((pi.getData().length) <= 0)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/3896/buggy-version/Torpedo.src.etri.sdn.controller.module.devicemanager.OFMDeviceManager.java", "BodyUseAPI": [], "Fixed commit": "7d5db07141d686ad0e9d85d8adbde981481efef7", "Url": "https://api.github.com/repos/bjlee72/IRIS", "Date": "2014-01-28T09:58:39Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.http.HttpEntity.getContentLength()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (contentSize < 0) contentSize = 8 * 1024;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/4901/buggy-version/lib.src.main.java.org.bitpipeline.lib.owm.OwmClient.java", "BodyUseAPI": [], "Fixed commit": "7701578634d937d455b761f41da518f6833a9693", "Url": "https://api.github.com/repos/migtavares/owmClient", "Date": "2013-03-25T09:13:38Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((x.intValue()) < 0) || ((y.intValue()) < 0)) { throw new java.lang.RuntimeException(\"Operand must not negative\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/4318/buggy-version/lab5_1.src.cpe200.BinaryCalculator.java", "BodyUseAPI": [], "Fixed commit": "71639d2027fbb2bc489e00a69b1d8c62216cf20f", "Url": "https://api.github.com/repos/kandaStroge/cpe200-week5-lab", "Date": "2016-09-20T08:28:45Z"},
{"Line": "=>336", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sum) < 0) { sum = 0.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/6314/buggy-version/Finance_Geek.app.src.main.java.com.example.finance_geek.HomePage.java", "BodyUseAPI": [], "Fixed commit": "aee9abbf8ff8c8b99b343857f9cd3ab5b7e93b92", "Url": "https://api.github.com/repos/aditya7395/senior_project", "Date": "2017-05-07T23:42:35Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toCharArray()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((str[0]) == (com.eleshchinskiy.service.constant.XmlConst.CLOSING_BRACKET)) { node.setValue(line.substring(1, ((line.length()) - 1))); }else { node.setValue(line.substring(0, ((line.length()) - 1))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/3560/buggy-version/src.com.eleshchinskiy.service.impl.NodeServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "06ed17a67eccdae303c876935d4546a38f49f4de", "Url": "https://api.github.com/repos/brebreamx/Java11_16_Leshchinskiy_Task_3", "Date": "2017-02-05T18:36:33Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(factory.FactoryBoy.modelDeletedSet().contains(type))) { factory.FactoryBoy.deleteAll(type); factory.FactoryBoy.modelDeletedSet().add(type); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/3019/buggy-version/factory-boy.app.factory.FactoryBoy.java", "BodyUseAPI": ["java.util.Set<java.lang.Class<?>>.add(java.lang.Class<T>)", "factory.FactoryBoy.deleteAll(java.lang.Class<T>)"], "Fixed commit": "a3bd068c9abb26bc5c38d6435ba2c6a6bd244bad", "Url": "https://api.github.com/repos/crazycode/play-factory-boy", "Date": "2012-08-19T15:21:07Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["apatitecontroler.Utils.getWorld(pl.getLocation().getWorld().getName())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (aw == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/78/buggy-version/src.apatitecontroler.EventHandlers.MainWorldPlayerControler.java", "BodyUseAPI": [], "Fixed commit": "c2dc3d253bf262bfe2af214e2074845ee105a436", "Url": "https://api.github.com/repos/terminator48/ApatiteControler", "Date": "2014-05-19T14:33:27Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["apatitecontroler.Utils.getWorld(e.getPlayer().getLocation().getWorld().getName())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (aw == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/78/buggy-version/src.apatitecontroler.EventHandlers.MainWorldPlayerControler.java", "BodyUseAPI": [], "Fixed commit": "c2dc3d253bf262bfe2af214e2074845ee105a436", "Url": "https://api.github.com/repos/terminator48/ApatiteControler", "Date": "2014-05-19T14:33:27Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["apatitecontroler.Utils.getWorld(e.getPlayer().getLocation().getWorld().getName())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (aw == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/78/buggy-version/src.apatitecontroler.EventHandlers.MainWorldPlayerControler.java", "BodyUseAPI": [], "Fixed commit": "c2dc3d253bf262bfe2af214e2074845ee105a436", "Url": "https://api.github.com/repos/terminator48/ApatiteControler", "Date": "2014-05-19T14:33:27Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (songName == null) { throw new com.svqjug.java101.chapter11.musicplayer.MusicPlayerException(\"Can't play null song\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/4243/buggy-version/chapter11.src.main.java.com.svqjug.java101.chapter11.musicplayer.MusicPlayer.java", "BodyUseAPI": [], "Fixed commit": "27626811d8cca612a30feae0fb65433ee121dbaf", "Url": "https://api.github.com/repos/agustinventura/Java101", "Date": "2017-12-11T18:27:06Z"},
{"Line": "=>375", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((currentKeyVal == null) || (currentKeyVal.equals(\"NONE\"))) { solveMap.get(\"global\").put(baseKey, value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/6745/buggy-version/src.main.java.uk.ac.imperial.libhpc2.schemaservice.api.ConstraintsRestResource.java", "BodyUseAPI": [], "Fixed commit": "2600966ec4e5ccc44e856b0bd848b6dfa8573e8f", "Url": "https://api.github.com/repos/jcohen02/tempss", "Date": "2017-10-26T15:50:32Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(json.isNull(\"url\"))) { this.url = json.getString(\"url\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/7428/buggy-version/twitter4j-core.src.internal-json.java.twitter4j.URLEntityJSONImpl.java", "BodyUseAPI": ["twitter4j.JSONObject.getString(java.lang.String)"], "Fixed commit": "ea47888153dce7308e70caaa4638450dd89435d6", "Url": "https://api.github.com/repos/nyaruka/twitter4j", "Date": "2016-09-13T14:16:59Z"},
{"Line": "=>4091", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isVariadicVariable(p)) { fullGetExpr = make().Apply(null, makeQualIdent(fullGetExpr, \"sequence\"), com.sun.tools.javac.util.List.<com.sun.tools.javac.tree.JCTree.JCExpression>nil()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/4363/buggy-version/src.com.redhat.ceylon.compiler.java.codegen.StatementTransformer.java", "BodyUseAPI": [], "Fixed commit": "7d19f7c4998050bd84bbcceb39eb97010efb84c6", "Url": "https://api.github.com/repos/ceylon/ceylon-compiler", "Date": "2014-12-18T19:18:34Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["number_of_star.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (num_of_star.equals(\"\")) { num_of_star = \"0\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/4268/buggy-version/src.com.example.newecosns.utnils.StarCallback.java", "BodyUseAPI": [], "Fixed commit": "8add37e0acf178fc2aa4ebd52cb84b465b3f30c2", "Url": "https://api.github.com/repos/uozias/newecosns", "Date": "2013-04-22T09:30:27Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((size) != 0) { for (int i = 0; i < (size); i++) { string.append(list[i]).append(\",\"); } if (string.substring(((string.length()) - 1), string.length()).equals(\",\")) { string.deleteCharAt(((string.length()) - 1)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/6989/buggy-version/Collections.src.com.learning.collections.MyArrayList.java", "BodyUseAPI": [], "Fixed commit": "77db553b32ad3f2518f71e24fffc4710f4df7486", "Url": "https://api.github.com/repos/hemantrevankar/CoreJava", "Date": "2016-12-02T09:43:26Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (section instanceof net.cubespace.Yamler.Config.Converter.Config) { return section; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/5897/buggy-version/Yamler-Core.src.main.java.net.cubespace.Yamler.Config.Converter.Config.java", "BodyUseAPI": [], "Fixed commit": "88383d44be91bd24f66674ead5ed9522214672ab", "Url": "https://api.github.com/repos/Cube-Space/Yamler", "Date": "2014-03-13T21:29:27Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["nz.ac.aut.ense701.gameModel.Game.isVisible(int,int)", "nz.ac.aut.ense701.gameModel.Game.isExplored(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (squareExplored || squareVisible) { lblText.setText(((\"<html><font color='white'>\" + (game.getOccupantStringRepresentation(row, column))) + \"</font></html>\")); setBorder((game.hasPlayer(row, column) ? nz.ac.aut.ense701.gui.GridSquarePanel.activeBorder : nz.ac.aut.ense701.gui.GridSquarePanel.normalBorder)); }else { lblText.setText(\"\"); lblText.setIcon(new javax.swing.ImageIcon(UNEXPLORED_IMAGE)); setBorder(nz.ac.aut.ense701.gui.GridSquarePanel.normalBorder); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/189/buggy-version/src.nz.ac.aut.ense701.gui.GridSquarePanel.java", "BodyUseAPI": [], "Fixed commit": "f9e17098a02a57de2a18a6a1fafb87fbf5ef9a59", "Url": "https://api.github.com/repos/spencerlee92/KiwiLand", "Date": "2017-04-12T21:26:10Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((precipChance) != null) && ((precipChance) > 0.7)) { conditions.incrementConditionIntBy(2); conditions.addWarning(\"High chance of rain\"); }else if (((precipChance) != null) && ((precipChance) > 0.5)) { conditions.incrementConditionIntBy(1); conditions.addWarning(\"Chance of rain\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/7626/buggy-version/app.src.main.java.com.dontcrashmydrone.dontcrashmydrone.weather.WeatherConditions.java", "BodyUseAPI": [], "Fixed commit": "0d5ac3b3beb9fb6c4ef5cd2288ca2cd314fb2331", "Url": "https://api.github.com/repos/stephentuso/dont-crash-my-drone", "Date": "2016-04-26T21:31:35Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.toAddress.equals(\"<enter email address here>\")) { java.lang.System.out.println(\"Please enter a valid email address\"); }else { new emailsecurity.SendEmailViaGmail(this.toAddress, this.subject, this.body); this.composeWindow.dispatchEvent(new java.awt.event.WindowEvent(this.composeWindow, java.awt.event.WindowEvent.WINDOW_CLOSING)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/5954/buggy-version/EmailSecurity.src.emailsecurity.ClientSendMailLayout.java", "BodyUseAPI": [], "Fixed commit": "e46a771cbc13c4090ecff5d3b508e74a51731958", "Url": "https://api.github.com/repos/EmailSecurity/JavaClient", "Date": "2015-10-02T20:34:48Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (subjectTextField.getText().equals(\"<enter subject here>\")) { java.lang.System.out.println(\"Entered if\"); subjectTextField.setText(\"\"); }else { java.lang.System.out.println(\"Couldn't enter if\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/5954/buggy-version/EmailSecurity.src.emailsecurity.ClientSendMailLayout.java", "BodyUseAPI": ["javax.swing.JTextField.setText(java.lang.String)"], "Fixed commit": "e46a771cbc13c4090ecff5d3b508e74a51731958", "Url": "https://api.github.com/repos/EmailSecurity/JavaClient", "Date": "2015-10-02T20:34:48Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (toTextField.getText().equals(\"<enter email address here>\")) { toTextField.setText(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/5954/buggy-version/EmailSecurity.src.emailsecurity.ClientSendMailLayout.java", "BodyUseAPI": ["javax.swing.JTextField.setText(java.lang.String)"], "Fixed commit": "e46a771cbc13c4090ecff5d3b508e74a51731958", "Url": "https://api.github.com/repos/EmailSecurity/JavaClient", "Date": "2015-10-02T20:34:48Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (bodyTextField.getText().equals(\"<enter email body here>\")) { bodyTextField.setText(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/5954/buggy-version/EmailSecurity.src.emailsecurity.ClientSendMailLayout.java", "BodyUseAPI": ["javax.swing.JTextArea.setText(java.lang.String)"], "Fixed commit": "e46a771cbc13c4090ecff5d3b508e74a51731958", "Url": "https://api.github.com/repos/EmailSecurity/JavaClient", "Date": "2015-10-02T20:34:48Z"},
{"Line": "=>690", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((debug) | localDebug) java.lang.System.out.println((\"TlvDisassemble.loadTlvValuesIntoTlvDictionary(b,jo) DATA_TYPE_BYTE: \" + (new com.comcast.oscar.utilities.HexString(bValue).toString(\":\"))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/9013/buggy-version/src.com.comcast.oscar.tlv.TlvDisassemble.java", "BodyUseAPI": [], "Fixed commit": "1aa5b8c7e12cbf8ac51d162a750b11d2190fdbb4", "Url": "https://api.github.com/repos/Comcast/Oscar", "Date": "2015-04-16T03:21:14Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (overrideUser.equals(\"\")) { overrideUser = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/8970/buggy-version/src.main.java.be.maximvdw.spigotas.SpigotAutoSend.java", "BodyUseAPI": [], "Fixed commit": "de8fe37c8eb71029f338dca2b09fd59c51fc6106", "Url": "https://api.github.com/repos/Maximvdw/SpigotAutoSend", "Date": "2017-01-08T01:36:14Z"},
{"Line": "=>393", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["asclib.core.CoreRing.length()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (size < (length + (head_len))) return -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/7675/buggy-version/asclib.src.asclib.core.CoreNet.java", "BodyUseAPI": [], "Fixed commit": "8e465f712ab18b28c5af52c7a8d17accb399b0d6", "Url": "https://api.github.com/repos/skywind3000/asclib", "Date": "2015-07-17T11:08:58Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (millisUntilFinished > (stageTime)) { millisUntilFinished--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/1010/buggy-version/app.src.main.java.com.voidgreen.eyesrelax.service.TimeService.java", "BodyUseAPI": [], "Fixed commit": "31e61591f30ec8e8a43d00bcfd60074629e61eb3", "Url": "https://api.github.com/repos/yaroslav-shlapak/EyesRelax", "Date": "2015-07-21T20:50:50Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["contract.m_expiry.substring(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (month.equals(\"12\")) { java.lang.Integer y = (java.lang.Integer.parseInt(year)) + 1; year = y.toString(); month = \"01\"; }else { java.lang.Integer m = (java.lang.Integer.parseInt(month)) + 1; month = m.toString(); if ((month.length()) == 1) { month = \"0\" + month; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/2678/buggy-version/src.main.java.trader.service.TwsApiService.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "99d5899d419653e894cab04ba4987e7038ee91c4", "Url": "https://api.github.com/repos/tgibson11/trader", "Date": "2013-10-17T00:27:57Z"},
{"Line": "=>522", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toLowerCase()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((\"author\".equals(key)) || (\"editor\".equals(key))) { entry.setField(key, (((entry.getField(key)) + \" and \") + content)); }else if (\"keywords\".equals(key)) { entry.setField(\"keywords\", (((entry.getField(\"keywords\")) + \", \") + content)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/814/buggy-version/src.main.java.net.sf.jabref.importer.fileformat.BibtexParser.java", "BodyUseAPI": ["net.sf.jabref.importer.fileformat.BibEntry.setField(java.lang.String,(((entry.getField(key)) + \" and \") + content))", "net.sf.jabref.importer.fileformat.BibEntry.getField(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "e1fcdd35e919b55599f9d07d0097cd3eca2eaf60", "Url": "https://api.github.com/repos/JabRef/jabref", "Date": "2016-01-25T17:07:13Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mScannerView) != null) { mScannerView.stopCamera(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/4900/buggy-version/app.src.main.java.itm.immokapfenberg.activity.QRScannerActivity.java", "BodyUseAPI": [], "Fixed commit": "3a0ac2e16411c9c5720214e0f73a813683bc820e", "Url": "https://api.github.com/repos/Floridus/immoKapfenberg", "Date": "2016-12-02T12:47:17Z"},
{"Line": "=>271", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.media.RingtoneManager.getRingtone(getActivity(),android.net.Uri)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (ringtone != null) notifRingTonePref.setSummary(ringtone.getTitle(getActivity())); else notifRingTonePref.setSummary(\"Unknown\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/3124/buggy-version/src.com.prasanna.android.stacknetwork.fragment.SettingsFragment.java", "BodyUseAPI": ["android.media.Ringtone.getTitle(getActivity())", "android.preference.RingtonePreference.setSummary(ringtone.getTitle(getActivity()))"], "Fixed commit": "ce27d1d85f74667722bc4bbfe3276cdceb79f260", "Url": "https://api.github.com/repos/prasannata/StackX", "Date": "2013-03-01T15:55:15Z"},
{"Line": "=>1043", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (word_reader == null) { edu.cuny.qc.speech.AuToBI.util.AuToBIUtils.error(((\"Unable to create wordreader for file: \" + filename) + \"\\n\\tCheck the file extension.\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/7198/buggy-version/src.edu.cuny.qc.speech.AuToBI.AuToBI.java", "BodyUseAPI": [], "Fixed commit": "75508d953b67dd6bf359afe7c357334e836a09da", "Url": "https://api.github.com/repos/ftesser/AuToBI", "Date": "2012-03-20T13:38:43Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (reviews == null) { android.util.Log.d(com.intelliviz.moviefinder.MovieUtils.TAG, \"Reviews is null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/2783/buggy-version/app.src.main.java.com.intelliviz.moviefinder.MovieUtils.java", "BodyUseAPI": [], "Fixed commit": "5497859d058358dee0329e2eceb8b1f7d0988279", "Url": "https://api.github.com/repos/emuhlestein/MovieFinder", "Date": "2016-04-22T21:29:33Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((java.lang.Math.abs(((matrix.get(k, k)) - (matrix.get(l, l))))) < (org.la4j.matrix.Matrices.EPS)) { alpha = beta = java.lang.Math.sqrt(0.5); }else { alpha = java.lang.Math.cos((0.5 * (java.lang.Math.atan2((2 * (matrix.get(k, l))), ((matrix.get(k, k)) - (matrix.get(l, l))))))); beta = java.lang.Math.sin((0.5 * (java.lang.Math.atan2((2 * (matrix.get(k, l))), ((matrix.get(k, k)) - (matrix.get(l, l))))))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/8328/buggy-version/src.main.java.org.la4j.decomposition.EigenDecompositor.java", "BodyUseAPI": ["org.la4j.matrix.Matrix.get(int,int)", "org.la4j.matrix.Matrix.get(int,int)", "org.la4j.matrix.Matrix.get(int,int)", "java.lang.Math.sin((0.5 * (java.lang.Math.atan2((2 * (matrix.get(k, l))), ((matrix.get(k, k)) - (matrix.get(l, l)))))))", "java.lang.Math.atan2((2 * (matrix.get(k, l))),((matrix.get(k, k)) - (matrix.get(l, l))))", "org.la4j.matrix.Matrix.get(int,int)", "org.la4j.matrix.Matrix.get(int,int)", "java.lang.Math.atan2((2 * (matrix.get(k, l))),((matrix.get(k, k)) - (matrix.get(l, l))))", "java.lang.Math.cos((0.5 * (java.lang.Math.atan2((2 * (matrix.get(k, l))), ((matrix.get(k, k)) - (matrix.get(l, l)))))))", "org.la4j.matrix.Matrix.get(int,int)"], "Fixed commit": "12ca633a1e35fb1586d5992261388f3b7ea0ed0e", "Url": "https://api.github.com/repos/hisohito/la4j", "Date": "2013-08-01T13:53:46Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["RUfoo.managers.Radio.readChannel(RUfoo.managers.Channel.Channel.values()[i])"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (msg != 0) { locs.add(intToMapLocation(msg)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/5508/buggy-version/managers.Radio.java", "BodyUseAPI": ["RUfoo.managers.Radio.intToMapLocation(int)", "java.util.List<battlecode.common.MapLocation>.add(battlecode.common.MapLocation)"], "Fixed commit": "895b3f0e4348be2f40668f65a872f03d6dfca9cb", "Url": "https://api.github.com/repos/RU-Battlecode/RUfoo", "Date": "2017-01-28T05:03:00Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((displayer instanceof org.jboss.dashboard.displayer.nvd3.LineChartDisplayer) && (feature.equals(DataDisplayerFeature.SET_FOREGRND_COLOR))) { return true; }else { return featuresSupported.contains(feature); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/1100/buggy-version/modules.dashboard-ui.dashboard-ui-chartlibs.dashboard-ui-nvd3.src.main.java.org.jboss.dashboard.displayer.nvd3.NVD3DisplayerRenderer.java", "BodyUseAPI": ["java.util.List<org.jboss.dashboard.displayer.nvd3.DataDisplayerFeature>.contains(org.jboss.dashboard.displayer.nvd3.DataDisplayerFeature)"], "Fixed commit": "d87178ffa15c80792b8ccb5d0e34853408088e00", "Url": "https://api.github.com/repos/droolsjbpm/dashboard-builder", "Date": "2013-03-21T11:15:24Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((m.getDate().getTime()) < 471188400000L) { key = \"Unknown\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/3045/buggy-version/HtmlGenerator.src.web.business.MetadataIndexer.java", "BodyUseAPI": [], "Fixed commit": "8de8a2b0282410f28746ea2d690368b38a6ed5b2", "Url": "https://api.github.com/repos/VIRTWO/website", "Date": "2016-06-15T22:34:49Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mStory) != null) { storyDirectUrl = mStory.get(position).getUrl(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/5249/buggy-version/app.src.main.java.com.hackernewsapp.discussion.DiscussionActivity.java", "BodyUseAPI": [], "Fixed commit": "75d3d48708fadf911de4530472ac19864042bb07", "Url": "https://api.github.com/repos/tosinonikute/HackerNews", "Date": "2017-03-15T15:13:18Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (org.rstudio.studio.client.application.ui.RStudioThemes.usesScrollbars()) addStyleName(\"rstudio-themes-scrollbars\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/4699/buggy-version/src.gwt.src.org.rstudio.studio.client.workbench.views.console.shell.assist.HelpInfoPopupPanel.java", "BodyUseAPI": [], "Fixed commit": "1e3ac9386d8b3caaa485d9cd013ea5e2d52ec6a2", "Url": "https://api.github.com/repos/rstudio/rstudio", "Date": "2017-06-13T22:38:18Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.rstudio.studio.client.application.ui.RStudioThemes.usesScrollbars()) addStyleName(\"rstudio-themes-scrollbars\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/4699/buggy-version/src.gwt.src.org.rstudio.core.client.widget.ThemedPopupPanel.java", "BodyUseAPI": [], "Fixed commit": "1e3ac9386d8b3caaa485d9cd013ea5e2d52ec6a2", "Url": "https://api.github.com/repos/rstudio/rstudio", "Date": "2017-06-13T22:38:18Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (maxBatch <= 0) { de.rwth_aachen.afu.raspager.Scheduler.log.log(java.util.logging.Level.SEVERE, \"No more batches are fitting although it's a complete slot, Value: {0}\", maxBatch); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/915/buggy-version/software.raspager-java.src.main.java.de.rwth_aachen.afu.raspager.Scheduler.java", "BodyUseAPI": ["java.util.logging.Logger.log(java.util.logging.Level,java.lang.String,int)"], "Fixed commit": "6be9fa0f7e615143d42f434c882886b3ab3514f0", "Url": "https://api.github.com/repos/rwth-afu/RasPagerC9000", "Date": "2016-12-20T22:44:10Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (maxBatch <= 0) { de.rwth_aachen.afu.raspager.Scheduler.log.log(java.util.logging.Level.FINE, \"No more batches are fitting now, Value: {0}\", maxBatch); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/915/buggy-version/software.raspager-java.src.main.java.de.rwth_aachen.afu.raspager.Scheduler.java", "BodyUseAPI": ["java.util.logging.Logger.log(java.util.logging.Level,java.lang.String,int)"], "Fixed commit": "6be9fa0f7e615143d42f434c882886b3ab3514f0", "Url": "https://api.github.com/repos/rwth-afu/RasPagerC9000", "Date": "2016-12-20T22:44:10Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["issue.path(\"fields\").path(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(assignee.get(\"displayName\").isMissingNode())) assigneeName = assignee.get(\"displayName\").asText();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/666/buggy-version/xmppbot-commands.src.main.java.de.raion.xmppbot.hipchat.JiraLinkBeautifierInterceptor.java", "BodyUseAPI": ["assignee.get(\"displayName\").asText()", "com.fasterxml.jackson.databind.JsonNode.get(java.lang.String)"], "Fixed commit": "087f1e05066e34d80f41213646c975b324c651ce", "Url": "https://api.github.com/repos/brndkfr/xmppbot", "Date": "2013-02-28T13:32:38Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["issue.path(\"fields\").path(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(assignee.get(\"name\").isMissingNode())) assigneeAcnt = assignee.get(\"name\").asText();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/666/buggy-version/xmppbot-commands.src.main.java.de.raion.xmppbot.hipchat.JiraLinkBeautifierInterceptor.java", "BodyUseAPI": ["assignee.get(\"name\").asText()", "com.fasterxml.jackson.databind.JsonNode.get(java.lang.String)"], "Fixed commit": "087f1e05066e34d80f41213646c975b324c651ce", "Url": "https://api.github.com/repos/brndkfr/xmppbot", "Date": "2013-02-28T13:32:38Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["issue.path(\"fields\").path(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(assignee.get(\"avatarUrls\").isMissingNode())) assigneeIcon = assignee.path(\"avatarUrls\").get(\"16x16\").asText();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/666/buggy-version/xmppbot-commands.src.main.java.de.raion.xmppbot.hipchat.JiraLinkBeautifierInterceptor.java", "BodyUseAPI": ["assignee.path(\"avatarUrls\").get(\"16x16\").asText()", "com.fasterxml.jackson.databind.JsonNode.path(java.lang.String)", "assignee.path(\"avatarUrls\").get(java.lang.String)"], "Fixed commit": "087f1e05066e34d80f41213646c975b324c651ce", "Url": "https://api.github.com/repos/brndkfr/xmppbot", "Date": "2013-02-28T13:32:38Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (indexable.getType().isEnum()) { org.elasticsearch.mapping.StringField annotation = indexable.getAnnotation(org.elasticsearch.mapping.StringField.class); if (annotation != null) { processStringOrPrimitive(clazz, propertiesDefinitionMap, pathPrefix, indexable); } }else { java.lang.Class<?> arrayType = indexable.getComponentType(); if (arrayType != null) { if (((org.springframework.util.ClassUtils.isPrimitiveOrWrapper(arrayType)) || (arrayType == (java.lang.String.class))) || ((indexable.getType()) == (java.util.Date.class))) { processStringOrPrimitive(clazz, propertiesDefinitionMap, pathPrefix, indexable); }else if (arrayType.isEnum()) { org.elasticsearch.mapping.StringField annotation = indexable.getAnnotation(org.elasticsearch.mapping.StringField.class); if (annotation != null) { processStringOrPrimitive(clazz, propertiesDefinitionMap, pathPrefix, indexable); } }else { processComplexType(clazz, propertiesDefinitionMap, pathPrefix, indexable, filteredFields, facetFields); } }else { processComplexType(clazz, propertiesDefinitionMap, pathPrefix, indexable, filteredFields, facetFields); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/7872/buggy-version/elasticsearch-mapping.src.main.java.org.elasticsearch.mapping.FieldsMappingBuilder.java", "BodyUseAPI": ["org.elasticsearch.mapping.Indexable.getAnnotation(java.lang.Class)", "org.elasticsearch.mapping.Indexable.getAnnotation(java.lang.Class)", "org.elasticsearch.mapping.FieldsMappingBuilder.processStringOrPrimitive(java.lang.Class<?>,java.util.Map<java.lang.String, java.lang.Object>,java.lang.String,org.elasticsearch.mapping.Indexable)", "org.elasticsearch.mapping.FieldsMappingBuilder.processStringOrPrimitive(java.lang.Class<?>,java.util.Map<java.lang.String, java.lang.Object>,java.lang.String,org.elasticsearch.mapping.Indexable)", "org.elasticsearch.mapping.FieldsMappingBuilder.processStringOrPrimitive(java.lang.Class<?>,java.util.Map<java.lang.String, java.lang.Object>,java.lang.String,org.elasticsearch.mapping.Indexable)", "org.elasticsearch.mapping.Indexable.getType()", "org.elasticsearch.mapping.Indexable.getComponentType()", "org.elasticsearch.mapping.FieldsMappingBuilder.processComplexType(java.lang.Class<?>,java.util.Map<java.lang.String, java.lang.Object>,java.lang.String,org.elasticsearch.mapping.Indexable,java.util.List<org.elasticsearch.mapping.IFilterBuilderHelper>,java.util.List<org.elasticsearch.mapping.IFacetBuilderHelper>)", "org.elasticsearch.mapping.FieldsMappingBuilder.processComplexType(java.lang.Class<?>,java.util.Map<java.lang.String, java.lang.Object>,java.lang.String,org.elasticsearch.mapping.Indexable,java.util.List<org.elasticsearch.mapping.IFilterBuilderHelper>,java.util.List<org.elasticsearch.mapping.IFacetBuilderHelper>)"], "Fixed commit": "469646b7cf6129d755b40fa32dc0c49ee6430573", "Url": "https://api.github.com/repos/alien4cloud/elasticsearch-mapping-parent", "Date": "2016-06-07T10:13:20Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (replaceClass.getName().equals(\"alien4cloud.model.components.PropertyDefinition\")) { org.elasticsearch.mapping.parser.ObjectFieldAnnotationParser.LOGGER.info(\"Process class {}\", replaceClass.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/7872/buggy-version/elasticsearch-mapping.src.main.java.org.elasticsearch.mapping.parser.ObjectFieldAnnotationParser.java", "BodyUseAPI": ["org.elasticsearch.common.logging.ESLogger.info(java.lang.String,java.lang.String)", "java.lang.Class<?>.getName()"], "Fixed commit": "469646b7cf6129d755b40fa32dc0c49ee6430573", "Url": "https://api.github.com/repos/alien4cloud/elasticsearch-mapping-parent", "Date": "2016-06-07T10:13:20Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((font != null) && ((font.length()) > 5)) { final java.lang.String fontType = font.substring(((font.length()) - 3)); if ((\"ttf\".equals(fontType)) || (\"otf\".equals(fontType))) { mFonts.add(new com.vanniktech.vntfontlistpreference.VNTFontListPreference.Font(((com.vanniktech.vntfontlistpreference.StringFormatUtils.addAtEndIfNotPresent(fontDirectory, \"/\")) + font))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/2528/buggy-version/library.src.main.java.com.vanniktech.vntfontlistpreference.VNTFontListPreference.java", "BodyUseAPI": [], "Fixed commit": "839c4cbf31c0097751eb056d4b165a0e9afe4843", "Url": "https://api.github.com/repos/vanniktech/VNTFontListPreference", "Date": "2015-11-29T15:38:59Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (pmid != null) { pmid = pmid.trim(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/3383/buggy-version/core.src.main.java.org.mskcc.cbio.oncokb.util.NcbiEUtils.java", "BodyUseAPI": ["java.lang.String.trim()"], "Fixed commit": "776ef7a105d518f5d379e9c204960ec838c35d98", "Url": "https://api.github.com/repos/JiaoJiao123/oncokb", "Date": "2017-01-10T01:29:32Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.barteksc.pdfviewer.RenderingTaskQueue<com.github.barteksc.pdfviewer.RenderingHandler.RenderingTask>.pollTask()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (task == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/8706/buggy-version/android-pdf-viewer.src.main.java.com.github.barteksc.pdfviewer.RenderingHandler.java", "BodyUseAPI": [], "Fixed commit": "9b9c6f73dece618022e490ba62c52cca19590c3b", "Url": "https://api.github.com/repos/leixin525/AndroidPdfViewer", "Date": "2017-12-22T07:51:18Z"},
{"Line": "=>997", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["nodebox.client.NodeBoxDocument.getActiveNode()", "nodebox.client.NodeBoxDocument.getActiveNetwork()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((network == null) || (node == null)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/9070/buggy-version/src.main.java.nodebox.client.NodeBoxDocument.java", "BodyUseAPI": [], "Fixed commit": "486d2445732eec423a3792bba6372355d973f3d6", "Url": "https://api.github.com/repos/nodebox/nodebox", "Date": "2013-02-14T14:43:22Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["c.setProjection(org.hibernate.criterion.Projections.rowCount()).uniqueResult()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (result == null) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/4393/buggy-version/src.main.java.com.silicolife.textmining.core.datastructures.dataaccess.database.dataaccess.implementation.model.core.dao.specialdao.AnnotationAuxDaoImpl.java", "BodyUseAPI": [], "Fixed commit": "35c75a215428f12d581d7fbd5142f7f7d981c514", "Url": "https://api.github.com/repos/biotextmining/core", "Date": "2017-05-11T13:36:13Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["c.setProjection(org.hibernate.criterion.Projections.rowCount()).uniqueResult()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (result == null) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/4393/buggy-version/src.main.java.com.silicolife.textmining.core.datastructures.dataaccess.database.dataaccess.implementation.model.core.dao.specialdao.AnnotationAuxDaoImpl.java", "BodyUseAPI": [], "Fixed commit": "35c75a215428f12d581d7fbd5142f7f7d981c514", "Url": "https://api.github.com/repos/biotextmining/core", "Date": "2017-05-11T13:36:13Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["c.setProjection(org.hibernate.criterion.Projections.rowCount()).uniqueResult()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (result == null) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/4393/buggy-version/src.main.java.com.silicolife.textmining.core.datastructures.dataaccess.database.dataaccess.implementation.model.core.dao.specialdao.AnnotationAuxDaoImpl.java", "BodyUseAPI": [], "Fixed commit": "35c75a215428f12d581d7fbd5142f7f7d981c514", "Url": "https://api.github.com/repos/biotextmining/core", "Date": "2017-05-11T13:36:13Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (checkHomeDirectoryDefined()) { if ((args.length) > 1) { editBundle(args); }else { if (checkBundleDefined()) { editBundle(getCurrentBundle()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/3426/buggy-version/src.main.java.org.telosys.tools.cli.commands.EditBundleCommand.java", "BodyUseAPI": [], "Fixed commit": "07560e461e4b1aa8a07891786aa27251527bae92", "Url": "https://api.github.com/repos/telosys-tools-bricks/telosys-cli", "Date": "2017-09-08T16:23:42Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.projectdgdx.game.model.Playables.Supervisor.getClosestCharacter(java.util.List<java.lang.Character>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (closestCharacter != null) { closestCharacter.beenCaught(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/1945/buggy-version/Project.core.src.com.projectdgdx.game.model.Playables.Supervisor.java", "BodyUseAPI": ["java.lang.Character.beenCaught()"], "Fixed commit": "392ee56134762791666b4c1530988324b1686236", "Url": "https://api.github.com/repos/konglobemeralt/1337xXSlayer", "Date": "2017-05-23T07:59:13Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.time.LocalDate.parse(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((d.getDayOfMonth()) == (dates.getDayOfMonth())) && ((d.getMonthValue()) == (dates.getMonthValue()))) { list.add(listAppointments.get(a)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/7523/buggy-version/src.main.java.models.ResourceAppointment.java", "BodyUseAPI": [], "Fixed commit": "8649489815dccef11038c56a9a831bad4d723cba", "Url": "https://api.github.com/repos/sunvsp/calendar", "Date": "2017-09-10T15:08:03Z"},
{"Line": "=>391", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_bufferedImage) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/7134/buggy-version/src.gui.jwave.JWaveGraphing.java", "BodyUseAPI": [], "Fixed commit": "0af6d1a2a1de6bd1ffec771feb4b50d8cdcf6f04", "Url": "https://api.github.com/repos/cscheiblich/JWaveGraphing", "Date": "2015-05-16T20:01:57Z"},
{"Line": "=>336", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_bufferedImage) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/7134/buggy-version/src.gui.jwave.JWaveGraphing.java", "BodyUseAPI": [], "Fixed commit": "0af6d1a2a1de6bd1ffec771feb4b50d8cdcf6f04", "Url": "https://api.github.com/repos/cscheiblich/JWaveGraphing", "Date": "2015-05-16T20:01:57Z"},
{"Line": "=>866", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.min(long,long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (end < (bytes.readLimit())) sb.append(\"...\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/9009/buggy-version/src.main.java.net.openhft.chronicle.bytes.BytesInternal.java", "BodyUseAPI": [], "Fixed commit": "cbeed22a13dab955e0a0669a341f478e4ec4f898", "Url": "https://api.github.com/repos/OpenHFT/Chronicle-Bytes", "Date": "2016-03-09T12:33:01Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.squareup.javapoet.TypeName.get(memberElement.getEnclosingElement().asType()).equals(TypeName.OBJECT)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/1498/buggy-version/gsonpath-compiler.src.main.java.gsonpath.generator.adapter.ModelInterfaceGenerator.java", "BodyUseAPI": [], "Fixed commit": "57c6602c264e1175d164ea4fabb18c0ab2da52fe", "Url": "https://api.github.com/repos/LachlanMcKee/gsonpath", "Date": "2016-07-26T12:57:50Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.getConfig().isBoolean(\"config.die_below_bedrock_level\")) { boolean die_below_zero = this.getConfig().getBoolean(\"config.die_below_bedrock_level\"); if (die_below_zero) { pli.getArenaListener().loseY = 100; } }else { pli.getArenaListener().loseY = this.getConfig().getInt(\"config.die_below_bedrock_level\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/4913/buggy-version/src.main.java.com.comze_instancelabs.mgsplegg.Main.java", "BodyUseAPI": [], "Fixed commit": "38cf1937be8880a5c0fe7a0219a2057164c37995", "Url": "https://api.github.com/repos/MysticCity/MGSplegg", "Date": "2016-09-18T10:57:00Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (cc != null) { builder.addUserInfo(com.argo.qpush.gateway.handler.PBAPNSUserInfo.newBuilder().setKey(\"op\").setValue(((cc.getOp()) + \"\"))); }else { builder.addUserInfo(com.argo.qpush.gateway.handler.PBAPNSUserInfo.newBuilder().setKey(\"op\").setValue(\"5\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/5152/buggy-version/Gateway.src.main.java.com.argo.qpush.gateway.handler.MobileMessageHandler.java", "BodyUseAPI": ["com.argo.qpush.gateway.handler.PBAPNSEvent.getOp()", "PBAPNSMessage.Builder.addUserInfo(com.argo.qpush.gateway.handler.PBAPNSUserInfo.newBuilder().setKey(\"op\").setValue(((cc.getOp()) + \"\")))", "com.argo.qpush.gateway.handler.PBAPNSUserInfo.newBuilder().setKey(\"op\").setValue(((cc.getOp()) + \"\"))"], "Fixed commit": "feaf8bdd8c49f04ca59c2fe4145785d2ecdd1324", "Url": "https://api.github.com/repos/yamingd/QPush", "Date": "2015-01-22T11:03:17Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openmrs.module.idgen.IdentifierSource.getPrefix()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isEmpty(prefix)) { java.lang.RuntimeException exception = new java.lang.RuntimeException((\"Please set prefix for \" + (src.getName()))); org.bahmni.module.bahmniOfflineSync.strategy.IDBasedSyncStrategy.logger.error(exception); throw exception; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/2268/buggy-version/omod.src.main.java.org.bahmni.module.bahmniOfflineSync.strategy.IDBasedSyncStrategy.java", "BodyUseAPI": [], "Fixed commit": "ee7c33210579d3aa0554d27d44ea7887d2279059", "Url": "https://api.github.com/repos/Bahmni/bahmni-offline-sync", "Date": "2017-04-12T08:59:40Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.sf.antcontrib.design.Design.retreivePack(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (p == null) throw new org.apache.tools.ant.BuildException(net.sf.antcontrib.design.Design.getNoDefinitionError(className), location);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/4126/buggy-version/trunk.ant-contrib.src.java.net.sf.antcontrib.design.Design.java", "BodyUseAPI": [], "Fixed commit": "835a0f1f5d85f483abb9774283333d0959c091b9", "Url": "https://api.github.com/repos/crazy-max/ant-contrib", "Date": "2006-10-16T16:50:25Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (n == working) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/6885/buggy-version/src.main.java.com.perihelios.math.functor.SimplePrimeEngine.java", "BodyUseAPI": [], "Fixed commit": "d0c80a106ecef4f7cc36ad2a91538eae86e1f06e", "Url": "https://api.github.com/repos/perihelios/functor-java", "Date": "2016-11-25T15:27:47Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((mGoogleApiClient) != null) && (mGoogleApiClient.isConnected())) { Auth.GoogleSignInApi.signOut(mGoogleApiClient); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/8551/buggy-version/app.src.main.java.ec601.aty.food_app.LoginActivity.java", "BodyUseAPI": ["Auth.GoogleSignInApi.signOut(com.google.android.gms.common.api.GoogleApiClient)"], "Fixed commit": "0fe288a8eeb22b3a6116253840ee64c22dfd768b", "Url": "https://api.github.com/repos/juleskt/Food-app", "Date": "2017-10-28T19:00:17Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.SocketAddress.toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (senderIp.startsWith(\"/\")) senderIp = senderIp.substring(1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/7285/buggy-version/Client.src.client.ClassroomClient.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "89e89ac6b69799ce3f421e908abd77a1d63236ec", "Url": "https://api.github.com/repos/julienschroeter/RemoteClassroom", "Date": "2014-10-21T21:31:09Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((senderIp.indexOf(\":\")) != (-1)) senderIp = senderIp.split(\":\")[0];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/7285/buggy-version/Client.src.client.ClassroomClient.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "89e89ac6b69799ce3f421e908abd77a1d63236ec", "Url": "https://api.github.com/repos/julienschroeter/RemoteClassroom", "Date": "2014-10-21T21:31:09Z"},
{"Line": "=>321", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.InfinityRaider.AgriCraft.utility.SeedHelper.getFruitsFromOreDict(net.minecraft.item.ItemSeeds,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((fruits != null) && ((fruits.size()) > 0)) { while (counter < nr) { net.minecraft.item.ItemStack newFruit = fruits.get(rand.nextInt(fruits.size())).copy(); newFruit.stackSize = 1; list.add(newFruit); counter++; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/4380/buggy-version/src.main.java.com.InfinityRaider.AgriCraft.utility.SeedHelper.java", "BodyUseAPI": ["java.util.List<net.minecraft.item.ItemStack>.size()", "fruits.get(rand.nextInt(fruits.size())).copy()", "java.util.Random.nextInt(fruits.size())", "java.util.List<net.minecraft.item.ItemStack>.get(int)"], "Fixed commit": "239735a8d1fd178d7aedaa3230236cf019952b08", "Url": "https://api.github.com/repos/AgriCraft/AgriCraft", "Date": "2015-02-28T18:18:03Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.mabako.minecraft.Cocoa.Util.findItemFromBlockMaterial(block.getType())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (material != null) player.setItemInHand(new org.bukkit.inventory.ItemStack(material, material.getMaxStackSize(), block.getData(), block.getData()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/7514/buggy-version/src.net.mabako.minecraft.Cocoa.CocoaBlockListener.java", "BodyUseAPI": ["org.bukkit.Material.getMaxStackSize()", "org.bukkit.entity.Player.setItemInHand(org.bukkit.inventory.ItemStack)"], "Fixed commit": "c44d573108dc2be09fd874e7f62c3a487e9b37d1", "Url": "https://api.github.com/repos/mabako/cocoa", "Date": "2011-07-14T16:19:30Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(explodeEvent.isCancelled())) { for (org.bukkit.block.Block b : explodeEvent.blockList()) { final de.robotricker.transportpipes.pipes.types.Pipe pipe = pipeMap.get(de.robotricker.transportpipes.pipes.BlockLoc.convertBlockLoc(b.getLocation())); if (pipe != null) { de.robotricker.transportpipes.PipeThread.runTask(new java.lang.Runnable() { @java.lang.Override public void run() { pipe.explode(false); } }, 0); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/420/buggy-version/src.main.java.de.robotricker.transportpipes.pipeutils.ContainerBlockUtils.java", "BodyUseAPI": ["org.bukkit.event.entity.EntityExplodeEvent.blockList()"], "Fixed commit": "514dce616ca1dd543e6c298369685ca745ab1b71", "Url": "https://api.github.com/repos/RoboTricker/Transport-Pipes", "Date": "2017-07-24T19:20:25Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.View.getId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (i == (R.id.preview)) { startActivity(new android.content.Intent(this, me.iwf.photopicker.PhotoPagerActivity.class)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/1766/buggy-version/PhotoPicker.src.main.java.me.iwf.photopicker.PhotoPickerActivity.java", "BodyUseAPI": [], "Fixed commit": "3a66b5b79622c6252c3438e27d6f96d45ae3c665", "Url": "https://api.github.com/repos/gtanyin/PhotoPicker", "Date": "2017-11-28T01:31:10Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value == null) { value = \"null\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/5214/buggy-version/src.org.svetovid.io.DefaultSvetovidWriter.java", "BodyUseAPI": [], "Fixed commit": "2a17a9074e9fa0f8980e4f280c93ae21a4c7426c", "Url": "https://api.github.com/repos/ivanpribela/svetovid-lib", "Date": "2014-04-26T11:07:37Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(reader.isNull(inputColumn))) { path = reader.getString(inputColumn); pos = path.indexOf('?'); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/3126/buggy-version/src.main.java.org.embulk.filter.query_string.QueryStringFilterPlugin.java", "BodyUseAPI": ["org.embulk.spi.PageReader.getString(org.embulk.spi.Column)"], "Fixed commit": "b8cd42ee7c22d19f839313668bc7202f947676f3", "Url": "https://api.github.com/repos/mwed/embulk-filter-query_string", "Date": "2016-03-11T05:24:35Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result != null) { com.android.clockwork.model.RoundImage roundImage = new com.android.clockwork.model.RoundImage(result); picture.setImageDrawable(roundImage); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/641/buggy-version/app.src.main.java.com.android.clockwork.model.ProfilePictureManager.java", "BodyUseAPI": [], "Fixed commit": "db03a09c963a5ef00277319316264ea3834315c1", "Url": "https://api.github.com/repos/jaytanjiabao/ClockworkAndroid", "Date": "2015-09-29T13:37:47Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (url != null) { map = downloadImage(url); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/641/buggy-version/app.src.main.java.com.android.clockwork.model.ProfilePictureManager.java", "BodyUseAPI": ["com.android.clockwork.model.ProfilePictureManager.downloadImage(java.lang.String)"], "Fixed commit": "db03a09c963a5ef00277319316264ea3834315c1", "Url": "https://api.github.com/repos/jaytanjiabao/ClockworkAndroid", "Date": "2015-09-29T13:37:47Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Object.getClass()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isPrimitiveWrapperClass(paramClz)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/9133/buggy-version/plog-formatter.src.main.java.org.mym.plog.formatter.DefaultFormatter.java", "BodyUseAPI": [], "Fixed commit": "933147349fc48a3f521f2aed6d48f98c94394f43", "Url": "https://api.github.com/repos/JumeiRdGroup/Android-PLog", "Date": "2017-01-14T04:10:37Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(msg))) { formatResult = java.lang.String.format(msg, ((java.lang.Object[]) (formattedParam))); }else if ((formattedParam.length) == 1) { formatResult = formattedParam[0].toString(); }else { java.lang.StringBuilder sb = new java.lang.StringBuilder(\"\"); for (int i = 0; i < (params.length); i++) { sb.append(\"param[\").append(i).append(\"]=\").append(formattedParam[i]).append(\"\\n\"); } formatResult = sb.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/9133/buggy-version/plog-formatter.src.main.java.org.mym.plog.formatter.DefaultFormatter.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,java.lang.Object[])"], "Fixed commit": "933147349fc48a3f521f2aed6d48f98c94394f43", "Url": "https://api.github.com/repos/JumeiRdGroup/Android-PLog", "Date": "2017-01-14T04:10:37Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (1 < (flagTextSplitted.length)) { for (int i = 2; i < (flagTextSplitted.length); i++) { setText(((getText()) + (flagTextSplitted[i]))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/1362/buggy-version/Friends-Hug.src.server.Flagdetection.java", "BodyUseAPI": ["server.Flagdetection.setText(java.lang.String)"], "Fixed commit": "1031ef06fdec95b0f0749841e7eb2a8a27b5437e", "Url": "https://api.github.com/repos/Showtechno/Friends-Hug", "Date": "2016-02-28T02:31:56Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (1 < (flagTextSplitted.length)) { for (int i = 2; i < (flagTextSplitted.length); i++) { setText(((getText()) + (flagTextSplitted[i]))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/1362/buggy-version/Friends-Hug.src.client.Flagdetection.java", "BodyUseAPI": ["client.Flagdetection.setText(java.lang.String)"], "Fixed commit": "1031ef06fdec95b0f0749841e7eb2a8a27b5437e", "Url": "https://api.github.com/repos/Showtechno/Friends-Hug", "Date": "2016-02-28T02:31:56Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (s.trim().isEmpty()) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/5170/buggy-version/src.qz.PrintHTML.java", "BodyUseAPI": [], "Fixed commit": "ff25a828eb07f082c6174008fa64fbd7f743b895", "Url": "https://api.github.com/repos/qzind/qz-print", "Date": "2015-12-20T22:48:14Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) != null) { if (((emptyText) != null) && ((emptyIcon) != null)) { if (((getNoDataIcon()) != null) && ((getNoDataText()) > 0)) { com.joanzapata.android.iconify.IconDrawable iconDrawable = new com.joanzapata.android.iconify.IconDrawable(getActivity(), getNoDataIcon()); iconDrawable.colorRes(R.color.gray_github_medium); emptyIcon.setImageDrawable(iconDrawable); emptyText.setText(getNoDataText()); emptyLy.setVisibility(View.VISIBLE); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/6167/buggy-version/app.src.main.java.com.alorma.github.ui.fragment.base.BaseListFragment.java", "BodyUseAPI": [], "Fixed commit": "dc8a2ef040dd94db57eda0e397ffd85983839d75", "Url": "https://api.github.com/repos/alorma/Gitskarios", "Date": "2014-09-03T23:05:41Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.awt.font.LineBreakMeasurer.nextLayout(float)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (layout == null) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/8274/buggy-version/src.utopia_graphic.ParagraphDrawer.java", "BodyUseAPI": [], "Fixed commit": "a453b5a3813c50471c613226291de6bbf452ec77", "Url": "https://api.github.com/repos/Mikkomario/UtopiaGameEngine", "Date": "2014-05-09T18:43:02Z"},
{"Line": "=>686", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((assocConnection.getAssociatedWorkCycleManager()) != null) { if ((assocConnection.getAssociatedWorkCycleManager().getCurrentWorkCycle().getCurrentPhase()) == (de.tu.dresden.dud.dc.WorkCycle.WorkCycle.WC_RESERVATION)) modelListSums.addElement((((((\"R:\" + (m.getWorkCycleNumber())) + \", SR:\") + (m.getRoundNumber())) + \"(reservation): \") + (java.util.Arrays.toString(m.getPayload())))); else if ((assocConnection.getAssociatedWorkCycleManager().getCurrentWorkCycle().getCurrentPhase()) == (de.tu.dresden.dud.dc.WorkCycle.WorkCycle.WC_SENDING)) modelListSums.addElement((((((((\"R:\" + (m.getWorkCycleNumber())) + \", SR:\") + (m.getRoundNumber())) + \": \") + (new java.lang.String(m.getPayload()))) + \"/\") + (java.util.Arrays.toString(m.getPayload())))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/6815/buggy-version/DC+.src.de.tu.dresden.dud.dc.Gui.GuiParticipant.java", "BodyUseAPI": ["assocConnection.getAssociatedWorkCycleManager().getCurrentWorkCycle()", "de.tu.dresden.dud.dc.Connection.getAssociatedWorkCycleManager()", "de.tu.dresden.dud.dc.Connection.getAssociatedWorkCycleManager()", "assocConnection.getAssociatedWorkCycleManager().getCurrentWorkCycle().getCurrentPhase()", "assocConnection.getAssociatedWorkCycleManager().getCurrentWorkCycle()", "assocConnection.getAssociatedWorkCycleManager().getCurrentWorkCycle().getCurrentPhase()"], "Fixed commit": "d0d597e796171f06b0247ee96f6dcfd9d6a9744e", "Url": "https://api.github.com/repos/klobs/dc--", "Date": "2011-03-27T00:40:26Z"},
{"Line": "=>353", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isLast) { j++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/4941/buggy-version/tint-tokenizer.src.main.java.eu.fbk.dh.tint.tokenizer.ItalianTokenizer.java", "BodyUseAPI": [], "Fixed commit": "786084863c8520794cae5c6a18b4d00301055971", "Url": "https://api.github.com/repos/dhfbk/tint", "Date": "2017-07-04T07:45:44Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((gatherTestInformation.getNbFailingTests()) > 0) { return \"test failure\"; }else { return \"test errors\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/5116/buggy-version/repairnator.src.main.java.fr.inria.spirals.repairnator.serializer.AbstractDataSerializer.java", "BodyUseAPI": [], "Fixed commit": "d432e398714cb2ef08e6ac36dd406f8616eef6e1", "Url": "https://api.github.com/repos/Spirals-Team/repairnator", "Date": "2017-02-09T14:03:08Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["soot.toDex.instructions.Insn10t.getRelativeOffset()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (offA == 0) return new org.jf.dexlib.Code.Format.Instruction30t(org.jf.dexlib.Code.Opcode.GOTO_32, offA);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/1982/buggy-version/src.soot.toDex.instructions.Insn10t.java", "BodyUseAPI": [], "Fixed commit": "0916b0a9be1d2ef34783a997119563c438abe1f2", "Url": "https://api.github.com/repos/quentin/soot", "Date": "2013-04-16T11:53:34Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (entry.dead) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/6857/buggy-version/architect.src.main.java.architect.History.java", "BodyUseAPI": [], "Fixed commit": "e1113ef894c0baaf1971c13fc43590fd8bde89d7", "Url": "https://api.github.com/repos/lukaspili/Mortar-architect", "Date": "2015-10-01T18:55:37Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(display.getText().matches(\"[A-Za-z]+\"))) { if ((display.getText().length()) != 1) { display.setText(display.getText().substring(0, ((display.getText().length()) - 1))); }else { display.setText(\"0\"); } }else { display.setText(\"0\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/6593/buggy-version/Calculator.src.Main.java", "BodyUseAPI": ["java.lang.String.length()", "javax.swing.JTextField.getText()", "javax.swing.JTextField.setText(java.lang.String)", "java.lang.String.length()", "javax.swing.JTextField.getText()", "java.lang.String.substring(int,int)", "javax.swing.JTextField.getText()", "javax.swing.JTextField.setText(java.lang.String)", "javax.swing.JTextField.setText(java.lang.String)"], "Fixed commit": "923cd08696220ba2481d21436a77335f166e3785", "Url": "https://api.github.com/repos/Miic/SciCalculator", "Date": "2017-09-29T08:45:11Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mMemoId) < 0) { db.insertMemo(memo); }else { db.updateMemo(memo); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/9143/buggy-version/app.src.main.java.c.m.mobile8.ViewActivity.java", "BodyUseAPI": [], "Fixed commit": "97dca69da3abc52e68335c2e5780f49afdfcdb8a", "Url": "https://api.github.com/repos/hyosang82/silver-spoon", "Date": "2016-05-28T14:29:15Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openide.util.Utilities.actionsGlobalContext().lookup(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (productNode != null) { selectedProduct = productNode.getProduct(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/1046/buggy-version/snap-gpf-ui.src.main.java.org.esa.snap.framework.gpf.ui.SourceProductSelector.java", "BodyUseAPI": ["org.esa.snap.framework.datamodel.ProductNode.getProduct()"], "Fixed commit": "e484cd377c1bd714bf95f8d02c3ccc128ce7a8a8", "Url": "https://api.github.com/repos/senbox-org/snap-desktop", "Date": "2015-07-30T19:37:52Z"},
{"Line": "=>308", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (count > 99) { mPendingFollowersBadge.setText(\"99+\"); }else if (count == 0) { mPendingFollowersBadge.setText(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/6271/buggy-version/app.src.main.java.com.codeground.wanderlustbulgaria.Activities.MainMenuActivity.java", "BodyUseAPI": [], "Fixed commit": "e6d8aa5fe13735a0e6938fbd3cbc489a2ffa881a", "Url": "https://api.github.com/repos/bojidartonchev/Wanderlust-Bulgaria", "Date": "2017-04-14T17:38:17Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(initComplete)) { this.hessian.init(network, getTraining()); this.initComplete = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/6668/buggy-version/src.main.java.org.encog.neural.networks.training.lma.LevenbergMarquardtTraining.java", "BodyUseAPI": [], "Fixed commit": "b41c602f7bd7e13e004a88377fbb28faf137c263", "Url": "https://api.github.com/repos/nitbix/encog-java-core", "Date": "2013-06-01T12:02:25Z"},
{"Line": "=>333", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((numThreads != 1) && (numThreads != 0)) { throw new org.encog.neural.networks.training.TrainingError(((\"The Hessian object in use(\" + (this.hessian.getClass().toString())) + \") does not support multi-threaded mode.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/6668/buggy-version/src.main.java.org.encog.neural.networks.training.lma.LevenbergMarquardtTraining.java", "BodyUseAPI": [], "Fixed commit": "b41c602f7bd7e13e004a88377fbb28faf137c263", "Url": "https://api.github.com/repos/nitbix/encog-java-core", "Date": "2013-06-01T12:02:25Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(setup)) { setupTableHeaders(); setup = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/2289/buggy-version/src.com.jcw.TableListView.TableList.java", "BodyUseAPI": [], "Fixed commit": "c0793dd173cc3a5b977473e4a85356002bc2d156", "Url": "https://api.github.com/repos/j-c-w/android-table-listview", "Date": "2015-02-01T16:38:47Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mHandled)) { com.dockerandroid.ui.UIController.handleActivityIntent(this); mHandled = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/8612/buggy-version/app.src.main.java.com.dockerandroid.ui.activity.BaseActivity.java", "BodyUseAPI": [], "Fixed commit": "7ce6186686bdd6b8fd935480c6ab74f1d7178c80", "Url": "https://api.github.com/repos/saymagic/MWhale", "Date": "2016-03-03T14:03:06Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.epics.vtype.VNumberArray.getData()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((data.size()) <= 0) return \"[]\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/7377/buggy-version/applications.plugins.org.csstudio.opibuilder.src.org.csstudio.opibuilder.pvmanager.PVManagerHelper.java", "BodyUseAPI": [], "Fixed commit": "746825aedb9aaf14fd361a18a1631f600758920a", "Url": "https://api.github.com/repos/ControlSystemStudio/cs-studio", "Date": "2013-06-10T21:28:54Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (num.contains(\"-\")) { return \"negative\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/1193/buggy-version/app.src.main.java.com.arifsubroto.baseelevencalc.BaseConverter.java", "BodyUseAPI": [], "Fixed commit": "3556890b87eeecaea5d8d9a167551f42f963f533", "Url": "https://api.github.com/repos/arifsubroto/BaseElevenCalc", "Date": "2017-04-19T06:33:27Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (describedby != null) { caplist.addLn(ResourceSync.REL_DESCRIBED_BY, describedby); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/7828/buggy-version/src.main.java.org.openarchives.resourcesync.ResourceSyncDescription.java", "BodyUseAPI": ["org.openarchives.resourcesync.URL.addLn(ResourceSync.REL_DESCRIBED_BY,java.lang.String)"], "Fixed commit": "2eaa7f3478cd37f70794bb117ba519eafaf077d3", "Url": "https://api.github.com/repos/CottageLabs/ResourceSyncJava", "Date": "2013-06-25T17:58:40Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.pinae.sarabi.service.ServiceConfig.getFilters()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (filterList != null) { for (org.pinae.sarabi.service.filter.ServiceFilter filter : filterList) { if (filter != null) { org.pinae.sarabi.service.ServiceResponse response = filter.filter(request); if ((response.getStatus()) != (Http.HTTP_OK)) { return response; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/2745/buggy-version/src.main.java.org.pinae.sarabi.service.ServiceExecutor.java", "BodyUseAPI": [], "Fixed commit": "43069610c956efc897749ff955be8a3580783262", "Url": "https://api.github.com/repos/PinaeOS/sarabi", "Date": "2017-05-29T17:55:44Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((str.indexOf(s)) > (str.indexOf('='))) { ans[0] = -(ans[0]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/7086/buggy-version/algorithm.calculator.Main.java", "BodyUseAPI": [], "Fixed commit": "179f5bc3149d8cb4538c7da92f2e75d4e458334c", "Url": "https://api.github.com/repos/chouhaohui/test", "Date": "2016-07-14T08:36:02Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((str.indexOf(s)) > (str.indexOf('='))) { ans[1] = -(ans[1]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/7086/buggy-version/algorithm.calculator.Main.java", "BodyUseAPI": [], "Fixed commit": "179f5bc3149d8cb4538c7da92f2e75d4e458334c", "Url": "https://api.github.com/repos/chouhaohui/test", "Date": "2016-07-14T08:36:02Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((str.indexOf(s)) < (str.indexOf('='))) { ans[2] = -(ans[2]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V81/7086/buggy-version/algorithm.calculator.Main.java", "BodyUseAPI": [], "Fixed commit": "179f5bc3149d8cb4538c7da92f2e75d4e458334c", "Url": "https://api.github.com/repos/chouhaohui/test", "Date": "2016-07-14T08:36:02Z"},
{"Line": "=>2623", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((request.response) == (java.lang.Boolean.TRUE)) { record.setValueData(request.value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/7640/buggy-version/hazelcast.src.main.java.com.hazelcast.impl.ConcurrentMapManager.java", "BodyUseAPI": ["com.hazelcast.impl.Record.setValueData(request.value)"], "Fixed commit": "2ef2800057a5bb88685b4a1ab9e9b16f13be5b78", "Url": "https://api.github.com/repos/hazelcast/hazelcast", "Date": "2012-06-11T13:09:38Z"},
{"Line": "=>567", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (current instanceof ru.regenix.jphp.syntax.generators.ClassStmtToken) { unexpectedToken(current); }else { if (!(tokens.isEmpty())) unexpectedToken(current); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/3247/buggy-version/src.ru.regenix.jphp.syntax.generators.ExprGenerator.java", "BodyUseAPI": ["ru.regenix.jphp.syntax.generators.ExprGenerator.unexpectedToken(ru.regenix.jphp.tokenizer.token.Token)", "ru.regenix.jphp.syntax.generators.ExprGenerator.unexpectedToken(ru.regenix.jphp.tokenizer.token.Token)"], "Fixed commit": "0a0601ea8fbe4dfb1da7c053bbbf46f40bc72d7a", "Url": "https://api.github.com/repos/dim-s/jvm-php", "Date": "2013-12-24T07:29:53Z"},
{"Line": "=>645", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ru.regenix.jphp.syntax.generators.manually.SimpleExprGenerator.nextToken(java.util.ListIterator<ru.regenix.jphp.syntax.generators.manually.Token>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (isOpenedBrace(tmp, BraceExprToken.Kind.ARRAY)) { braceKind = BraceExprToken.Kind.ARRAY; separator = ru.regenix.jphp.common.Separator.ARRAY; continue; }else if (isOpenedBrace(tmp, BraceExprToken.Kind.BLOCK)) { braceKind = BraceExprToken.Kind.BLOCK; separator = ru.regenix.jphp.common.Separator.ARRAY_BLOCK; continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/3247/buggy-version/src.ru.regenix.jphp.syntax.generators.manually.SimpleExprGenerator.java", "BodyUseAPI": ["ru.regenix.jphp.syntax.generators.manually.SimpleExprGenerator.isOpenedBrace(ru.regenix.jphp.syntax.generators.manually.Token,BraceExprToken.Kind.BLOCK)"], "Fixed commit": "0a0601ea8fbe4dfb1da7c053bbbf46f40bc72d7a", "Url": "https://api.github.com/repos/dim-s/jvm-php", "Date": "2013-12-24T07:29:53Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(Gegenstand.KNOCHEN.isToTakeAway())) { Gegenstand.KNOCHEN.enableToTakeAway(); Projekt42.Gegenstaende.getChildren().remove(2); Projekt42.Gegenstaende.getChildren().add(Gegenstand.KNOCHEN.getImageView(Gegenstand.KNOCHEN.name)); Gegenstand.KNOCHEN.textboxinfo = new java.lang.String[]{ \"Jetzt kann ich ihn anfassen\" }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/3261/buggy-version/Projekt42.src.projekt42.GegenstandsKombination.java", "BodyUseAPI": [], "Fixed commit": "4695eaded103cae42a05af6f87fc5ec2ca7c90ad", "Url": "https://api.github.com/repos/DBiesemann/Projekt42", "Date": "2014-04-06T12:59:32Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mVelocity.getSpeed()) > (mMaxSpeed)) { mVelocity = hacking.to.the.gate.Velocity.getDestinationVelocity(mSelfPos, mDestPos, mMaxSpeed); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/8884/buggy-version/app.src.main.java.hacking.to.the.gate.Jet.java", "BodyUseAPI": [], "Fixed commit": "0074b4a0ec3f4c6489bb7493b3d64f788c95e55c", "Url": "https://api.github.com/repos/SteinsGateFFF/shooting-star", "Date": "2015-08-26T04:57:07Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((output.getParent()) != null) && (java.nio.file.Files.notExists(output.getParent()))) java.nio.file.Files.createDirectories(output.getParent());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/7947/buggy-version/AmazonAnalysis.src.hadoop08.preprocess.NumberLines.java", "BodyUseAPI": ["java.nio.file.Path.getParent()", "java.nio.file.Files.createDirectories(java.nio.file.Path)"], "Fixed commit": "4409e420ea6d0f3d85fc18fd0fcc2594bf96fd40", "Url": "https://api.github.com/repos/gekonwi/brandeis.big_data", "Date": "2014-11-26T04:57:53Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (s != null) { lblName.setText(choose.getSelectedFile().getName()); audTest = new Audio(choose.getSelectedFile()); Main.frame.setTitle((\"Rhythm Master - \" + s)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/7455/buggy-version/src.Setup.java", "BodyUseAPI": ["Main.frame.setTitle(java.lang.String)"], "Fixed commit": "798c4bbafb577e26a76d174dc65ed4240c40141c", "Url": "https://api.github.com/repos/Yuting9/ProjectBravo", "Date": "2017-01-07T18:32:31Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (found) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/142/buggy-version/src.Song.java", "BodyUseAPI": [], "Fixed commit": "0eb6c3a2bd580fdf4eb5f4501543e216525b1880", "Url": "https://api.github.com/repos/awpollon/Holiday_Lights_Editor", "Date": "2015-01-11T20:04:14Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["me.timothy.bots.LoansDatabase.getUsernameByUsername(info.getObject(myName.replace(\"applied\", \"user\")).toString())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (username == null) return \"No\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/2275/buggy-version/src.me.timothy.bots.responses.AppliedFormattableObject.java", "BodyUseAPI": [], "Fixed commit": "b2dfa67f64ca91acda6e688455b88d3738255980", "Url": "https://api.github.com/repos/Tjstretchalot/LoansBot", "Date": "2015-11-10T06:29:57Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!forceDelimiter) { forceDelimiter = ((source.length()) == 0) || (!(java.lang.Character.isLetter(source.charAt(0)))); if (!forceDelimiter) { for (int i = 1; (!forceDelimiter) && (i < (source.length())); i++) { char c = source.charAt(i); forceDelimiter = !((((java.lang.Character.isLetter(c)) || (c == '.')) || (c == '_')) || (c == '-')); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/4145/buggy-version/src.main.java.com.creativewidgetworks.goldparser.engine.Symbol.java", "BodyUseAPI": [], "Fixed commit": "14a0555a5f4a1f0adb9ec7c2dc4b69b82788b7cd", "Url": "https://api.github.com/repos/ridencww/goldengine", "Date": "2014-10-22T03:06:40Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (result.get(0).toLocalDate().isEqual(endDateTime.toLocalDate())) { result.add(endDateTime); endDateTime = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/2939/buggy-version/src.main.java.CreateTask.java", "BodyUseAPI": ["java.util.ArrayList<java.time.LocalDateTime>.add(java.time.LocalDateTime)"], "Fixed commit": "7a6f432c137b2483dcfdd64b4c4481491eb23910", "Url": "https://api.github.com/repos/cs2103jan2015-w15-1j/main", "Date": "2015-04-06T09:50:33Z"},
{"Line": "=>626", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["otherCellCollection.get(label).toArray(org.kframework.backend.java.symbolic.Cell[])", "cellCollection.get(label).toArray(org.kframework.backend.java.symbolic.Cell[])"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((otherCells.length) > (cells.length)) { fail(cellCollection, otherCellCollection); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/2359/buggy-version/src.javasources.KTool.src.org.kframework.backend.java.symbolic.SymbolicUnifier.java", "BodyUseAPI": [], "Fixed commit": "f8ab74ba025afa4e8da7ab8a8bf98facb92b5bcc", "Url": "https://api.github.com/repos/daejunpark/k", "Date": "2014-08-31T03:58:08Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isSuper) packageName = com.perl5.lang.perl.util.PerlPackageUtil.getContextPackageName(method);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/1794/buggy-version/src.com.perl5.lang.perl.idea.completion.providers.PerlSubMethodCompletionProvider.java", "BodyUseAPI": [], "Fixed commit": "aef6a4b559ccfc499b174443c59e510c757ff767", "Url": "https://api.github.com/repos/Camelcade/Perl5-IDEA", "Date": "2015-08-07T17:54:42Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getIntent().getData()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (data != null) { android.content.Intent intent = com.thebluealliance.androidclient.Utilities.getIntentForTBAUrl(this, data); if (intent != null) { startActivity(intent); finish(); return; }else { goToHome(); finish(); } }else { goToHome(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/5273/buggy-version/android.src.main.java.com.thebluealliance.androidclient.activities.LaunchActivity.java", "BodyUseAPI": ["com.thebluealliance.androidclient.Utilities.getIntentForTBAUrl(com.thebluealliance.androidclient.activities.LaunchActivity,android.net.Uri)"], "Fixed commit": "2afe2019e7a0da4b695fd95e671c81648658f53d", "Url": "https://api.github.com/repos/the-blue-alliance/the-blue-alliance-android", "Date": "2014-06-18T02:22:34Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cmp.hasKey(vazkii.botania.common.block.tile.mana.TileSpreader.TAG_CAN_SHOOT_BURST)) canShootBurst = cmp.getBoolean(vazkii.botania.common.block.tile.mana.TileSpreader.TAG_CAN_SHOOT_BURST);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/6383/buggy-version/src.main.java.vazkii.botania.common.block.tile.mana.TileSpreader.java", "BodyUseAPI": ["net.minecraft.nbt.NBTTagCompound.getBoolean(java.lang.String)"], "Fixed commit": "517e619b1d6c73b91955ff7654483c34e2692b31", "Url": "https://api.github.com/repos/Vazkii/Botania", "Date": "2015-04-17T15:35:47Z"},
{"Line": "=>270", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gbbmgmt.model.recipe.Recipe.getDryHops()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (dryHops != null) { for (gbbmgmt.model.recipe.DryHops hop : dryHops) { if ((hop.getHop()) != null) { if ((hop.getHop().getHopID()) == hopID) { lbs += ((double) (hop.getLbs())); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/5346/buggy-version/src.main.java.gbbmgmt.HopContractFrames.CalculateContractFrame.java", "BodyUseAPI": [], "Fixed commit": "8209d8ded49592678438d835d4844474f3acb763", "Url": "https://api.github.com/repos/donaldchapman/openbrew", "Date": "2015-10-13T00:07:00Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mostOuterBox) == null) || ((card) == null)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/9141/buggy-version/SimpleUI.srcModifiers.simpleui.modifiers.v3.M_Container.java", "BodyUseAPI": [], "Fixed commit": "57d2290af68021b44258702b42f64bb95fd95ca9", "Url": "https://api.github.com/repos/ho-pp/SimpleUi", "Date": "2015-01-28T13:59:35Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.avsatum.datamapper.services.DataService.logger.isDebugEnabled()) com.avsatum.datamapper.services.DataService.logger.debug((((\"Executing \" + spName) + \" \") + (sb.toString())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/8782/buggy-version/data-ratman.src.com.avsatum.datamapper.services.DataService.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String)"], "Fixed commit": "11482afcfa6cb537a55ef3f312fb7e75f2a098b6", "Url": "https://api.github.com/repos/alexlokshin/data-ratman", "Date": "2015-04-24T02:55:31Z"},
{"Line": "=>324", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.avsatum.datamapper.services.DataService.logger.isDebugEnabled()) com.avsatum.datamapper.services.DataService.logger.debug((((\"Executing \" + spName) + \" \") + (sb.toString())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/8782/buggy-version/data-ratman.src.com.avsatum.datamapper.services.DataService.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String)"], "Fixed commit": "11482afcfa6cb537a55ef3f312fb7e75f2a098b6", "Url": "https://api.github.com/repos/alexlokshin/data-ratman", "Date": "2015-04-24T02:55:31Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.cattle.platform.iaas.api.auth.dao.AuthDao.hasAccessToAnyProject(java.util.Set<io.cattle.platform.api.auth.Identity>,boolean,<nulltype>)", "io.cattle.platform.object.util.DataAccessor.fields(account).withKey(SecurityConstants.HAS_LOGGED_IN).get()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (((!hasAccessToAProject) && (hasLoggedIn != null)) && (!((java.lang.Boolean) (hasLoggedIn)))) { projectResourceManager.createProjectForUser(account); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/4158/buggy-version/code.iaas.auth-logic.src.main.java.io.cattle.platform.iaas.api.auth.TokenUtils.java", "BodyUseAPI": [], "Fixed commit": "408f65c438a25fef9f00fc0e69da74663b6682aa", "Url": "https://api.github.com/repos/hibooboo2/cattle", "Date": "2015-09-03T18:02:11Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (account != null) { io.cattle.platform.object.util.DataAccessor.fields(account).withKey(SecurityConstants.HAS_LOGGED_IN).set(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/4158/buggy-version/code.iaas.auth-logic.src.main.java.io.cattle.platform.iaas.api.auth.TokenUtils.java", "BodyUseAPI": ["io.cattle.platform.object.util.DataAccessor.fields(io.cattle.platform.core.model.Account)", "io.cattle.platform.object.util.DataAccessor.fields(account).withKey(SecurityConstants.HAS_LOGGED_IN)", "io.cattle.platform.object.util.DataAccessor.fields(account).withKey(SecurityConstants.HAS_LOGGED_IN).set(boolean)"], "Fixed commit": "408f65c438a25fef9f00fc0e69da74663b6682aa", "Url": "https://api.github.com/repos/hibooboo2/cattle", "Date": "2015-09-03T18:02:11Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.mpp.project.UserInfoMgr.getInstance().getUser().getAuthorizationLevel().equals(Person.AuthorizationLevel.LIBRARIAN)) { findViewById(R.id.btn_addCopy).setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/4812/buggy-version/app.src.main.java.com.mpp.project.activity.BookDetail.java", "BodyUseAPI": [], "Fixed commit": "3cc1ebc52780837227980aadd3392505310255b0", "Url": "https://api.github.com/repos/wudizhuo/MppProject", "Date": "2017-03-09T17:59:56Z"},
{"Line": "=>362", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang.StringUtils.isBlank(orderExcelVO.getOrderTime())) { purchaseDate = new java.util.Date(); }else { try { purchaseDate = com.order.www.util.DateUtil.parseDate(orderExcelVO.getOrderTime(), \"yyyy-MM-dd HH:mm:ss\"); } catch (java.lang.Exception e) { purchaseDate = new java.util.Date(); errorContent.append(\"\u8ba2\u5355\").append(orderExcelVO.getOrderCode()).append(\"\u4e0b\u5355\u683c\u5f0f\u6709\u8bef,\u81ea\u52a8\u91cd\u7f6e\u4e3a\u4eca\u5929\u65f6\u95f4\").append(\"<br/>\"); e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/9020/buggy-version/src.main.java.com.order.www.service.OrderService.java", "BodyUseAPI": ["com.order.www.util.DateUtil.parseDate(orderExcelVO.getOrderTime(),java.lang.String)", "com.order.www.domain.vo.OrderExcelVO.getOrderCode()", "com.order.www.domain.vo.OrderExcelVO.getOrderTime()", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(orderExcelVO.getOrderCode())", "errorContent.append(\"\u8ba2\u5355\").append(orderExcelVO.getOrderCode()).append(\"\u4e0b\u5355\u683c\u5f0f\u6709\u8bef,\u81ea\u52a8\u91cd\u7f6e\u4e3a\u4eca\u5929\u65f6\u95f4\").append(java.lang.String)"], "Fixed commit": "923bdd5566b50a8a9dfb3f125e227b053db3aba4", "Url": "https://api.github.com/repos/kongtrio/seller_order", "Date": "2017-09-26T09:30:14Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (configFileProperties != null) { configFileProperties.getProperty(com.alibaba.druid.filter.config.ConfigFilter.CONFIG_KEY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/2644/buggy-version/src.main.java.com.alibaba.druid.filter.config.ConfigFilter.java", "BodyUseAPI": ["java.util.Properties.getProperty(java.lang.String)"], "Fixed commit": "cfffbc1a146ceebf781cd546a209846ea1cbe918", "Url": "https://api.github.com/repos/cquptlujianbo/druid", "Date": "2013-08-04T06:46:38Z"},
{"Line": "=>250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.valueOf(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (vertexMap.containsKey(sentKey)) { sentVertices.addAll(vertexMap.get(sentKey)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/6547/buggy-version/src.main.java.gov.ornl.stucco.RelationExtractor.java", "BodyUseAPI": ["java.util.List<gov.ornl.stucco.graph.Vertex>.addAll(vertexMap.get(sentKey))", "java.util.Map<java.lang.Integer, java.util.List<gov.ornl.stucco.graph.Vertex>>.get(java.lang.Integer)"], "Fixed commit": "0c16700c1332f6fd3f08a2339d4311a41c271e44", "Url": "https://api.github.com/repos/stucco/relation-extractor", "Date": "2014-06-30T15:31:08Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cpw.mods.fml.common.FMLCommonHandler.instance().getEffectiveSide().isClient()) cpw.mods.fml.common.FMLCommonHandler.instance().bus().register(new com.hockeyhurd.handler.KeyEventHandler());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/382/buggy-version/com.hockeyhurd.mod.ExtraTools.java", "BodyUseAPI": [], "Fixed commit": "e950f354015b8b1dc7f0c7fda5add97bacd019e1", "Url": "https://api.github.com/repos/hockeyhurd/ExtraTools-", "Date": "2014-07-29T20:36:20Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Orientation.Landscape) == (orientation)) { setBounds(X, Y, GalleryUI.BWIDTH, GalleryUI.BHEIGHT); }else { setBounds(X, Y, GalleryUI.BHEIGHT, GalleryUI.BWIDTH); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/8387/buggy-version/src.main.java.uk.org.interzone.NButton.java", "BodyUseAPI": [], "Fixed commit": "7c5ad4fe6b0eb005a6850151de89609f2d102461", "Url": "https://api.github.com/repos/NathanLewis/PhotoGallery", "Date": "2016-01-24T22:31:59Z"},
{"Line": "=>647", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((reqWidth > 0) && (reqHeight > 0)) { imageRequestBuilder.setResizeOptions(new com.facebook.imagepipeline.common.ResizeOptions(reqWidth, reqHeight)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/9136/buggy-version/fresco-helper.src.main.java.com.facebook.fresco.helper.ImageLoader.java", "BodyUseAPI": ["com.facebook.imagepipeline.request.ImageRequestBuilder.setResizeOptions(com.facebook.imagepipeline.common.ResizeOptions)"], "Fixed commit": "af0e9ae2f93e646a93364cf31fe209cdd716c89c", "Url": "https://api.github.com/repos/hpdx/fresco-helper", "Date": "2017-06-07T14:09:56Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portal.kernel.search.Document.get(Field.ROOT_ENTRY_CLASS_NAME)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.liferay.portal.kernel.util.Validator.isNull(className)) { className = document.get(Field.ENTRY_CLASS_NAME); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/8807/buggy-version/portal-impl.src.com.liferay.portal.search.SearchPermissionCheckerImpl.java", "BodyUseAPI": [], "Fixed commit": "d006af2aa9f75464012697429a7efe6e1aba4b35", "Url": "https://api.github.com/repos/Preston-Crary/liferay-portal", "Date": "2015-05-22T21:08:16Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (l == u) throw new java.lang.RuntimeException(\"Lower and upper bounds are the same\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/8049/buggy-version/src.org.ddogleg.solver.impl.FindRealRootsSturm.java", "BodyUseAPI": [], "Fixed commit": "6afd3a9d20fe1248a0de87f00a8aa7f4bc45af33", "Url": "https://api.github.com/repos/lessthanoptimal/ddogleg", "Date": "2014-05-28T20:30:20Z"},
{"Line": "=>315", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((galleryViewPager.getLayoutParams()) instanceof android.widget.FrameLayout.LayoutParams) { bottomMargin = ((android.widget.FrameLayout.LayoutParams) (galleryViewPager.getLayoutParams())).bottomMargin; }else if ((galleryViewPager.getLayoutParams()) instanceof android.widget.RelativeLayout.LayoutParams) { bottomMargin = ((android.widget.RelativeLayout.LayoutParams) (galleryViewPager.getLayoutParams())).bottomMargin; }else if ((galleryViewPager.getLayoutParams()) instanceof android.widget.LinearLayout.LayoutParams) { bottomMargin = ((android.widget.LinearLayout.LayoutParams) (galleryViewPager.getLayoutParams())).bottomMargin; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/1513/buggy-version/src.com.wb.nextgenlibrary.fragment.ECGalleryViewFragment.java", "BodyUseAPI": ["android.support.v4.view.ViewPager.getLayoutParams()", "android.support.v4.view.ViewPager.getLayoutParams()", "android.support.v4.view.ViewPager.getLayoutParams()", "android.support.v4.view.ViewPager.getLayoutParams()", "android.support.v4.view.ViewPager.getLayoutParams()"], "Fixed commit": "dcc77eb52c924f2c26eba4dee75f0ac82d74d802", "Url": "https://api.github.com/repos/warnerbros/cpe-manifest-android-experience", "Date": "2017-05-02T20:40:35Z"},
{"Line": "=>452", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type == 5) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/8192/buggy-version/src.Data.java", "BodyUseAPI": [], "Fixed commit": "5d0a29894a54946513b200617e4e8582de288d72", "Url": "https://api.github.com/repos/MicahAndWill/FruitFever", "Date": "2014-05-23T00:17:15Z"},
{"Line": "=>758", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (done) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/7783/buggy-version/app.src.main.java.com.eecs481.mathinmotion.EightPuzzle.java", "BodyUseAPI": [], "Fixed commit": "0f78d8e4ccf796496b58511d2f0a6bf13388c38d", "Url": "https://api.github.com/repos/jcheng248/Math-in-Motion", "Date": "2015-02-25T22:14:26Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.planb.soda.Util.lmListener) != null) { com.planb.soda.Util.lm.removeUpdates(com.planb.soda.Util.lmListener); com.planb.soda.Util.lmListener = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/1691/buggy-version/Soda.src.com.planb.soda.Util.java", "BodyUseAPI": [], "Fixed commit": "cf12ac8e71075509ad4e2a0ae70604e3c0c664ad", "Url": "https://api.github.com/repos/miterfrants/android-soda", "Date": "2014-02-18T09:17:59Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (listAdapter.isEmpty()) { textViewNoNotice.setVisibility(View.VISIBLE); textViewNoNotice.setText(\"Currently no notice\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/5338/buggy-version/Flippy.app.src.main.java.com.jojo.flippy.core.FragmentNotice.java", "BodyUseAPI": [], "Fixed commit": "9ea9c8e390380909138f57a4e917b6666777761b", "Url": "https://api.github.com/repos/jessejohnson/flippy", "Date": "2014-07-11T12:54:55Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (adapter.isEmpty()) { textViewNoCommunity.setVisibility(View.VISIBLE); textViewNoCommunity.setText(\"Currently no community\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/5338/buggy-version/Flippy.app.src.main.java.com.jojo.flippy.app.SelectCommunityActivity.java", "BodyUseAPI": [], "Fixed commit": "9ea9c8e390380909138f57a4e917b6666777761b", "Url": "https://api.github.com/repos/jessejohnson/flippy", "Date": "2014-07-11T12:54:55Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (it.polimi.spf.framework.local.SPFService.isStarted()) { drawer.removeAllStickyFooterItems(); proximitySwitch.withChecked(true); drawer.updateStickyFooterItem(proximitySwitch); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/6836/buggy-version/sPFApp.src.main.java.it.polimi.spf.app.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "8bf32159f5755706bb631bcf35c6227521211413", "Url": "https://api.github.com/repos/deib-polimi/SPF2", "Date": "2015-10-19T08:55:54Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, java.lang.Integer>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (storeLockWriteObject.containsKey(joid)) { java.io.Serializable updated = storeLockWriteObject.get(joid).jvnInvalidateWriterForReader(joid); toReturn = new jvn.JvnObjectImpl(joid, updated); storeJvnObject.put(joid, toReturn); storeLockReadObject.get(joid).add(storeLockWriteObject.get(joid)); storeLockWriteObject.remove(joid); }else toReturn = this.storeJvnObject.get(joid);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/1396/buggy-version/src.jvn.JvnCoordImpl.java", "BodyUseAPI": ["storeLockReadObject.get(joid).add(storeLockWriteObject.get(joid))", "java.util.HashMap<java.lang.Integer, jvn.JvnRemoteServer>.remove(java.lang.Integer)", "java.util.HashMap<java.lang.Integer, java.util.List<jvn.JvnRemoteServer>>.get(java.lang.Integer)", "storeLockWriteObject.get(joid).jvnInvalidateWriterForReader(java.lang.Integer)", "java.util.HashMap<java.lang.Integer, jvn.JvnRemoteServer>.get(java.lang.Integer)", "java.util.HashMap<java.lang.Integer, jvn.JvnRemoteServer>.get(java.lang.Integer)", "java.util.HashMap<java.lang.Integer, jvn.JvnObject>.put(java.lang.Integer,jvn.JvnObject)", "java.util.HashMap<java.lang.Integer, jvn.JvnObject>.get(java.lang.Integer)"], "Fixed commit": "56634baa8b96cd181621d221676943c1cf1d9585", "Url": "https://api.github.com/repos/GIODm2pgi/SRR_PJ", "Date": "2014-10-02T06:29:13Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.arrayListOfStructuralRelations.size()) > 0) { this.arrayListOfStructuralRelations.remove(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/6031/buggy-version/src.semsim.model.physical.object.CompositePhysicalEntity.java", "BodyUseAPI": ["java.util.ArrayList<semsim.definitions.SemSimRelations.StructuralRelation>.remove(int)"], "Fixed commit": "f1772702ccf35142d1dcb11f89660b0da309b26d", "Url": "https://api.github.com/repos/SemBioProcess/SemGen", "Date": "2017-07-28T17:24:53Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.arrayListOfStructuralRelations.size()) > 0) { this.arrayListOfStructuralRelations.remove(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/6031/buggy-version/src.semsim.model.physical.object.CompositePhysicalEntity.java", "BodyUseAPI": ["java.util.ArrayList<semsim.definitions.SemSimRelations.StructuralRelation>.remove(int)"], "Fixed commit": "f1772702ccf35142d1dcb11f89660b0da309b26d", "Url": "https://api.github.com/repos/SemBioProcess/SemGen", "Date": "2017-07-28T17:24:53Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((timerValue) <= 0) { timerValue = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/7785/buggy-version/core.src.com.mygdx.game.Game.java", "BodyUseAPI": [], "Fixed commit": "5f9c9ee8a1ee61bb5e9b971ece3dd73166fb1185", "Url": "https://api.github.com/repos/Pedram26/BattleOfOlympus", "Date": "2015-03-08T21:22:54Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["s.objects.closest(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (fungiObject != null) { fungiObject.interact(\"Pick\"); new org.osbot.rs07.utility.ConditionalSleep(500, 100) { @java.lang.Override public boolean condition() { return !(me.isMoving()); } }.sleep(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/1738/buggy-version/GreenThumbs.src.tasks.Pick.java", "BodyUseAPI": ["org.osbot.rs07.api.model.RS2Object.interact(java.lang.String)"], "Fixed commit": "25830ce421d51b076fadea98b6ac85bea16f90ab", "Url": "https://api.github.com/repos/davidgao93/NodeBasedRSScripts", "Date": "2016-06-04T22:57:22Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.bauble_app.bauble.StoryObject.grabUniqueId()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(this.mKeys.contains(key))) { this.mKeys.add(key); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/5633/buggy-version/app.src.main.java.com.bauble_app.bauble.StorySingleton.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "b80e8ab3747a5e29b2afdd2ae31f904a119bb774", "Url": "https://api.github.com/repos/eduardrg/TellToo", "Date": "2017-05-30T08:07:30Z"},
{"Line": "=>488", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((model.keyValues.size()) == 0) { model.intrinsicValue = com.questdb.ql.model.IntrinsicValue.FALSE; break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/7390/buggy-version/core.src.main.java.com.questdb.ql.parser.QueryFilterAnalyser.java", "BodyUseAPI": [], "Fixed commit": "228afbc3b02fad413ffac2b184d17ea9f958ba40", "Url": "https://api.github.com/repos/bluestreak01/questdb", "Date": "2016-11-21T00:17:31Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mChapterReceiver) != null) getActivity().unregisterReceiver(mChapterReceiver);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/6827/buggy-version/src.main.java.com.emanga.activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "0ca826c58d4e0ff2a41ef7d3ada96deacf037334", "Url": "https://api.github.com/repos/Vrael/eManga", "Date": "2013-11-27T18:49:22Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(((FastCollinearPoints.isSortedOnce) && (FastCollinearPoints.less(FastCollinearPoints.cmp, a[(mid + 1)], a[mid]))) || ((!(FastCollinearPoints.isSortedOnce)) && (FastCollinearPoints.less(a[(mid + 1)], a[mid]))))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/3422/buggy-version/week3-collinear.FastCollinearPoints.java", "BodyUseAPI": [], "Fixed commit": "708c25e71f153d2c4c52004d63077a77bf23576a", "Url": "https://api.github.com/repos/Mr-Awakened/Algorithms-I", "Date": "2017-12-06T06:59:50Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(BruteCollinearPoints.less(a[(mid + 1)], a[mid]))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/3422/buggy-version/week3-collinear.BruteCollinearPoints.java", "BodyUseAPI": [], "Fixed commit": "708c25e71f153d2c4c52004d63077a77bf23576a", "Url": "https://api.github.com/repos/Mr-Awakened/Algorithms-I", "Date": "2017-12-06T06:59:50Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.descriptors) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/114/buggy-version/src.org.graphstream.geography.GeoSource.java", "BodyUseAPI": [], "Fixed commit": "b96eec4aa883ba517b19e5744aad482d0a41fb57", "Url": "https://api.github.com/repos/graphstream/gs-geography", "Date": "2012-08-20T08:42:54Z"},
{"Line": "=>358", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((com.inceptai.dobby.ai.DataInterpreter.isNonFunctional(params.bandwidthGrade.getDownloadBandwidthMetric())) && (com.inceptai.dobby.ai.DataInterpreter.isNonFunctional(params.bandwidthGrade.getUploadBandwidthMetric()))) { baseMessage = \"Looks like your Internet service is down. \" + \"We are unable to reach external servers for any bandwidth testing.\"; if (!(params.bandwidthGrade.isp.equals(Utils.EMPTY_STRING))) { conditionalMessage = ((\"You should contact \" + (params.bandwidthGrade.isp)) + \" to see if they know about any issues \") + \"in your area\"; } }else { baseMessage = (((((((((\"Looks like your Internet service could be slow at the moment. \" + \"You are getting about \") + (java.lang.String.format(\"%.2f\", params.bandwidthGrade.getDownloadBandwidth()))) + \" Mbps download and \") + (java.lang.String.format(\"%.2f\", params.bandwidthGrade.getUploadBandwidth()))) + \" Mbps upload. If these speeds seem low as per your \") + \"contract, you should reach out to \") + (params.bandwidthGrade.isp)) + \" and see why you are getting such low speeds. \") + \"You should tell them that your wifi network latency is low but the \") + \"latency to access Internet is high.\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/1910/buggy-version/Dobby.app.src.main.java.com.inceptai.dobby.ai.SuggestionCreator.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,params.bandwidthGrade.getDownloadBandwidth())", "DataInterpreter.BandwidthGrade.getDownloadBandwidth()", "DataInterpreter.BandwidthGrade.getUploadBandwidth()", "params.bandwidthGrade.isp.equals(Utils.EMPTY_STRING)", "java.lang.String.format(java.lang.String,params.bandwidthGrade.getUploadBandwidth())"], "Fixed commit": "d2fd9218b3a17750bc13faed640df27feaa61b93", "Url": "https://api.github.com/repos/InceptAi/dobby-android", "Date": "2017-07-05T17:45:23Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(directory.exists())) { directory.mkdir(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/981/buggy-version/src.main.java.com.will.watcher.yaml.BackConfigManager.java", "BodyUseAPI": ["java.io.File.mkdir()"], "Fixed commit": "be2d6c0b71fe53e5fe176a800e8518892194deeb", "Url": "https://api.github.com/repos/tongwill/watcher", "Date": "2014-07-14T10:03:38Z"},
{"Line": "=>1275", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((toursListView.getVisibility()) == (android.view.View.VISIBLE)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/9092/buggy-version/app.src.main.java.social.entourage.android.map.MapEntourageFragment.java", "BodyUseAPI": [], "Fixed commit": "8007725e3584edfd93e8e3894428b33421cd2943", "Url": "https://api.github.com/repos/ReseauEntourage/entourage-android", "Date": "2016-04-14T09:10:11Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (entity == null) { java.lang.System.out.println(\"entity is null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/4671/buggy-version/src.main.java.service.UserFacadeREST.java", "BodyUseAPI": [], "Fixed commit": "237bdc76c3844f58ee950df817c8fb0830972ad8", "Url": "https://api.github.com/repos/coos88/Todo-backend", "Date": "2017-01-09T14:53:35Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((timer) != null) timer.cancel();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/5751/buggy-version/src.tw.edu.ntu.csie.angryrunner.StatusHandler.java", "BodyUseAPI": [], "Fixed commit": "95db640f7939844f06dbb1c76fa4aca8cd6e5144", "Url": "https://api.github.com/repos/csferng/Angry-Runner", "Date": "2011-12-22T06:56:23Z"},
{"Line": "=>349", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ast.mOp) == (UnaryExpr.PLUS)) { return e; }else { return new livros.db.UnExpr(ast.mOp, e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/5391/buggy-version/src.livros.compiler.Translator.java", "BodyUseAPI": [], "Fixed commit": "bfeada571fe9b8161557af867bbb964a1ba5ba2d", "Url": "https://api.github.com/repos/ktok07b6/Livros", "Date": "2015-01-09T08:31:17Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((s1.getPriority()) == (s2.getPriority())) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/2994/buggy-version/src.main.java.refinedstorage.tile.TileController.java", "BodyUseAPI": [], "Fixed commit": "ae5f390d182ce7e95b23a05a760aa70b7cdbf802", "Url": "https://api.github.com/repos/raoulvdberge/refinedstorage", "Date": "2016-04-29T20:42:30Z"},
{"Line": "=>513", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((hourCombo.getSelectionIndex()) > (hourComboILR.getSelectionIndex())) { de.atlassoft.util.ErrorHelper.createErrorMessage(I18N.getMessage(\"ScheduleComposite.ErrorMessage.Title\"), I18N.getMessage(\"ScheduleComposite.ErrorMessage.WrongTime\")); return; }else if (((hourCombo.getSelectionIndex()) == (hourComboILR.getSelectionIndex())) && ((minuteCombo.getSelectionIndex()) > (minuteComboILR.getSelectionIndex()))) { de.atlassoft.util.ErrorHelper.createErrorMessage(I18N.getMessage(\"ScheduleComposite.ErrorMessage.Title\"), I18N.getMessage(\"ScheduleComposite.ErrorMessage.WrongTime\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/7197/buggy-version/NodeAnimator.src.de.atlassoft.ui.ScheduleComposite.java", "BodyUseAPI": ["org.eclipse.swt.widgets.Combo.getSelectionIndex()", "org.eclipse.swt.widgets.Combo.getSelectionIndex()"], "Fixed commit": "14c313f146ce0fd5b1b28b7ce7f901c3ff8b45c3", "Url": "https://api.github.com/repos/ATLASsoft/SoPra", "Date": "2013-07-12T20:16:10Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["us.codecraft.webmagic.ResultItems.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (modelData != null) { for (T t : modelData) { org.hibernate.Session session = kellonge.flightcrawler.utils.HibernateUtils.getSessionFactory().getCurrentSession(); session.beginTransaction(); session.save(t); session.getTransaction().commit(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/4356/buggy-version/src.kellonge.flightcrawler.pipline.SingleModelSavePipline.java", "BodyUseAPI": [], "Fixed commit": "eac88aed1ddd247ef2fd645f63856fc62fe50b66", "Url": "https://api.github.com/repos/kellonge/flight-crawler", "Date": "2014-11-17T11:30:28Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((flightList.size()) == 0) { page.setSkip(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/4356/buggy-version/src.kellonge.flightcrawler.process.ScheduleCtripPageProcess.java", "BodyUseAPI": [], "Fixed commit": "eac88aed1ddd247ef2fd645f63856fc62fe50b66", "Url": "https://api.github.com/repos/kellonge/flight-crawler", "Date": "2014-11-17T11:30:28Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!success) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/2596/buggy-version/src.bruce.common.utils.FileUtil.java", "BodyUseAPI": [], "Fixed commit": "5a1fda48b094581cb2ccd460d7233331cd9c8658", "Url": "https://api.github.com/repos/HeGanjie/bruce-common-utils", "Date": "2014-11-27T04:12:14Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((list.size()) > 0) && ((list.get(0)) instanceof eu.wisebed.api.v3.common.SecretAuthenticationKey)) { secretAuthenticationKeys = ((java.util.List<eu.wisebed.api.v3.common.SecretAuthenticationKey>) (list)); usernamePrefixPairs = new java.util.LinkedList<eu.wisebed.api.v3.common.UsernameUrnPrefixPair>(eu.wisebed.api.v3.util.WisebedConversionHelper.convert(((java.util.List<eu.wisebed.api.v3.common.SecretAuthenticationKey>) (list)))); }else if (((list.size()) > 0) && ((list.get(0)) instanceof eu.wisebed.api.v3.common.NodeUrn)) { nodeURNs = ((java.util.List<eu.wisebed.api.v3.common.NodeUrn>) (list)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/5694/buggy-version/rs-server.src.main.java.de.uniluebeck.itm.tr.rs.RSAuthorizationInterceptor.java", "BodyUseAPI": ["java.util.List<?>.get(int)", "java.util.List<?>.size()"], "Fixed commit": "75fc1eda191120d94d3d85a5376dde8e950db58b", "Url": "https://api.github.com/repos/itm/testbed-runtime", "Date": "2013-01-25T15:59:21Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (doScore) { this.tabBoard[x][y].getCellColor().oppositeColor().scoreUp(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/4420/buggy-version/engine.engine.Board.java", "BodyUseAPI": [], "Fixed commit": "dbcffcec7bce61649e7626b15934114b97e516c9", "Url": "https://api.github.com/repos/SimonPiCarter/Go", "Date": "2016-04-12T12:32:05Z"},
{"Line": "=>336", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cameraManager.getCameraCharacteristics(cameraId).get(CameraCharacteristics.CONTROL_AE_AVAILABLE_TARGET_FPS_RANGES)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (autoExposureFPSRanges != null) { for (android.util.Range<java.lang.Integer> autoExposureRange : autoExposureFPSRanges) { if (autoExposureRange.equals(android.util.Range.create(15, 30))) { captureRequestBuilder.set(CaptureRequest.CONTROL_AE_TARGET_FPS_RANGE, android.util.Range.create(15, 30)); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/7934/buggy-version/app.src.main.java.com.collage.camera.CameraFragment.java", "BodyUseAPI": [], "Fixed commit": "2b72d790a3ad2a1c3c9628cecb292f52d632ae32", "Url": "https://api.github.com/repos/matdziu/collage", "Date": "2017-01-18T10:15:21Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((importType == (org.cytoscape.tableimport.internal.util.ImportType.TABLE_IMPORT)) && (!keyFound)) && ((types.length) > 0)) types[0] = org.cytoscape.tableimport.internal.util.SourceColumnSemantic.KEY;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/6534/buggy-version/table-import-impl.src.main.java.org.cytoscape.tableimport.internal.util.TypeUtil.java", "BodyUseAPI": [], "Fixed commit": "44da5898a0cd2ae32126a54dd79ebb598939a7cd", "Url": "https://api.github.com/repos/cytoscape/cytoscape-impl", "Date": "2015-06-26T18:11:35Z"},
{"Line": "=>383", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(list.contains(cd))) list.add(cd);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/8289/buggy-version/src.wordfind.MainMenu.java", "BodyUseAPI": ["java.util.List<wordfind.Coordinates>.add(wordfind.Coordinates)"], "Fixed commit": "6e9576da4af8e05f36961a013a4c6f2fb15dc93c", "Url": "https://api.github.com/repos/andytuwm/wordfind", "Date": "2015-01-19T01:20:20Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (playerIdentifier == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/7692/buggy-version/Pong.src.pong.playground.PlaygroundPresenter.java", "BodyUseAPI": [], "Fixed commit": "ea2fe486a75de8f7f99f7fb5faf5d2c47e45b9ae", "Url": "https://api.github.com/repos/slartidan/pong", "Date": "2015-05-08T08:35:00Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((i == 0) || sameAsMinVal) { newSegIdx = i; }else { newSegIdx = i - 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/528/buggy-version/src.main.java.org.apache.lucene.util.packed.PackedIntsDocIdSetIterator.java", "BodyUseAPI": [], "Fixed commit": "5563ec1c9ede7c560c222a21abe6f79354fee231", "Url": "https://api.github.com/repos/javasoze/abacus", "Date": "2014-01-12T18:47:01Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (hcp != null) { hcp.updatePlayer(player); }else { sender.sendMessage(((org.bukkit.ChatColor.RED) + \"You must be in the hardcore world to use this command\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/371/buggy-version/src.au.com.addstar.truehardcore.CommandTH.java", "BodyUseAPI": ["au.com.addstar.truehardcore.HardcorePlayers.HardcorePlayer.updatePlayer(org.bukkit.entity.Player)"], "Fixed commit": "b043916064da071d831b8070ca03f90c9a5e53f0", "Url": "https://api.github.com/repos/addstar/TrueHardcore", "Date": "2013-09-15T15:08:02Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (hcp != null) { org.bukkit.entity.Player player = ((org.bukkit.entity.Player) (plugin.getServer().getPlayer(args[2]))); if (player != null) { if (plugin.IsHardcoreWorld(player.getWorld())) { if ((args[1]) == (player.getWorld().getName())) { hcp.updatePlayer(player); } } } }else { sender.sendMessage(((org.bukkit.ChatColor.RED) + \"Error: Unknown player!\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/371/buggy-version/src.au.com.addstar.truehardcore.CommandTH.java", "BodyUseAPI": ["au.com.addstar.truehardcore.HardcorePlayers.HardcorePlayer.updatePlayer(org.bukkit.entity.Player)"], "Fixed commit": "b043916064da071d831b8070ca03f90c9a5e53f0", "Url": "https://api.github.com/repos/addstar/TrueHardcore", "Date": "2013-09-15T15:08:02Z"},
{"Line": "=>1155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.harnk.whereru.DeviceSingleton.getMyNewLocation()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((locA == null) || (locB == null)) { distanceFromMeInMeters = ((float) (0.0)); distanceInYards = ((float) (0.0)); distanceInMiles = ((float) (0.0)); }else { distanceFromMeInMeters = locA.distanceTo(locB); distanceInYards = ((float) (distanceFromMeInMeters * 1.09361)); distanceInMiles = distanceInYards / 1760; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/2394/buggy-version/app.src.main.java.com.harnk.whereru.ShowMapActivity.java", "BodyUseAPI": ["android.location.Location.distanceTo(android.location.Location)"], "Fixed commit": "03b0cf1151cfdfa19d5ca584ec9c5557d4a6b440", "Url": "https://api.github.com/repos/harnk/android-whereru", "Date": "2016-04-25T02:28:23Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Queue<java.lang.Object>.poll()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (null == poll) { if (org.wso2.extension.siddhi.execution.priority.PriorityStreamProcessor.log.isDebugEnabled()) { org.wso2.extension.siddhi.execution.priority.PriorityStreamProcessor.log.debug(\"The Queue is empty. There are no events to remove.\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/7319/buggy-version/component.src.main.java.org.wso2.extension.siddhi.execution.priority.PriorityStreamProcessor.java", "BodyUseAPI": [], "Fixed commit": "6bf1f744b0b8d28a7d23141be9b115b38fd9c07f", "Url": "https://api.github.com/repos/wso2-extensions/siddhi-execution-priority", "Date": "2017-08-30T11:26:46Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Object, org.wso2.extension.siddhi.execution.priority.PriorityStreamProcessor.EventHolder>.get(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (eventHolder.isExpired()) { this.eventHolderMap.remove(key); }else { boolean isAdded = this.keyBuffer.offer(key); if (!isAdded) { org.wso2.extension.siddhi.execution.priority.PriorityStreamProcessor.log.error((((\"Task of adding '\" + key) + \"' to the\") + \"queue couldn't be complete.\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/7319/buggy-version/component.src.main.java.org.wso2.extension.siddhi.execution.priority.PriorityStreamProcessor.java", "BodyUseAPI": [], "Fixed commit": "6bf1f744b0b8d28a7d23141be9b115b38fd9c07f", "Url": "https://api.github.com/repos/wso2-extensions/siddhi-execution-priority", "Date": "2017-08-30T11:26:46Z"},
{"Line": "=>304", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(eventHolder.isExpired())) { this.eventHolderMap.put(key, eventHolder); boolean isAdded = this.keyBuffer.offer(key); if (!isAdded) { org.wso2.extension.siddhi.execution.priority.PriorityStreamProcessor.log.error((((\"Task of adding '\" + key) + \"' to the\") + \"queue couldn't be complete.\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/7319/buggy-version/component.src.main.java.org.wso2.extension.siddhi.execution.priority.PriorityStreamProcessor.java", "BodyUseAPI": ["java.util.Map<java.lang.Object, org.wso2.extension.siddhi.execution.priority.PriorityStreamProcessor.EventHolder>.put(java.lang.Object,org.wso2.extension.siddhi.execution.priority.PriorityStreamProcessor.EventHolder)"], "Fixed commit": "6bf1f744b0b8d28a7d23141be9b115b38fd9c07f", "Url": "https://api.github.com/repos/wso2-extensions/siddhi-execution-priority", "Date": "2017-08-30T11:26:46Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.egov.services.zuulproxy.listeners.ZuulProxyStartServerListener.logger.isInfoEnabled()) org.egov.services.zuulproxy.listeners.ZuulProxyStartServerListener.logger.info(\"Stopping Zuul Proxy server\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/2575/buggy-version/egov.egov-services.src.main.java.org.egov.services.zuulproxy.listeners.ZuulProxyStartServerListener.java", "BodyUseAPI": ["org.slf4j.Logger.info(java.lang.String)"], "Fixed commit": "d41df8e10cb612c3771f48cda0e00b6693af2ffe", "Url": "https://api.github.com/repos/egovernments/egov-smartcity-suite", "Date": "2017-03-22T12:15:12Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.egov.services.zuulproxy.listeners.ZuulProxyStartServerListener.logger.isInfoEnabled()) org.egov.services.zuulproxy.listeners.ZuulProxyStartServerListener.logger.info(\"Starting Zuul Proxy server\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/2575/buggy-version/egov.egov-services.src.main.java.org.egov.services.zuulproxy.listeners.ZuulProxyStartServerListener.java", "BodyUseAPI": ["org.slf4j.Logger.info(java.lang.String)"], "Fixed commit": "d41df8e10cb612c3771f48cda0e00b6693af2ffe", "Url": "https://api.github.com/repos/egovernments/egov-smartcity-suite", "Date": "2017-03-22T12:15:12Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isBlank(species)) { throw new java.lang.IllegalArgumentException(\"Species parameter cannot be empty when building a CellBaseClient\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/6761/buggy-version/cellbase-client.src.main.java.org.opencb.cellbase.client.rest.CellBaseClient.java", "BodyUseAPI": [], "Fixed commit": "9521d360f088d4ada4cf5444673b78972187bae9", "Url": "https://api.github.com/repos/opencb/cellbase", "Date": "2017-01-31T16:41:05Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((((clientConfiguration != null) && ((clientConfiguration.getRest()) != null)) && ((clientConfiguration.getRest().getHosts()) != null)) && (!(clientConfiguration.getRest().getHosts().isEmpty()))) && (org.apache.commons.lang3.StringUtils.isNotBlank(clientConfiguration.getVersion()))) { this.clientConfiguration = clientConfiguration; }else { throw new java.lang.IllegalArgumentException((\"version and host must be provided in a ClienConfiguration object\" + \" when building a CellBase client and cannot be empty\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/6761/buggy-version/cellbase-client.src.main.java.org.opencb.cellbase.client.rest.CellBaseClient.java", "BodyUseAPI": [], "Fixed commit": "9521d360f088d4ada4cf5444673b78972187bae9", "Url": "https://api.github.com/repos/opencb/cellbase", "Date": "2017-01-31T16:41:05Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((questions.size()) == 0) && ((difficultTranslations.size()) == 0)) { throw new uk.ignas.langlearn.core.LiveDictionaryException(\"There are no more difficult words\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/1777/buggy-version/LangLearn.src.main.java.uk.ignas.langlearn.core.Dictionary.java", "BodyUseAPI": [], "Fixed commit": "d38e56b169d811efe0759c77d334dfd593ba7104", "Url": "https://api.github.com/repos/backend-developer/live_dictionary", "Date": "2016-01-04T15:50:30Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (resultCode != (android.app.Activity.RESULT_OK)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/6802/buggy-version/GodOfMemo.src.com.nexters.godofmemo.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "205fe1c04390635cf6955d4c79d3a83cb32c6b7e", "Url": "https://api.github.com/repos/NextersAppFactory/GodOfMemo", "Date": "2014-01-29T19:16:46Z"},
{"Line": "=>309", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sqlState == null) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/3033/buggy-version/src.main.java.org.sqsh.SQLTools.java", "BodyUseAPI": [], "Fixed commit": "697e45c15d2ae20e9d60a98eb0aac6ad16ff9567", "Url": "https://api.github.com/repos/jozefhovan/jsqsh", "Date": "2015-01-07T08:17:11Z"},
{"Line": "=>4190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (elementCount > 0) { tree = new TreeMap<java.lang.Long, BTreeElement<java.lang.Long, net.spy.memcached.T>>((reverse ? java.util.Collections.reverseOrder() : null)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/5793/buggy-version/src.main.java.net.spy.memcached.ArcusClient.java", "BodyUseAPI": [], "Fixed commit": "3ca0791fcce82bb8062f4d522b4c360284b9d1cd", "Url": "https://api.github.com/repos/naver/arcus-java-client", "Date": "2017-01-12T06:40:30Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(engine.isInit())) { engine.init(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/178/buggy-version/src.nz.co.withfire.omicronengine.omicron.graphics.renderer.OmicronRenderer.java", "BodyUseAPI": ["nz.co.withfire.omicronengine.omicron.logic.engine.Engine.init()"], "Fixed commit": "d0bf6d63827e14e9896b53b5dd7641294b74da43", "Url": "https://api.github.com/repos/DavidSaxon/Omicron-Base-Android", "Date": "2013-11-13T01:23:05Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((beanList) == null) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/6956/buggy-version/src.main.java.com.secondstack.swing.combobox.BeanComboBoxModel.java", "BodyUseAPI": [], "Fixed commit": "4fa5c6604ec4c511db957ec02cc438874ffcee6b", "Url": "https://api.github.com/repos/2ndStack/2ndPrambananSwing", "Date": "2011-09-29T18:18:07Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Engine.instance.cartridge.zones) != null) { java.util.Vector<cz.matejcik.openwig.Zone> zones = Engine.instance.cartridge.zones; for (int i = 0; i < (zones.size()); i++) { cz.matejcik.openwig.Zone z = ((cz.matejcik.openwig.Zone) (zones.get(i))); if (z.isVisible()) { drawZone(z, canvas, projection); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/2052/buggy-version/android-whereyougo.src.org.yaawp.maps.services.OverlayZones.java", "BodyUseAPI": [], "Fixed commit": "6634b9d942e331d4ce35c8f7125e44ff74898861", "Url": "https://api.github.com/repos/CachingFoX/YAAWP", "Date": "2013-12-05T23:40:29Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.action) == (event.action.LEFT_CLICK_BLOCK)) { if (((event.entityPlayer.getCurrentEquippedItem()) != null) && ((event.entityPlayer.getCurrentEquippedItem().getItem()) == (net.minecraft.item.Item.getItemFromBlock(Blocks.ender_chest)))) { event.entityPlayer.displayGUIChest(event.entityPlayer.getInventoryEnderChest()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/7959/buggy-version/src.main.java.com.lothrazar.samspowerups.modules.EnderChestModule.java", "BodyUseAPI": ["event.entityPlayer.getCurrentEquippedItem()", "event.entityPlayer.getInventoryEnderChest()", "event.entityPlayer.getCurrentEquippedItem()", "event.entityPlayer.getCurrentEquippedItem().getItem()", "event.entityPlayer.displayGUIChest(event.entityPlayer.getInventoryEnderChest())"], "Fixed commit": "1c216ee2ed8389c8507f8ae9c0d6443680ac562c", "Url": "https://api.github.com/repos/PrinceOfAmber/SamsPowerups", "Date": "2014-11-14T23:38:56Z"},
{"Line": "=>276", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((every) != (java.lang.Integer.parseInt(x[1]))) { execs = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/2115/buggy-version/src.SimX.java", "BodyUseAPI": [], "Fixed commit": "0975f46e26064617dcf71aafa02af843927b859f", "Url": "https://api.github.com/repos/yusiangpotato/Potato3", "Date": "2014-10-13T10:01:28Z"},
{"Line": "=>669", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((minorTick) <= 0) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/9091/buggy-version/src.figtree.treeviewer.ScaleAxis.java", "BodyUseAPI": [], "Fixed commit": "3643ebd5c0f4731e1d30df0fb97c2eda427a096f", "Url": "https://api.github.com/repos/rambaut/figtree", "Date": "2015-07-11T09:50:44Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dp.getDay().getStart()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((room.getStart()) > dayStart) { add(new gui.main.RoomSubpanel.EmptyBlock(((room.getStart()) - dayStart))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/9166/buggy-version/IFC_Source_Code.src.gui.main.RoomSubpanel.java", "BodyUseAPI": ["gui.main.RoomSubpanel.add(gui.main.RoomSubpanel.EmptyBlock)", "backend.DataTransferObjects.SchedulePractitionerDto.getStart()"], "Fixed commit": "fab35c97833f1818501134f4175de5a7cb54cc67", "Url": "https://api.github.com/repos/luyuzheng/IFC-Scheduler", "Date": "2012-11-29T07:09:00Z"},
{"Line": "=>363", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["util.Input.getString()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (selected == null) { inputErrorCount++; continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/5843/buggy-version/src.action.Menu.java", "BodyUseAPI": [], "Fixed commit": "33057567e617097d5e1cdee576b42d598b49a3d0", "Url": "https://api.github.com/repos/nkomachi/Ex", "Date": "2015-09-24T02:09:19Z"},
{"Line": "=>369", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (inputErrorCount > 5) { java.lang.System.out.println(); toExecute = base.Main.EXIT; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/5843/buggy-version/src.action.Menu.java", "BodyUseAPI": [], "Fixed commit": "33057567e617097d5e1cdee576b42d598b49a3d0", "Url": "https://api.github.com/repos/nkomachi/Ex", "Date": "2015-09-24T02:09:19Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((meta == 0) | (meta == 1)) meta = 3;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/5451/buggy-version/generic.ch.modjam.generic.BlockGenericDualStateDirected.java", "BodyUseAPI": [], "Fixed commit": "63add30da310ea6837ae3e699e631f8af4926b23", "Url": "https://api.github.com/repos/ksmonkey123/ModJam", "Date": "2014-06-16T16:50:05Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (inEntry) { if (tagname.equalsIgnoreCase(\"entry\")) { applications.add(currentRecord); inEntry = false; } if (tagname.equalsIgnoreCase(\"name\")) { currentRecord.setName(textValue); }else if (tagname.equalsIgnoreCase(\"artist\")) { currentRecord.setArtist(textValue); }else if (tagname.equalsIgnoreCase(\"releaseDate\")) { currentRecord.setReleaseDate(textValue); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/3935/buggy-version/src.org.example.top10downloader.ParseApplications.java", "BodyUseAPI": [], "Fixed commit": "6e53a77dade09e322ebb2ee03f8cd3abcbf7fffd", "Url": "https://api.github.com/repos/TenSoja/Top10Downloader", "Date": "2015-03-28T21:49:05Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (message == null) { message = \"null\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/8844/buggy-version/app.src.main.java.net.nsreverse.mundle.data.ServerConfiguration.java", "BodyUseAPI": [], "Fixed commit": "754f79529ec642a154ae00c00b7bf8a0e0f85239", "Url": "https://api.github.com/repos/NSReverse/Mundle", "Date": "2017-07-21T11:36:06Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (title == null) { title = \"null\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/8844/buggy-version/app.src.main.java.net.nsreverse.mundle.data.ServerConfiguration.java", "BodyUseAPI": [], "Fixed commit": "754f79529ec642a154ae00c00b7bf8a0e0f85239", "Url": "https://api.github.com/repos/NSReverse/Mundle", "Date": "2017-07-21T11:36:06Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (username == null) { username = \"null\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/8844/buggy-version/app.src.main.java.net.nsreverse.mundle.data.ServerConfiguration.java", "BodyUseAPI": [], "Fixed commit": "754f79529ec642a154ae00c00b7bf8a0e0f85239", "Url": "https://api.github.com/repos/NSReverse/Mundle", "Date": "2017-07-21T11:36:06Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (packet != null) { packet.release(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/6672/buggy-version/core.client.src.main.java.alluxio.client.block.stream.PacketInStream.java", "BodyUseAPI": ["io.netty.buffer.ByteBuf.release()"], "Fixed commit": "d415b5c94fc8dc4b73a4f1407690333f8a1315e9", "Url": "https://api.github.com/repos/peisun1115/alluxio", "Date": "2016-12-22T23:27:58Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((classExpressions.size()) == 1) { return java.util.Optional.of(new org.mm.rendering.owlapi.OWLClassExpressionRendering(classExpressions.iterator().next())); }else if ((classExpressions.size()) > 1) { org.semanticweb.owlapi.model.OWLObjectIntersectionOf restriction = handler.getOWLObjectIntersectionOf(classExpressions); org.mm.rendering.owlapi.OWLClassExpressionRendering classExpressionRendering = new org.mm.rendering.owlapi.OWLClassExpressionRendering(restriction); return java.util.Optional.of(classExpressionRendering); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/4914/buggy-version/src.main.java.org.mm.renderer.owlapi.OWLAPIClassExpressionRenderer.java", "BodyUseAPI": ["classExpressions.iterator().next()", "org.mm.renderer.owlapi.OWLAPIObjectHandler.getOWLObjectIntersectionOf(java.util.Set<org.semanticweb.owlapi.model.OWLClassExpression>)", "java.util.Optional.of(org.mm.rendering.owlapi.OWLClassExpressionRendering)", "java.util.Set<org.semanticweb.owlapi.model.OWLClassExpression>.size()", "java.util.Set<org.semanticweb.owlapi.model.OWLClassExpression>.iterator()"], "Fixed commit": "73f28d5b827ae46215ac3bdeb1e13ffc69c1f76c", "Url": "https://api.github.com/repos/protegeproject/mapping-master", "Date": "2015-08-13T16:46:17Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fromHierarchyLevel > 0) { this.fromHierarchyLevel = fromHierarchyLevel; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/7724/buggy-version/src.main.java.com.celements.navigation.Navigation.java", "BodyUseAPI": [], "Fixed commit": "c78ba1e4c7b3acec9a1b74c3b84d4ba6e1217f9f", "Url": "https://api.github.com/repos/celements/celements-core", "Date": "2013-01-04T10:00:31Z"},
{"Line": "=>810", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"\".equals(input)) initialInput = \"______\"; else initialInput = input;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/6814/buggy-version/TuringMachine.src.model.Interpreter.java", "BodyUseAPI": [], "Fixed commit": "f3d65530d259dd44e9c75487a3464efed7c2f74f", "Url": "https://api.github.com/repos/TurMacWT2017/Development", "Date": "2017-04-09T23:47:38Z"},
{"Line": "=>816", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"\".equals(input)) initialInput2 = \"______\"; else initialInput2 = input;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/6814/buggy-version/TuringMachine.src.model.Interpreter.java", "BodyUseAPI": [], "Fixed commit": "f3d65530d259dd44e9c75487a3464efed7c2f74f", "Url": "https://api.github.com/repos/TurMacWT2017/Development", "Date": "2017-04-09T23:47:38Z"},
{"Line": "=>822", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"\".equals(input)) initialInput3 = \"______\"; else initialInput3 = input;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/6814/buggy-version/TuringMachine.src.model.Interpreter.java", "BodyUseAPI": [], "Fixed commit": "f3d65530d259dd44e9c75487a3464efed7c2f74f", "Url": "https://api.github.com/repos/TurMacWT2017/Development", "Date": "2017-04-09T23:47:38Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((service) != null) { ((android.widget.TextView) (findViewById(R.id.text_current_amount))).setText((((service.getSavingAccount().getBalance()) / 100) + \"\u20ac\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/1881/buggy-version/android.src.com.pf12hack.UserActivity.java", "BodyUseAPI": [], "Fixed commit": "fa9cac7bcea284afe30084b466ec3aa020e5f4a2", "Url": "https://api.github.com/repos/3x14159265/pf12hack", "Date": "2012-10-27T22:35:59Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Properties.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (raw == null) throw new java.util.NoSuchElementException((\"Could not find object at \" + path));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/8035/buggy-version/src.com.redstoner.remote_console.utils.ConfigHandler.java", "BodyUseAPI": [], "Fixed commit": "d997748122fb42d5fb9592f4b3d2d06597e080c8", "Url": "https://api.github.com/repos/Pepich/Remote-Console", "Date": "2016-11-18T17:37:37Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Properties.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!(raw.startsWith(\"\\\"\"))) || (!(raw.endsWith(\"\\\"\")))) throw new java.io.InvalidObjectException(((\"The value found at \" + path) + \"could not be deserailized into a String.\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/8035/buggy-version/src.com.redstoner.remote_console.utils.ConfigHandler.java", "BodyUseAPI": [], "Fixed commit": "d997748122fb42d5fb9592f4b3d2d06597e080c8", "Url": "https://api.github.com/repos/Pepich/Remote-Console", "Date": "2016-11-18T17:37:37Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (updateEnumValues) { for (java.lang.String field : gae.getKeys().getFieldDescriptor().getFields().getFields()) { if (DimensionsDescriptor.RESERVED_DIMENSION_NAMES.contains(field)) { continue; } @java.lang.SuppressWarnings(\"rawtypes\") java.lang.Comparable fieldValue = ((java.lang.Comparable) (gae.getKeys().getField(field))); seenEnumValues.get(field).add(fieldValue); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/8357/buggy-version/contrib.src.main.java.com.datatorrent.contrib.dimensions.AppDataSingleSchemaDimensionStoreHDHT.java", "BodyUseAPI": [], "Fixed commit": "461e39dabeb80d0fa4753694ae342bb069317d3b", "Url": "https://api.github.com/repos/apache/apex-malhar", "Date": "2015-05-08T07:07:39Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (properties.containsKey(p.getName())) { return properties.get(p.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/8436/buggy-version/src.main.java.org.saiku.query.metadata.CalculatedMeasure.java", "BodyUseAPI": ["org.olap4j.metadata.Property.getName()", "java.util.Map<java.lang.String, java.lang.String>.get(p.getName())"], "Fixed commit": "d8680518412142b74bb7a2351575e414bccef73a", "Url": "https://api.github.com/repos/pstoellberger/saiku-query", "Date": "2015-02-13T16:02:27Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (properties.containsKey(p.getName())) { return properties.get(p.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/8436/buggy-version/src.main.java.org.saiku.query.metadata.CalculatedMember.java", "BodyUseAPI": ["org.olap4j.metadata.Property.getName()", "java.util.Map<java.lang.String, java.lang.String>.get(p.getName())"], "Fixed commit": "d8680518412142b74bb7a2351575e414bccef73a", "Url": "https://api.github.com/repos/pstoellberger/saiku-query", "Date": "2015-02-13T16:02:27Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["bakatxt.core.BakaParser.getFormattedDate(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((formatted == null) || (formatted.equals(\"null\"))) { return _date; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/5717/buggy-version/src.bakatxt.core.Task.java", "BodyUseAPI": [], "Fixed commit": "b68509c6c6dfa0fea7cb4bb40e579b86db482299", "Url": "https://api.github.com/repos/cs2103aug2014-t09-4j/main", "Date": "2014-11-08T01:50:18Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mItem) == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/5722/buggy-version/src.info.bottiger.podcast.provider.BitmapProvider.java", "BodyUseAPI": [], "Fixed commit": "fa97f37643963f45e69746d7a7bd380489e978ad", "Url": "https://api.github.com/repos/bottiger/SoundWaves", "Date": "2013-01-17T14:38:39Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang.StringUtils.isNotEmpty(defaultValue)) { variablesBuilder.append(Constants.CHAR_NEW_LINE).append(Constants.CHAR_TAB).append(de.papke.cloud.portal.service.TerraformService.VARIABLE_DEFAULT).append(Constants.CHAR_WHITESPACE).append(Constants.CHAR_EQUAL).append(Constants.CHAR_WHITESPACE).append(Constants.CHAR_DOUBLE_QUOTE).append(defaultValue).append(Constants.CHAR_DOUBLE_QUOTE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/5299/buggy-version/src.main.java.de.papke.cloud.portal.service.TerraformService.java", "BodyUseAPI": ["variablesBuilder.append(Constants.CHAR_NEW_LINE).append(Constants.CHAR_TAB).append(de.papke.cloud.portal.service.TerraformService.VARIABLE_DEFAULT).append(Constants.CHAR_WHITESPACE).append(Constants.CHAR_EQUAL).append(Constants.CHAR_WHITESPACE).append(Constants.CHAR_DOUBLE_QUOTE).append(defaultValue).append(Constants.CHAR_DOUBLE_QUOTE)", "variablesBuilder.append(Constants.CHAR_NEW_LINE).append(Constants.CHAR_TAB).append(de.papke.cloud.portal.service.TerraformService.VARIABLE_DEFAULT).append(Constants.CHAR_WHITESPACE).append(Constants.CHAR_EQUAL).append(Constants.CHAR_WHITESPACE).append(Constants.CHAR_DOUBLE_QUOTE).append(java.lang.String)"], "Fixed commit": "30cd54febb82f4f55f92a54c41688e7863023c43", "Url": "https://api.github.com/repos/chrisipa/cloud-portal", "Date": "2017-12-19T09:48:51Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((item.getItemType().value.equals(ItemType.DEADLINE_WORD)) || (item.getItemType().value.equals(ItemType.EVENT_WORD))) { try { endFromNowDate = df.parse(endDateString); org.ocpsoft.prettytime.PrettyTime p = new org.ocpsoft.prettytime.PrettyTime(); endFromNowText = p.format(endFromNowDate); if (currentDate.before(endFromNowDate)) { endFromNow.setText((\"Ends \" + endFromNowText)); }else { endFromNow.setText((\"Ended \" + endFromNowText)); } } catch (java.text.ParseException e) { endFromNow.setText(endFromNowText); e.printStackTrace(); } }else { endFromNow.setText(endFromNowText); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/24/buggy-version/src.main.java.seedu.taskmanager.ui.ItemCard.java", "BodyUseAPI": [], "Fixed commit": "5e4970c77b16ee920a4b4e9411f440337a4b705e", "Url": "https://api.github.com/repos/CS2103AUG2016-T14-C3/main", "Date": "2016-10-13T03:42:27Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (minRadius <= 0) { map.setDijkstraSearched(cX, cY); if (map.fitsSearchType(cX, cY, type, requester)) { jsettlers.algorithms.path.Path path = findPathTo(requester, cX, cY); if (path != null) return path; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/3214/buggy-version/jsettlers.logic.src.jsettlers.algorithms.path.dijkstra.DijkstraAlgorithm.java", "BodyUseAPI": [], "Fixed commit": "7f56d652d83d2f8f3bc91c1014a77dd65a891b9e", "Url": "https://api.github.com/repos/adamjryan/settlers-remake", "Date": "2015-05-02T11:17:44Z"},
{"Line": "=>331", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mHidden) == hidden) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/135/buggy-version/ohmage.src.main.java.org.ohmage.app.SurveyActivity.java", "BodyUseAPI": [], "Fixed commit": "dc1e69a4dd601bddb316097bef5d5b4e49931d7d", "Url": "https://api.github.com/repos/ohmage/android", "Date": "2014-03-17T17:31:09Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (valid) { changePlayer(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/1819/buggy-version/src.tp.pr3.control.Controller.java", "BodyUseAPI": [], "Fixed commit": "43ae9f11cc6a4355ea31025808078e64d6f241d8", "Url": "https://api.github.com/repos/jogarc10/Gravity", "Date": "2015-02-27T00:24:24Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.example.myequilator.MainActivity.RUN_ONCE) { com.example.myequilator.AllCards.initializeData(); com.example.myequilator.MainActivity.RUN_ONCE = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/4628/buggy-version/app.src.main.java.com.example.myequilator.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "769bd1c37a0245ce4c65e04d67ce1e0da9455984", "Url": "https://api.github.com/repos/Vilagra/Equilator", "Date": "2017-03-20T15:51:43Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.common.collect.Lists.newArrayList()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((resultValues.size()) > 0) { noticeJobs.add(new com.behase.relumin.model.NoticeJob(item, resultValues)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/3526/buggy-version/src.main.java.com.behase.relumin.scheduler.NodeScheduler.java", "BodyUseAPI": ["java.util.List<com.behase.relumin.model.NoticeJob>.add(com.behase.relumin.model.NoticeJob)"], "Fixed commit": "64eb37ab85fd18dacc854dfa565748544325274c", "Url": "https://api.github.com/repos/be-hase/relumin", "Date": "2015-06-12T11:33:36Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (m != null) { java.util.StringTokenizer st = new java.util.StringTokenizer(m.toString(), \"_\"); while (st.hasMoreTokens()) { if (out != null) { out = out + \" \"; out = out + (com.nohupgaming.minecraft.util.PhilosophersUtil.initCap(st.nextToken())); }else { out = com.nohupgaming.minecraft.util.PhilosophersUtil.initCap(st.nextToken()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/3642/buggy-version/src.main.java.com.nohupgaming.minecraft.util.PhilosophersUtil.java", "BodyUseAPI": ["org.bukkit.Material.toString()"], "Fixed commit": "7c229262f9762a46c1dbbf0b4a8bf2ec8073ad16", "Url": "https://api.github.com/repos/tkekd538/Philosopher-s-Box", "Date": "2011-03-09T05:12:11Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (text == null) { s.setLine(2, \"\"); s.setLine(3, \"\"); }else if ((text.length()) > 15) { s.setLine(2, text.substring(0, 14)); s.setLine(3, text.substring(14)); }else { s.setLine(2, \"\"); s.setLine(3, text); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/3642/buggy-version/src.main.java.com.nohupgaming.minecraft.listener.player.PhilosophersBoxPlayerListener.java", "BodyUseAPI": ["org.bukkit.block.Sign.setLine(int,java.lang.String)", "java.lang.String.substring(int)", "org.bukkit.block.Sign.setLine(int,java.lang.String)", "java.lang.String.length()", "org.bukkit.block.Sign.setLine(int,java.lang.String)", "java.lang.String.substring(int,int)"], "Fixed commit": "7c229262f9762a46c1dbbf0b4a8bf2ec8073ad16", "Url": "https://api.github.com/repos/tkekd538/Philosopher-s-Box", "Date": "2011-03-09T05:12:11Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (moneyToPay > 0) debtors.add(new java.lang.String[]{ name, de.daschubbm.alkchievements.NumberFormatter.formatPrice(moneyToPay) });", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/3940/buggy-version/app.src.main.java.de.daschubbm.alkchievements.BillAlktivity.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String[]>.add(java.lang.String[])", "de.daschubbm.alkchievements.NumberFormatter.formatPrice(float)"], "Fixed commit": "b68ba51fbd11e4ba1b5a2d5499987d5f2faaefd3", "Url": "https://api.github.com/repos/mtronicsDev/Alkchievements", "Date": "2016-10-28T18:07:51Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((priceSeries.length) < (maPeriod)) { throw new com.osprey.math.exception.InsufficientHistoryException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/7057/buggy-version/math.src.main.java.com.osprey.math.result.BollingerBandTimeSeries.java", "BodyUseAPI": [], "Fixed commit": "f604b6c7c7a8455353ccba1b96414e3a7e9cd730", "Url": "https://api.github.com/repos/olschofkah/osprey-jcore", "Date": "2016-10-04T03:31:01Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(answers.contains(answer))) { answers.add(answer); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/5039/buggy-version/DataTagsLib.src.edu.harvard.iq.datatags.model.graphs.nodes.AskNode.java", "BodyUseAPI": ["java.util.List<edu.harvard.iq.datatags.model.graphs.Answer>.add(edu.harvard.iq.datatags.model.graphs.Answer)"], "Fixed commit": "27f7ad49c61683f0a9cb972b81bb88aaf1363ab7", "Url": "https://api.github.com/repos/eyalben/DataTaggingLibrary", "Date": "2015-12-30T10:47:03Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((speechRecognizer) != null) { speechRecognizer.cancel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/3579/buggy-version/ailib.src.main.java.ai.api.services.GoogleRecognitionServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "c4f68200fa5368a24ef6139878914461a4421623", "Url": "https://api.github.com/repos/dialogflow/dialogflow-android-client", "Date": "2015-03-19T19:34:51Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (performQuery) { try { breathCycles = edu.stanford.rsl.jpop.utils.UserUtil.queryDouble(\"Number of Breathing Cycles in Scene (acquistion time * breathing rate):\", 1.0); } catch (java.lang.Exception e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/5005/buggy-version/src.edu.stanford.rsl.conrad.phantom.xcat.BreathingScene.java", "BodyUseAPI": [], "Fixed commit": "3cd82a6217c8c1ccbe8d40a33d42fb1f4643d862", "Url": "https://api.github.com/repos/jenniferMaier/CONRAD", "Date": "2016-05-31T07:19:56Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((protocolsupportpocketstuff.ProtocolSupportPocketStuff.platform) == (protocolsupport.api.ServerPlatformIdentifier.SPIGOT)) { if (getConfig().getBoolean(\"hacks.teams\")) { con.addPacketListener(new protocolsupportpocketstuff.hacks.teams.TeamsPacketListener(this, e.getConnection())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/2927/buggy-version/src.protocolsupportpocketstuff.ProtocolSupportPocketStuff.java", "BodyUseAPI": [], "Fixed commit": "e3082b6a449047faf7dd912be78ac6d5a9cc713e", "Url": "https://api.github.com/repos/ProtocolSupport/ProtocolSupportPocketStuff", "Date": "2017-10-31T15:23:30Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((propertyBuf.lastIndexOf(\".\")) > (-1)) { propertyBuf.deleteCharAt(propertyBuf.lastIndexOf(\".\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/1673/buggy-version/api-core-rest.src.main.java.gov.ca.cwds.rest.exception.IssueDetailsCreator.java", "BodyUseAPI": ["java.lang.StringBuilder.deleteCharAt(int)", "java.lang.StringBuilder.lastIndexOf(java.lang.String)"], "Fixed commit": "380c486a5a733713983b79e7e988c30f2d71dba6", "Url": "https://api.github.com/repos/ca-cwds/api-core", "Date": "2017-12-20T05:25:23Z"},
{"Line": "=>659", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (strict) iterator2 = otherRef.foreachIterator(false, false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/8020/buggy-version/src.ru.regenix.jphp.runtime.memory.ArrayMemory.java", "BodyUseAPI": [], "Fixed commit": "2fbfd94d68c20dcd3d8cf9c188027cfdea0e6b5e", "Url": "https://api.github.com/repos/dim-s/jvm-php", "Date": "2014-01-09T09:26:41Z"},
{"Line": "=>669", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (iterator2 == null) value2 = otherRef.get(key); else { if (!(iterator2.next())) return -2; java.lang.Object key2 = iterator2.getKey(); if (!(iterator.getKey().equals(key2))) return -2; value2 = iterator2.getValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/8020/buggy-version/src.ru.regenix.jphp.runtime.memory.ArrayMemory.java", "BodyUseAPI": ["ru.regenix.jphp.runtime.lang.ForeachIterator.next()", "ru.regenix.jphp.runtime.lang.ForeachIterator.getValue()", "ru.regenix.jphp.runtime.lang.ForeachIterator.getKey()"], "Fixed commit": "2fbfd94d68c20dcd3d8cf9c188027cfdea0e6b5e", "Url": "https://api.github.com/repos/dim-s/jvm-php", "Date": "2014-01-09T09:26:41Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["a.et_message.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (s.startsWith(\"/\")) { s = s.replaceFirst(\"/\", \"\"); if (s.startsWith(\"list\")) { client.requestUserList(); }else if (s.startsWith(\"tell \")) { s = s.replaceFirst(\"tell \", \"\"); java.lang.String[] data = s.split(\" \", 2); try { java.lang.String[] receiver = data[0].split(\",\"); client.sendTellMessage(receiver, data[1]); } catch (java.lang.ArrayIndexOutOfBoundsException e) { chatUpdate(\"Usage: /tell user1,user2 your message\\n\"); } }else { chatUpdate(((\"Unknown Command: \" + s) + \"\\n\")); } }else { client.sendChatMessage(s); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/8229/buggy-version/src.de.floriware.android.chatsimple.Worker.java", "BodyUseAPI": ["java.lang.String.replaceFirst(java.lang.String,java.lang.String)", "de.floriware.chatsimple.client.simplified.SimplifiedChatsimpleClient.sendChatMessage(java.lang.String)"], "Fixed commit": "603a4910d4bcc4aaa30a011a43c6e92e454bb021", "Url": "https://api.github.com/repos/iKoze/ChatSimpleClient-Android", "Date": "2013-07-14T20:52:14Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.eduworks.resolver.Context.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (o != null) o.getJenaModel().close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/3440/buggy-version/levr-base.src.java.com.eduworks.cruncher.ontology.CruncherOntology.java", "BodyUseAPI": ["com.eduworks.ontology.Ontology.getJenaModel()", "o.getJenaModel().close()"], "Fixed commit": "f5ba4a20ca6053e99d7706770ce6dd970320b810", "Url": "https://api.github.com/repos/Eduworks/levr-base", "Date": "2015-01-05T19:04:32Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mat[0][k]) != 0) { mat[2][k] = mat[0][k]; mat[0][k] = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/3566/buggy-version/Grid.java", "BodyUseAPI": [], "Fixed commit": "0206c8d29e09b88ffa4a420f17071e71e9bc2210", "Url": "https://api.github.com/repos/liorshahverdi/twenty48", "Date": "2014-07-09T22:02:18Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jetbrains.jet.plugin.formatter.JetBlock.getElementType()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (parentType == (WHEN_ENTRY)) { return myAlignmentStrategy; }else if ((org.jetbrains.jet.plugin.formatter.JetBlock.BINARY_EXPRESSIONS.contains(parentType)) && (org.jetbrains.jet.plugin.formatter.JetBlock.ALIGN_FOR_BINARY_OPERATIONS.contains(org.jetbrains.jet.plugin.formatter.JetBlock.getOperationType(getNode())))) { return org.jetbrains.jet.plugin.formatter.NodeAlignmentStrategy.fromTypes(com.intellij.formatting.alignment.AlignmentStrategy.wrap(org.jetbrains.jet.plugin.formatter.JetBlock.createAlignment(jetCommonSettings.ALIGN_MULTILINE_BINARY_OPERATION, getAlignment()))); }else if ((parentType == (DELEGATION_SPECIFIER_LIST)) || (parentType == (INITIALIZER_LIST))) { return org.jetbrains.jet.plugin.formatter.NodeAlignmentStrategy.fromTypes(com.intellij.formatting.alignment.AlignmentStrategy.wrap(org.jetbrains.jet.plugin.formatter.JetBlock.createAlignment(jetCommonSettings.ALIGN_MULTILINE_EXTENDS_LIST, getAlignment()))); }else if (parentType == (PARENTHESIZED)) { return new org.jetbrains.jet.plugin.formatter.NodeAlignmentStrategy() { org.jetbrains.jet.plugin.formatter.Alignment bracketsAlignment = (jetCommonSettings.ALIGN_MULTILINE_BINARY_OPERATION) ? org.jetbrains.jet.plugin.formatter.Alignment.createAlignment() : null; @org.jetbrains.annotations.Nullable @java.lang.Override public org.jetbrains.jet.plugin.formatter.Alignment getAlignment(@org.jetbrains.annotations.NotNull com.intellij.lang.ASTNode childNode) { com.intellij.psi.tree.IElementType childNodeType = childNode.getElementType(); com.intellij.lang.ASTNode prev = org.jetbrains.jet.plugin.formatter.JetBlock.getPrevWithoutWhitespace(childNode); if (((prev != null) && ((prev.getElementType()) == (com.intellij.psi.TokenType.ERROR_ELEMENT))) || (childNodeType == (com.intellij.psi.TokenType.ERROR_ELEMENT))) { return bracketsAlignment; } if ((childNodeType == (LPAR)) || (childNodeType == (RPAR))) { return bracketsAlignment; } return null; } }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/3413/buggy-version/idea.src.org.jetbrains.jet.plugin.formatter.JetBlock.java", "BodyUseAPI": ["com.intellij.psi.tree.TokenSet.contains(com.intellij.psi.tree.IElementType)"], "Fixed commit": "11b729ebf2fdf9c6fe0e13c22d0c5db811255f87", "Url": "https://api.github.com/repos/JetBrains/kotlin", "Date": "2014-05-14T14:37:40Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, I>.remove(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (existing != null) { observed.add(name); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/7108/buggy-version/src.main.java.com.cloudbees.hudson.plugins.folder.computed.ComputedFolder.java", "BodyUseAPI": [], "Fixed commit": "30f744250762bf9472cd269a0bef4a597203be01", "Url": "https://api.github.com/repos/jenkinsci/cloudbees-folder-plugin", "Date": "2016-03-15T01:47:25Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.ide.eclipse.gettingstarted.content.CodeSet.getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (\"default\".equals(csName)) { projectName = guide.getName(); }else { projectName = ((guide.getName()) + \"-\") + (codeset.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/3851/buggy-version/plugins.org.springframework.ide.eclipse.gettingstarted.src.org.springframework.ide.eclipse.gettingstarted.importing.ImportUtils.java", "BodyUseAPI": [], "Fixed commit": "60c6f8e1f568126aee2f1b3d959c120c77c7286c", "Url": "https://api.github.com/repos/SpringSource/spring-ide", "Date": "2013-06-10T20:39:00Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.sourceforge.fenixedu.domain.DegreeCurricularPlan.getExecutionDegreeByYear(net.sourceforge.fenixedu.domain.ExecutionYear)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (executionDegree != null) { for (net.sourceforge.fenixedu.domain.Coordinator coordinator : executionDegree.getCoordinatorsListSet()) { if ((coordinator.getPerson()) == (net.sourceforge.fenixedu.injectionCode.AccessControl.getPerson())) { returnExecutionIntervals.add(interval); break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/8006/buggy-version/src.main.java.net.sourceforge.fenixedu.presentationTier.Action.coordinator.candidacy.degreeChange.DegreeChangeCandidacyProcessDA.java", "BodyUseAPI": ["net.sourceforge.fenixedu.domain.ExecutionDegree.getCoordinatorsListSet()"], "Fixed commit": "a23281832a603581ecaa7d89eb82036f2b724113", "Url": "https://api.github.com/repos/andre-nunes/fenix", "Date": "2014-09-02T11:12:23Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["message.getPushBundle().getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (sExpandContent == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/9007/buggy-version/UrbanAirshipPlugin.src.com.adenda.plugin.urbanairship.UrbanAirshipLockscreenFragment.java", "BodyUseAPI": [], "Fixed commit": "c919d5c07e9beb37d9d9ea1cec71b6a6fa2fa6da", "Url": "https://api.github.com/repos/adenda/adenda-urbanairship", "Date": "2015-11-14T20:08:26Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["se.sics.mspsim.util.ELFSection.getPosition()", "se.sics.mspsim.util.ELFSection.readLEB128()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((sec.getPosition()) != (extPos + len)) { throw new java.lang.IllegalStateException((((\"*** ERROR posistion is not as exepected!!!!\" + (extPos + len)) + \" is \") + (sec.getPosition()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/593/buggy-version/se.sics.mspsim.debug.DwarfReader.java", "BodyUseAPI": ["se.sics.mspsim.util.ELFSection.getPosition()"], "Fixed commit": "46695715b633af458ba1b060cf2419c678cad3e5", "Url": "https://api.github.com/repos/ransford/mspsim", "Date": "2012-10-04T16:13:25Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["se.sics.mspsim.util.ELFSection.readLEB128()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (len == 3) { lineAddress = sec.readElf16(); }else if (len == 5) { lineAddress = sec.readElf32(); }else { throw new java.lang.IllegalStateException(((\"No support for \" + (len - 1)) + \" bytes addresses\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/593/buggy-version/se.sics.mspsim.debug.DwarfReader.java", "BodyUseAPI": [], "Fixed commit": "46695715b633af458ba1b060cf2419c678cad3e5", "Url": "https://api.github.com/repos/ransford/mspsim", "Date": "2012-10-04T16:13:25Z"},
{"Line": "=>340", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(preferences.getString(\"stream_preference\", \"0\"))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (DEFAULT_STREAM == 1) { if (DEFAULT_OPEN == 0) { android.content.Intent intent = new android.content.Intent(getContext(), com.workingagenda.democracydroid.MediaActivity.class); intent.putExtra(\"url\", e.getAudioUrl()); intent.putExtra(\"title\", actionTitle); startActivityForResult(intent, 0); }else { android.content.Intent intent = new android.content.Intent(android.content.Intent.ACTION_VIEW); intent.setDataAndType(android.net.Uri.parse(e.getAudioUrl()), \"*/*\"); startActivity(intent); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/7501/buggy-version/app.src.main.java.com.workingagenda.democracydroid.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "00db7f9ce397e05e723cde684c0c5b6c9f28a593", "Url": "https://api.github.com/repos/fenimore/DemocracyDroid", "Date": "2016-12-11T21:55:30Z"},
{"Line": "=>416", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.fs.exists(lateDataDir))) { return com.google.common.collect.Lists.newArrayList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/7485/buggy-version/gobblin-compaction.src.main.java.gobblin.compaction.mapreduce.MRCompactorJobRunner.java", "BodyUseAPI": [], "Fixed commit": "300b7c7f394b000569dfd9f7924d090f3c5389be", "Url": "https://api.github.com/repos/ydai1124/gobblin-1", "Date": "2015-10-08T18:11:49Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((aTimeout == null) || (aTimeout < 0)) { result = pEvent.waitEvent((-1)); }else { result = pEvent.waitEvent(aTimeout); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/3503/buggy-version/java.org.cohorte.herald.eventapi.src.main.java.org.cohorte.herald.eventapi.EventData.java", "BodyUseAPI": ["org.cohorte.herald.eventapi.IEvent.waitEvent(java.lang.Long)"], "Fixed commit": "d4ebede494837cca29205706f12d2ad98604e7cb", "Url": "https://api.github.com/repos/cohorte/cohorte-herald", "Date": "2015-11-02T13:48:23Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((char) (next)) == '!') { consume(); if (((char) (next)) == '=') { consume(); sym = Token.neq; return; } throw new java.lang.Exception(\"Scan error: unrecognized operator '!'\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/8503/buggy-version/src.compiler.Scanner.java", "BodyUseAPI": [], "Fixed commit": "4120c401e52da3c21da3ecad1a6e61d44a9c3929", "Url": "https://api.github.com/repos/BrianBelleville/optimizing-compiler", "Date": "2014-02-17T08:08:48Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.lang.model.element.Element.getAnnotation(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (scope != null) { java.util.Set<java.lang.String> scopeNames = new java.util.HashSet<java.lang.String>(java.util.Arrays.asList(scope.value())); scopeNames.retainAll(_desiredScopes); if (scopeNames.isEmpty()) { return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/6505/buggy-version/src.main.java.org.versly.rest.wsdoc.AnnotationProcessor.java", "BodyUseAPI": ["java.util.Arrays.asList(scope.value())", "org.versly.rest.wsdoc.DocumentationScope.value()"], "Fixed commit": "0aaf08661c60f3bf2d8b99d07a419812e95946f0", "Url": "https://api.github.com/repos/ialexei/wsdoc", "Date": "2014-12-19T19:39:51Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.gregbeaty.flipview.FlipLayoutManager.getCurrentPosition()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (position != (NO_POSITION)) { itemId = adapter.getItemId(layoutManager.getCurrentPosition()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/409/buggy-version/app.src.main.java.net.gregbeaty.flipview.FlipView.java", "BodyUseAPI": [], "Fixed commit": "48762304f13d6c3d693a479565dedaa759cff2b6", "Url": "https://api.github.com/repos/gregbty/android-flip-view", "Date": "2017-01-24T01:44:48Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (temp != null) { takableItems.remove(temp); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/4612/buggy-version/src.Utilities.ItemStuff.ItemManager.java", "BodyUseAPI": ["java.util.HashMap<Model.Map.Location, Model.Items.Takeable.TakeableItem>.remove(Model.Map.Location)"], "Fixed commit": "e6e394aa810394572f26ababc0b149ec75b0f551", "Url": "https://api.github.com/repos/sOOPerBrofessors/Iteration3", "Date": "2016-04-16T19:33:12Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((coords.getBoard()) != 1) { throw new java.lang.IllegalArgumentException(\"Oliphant appeared on the edge board\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/3726/buggy-version/src.main.java.ru.nsu.fit.g14201.chernova.model.figures.Oliphant.java", "BodyUseAPI": [], "Fixed commit": "d6f8bbdf8d17b8b9f6b207b860b4371deba6669c", "Url": "https://api.github.com/repos/cherkatya/DragonChess", "Date": "2017-12-25T13:33:43Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getParcelableExtra(BluetoothDevice.EXTRA_DEVICE)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((btDevice.getBluetoothClass()) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/4022/buggy-version/src.com.axelby.podax.BluetoothConnectionReceiver.java", "BodyUseAPI": [], "Fixed commit": "eab13d75a16336ca856633535eea7a8fba226167", "Url": "https://api.github.com/repos/dbs/Podax", "Date": "2012-08-14T01:29:30Z"},
{"Line": "=>321", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.activemq.artemis.core.deployers.impl.FileConfigurationParser.getTextBytesAsLongBytes(org.w3c.dom.Element,java.lang.String,int,Validators.MINUS_ONE_OR_GT_ZERO)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (globalMaxSize > 0) { config.setGlobalMaxSize(globalMaxSize); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/4946/buggy-version/artemis-server.src.main.java.org.apache.activemq.artemis.core.deployers.impl.FileConfigurationParser.java", "BodyUseAPI": ["org.apache.activemq.artemis.core.config.Configuration.setGlobalMaxSize(long)"], "Fixed commit": "e7d1161a997b67eec63820d45ad660c30cd71fcd", "Url": "https://api.github.com/repos/clebertsuconic/activemq-artemis", "Date": "2017-04-11T14:08:17Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == (com.musala.atmosphere.agent.devicewrapper.util.ondevicecomponent.DeviceRequestSender.CONNECTION_RETRY_LIMIT)) { com.musala.atmosphere.agent.devicewrapper.util.ondevicecomponent.DeviceRequestSender.LOGGER.error(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/8725/buggy-version/src.main.java.com.musala.atmosphere.agent.devicewrapper.util.ondevicecomponent.DeviceRequestSender.java", "BodyUseAPI": [], "Fixed commit": "543739c3f55ddc9cb7074690d09bf5ae857bb57b", "Url": "https://api.github.com/repos/MusalaSoft/atmosphere-agent", "Date": "2017-02-14T15:34:03Z"},
{"Line": "=>374", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (key.contains(\"title\")) { productEvidence.addEvidence(source, key, value, Evidence.Confidence.MEDIUM); }else if (key.contains(\"vendor\")) { vendorEvidence.addEvidence(source, key, value, Evidence.Confidence.MEDIUM); }else if (key.contains(\"name\")) { productEvidence.addEvidence(source, key, value, Evidence.Confidence.MEDIUM); vendorEvidence.addEvidence(source, key, value, Evidence.Confidence.MEDIUM); }else { productEvidence.addEvidence(source, key, value, Evidence.Confidence.LOW); vendorEvidence.addEvidence(source, key, value, Evidence.Confidence.LOW); if (value.matches(\".*\\\\d.*\")) { java.util.StringTokenizer tokenizer = new java.util.StringTokenizer(value, \" \"); while (tokenizer.hasMoreElements()) { java.lang.String s = tokenizer.nextToken(); if (s.matches(\"^[0-9.]+$\")) { versionEvidence.addEvidence(source, key, s, Evidence.Confidence.LOW); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/458/buggy-version/src.main.java.org.codesecure.dependencycheck.analyzer.JarAnalyzer.java", "BodyUseAPI": ["org.codesecure.dependencycheck.dependency.EvidenceCollection.addEvidence(java.lang.String,java.lang.String,java.lang.String,Evidence.Confidence.LOW)", "org.codesecure.dependencycheck.dependency.EvidenceCollection.addEvidence(java.lang.String,java.lang.String,java.lang.String,Evidence.Confidence.MEDIUM)", "org.codesecure.dependencycheck.dependency.EvidenceCollection.addEvidence(java.lang.String,java.lang.String,java.lang.String,Evidence.Confidence.LOW)", "org.codesecure.dependencycheck.dependency.EvidenceCollection.addEvidence(java.lang.String,java.lang.String,java.lang.String,Evidence.Confidence.MEDIUM)", "java.lang.String.contains(java.lang.String)", "org.codesecure.dependencycheck.dependency.EvidenceCollection.addEvidence(java.lang.String,java.lang.String,java.lang.String,Evidence.Confidence.MEDIUM)", "org.codesecure.dependencycheck.dependency.EvidenceCollection.addEvidence(java.lang.String,java.lang.String,java.lang.String,Evidence.Confidence.LOW)", "org.codesecure.dependencycheck.dependency.EvidenceCollection.addEvidence(java.lang.String,java.lang.String,java.lang.String,Evidence.Confidence.MEDIUM)", "java.lang.String.contains(java.lang.String)"], "Fixed commit": "9a581992da16d9ebfe4a99be79f0fae170f0f99a", "Url": "https://api.github.com/repos/jeremylong/DependencyCheck", "Date": "2012-09-25T23:34:18Z"},
{"Line": "=>1985", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(mCol.getDecks().isDyn(card.getDid()))) && ((card.getODid()) != 0)) { card.setODue(0); card.setODid(0); com.ichi2.anki.AnkiDroidApp.saveExceptionReportFile(e, \"fixedODidInconsistencyInSched_lapseConf\"); return _lapseConf(card); }else { throw new java.lang.RuntimeException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/3604/buggy-version/src.com.ichi2.libanki.Sched.java", "BodyUseAPI": ["com.ichi2.libanki.Card.setODid(int)", "com.ichi2.libanki.Card.setODue(int)", "com.ichi2.libanki.Sched._lapseConf(com.ichi2.libanki.Card)"], "Fixed commit": "b0d325feff932d947caf5a71e8f8e8296642ccfb", "Url": "https://api.github.com/repos/ospalh/Anki-Android", "Date": "2012-09-13T09:35:49Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.list()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (children != null) { for (int i = 0; i < (children.length); i++) { new java.io.File(fileDir, children[i]).delete(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/2660/buggy-version/app.src.main.java.com.kiminonawa.mydiary.shared.FileManager.java", "BodyUseAPI": ["java.io.File.delete()"], "Fixed commit": "22291f1def7d0e739faafc07c0e2ac2015d9d1ce", "Url": "https://api.github.com/repos/DaPATHK/MyDiary", "Date": "2017-02-10T05:47:37Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.doronzehavi.spree.PasteActivity.getSystemService(com.doronzehavi.spree.CLIPBOARD_SERVICE)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (clipboard.hasPrimaryClip()) { @java.lang.SuppressWarnings(\"deprecation\") java.lang.String pasteText = clipboard.getText().toString(); mPasteField.setText(pasteText); }else android.widget.Toast.makeText(this, \"Nothing to paste.\", Toast.LENGTH_SHORT).show();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/6683/buggy-version/src.com.doronzehavi.spree.PasteActivity.java", "BodyUseAPI": ["clipboard.getText().toString()", "android.content.ClipboardManager.getText()"], "Fixed commit": "223205eb59524c22dc04b5a7802a5296c8a1e971", "Url": "https://api.github.com/repos/doronz/Spreeder", "Date": "2014-03-08T11:50:14Z"},
{"Line": "=>403", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (RuleEnforcer.table_creation_violation(1)) { java.lang.System.out.println(\"Player 1 Mapvio!\"); returnvalue = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/5415/buggy-version/Java.src.Server.java", "BodyUseAPI": [], "Fixed commit": "931cc9e33616d8e0140d77ea0a87d7af564c8c4a", "Url": "https://api.github.com/repos/Arnor1711/SWE_1", "Date": "2017-11-20T17:47:09Z"},
{"Line": "=>398", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (RuleEnforcer.table_creation_violation(0)) { java.lang.System.out.println(\"Player 0 Mapvio!\"); returnvalue = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/5415/buggy-version/Java.src.Server.java", "BodyUseAPI": [], "Fixed commit": "931cc9e33616d8e0140d77ea0a87d7af564c8c4a", "Url": "https://api.github.com/repos/Arnor1711/SWE_1", "Date": "2017-11-20T17:47:09Z"},
{"Line": "=>845", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((googleApiClient) != null) googleApiClient.disconnect();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/4576/buggy-version/app.src.main.java.com.uni_wuppertal.iad.vierteltour.ui.map.MapsActivity.java", "BodyUseAPI": [], "Fixed commit": "a2c850f08537c70639ca4a9dc3d484824050edad", "Url": "https://api.github.com/repos/branb/vierteltour", "Date": "2017-02-04T17:11:12Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((round) == 0) { processingEnv.getMessager().printMessage(javax.tools.Diagnostic.Kind.NOTE, \"# Started generating Proguard rules...\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/4798/buggy-version/proguard-annotations-processor.src.main.java.com.github.wrdlbrnft.proguardannotations.ProguardAnnotationsProcessor.java", "BodyUseAPI": [], "Fixed commit": "30e1fddc8e93894c0401007378ed68ac7817a317", "Url": "https://api.github.com/repos/Wrdlbrnft/ProguardAnnotations", "Date": "2016-04-09T17:02:57Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (pk.isAutoIncreasement()) { java.lang.String sql = gSQL(org.nutz.dao.impl.jdbc.oracle.OracleJdbcExpert.DSEQ, en.getTableName(), pk.getColumnName()); sqls.add(org.nutz.dao.Sqls.create(sql)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/5896/buggy-version/src.org.nutz.dao.impl.jdbc.oracle.OracleJdbcExpert.java", "BodyUseAPI": ["org.nutz.dao.impl.jdbc.oracle.OracleJdbcExpert.gSQL(java.lang.String,en.getTableName(),pk.getColumnName())", "org.nutz.dao.entity.MappingField.getColumnName()"], "Fixed commit": "a945bc4d6f0a52d6a31f87a29c3f9e0f1c625502", "Url": "https://api.github.com/repos/nutzam/nutz", "Date": "2012-07-31T18:29:29Z"},
{"Line": "=>304", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["microbat.model.trace.TraceNode.findContainingLoopControlDominator()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (containingLoopControlDominator != null) { clearNodeList.add(containingLoopControlDominator); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/4864/buggy-version/microbat.src.main.microbat.recommendation.StepRecommender.java", "BodyUseAPI": ["java.util.List<microbat.model.trace.TraceNode>.add(microbat.model.trace.TraceNode)"], "Fixed commit": "29404059a40f1e0d591c8149084e84cdd6290547", "Url": "https://api.github.com/repos/sunjun-group/Ziyuan", "Date": "2016-05-15T11:45:44Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lv.getChildCount()) == 0) return super.onInterceptTouchEvent(event);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/4995/buggy-version/app.src.main.java.de.gebatzens.ggvertretungsplan.NewsSwipeLayout.java", "BodyUseAPI": [], "Fixed commit": "077795b1051e3a556b4919b6d6ecf3402a2f45ad", "Url": "https://api.github.com/repos/Cedgetec/SchulinfoApp-android", "Date": "2015-02-27T10:49:14Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (drawable != null) { android.graphics.drawable.StateListDrawable stateListDrawable = new android.graphics.drawable.StateListDrawable(); android.graphics.drawable.Drawable checkedDrawable = drawable.getConstantState().newDrawable().mutate(); android.support.v4.graphics.drawable.DrawableCompat.setTint(checkedDrawable, tint); stateListDrawable.addState(new int[]{ android.R.attr.state_checked }, checkedDrawable); stateListDrawable.addState(new int[]{ }, drawable.mutate()); super.setImageDrawable(stateListDrawable); }else { super.setImageDrawable(drawable); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/2068/buggy-version/lib.src.main.java.com.github.kubatatami.richedittext.views.ToggleImageButton.java", "BodyUseAPI": ["drawable.getConstantState().newDrawable()", "drawable.getConstantState().newDrawable().mutate()", "android.graphics.drawable.Drawable.getConstantState()", "android.graphics.drawable.StateListDrawable.addState(int[],drawable.mutate())", "android.graphics.drawable.Drawable.mutate()", "android.widget.ImageButton.setImageDrawable(android.graphics.drawable.Drawable)"], "Fixed commit": "a65a389b5787f9fcec42f4234d1a7695e52eec47", "Url": "https://api.github.com/repos/kubatatami/RichEditText", "Date": "2017-01-11T11:16:08Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (delayInit == null) { delayInit = \"1\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/8515/buggy-version/src.gui.admin.ManageConfigsPanel.java", "BodyUseAPI": [], "Fixed commit": "cbf2f7e737cad294aa6b1ee0e86ae261abce495d", "Url": "https://api.github.com/repos/progutvikling/prosjekt", "Date": "2013-10-21T08:51:06Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (users.containsKey(user.getEmail())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/7090/buggy-version/app.src.main.java.com.tokko.beamon.beamontracker.MapsActivity.java", "BodyUseAPI": [], "Fixed commit": "91bb7ece64b691741163c046d989c1728a32d1c4", "Url": "https://api.github.com/repos/beamonlabs/Tracker-Android", "Date": "2016-02-25T22:02:58Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (jobConfig.containsKey(\"cronExpression\")) { binder.cronExpression(jobConfig.getString(\"cronExpression\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/8326/buggy-version/src.main.java.com.nesscomputing.quartz.NessQuartzModule.java", "BodyUseAPI": ["org.apache.commons.configuration.Configuration.getString(java.lang.String)", "com.nesscomputing.quartz.QuartzJobBinder.cronExpression(jobConfig.getString(\"cronExpression\"))"], "Fixed commit": "d50c3455d8d73c507077039254c17259aeb1b201", "Url": "https://api.github.com/repos/hgschmie/components-ness-quartz", "Date": "2013-09-19T06:03:26Z"},
{"Line": "=>478", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((comment.isPublished()) && (properties.containsKey(\"published\"))) { subscriptionService.notifySubscribers(comment.getParent(), (\"New comment posted by \" + (comment.getAuthorLabel())), conversation.getProject(), null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/1626/buggy-version/src.main.java.scrum.server.ScrumServiceImpl.java", "BodyUseAPI": ["scrum.server.collaboration.Comment.getAuthorLabel()", "scrum.server.collaboration.Comment.getParent()", "scrum.server.pr.SubscriptionService.notifySubscribers(comment.getParent(),(\"New comment posted by \" + (comment.getAuthorLabel())),conversation.getProject(),<nulltype>)"], "Fixed commit": "d549498d8a8c1b32ac732dc3fcd7430d1495788f", "Url": "https://api.github.com/repos/Kunagi/kunagi", "Date": "2012-04-18T22:43:28Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((args.length) == 1) { if (args[0].equalsIgnoreCase(\"reload\")) { checkConfig(); try { VAR.config.load(VAR.f_config); } catch (java.io.FileNotFoundException e1) { e1.printStackTrace(); } catch (java.io.IOException e1) { e1.printStackTrace(); } catch (org.bukkit.configuration.InvalidConfigurationException e1) { e1.printStackTrace(); } sender.sendMessage((((com.github.Mephilis7.PlayerManager.VAR.Header) + (org.bukkit.ChatColor.GREEN)) + \"config.yml reloaded!\")); return true; } if (args[0].equalsIgnoreCase(\"list\")) { sender.sendMessage(((((((gold) + \"------------------\") + (green)) + \" PlayerManager \") + (gold)) + \"-----------------\")); for (org.bukkit.entity.Player on : getServer().getOnlinePlayers()) { sender.sendMessage((((((((org.bukkit.ChatColor.GRAY) + (on.getName())) + (white)) + \" - \") + (org.bukkit.ChatColor.DARK_AQUA)) + (org.bukkit.ChatColor.BOLD)) + (on.getGameMode()))); } return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/8977/buggy-version/src.com.github.Mephilis7.PlayerManager.PMan_main.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)"], "Fixed commit": "2bb1d659b91a3fcf4062df042347e263ac0e7051", "Url": "https://api.github.com/repos/Mephilis7/PlayerManager", "Date": "2012-05-06T11:44:04Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((args.length) == 2) { if (args[0].equalsIgnoreCase(\"info\")) { for (org.bukkit.entity.Player infoPlayer : getServer().getOnlinePlayers()) { if (infoPlayer.getName().equalsIgnoreCase(args[0])) { playerShowInfo = infoPlayer; } } if (playerShowInfo == null) { for (org.bukkit.entity.Player infoPlayer : getServer().getOnlinePlayers()) { java.lang.String[] infoIp = infoPlayer.getAddress().toString().split(\":\"); if ((infoIp[0].equalsIgnoreCase(args[0])) || (infoIp[0].equalsIgnoreCase((\"/\" + (args[0]))))) { playerShowInfo = infoPlayer; } } if (playerShowInfo == null) { sender.sendMessage(((com.github.Mephilis7.PlayerManager.VAR.Header) + \"Could not find specified player, is he offline?\")); return true; } } if (playerShowInfo != null) { sender.sendMessage(((((((gold) + \"------------------\") + (green)) + \" PlayerManager \") + (gold)) + \"-----------------\")); java.lang.String[] Order = VAR.config.getString(\"order\").split(\";\"); int i = 0; while (i < (Order.length)) { if (Order[i].equalsIgnoreCase(\"Name\")) sender.sendMessage(((((darkgreen) + \"Name: \") + (aqua)) + (playerShowInfo.getName()))); if (Order[i].equalsIgnoreCase(\"IP\")) sender.sendMessage(((((darkgreen) + \"IP Address: \") + (aqua)) + (playerShowInfo.getAddress()))); if (Order[i].equalsIgnoreCase(\"World\")) sender.sendMessage(((((darkgreen) + \"World: \") + (aqua)) + (playerShowInfo.getWorld().getName()))); if (Order[i].equalsIgnoreCase(\"Health\")) sender.sendMessage(((((darkgreen) + \"Health: \") + (aqua)) + (playerShowInfo.getHealth()))); if (Order[i].equalsIgnoreCase(\"Food\")) sender.sendMessage(((((darkgreen) + \"Food: \") + (aqua)) + (playerShowInfo.getFoodLevel()))); if (Order[i].equalsIgnoreCase(\"Xp\")) sender.sendMessage(((((darkgreen) + \"Exp level: \") + (aqua)) + (playerShowInfo.getLevel()))); if (Order[i].equalsIgnoreCase(\"GameMode\")) sender.sendMessage(((((darkgreen) + \"GameMode: \") + (aqua)) + (playerShowInfo.getGameMode()))); if (Order[i].equalsIgnoreCase(\"Position\")) sender.sendMessage((((((((((darkgreen) + \"Position: \") + (aqua)) + \"X: \") + (playerShowInfo.getLocation().getBlockX())) + \" Z: \") + (playerShowInfo.getLocation().getBlockZ())) + \" Y: \") + (playerShowInfo.getLocation().getBlockY()))); if (Order[i].equalsIgnoreCase(\"Distance\")) { if (sender instanceof org.bukkit.entity.Player) { int x = com.github.Mephilis7.PlayerManager.PMan_main.abs(playerShowInfo.getLocation().getBlockX()); int loc = com.github.Mephilis7.PlayerManager.PMan_main.abs(((org.bukkit.entity.Player) (sender)).getPlayer().getLocation().getBlockX()); x = com.github.Mephilis7.PlayerManager.PMan_main.abs((x - loc)); int y = com.github.Mephilis7.PlayerManager.PMan_main.abs(playerShowInfo.getLocation().getBlockY()); loc = com.github.Mephilis7.PlayerManager.PMan_main.abs(((org.bukkit.entity.Player) (sender)).getPlayer().getLocation().getBlockY()); y = com.github.Mephilis7.PlayerManager.PMan_main.abs((y - loc)); int z = com.github.Mephilis7.PlayerManager.PMan_main.abs(playerShowInfo.getLocation().getBlockZ()); loc = com.github.Mephilis7.PlayerManager.PMan_main.abs(((org.bukkit.entity.Player) (sender)).getPlayer().getLocation().getBlockZ()); z = com.github.Mephilis7.PlayerManager.PMan_main.abs((z - loc)); x = (x + y) + z; sender.sendMessage(((((darkgreen) + \"Distance: \") + (aqua)) + x)); } } i++; } sender.sendMessage(((gold) + \"--------------------------------------------------\")); return true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/8977/buggy-version/src.com.github.Mephilis7.PlayerManager.PMan_main.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "infoPlayer.getName().equalsIgnoreCase(java.lang.String)"], "Fixed commit": "2bb1d659b91a3fcf4062df042347e263ac0e7051", "Url": "https://api.github.com/repos/Mephilis7/PlayerManager", "Date": "2012-05-06T11:44:04Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((me.jgappsandgames.openlog.Config.getInstance().getPrimaryWriter()) != null) me.jgappsandgames.openlog.Config.getInstance().getPrimaryWriter().write(100, name, \"Started\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/2200/buggy-version/src.me.jgappsandgames.openlog.Timer.java", "BodyUseAPI": [], "Fixed commit": "6e1ae1fc7ed4eba282bed72f7c7b9f4c8d9c5b1a", "Url": "https://api.github.com/repos/tfcbandgeek/OpenLogJava", "Date": "2017-12-08T05:05:50Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((me.jgappsandgames.openlog.Config.getInstance().getSecondaryWriter()) != null) me.jgappsandgames.openlog.Config.getInstance().getSecondaryWriter().write(100, name, \"Started\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/2200/buggy-version/src.me.jgappsandgames.openlog.Timer.java", "BodyUseAPI": [], "Fixed commit": "6e1ae1fc7ed4eba282bed72f7c7b9f4c8d9c5b1a", "Url": "https://api.github.com/repos/tfcbandgeek/OpenLogJava", "Date": "2017-12-08T05:05:50Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((me.jgappsandgames.openlog.Config.getInstance().getPrimaryWriter()) != null) me.jgappsandgames.openlog.Config.getInstance().getPrimaryWriter().write(100, name, (\"Ran For \" + (java.lang.String.valueOf(t))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/2200/buggy-version/src.me.jgappsandgames.openlog.Timer.java", "BodyUseAPI": [], "Fixed commit": "6e1ae1fc7ed4eba282bed72f7c7b9f4c8d9c5b1a", "Url": "https://api.github.com/repos/tfcbandgeek/OpenLogJava", "Date": "2017-12-08T05:05:50Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((me.jgappsandgames.openlog.Config.getInstance().getSecondaryWriter()) != null) me.jgappsandgames.openlog.Config.getInstance().getSecondaryWriter().write(100, name, (\"Ran For \" + (java.lang.String.valueOf(t))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/2200/buggy-version/src.me.jgappsandgames.openlog.Timer.java", "BodyUseAPI": [], "Fixed commit": "6e1ae1fc7ed4eba282bed72f7c7b9f4c8d9c5b1a", "Url": "https://api.github.com/repos/tfcbandgeek/OpenLogJava", "Date": "2017-12-08T05:05:50Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.ServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.ffzx.cas.support.StringUtils.isNotBlank(ticket)) { requireRedirect = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/3023/buggy-version/cas-web.src.main.java.com.ffzx.cas.LoginFilter.java", "BodyUseAPI": [], "Fixed commit": "6012eeaa75fbe753c2271857cab1a70238351ad7", "Url": "https://api.github.com/repos/shanjunmei/cas-web", "Date": "2016-08-15T10:53:15Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ffzx.cas.SessionManager.retrieveFromSession(((SessionManager.SERVER_SESSION_KEY_PREFIX) + ticket))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.ffzx.cas.support.StringUtils.isBlank(auth)) { java.lang.String casBase = (com.ffzx.cas.support.PropertiesLoader.getProperty(\"cas.base\")) + \"/login.jsp\"; java.lang.String webBase = com.ffzx.cas.support.PropertiesLoader.getProperty(\"web.base\"); casBase = urlParameterAdd(casBase, webBase); httpResponse.sendRedirect(casBase); return; }else { if (requireRedirect) { java.lang.String webBase = com.ffzx.cas.support.PropertiesLoader.getProperty(\"web.base\"); sessionManager.putSession(((SessionManager.CLIENT_SESSION_KEY_PREFIX) + sessionId), ticket); httpResponse.sendRedirect(webBase); return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/3023/buggy-version/cas-web.src.main.java.com.ffzx.cas.LoginFilter.java", "BodyUseAPI": [], "Fixed commit": "6012eeaa75fbe753c2271857cab1a70238351ad7", "Url": "https://api.github.com/repos/shanjunmei/cas-web", "Date": "2016-08-15T10:53:15Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (channel.isAuthenticated()) { throw new transport.AuthException(\"logout first\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/437/buggy-version/src.main.java.transport.EncryptedChannelConnection.java", "BodyUseAPI": [], "Fixed commit": "c600557603f629819edae7c4aad8f2992b79642b", "Url": "https://api.github.com/repos/tlyphed/dslab2", "Date": "2017-01-07T19:46:53Z"},
{"Line": "=>298", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (gameEngine.loadGame()) { changeScene(mainMenuScene, gameScene); createRadioArrays(); redraw(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/8726/buggy-version/17_G12.src.gui.GUIController.java", "BodyUseAPI": [], "Fixed commit": "283e13b051326bde773a8c12aceec273273851a1", "Url": "https://api.github.com/repos/StephanieNigth/17G12SemesterProject", "Date": "2017-12-08T14:16:13Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (null != property) { keyValues.put(property, value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/6195/buggy-version/src.main.java.org.blaazinsoftware.centaur.service.DefaultCentaurDAO.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,java.lang.Object)"], "Fixed commit": "16ce2dda947babb60f2039772c96b9a6a2c7c06d", "Url": "https://api.github.com/repos/randymay/centaur", "Date": "2014-10-21T23:42:25Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((str.startsWith(\"sun.reflect.\")) || (\"java.lang.reflect.Method.invoke\".equals(str))) { fix++; continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/4920/buggy-version/src.kilim.Task.java", "BodyUseAPI": [], "Fixed commit": "0b3679936ae6093cb93a4841221e67cc0e21e0b7", "Url": "https://api.github.com/repos/hyleeon/kilim", "Date": "2014-12-09T09:15:47Z"},
{"Line": "=>666", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.evolveum.midpoint.web.page.admin.users.PageOrgUnit.saveExtension(com.evolveum.midpoint.schema.result.OperationResult)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((!(isEditing())) && (extensionDelta != null)) { com.evolveum.midpoint.prism.delta.ObjectDelta extDelta = delta.getObjectToAdd().diff(extensionDelta.getObjectToAdd()); getModelService().executeChanges(com.evolveum.midpoint.web.util.WebMiscUtil.createDeltaCollection(extDelta), null, createSimpleTask(com.evolveum.midpoint.web.page.admin.users.PageOrgUnit.SAVE_UNIT), result); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/8643/buggy-version/gui.admin-gui.src.main.java.com.evolveum.midpoint.web.page.admin.users.PageOrgUnit.java", "BodyUseAPI": ["delta.getObjectToAdd().diff(extensionDelta.getObjectToAdd())", "com.evolveum.midpoint.prism.delta.ObjectDelta.getObjectToAdd()"], "Fixed commit": "ce41b84a926ac982e97cdf55e53cd930b6837db5", "Url": "https://api.github.com/repos/Evolveum/midpoint", "Date": "2014-08-14T09:44:40Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!multiModule) { result.put(proj, java.util.Arrays.asList(proj)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/8040/buggy-version/src.main.java.org.gephi.maven.ModuleUtils.java", "BodyUseAPI": [], "Fixed commit": "1c4d7e538347fbc134634f8574637a84a2fcfd0a", "Url": "https://api.github.com/repos/gephi/gephi-maven-plugin", "Date": "2015-11-17T15:47:12Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (fTrans.isEmpty()) { fTrans.add(R.id.container, fragmentPDD); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/183/buggy-version/app.src.main.java.ru.zvorygin.pdd.MainActivity.java", "BodyUseAPI": ["android.support.v4.app.FragmentTransaction.add(R.id.container,android.support.v4.app.Fragment)"], "Fixed commit": "52004d2106c0e879984db76c9dbbb0447d762d4b", "Url": "https://api.github.com/repos/YettyZzZone/PDD", "Date": "2017-08-29T04:38:23Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(metadataCode.contains(\"_\"))) { return metadataCode; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/5008/buggy-version/model.src.com.constellio.model.services.schemas.SchemaUtils.java", "BodyUseAPI": [], "Fixed commit": "70128ffa073e4e66e6f9ce510e49b096e243cd1e", "Url": "https://api.github.com/repos/doculibre/constellio", "Date": "2016-02-10T20:57:45Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!connectionKeepalive) { serverResponse.getResponse().headers().set(\"Connection\", \"close\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/6874/buggy-version/src.main.java.poc.vertx.SimpleServer.java", "BodyUseAPI": [], "Fixed commit": "d7f4c976ac3ec707505b844e1eb76d5430d7247d", "Url": "https://api.github.com/repos/tuxmonteiro/vertx-poc", "Date": "2014-05-15T20:10:46Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (code == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/7573/buggy-version/src.java.com.dreamwing.serverville.util.LocaleUtil.java", "BodyUseAPI": [], "Fixed commit": "cdcdf9e758bcb5615e5e7c1665095a326377e76d", "Url": "https://api.github.com/repos/rejemy/serverville", "Date": "2017-12-04T18:11:21Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (code == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/7573/buggy-version/src.java.com.dreamwing.serverville.util.LocaleUtil.java", "BodyUseAPI": [], "Fixed commit": "cdcdf9e758bcb5615e5e7c1665095a326377e76d", "Url": "https://api.github.com/repos/rejemy/serverville", "Date": "2017-12-04T18:11:21Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.world) != null) { return this.world.getName(); }else { return \"C_REDUnknown\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/4819/buggy-version/src.nl.giantit.minecraft.GiantShop.Locationer.AreaReaders.PlainJane.java", "BodyUseAPI": [], "Fixed commit": "6e715a5b3bc13df5d4370d73131f393a43ff81e5", "Url": "https://api.github.com/repos/Thidox/GiantShop-2.0", "Date": "2013-04-27T13:54:42Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["audio.rabid.dev.wallpapersetter.WallpaperGetter.getLastFlickrWallpaper()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (b == null) { setNewFlickrWallpaper(); }else { android.util.Log.d(audio.rabid.dev.wallpapersetter.WallpaperSetService.TAG, (\"setting wallpaper: \" + (b.toString()))); wallpaperManager.setBitmap(b); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/1516/buggy-version/app.src.main.java.audio.rabid.dev.wallpapersetter.WallpaperSetService.java", "BodyUseAPI": ["android.util.Log.d(java.lang.String,(\"setting wallpaper: \" + (b.toString())))", "android.graphics.Bitmap.toString()", "android.app.WallpaperManager.setBitmap(android.graphics.Bitmap)"], "Fixed commit": "5b25627dc7647ad7039de9537464537aefee2cf8", "Url": "https://api.github.com/repos/rabidaudio/wallpaper-setter", "Date": "2015-12-26T03:08:57Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (BuildConfig.DEBUG) { android.widget.Toast.makeText(context, \"Setting wallpaper alarm\", Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/1516/buggy-version/app.src.main.java.audio.rabid.dev.wallpapersetter.BootAlarmSetBroadcastReceiver.java", "BodyUseAPI": [], "Fixed commit": "5b25627dc7647ad7039de9537464537aefee2cf8", "Url": "https://api.github.com/repos/rabidaudio/wallpaper-setter", "Date": "2015-12-26T03:08:57Z"},
{"Line": "=>363", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((calcIndex(y, x)) >= (cells.size())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/7382/buggy-version/clueGame.Board.java", "BodyUseAPI": [], "Fixed commit": "a3d2cc14078028ba11c6a2bc6cb25014820c6c88", "Url": "https://api.github.com/repos/vkay/CluePartnerSwap", "Date": "2014-04-09T03:28:35Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (position < (fragments.size())) return this.fragments.get(position);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/2741/buggy-version/src.de.azapps.mirakel.adapter.PagerAdapter.java", "BodyUseAPI": ["java.util.List<android.support.v4.app.Fragment>.get(int)"], "Fixed commit": "a2711c14768baaab8aa0dd31453366af61a1ec2e", "Url": "https://api.github.com/repos/azapps/mirakel-android", "Date": "2013-12-26T22:58:53Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(adapter.getItem(0).recallNumberToString().equals(recalls.getSuccess().getResults().get(0).recallNumberToString()))) { adapter.addAll(recalls.getSuccess().getResults()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/2313/buggy-version/src.edu.vt.cs5744.RecallListFragment.java", "BodyUseAPI": ["edu.vt.cs5744.Recalls.getSuccess()", "edu.vt.cs5744.RecallListFragment.RecallsAdapter.addAll(recalls.getSuccess().getResults())", "recalls.getSuccess().getResults()"], "Fixed commit": "2c6db3ba7e46cb39a13662fcad516f16a4dd5c45", "Url": "https://api.github.com/repos/ShanGGraff/TotalRecall", "Date": "2013-11-24T10:21:07Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) > 10) { sharingIntent.setPackage(\"com.android.bluetooth\"); sharingIntent.putExtra(Intent.EXTRA_STREAM, fileUri); activity.startActivity(android.content.Intent.createChooser(sharingIntent, \"Share file\")); }else { sharingIntent.setComponent(new android.content.ComponentName(\"com.android.bluetooth\", \"com.android.bluetooth.opp.BluetoothOppLauncherActivity\")); sharingIntent.putExtra(Intent.EXTRA_STREAM, fileUri); activity.startActivityForResult(sharingIntent, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/8756/buggy-version/TranslationKeyboard2.0.app.src.main.java.org.distantshoresmedia.sideloading.SideSharer.java", "BodyUseAPI": [], "Fixed commit": "59b5830ab7a31006e0603acd814f64f05b14e03f", "Url": "https://api.github.com/repos/unfoldingWord-dev/translationKeyboard", "Date": "2015-10-12T18:35:47Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getTimeStep()) % 2) == 0) { refreshBid(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/6194/buggy-version/agent.FlightBidder.java", "BodyUseAPI": [], "Fixed commit": "ef7a55798ab382706fd94428ba6145876e0d493e", "Url": "https://api.github.com/repos/aelred/TheGreaterFool", "Date": "2014-12-05T13:26:55Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["MainApp.familyMembersList.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((familyMembers.getDss_id_member()) != \"\") { holder.DSSidm.setText(familyMembers.getDss_id_member()); }else { holder.DSSidm.setText(\"New Member\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/5941/buggy-version/app.src.main.java.edu.aku.hassannaqvi.dss_census.activities.FamilyMembersActivity.java", "BodyUseAPI": ["android.widget.TextView.setText(familyMembers.getDss_id_member())", "edu.aku.hassannaqvi.dss_census.contracts.MembersContract.getDss_id_member()"], "Fixed commit": "53b93db212409347cf0449677046674d718dfb46", "Url": "https://api.github.com/repos/shznaqvi/DSS-Census", "Date": "2017-04-25T07:16:25Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["kandidat.nfc.nfcapp.KeysActivity.findViewById(rg.getCheckedRadioButtonId())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (rb != null) { java.lang.String lockId = rb.getText().subSequence(0, 4).toString(); rg.removeView(rb); if ((lockId.length()) == 4) { dao.delete(lockId); }else { android.widget.Toast.makeText(this, \"UnlockId has to be for characters\", Toast.LENGTH_SHORT).show(); } }else { android.widget.Toast.makeText(this, \"You have to choose a key to delete\", Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/9167/buggy-version/App.src.kandidat.nfc.nfcapp.KeysActivity.java", "BodyUseAPI": ["rb.getText().subSequence(int,int)", "android.widget.RadioGroup.removeView(android.widget.RadioButton)", "android.widget.RadioButton.getText()", "rb.getText().subSequence(0, 4).toString()"], "Fixed commit": "fb732264193e10a5013653942cf8412793fddd3e", "Url": "https://api.github.com/repos/kaety/NFC", "Date": "2013-04-15T19:25:53Z"},
{"Line": "=>343", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((photoSrc) == \"\") || ((photoSrc) == null)) { }else { android.content.Intent intent = new android.content.Intent(this, uz.samtuit.samapp.main.ImageViewingActivity.class); intent.putExtra(\"photo\", photoSrc); intent.putExtra(\"name\", name); startActivity(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/4460/buggy-version/app.src.main.java.uz.samtuit.samapp.main.TourFeatureActivity.java", "BodyUseAPI": [], "Fixed commit": "b95609578fff726dd21e6b58a60631beed3940d9", "Url": "https://api.github.com/repos/SamarkandTour/Samapp-mobile", "Date": "2016-04-23T11:27:37Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (collapsingToolbarLayout)) { collapsingToolbarLayout.setTitle(cursor.getString(RecipeEntry.POSITION_NAME)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/7877/buggy-version/app.src.main.java.net.cdmsoftware.mobilechef.DetailActivity.java", "BodyUseAPI": [], "Fixed commit": "df5a2861df5105a3beec573a58678e1c06cce5b2", "Url": "https://api.github.com/repos/christofersimbar/MobileChef", "Date": "2017-07-01T14:58:15Z"},
{"Line": "=>434", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.cli.CommandLineParser.parse(org.apache.commons.cli.Options,java.lang.String[])"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (cmd.hasOption(\"mid\")) { try { client.defalutMid = java.lang.Integer.parseInt(cmd.getOptionValue(\"mid\")); } catch (java.lang.NumberFormatException e) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/5480/buggy-version/src.main.java.com.hcse.d6.app.Client.java", "BodyUseAPI": ["org.apache.commons.cli.CommandLine.getOptionValue(java.lang.String)", "java.lang.Integer.parseInt(cmd.getOptionValue(\"mid\"))"], "Fixed commit": "8bb88a854ca4d1b4e0d90b0d2d7721d46b6ab151", "Url": "https://api.github.com/repos/fanyunfeng/hcse-app-client", "Date": "2016-02-03T10:38:17Z"},
{"Line": "=>827", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dir.exists()) { org.openl.util.FileUtils.delete(dir); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/1844/buggy-version/STUDIO.org.openl.rules.webstudio.src.org.openl.rules.webstudio.web.repository.RepositoryTreeController.java", "BodyUseAPI": ["org.openl.util.FileUtils.delete(java.io.File)"], "Fixed commit": "d6acbb2a8e53ec6c7d1e305563d81d7478ef6a7f", "Url": "https://api.github.com/repos/openl-tablets/openl-tablets", "Date": "2015-08-28T13:40:12Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(hmacName.toLowerCase().startsWith(\"hmac\"))) { throw new java.lang.IllegalArgumentException((\"Invalid HMAC. Please check digestName and hmacName \" + \"to be in correct order\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/6678/buggy-version/lib.src.main.java.com.bolyartech.scram_sasl.common.ScramUtils.java", "BodyUseAPI": [], "Fixed commit": "6f500fc94452c1dcb6736d5292dca8795a3819c8", "Url": "https://api.github.com/repos/ogrebgr/scram-sasl", "Date": "2016-12-23T13:05:06Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hudson.maven.MojoInfo.getConfigurationValue(java.lang.String,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (formats != null) { for (java.lang.String o : formats) { if (\"xml\".equalsIgnoreCase(o.trim())) { haveXMLReport = true; break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/2871/buggy-version/src.main.java.hudson.plugins.cobertura.MavenCoberturaPublisher.java", "BodyUseAPI": [], "Fixed commit": "c090512e9591b8c11761c5b32f5b379b9bb534ac", "Url": "https://api.github.com/repos/mbarrien/cobertura-plugin", "Date": "2017-01-23T17:16:18Z"},
{"Line": "=>686", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (req == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/2871/buggy-version/src.main.java.hudson.plugins.cobertura.CoberturaPublisher.java", "BodyUseAPI": [], "Fixed commit": "c090512e9591b8c11761c5b32f5b379b9bb534ac", "Url": "https://api.github.com/repos/mbarrien/cobertura-plugin", "Date": "2017-01-23T17:16:18Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (offset.equals(this.offset)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/1726/buggy-version/app.src.main.java.halfardawid.notepadx.activity.sketch_editor.SmartBitmap.java", "BodyUseAPI": [], "Fixed commit": "dcf776a40ecac3f1f3ea5d3df7b18a490e8b53ac", "Url": "https://api.github.com/repos/halfiuuu/Notepad_x", "Date": "2017-12-18T19:13:51Z"},
{"Line": "=>361", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.isBuilding) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/2730/buggy-version/mc-src.net.minecraft.src.MAtExpansion.java", "BodyUseAPI": [], "Fixed commit": "75b9ce464c6091bbb781d2e01e4b2c6a95451cd3", "Url": "https://api.github.com/repos/Hurricaaane/MC-Client", "Date": "2012-10-28T07:03:22Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (constantClassInfoIndex == 0) { return \"No super class\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/2078/buggy-version/src.main.java.org.tinylcy.ClassReader.java", "BodyUseAPI": [], "Fixed commit": "60efb9c5ff39f8d30c1ba30483dd7845f647dafd", "Url": "https://api.github.com/repos/tinylcy/ClassAnalyzer", "Date": "2017-12-14T08:15:18Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.benny.openlauncher.core.manager.Setup.get().getAppSettings().getSearchBarEnable()) com.benny.openlauncher.core.util.Tool.invisibleViews(java.lang.Math.round(((animSpeed) / 1.3F)), hideViews);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/7628/buggy-version/core.src.main.java.com.benny.openlauncher.core.widget.DragOptionView.java", "BodyUseAPI": [], "Fixed commit": "1870519679e7bc51a84d0fe10f8da7f51be19e93", "Url": "https://api.github.com/repos/OpenLauncherTeam/openlauncher", "Date": "2017-07-31T16:26:04Z"},
{"Line": "=>302", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.benny.openlauncher.core.manager.Setup.get().getAppSettings().getSearchBarEnable()) com.benny.openlauncher.core.util.Tool.visibleViews(java.lang.Math.round(((animSpeed) / 1.3F)), hideViews);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/7628/buggy-version/core.src.main.java.com.benny.openlauncher.core.widget.DragOptionView.java", "BodyUseAPI": [], "Fixed commit": "1870519679e7bc51a84d0fe10f8da7f51be19e93", "Url": "https://api.github.com/repos/OpenLauncherTeam/openlauncher", "Date": "2017-07-31T16:26:04Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((aDir == (NORTH)) && (bDir == (SOUTH))) { return projlab.rail.ui.ResourceManager.RAIL_STRAIGHT_VERT; }else if ((aDir == (WEST)) && (bDir == (SOUTH))) { return projlab.rail.ui.ResourceManager.RAIL_CURVES[3]; }else { return projlab.rail.ui.ResourceManager.RAIL_CURVES[aDir.value]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/3458/buggy-version/src.projlab.rail.ui.ResourceManager.java", "BodyUseAPI": [], "Fixed commit": "80b15bca990e9e4b2ef9cf46ef8d9ee363f91bd4", "Url": "https://api.github.com/repos/mktiti/ProjektLab", "Date": "2017-05-06T23:52:11Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((entries[i].getIcon()) != null) { awtIcon = net.refractions.udig.ui.graphics.AWTSWTImageUtils.convertToAWT(entries[i].getIcon().getImageData()); }else { org.eclipse.jface.resource.ImageDescriptor descriptor = net.refractions.udig.project.ui.internal.LayerGeneratedGlyphDecorator.generateIcon(((net.refractions.udig.project.internal.Layer) (layer))); if (descriptor != null) { awtIcon = net.refractions.udig.ui.graphics.AWTSWTImageUtils.convertToAWT(descriptor.getImageData()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/4771/buggy-version/plugins.net.refractions.udig.legend.src.net.refractions.udig.legend.ui.LegendGraphic.java", "BodyUseAPI": ["entries[i].getIcon().getImageData()", "entries[i].getIcon()", "net.refractions.udig.ui.graphics.AWTSWTImageUtils.convertToAWT(entries[i].getIcon().getImageData())"], "Fixed commit": "15cbb40b22731f22d9a89974e743cd9e78a998cb", "Url": "https://api.github.com/repos/egouge/udig-platform", "Date": "2012-09-20T19:54:38Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<fr.polytech.ressources.Charact>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(charact.isDead())) { fr.polytech.gameCore.Action action = charact.chooseAction(groupPC, groupNPC); actions.add(action); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/6671/buggy-version/rpgProject.src.fr.polytech.gameCore.Turn.java", "BodyUseAPI": ["fr.polytech.ressources.Charact.chooseAction(java.util.ArrayList<fr.polytech.ressources.Charact>,java.util.ArrayList<fr.polytech.ressources.Charact>)"], "Fixed commit": "a8524eabeff272a5d9373d6b7ac88caf7f980db3", "Url": "https://api.github.com/repos/FranckParis/GeeksAdventure", "Date": "2016-01-20T12:40:22Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<fr.polytech.ressources.Charact>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(monster.isDead())) actions.add(monster.chooseAction(groupPC, groupNPC));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/6671/buggy-version/rpgProject.src.fr.polytech.gameCore.Turn.java", "BodyUseAPI": ["java.util.ArrayList<fr.polytech.gameCore.Action>.add(monster.chooseAction(groupPC, groupNPC))", "fr.polytech.ressources.Monster.chooseAction(java.util.ArrayList<fr.polytech.ressources.Charact>,java.util.ArrayList<fr.polytech.ressources.Charact>)"], "Fixed commit": "a8524eabeff272a5d9373d6b7ac88caf7f980db3", "Url": "https://api.github.com/repos/FranckParis/GeeksAdventure", "Date": "2016-01-20T12:40:22Z"},
{"Line": "=>442", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.names()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(elementNames.getString(j).equals(\"timestamp_comment\"))) { toinsert.put(elementNames.getString(j), objectInArray.getString(elementNames.getString(j))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/995/buggy-version/app.src.main.java.uk.co.jaymehta.csafeedback.CSASyncAdapter.java", "BodyUseAPI": ["org.json.JSONObject.getString(elementNames.getString(j))", "org.json.JSONArray.getString(int)", "org.json.JSONArray.getString(int)", "android.content.ContentValues.put(elementNames.getString(j),objectInArray.getString(elementNames.getString(j)))"], "Fixed commit": "ad00e20df32623f5fc329332671ab445c568096f", "Url": "https://api.github.com/repos/jaymehta50/CSAFeedback3", "Date": "2017-05-14T11:10:57Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Scanner.useDelimiter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (scanner.hasNext()) { json = scanner.next(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/8033/buggy-version/src.main.java.com.opsgenie.tools.backup.api.IntegrationApiRequester.java", "BodyUseAPI": ["java.util.Scanner.next()"], "Fixed commit": "7d79a7e4b2b0790b868ba0b9386d8ff703a23dbc", "Url": "https://api.github.com/repos/opsgenie/opsgenie-configuration-backup", "Date": "2017-01-23T11:34:21Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((child.getLayoutParams()) != null) && ((child.getLayoutParams()) instanceof com.jianbin.view.MarginLayoutParams)) addViewInLayout(child, i, child.getLayoutParams()); else addViewInLayout(child, i, new com.jianbin.view.MarginLayoutParams(MarginLayoutParams.WRAP_CONTENT, MarginLayoutParams.WRAP_CONTENT));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/8362/buggy-version/src.com.jianbin.view.FlowTagsLayout.java", "BodyUseAPI": ["com.jianbin.view.FlowTagsLayout.addViewInLayout(android.view.View,int,com.jianbin.view.MarginLayoutParams)", "android.view.View.getLayoutParams()", "com.jianbin.view.FlowTagsLayout.addViewInLayout(android.view.View,int,child.getLayoutParams())"], "Fixed commit": "b74b0471384db69007662ca0fb23f29f85cdf402", "Url": "https://api.github.com/repos/inexistence/FlowTagsLayout", "Date": "2015-05-06T16:39:52Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (morphing) { throw new java.lang.IllegalStateException(\"FloatingActionButtonView is currently morphing\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/4503/buggy-version/app.src.main.java.me.timbals.materialdesigncomponents.views.FloatingActionButtonView.java", "BodyUseAPI": [], "Fixed commit": "6281abbb7591d0c59f1dadb33c1064216e46b7e6", "Url": "https://api.github.com/repos/Timbals/MaterialDesignComponents", "Date": "2016-08-13T16:14:12Z"},
{"Line": "=>568", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!fullPointer) data[3] = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/2089/buggy-version/src.org.zzl.minegaming.GBAUtils.GBARom.java", "BodyUseAPI": [], "Fixed commit": "456479d52e8f9f06885e489cd2833aeb0b27929e", "Url": "https://api.github.com/repos/shinyquagsire23/GBAUtils", "Date": "2014-07-16T22:11:40Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((typeDescription.getSuperClass()) != null) { matchHierarchyClass(typeDescription.getSuperClass(), parentTypes); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/8152/buggy-version/apm-sniffer.apm-agent-core.src.main.java.org.skywalking.apm.agent.core.plugin.match.HierarchyMatch.java", "BodyUseAPI": ["org.skywalking.apm.agent.core.plugin.match.HierarchyMatch.matchHierarchyClass(typeDescription.getSuperClass(),java.util.List<java.lang.String>)", "net.bytebuddy.description.type.TypeDescription.getSuperClass()"], "Fixed commit": "e63e0332637227c3819dd5cb1050b1550b2309de", "Url": "https://api.github.com/repos/apache/incubator-skywalking", "Date": "2017-12-04T16:56:58Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((typeDescription.getSuperClass()) != null) { matchHierarchyClazz(typeDescription.getSuperClass(), matchResult); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/8152/buggy-version/apm-sniffer.apm-sdk-plugin.spring-plugins.concurrent-util-4.x-plugin.src.main.java.org.skywalking.apm.plugin.spring.concurrent.match.EitherInterfaceMatch.java", "BodyUseAPI": ["net.bytebuddy.description.type.TypeDescription.getSuperClass()", "org.skywalking.apm.plugin.spring.concurrent.match.EitherInterfaceMatch.matchHierarchyClazz(typeDescription.getSuperClass(),org.skywalking.apm.plugin.spring.concurrent.match.EitherInterfaceMatch.MatchResult)"], "Fixed commit": "e63e0332637227c3819dd5cb1050b1550b2309de", "Url": "https://api.github.com/repos/apache/incubator-skywalking", "Date": "2017-12-04T16:56:58Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.geoserver.catalog.Catalog.getFeatureTypeByDataStore(org.geoserver.catalog.DataStoreInfo,java.lang.String)", "org.geoserver.catalog.Catalog.getLayerByName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((featureTypeInfo != null) && (layer == null)) { this.catalog.remove(featureTypeInfo); featureTypeInfo = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/5523/buggy-version/src.main.java.org.geosdi.wps.CRISMAWPS.java", "BodyUseAPI": ["org.geoserver.catalog.Catalog.remove(org.geoserver.catalog.FeatureTypeInfo)"], "Fixed commit": "bd7922fc83546efbff55af604405d074bae993ce", "Url": "https://api.github.com/repos/geosdi/icmm-client-wps", "Date": "2015-04-08T07:40:28Z"},
{"Line": "=>436", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((_tmpdatas) == null) && ((_model) != null)) && ((_model.getSize()) > 0)) { onInitRenderNow(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/8086/buggy-version/zul.src.org.zkoss.zul.Selectbox.java", "BodyUseAPI": [], "Fixed commit": "fa82f3836e906c67c8ad8e4841ff0c61626daee6", "Url": "https://api.github.com/repos/jumperchen/zk", "Date": "2013-07-31T09:55:45Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.lucene.search.spans.BooleanClause.getOccur()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (occur == (BooleanClause.Occur.FILTER)) occur = BooleanClause.Occur.MUST;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/2598/buggy-version/luwak.src.main.java.org.apache.lucene.search.spans.SpanRewriter.java", "BodyUseAPI": [], "Fixed commit": "1dca8043ca6634e7f07b9de94f0aabeb682aa2b7", "Url": "https://api.github.com/repos/bloomberg/luwak", "Date": "2015-10-12T11:36:06Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.example.student.pingpong.GameThread.canvas) != null) { try { surfaceHolder.unlockCanvasAndPost(com.example.student.pingpong.GameThread.canvas); } catch (java.lang.Exception e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/8126/buggy-version/android.Pingpong.app.src.main.java.com.example.student.pingpong.GameThread.java", "BodyUseAPI": [], "Fixed commit": "15738f1d53eb5de87d28cd318d9eec9203bf4c65", "Url": "https://api.github.com/repos/salpha2004/tk3-pingpong", "Date": "2016-04-27T20:38:43Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (templ < 0) templ = 65536 + templ;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/266/buggy-version/app.src.main.java.com.osaether.tristarmppt.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "a1eb67cc593d9dcfc4e34320f891d091a30dc135", "Url": "https://api.github.com/repos/osaether/tristarmppt", "Date": "2017-12-12T15:59:59Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (ndouble > (java.lang.Long.MAX_VALUE)) { throw new java.lang.IllegalArgumentException(\"A JHPL Lattice must not have more than 2^63-1 nodes\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/6913/buggy-version/src.main.de.linearbits.jhpl.JHPLSpace.java", "BodyUseAPI": [], "Fixed commit": "946af90c01c9f25c7ee4f954c9950c5cf6556ec3", "Url": "https://api.github.com/repos/prasser/jhpl", "Date": "2015-07-01T12:40:43Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((percent <= 0) || (percent > 100)) { com.wolvencraft.prison.mines.util.Message.sendError(\"Invalid percent value provided\"); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/7519/buggy-version/src.com.wolvencraft.prison.mines.cmd.TriggerCommand.java", "BodyUseAPI": [], "Fixed commit": "ecb75cad54898f6bf61426d7901c542acfab08a5", "Url": "https://api.github.com/repos/bitWolfy/PrisonMine", "Date": "2012-12-05T23:25:48Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (args[1].equalsIgnoreCase(\"composition\")) { if (args[2].equalsIgnoreCase(\"toggle\")) { if (curMine.getCompositionReset()) { curMine.setCompositionReset(false); com.wolvencraft.prison.mines.util.Message.sendCustom(curMine.getName(), ((\"Composition trigger is \" + (org.bukkit.ChatColor.RED)) + \"off\")); }else { curMine.setCompositionReset(true); com.wolvencraft.prison.mines.util.Message.sendCustom(curMine.getName(), ((\"Composition trigger is \" + (org.bukkit.ChatColor.GREEN)) + \"on\")); } }else { java.lang.String percentString = args[2]; if (percentString.endsWith(\"%\")) percentString.substring(0, ((percentString.length()) - 1)); double percent = (java.lang.Double.parseDouble(percentString)) / 100; if ((percent <= 0) || (percent > 100)) { com.wolvencraft.prison.mines.util.Message.sendError(\"Invalid percent value provided\"); return false; } curMine.setCompositionPercent(percent); com.wolvencraft.prison.mines.util.Message.sendCustom(curMine.getName(), ((((\"Mine will recet once it is \" + (org.bukkit.ChatColor.GOLD)) + percentString) + (org.bukkit.ChatColor.WHITE)) + \"% empty\")); } }else if (args[1].equalsIgnoreCase(\"global\")) { if (args[2].equalsIgnoreCase(\"toggle\")) { }else { } }else { com.wolvencraft.prison.mines.util.Message.sendError(com.wolvencraft.prison.mines.PrisonMine.getLanguage().ERROR_COMMAND); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/7519/buggy-version/src.com.wolvencraft.prison.mines.cmd.TriggerCommand.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)"], "Fixed commit": "ecb75cad54898f6bf61426d7901c542acfab08a5", "Url": "https://api.github.com/repos/bitWolfy/PrisonMine", "Date": "2012-12-05T23:25:48Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((score) >= 40) && (((levelUp) % 10) == 0)) { (lives)++; liveUpSound.play(); }else if (((levelUp) == 10) && ((score) <= 30)) { (lives)++; liveUpSound.play(); (difficultyMultiplier)++; levelUpSound.play(); levelUp = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/7447/buggy-version/AlienShooter.src.com.tomashernandez.alienshooter.Game.java", "BodyUseAPI": [], "Fixed commit": "c7b206c81326c138128854d6ceb324d8725723a5", "Url": "https://api.github.com/repos/ttoti/AlienShooter", "Date": "2014-01-03T00:18:27Z"},
{"Line": "=>1044", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.nschmidt.ldparteditor.workbench.WorkbenchManager.getUserSettingState().isBfcCertificationRequiredForLDrawMode())) { org.eclipse.swt.widgets.MessageBox messageBox = new org.eclipse.swt.widgets.MessageBox(getShell(), ((org.eclipse.swt.SWT.ICON_INFORMATION) | (org.eclipse.swt.SWT.OK))); messageBox.setText(\"Information:\"); messageBox.setMessage(\"Please note that this mode requires a BFC CERTIFIED source, which contains a valid\\n\\n0 BFC CERTIFY CCW\\n\\nor\\n\\n0 BFC CERTIFY CW\\n\\nstatement.\\nOtherwise this mode will not work properly.\"); messageBox.open(); org.nschmidt.ldparteditor.workbench.WorkbenchManager.getUserSettingState().setBfcCertificationRequiredForLDrawMode(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/5838/buggy-version/src.org.nschmidt.ldparteditor.composites.Composite3D.java", "BodyUseAPI": [], "Fixed commit": "7fb8fe198d079c28bd8cc044ccffc5776bf3cc97", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2015-06-03T10:54:13Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((task) != null) { task.cancel(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/8646/buggy-version/app.src.main.java.cz.nudz.www.trainingapp.data.DataExporter.java", "BodyUseAPI": [], "Fixed commit": "927581a78d876aaeccc36d0539880d763568952c", "Url": "https://api.github.com/repos/ayraz/TrainingApp", "Date": "2017-11-12T23:01:58Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((com.example.cmq.musicapp.PlayMusicActivity.mediaPlayer.isPlaying()) == true) { com.example.cmq.musicapp.PlayMusicActivity.mediaPlayer.stop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/8560/buggy-version/app.src.main.java.com.example.cmq.musicapp.PlayMusicActivity.java", "BodyUseAPI": ["android.media.MediaPlayer.stop()"], "Fixed commit": "b276267a5e6e428a762fe2d634955555a5b521d9", "Url": "https://api.github.com/repos/manhquynh-github/MusicApp", "Date": "2017-12-29T05:40:40Z"},
{"Line": "=>390", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.example.cmq.musicapp.PlayMusicActivity.mediaPlayer) != null) { com.example.cmq.musicapp.PlayMusicActivity.mediaPlayer.release(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/8560/buggy-version/app.src.main.java.com.example.cmq.musicapp.PlayMusicActivity.java", "BodyUseAPI": [], "Fixed commit": "b276267a5e6e428a762fe2d634955555a5b521d9", "Url": "https://api.github.com/repos/manhquynh-github/MusicApp", "Date": "2017-12-29T05:40:40Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (session.getLoading().getValue()) { session.setLoading(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/1271/buggy-version/app.src.main.java.org.mozilla.focus.session.SessionCallbackProxy.java", "BodyUseAPI": ["org.mozilla.focus.session.Session.setLoading(boolean)"], "Fixed commit": "ecb00c39c6d3bd96e962f0bfd1638e6c5de06c26", "Url": "https://api.github.com/repos/layely/focus-android", "Date": "2017-10-21T05:29:14Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (max_path_count == 0) { return new java.lang.String[]{ \"\" }; }else if (((paths.size()) <= max_path_count) || (max_path_count == (-1))) { return getPaths(); }else { return omnikryptec.util.ArrayUtil.copyOf(getPaths(), max_path_count); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/9196/buggy-version/src.omnikryptec.util.AdvancedFile.java", "BodyUseAPI": ["omnikryptec.util.ArrayUtil.copyOf(java.lang.String[],int)"], "Fixed commit": "5d0ac67d5919635a25fb40ea39101b4cc1858994", "Url": "https://api.github.com/repos/OmniKryptec/OmniKryptec-Engine", "Date": "2017-06-27T00:30:52Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mConnection) == null) { finish(); }else { mCommandHandler.updateComplete(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/556/buggy-version/android_app.src.de.viktorreiser.bansheeremote.activity.CurrentSongActivity.java", "BodyUseAPI": [], "Fixed commit": "52f09ab36471260997ca8a7c60077716295d6a53", "Url": "https://api.github.com/repos/Knickedi/banshee-remote", "Date": "2011-10-18T14:41:23Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.harku.dao.user.UsersDao.read(com.harku.model.user.UserFilterModel,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (userList.isEmpty()) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/3837/buggy-version/src.main.java.com.harku.service.user.UsersService.java", "BodyUseAPI": [], "Fixed commit": "ca6fea679e3f9d2955099905249226c83acb1af0", "Url": "https://api.github.com/repos/HarkuLi/javaDbPrac", "Date": "2017-10-31T06:11:01Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!multiModule) { boolean dependsOn = false; for (org.apache.maven.project.MavenProject p : modules) { if (p != proj) { java.util.List<org.apache.maven.model.Dependency> ds = p.getDependencies(); for (org.apache.maven.model.Dependency d : ds) { if (((proj.getArtifactId().equals(d.getArtifactId())) && (proj.getGroupId().equals(d.getGroupId()))) && (proj.getVersion().equals(d.getVersion()))) { dependsOn = true; } } } } if (!dependsOn) { result.put(proj, java.util.Arrays.asList(proj)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/517/buggy-version/src.main.java.org.gephi.maven.ModuleUtils.java", "BodyUseAPI": [], "Fixed commit": "9b56177d8e4eeb96ee779bd3ba3709551cec3cb3", "Url": "https://api.github.com/repos/gephi/gephi-maven-plugin", "Date": "2015-11-17T16:36:08Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.akquinet.audit.bsi.httpd.usersNrights.Quest11b.createDirectoryRoot_List(java.util.List<org.akquinet.httpd.syntax.Statement>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (dirList.isEmpty()) { org.akquinet.audit.bsi.httpd.usersNrights.Quest11b._uc.printAnswer(false, _labels.getString(\"S8\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/7808/buggy-version/ApacheBSIAuditHelper.src.org.akquinet.audit.bsi.httpd.usersNrights.Quest11b.java", "BodyUseAPI": [], "Fixed commit": "ad75689c2fd02f526538e054b82ab00d4816498d", "Url": "https://api.github.com/repos/inspector-cochise/cochise", "Date": "2011-05-27T15:30:30Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type == null) type = com.orientechnologies.orient.core.metadata.schema.OType.EMBEDDEDMAP;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/6143/buggy-version/core.src.main.java.com.orientechnologies.orient.core.serialization.serializer.record.string.ORecordSerializerSchemaAware2CSV.java", "BodyUseAPI": [], "Fixed commit": "7e01f80bda337f6c7042b499a2ded2766052cbcd", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2013-08-08T18:35:28Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((dateString != null) && ((dateString.length()) > 0)) { try { java.text.DateFormat df = new java.text.SimpleDateFormat(dateFormat); df.setLenient(false); df.parse(dateString); return true; } catch (java.text.ParseException e) { return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/6849/buggy-version/src.main.java.com.agiletec.apsadmin.util.CheckFormatUtil.java", "BodyUseAPI": ["java.text.DateFormat.parse(java.lang.String)"], "Fixed commit": "1a093f62206e71623f9f4aef111f880df801c13d", "Url": "https://api.github.com/repos/entando/entando-core-engine", "Date": "2013-02-22T10:28:57Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(e.hasContent())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/3352/buggy-version/src.jbattle.client.Turn.java", "BodyUseAPI": [], "Fixed commit": "52d03c65d585d94ce83d6a0f53c0dae15028b249", "Url": "https://api.github.com/repos/Syynth/JBattleShip", "Date": "2013-04-08T14:41:35Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(e.hasContent())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/3352/buggy-version/src.jbattle.client.Turn.java", "BodyUseAPI": [], "Fixed commit": "52d03c65d585d94ce83d6a0f53c0dae15028b249", "Url": "https://api.github.com/repos/Syynth/JBattleShip", "Date": "2013-04-08T14:41:35Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.max(int,((getWidth()) / (regionWidth + gapWidthSize)))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (maxCol == 1) { regionWidth = getWidth(); regionHeight = ((int) (regionWidth / regionRatio)); if (regionHeight > (getHeight())) { regionHeight = getHeight(); regionWidth = ((int) (regionHeight * regionRatio)); } gapWidthSize = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/8909/buggy-version/app.src.main.java.kr.ac.kaist.team888.mylittlefont.FontCanvasView.java", "BodyUseAPI": [], "Fixed commit": "42cb85728906750c36bd74345c64fb6c9c01b1fe", "Url": "https://api.github.com/repos/MyLittleFont/MyLittleFont", "Date": "2017-05-30T11:22:08Z"},
{"Line": "=>400", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.qii.weiciyuan.ui.main.MainTimeLineActivity.getActionBar()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((actionBar.getNavigationMode()) != (android.app.ActionBar.NAVIGATION_MODE_STANDARD)) { second = actionBar.getSelectedNavigationIndex(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/2574/buggy-version/src.org.qii.weiciyuan.ui.main.MainTimeLineActivity.java", "BodyUseAPI": ["android.app.ActionBar.getSelectedNavigationIndex()"], "Fixed commit": "6218293759a2076837da6311edbf66e884e97a65", "Url": "https://api.github.com/repos/qii/weiciyuan", "Date": "2013-05-11T16:14:49Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.shortninja.staffplus.player.UserManager.get(java.util.UUID)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (user == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/5806/buggy-version/StaffPlusCore.src.main.java.net.shortninja.staffplus.server.listener.entity.EntityDamage.java", "BodyUseAPI": [], "Fixed commit": "d8a003f51ae8523981b6660459999b28ec89d052", "Url": "https://api.github.com/repos/Qballl/StaffPlus", "Date": "2017-09-14T03:52:30Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.getResult()) instanceof group.g203.justalittlefit.model.Workout) { group.g203.justalittlefit.model.Workout workout = ((group.g203.justalittlefit.model.Workout) (event.getResult())); if (workout == null) { android.support.design.widget.Snackbar.make(getActivity().findViewById(R.id.fab), getString(R.string.workout_list_error), Snackbar.LENGTH_LONG).show(); }else { createExerciseRadioGroup(workout); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/5033/buggy-version/app.src.main.java.group.g203.justalittlefit.dialog.SelectExerciseDialog.java", "BodyUseAPI": ["group.g203.justalittlefit.database.DbTaskResult.getResult()"], "Fixed commit": "88029c6b7f660ffde4bb830bc97bdfc8f96ee716", "Url": "https://api.github.com/repos/tmsmart/just-a-little-fit", "Date": "2016-01-15T05:26:08Z"},
{"Line": "=>544", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["event.getPacket().getEntityModifier(observer.getWorld()).read(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (entity instanceof org.bukkit.entity.LivingEntity) { try { obj = org.bukkit.entity.LivingEntity.class.getMethod(\"getHealth\").invoke(entity); } catch (java.lang.Exception e) { e.printStackTrace(); } if (((obj instanceof java.lang.Float) && (((java.lang.Float) (obj)) == 0)) || (((java.lang.Integer) (obj)) == 0)) { soundType = me.libraryaddict.disguise.disguisetypes.DisguiseSound.SoundType.DEATH; }else { obj = null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/5794/buggy-version/src.me.libraryaddict.disguise.PacketsManager.java", "BodyUseAPI": ["java.lang.reflect.Method.invoke(org.bukkit.entity.Entity)"], "Fixed commit": "86d728f90deb63e0ceac51671b39c1bc8c28843f", "Url": "https://api.github.com/repos/libraryaddict/LibsDisguises", "Date": "2013-11-22T15:20:03Z"},
{"Line": "=>556", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (obj == null) { soundType = me.libraryaddict.disguise.disguisetypes.DisguiseSound.SoundType.HURT; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/5794/buggy-version/src.me.libraryaddict.disguise.PacketsManager.java", "BodyUseAPI": [], "Fixed commit": "86d728f90deb63e0ceac51671b39c1bc8c28843f", "Url": "https://api.github.com/repos/libraryaddict/LibsDisguises", "Date": "2013-11-22T15:20:03Z"},
{"Line": "=>414", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (entity instanceof org.bukkit.entity.LivingEntity) { try { obj = org.bukkit.entity.LivingEntity.class.getMethod(\"getHealth\").invoke(entity); } catch (java.lang.Exception e) { e.printStackTrace(); } if (((obj instanceof java.lang.Float) && (((java.lang.Float) (obj)) == 0)) || (((java.lang.Integer) (obj)) == 0)) { soundType = me.libraryaddict.disguise.disguisetypes.DisguiseSound.SoundType.DEATH; }else { obj = null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/5794/buggy-version/src.me.libraryaddict.disguise.PacketsManager.java", "BodyUseAPI": ["java.lang.reflect.Method.invoke(org.bukkit.entity.Entity)"], "Fixed commit": "86d728f90deb63e0ceac51671b39c1bc8c28843f", "Url": "https://api.github.com/repos/libraryaddict/LibsDisguises", "Date": "2013-11-22T15:20:03Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (period == (org.jboss.logmanager.handlers.PeriodicRotatingFileHandler.Period.WEEK)) { calendar.set(java.util.Calendar.DAY_OF_WEEK, calendar.getFirstDayOfWeek()); }else { calendar.clear(java.util.Calendar.DAY_OF_WEEK); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/4287/buggy-version/src.main.java.org.jboss.logmanager.handlers.PeriodicRotatingFileHandler.java", "BodyUseAPI": [], "Fixed commit": "d15d08dd0b9e73809993ed3da36b744ff50e0dc0", "Url": "https://api.github.com/repos/onagano-rh/jboss-logmanager", "Date": "2013-07-08T20:55:07Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (orderStatus == (Order.OrderStatus.NEW)) { return entityManager.createQuery((\"Select o from Order o where o.removed = false \" + \"And o.orderStatus = :orderStatus\")).setParameter(\"orderStatus\", orderStatus).getResultList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/1026/buggy-version/src.main.java.ua.kpi.mobiledev.repository.OrderRepositoryImpl.java", "BodyUseAPI": ["entityManager.createQuery((\"Select o from Order o where o.removed = false \" + \"And o.orderStatus = :orderStatus\")).setParameter(\"orderStatus\", orderStatus).getResultList()", "entityManager.createQuery((\"Select o from Order o where o.removed = false \" + \"And o.orderStatus = :orderStatus\")).setParameter(java.lang.String,Order.OrderStatus)"], "Fixed commit": "a1d5d85c277b98c3affeb313f0f934126cd155b5", "Url": "https://api.github.com/repos/OlehKakherskiy/TaxiServiceServer", "Date": "2017-05-21T21:58:09Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (topicId == (-1)) { setProgressTopic(bimServer.getNotificationsManager().createProgressOnProjectTopic(authorization.getUoid(), checkinDatabaseAction.getPoid(), SProgressTopicType.UPLOAD, \"Checkin\")); }else { setProgressTopic(bimServer.getNotificationsManager().getProgressTopic(topicId)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/2811/buggy-version/BimServer.src.org.bimserver.longaction.LongCheckinAction.java", "BodyUseAPI": [], "Fixed commit": "89af4279e9e32b5c72cbc51aa6f58b145d2ff071", "Url": "https://api.github.com/repos/opensourceBIM/BIMserver", "Date": "2015-12-03T10:42:21Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((uk.ac.ebi.embl.api.validation.helper.DataclassProvider.entryDaoUtils) != null) { dataclass = uk.ac.ebi.embl.api.validation.helper.DataclassProvider.entryDaoUtils.getAccessionDataclass(prefix); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/8731/buggy-version/embl-api-core.src.main.java.uk.ac.ebi.embl.api.validation.helper.DataclassProvider.java", "BodyUseAPI": [], "Fixed commit": "45356e61c5202a483a4791e407d9bdb6341f55d8", "Url": "https://api.github.com/repos/enasequence/sequencetools", "Date": "2016-07-20T11:12:00Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uk.ac.ebi.embl.api.entry.Entry.getPrimarySourceFeature()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (source == null) return result;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/8731/buggy-version/embl-api-core.src.main.java.uk.ac.ebi.embl.api.validation.check.entry.OrganismAndPermittedQualifierCheck.java", "BodyUseAPI": [], "Fixed commit": "45356e61c5202a483a4791e407d9bdb6341f55d8", "Url": "https://api.github.com/repos/enasequence/sequencetools", "Date": "2016-07-20T11:12:00Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (gameType.equals(\"1\")) java.lang.System.out.println(\"NOTE: In AI vs. Player, AI is always player 1 and Player is always player 2.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/4212/buggy-version/checkers.java", "BodyUseAPI": [], "Fixed commit": "ef752e29eb1c59fb2e6324cdba696e0f459b5c12", "Url": "https://api.github.com/repos/anagalingam/checkers-ai", "Date": "2017-11-05T00:18:09Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(fragment.isVisible())) || (fragment.isDetached())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/6710/buggy-version/app.src.main.java.tdd.tracker.hobby.hobbytrackerincremental.main.StartActivity.java", "BodyUseAPI": [], "Fixed commit": "fd5665184c5aca151ac45c175914620b170a0ace", "Url": "https://api.github.com/repos/jpalvarezl/HobbyTracker", "Date": "2016-10-06T13:58:03Z"},
{"Line": "=>522", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((null == ep) && (0 < (endpointMap.size()))) { ep = endpointMap.entrySet().iterator().next().getValue(); final esa.mo.mal.transport.gen.GENMessage retMsg = ((esa.mo.mal.transport.gen.GENMessage) (ep.createMessage(srcHdr.getAuthenticationId(), srcHdr.getURIFrom(), new esa.mo.mal.transport.gen.Time(new java.util.Date().getTime()), srcHdr.getQoSlevel(), srcHdr.getPriority(), srcHdr.getDomain(), srcHdr.getNetworkZone(), srcHdr.getSession(), srcHdr.getSessionName(), srcHdr.getInteractionType(), new esa.mo.mal.transport.gen.UOctet(((short) ((srcHdr.getInteractionStage().getValue()) + 1))), srcHdr.getTransactionId(), srcHdr.getServiceArea(), srcHdr.getService(), srcHdr.getOperation(), srcHdr.getAreaVersion(), true, oriMsg.getQoSProperties(), errorNumber, new esa.mo.mal.transport.gen.Union(errorMsg)))); sendMessage(ep, null, true, retMsg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/1631/buggy-version/CCSDS_MAL_TRANSPORT_GEN.src.main.java.esa.mo.mal.transport.gen.GENTransport.java", "BodyUseAPI": ["endpointMap.entrySet().iterator()", "endpointMap.entrySet().iterator().next().getValue()", "endpointMap.entrySet().iterator().next()", "java.util.Map<java.lang.String, esa.mo.mal.transport.gen.GENEndpoint>.entrySet()"], "Fixed commit": "efcddbd95299ab331169a029fa51ba26a698dc3f", "Url": "https://api.github.com/repos/esa/CCSDS_MO_TRANS", "Date": "2014-06-10T10:01:23Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((remotePlayer) != null) && (remotePlayer.isAlive())) remotePlayer.interrupt();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/2461/buggy-version/app.src.main.java.com.cybor.gamehorse.core.NetworkManager.java", "BodyUseAPI": ["java.lang.Thread.interrupt()"], "Fixed commit": "34d02ac6f01004ecb351b4c6e7cc001c8ab9ecbe", "Url": "https://api.github.com/repos/muhametshin1997/gamehorse", "Date": "2017-01-26T20:22:05Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["view.MainWindow.pL.getTheJList().getSelectedIndex()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (i == (-1)) { javax.swing.JOptionPane.showMessageDialog(null, \"You must select an Action from the Pseudocode List to Expand\", \"Invalid Selection\", javax.swing.JOptionPane.WARNING_MESSAGE); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/2965/buggy-version/src.view.MainWindow.java", "BodyUseAPI": [], "Fixed commit": "b6a6ad96e8b122be0e680652c03f346c56ed0011", "Url": "https://api.github.com/repos/chungs/Kodename2", "Date": "2014-12-11T05:04:12Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wso2.carbon.ndatasource.rdbms.RDBMSDataSourceReader.loadConfig(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((rdbmsConfiguration.getUsername()) != null) { connection = java.sql.DriverManager.getConnection(rdbmsConfiguration.getUrl(), rdbmsConfiguration.getUsername(), rdbmsConfiguration.getPassword()); }else { connection = java.sql.DriverManager.getConnection(rdbmsConfiguration.getUrl()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/1148/buggy-version/core.org.wso2.carbon.ndatasource.rdbms.src.main.java.org.wso2.carbon.ndatasource.rdbms.RDBMSDataSourceReader.java", "BodyUseAPI": ["org.wso2.carbon.ndatasource.rdbms.RDBMSConfiguration.getUrl()", "org.wso2.carbon.ndatasource.rdbms.RDBMSConfiguration.getPassword()", "java.sql.DriverManager.getConnection(rdbmsConfiguration.getUrl())", "org.wso2.carbon.ndatasource.rdbms.RDBMSConfiguration.getUsername()", "org.wso2.carbon.ndatasource.rdbms.RDBMSConfiguration.getUrl()", "java.sql.DriverManager.getConnection(rdbmsConfiguration.getUrl(),rdbmsConfiguration.getUsername(),rdbmsConfiguration.getPassword())"], "Fixed commit": "07fe851a90ca98486d7d32f5c3a3ec6495a23d74", "Url": "https://api.github.com/repos/madhawa-gunasekara/carbon4-kernel", "Date": "2015-09-29T19:06:34Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (connection != null) { try { connection.close(); } catch (java.sql.SQLException e) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/1148/buggy-version/core.org.wso2.carbon.ndatasource.rdbms.src.main.java.org.wso2.carbon.ndatasource.rdbms.RDBMSDataSourceReader.java", "BodyUseAPI": ["java.sql.Connection.close()"], "Fixed commit": "07fe851a90ca98486d7d32f5c3a3ec6495a23d74", "Url": "https://api.github.com/repos/madhawa-gunasekara/carbon4-kernel", "Date": "2015-09-29T19:06:34Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this) == o) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/783/buggy-version/src.main.java.com.example.Dollar.java", "BodyUseAPI": [], "Fixed commit": "d552ffe712e978de85435c8ecf6dde68165efe53", "Url": "https://api.github.com/repos/dev-null00/tddByExample", "Date": "2017-01-07T16:41:56Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((o == null) || ((getClass()) != (o.getClass()))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/783/buggy-version/src.main.java.com.example.Dollar.java", "BodyUseAPI": [], "Fixed commit": "d552ffe712e978de85435c8ecf6dde68165efe53", "Url": "https://api.github.com/repos/dev-null00/tddByExample", "Date": "2017-01-07T16:41:56Z"},
{"Line": "=>512", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.android.mms.transaction.MessagingNotification.includeEmergencySMS) && (context.getResources().getBoolean(R.bool.config_regional_sms_notification_from_911_disable))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/3160/buggy-version/src.com.android.mms.transaction.MessagingNotification.java", "BodyUseAPI": [], "Fixed commit": "58ec38663f4952c446c2b7a2d5aba111533a60ff", "Url": "https://api.github.com/repos/redmi2/android_packages_apps_Mms", "Date": "2016-01-09T17:27:42Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["soot.jimple.spark.builder.QueueReader<soot.jimple.spark.builder.Edge>.next()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((e.tgt().isConcrete()) || (e.tgt().isNative())) soot.jimple.spark.builder.MethodPAG.v(pag, e.tgt()).addToPAG(null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/9119/buggy-version/src.soot.jimple.spark.builder.ContextInsensitiveBuilder.java", "BodyUseAPI": ["soot.jimple.spark.builder.Edge.tgt()", "soot.jimple.spark.builder.MethodPAG.v(soot.jimple.spark.builder.PAG,e.tgt())", "soot.jimple.spark.builder.MethodPAG.v(pag, e.tgt()).addToPAG(<nulltype>)"], "Fixed commit": "715b3946dde964bbe10cad69b9d3e02f0e0ff580", "Url": "https://api.github.com/repos/plast-lab/soot", "Date": "2016-02-05T18:05:02Z"},
{"Line": "=>381", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((exportSelector.getFileName()) == null) || ((exportSelector.getFileName().length()) == 0)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/8704/buggy-version/journal.src.net.viperfish.journal.swtGui.JournalWindow.java", "BodyUseAPI": [], "Fixed commit": "de9ea806361d899ca42f220ccf784e1a36438bef", "Url": "https://api.github.com/repos/shilongdai/vsDiaryWriter", "Date": "2016-04-10T01:39:54Z"},
{"Line": "=>419", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.getAbsolutePath()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((selected == null) || ((selected.length()) == 0)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/8704/buggy-version/journal.src.net.viperfish.journal.swtGui.JournalWindow.java", "BodyUseAPI": [], "Fixed commit": "de9ea806361d899ca42f220ccf784e1a36438bef", "Url": "https://api.github.com/repos/shilongdai/vsDiaryWriter", "Date": "2016-04-10T01:39:54Z"},
{"Line": "=>348", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jme3.animation.BoneTrack.getScales()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (oldScales != null) { newScales[newIndex] = oldScales[oldIndex].clone(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/7841/buggy-version/heart.src.main.java.jme3utilities.MyAnimation.java", "BodyUseAPI": ["oldScales[oldIndex].clone()"], "Fixed commit": "a47ce9cb5503cb6197aa332830dfd0667f6d777c", "Url": "https://api.github.com/repos/stephengold/jme3-utilities", "Date": "2017-07-20T07:19:23Z"},
{"Line": "=>356", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newScales == null) { result = new com.jme3.animation.BoneTrack(boneIndex, newTimes, newTranslations, newRotations); }else { result = new com.jme3.animation.BoneTrack(boneIndex, newTimes, newTranslations, newRotations, newScales); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/7841/buggy-version/heart.src.main.java.jme3utilities.MyAnimation.java", "BodyUseAPI": [], "Fixed commit": "a47ce9cb5503cb6197aa332830dfd0667f6d777c", "Url": "https://api.github.com/repos/stephengold/jme3-utilities", "Date": "2017-07-20T07:19:23Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Long.valueOf(jobPo.getInternalExtParam(Constants.FIRST_FIRE_TIME))", "com.github.ltsopensource.core.commons.utils.DateUtils.addMinute(lastGenerateTime, scheduleIntervalMinute).getTime()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (endTime <= firstTriggerTime) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/5708/buggy-version/lts-core.src.main.java.com.github.ltsopensource.queue.support.NonRelyJobUtils.java", "BodyUseAPI": [], "Fixed commit": "12e64d12f2fcb9d4b99b6abc9597ab391bace5c1", "Url": "https://api.github.com/repos/ltsopensource/light-task-scheduler", "Date": "2016-07-01T03:53:29Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((PROBLEM_NUM) > 0) { createView(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/310/buggy-version/app.src.main.java.com.primehana.jacky.starrygoldacademy.ui.fragment.QuizFragment.java", "BodyUseAPI": [], "Fixed commit": "e8afefc12d0e3f82e6e9025991abf7a9af7cc9b2", "Url": "https://api.github.com/repos/git-gru/Starry_Android", "Date": "2017-11-14T07:40:33Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((functionCode) == 3) { if ((rightArg) == 0) { result = 0; }else { result = (leftArg) / (rightArg); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/4918/buggy-version/Calculator.app.src.main.java.cmu.calculator.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "4dc82a3666345875ac588ff6a6b2de62586d5cfe", "Url": "https://api.github.com/repos/justinguo/MobileIoT", "Date": "2017-04-05T14:08:10Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.enosh.itchatService.service.EmailReceiverService.getFromUserName(fromAddress[0].toString())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (adminEmail.trim().equals(from.trim())) { if (!(com.enosh.itchatService.utils.StringUtils.isEmpty(name))) { user = userService.findOrCreateUserByName(name); }else { user = userService.findByEmailOrName(from, name); } }else { user = userService.findByEmailOrName(from, name); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/1183/buggy-version/src.main.java.com.enosh.itchatService.service.EmailReceiverService.java", "BodyUseAPI": ["com.enosh.itchatService.service.UserService.findByEmailOrName(java.lang.String,java.lang.String)", "com.enosh.itchatService.service.UserService.findByEmailOrName(java.lang.String,java.lang.String)"], "Fixed commit": "bb37990d02e3532330a1d43527d14bb3374574b4", "Url": "https://api.github.com/repos/huangyaosi/itchatService", "Date": "2017-08-22T02:21:57Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((toRemove.getLength()) == 0) { throw new java.lang.IllegalArgumentException((\"Cannot remove an empty source range: \" + toRemove)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/2734/buggy-version/plugin.src.main.java.org.autorefactor.refactoring.Refactorings.java", "BodyUseAPI": [], "Fixed commit": "e260b5bec5261fa4825b8a70ca156849461ac748", "Url": "https://api.github.com/repos/JnRouvignac/AutoRefactor", "Date": "2015-09-16T13:03:40Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((parameters.get(key)) != null) { nameValuePairs.add(new org.apache.http.message.BasicNameValuePair(key, parameters.get(key).toString())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/810/buggy-version/src.main.java.com.eweblib.util.HttpClientUtil.java", "BodyUseAPI": ["java.util.List<org.apache.http.NameValuePair>.add(org.apache.http.message.BasicNameValuePair)", "java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)", "java.lang.Object.toString()"], "Fixed commit": "101a9e3862360c03be513d663de38294fec92eb0", "Url": "https://api.github.com/repos/antme/_eweblib", "Date": "2014-06-17T08:57:33Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((celltext == null) || (celltext.isEmpty())) { NullF = getNullFont(); celltext = getDefaultNullValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/651/buggy-version/src.main.java.ru.onyx.clipper.pdfgenerator.model.ReportCell.java", "BodyUseAPI": [], "Fixed commit": "8a18298a4a1681d7d6e1dd6005d4176edd981aad", "Url": "https://api.github.com/repos/MasterSPB/pdf-generator", "Date": "2015-09-03T15:01:07Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((com.alibaba.akita.widget.remoteimageview.RemoteImageLoader.sImageCache) == null) { com.alibaba.akita.widget.remoteimageview.RemoteImageLoader.sImageCache = com.alibaba.akita.cache.AkCacheManager.getImageFilesCache(context); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/3004/buggy-version/akita-1.0.src.com.alibaba.akita.widget.remoteimageview.RemoteImageLoader.java", "BodyUseAPI": [], "Fixed commit": "c7edf0e0004d0c5deaa551d979acbe1e399863d8", "Url": "https://api.github.com/repos/xjanker/akita", "Date": "2012-05-20T13:21:12Z"},
{"Line": "=>568", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (error) { showToast(\"Encountered an error during pack installation.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/8797/buggy-version/src.com.buzzwords.PackPurchaseActivity.java", "BodyUseAPI": [], "Fixed commit": "0f6930a4b4dede591893e4b016729d2195ee81be", "Url": "https://api.github.com/repos/siramix/buzzwords", "Date": "2012-11-04T20:51:15Z"},
{"Line": "=>317", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((blockNormal.getNorm()) == 0) blockNormal = new org.apache.commons.math3.geometry.euclidean.threed.Vector3D(1, 0, 0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/649/buggy-version/src.main.java.org.jtrfp.trcl.core.ResourceManager.java", "BodyUseAPI": [], "Fixed commit": "9d2224424650b4800143947480de3c9a5367b6c5", "Url": "https://api.github.com/repos/jtrfp/terminal-recall", "Date": "2014-06-19T07:15:51Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (level > 0) { level += level; while (level > (com.fasterxml.jackson.core.util.DefaultPrettyPrinter.Lf2SpacesIndenter.SPACE_COUNT)) { jg.writeRaw(com.fasterxml.jackson.core.util.DefaultPrettyPrinter.Lf2SpacesIndenter.SPACES, 0, com.fasterxml.jackson.core.util.DefaultPrettyPrinter.Lf2SpacesIndenter.SPACE_COUNT); level -= com.fasterxml.jackson.core.util.DefaultPrettyPrinter.Lf2SpacesIndenter.SPACES.length; } jg.writeRaw(com.fasterxml.jackson.core.util.DefaultPrettyPrinter.Lf2SpacesIndenter.SPACES, 0, level); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/1019/buggy-version/src.main.java.com.fasterxml.jackson.core.util.DefaultPrettyPrinter.java", "BodyUseAPI": [], "Fixed commit": "9b0fa95e2d1d515db1fd67fa5dcf794567729f35", "Url": "https://api.github.com/repos/FasterXML/jackson-core", "Date": "2012-09-28T17:55:54Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (that instanceof com.redhat.ceylon.compiler.typechecker.tree.Tree.MissingDeclaration) { return false; }else if ((id == null) || (id.isMissingToken())) { if (that instanceof com.redhat.ceylon.compiler.typechecker.tree.Tree.Constructor) { return true; }else { that.addError(\"missing declaration or argument name\"); return false; } }else { model.setName(id.getText()); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/2121/buggy-version/typechecker.src.com.redhat.ceylon.compiler.typechecker.analyzer.DeclarationVisitor.java", "BodyUseAPI": ["com.redhat.ceylon.compiler.typechecker.tree.Node.addError(java.lang.String)"], "Fixed commit": "ad7885207170297e039c866e42772a8c9576c42f", "Url": "https://api.github.com/repos/eclipse/ceylon", "Date": "2017-02-04T14:49:27Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((com.Heather_MonsterDriver.myMonstersNames[i].length()) <= 7) { java.lang.System.out.println((((((((((i + 1) + \"\\t\\t\") + (com.Heather_MonsterDriver.myMonstersNames[i])) + \"\\t\\t\") + (com.Heather_MonsterDriver.myMonstersHP[i])) + \"\\t\\t\") + (com.Heather_MonsterDriver.myMonstersAttack[i])) + \"\\t\\t\") + (com.Heather_MonsterDriver.myMonsterAlive[i]))); }else { java.lang.System.out.println((((((((((i + 1) + \"\\t\\t\") + (com.Heather_MonsterDriver.myMonstersNames[i].substring(0, 7))) + \"\\t\\t\") + (com.Heather_MonsterDriver.myMonstersHP[i])) + \"\\t\\t\") + (com.Heather_MonsterDriver.myMonstersAttack[i])) + \"\\t\\t\") + (com.Heather_MonsterDriver.myMonsterAlive[i]))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/5610/buggy-version/Java24.src.com.Heather_MonsterDriver.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)", "java.lang.String.substring(int,int)", "java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "7080d78cb7c6fb0ccbf9c25e0cf68d6fa03ca307", "Url": "https://api.github.com/repos/swerenfl/Personal", "Date": "2013-12-07T05:03:40Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((replace != null) && (biomeID == (java.lang.Integer.MIN_VALUE))) && (dimensionID == (java.lang.Integer.MIN_VALUE))) { generator = new terrails.terracore.world.generator.WorldGenCustomMinable(ore, minVeinSize, maxVeinSize, replace); }else if (((replace == null) && (biomeID == (java.lang.Integer.MIN_VALUE))) && (dimensionID == (java.lang.Integer.MIN_VALUE))) { switch (world.provider.getDimension()) { case -1 : generator = new terrails.terracore.world.generator.WorldGenCustomMinable(ore, minVeinSize, maxVeinSize, net.minecraft.init.Blocks.NETHERRACK); break; case 1 : generator = new terrails.terracore.world.generator.WorldGenCustomMinable(ore, minVeinSize, maxVeinSize, net.minecraft.init.Blocks.END_STONE); break; default : generator = new terrails.terracore.world.generator.WorldGenCustomMinable(ore, minVeinSize, maxVeinSize, net.minecraft.init.Blocks.STONE); break; } }else if (((replace == null) && (biomeID != (java.lang.Integer.MIN_VALUE))) && (dimensionID == (java.lang.Integer.MIN_VALUE))) { if ((world.getBiome(pos)) == (net.minecraft.world.biome.Biome.getBiome(biomeID))) switch (world.provider.getDimension()) { case -1 : generator = new terrails.terracore.world.generator.WorldGenCustomMinable(ore, minVeinSize, maxVeinSize, net.minecraft.init.Blocks.NETHERRACK); break; case 1 : generator = new terrails.terracore.world.generator.WorldGenCustomMinable(ore, minVeinSize, maxVeinSize, net.minecraft.init.Blocks.END_STONE); break; default : generator = new terrails.terracore.world.generator.WorldGenCustomMinable(ore, minVeinSize, maxVeinSize, net.minecraft.init.Blocks.STONE); break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/784/buggy-version/src.main.java.terrails.orecontroller.api.CustomOreGenerator.java", "BodyUseAPI": ["net.minecraft.world.biome.Biome.getBiome(int)"], "Fixed commit": "3507e005222dc120149293a78025eed474e07eb8", "Url": "https://api.github.com/repos/Terrails/OreController", "Date": "2017-11-03T14:27:18Z"},
{"Line": "=>284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (easyMode) Content.drawCenteredString(g, \"Easy Mode Active\", ((getWidth()) / 2), 50);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/7990/buggy-version/src.Content.java", "BodyUseAPI": [], "Fixed commit": "41e6fca6361601d5176ee5c6bbdecee0839c84ef", "Url": "https://api.github.com/repos/nolliepoper/Temp", "Date": "2013-11-25T19:04:09Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (player1) { resultCode = p1.setShip(x, y, false, type); }else { resultCode = p2.setShip(x, y, false, type); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/9102/buggy-version/src.Game.java", "BodyUseAPI": [], "Fixed commit": "f755948e36a243b3d3b49efa4da0ec38c9d873d3", "Url": "https://api.github.com/repos/kz4151/Battleship", "Date": "2017-10-12T22:47:57Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (player1) { resultCode = p1.setShip(x, y, true, type); }else { resultCode = p2.setShip(x, y, true, type); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/9102/buggy-version/src.Game.java", "BodyUseAPI": [], "Fixed commit": "f755948e36a243b3d3b49efa4da0ec38c9d873d3", "Url": "https://api.github.com/repos/kz4151/Battleship", "Date": "2017-10-12T22:47:57Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((val) == (-1)) { return Word.eof; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/931/buggy-version/src.lexer.Lexer.java", "BodyUseAPI": [], "Fixed commit": "369b346d42d7d1b380d638233a680a7a49927db5", "Url": "https://api.github.com/repos/romascom/Scanner", "Date": "2014-01-30T02:27:47Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.ResultSet.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((x != null) && ((x.isEmpty()) == false)) { inv = om.readValue(rs.getString(\"complJson\"), net.buchlese.bofc.api.bofc.PosInvoice.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/2849/buggy-version/bofc.src.main.java.net.buchlese.bofc.jdbi.bofc.PosInvoiceMapper.java", "BodyUseAPI": [], "Fixed commit": "fede9a8b20ae3c985bca236877e41b76ead362c5", "Url": "https://api.github.com/repos/blaurockm/posa", "Date": "2016-05-22T19:17:14Z"},
{"Line": "=>964", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (crData != null) { evtArr.get(((evtArr.size()) - 1)).putAll(crData); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/4097/buggy-version/src.main.java.org.agmip.translators.dssat.DssatXFileInput.java", "BodyUseAPI": ["java.util.LinkedHashMap.putAll(java.util.LinkedHashMap)"], "Fixed commit": "e73e4e904f47f971ddc5552bcbdd100240505c25", "Url": "https://api.github.com/repos/MengZhang/translator-dssat", "Date": "2012-08-08T22:11:33Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (max < (totals[i])) { max = totals[i]; maxIndex = i; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/3420/buggy-version/InterviewPuzzles.src.puzzles.kennyyu.greedy.WeightedIntervalSchedule.java", "BodyUseAPI": [], "Fixed commit": "77cd68bd24c6b1515ae3d6110441de0722586640", "Url": "https://api.github.com/repos/sabotuer99/InterviewPuzzles", "Date": "2017-01-04T17:05:18Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(mHelper.isNotSet())) { mHelper.setCompoundDrawablesWithIntrinsicBounds(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/5919/buggy-version/library.src.main.java.com.githang.drawablewidget.DrawableTextView.java", "BodyUseAPI": ["com.githang.drawablewidget.DrawableSizeHelper.setCompoundDrawablesWithIntrinsicBounds(com.githang.drawablewidget.DrawableTextView)"], "Fixed commit": "496a0bfae5690cd9c8e81df04fed417d5b387030", "Url": "https://api.github.com/repos/msdx/DrawableWidget", "Date": "2015-01-30T11:27:55Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(mHelper.isNotSet())) { mHelper.setCompoundDrawablesWithIntrinsicBounds(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/5919/buggy-version/library.src.main.java.com.githang.drawablewidget.DrawableButton.java", "BodyUseAPI": ["com.githang.drawablewidget.DrawableSizeHelper.setCompoundDrawablesWithIntrinsicBounds(com.githang.drawablewidget.DrawableButton)"], "Fixed commit": "496a0bfae5690cd9c8e81df04fed417d5b387030", "Url": "https://api.github.com/repos/msdx/DrawableWidget", "Date": "2015-01-30T11:27:55Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(mHelper.isNotSet())) { mHelper.setCompoundDrawablesWithIntrinsicBounds(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/5919/buggy-version/library.src.main.java.com.githang.drawablewidget.DrawableButton.java", "BodyUseAPI": ["com.githang.drawablewidget.DrawableSizeHelper.setCompoundDrawablesWithIntrinsicBounds(com.githang.drawablewidget.DrawableButton)"], "Fixed commit": "496a0bfae5690cd9c8e81df04fed417d5b387030", "Url": "https://api.github.com/repos/msdx/DrawableWidget", "Date": "2015-01-30T11:27:55Z"},
{"Line": "=>367", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(dirtyState_.getValue())) { java.lang.String frontMatter = org.rstudio.studio.client.rmarkdown.model.YamlFrontMatter.getFrontMatter(docDisplay_); if (!(org.rstudio.core.client.StringUtil.isNullOrEmpty(frontMatter))) { java.lang.String yamlMode = org.rstudio.studio.client.rmarkdown.model.RmdEditorOptions.getString(frontMatter, org.rstudio.studio.client.workbench.views.source.editors.text.rmd.TextEditingTargetNotebook.CHUNK_OUTPUT_TYPE, null); if (!(org.rstudio.core.client.StringUtil.isNullOrEmpty(yamlMode))) { java.lang.String docMode = docUpdateSentinel_.getProperty(org.rstudio.studio.client.workbench.views.source.editors.text.rmd.TextEditingTargetNotebook.CHUNK_OUTPUT_TYPE); if (yamlMode != docMode) { docUpdateSentinel_.setProperty(org.rstudio.studio.client.workbench.views.source.editors.text.rmd.TextEditingTargetNotebook.CHUNK_OUTPUT_TYPE, yamlMode); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/7422/buggy-version/src.gwt.src.org.rstudio.studio.client.workbench.views.source.editors.text.rmd.TextEditingTargetNotebook.java", "BodyUseAPI": [], "Fixed commit": "3bea96b60056eb47fde7a0949a358d9a6e05a6e1", "Url": "https://api.github.com/repos/rstudio/rstudio", "Date": "2017-08-01T20:57:08Z"},
{"Line": "=>666", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bytedeco.javacpp.tools.Parser.type(org.bytedeco.javacpp.tools.Context)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((valueType && (type.constValue)) && (dcl.reference)) { cast = cast.substring(0, ((cast.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/6994/buggy-version/src.main.java.org.bytedeco.javacpp.tools.Parser.java", "BodyUseAPI": [], "Fixed commit": "dd145115fdd1ccf68c16c3acf99c700ea3a46ec3", "Url": "https://api.github.com/repos/bytedeco/javacpp", "Date": "2014-06-28T03:11:02Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["directi.androidteam.training.chatclient.Roster.RosterManager.getInstance().getRosterItem(java.lang.String,java.lang.String)", "android.view.ViewGroup.findViewById(R.id.chatfragment_image)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((imageView != null) && (re != null)) imageView.setImageBitmap(re.getAvatar());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/3415/buggy-version/src.directi.androidteam.training.chatclient.Chat.ChatFragment.java", "BodyUseAPI": ["android.widget.ImageView.setImageBitmap(re.getAvatar())", "directi.androidteam.training.chatclient.Roster.RosterItem.getAvatar()"], "Fixed commit": "041b8793eb5d9dff51d9e452ac8cc816e07cdfdf", "Url": "https://api.github.com/repos/vinayakbhavnani/android_chat_client", "Date": "2012-10-22T11:45:28Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mListMiniatures.isEmpty()) prcUpdateRecyclerView(mDB.getListTV(), false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/2337/buggy-version/app.src.main.java.com.gerus.themovie.views.fragments.SeriesFragment.java", "BodyUseAPI": [], "Fixed commit": "c4dcff48f17eec1acde795313fd615ab56f739bf", "Url": "https://api.github.com/repos/gerus9/TheMovie", "Date": "2017-03-25T21:51:59Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.gerus.themovie.utils.UNetwork.isOnline(mContext)) mDB.clearTableTV();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/2337/buggy-version/app.src.main.java.com.gerus.themovie.views.fragments.SeriesFragment.java", "BodyUseAPI": [], "Fixed commit": "c4dcff48f17eec1acde795313fd615ab56f739bf", "Url": "https://api.github.com/repos/gerus9/TheMovie", "Date": "2017-03-25T21:51:59Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mListMiniatures.isEmpty()) prcUpdateRecyclerView(mDB.getListMovies(), false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/2337/buggy-version/app.src.main.java.com.gerus.themovie.views.fragments.MoviesFragment.java", "BodyUseAPI": [], "Fixed commit": "c4dcff48f17eec1acde795313fd615ab56f739bf", "Url": "https://api.github.com/repos/gerus9/TheMovie", "Date": "2017-03-25T21:51:59Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.gerus.themovie.utils.UNetwork.isOnline(mContext)) mDB.clearTableMovies();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/2337/buggy-version/app.src.main.java.com.gerus.themovie.views.fragments.MoviesFragment.java", "BodyUseAPI": [], "Fixed commit": "c4dcff48f17eec1acde795313fd615ab56f739bf", "Url": "https://api.github.com/repos/gerus9/TheMovie", "Date": "2017-03-25T21:51:59Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.badlogic.gdx.utils.Array<com.badlogic.gdx.scenes.scene2d.Action>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (action.act(delta)) { finishedCount++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/928/buggy-version/catroid.src.org.catrobat.catroid.content.Look.java", "BodyUseAPI": [], "Fixed commit": "09cfa78a577f9c2cbb9c74c07a9a319a245277d1", "Url": "https://api.github.com/repos/Catrobat/Catroid", "Date": "2013-02-20T14:11:13Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.catrobat.catroid.content.Look.getActions()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (finishedCount == (actions.size)) { allActionAreFinished = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/928/buggy-version/catroid.src.org.catrobat.catroid.content.Look.java", "BodyUseAPI": [], "Fixed commit": "09cfa78a577f9c2cbb9c74c07a9a319a245277d1", "Url": "https://api.github.com/repos/Catrobat/Catroid", "Date": "2013-02-20T14:11:13Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (f instanceof de.jpaw.bonaparte.pojos.meta.BinaryElementaryDataItem) { de.jpaw.bonaparte.pojos.meta.BinaryElementaryDataItem a = ((de.jpaw.bonaparte.pojos.meta.BinaryElementaryDataItem) (f)); d.setWidth(width((2 + (2 * (a.getLength()))))); d.setAlignment(Alignment.LEFT); d.setLayoutHint(LayoutHint.TEXT); columns.add(d); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/6097/buggy-version/bonaparte-api.src.main.java.de.jpaw.bonaparte.api.ColumnCollector.java", "BodyUseAPI": [], "Fixed commit": "7b1eeaf06d999dc7ff2c5f219cd2be63c9f79449", "Url": "https://api.github.com/repos/jpaw/bonaparte-java", "Date": "2017-01-07T15:21:55Z"},
{"Line": "=>821", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (configSetting.equalsIgnoreCase(\"Disabled\")) { return ClaimsMode.Disabled; }else if (configSetting.equalsIgnoreCase(\"SurvivalRequiringClaims\")) { return ClaimsMode.SurvivalRequiringClaims; }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/2206/buggy-version/src.me.ryanhamshire.GriefPrevention.GriefPrevention.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)"], "Fixed commit": "2f1e9af8d382d68deef89b557fe38550edb5cfda", "Url": "https://api.github.com/repos/wolfwork/GriefPrevention", "Date": "2015-02-21T04:08:38Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (term instanceof java.lang.Number) { return new jason.asSyntax.NumberTermImpl(((java.lang.Number) (term)).doubleValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/3481/buggy-version/jason.src.java.aorta.jason.TermConverter.java", "BodyUseAPI": [], "Fixed commit": "79d2d06f8fae12819c6b0e7327a324763d7ccea0", "Url": "https://api.github.com/repos/andreasschmidtjensen/aorta", "Date": "2014-11-27T14:42:17Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((paint.measureText(displayText)) > ((templateImage.getWidth()) * 0.829)) { java.lang.String stuff = displayText.substring(0, displayText.lastIndexOf(\" \")); drawTextWithImages(stuff, templateImage, combine, paint, resources, context); line += 0.06F; lineCount++; stuff = displayText.substring(displayText.lastIndexOf(\" \"), ((displayText.length()) - 1)); drawTextWithImages(stuff, templateImage, combine, paint, resources, context); }else { drawTextWithImages(displayText, templateImage, combine, paint, resources, context); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/3523/buggy-version/HexTCGDeckBuilder.src.com.ozawa.hextcgdeckbuilder.hexentities.Card.java", "BodyUseAPI": ["com.ozawa.hextcgdeckbuilder.hexentities.Card.drawTextWithImages(java.lang.String,android.graphics.Bitmap,android.graphics.Canvas,android.graphics.Paint,android.content.res.Resources,android.content.Context)", "java.lang.String.lastIndexOf(java.lang.String)", "java.lang.String.length()", "java.lang.String.substring(int,int)", "java.lang.String.substring(int,int)", "com.ozawa.hextcgdeckbuilder.hexentities.Card.drawTextWithImages(java.lang.String,android.graphics.Bitmap,android.graphics.Canvas,android.graphics.Paint,android.content.res.Resources,android.content.Context)", "com.ozawa.hextcgdeckbuilder.hexentities.Card.drawTextWithImages(java.lang.String,android.graphics.Bitmap,android.graphics.Canvas,android.graphics.Paint,android.content.res.Resources,android.content.Context)", "java.lang.String.lastIndexOf(java.lang.String)"], "Fixed commit": "069f0acf7aa6fc78c35302bfa6d0f5af570c4753", "Url": "https://api.github.com/repos/havocx42/ozawa", "Date": "2014-01-27T23:04:11Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((progressBar) != null) && ((captchaEditText) != null)) { progressBar.setVisibility(View.INVISIBLE); captchaEditText.setVisibility(View.VISIBLE); captchaEditText.setText(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/7820/buggy-version/app.src.main.java.com.keniobyte.bruino.minsegapp.utils.CaptchaDialog.java", "BodyUseAPI": [], "Fixed commit": "404ba8c626f33b25d7dfb7b26f5ed4b8772a42b0", "Url": "https://api.github.com/repos/Keniobyte/PoliceReportsMobile", "Date": "2017-04-26T15:41:13Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sum <= 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/5316/buggy-version/SPD-classes.src.main.java.com.watabou.utils.Random.java", "BodyUseAPI": [], "Fixed commit": "096d453cbb4dc53efea2302cd5a15f4ddbe268fd", "Url": "https://api.github.com/repos/Farxodor/shattered-pixel-dungeon", "Date": "2017-06-13T21:27:56Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (xml.exists()) { org.apache.commons.io.FileUtils.copyFileToDirectory(xml, dest_folder); xml.delete(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/311/buggy-version/app.src.main.java.kpchuck.k_klock.apkBuilder.java", "BodyUseAPI": ["java.io.File.delete()", "org.apache.commons.io.FileUtils.copyFileToDirectory(java.io.File,java.io.File)"], "Fixed commit": "41c97a94c18cb66135961798285721cf3dbd440b", "Url": "https://api.github.com/repos/KpChuck/K-Manager", "Date": "2017-11-03T17:26:34Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.n4js.n4JS.IdentifierRef.getId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (id instanceof org.eclipse.n4js.ts.types.TVariable) { org.eclipse.n4js.ts.types.TVariable tvar = ((org.eclipse.n4js.ts.types.TVariable) (id)); id = ((org.eclipse.n4js.n4JS.VariableDeclaration) (tvar.getAstElement())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/3271/buggy-version/plugins.org.eclipse.n4js.flowgraphs.src.org.eclipse.n4js.flowgraphs.analysers.UsedBeforeDeclaredAnalyser.java", "BodyUseAPI": [], "Fixed commit": "14924cb619e0e3952e3a96887faf974f8dd38069", "Url": "https://api.github.com/repos/eclipse/n4js", "Date": "2017-12-04T13:51:42Z"},
{"Line": "=>336", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mSharedPref.getBoolean(com.adtworker.mail.WatchActivity.PREF_BOSS_KEY, false)) { java.lang.Boolean bClockVisible = getClockVisibility(); if (bClockVisible) { mImageViews[mImageViewCurrent].setVisibility((bClockVisible ? android.view.View.GONE : android.view.View.VISIBLE)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/138/buggy-version/src.com.adtworker.mail.WatchActivity.java", "BodyUseAPI": [], "Fixed commit": "cd914122a603506b5030947bb92b1bde90030d74", "Url": "https://api.github.com/repos/adtworker/iWatch", "Date": "2012-03-11T07:42:12Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((email.compareTo(\"\")) == 0) { return new seedu.address.logic.parser.EmailCommand(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/889/buggy-version/src.main.java.seedu.address.logic.parser.Parser.java", "BodyUseAPI": [], "Fixed commit": "4903aaaef59d1f43c849f3ed96f571e93eb6113b", "Url": "https://api.github.com/repos/CS2103AUG2016-T16-C1/main", "Date": "2016-11-03T05:04:52Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((other instanceof ge.edu.freeuni.sdp.arkanoid.model.FrameBrick) && ((stickedBall) != null)) { ge.edu.freeuni.sdp.arkanoid.model.geometry.Point currPoint = getPosition(); stickedBall.getBall().setPosition(new ge.edu.freeuni.sdp.arkanoid.model.geometry.Point(((currPoint.X) + 1), ((currPoint.Y) - 1))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/3847/buggy-version/src.main.java.ge.edu.freeuni.sdp.arkanoid.model.StickyPaddle.java", "BodyUseAPI": [], "Fixed commit": "3553a90db296d2b3f873d4210bfafbbb97fb6450", "Url": "https://api.github.com/repos/freeuni-sdp/arkanoid-16", "Date": "2016-05-03T22:36:56Z"},
{"Line": "=>387", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (segmentStQueue.isEmpty()) { return java.util.Collections.emptyList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/1430/buggy-version/src.main.java.org.elasticsearch.search.spellcheck.ForkedDirectSpellChecker.java", "BodyUseAPI": [], "Fixed commit": "ffbf1a8db1cada263179f02212741eb2581a8a48", "Url": "https://api.github.com/repos/martijnvg/elasticsearch", "Date": "2013-01-08T12:08:04Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["wed.get(date).get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (data == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/8384/buggy-version/src.fingerprint.windows.MainFrame.java", "BodyUseAPI": [], "Fixed commit": "aeacb3e65fb5bc1533a146138def5d739883a96f", "Url": "https://api.github.com/repos/jaspertomas/fingerprintfilereader", "Date": "2013-10-11T12:07:31Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isSuperAdmin()) str = \"ROLE_SUPER_ADMIN\"; else str = \"ROLE_\" + (this.getName().toUpperCase());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/7529/buggy-version/src.main.java.com.Beendo.Entities.Role_Permission.java", "BodyUseAPI": [], "Fixed commit": "7dff0615876769a1c9facd207f0454292c020ba8", "Url": "https://api.github.com/repos/hassanrazakhalid/BeendoReborn", "Date": "2015-11-25T23:15:53Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Long, tachyon.master.lineage.meta.Lineage>.get(long)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (lineage == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/2247/buggy-version/servers.src.main.java.tachyon.master.lineage.meta.LineageStore.java", "BodyUseAPI": [], "Fixed commit": "08e5ea86ccca6d9b6f92433353dfdd58e35a8205", "Url": "https://api.github.com/repos/calvinjia/tachyon", "Date": "2015-10-16T18:02:35Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tachyon.master.lineage.meta.LineageStore.reportLostFile(long)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (lineage == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/2247/buggy-version/servers.src.main.java.tachyon.master.lineage.recompute.RecomputePlanner.java", "BodyUseAPI": [], "Fixed commit": "08e5ea86ccca6d9b6f92433353dfdd58e35a8205", "Url": "https://api.github.com/repos/calvinjia/tachyon", "Date": "2015-10-16T18:02:35Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((npc.getHp()) <= 0) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/3724/buggy-version/src.mygame.npc.NpcManager.java", "BodyUseAPI": [], "Fixed commit": "8cdb8352157102faf8b76d09c9ea4f2328ffbd25", "Url": "https://api.github.com/repos/WASDi/BigGameProject", "Date": "2012-04-19T21:15:28Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(Semantic.Semantic.LookUp(Semantic.Semantic.Extract(e)))) { Semantic.Semantic.Generate(\"Declare\", Semantic.Semantic.Extract(e), \"Integer\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/2054/buggy-version/src.Semantic.Semantic.java", "BodyUseAPI": ["Semantic.Semantic.Extract(Semantic.SemanticRecord)", "Semantic.Semantic.Generate(java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "f1d9b26835f061e8b4c0c9a3afc3d915bacdf2d3", "Url": "https://api.github.com/repos/paulwrodriguez/Universal-Compiler", "Date": "2015-12-01T10:08:39Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.httpClient.POST(this.targetRestEndpoint).header(HttpHeader.CONTENT_TYPE, \"application/json\").content(new org.eclipse.jetty.client.util.StringContentProvider(sensorDataJson)).timeout(500L, java.util.concurrent.TimeUnit.MILLISECONDS).send()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((response.getStatus()) != (HttpStatus.Code.OK.getCode())) { java.lang.System.out.println((\"response status code = \" + (response.getStatus()))); java.lang.System.out.println((\"message = \" + (response.getContentAsString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/664/buggy-version/src.main.java.org.digitalpanda.iot.raspberrypi.Application.java", "BodyUseAPI": ["org.eclipse.jetty.client.api.ContentResponse.getContentAsString()", "java.io.PrintStream.println((\"response status code = \" + (response.getStatus())))", "java.io.PrintStream.println((\"message = \" + (response.getContentAsString())))", "org.eclipse.jetty.client.api.ContentResponse.getStatus()"], "Fixed commit": "00fc6d285b73b11e4c6505448e871325baef0eec", "Url": "https://api.github.com/repos/JoelVallone/digitalpanda-iot", "Date": "2016-12-29T10:08:47Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((line == \"\") || (line.contains(\"Insert\"))) || (line.contains(\"Delete\"))) || (line.contains(\"Substitution\"))) if (line.contains(\"->\")) { java.lang.String[] words = line.split(\"->\"); occurences.put(words[0], 0); occurences.put(words[1], 0); }else { occurences.put(line.trim(), 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/8835/buggy-version/src.main.java.de.tudarmstadt.awesome.erclaerung.feature.ManualWordListDFE.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Integer>.put(java.lang.String,int)", "java.lang.String.contains(java.lang.String)", "java.lang.String.split(java.lang.String)", "java.lang.String.trim()"], "Fixed commit": "2a429a96f64a59f4508aeaf3e96814c322b5397a", "Url": "https://api.github.com/repos/PatrickLerner/erclaerung", "Date": "2015-02-05T20:13:08Z"},
{"Line": "=>296", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["listOfPoints.get(0).getElevation()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((firstPointHeight - minHeight) < 0) { minHeight = firstPointHeight; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/2388/buggy-version/src.com.ubcsolar.ui.MapAdvancedWindow.java", "BodyUseAPI": [], "Fixed commit": "85968b5e7bc12d50fb7418d4c98c91e98bc35dbc", "Url": "https://api.github.com/repos/UBC-Solar/Simulator", "Date": "2016-02-03T03:55:59Z"},
{"Line": "=>300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["listOfPoints.get(0).getElevation()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((firstPointHeight - maxHeight) > 0) { maxHeight = firstPointHeight; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/2388/buggy-version/src.com.ubcsolar.ui.MapAdvancedWindow.java", "BodyUseAPI": [], "Fixed commit": "85968b5e7bc12d50fb7418d4c98c91e98bc35dbc", "Url": "https://api.github.com/repos/UBC-Solar/Simulator", "Date": "2016-02-03T03:55:59Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event.getResult()) != (org.bukkit.event.player.PlayerLoginEvent.Result.ALLOWED)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/1315/buggy-version/CrazyLogin.src.de.st_ddt.crazylogin.listener.PlayerListener.java", "BodyUseAPI": [], "Fixed commit": "6638c865327f2e8c477452ea7b429c627cfccef9", "Url": "https://api.github.com/repos/ST-DDT/Crazy", "Date": "2013-10-01T17:51:55Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (pos != (-1)) gui.getHand(player).getCell(pos).setHighlight(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/5016/buggy-version/src.main.java.game.controller.DiscardingStage.java", "BodyUseAPI": ["gui.getHand(player).getCell(int)", "gui.getHand(player).getCell(pos).setHighlight(boolean)"], "Fixed commit": "c58656b451446f15f2d3010faa19325a28e34a3a", "Url": "https://api.github.com/repos/piobpl/Zombies", "Date": "2013-05-26T09:36:24Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getSupportActionBar()) != null) getSupportActionBar().setHomeButtonEnabled(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/280/buggy-version/app.src.main.java.com.example.admin.educhat.chatActivity.java", "BodyUseAPI": [], "Fixed commit": "3616c548971f6b42a9fe92c8adcfebac78364555", "Url": "https://api.github.com/repos/furyjack/EduChat", "Date": "2016-10-10T07:51:37Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fileDiff.getSourceToTargetMap().get(srcPoint.getLineNumber())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (targetLines == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/7123/buggy-version/tregression.src.main.tregression.separatesnapshots.DiffMatcher.java", "BodyUseAPI": [], "Fixed commit": "0cfd1ccaed6d662016d7d69eb8d07178fab4baab", "Url": "https://api.github.com/repos/llmhyy/tregression", "Date": "2017-08-17T16:19:24Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tableConfiguration.getConfigurations().get(com.github.dandelion.datatables.core.configuration.ConfigToken<T>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (existingValue != null) { tableConfiguration.getConfigurations().put(this, ((java.lang.StringBuilder) (tableConfiguration.getConfigurations().get(this))).append(value)); }else { tableConfiguration.getConfigurations().put(this, new java.lang.StringBuilder(value)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/2081/buggy-version/datatables-core.src.main.java.com.github.dandelion.datatables.core.configuration.ConfigToken.java", "BodyUseAPI": [], "Fixed commit": "ef284e47199cff4dd87ce33e1c2fc559b74f6d69", "Url": "https://api.github.com/repos/dandelion/dandelion-datatables", "Date": "2014-01-15T17:34:01Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javafx.stage.FileChooser.showSaveDialog(userText.getScene().getWindow())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (file != null) { path = file.getPath(); utility.IO.save(file, form.textList(userText)); }else java.lang.System.err.println(\"Null pointer error in save as method\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/8208/buggy-version/source.core.Main.java", "BodyUseAPI": ["utility.IO.save(java.io.File,form.textList(userText))", "java.io.File.getPath()"], "Fixed commit": "8bf69e081659e3dfc3887643ed531a1e9fdb1b9e", "Url": "https://api.github.com/repos/SaltCube/GradeCalculator", "Date": "2017-07-28T01:39:17Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portal.kernel.cache.thread.local.ThreadLocalCache<java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (value != null) { if (value == (nullResult)) { return null; } return value; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/8009/buggy-version/portal-impl.src.com.liferay.portal.cache.thread.local.ThreadLocalCacheAdvice.java", "BodyUseAPI": [], "Fixed commit": "5ced41bc0b011aa73538921fea717fa9aefa6eae", "Url": "https://api.github.com/repos/mikakoivisto/liferay-portal", "Date": "2016-09-17T05:07:27Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (location != null) { lon = location.getLongitude(); lat = location.getLatitude(); alt = location.getAltitude(); }else { android.widget.Toast.makeText(mContext, \"Failed to get Location\", Toast.LENGTH_LONG); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/942/buggy-version/app.src.main.java.com.wadimakkah.d7om7.wareed.LocationClass.java", "BodyUseAPI": [], "Fixed commit": "24347b9a862f451368159d1bd21d61cca2b2a2be", "Url": "https://api.github.com/repos/d7om7608/Wareed", "Date": "2017-08-26T12:52:54Z"},
{"Line": "=>390", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (string.equals(id2)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/94/buggy-version/src.yulei.mag.api.Solution.java", "BodyUseAPI": [], "Fixed commit": "f7470b640570af4e8941b0f58b7d37261cd80bd0", "Url": "https://api.github.com/repos/zeroWin/Test", "Date": "2016-05-12T17:19:31Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (to.equals(\"\")) { for (java.lang.Object key : clientList.map().keySet()) { java.io.DataOutputStream out = new java.io.DataOutputStream(new java.io.BufferedOutputStream(clientList.getClientSocket(((java.lang.String) (key))).getOutputStream())); out.writeUTF(msg); out.flush(); } }else { java.io.DataOutputStream out = new java.io.DataOutputStream(new java.io.BufferedOutputStream(clientList.getClientSocket(to).getOutputStream())); out.writeUTF(msg); out.flush(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/159/buggy-version/src.ru.denko.SingleServer.java", "BodyUseAPI": ["ru.denko.ClientList.getClientSocket(java.lang.String)", "clientList.getClientSocket(to).getOutputStream()"], "Fixed commit": "df5a858fec79600e55918add8b520311e77b767c", "Url": "https://api.github.com/repos/Naraks/SimpleChatServer", "Date": "2017-07-12T06:42:12Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((findPortal(world, bp.add(0, ((map.convertHeightToMC(closest.elevation)) + (com.bioxx.tfc2.api.Global.SEALEVEL)), 0))) != null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/3360/buggy-version/src.Common.com.bioxx.tfc2.world.hexgen.WorldGenPortalsHex.java", "BodyUseAPI": [], "Fixed commit": "d846e28651f5c859a35391708448f2529bcee500", "Url": "https://api.github.com/repos/Deadrik/TFC2", "Date": "2017-05-22T19:09:30Z"},
{"Line": "=>514", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (end < (a.lastKey())) { a = a.headMap(end, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/5996/buggy-version/hadoop-yarn-project.hadoop-yarn.hadoop-yarn-server.hadoop-yarn-server-resourcemanager.src.main.java.org.apache.hadoop.yarn.server.resourcemanager.reservation.RLESparseResourceAllocation.java", "BodyUseAPI": ["java.util.NavigableMap<java.lang.Long, org.apache.hadoop.yarn.api.records.Resource>.headMap(long,boolean)"], "Fixed commit": "3a154f75ed85d864b3ffd35818992418f2b6aa59", "Url": "https://api.github.com/repos/dennishuo/hadoop", "Date": "2016-06-07T04:18:32Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((cp.getGapLine1()) != null) gapSize1 = cp.getGapLine1().size(); else gapSize1 = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/7770/buggy-version/src.main.java.decrescendo.evaluate.EvaluateMain.java", "BodyUseAPI": ["decrescendo.evaluate.ClonePair.getGapLine1()", "cp.getGapLine1().size()"], "Fixed commit": "f73fa0f829ade66178df0c37fc7fc642768b835d", "Url": "https://api.github.com/repos/y-yusuke/Decrescendo", "Date": "2016-09-07T11:23:47Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((((cp.getEndLine1()) - (cp.getStartLine1())) + 1) - gapSize1) > 0) && (((((cp.getEndLine2()) - (cp.getStartLine2())) + 1) - gapSize2) > 0)) clonePairList.add(cp);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/7770/buggy-version/src.main.java.decrescendo.evaluate.EvaluateMain.java", "BodyUseAPI": ["java.util.List<decrescendo.evaluate.ClonePair>.add(decrescendo.evaluate.ClonePair)"], "Fixed commit": "f73fa0f829ade66178df0c37fc7fc642768b835d", "Url": "https://api.github.com/repos/y-yusuke/Decrescendo", "Date": "2016-09-07T11:23:47Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((cp.getGapLine2()) != null) gapSize2 = cp.getGapLine2().size(); else gapSize2 = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/7770/buggy-version/src.main.java.decrescendo.evaluate.EvaluateMain.java", "BodyUseAPI": ["decrescendo.evaluate.ClonePair.getGapLine2()", "cp.getGapLine2().size()"], "Fixed commit": "f73fa0f829ade66178df0c37fc7fc642768b835d", "Url": "https://api.github.com/repos/y-yusuke/Decrescendo", "Date": "2016-09-07T11:23:47Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<T, java.util.Map<V, java.lang.Integer>>.get(T)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (valueMap != null) { return mTag2ValuesMap.get(tag).keySet(); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/5515/buggy-version/src.com.timweng.util.TagMap.java", "BodyUseAPI": [], "Fixed commit": "4f4b506a0179ecd74504b74a535c71a90fdbe961", "Url": "https://api.github.com/repos/WeiTingWeng/TagMap", "Date": "2017-05-14T08:29:41Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasCallback()) { outerCallback.onSuccess(newResult); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/3685/buggy-version/base.src.main.java.com.github.kubatatami.judonetworking.builders.WrapBuilder.java", "BodyUseAPI": [], "Fixed commit": "90bf65dfba182ffbdfc67c28a43ad56a2e4b4379", "Url": "https://api.github.com/repos/kubatatami/JudoNetworking", "Date": "2016-12-18T20:51:56Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (rec) { if (obj instanceof org.structr.core.entity.LinkedTreeNode) { org.structr.core.entity.LinkedTreeNode ltn = ((org.structr.core.entity.LinkedTreeNode) (obj)); for (java.lang.Object t : ltn.treeGetChildren()) { setPermission(((org.structr.core.entity.AbstractNode) (t)), principal, action, permission, rec); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/6527/buggy-version/structr-ui.src.main.java.org.structr.websocket.command.SetPermissionCommand.java", "BodyUseAPI": ["org.structr.websocket.command.SetPermissionCommand.setPermission(java.lang.Object,org.structr.core.entity.Principal,java.lang.String,java.lang.String,boolean)"], "Fixed commit": "4a5d84b96e43e86fc21d9d5ad9a6da6832af0b13", "Url": "https://api.github.com/repos/structr/structr", "Date": "2014-05-29T21:52:13Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/9001/buggy-version/src.main.java.com.spotify.docker.client.messages.RegistryConfigs.java", "BodyUseAPI": [], "Fixed commit": "9e7060a4b15a42a9f4013afd13b49db5371e6602", "Url": "https://api.github.com/repos/spotify/docker-client", "Date": "2017-05-22T20:52:54Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(oneway)) { writeResponse(out, sequenceId, TMessageType.REPLY, \"success\", ((short) (0)), successCodec, result); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/4036/buggy-version/swift-service.src.main.java.com.facebook.swift.service.ThriftMethodProcessor.java", "BodyUseAPI": [], "Fixed commit": "47614a0998689782b4ca2383c16d370db73a1080", "Url": "https://api.github.com/repos/electrum/swift", "Date": "2012-08-22T20:53:10Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.chart.getData().size()) == 0) { this.chart.getData().add(new javafx.scene.chart.XYChart.Series<java.lang.String, java.lang.Integer>()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/1548/buggy-version/Development.ClientApplication.src.main.java.de.szut.dqi12.cheftrainer.client.view.fxmlcontrollers.LineChartController.java", "BodyUseAPI": ["this.chart.getData().add(javafx.scene.chart.XYChart.Series<java.lang.String, java.lang.Integer>)", "javafx.scene.chart.LineChart<java.lang.String, java.lang.Integer>.getData()"], "Fixed commit": "8bb83b65863ede3af5f039511d010322a920ac31", "Url": "https://api.github.com/repos/GAlexMES/CheftrainerFootballManager", "Date": "2015-10-01T15:57:19Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((myList == null) || ((myList.size()) == 0)) { map.put(\"items\", \"\"); }else { map.put(\"items\", myList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/271/buggy-version/src.main.java.com.nice.confX.service.manager.impl.ClientServiceImpl.java", "BodyUseAPI": ["java.util.Map.put(java.lang.String,java.util.List)"], "Fixed commit": "b55d80d0bc9b834f77e0412f4578236f2b89e707", "Url": "https://api.github.com/repos/yxb0926/confX", "Date": "2016-12-07T02:52:17Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jvalue.ods.notifications.NotificationSender.notifySourceChanged(org.jvalue.ods.data.DataSource)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (sentCount > 0) org.jvalue.ods.logger.Logging.adminLog(((\"Sent \" + sentCount) + \" notification(s)\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/8161/buggy-version/src.main.java.org.jvalue.ods.notifications.SimpleNotificationFilter.java", "BodyUseAPI": ["org.jvalue.ods.logger.Logging.adminLog(java.lang.String)"], "Fixed commit": "7b3df8ad1829848b4ea3c5f865b3793f8955a0e9", "Url": "https://api.github.com/repos/jvalue/open-data-service", "Date": "2014-06-18T08:03:51Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((au.com.vaadinutils.crud.ChildCrudView.getCurrent()) != null) { selectedIdBeforeSave = au.com.vaadinutils.crud.ChildCrudView.getCurrent().getId(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/2838/buggy-version/src.main.java.au.com.vaadinutils.crud.ChildCrudView.java", "BodyUseAPI": [], "Fixed commit": "09cac15c28bf3ae20a339154c519fcde55ce3d31", "Url": "https://api.github.com/repos/rlsutton1/VaadinUtils", "Date": "2014-11-24T23:04:45Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.LOLLIPOP)) { getActivity().getWindow().getSharedElementEnterTransition().addListener(new android.transition.Transition.TransitionListener() { @java.lang.Override public void onTransitionStart(android.transition.Transition transition) { } @java.lang.Override public void onTransitionEnd(android.transition.Transition transition) { android.util.Log.i(Constants.APP_NAME, \"onTransitionEnd\"); mReviewSection.setVisibility(View.VISIBLE); mTrailerSection.setVisibility(View.VISIBLE); } @java.lang.Override public void onTransitionCancel(android.transition.Transition transition) { } @java.lang.Override public void onTransitionPause(android.transition.Transition transition) { } @java.lang.Override public void onTransitionResume(android.transition.Transition transition) { } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/6690/buggy-version/app.src.main.java.com.franktan.popularmovies.ui.fragments.MovieDetailFragment.java", "BodyUseAPI": [], "Fixed commit": "02bc607b95147e3b929b616c111c26e615f9c912", "Url": "https://api.github.com/repos/frank-tan/Popular-Movies", "Date": "2015-12-22T14:33:47Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (energycost) { finishedThinking(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/8691/buggy-version/BayesGame.src.bayesGame.minigame.MinigameController.java", "BodyUseAPI": [], "Fixed commit": "f5b101dd4135f222efadf71aeaca7fa9de9f9ae8", "Url": "https://api.github.com/repos/ksotala/BayesGame", "Date": "2015-04-23T08:38:54Z"},
{"Line": "=>10", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (n == 0) { return 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/5003/buggy-version/01Recursion.Recursion.java", "BodyUseAPI": [], "Fixed commit": "d451910a8eeb209ebf7a1a94be0ee9f99a31d7da", "Url": "https://api.github.com/repos/tiffanym/APCSHW-v2.0", "Date": "2015-02-08T00:37:32Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (n == 0) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/5003/buggy-version/01Recursion.Recursion.java", "BodyUseAPI": [], "Fixed commit": "d451910a8eeb209ebf7a1a94be0ee9f99a31d7da", "Url": "https://api.github.com/repos/tiffanym/APCSHW-v2.0", "Date": "2015-02-08T00:37:32Z"},
{"Line": "=>446", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mCanZoom)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/869/buggy-version/app.src.main.java.com.ijk.live.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "2a2c3ede08280c5fa9c1ef5a45d2a1672e6cc66c", "Url": "https://api.github.com/repos/lxykad/live_player", "Date": "2017-10-10T05:26:18Z"},
{"Line": "=>430", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mCanZoom)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/869/buggy-version/app.src.main.java.com.ijk.live.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "2a2c3ede08280c5fa9c1ef5a45d2a1672e6cc66c", "Url": "https://api.github.com/repos/lxykad/live_player", "Date": "2017-10-10T05:26:18Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (loc != null) { for (ch.hsr.cp.traildevils.domain.Trail trail : list) { android.location.Location l = new android.location.Location(\"\"); l.setLongitude(trail.getGmapY()); l.setLatitude(trail.getGmapX()); trail.setDistance(loc.distanceTo(l)); } dataChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/7864/buggy-version/TrailDevils.src.ch.hsr.cp.traildevils.service.TrailService.java", "BodyUseAPI": ["ch.hsr.cp.traildevils.domain.Trail.setDistance(loc.distanceTo(l))", "android.location.Location.distanceTo(android.location.Location)"], "Fixed commit": "11daa9955c64e836850949237a330c93ea172f8d", "Url": "https://api.github.com/repos/jhofer/TrailDevils", "Date": "2011-12-16T10:31:14Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ch.hsr.cp.traildevils.domain.Trail.getTrailname()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((tName.length()) > 22) { tName = (tName.substring(0, 19)) + \"...\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/7864/buggy-version/TrailDevils.src.ch.hsr.cp.traildevils.adapter.TrailAdapter.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "11daa9955c64e836850949237a330c93ea172f8d", "Url": "https://api.github.com/repos/jhofer/TrailDevils", "Date": "2011-12-16T10:31:14Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (getSelectedServer())) { treeViewer.setInput(getSelectedServer()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/1620/buggy-version/bundles.org.eclipse.ecf.salvo.ui.src.org.eclipse.ecf.salvo.ui.internal.views.digest.DigestView.java", "BodyUseAPI": [], "Fixed commit": "7687aa4941e82da7eaf810e833c21724af9afe31", "Url": "https://api.github.com/repos/isudana/Newsreader", "Date": "2011-07-26T13:40:38Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (getSelectedServer())) { treeViewer.setInput(getSelectedServer()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/1620/buggy-version/bundles.org.eclipse.ecf.salvo.ui.src.org.eclipse.ecf.salvo.ui.internal.views.digest.DigestView.java", "BodyUseAPI": [], "Fixed commit": "7687aa4941e82da7eaf810e833c21724af9afe31", "Url": "https://api.github.com/repos/isudana/Newsreader", "Date": "2011-07-26T13:40:38Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mId) == 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/7666/buggy-version/blocnotes.app.src.main.java.com.bloc.blocnotes.models.Model.java", "BodyUseAPI": [], "Fixed commit": "9cb335a9da3bf3c75611fd36c71143a1280f4e19", "Url": "https://api.github.com/repos/Jahnold/android-source", "Date": "2015-01-12T18:36:31Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eobjects.datacleaner.monitor.scheduling.widgets.SchedulingOverviewPanel.1.createCategoryAndGroupMapForJobs(java.util.List<org.eobjects.datacleaner.monitor.scheduling.model.ScheduleDefinition>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((categoryAndGroupMapForJobs.size()) == 0) { com.google.gwt.user.client.ui.FlowPanel panel = new com.google.gwt.user.client.ui.FlowPanel(); panel.addStyleName(\"alert alert-info\"); panel.add(new com.google.gwt.user.client.ui.Label(\"There are no jobs available.\")); initWidget(panel); }else if ((categoryAndGroupMapForJobs.size()) == 1) { com.google.gwt.user.client.ui.FlowPanel panel = new com.google.gwt.user.client.ui.FlowPanel(); panel.add(createHeaderPanel()); panel.addStyleName((\"SchedulingOverviewPan\" + \"el\")); java.util.Map<java.lang.String, org.eobjects.datacleaner.monitor.scheduling.widgets.ScheduleGroupPanel> scheduleGroupPanels = new java.util.HashMap<java.lang.String, org.eobjects.datacleaner.monitor.scheduling.widgets.ScheduleGroupPanel>(); for (org.eobjects.datacleaner.monitor.scheduling.model.ScheduleDefinition scheduleDefinition : result) { addSchedule(scheduleDefinition, jobGroupingCategory, panel, scheduleGroupPanels); } initWidget(panel); }else { com.google.gwt.user.client.ui.DecoratedTabPanel tabPanel = new com.google.gwt.user.client.ui.DecoratedTabPanel(); tabPanel.setWidth(\"100%\"); java.util.Set<java.lang.String> jobCategories = categoryAndGroupMapForJobs.keySet(); for (java.lang.String jobCategory : jobCategories) { java.util.Map<java.lang.String, org.eobjects.datacleaner.monitor.scheduling.widgets.ScheduleGroupPanel> scheduleGroupPanels = new java.util.HashMap<java.lang.String, org.eobjects.datacleaner.monitor.scheduling.widgets.ScheduleGroupPanel>(); com.google.gwt.user.client.ui.FlowPanel panel = new com.google.gwt.user.client.ui.FlowPanel(); panel.add(createHeaderPanel()); panel.addStyleName(\"SchedulingOverviewPanel\"); tabPanel.add(panel, jobCategory); for (org.eobjects.datacleaner.monitor.scheduling.model.ScheduleDefinition scheduleDefinition : categoryAndGroupMapForJobs.get(jobCategory)) { addSchedule(scheduleDefinition, jobGroupingCategory, panel, scheduleGroupPanels); } } tabPanel.selectTab(0); tabPanel.ensureDebugId(\"cwTabPanel\"); initWidget(tabPanel); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/8645/buggy-version/monitor.widgets.src.main.java.org.eobjects.datacleaner.monitor.scheduling.widgets.SchedulingOverviewPanel.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.util.List<org.eobjects.datacleaner.monitor.scheduling.model.ScheduleDefinition>>.size()", "java.util.Map<java.lang.String, java.util.List<org.eobjects.datacleaner.monitor.scheduling.model.ScheduleDefinition>>.get(java.lang.String)", "java.util.Map<java.lang.String, java.util.List<org.eobjects.datacleaner.monitor.scheduling.model.ScheduleDefinition>>.keySet()"], "Fixed commit": "89849088d1e1f4fad9822010f5981e373844377a", "Url": "https://api.github.com/repos/anandswarupv/DataCleaner", "Date": "2014-09-01T09:12:57Z"},
{"Line": "=>299", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (main.AnimeIndex.appProp.getProperty(\"List_to_visualize_at_start\").equalsIgnoreCase(\"Daily\")) { util.Filters.setFilter(8); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/3881/buggy-version/src.main.AnimeIndex.java", "BodyUseAPI": [], "Fixed commit": "583937ea6fa38b835b7fe25a359a8ef622d46939", "Url": "https://api.github.com/repos/MyAnimeManager/MyAnimeManager", "Date": "2015-11-29T00:24:54Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (table.getTableName().contains(\".\")) { java.lang.String[] parts = table.getTableName().split(\"[.]\"); if ((parts.length) != 2) { de.cooperateproject.incrementalsync.monitoring.TableAdapter.logger.debug(\"Database table name contains more than one sub schema. Unexpected.\"); return \"SCHEMA-ERROR\"; } return (((parts[0]) + \".\") + (prefix)) + (parts[1]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/8581/buggy-version/incrementalsync.de.cooperateproject.incrementalsync.src.de.cooperateproject.incrementalsync.monitoring.TableAdapter.java", "BodyUseAPI": ["table.getTableName().split(java.lang.String)", "de.cooperateproject.incrementalsync.monitoring.Table.getTableName()"], "Fixed commit": "481efc3cff2dcabe32e01aa3959970a3035b1f23", "Url": "https://api.github.com/repos/Cooperate-Project/EnterpriseArchitectBridge", "Date": "2016-11-25T10:59:25Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.w3c.dom.NodeList.item(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (node != null) { return node.getTextContent(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/2133/buggy-version/FolderExtractor.src.markmann.dennis.fileExtractor.settings.XMLFileReader.java", "BodyUseAPI": ["org.w3c.dom.Node.getTextContent()"], "Fixed commit": "2f137284f0c5703636c5d21dfcf718b1bd8feb54", "Url": "https://api.github.com/repos/DennisMarkmann/FileExtractor", "Date": "2017-02-19T12:44:36Z"},
{"Line": "=>11", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["chessPiece.getPosition().getFile()", "chessPiece.getPosition().getRank()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((squires[file][rank]) != null) { throw new java.lang.IllegalArgumentException((\"Could not set piece because the squire is already \" + \"occupied by another piece\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/575/buggy-version/src.main.java.org.mom47.chess.model.ChessBoard.java", "BodyUseAPI": [], "Fixed commit": "30218d2cf0447113359e4cb55f0f4f33d7e40eab", "Url": "https://api.github.com/repos/Docroma47/chess", "Date": "2017-08-24T21:30:38Z"},
{"Line": "=>448", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((base.getScheme()) != null) sb.append(base.getScheme()).append(\"://\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/1154/buggy-version/src.java.mjson.Json.java", "BodyUseAPI": ["java.net.URI.getScheme()", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "dc6de5ead6530224f51a852c079a069ab2c2d6b1", "Url": "https://api.github.com/repos/bolerio/mjson", "Date": "2015-04-17T15:42:42Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((annotation.type()) == (StringType.TEXT)) { fieldDefinition.put(\"term_vector\", annotation.termVector()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/2624/buggy-version/elasticsearch-mapping.src.main.java.org.elasticsearch.mapping.parser.StringFieldAnnotationParser.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,annotation.termVector())", "org.elasticsearch.annotation.StringField.termVector()"], "Fixed commit": "d67567a0ae4f53f7eb45c7c65535f3c4ef2ccb12", "Url": "https://api.github.com/repos/mpmaia/elasticsearch-mapping-parent", "Date": "2017-06-20T19:09:46Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((assetManager) != null) { assetManager.finishLoading(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/1298/buggy-version/src.de.onyxbits.bureauengine.BureauGame.java", "BodyUseAPI": [], "Fixed commit": "afeda84650449e007abb2fac99c9d6ac9143d1d5", "Url": "https://api.github.com/repos/onyxbits/pocketbandit", "Date": "2013-01-03T14:32:25Z"},
{"Line": "=>276", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((activities.size()) == 1) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/3714/buggy-version/src.org.runnerup.workout.Workout.java", "BodyUseAPI": [], "Fixed commit": "9683940c639f6a9b5f9c886e8d3b32a9035914e6", "Url": "https://api.github.com/repos/jonasoreland/runnerup", "Date": "2013-03-01T11:04:26Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getGroupList().size()) > 0) { ((android.widget.TextView) (findViewById(android.R.id.empty))).setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/5842/buggy-version/Grubmate.app.src.main.java.com.usc.zsurani.grubmate.activity_and_fragment.MyGroupActivity.java", "BodyUseAPI": [], "Fixed commit": "d426e3c203f90365de7ee2a14e7f87db9c5b60e1", "Url": "https://api.github.com/repos/zsurani/GrubMate", "Date": "2017-11-20T00:53:50Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((offset) < 0) offset = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/6112/buggy-version/gradle_aabuddy_client.app.src.main.java.org.mcjug.aameetingmanager.meeting.InfiniteScrollListener.java", "BodyUseAPI": [], "Fixed commit": "c412a663549ca7b37f6311680cabff807c1156d2", "Url": "https://api.github.com/repos/mcjug2015/aabuddy", "Date": "2017-01-22T05:11:33Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!_isDT) nbCarH = 18;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/5849/buggy-version/src.v_vues.Vue_Dessin.java", "BodyUseAPI": [], "Fixed commit": "57155c3e3416156b1373c77a9987e31767717548", "Url": "https://api.github.com/repos/roipoussiere/volley", "Date": "2013-03-21T15:52:35Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lastGridSize) == (Controller.Controller.cPuzzle.length)) { sameSizeGrid = true; }else { sameSizeGrid = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/7007/buggy-version/src.Controller.Controller.java", "BodyUseAPI": [], "Fixed commit": "534a60c20ed1ae6ae631b92e5df90f9533044f6a", "Url": "https://api.github.com/repos/paaff/Sudoku", "Date": "2016-06-14T11:31:46Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (xcell < 0) xcell = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/6940/buggy-version/robert.reversi-v5web.src.main.java.robert.reversi_v5web.services.GameService.java", "BodyUseAPI": [], "Fixed commit": "b1fdd1ff9152c4d06826a995a3d16b5c3a8c59fb", "Url": "https://api.github.com/repos/RobertPod/reversi", "Date": "2016-10-17T09:04:15Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ycell < 0) ycell = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/6940/buggy-version/robert.reversi-v5web.src.main.java.robert.reversi_v5web.services.GameService.java", "BodyUseAPI": [], "Fixed commit": "b1fdd1ff9152c4d06826a995a3d16b5c3a8c59fb", "Url": "https://api.github.com/repos/RobertPod/reversi", "Date": "2016-10-17T09:04:15Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (best == null) { if (!(assignablePickups.isEmpty())) { best = assignablePickups.iterator().next(); }else { best = assignableDeliveries.iterator().next(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/9017/buggy-version/src.main.java.com.github.rinde.evo4mas.common.PriorityHeuristicSolver.java", "BodyUseAPI": [], "Fixed commit": "5eef3c3d781d073586fb7517aebb683265968b4f", "Url": "https://api.github.com/repos/rinde/evo4mas", "Date": "2016-08-10T12:40:13Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((uri1.getHost()) == null) || ((uri2.getHost()) == null)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/5538/buggy-version/src.main.java.net.sf.sitemonitoring.service.check.SinglePageCheckService.java", "BodyUseAPI": [], "Fixed commit": "ff4ea7db310d79c9aafd3a310fb86531be32b4e0", "Url": "https://api.github.com/repos/jirkapinkas/sitemonitoring-production", "Date": "2015-09-05T17:51:55Z"},
{"Line": "=>1672", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.collections.CollectionUtils.isNotEmpty(projectinfo.getAppInfos().get(0).getModules())) { return response; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/2020/buggy-version/phresco-framework-web.src.main.java.com.photon.phresco.framework.rest.api.ProjectService.java", "BodyUseAPI": [], "Fixed commit": "f49997e4d1ffd4cda55f729bb22d2fed16d11c59", "Url": "https://api.github.com/repos/photon-infotech/framework", "Date": "2014-06-30T13:20:31Z"},
{"Line": "=>624", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["serverend.JSONArray.getString(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (type.equals(\"promoted\")) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/1282/buggy-version/WEB-INF.wsocket.java", "BodyUseAPI": [], "Fixed commit": "2b8e55f6c5bc87650919e1d7d895379ec0a595d3", "Url": "https://api.github.com/repos/veerakumarnice/simplechess", "Date": "2016-03-09T05:24:58Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.flowable.engine.impl.context.Context.getCommandContext()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (commandContext.isReused()) { return ((T) (command.execute(commandContext))); }else { commandContext.getAgenda().planOperation(new java.lang.Runnable() { @java.lang.Override public void run() { commandContext.setResult(command.execute(commandContext)); } }); executeOperations(commandContext); if ((!(commandContext.isReused())) && (commandContext.hasInvolvedExecutions())) { commandContext.getAgenda().planExecuteInactiveBehaviorsOperation(); executeOperations(commandContext); } return ((T) (commandContext.getResult())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/3003/buggy-version/modules.flowable-engine.src.main.java.org.flowable.engine.impl.interceptor.CommandInvoker.java", "BodyUseAPI": ["org.flowable.engine.impl.interceptor.Command<T>.execute(org.flowable.engine.impl.interceptor.CommandContext)", "org.flowable.engine.impl.interceptor.CommandContext.hasInvolvedExecutions()", "org.flowable.engine.impl.interceptor.CommandContext.isReused()", "commandContext.getAgenda().planOperation(java.lang.Runnable)", "org.flowable.engine.impl.interceptor.CommandContext.getResult()", "commandContext.getAgenda().planExecuteInactiveBehaviorsOperation()", "org.flowable.engine.impl.interceptor.CommandContext.getAgenda()", "org.flowable.engine.impl.interceptor.CommandInvoker.executeOperations(org.flowable.engine.impl.interceptor.CommandContext)", "org.flowable.engine.impl.interceptor.CommandContext.getAgenda()", "org.flowable.engine.impl.interceptor.Command<T>.execute(org.flowable.engine.impl.interceptor.CommandContext)", "org.flowable.engine.impl.interceptor.CommandInvoker.executeOperations(org.flowable.engine.impl.interceptor.CommandContext)", "org.flowable.engine.impl.interceptor.CommandContext.setResult(command.execute(commandContext))"], "Fixed commit": "169fa8e5feb0b87b8e6c462126ab7891b1dc77a3", "Url": "https://api.github.com/repos/yvoswillens/flowable-engine", "Date": "2017-04-25T10:28:45Z"},
{"Line": "=>886", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.harvard.hul.ois.jhove.module.pdf.AProfile.resolveIndirectObject(item.get(\"First\"))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((next.getObjNumber()) != (child.getObjNumber())) { child = next; }else { child = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/6429/buggy-version/jhove-modules.src.main.java.edu.harvard.hul.ois.jhove.module.pdf.AProfile.java", "BodyUseAPI": [], "Fixed commit": "a22d6e5e7457e9e47ff8d8c6ba568ff0daac3b06", "Url": "https://api.github.com/repos/shem-sergey/jhove", "Date": "2017-03-09T09:15:13Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_upperLimit) == null) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/6429/buggy-version/jhove-modules.src.main.java.edu.harvard.hul.ois.jhove.module.pdf.NameTreeNode.java", "BodyUseAPI": [], "Fixed commit": "a22d6e5e7457e9e47ff8d8c6ba568ff0daac3b06", "Url": "https://api.github.com/repos/shem-sergey/jhove", "Date": "2017-03-09T09:15:13Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["water.rapids.Env.popAry()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (fr.anyVec().isUUID()) { rapids.string = water.util.PrettyPrint.UUID(fr.anyVec().at16l(0), fr.anyVec().at16h(0)); sb.append(rapids.string); rapids.result_type = RapidsV3.ARYSTR; }else { rapids.scalar = fr.anyVec().at(0); sb.append(java.lang.Double.toString(rapids.scalar)); rapids.string = null; rapids.result_type = RapidsV3.ARYNUM; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/8810/buggy-version/h2o-core.src.main.java.water.api.RapidsHandler.java", "BodyUseAPI": ["fr.anyVec().at16l(int)", "fr.anyVec().at16h(int)", "water.fvec.Frame.anyVec()", "water.fvec.Frame.anyVec()", "fr.anyVec().at(int)", "water.util.PrettyPrint.UUID(fr.anyVec().at16l(0),fr.anyVec().at16h(0))", "water.fvec.Frame.anyVec()"], "Fixed commit": "abab0fb430dd6b42c4b7ed0a366e25b81961dc61", "Url": "https://api.github.com/repos/h2oai/h2o-3", "Date": "2015-04-21T01:39:08Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.learnncode.mediachooser.MediaChooserConstants.showVideo) { headerBarTitle.setText(getResources().getString(R.string.video)); headerBarCamera.setBackgroundDrawable(getResources().getDrawable(R.drawable.selector_video_button)); headerBarCamera.setTag(getResources().getString(R.string.video)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/6326/buggy-version/MediaChooser-lib.src.com.learnncode.mediachooser.activity.HomeFragmentActivity.java", "BodyUseAPI": [], "Fixed commit": "a8342ff464643f8b43d14c1392ab41b3f848d7a7", "Url": "https://api.github.com/repos/learnNcode/MediaChooser", "Date": "2013-12-26T10:10:02Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((i == 3) && (j == 9)) { if ((blossom2.treeNodeRef) != null) { java.lang.System.err.println(blossom2.treeNodeRef.getAncestors()); java.lang.System.err.println(blossom2.treeNodeRef.treeRef.root.containedBlossom); } java.lang.System.err.println(((((((((((blossom1 + \" \") + blossom2) + \" \") + (blossom1.levelParity)) + \" \") + (blossom2.levelParity)) + \" \") + (vertex1.getCharge())) + \" \") + (vertex2.getCharge()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/994/buggy-version/src.edmonds.Edmonds.java", "BodyUseAPI": [], "Fixed commit": "ccac8ea20d1725ca1b3df3de7cb94a88c9d879b3", "Url": "https://api.github.com/repos/refi93/edmonds", "Date": "2015-02-05T10:54:49Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((thickness) == 7.5) { java.lang.System.err.println((((\"MARHAAAAAAAA \" + (this)) + \" \") + ((thickness) + r))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/994/buggy-version/src.edmonds.GreenBlossom.java", "BodyUseAPI": ["java.io.PrintStream.println((((\"MARHAAAAAAAA \" + (this)) + \" \") + ((thickness) + r)))"], "Fixed commit": "ccac8ea20d1725ca1b3df3de7cb94a88c9d879b3", "Url": "https://api.github.com/repos/refi93/edmonds", "Date": "2015-02-05T10:54:49Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((fun.getSource()) == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/4537/buggy-version/src.patl4j.java.analyzer.DataDependency.java", "BodyUseAPI": [], "Fixed commit": "11c065799ae6c42010e10b27ed40e989dc7c1f94", "Url": "https://api.github.com/repos/Mestway/Patl4J", "Date": "2015-07-09T12:16:14Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (param.getValue().contains(\"%\")) { crit.add(org.hibernate.criterion.Restrictions.like(param.getKey(), value)); }else { crit.add(org.hibernate.criterion.Restrictions.eq(param.getKey(), value)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/5892/buggy-version/sawa.src.main.java.com.jialu.sawa.utility.MiniDao.java", "BodyUseAPI": ["com.jialu.sawa.vo.MiniPair.getKey()", "org.hibernate.criterion.Restrictions.eq(param.getKey(),java.lang.Object)", "org.hibernate.Criteria.add(org.hibernate.criterion.Restrictions.like(param.getKey(), value))", "org.hibernate.criterion.Restrictions.like(param.getKey(),java.lang.Object)", "org.hibernate.Criteria.add(org.hibernate.criterion.Restrictions.eq(param.getKey(), value))", "com.jialu.sawa.vo.MiniPair.getKey()"], "Fixed commit": "6f99d961b52fe92a0e4bbf1ffcba719df88dbe27", "Url": "https://api.github.com/repos/shouaya/sawa", "Date": "2017-10-13T09:40:02Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((formName) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/2970/buggy-version/opensrp-app.src.main.java.org.ei.opensrp.view.fragment.DisplayFormFragment.java", "BodyUseAPI": [], "Fixed commit": "98d590e8397cc027e99141d8989dd7a8538ecf41", "Url": "https://api.github.com/repos/sidthrive/opensrp-client", "Date": "2017-06-14T22:58:43Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((index > (-1)) && (index < (queries.size()))) { queries.remove(index); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/2000/buggy-version/src.com.magnet.plugin.models.ParsedUrl.java", "BodyUseAPI": ["java.util.List<com.magnet.plugin.models.Query>.remove(int)"], "Fixed commit": "b797f163dc8b1e06071126f323e9d124f8e5359b", "Url": "https://api.github.com/repos/magnetsystems/r2m-plugin-android", "Date": "2014-10-22T20:14:01Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((index > (-1)) && (index < (pathParts.size()))) { pathParts.remove(index); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/2000/buggy-version/src.com.magnet.plugin.models.ParsedUrl.java", "BodyUseAPI": ["java.util.List<com.magnet.plugin.models.PathPart>.remove(int)"], "Fixed commit": "b797f163dc8b1e06071126f323e9d124f8e5359b", "Url": "https://api.github.com/repos/magnetsystems/r2m-plugin-android", "Date": "2014-10-22T20:14:01Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isReadyForFlush())) { org.xnio.IoUtils.safeClose(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/6485/buggy-version/core.src.main.java.io.undertow.protocols.http2.Http2StreamSinkChannel.java", "BodyUseAPI": [], "Fixed commit": "4cd914008fc7fddca97af5300523b96bba81d895", "Url": "https://api.github.com/repos/jasonchaffee/undertow", "Date": "2015-06-01T08:24:22Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (reset) { org.xnio.IoUtils.safeClose(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/6485/buggy-version/core.src.main.java.io.undertow.protocols.http2.Http2StreamSinkChannel.java", "BodyUseAPI": [], "Fixed commit": "4cd914008fc7fddca97af5300523b96bba81d895", "Url": "https://api.github.com/repos/jasonchaffee/undertow", "Date": "2015-06-01T08:24:22Z"},
{"Line": "=>439", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (parent != null) parent.relayout(false); else child.relayout(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/8493/buggy-version/projects.core.src.main.java.org.quick.core.QuickEventQueue.java", "BodyUseAPI": ["org.quick.core.QuickElement.relayout(boolean)"], "Fixed commit": "5ea5b7aa599556a2d8b382291d083c76705fa12c", "Url": "https://api.github.com/repos/Updownquark/Quick", "Date": "2017-01-07T15:00:03Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tail) == null) { return false; }else return occurs(tail);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/5094/buggy-version/JProlog.src.fr.upmc.CL.Jprolog.terms.PrologList.java", "BodyUseAPI": [], "Fixed commit": "ad293f8e3d19c43b80f9a381fce235e098f8dfc7", "Url": "https://api.github.com/repos/AmerNass/JProlog", "Date": "2014-01-03T18:45:47Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Globals.globalvars.get(\"gamestage\")) == \"fight\") { org.bukkit.scoreboard.Scoreboard main = org.bukkit.Bukkit.getScoreboardManager().getMainScoreboard(); org.bukkit.scoreboard.Team Pig = main.getTeam(\"Pigs\"); org.bukkit.scoreboard.Team Wolf = main.getTeam(\"Wolves\"); if (!((event.getEntity().getKiller()) == null)) { if ((!(Pig == null)) && (!(Wolf == null))) { if (Wolf.hasPlayer(event.getEntity())) { scores.put(event.getEntity().getKiller(), ((scores.get(event.getEntity().getKiller())) + 20)); event.getEntity().getKiller().sendMessage((\"\ufffd2\" + (\"You got 20 points for killing a Wolf!\" + \"\ufffdr\"))); }else if (Pig.hasPlayer(event.getEntity())) { scores.put(event.getEntity().getKiller(), ((scores.get(event.getEntity().getKiller())) + 15)); event.getEntity().getKiller().sendMessage((\"\ufffd2\" + (\"You got 10 points for killing a Pig. Now enjoy their juicy bacon!\" + \"\ufffdr\"))); org.bukkit.inventory.ItemStack bacon = new org.bukkit.inventory.ItemStack(org.bukkit.Material.GRILLED_PORK); org.bukkit.inventory.meta.ItemMeta meta = bacon.getItemMeta(); meta.setDisplayName(event.getEntity().getName()); bacon.setItemMeta(meta); event.getEntity().getKiller().getInventory().addItem(bacon); } } } if (Pig.hasPlayer(event.getEntity())) { Pig.removePlayer(event.getEntity()); Wolf.addPlayer(event.getEntity()); kit.Wolf(event.getEntity()); for (org.bukkit.OfflinePlayer player : Pig.getPlayers()) { ((org.bukkit.entity.Player) (player)).sendMessage((\"\ufffd2\" + (\"Another pig has fallen! But you get 5 points for surviving longer!\" + \"\ufffdr\"))); scores.put(((org.bukkit.entity.Player) (player)), ((scores.get(player)) + 10)); } } if ((Pig.getSize()) == 0) { Globals.globalvars.put(\"gamestage\", \"wolfwin\"); io.github.fourohfour.wolvesvspigs.GameStateChangeEvent e = new io.github.fourohfour.wolvesvspigs.GameStateChangeEvent(); org.bukkit.Bukkit.getServer().getPluginManager().callEvent(e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/5010/buggy-version/WolvesVSPigs.src.io.github.fourohfour.wolvesvspigs.WolvesVSPigs.java", "BodyUseAPI": [], "Fixed commit": "cf7e7c7b31c778a7ba3278cbc63c6fe08ea49ff1", "Url": "https://api.github.com/repos/fourohfour/wolves-vs-pigs", "Date": "2014-01-06T16:30:39Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((edu.ucsb.cs56.projects.games.treasure_hunter.MessageThread.numMessages) == 0) { gc.setMessage(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/8745/buggy-version/src.edu.ucsb.cs56.projects.games.treasure_hunter.MessageThread.java", "BodyUseAPI": [], "Fixed commit": "f135064fb42bc6c5c2392c8011f1eabb1222f9bb", "Url": "https://api.github.com/repos/Nawakhtha/cs56-games-treasure-hunter", "Date": "2017-11-28T04:52:01Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.sudoku.puzzlescanner.PuzzleFinder.isIntersectionDetected(double,double,double,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!intersectionDetected) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/4245/buggy-version/puzzlescanner.src.main.java.com.sudoku.puzzlescanner.PuzzleFinder.java", "BodyUseAPI": [], "Fixed commit": "d06083178e1d648d3abdeea737541f9c0998cae8", "Url": "https://api.github.com/repos/samuelpratt/Sudoku", "Date": "2016-12-29T03:36:40Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((parentNode.getEntity()) == null) { parents = levelMap.get(adminLevel.getId()); }else { parents = getChildEntities(adminLevel, parentNode.getEntity()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/2309/buggy-version/geoadmin.src.main.java.org.activityinfo.geoadmin.merge.MergeTreeBuilder.java", "BodyUseAPI": ["org.activityinfo.geoadmin.merge.MergeNode.getEntity()", "org.activityinfo.geoadmin.merge.MergeTreeBuilder.getChildEntities(org.activityinfo.geoadmin.model.AdminLevel,parentNode.getEntity())"], "Fixed commit": "5277c3bfb954dbad969a5bef256822c68ca19a28", "Url": "https://api.github.com/repos/bedatadriven/activityinfo", "Date": "2014-11-11T10:49:07Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(commentIds.isEmpty())) { commentVoteRepository.deleteByCommentId(commentIds); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/6730/buggy-version/abixen-platform-core.src.main.java.com.abixen.platform.core.service.impl.CommentVoteServiceImpl.java", "BodyUseAPI": ["com.abixen.platform.core.repository.CommentVoteRepository.deleteByCommentId(java.util.List<java.lang.Long>)"], "Fixed commit": "44139a969c384928b2edf78d96d12e25b8e72ea2", "Url": "https://api.github.com/repos/konradkwisniewski/abixen-platform", "Date": "2017-04-18T19:49:57Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (phone_numbers != \"\") { to_return = phone_numbers.substring(0, ((phone_numbers.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/3221/buggy-version/app.src.main.java.edu.unipi.thesis.gcm.RegistrationIntentService.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "11902a542a780ecd8664e1e4eaf195856346d893", "Url": "https://api.github.com/repos/jparaskakis/thesis", "Date": "2016-05-22T13:49:42Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((curlist) != null) curlist.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/6068/buggy-version/fido-database.src.main.java.org.fidonet.db.DatabasePagingIterator.java", "BodyUseAPI": [], "Fixed commit": "ec9bac2a50a1b338dc822a600f9a2b9859a2e561", "Url": "https://api.github.com/repos/vkravets/Fido4Java", "Date": "2014-02-03T01:33:31Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (party == null) { return groups; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/7140/buggy-version/src.main.java.net.sourceforge.fenixedu.domain.accessControl.academicAdministration.PersistentAcademicAuthorizationGroup.java", "BodyUseAPI": [], "Fixed commit": "1d14d9519a48eefea34e36ada95b1cf472d403f4", "Url": "https://api.github.com/repos/FenixEdu/fenix", "Date": "2014-09-03T18:09:40Z"},
{"Line": "=>317", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (party == null) { return groups; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/7140/buggy-version/src.main.java.net.sourceforge.fenixedu.domain.accessControl.academicAdministration.PersistentAcademicAuthorizationGroup.java", "BodyUseAPI": [], "Fixed commit": "1d14d9519a48eefea34e36ada95b1cf472d403f4", "Url": "https://api.github.com/repos/FenixEdu/fenix", "Date": "2014-09-03T18:09:40Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((missatge.toString().length()) > (client.Client.LS_SIZE)) { for (int i = 0; i < (client.Client.LS_SIZE); i++) { missatge.deleteCharAt(((missatge.length()) - 1)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/2629/buggy-version/src.client.Client.java", "BodyUseAPI": ["java.lang.StringBuilder.deleteCharAt(int)", "java.lang.StringBuilder.length()"], "Fixed commit": "b8cd841a6df5cc56421862685b29845e593b2ba9", "Url": "https://api.github.com/repos/ManuMtz4/EDT-M09UF3-SocketsDb4oDemo", "Date": "2017-04-02T18:57:59Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((msg.toString().length()) > (client.Client.LS_SIZE)) { for (int i = 0; i < (client.Client.LS_SIZE); i++) { msg.deleteCharAt(((msg.length()) - 1)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/2629/buggy-version/src.client.Client.java", "BodyUseAPI": ["java.lang.StringBuilder.deleteCharAt(int)", "java.lang.StringBuilder.length()"], "Fixed commit": "b8cd841a6df5cc56421862685b29845e593b2ba9", "Url": "https://api.github.com/repos/ManuMtz4/EDT-M09UF3-SocketsDb4oDemo", "Date": "2017-04-02T18:57:59Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((msg.toString().length()) > (client.Client.LS_SIZE)) { for (int i = 0; i < (client.Client.LS_SIZE); i++) { msg.deleteCharAt(((msg.length()) - 1)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/2629/buggy-version/src.client.Client.java", "BodyUseAPI": ["java.lang.StringBuilder.deleteCharAt(int)", "java.lang.StringBuilder.length()"], "Fixed commit": "b8cd841a6df5cc56421862685b29845e593b2ba9", "Url": "https://api.github.com/repos/ManuMtz4/EDT-M09UF3-SocketsDb4oDemo", "Date": "2017-04-02T18:57:59Z"},
{"Line": "=>368", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((msgList.toString().length()) > (server.Server.LS_SIZE)) { for (int i = 0; i < (server.Server.LS_SIZE); i++) { msgList.deleteCharAt(((msgList.length()) - 1)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/2629/buggy-version/src.server.Server.java", "BodyUseAPI": ["java.lang.StringBuilder.length()", "java.lang.StringBuilder.deleteCharAt(int)"], "Fixed commit": "b8cd841a6df5cc56421862685b29845e593b2ba9", "Url": "https://api.github.com/repos/ManuMtz4/EDT-M09UF3-SocketsDb4oDemo", "Date": "2017-04-02T18:57:59Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((missatge.toString().length()) > (server.Server.LS_SIZE)) { for (int i = 0; i < (server.Server.LS_SIZE); i++) { missatge.deleteCharAt(((missatge.length()) - 1)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/2629/buggy-version/src.server.Server.java", "BodyUseAPI": ["java.lang.StringBuilder.deleteCharAt(int)", "java.lang.StringBuilder.length()"], "Fixed commit": "b8cd841a6df5cc56421862685b29845e593b2ba9", "Url": "https://api.github.com/repos/ManuMtz4/EDT-M09UF3-SocketsDb4oDemo", "Date": "2017-04-02T18:57:59Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (email.getText().toString().isEmpty()) { android.widget.Toast.makeText(getApplicationContext(), \"Do not leave the Email blank\", Toast.LENGTH_LONG).show(); }else if (password.getText().toString().isEmpty()) { android.widget.Toast.makeText(getApplicationContext(), \"Do not leave the Password blank\", Toast.LENGTH_LONG).show(); }else { mAuth.signInWithEmailAndPassword(email.getText().toString(), password.getText().toString()).addOnCompleteListener(new com.google.android.gms.tasks.OnCompleteListener<com.google.firebase.auth.AuthResult>() { @java.lang.Override public void onComplete(@android.support.annotation.NonNull com.google.android.gms.tasks.Task<com.google.firebase.auth.AuthResult> task) { if (task.isSuccessful()) { if ((verifiedEmailNotRequiredForLogin) || (task.getResult().getUser().isEmailVerified())) { android.widget.Toast.makeText(getApplicationContext(), ((task.getResult().getUser().getEmail()) + \" was successfully signed in\"), Toast.LENGTH_LONG).show(); dBase.addListenerForSingleValueEvent(new com.google.firebase.database.ValueEventListener() { @java.lang.Override public void onDataChange(com.google.firebase.database.DataSnapshot dataSnapshot) { navigateToMenu(dataSnapshot); } @java.lang.Override public void onCancelled(com.google.firebase.database.DatabaseError databaseError) { } }); }else { android.widget.Toast.makeText(getApplicationContext(), \"That user is not verified, check email for verification link.\", Toast.LENGTH_LONG).show(); } }else { android.widget.Toast.makeText(getApplicationContext(), \"Sign in was not successful. Check login details please.\", Toast.LENGTH_LONG).show(); } } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/508/buggy-version/app.src.main.java.com.gmail.dleemcewen.tandemfieri.MainActivity.java", "BodyUseAPI": ["android.widget.EditText.getText()", "com.google.firebase.auth.FirebaseAuth.signInWithEmailAndPassword(email.getText().toString(),password.getText().toString())", "email.getText().toString()", "mAuth.signInWithEmailAndPassword(email.getText().toString(), password.getText().toString()).addOnCompleteListener(com.google.android.gms.tasks.OnCompleteListener<com.google.firebase.auth.AuthResult>)"], "Fixed commit": "a271dec0b1a385d50ef8d2084f4e64b9a98c0ff0", "Url": "https://api.github.com/repos/dereklm/TandemFieri", "Date": "2017-02-17T06:03:56Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isRange)) return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/1155/buggy-version/src.main.java.seedu.cmdo.model.task.DueByDate.java", "BodyUseAPI": [], "Fixed commit": "a51620986d558c48ff9ca76d4b88b78c0f6dd3fb", "Url": "https://api.github.com/repos/CS2103AUG2016-F11-C2/main", "Date": "2016-10-19T08:55:48Z"},
{"Line": "=>1306", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((list.size()) > 1) { phenotypeSexes = \" AND ALL (tag in sr.phenotypeSex WHERE tag IN ['male','female'])\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/3442/buggy-version/web.src.main.java.uk.ac.ebi.phenotype.web.controller.AdvancedSearchController.java", "BodyUseAPI": [], "Fixed commit": "e8b1fc8bc2fc46b20efa23790c581bc6ef007c1c", "Url": "https://api.github.com/repos/mpi2/PhenotypeData", "Date": "2017-06-18T22:09:52Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (name.isFunctionName()) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/636/buggy-version/vaadin-spreadsheet.src.main.java.com.vaadin.addon.spreadsheet.NamedRangeUtils.java", "BodyUseAPI": [], "Fixed commit": "8e870510e5a089c38358e33badf5794097e821af", "Url": "https://api.github.com/repos/ianscriven/spreadsheet", "Date": "2017-10-24T04:15:14Z"},
{"Line": "=>1175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eu.fbk.dkm.pikes.resources.NAFUtils.getRef(ixa.kaflib.Term,NAFUtils.RESOURCE_BBN,<nulltype>)", "eu.fbk.dkm.pikes.resources.NAFUtils.getRef(ixa.kaflib.Term,NAFUtils.RESOURCE_WN_SYNSET,<nulltype>)", "eu.fbk.dkm.pikes.resources.NAFUtils.getRef(ixa.kaflib.Term,NAFUtils.RESOURCE_WN_SST,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (((forceSemanticAnnotationCreation || (sstRef != null)) || (synsetRef != null)) || (bbnRef != null)) { final eu.fbk.dkm.pikes.rdf.naf.IRI semanticAnnotationIRI = createSemanticAnnotationIRI(id, mention.mentionIRI, KEMT.ENTITY_ANNOTATION); eu.fbk.dkm.pikes.rdf.naf.NAFExtractor.Annotation ann = new eu.fbk.dkm.pikes.rdf.naf.NAFExtractor.Annotation(semanticAnnotationIRI, KEM.SEMANTIC_ANNOTATION); safeAnnotationPutInMap(mention, ann); if (sstRef != null) { final java.lang.String sst = sstRef.getReference(); final eu.fbk.dkm.pikes.rdf.naf.IRI uri = this.vf.createIRI(eu.fbk.dkm.pikes.rdf.naf.NAFExtractor.DEFAULT_WN_SST_NAMESPACE, sst.substring(((sst.lastIndexOf('-')) + 1))); emitTriple(semanticAnnotationIRI, ITSRDF.TERM_INFO_REF, uri); } if (synsetRef != null) { final eu.fbk.dkm.pikes.rdf.naf.IRI uri = this.vf.createIRI(eu.fbk.dkm.pikes.rdf.naf.NAFExtractor.DEFAULT_WN_SYN_NAMESPACE, synsetRef.getReference()); emitTriple(semanticAnnotationIRI, ITSRDF.TERM_INFO_REF, uri); } if (bbnRef != null) { final eu.fbk.dkm.pikes.rdf.naf.IRI uri = this.vf.createIRI(eu.fbk.dkm.pikes.rdf.naf.NAFExtractor.DEFAULT_BBN_NAMESPACE, bbnRef.getReference()); emitTriple(semanticAnnotationIRI, ITSRDF.TERM_INFO_REF, uri); } emitTriple(semanticAnnotationIRI, KEMT.RAW_STRING, emitFragment(terms)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/4472/buggy-version/pikes-rdf.src.main.java.eu.fbk.dkm.pikes.rdf.naf.NAFExtractor.java", "BodyUseAPI": ["ixa.kaflib.ExternalRef.getReference()", "ixa.kaflib.ExternalRef.getReference()", "ixa.kaflib.ExternalRef.getReference()", "eu.fbk.dkm.pikes.rdf.naf.ValueFactory.createIRI(java.lang.String,synsetRef.getReference())", "eu.fbk.dkm.pikes.rdf.naf.ValueFactory.createIRI(java.lang.String,bbnRef.getReference())"], "Fixed commit": "3c6ef0ce7f67e57a988367074204aedf897f9a92", "Url": "https://api.github.com/repos/dkmfbk/pikes", "Date": "2017-12-01T08:45:11Z"},
{"Line": "=>729", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.rockwellcollins.atc.agree.validation.AgreeJavaValidator.getFinalNestId(com.rockwellcollins.atc.agree.agree.NestedDotID)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (finalId instanceof org.osate.aadl2.DataImplementation) { dataImplCycleCheck(subRec); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/4193/buggy-version/fm-workbench.agree.com.rockwellcollins.atc.agree.src.com.rockwellcollins.atc.agree.validation.AgreeJavaValidator.java", "BodyUseAPI": [], "Fixed commit": "23296359aeb96b2c0772c54bb010d21b27865431", "Url": "https://api.github.com/repos/smaccm/smaccm", "Date": "2016-04-26T21:33:47Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["servletConfig.getServletContext().getRealPath(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (realPath == null) { return java.lang.System.currentTimeMillis(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/4937/buggy-version/java.com.delcyon.capo.webapp.servlets.resource.WebResourcesServlet.java", "BodyUseAPI": [], "Fixed commit": "f6cc1442ed2a67b40c90b916cd6657eff1e4a9b0", "Url": "https://api.github.com/repos/jahnje/delcyon-capo", "Date": "2015-10-29T20:00:10Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.Cursor.getLong(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (end == 0) { end = java.lang.System.currentTimeMillis(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/722/buggy-version/app.src.main.java.de.thinkofapps.trackprojects.activity.ExportFragment.java", "BodyUseAPI": [], "Fixed commit": "d034da2db200c8b821bf3a1e60f366a149db3dfe", "Url": "https://api.github.com/repos/thinkofapps/trackprojects", "Date": "2015-09-21T09:04:20Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(connecting)) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/5667/buggy-version/Dict.src.Client.java", "BodyUseAPI": [], "Fixed commit": "a676e741dfe5f0d9fa20481d01147efe635735f8", "Url": "https://api.github.com/repos/nicbh/dict", "Date": "2016-12-16T17:50:00Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (ipAddressOponent.contains(\"/\")) { java.lang.String[] addr = ipAddressOponent.split(\"/\"); ipAddressOponent = addr[1]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/939/buggy-version/ConnectFour.src.connectfour.networking.TCPCommunicator.java", "BodyUseAPI": [], "Fixed commit": "61bbeae347db6fcde12a4e7e1558e4624ede3e6e", "Url": "https://api.github.com/repos/xestho/ConnectFour", "Date": "2014-05-20T15:21:57Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.find.FindManager.findString(_editor.getDocument().getText(),int,com.intellij.find.FindModel)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((findResult.getStartOffset()) == 0) { java.lang.String potentialSymbol = _editor.getDocument().getText(new com.intellij.openapi.util.TextRange(0, symbol.length())); if (!(potentialSymbol.equals(symbol))) { return -1; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/3270/buggy-version/src.org.hunmr.highlightsymbol.HighlightSymbolAction.java", "BodyUseAPI": [], "Fixed commit": "554d091894278610d7942546ea3b9e7eac617175", "Url": "https://api.github.com/repos/whunmr/emacsIDEAs", "Date": "2014-05-30T18:00:01Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((userId) > 0) { preparedStatement.setInt(1, userId); }else { preparedStatement.setNull(1, java.sql.Types.INTEGER); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/5691/buggy-version/server.FoodCoopServer.src.operation.SignUpForWorkSlot.java", "BodyUseAPI": [], "Fixed commit": "56ec51dcf5fc4b86854748f8416954a92d552574", "Url": "https://api.github.com/repos/ardaofluoglu/swe-573", "Date": "2016-05-22T12:01:31Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (msg != null) if ((msg.length()) > (org.pem.lbaas.handlers.tenant.LimitsHandler.LIMIT_MAX_NAME_SIZE)) msg = msg.substring(0, ((org.pem.lbaas.handlers.tenant.LimitsHandler.LIMIT_MAX_NAME_SIZE) - 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/5699/buggy-version/src.main.java.org.pem.lbaas.persistency.LoadBalancerDataModel.java", "BodyUseAPI": ["java.lang.String.substring(int,((org.pem.lbaas.handlers.tenant.LimitsHandler.LIMIT_MAX_NAME_SIZE) - 1))", "java.lang.String.length()"], "Fixed commit": "270fb1bc0769da2b43cfdb06944e8086617a64d9", "Url": "https://api.github.com/repos/LBaaS/lbaas-api", "Date": "2013-04-17T04:13:32Z"},
{"Line": "=>1641", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.nuxeo.runtime.transaction.TransactionHelper.isNoTransaction()) { org.nuxeo.runtime.transaction.TransactionHelper.startTransaction(); try { return writeReplace(); } finally { org.nuxeo.runtime.transaction.TransactionHelper.commitOrRollbackTransaction(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/1245/buggy-version/nuxeo-core.nuxeo-core-api.src.main.java.org.nuxeo.ecm.core.api.impl.DocumentModelImpl.java", "BodyUseAPI": [], "Fixed commit": "70576d7be6c854db73edaf797725c11f094ba3b4", "Url": "https://api.github.com/repos/nuxeo/nuxeo", "Date": "2016-02-05T11:10:13Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (profile instanceof org.fusesource.fabric.internal.ProfileOverlayImpl) { if (((org.fusesource.fabric.internal.ProfileOverlayImpl) (profile)).self.equals(self)) { return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/8066/buggy-version/fabric-core.src.main.scala.org.fusesource.fabric.internal.ProfileOverlayImpl.java", "BodyUseAPI": [], "Fixed commit": "283a86702db552f7a312a55e2895c9de48ff4f93", "Url": "https://api.github.com/repos/dhirajsb/fabric8", "Date": "2011-11-03T17:59:37Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lastWantedState) != null) { add(((java.lang.System.currentTimeMillis()) - 1), HistoryData.Type.WANTED, temp.getValue().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/2912/buggy-version/src.se.trollbrook.bryggmester.history.HistoryLogger.java", "BodyUseAPI": [], "Fixed commit": "d3fa67f2dcd663a599d265a6a85fc3b0055bbe12", "Url": "https://api.github.com/repos/smasseman/trollbrook", "Date": "2014-09-08T22:03:12Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((hashTable) != null) { probeIndex = hashTable.containsKey(recordsProcessed, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/3655/buggy-version/exec.java-exec.src.main.java.org.apache.drill.exec.physical.impl.join.HashJoinProbeTemplate.java", "BodyUseAPI": [], "Fixed commit": "e6a665298558ea4e6ae72b8efb9ce9c7a97d2680", "Url": "https://api.github.com/repos/sudheeshkatkam/incubator-drill", "Date": "2014-05-23T18:13:39Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mBreedEditText.getText().toString().trim()", "mNameEditText.getText().toString().trim()", "com.example.android.pets.EditorActivity.weight()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((((((currentPet) == null) && (android.text.TextUtils.isEmpty(nameString))) && (android.text.TextUtils.isEmpty(breedString))) && (weightInt == 0)) && (genderInt == (com.example.android.pets.data.PetContract.PetEntry.GENDER_UNKNOWN))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/8292/buggy-version/app.src.main.java.com.example.android.pets.EditorActivity.java", "BodyUseAPI": [], "Fixed commit": "056eb152feab4cd6bf3df0e80e49cdad2473bca7", "Url": "https://api.github.com/repos/MarineNET/ud845-Pets-starting-point", "Date": "2017-07-16T20:58:17Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((modelType == null) || (modelType == \"\")) { modelType = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/2/buggy-version/Code.bcds-persistence.src.main.java.gov.va.vba.persistence.repository.RatingDaoImpl.java", "BodyUseAPI": [], "Fixed commit": "389947ba26ea61fe0205d2a14881178cfddecf45", "Url": "https://api.github.com/repos/VHAINNOVATIONS/BCDS", "Date": "2017-01-30T00:01:38Z"},
{"Line": "=>298", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (regionalOfficeNumber == 0) { regionalOfficeNumber = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/2/buggy-version/Code.bcds-persistence.src.main.java.gov.va.vba.persistence.repository.RatingDaoImpl.java", "BodyUseAPI": [], "Fixed commit": "389947ba26ea61fe0205d2a14881178cfddecf45", "Url": "https://api.github.com/repos/VHAINNOVATIONS/BCDS", "Date": "2017-01-30T00:01:38Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(name.matches(\"[a-zA-z' '-]+\"))) { java.lang.System.out.println(\"name is invalid [cannot contain numbers]\"); return ++valid; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/8904/buggy-version/src.menu.Register.java", "BodyUseAPI": [], "Fixed commit": "eb1372a9cb63cb63874b5b484cb20c69492ac062", "Url": "https://api.github.com/repos/Arizecr/COSC-2299-Part-A", "Date": "2017-04-22T07:11:09Z"},
{"Line": "=>310", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(n.matches(\"[a-zA-z' '-]+\"))) { java.lang.System.out.println(\"name is invalid [cannot contain numbers]\"); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/8904/buggy-version/src.bookings.Services.java", "BodyUseAPI": [], "Fixed commit": "eb1372a9cb63cb63874b5b484cb20c69492ac062", "Url": "https://api.github.com/repos/Arizecr/COSC-2299-Part-A", "Date": "2017-04-22T07:11:09Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.hibernate.Session.createSQLQuery(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((query.uniqueResult()) == null) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/4609/buggy-version/src.com.inexisconsulting.dao.AttendanceDAO.java", "BodyUseAPI": [], "Fixed commit": "a3c216f0b3dda3c823d6eb6da84e6bf2d7733d45", "Url": "https://api.github.com/repos/kasibkismath/InexisHR", "Date": "2016-09-12T04:09:38Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.hibernate.Session.createSQLQuery(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((query.uniqueResult()) == null) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/4609/buggy-version/src.com.inexisconsulting.dao.AttendanceDAO.java", "BodyUseAPI": [], "Fixed commit": "a3c216f0b3dda3c823d6eb6da84e6bf2d7733d45", "Url": "https://api.github.com/repos/kasibkismath/InexisHR", "Date": "2016-09-12T04:09:38Z"},
{"Line": "=>568", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.w3c.dom.Element.getAttribute(org.dita.dost.module.ATTRIBUTE_NAME_KEYSCOPE)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(keyscope.isEmpty())) { for (final java.lang.String key : keyscope.trim().split(\"\\\\s+\")) { if ((filter.keyscopePrefix) != null) { buf.append(filter.keyscopePrefix); } buf.append(key); if ((filter.keyscopeSuffix) != null) { buf.append(filter.keyscopeSuffix); } buf.append(' '); } }else { if ((filter.keyscopePrefix) != null) { buf.append(filter.keyscopePrefix); } if ((filter.keyscopeSuffix) != null) { buf.append(filter.keyscopeSuffix); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/4370/buggy-version/src.main.java.org.dita.dost.module.BranchFilterModule.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)", "java.lang.String.trim()"], "Fixed commit": "c5bd6837244c50965849c17aa1ca0185fc06453f", "Url": "https://api.github.com/repos/infotexture/dita-ot", "Date": "2016-02-24T23:05:09Z"},
{"Line": "=>324", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((requestLoggingFilter) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/232/buggy-version/modules.spring-mock-mvc.src.main.java.com.jayway.restassured.module.mockmvc.internal.MockMvcRequestSenderImpl.java", "BodyUseAPI": [], "Fixed commit": "f70c9094cbbb157d51eb0c45d0a585af5817e9c7", "Url": "https://api.github.com/repos/MartinAhrer/rest-assured", "Date": "2014-03-28T10:40:19Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((deployed) == null) { throw new java.lang.Exception(\"Vert.x has failed to deploy module\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/5787/buggy-version/src.main.java.org.vertx.maven.plugin.server.profile.VertxDeployer.java", "BodyUseAPI": [], "Fixed commit": "d47275f8d828800dcb5c91fd715dbc76e8820713", "Url": "https://api.github.com/repos/crazyfrozenpenguin/vertx-maven-plugin", "Date": "2013-03-04T19:20:50Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Properties.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(nickpass.isEmpty())) { bot.identify(nickpass); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/5363/buggy-version/PS2Bot.java", "BodyUseAPI": ["org.pircbotx.PircBotX.identify(java.lang.String)"], "Fixed commit": "0316a67d91f28d0fd8a27cd513d70afe038b4764", "Url": "https://api.github.com/repos/maradine/ps2bot", "Date": "2013-03-08T23:47:58Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((opts.resultFile) != null) { resultWriter = new java.io.FileOutputStream(new java.io.File(opts.resultFile)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/1286/buggy-version/vxquery-cli.src.main.java.org.apache.vxquery.cli.VXQuery.java", "BodyUseAPI": [], "Fixed commit": "a849cdc025799b196e1942e2700afb18261d5011", "Url": "https://api.github.com/repos/sjaco002/vxquery", "Date": "2015-09-11T18:50:08Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Configuration.SupportLib.getDBTime(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((mailer.equalsIgnoreCase(\"Rental\")) && (DBTime.equalsIgnoreCase(\"9 AM\"))) && (Configuration.SupportLib.getCurrentDay().equalsIgnoreCase(\"Wednesday\"))) { mailsSent = \"0\"; openRate = \"0\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/5073/buggy-version/src.main.java.utils.ExtractMailData.java", "BodyUseAPI": [], "Fixed commit": "8402d45ba372ceba571035d1fc5c4b132390e2d5", "Url": "https://api.github.com/repos/dailymasreport/MASReportMailer", "Date": "2017-06-28T06:36:03Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(tList.isEmpty())) { lookAhead = tList.pop(); }else java.lang.System.out.println(\"list empty\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/8024/buggy-version/src.project2.RecursiveDescent.java", "BodyUseAPI": ["java.util.LinkedList<project1.Token>.pop()"], "Fixed commit": "ccf746398e58c902a821be6c1af2c6795b2dd3ae", "Url": "https://api.github.com/repos/madamsmall/Compiler", "Date": "2014-04-23T22:56:00Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(tList.isEmpty())) { lookAhead = tList.pop(); }else java.lang.System.out.println(\"list empty\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/8024/buggy-version/src.project2.RecursiveDescent.java", "BodyUseAPI": ["java.util.LinkedList<project1.Token>.pop()"], "Fixed commit": "ccf746398e58c902a821be6c1af2c6795b2dd3ae", "Url": "https://api.github.com/repos/madamsmall/Compiler", "Date": "2014-04-23T22:56:00Z"},
{"Line": "=>685", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (character.intersects(InvLine)) { g.setColor(java.awt.Color.BLUE); g.setFont(g.getFont().deriveFont(30.0F)); g.drawString(\"You\", 496, 260); g.drawString(\"Pass!\", 496, 300); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/2430/buggy-version/src.com.NSBCoding.Keys.java", "BodyUseAPI": [], "Fixed commit": "0048584aea3efc3d5bcd9683aad5d3b1244f65c1", "Url": "https://api.github.com/repos/NSBCoding/GameTest", "Date": "2013-03-27T01:16:43Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["o1.getUpdateDate().compareTo(o2.getUpdateDate())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (compareResult == 0) { compareResult = (java.lang.Integer.parseInt(o1.getId())) - (java.lang.Integer.parseInt(o2.getId())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/9042/buggy-version/web-core.src.main.java.com.silverpeas.look.PublicationUpdateDateComparator.java", "BodyUseAPI": [], "Fixed commit": "40c291607c41a460ab7ad174bc1fbbacd5a0de14", "Url": "https://api.github.com/repos/Silverpeas/Silverpeas-Core", "Date": "2015-10-21T15:19:44Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.client.Minecraft.getMinecraft()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((innerMinecraft.getIntegratedServer()) != null) { father = innerMinecraft.getIntegratedServer().getServer().getEntityFromUuid(message.getFatherId()); mother = innerMinecraft.getIntegratedServer().getEntityFromUuid(message.getMotherId()); }else { java.util.List<net.minecraft.entity.Entity> entityList = innerMinecraft.theWorld.loadedEntityList; for (net.minecraft.entity.Entity e : entityList) { if (e != null) { if (e.getPersistentID().equals(message.getFatherId())) { father = e; } if (e.getPersistentID().equals(message.getMotherId())) { mother = e; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/2101/buggy-version/src.main.java.com.quintenlauwers.backend.network.entityinteraction.EntityChildBirthHandler.java", "BodyUseAPI": ["innerMinecraft.getIntegratedServer().getServer().getEntityFromUuid(message.getFatherId())", "innerMinecraft.getIntegratedServer().getEntityFromUuid(message.getMotherId())", "net.minecraft.client.Minecraft.getIntegratedServer()", "innerMinecraft.getIntegratedServer().getServer()", "net.minecraft.client.Minecraft.getIntegratedServer()"], "Fixed commit": "9d9d987371d1498aa771690796feec3c443224e0", "Url": "https://api.github.com/repos/aertslab/MendelCraft", "Date": "2016-10-21T13:09:23Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.player.PlayerMoveEvent.getFrom()", "org.bukkit.event.player.PlayerMoveEvent.getTo()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (to.equals(from)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/7580/buggy-version/src.main.java.ch.njol.skript.hooks.regions.events.EvtRegionBorder.java", "BodyUseAPI": [], "Fixed commit": "110b791fd7d26a55a525c4b0ddd1073a3e87e15f", "Url": "https://api.github.com/repos/SkriptLang/Skript", "Date": "2016-03-15T13:26:21Z"},
{"Line": "=>316", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.wst.sse.core.internal.provisional.IndexedRegion.getAttributes()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (attrs == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/8912/buggy-version/org.eclipse.a.wst.html.webresources.core.src.org.eclipse.wst.html.webresources.core.utils.DOMHelper.java", "BodyUseAPI": [], "Fixed commit": "7d355109a23bad9fdb6c5da3aab559fbf5b85103", "Url": "https://api.github.com/repos/angelozerr/eclipse-wtp-webresources", "Date": "2015-01-15T21:53:24Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.bluetooth.DiscoveryAgent.retrieveDevices(DiscoveryAgent.PREKNOWN)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (devices == null) { return new org.first.team2485.scoutingform.bluetooth.ExpandedRemoteDevice[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/3011/buggy-version/src.org.first.team2485.scoutingform.bluetooth.BluetoothSystem.java", "BodyUseAPI": [], "Fixed commit": "a1548308e1ba50ff2d6693741203c2893cfcad27", "Url": "https://api.github.com/repos/ncontreras2018/Bluetooth-Scouting-System", "Date": "2016-02-01T20:11:13Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (blockObject.checkInternalFlags(Flag.PARTIALLY_INGESTED)) { if ((masksIngestedCount.intValue()) == 0) { if ((null != errorMessages) && ((errorMessages.size()) > 0)) { throw IngestionException.exceptions.unmanagedVolumeMasksNotIngestedAdditionalInfo(unManagedVolume.getLabel(), com.google.common.base.Joiner.on(\", \").join(errorMessages)); }else { throw IngestionException.exceptions.unmanagedVolumeMasksNotIngested(unManagedVolume.getLabel()); } }else { return blockObject; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/7163/buggy-version/apisvc.src.main.java.com.emc.storageos.api.service.impl.resource.blockingestorchestration.IngestExportStrategy.java", "BodyUseAPI": [], "Fixed commit": "a213cd9d3f0c09f9a3569e1ebe7be5e30f45da09", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-02-23T00:28:00Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.emc.storageos.api.service.impl.resource.blockingestorchestration.context.IngestionRequestContext.getErrorMessagesForVolume(unManagedVolume.getNativeGuid())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((null != errorMessages) && ((errorMessages.size()) > 0)) { throw IngestionException.exceptions.unmanagedVolumeMasksNotIngestedAdditionalInfo(unManagedVolume.getLabel(), com.google.common.base.Joiner.on(\", \").join(errorMessages)); }else { throw IngestionException.exceptions.unmanagedVolumeMasksNotIngested(unManagedVolume.getLabel()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/7163/buggy-version/apisvc.src.main.java.com.emc.storageos.api.service.impl.resource.blockingestorchestration.IngestExportStrategy.java", "BodyUseAPI": ["IngestionException.exceptions.unmanagedVolumeMasksNotIngestedAdditionalInfo(unManagedVolume.getLabel(),com.google.common.base.Joiner.on(\", \").join(errorMessages))", "com.google.common.base.Joiner.on(\", \").join(java.util.List<java.lang.String>)"], "Fixed commit": "a213cd9d3f0c09f9a3569e1ebe7be5e30f45da09", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-02-23T00:28:00Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.codepath.com.flicks.models.Movie.getBackdropPath()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (backDropImagePath == null) { backDropImagePath = movie.getPosterPath(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/6228/buggy-version/Flicks.app.src.main.java.com.codepath.com.flicks.activities.MovieDetailActivity.java", "BodyUseAPI": [], "Fixed commit": "e806d312c26b16003b62f2a70edc8f245a0c8853", "Url": "https://api.github.com/repos/akshaymathur90/Flicks", "Date": "2017-09-15T05:03:29Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((backdropPath) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/6228/buggy-version/Flicks.app.src.main.java.com.codepath.com.flicks.models.Movie.java", "BodyUseAPI": [], "Fixed commit": "e806d312c26b16003b62f2a70edc8f245a0c8853", "Url": "https://api.github.com/repos/akshaymathur90/Flicks", "Date": "2017-09-15T05:03:29Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.os.Build.VERSION.SDK_INT) >= (android.os.Build.VERSION_CODES.JELLY_BEAN_MR1)) { nb.setShowWhen(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/8576/buggy-version/app.src.main.java.be.ppareit.swiftp.gui.FsNotification.java", "BodyUseAPI": [], "Fixed commit": "0bb91b1f398046ff69e595c8e82e43469e2a048e", "Url": "https://api.github.com/repos/tuzhao/rsftp", "Date": "2017-09-02T13:02:32Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lastNonce) != null) { digestNonceStore.remove(lastNonce); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/3510/buggy-version/httpclient5.src.main.java.org.apache.hc.client5.http.impl.auth.DigestScheme.java", "BodyUseAPI": [], "Fixed commit": "b1d4e8c1e64fdbca4f37c6c147c33a178a7be196", "Url": "https://api.github.com/repos/ok2c/httpclient", "Date": "2017-11-18T20:52:14Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (l == null) { return new net.hokiegeek.android.dondeestas.data.Position(new java.util.Date(), 0.0, 0.0, 0.0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/4487/buggy-version/app.src.main.java.net.hokiegeek.android.dondeestas.Util.java", "BodyUseAPI": [], "Fixed commit": "c2a7af287d65d3256189769c1535f08ba286f22b", "Url": "https://api.github.com/repos/HokieGeek/DondeEstas", "Date": "2016-12-02T04:01:12Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (listeningThread.isRunning()) { try { listeningThread.setRunning(false); serverSocket.close(); listeningThread.join(); } catch (java.io.IOException | java.lang.InterruptedException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/3564/buggy-version/src.cz.nitramek.networking.TCPListener.java", "BodyUseAPI": ["cz.nitramek.networking.TCPListener.setRunning(boolean)", "cz.nitramek.networking.TCPListener.join()"], "Fixed commit": "1025d7bf9d62bb3429bc9272147ff4a72cdc5046", "Url": "https://api.github.com/repos/nitramek/SimpleEasyNetworkMessaging", "Date": "2015-10-24T15:17:50Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (brw != null) brw.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/7943/buggy-version/src.main.java.org.agmip.translators.dssat.DssatXFileInput.java", "BodyUseAPI": ["java.io.BufferedReader.close()"], "Fixed commit": "fa24970446e523b3373577d07cdd3ac0ea0bf6c1", "Url": "https://api.github.com/repos/MengZhang/translator-dssat", "Date": "2012-06-26T07:44:55Z"},
{"Line": "=>348", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)", "java.util.List<java.lang.String>.size()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (((intIndex == null) || (intIndex < 0)) || (intIndex >= categoricalSize)) { intIndex = categoryIndexMap.get(ml.shifu.shifu.util.CommonUtils.trimTag(obj.toString())); if (((intIndex == null) || (intIndex < 0)) || (intIndex >= categoricalSize)) { intIndex = categoricalSize; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/8757/buggy-version/src.main.java.ml.shifu.shifu.core.dtrain.dt.IndependentTreeModel.java", "BodyUseAPI": [], "Fixed commit": "f041b1f9b54f9cc60edf89065141c3db216a9b2c", "Url": "https://api.github.com/repos/ShifuML/shifu", "Date": "2017-07-12T08:56:28Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((globalKeyword != null) & (!(\"\".equals(globalKeyword)))) { searchVO.setSearchKeyword(globalKeyword); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/4323/buggy-version/src.main.java.gu.board.BoardCtr.java", "BodyUseAPI": ["gu.board.BoardSearchVO.setSearchKeyword(java.lang.String)"], "Fixed commit": "7d346060bad9c2c9e8463b82d11dcb5b909e4238", "Url": "https://api.github.com/repos/gujc71/project9", "Date": "2016-10-03T04:47:26Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(pedFile.getFormat().equals(File.Format.PED))) { throw new org.opencb.opencga.catalog.exceptions.CatalogException(((pedFile.getId()) + \" is not a pedigree file\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/3684/buggy-version/opencga-catalog.src.main.java.org.opencb.opencga.catalog.utils.CatalogSampleAnnotationsLoader.java", "BodyUseAPI": ["org.opencb.opencga.catalog.utils.File.getId()"], "Fixed commit": "78baddb9c19fe994887a0c335ebce38e11457c80", "Url": "https://api.github.com/repos/opencb/opencga", "Date": "2017-01-19T16:51:03Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((writerType) != null) { facade.setWriter(chain, writerType.get(0), path, recursive, params); }else { facade.setWriter(chain, null, path, recursive, params); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/2756/buggy-version/src.main.java.org.walkmod.commands.SetWriterCommand.java", "BodyUseAPI": [], "Fixed commit": "efca31ca054eebee71607795280b92d4492ee338", "Url": "https://api.github.com/repos/walkmod/walkmod-core", "Date": "2016-03-29T10:59:11Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((readerType) != null) { facade.setReader(chain, readerType.get(0), path, recursive, params); }else { facade.setReader(chain, null, path, recursive, params); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/2756/buggy-version/src.main.java.org.walkmod.commands.SetReaderCommand.java", "BodyUseAPI": [], "Fixed commit": "efca31ca054eebee71607795280b92d4492ee338", "Url": "https://api.github.com/repos/walkmod/walkmod-core", "Date": "2016-03-29T10:59:11Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(controller.hasUserLoggedIn())) { controller.getUi().gotoLoginPage(); finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/2480/buggy-version/app.src.main.java.au.com.tyo.inventory.ui.page.PageMain.java", "BodyUseAPI": ["au.com.tyo.inventory.ui.page.PageMain.getUi()", "controller.getUi().gotoLoginPage()"], "Fixed commit": "c7281505437744fe7fb88773989878b61f48f273", "Url": "https://api.github.com/repos/tyolab/tyodroid-boilerplate", "Date": "2017-11-27T07:53:44Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.support.v4.app.FragmentManager.findFragmentById(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (f == null) { f = new com.merchant.fragments.SplashFragment(mContext); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/5800/buggy-version/Merchant.src.com.merchant.adapters.SplashPagerAdapter.java", "BodyUseAPI": [], "Fixed commit": "f34967cc3b380093fa65c05c8ca8ac1951f91dfe", "Url": "https://api.github.com/repos/kuldip4u/TryDemo", "Date": "2015-04-22T10:51:57Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (key.startsWith(\"pref_key_\")) { org.mozilla.focus.telemetry.TelemetryWrapper.settingsEvent(key, java.lang.String.valueOf(sharedPreferences.getAll().get(key))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/4397/buggy-version/app.src.main.java.org.mozilla.focus.settings.SettingsFragment.java", "BodyUseAPI": ["java.lang.String.valueOf(sharedPreferences.getAll().get(key))", "org.mozilla.focus.telemetry.TelemetryWrapper.settingsEvent(java.lang.String,java.lang.String)", "sharedPreferences.getAll().get(java.lang.String)"], "Fixed commit": "0d75a2be6cc1af15108cf7e2ac79ac296f5eca5d", "Url": "https://api.github.com/repos/mozilla-tw/Rocket", "Date": "2017-10-23T05:16:02Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(returnNullIfTemplateFileNotFound)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/1853/buggy-version/src.main.java.org.mixer2.spring.webmvc.Mixer2XhtmlViewResolver.java", "BodyUseAPI": [], "Fixed commit": "3a62d79ef101c577a8846c5b96c497d01b15a303", "Url": "https://api.github.com/repos/nabedge/mixer2", "Date": "2013-12-27T09:44:01Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((request == null) || ((request.getSource()) == null)) { return result; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/1921/buggy-version/app.src.main.java.org.rogotulka.rozhkovaanna.server.api.ApiClientImpl.java", "BodyUseAPI": [], "Fixed commit": "bfd3f2d35ca05c2426dc6223d9af9c307a6febda", "Url": "https://api.github.com/repos/rogotulka/RozhkovaAnna", "Date": "2015-10-26T05:48:56Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sel == 5) { return true; }else if ((tempY < 0) || (tempY > ((areaYDim) - 1))) { return false; }else if ((tempX < 0) || (tempX > ((areaXDim) - 1))) { return false; }else { if (((areaArrBase[tempY][tempX]) == (path)) || ((areaArrBase[tempY][tempX]) == (town))) { return true; }else { return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/4743/buggy-version/GenericRPG.src.ver0.World.java", "BodyUseAPI": [], "Fixed commit": "e5a8f10fba94f433d8e20c77f06d38c387a59c76", "Url": "https://api.github.com/repos/austinBailey5624/GenericRPGConsole", "Date": "2016-04-08T19:53:00Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.demo.repository.UserRepository.findByEmail(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (isInDB(userByEmail)) { validateUserAttempts(userByEmail); userRepository.save(userByEmail); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/6221/buggy-version/src.main.java.com.example.demo.listener.WrongPassListener.java", "BodyUseAPI": ["com.example.demo.listener.WrongPassListener.validateUserAttempts(com.example.demo.model.User)", "com.example.demo.repository.UserRepository.save(com.example.demo.model.User)"], "Fixed commit": "910906fbaa0f6174c05100635fca862160d563e7", "Url": "https://api.github.com/repos/Victorarmy/spring-security", "Date": "2017-12-11T15:34:20Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (error.isNetworkError()) { dbHandler.UpdateSyncState_JobStatusChangeObj(obj, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/8492/buggy-version/app.src.main.java.lk.steps.breakdownassist.BackgroundService.java", "BodyUseAPI": [], "Fixed commit": "9b83fc1eca4b7dc0b08806b805be75904f4c3a4f", "Url": "https://api.github.com/repos/chiranthaj/BreakdownAssist", "Date": "2017-06-29T20:25:58Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((org.mycontroller.standalone.MapDbFactory.database) != null) && (!(org.mycontroller.standalone.MapDbFactory.database.isClosed()))) { org.mycontroller.standalone.MapDbFactory.database.commit(); }else { _logger.debug(\"commit job called, when database is not available!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/8992/buggy-version/modules.core.src.main.java.org.mycontroller.standalone.MapDbFactory.java", "BodyUseAPI": ["org.mapdb.DB.commit()"], "Fixed commit": "14c791726b833905ce5ecc69853e2fca1b33b361", "Url": "https://api.github.com/repos/mycontroller-org/mycontroller", "Date": "2017-01-17T13:49:38Z"},
{"Line": "=>2052", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (menu != null) { menu.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/3809/buggy-version/src.com.ichi2.anki.DeckPicker.java", "BodyUseAPI": ["android.view.Menu.clear()"], "Fixed commit": "58e989258440c65bf26fb249c67fe5469be3db64", "Url": "https://api.github.com/repos/nicolas-raoul/Anki-Android", "Date": "2012-07-28T12:20:12Z"},
{"Line": "=>864", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.sqlite.SQLiteDatabase.query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],<nulltype>,<nulltype>,<nulltype>,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (cursor != null) cursor.moveToFirst();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/2024/buggy-version/src.main.java.io.github.data4all.model.DataBaseHandler.java", "BodyUseAPI": ["android.database.Cursor.moveToFirst()"], "Fixed commit": "40f1cb85ceae744bfbb858f1ae8bd1ebb4b961bc", "Url": "https://api.github.com/repos/Data4All/Data4All", "Date": "2015-02-10T13:47:03Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.parse.ParseObject.getList(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (toAdd != null) { for (java.lang.String s : toAdd) { edu.calpoly.android.imfree.DataStore.trueAddParseFriend(s); } obj.removeAll(\"AcceptedRequests\", toAdd); obj.saveInBackground(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/4710/buggy-version/src.edu.calpoly.android.imfree.WhosFree.java", "BodyUseAPI": ["com.parse.ParseObject.removeAll(java.lang.String,java.util.List<java.lang.String>)"], "Fixed commit": "ffd47d862c03ec0827d766f0be576aebbdfa702b", "Url": "https://api.github.com/repos/ianw11/I-mFreeApp", "Date": "2014-03-06T08:26:31Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (select) this.displayEntityBar();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/8247/buggy-version/core.src.com.esbjon.entities.Entity.java", "BodyUseAPI": [], "Fixed commit": "2b232e38d05c3d3d94df1d873b3d4fa2a4c39c53", "Url": "https://api.github.com/repos/k-o-r-t-o/gdxDune", "Date": "2016-04-02T21:42:31Z"},
{"Line": "=>276", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["TagConfig.getReqAttrs(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (null == req_attrs) { addResult(f_name, lineNum, tag, ResultSet.Message.INVALID_OPEN_TAG, pos); req_attrs = new java.util.Vector<java.lang.String>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/3534/buggy-version/src.Tags.java", "BodyUseAPI": [], "Fixed commit": "05cc40751ff5f062e443a91712b06ee25b9b8e0f", "Url": "https://api.github.com/repos/kodavx86/web_page_verify", "Date": "2012-12-01T21:06:11Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (h < 0) { if (rowcount > 0) h = rowcount; else throw new maze.MazeParsingException(\"the maze looks empty\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/140/buggy-version/maze.Maze.java", "BodyUseAPI": [], "Fixed commit": "dbf78696142e8ec707ce615a393e9ede6d8224a3", "Url": "https://api.github.com/repos/ChillyCider/MazeSolver", "Date": "2016-09-23T23:30:31Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (subreddit.equals(\"FORCE_LINK_CLICK\")) { setLongClickable(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/5981/buggy-version/app.src.main.java.me.ccrama.redditslide.SpoilerRobotoTextView.java", "BodyUseAPI": [], "Fixed commit": "22744113d186170d66d14edd398ae7d2264bf645", "Url": "https://api.github.com/repos/Alexendoo/Slide", "Date": "2016-02-17T21:20:06Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.talend.esb.sam.server.ui.CriteriaAdapter.getWhereClause()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((whereClause != null) && ((whereClause.length()) > 0)) { countQuery = countQuery.replaceAll(org.talend.esb.sam.server.ui.SUBSTITUTION_STRING, (\" WHERE \" + whereClause)); }else { countQuery = countQuery.replaceAll(org.talend.esb.sam.server.ui.SUBSTITUTION_STRING, \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/911/buggy-version/sam.sam-server-war.src.main.java.org.talend.esb.sam.server.ui.UIProviderImpl.java", "BodyUseAPI": ["java.lang.String.replaceAll(org.talend.esb.sam.server.ui.SUBSTITUTION_STRING,java.lang.String)"], "Fixed commit": "3b4c01ecfdab57fe6385c461353c2808e35f62c7", "Url": "https://api.github.com/repos/Talend/tesb-rt-se", "Date": "2011-06-06T13:19:21Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_total) == 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/152/buggy-version/portal-service.src.com.liferay.portal.kernel.interval.IntervalActionProcessor.java", "BodyUseAPI": [], "Fixed commit": "0185a19dd53ea803e6324b8d1dd476f7e51e5aab", "Url": "https://api.github.com/repos/liferay/liferay-portal", "Date": "2015-05-27T18:49:20Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (model != null) { jsonModel.put(model.parsers.AudioBookParser.CONTRIBUTORS_JSON_KEY, model.getContributors()); jsonModel.put(model.parsers.AudioBookParser.REVISION_JSON_KEY, model.getRevision()); jsonModel.put(model.parsers.AudioBookParser.TEXT_VERSION_JSON_KEY, model.getTextVersion()); jsonModel.put(model.parsers.AudioBookParser.SOURCE_LIST_JSON_KEY, model.parsers.AudioChapterParser.getBooksJsonForVersion(model)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/233/buggy-version/app.app.src.main.java.model.parsers.AudioBookParser.java", "BodyUseAPI": ["model.daoModels.AudioBook.getTextVersion()", "org.json.JSONObject.put(java.lang.String,model.getTextVersion())", "org.json.JSONObject.put(java.lang.String,model.getContributors())", "org.json.JSONObject.put(java.lang.String,model.parsers.AudioChapterParser.getBooksJsonForVersion(model))", "model.parsers.AudioChapterParser.getBooksJsonForVersion(model.daoModels.AudioBook)", "model.daoModels.AudioBook.getRevision()", "org.json.JSONObject.put(java.lang.String,model.getRevision())", "model.daoModels.AudioBook.getContributors()"], "Fixed commit": "407f8db3752601a28940415d77b3f8a51a15edfe", "Url": "https://api.github.com/repos/unfoldingWord-dev/uw-android", "Date": "2015-09-26T04:59:47Z"},
{"Line": "=>796", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.tencent.sonic.sdk.SonicSession.STATE_DESTROY) == (sessionState.get())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/1467/buggy-version/sonic-android.sdk.src.main.java.com.tencent.sonic.sdk.SonicSession.java", "BodyUseAPI": [], "Fixed commit": "29de894d887fc728ff844b4871c1529e0311ce66", "Url": "https://api.github.com/repos/felixxfwang/VasSonic", "Date": "2017-10-17T08:54:27Z"},
{"Line": "=>381", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mode.equals(\"new\")) { it.putExtra(\"id_cmb\", auth.getRota().getEstacoesElevatoriasArrayList().get(position).getConjuntoMotorBombaArrayList().get(position_cmb).getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/3673/buggy-version/app.src.main.java.br.com.monster.smokeproject.NovaVistoriaActivity.java", "BodyUseAPI": [], "Fixed commit": "360a17255e28dd2df76905653fe74f1b0450dff1", "Url": "https://api.github.com/repos/miqueias/smokeproject", "Date": "2017-01-25T16:54:58Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((this.pageObject) != null) this.pageElement = this.pageObject.getElement(step.getPageName(), step.getName()); else this.pageElement = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/8157/buggy-version/framework.src.org.xframium.debugger.StepContainer.java", "BodyUseAPI": [], "Fixed commit": "e82ce207f2f4eef99147b82416bc5c525c2bc68c", "Url": "https://api.github.com/repos/xframium/xframium-java", "Date": "2017-02-03T19:16:44Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["vn.edu.fu.veazy.core.form.UpdateUserForm.getQuote()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(vn.edu.fu.veazy.core.common.utils.Utils.isNullOrEmpty(quote))) { user.setQuote(quote); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/3010/buggy-version/WIP.Source.Veazy.src.main.java.vn.edu.fu.veazy.core.service.UserServiceImpl.java", "BodyUseAPI": ["vn.edu.fu.veazy.core.model.UserModel.setQuote(java.lang.String)"], "Fixed commit": "eb5b9135dbf599ab8739031c520fbad79ef09d58", "Url": "https://api.github.com/repos/sangnvus/201605JS01", "Date": "2016-08-01T16:37:15Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.todoroo.astrid.service.ThemeService.getTheme()) == (R.style.Theme_White_Alt)) resource = R.drawable.importance_background_selected;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/1859/buggy-version/astrid.src.com.todoroo.astrid.ui.ImportanceControlSet.java", "BodyUseAPI": [], "Fixed commit": "94d0952e5bad685efd619d9e74cf37f723fc7c2f", "Url": "https://api.github.com/repos/sbosley/astrid", "Date": "2013-04-09T18:29:45Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (remote.isDeleted()) return org.openlca.app.cloud.ui.diff.DiffResult.DiffResponse.CONFLICT;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/706/buggy-version/olca-app.src.org.openlca.app.cloud.ui.diff.DiffResult.java", "BodyUseAPI": [], "Fixed commit": "f0163d7aad2975ae86d0a9e0eccdbca5e50ac0c5", "Url": "https://api.github.com/repos/GreenDelta/olca-app", "Date": "2017-09-12T02:58:09Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.HONEYCOMB)) { v.setActivated(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/1292/buggy-version/projects.android.classygames.src.com.charlesmadere.android.classygames.ConfirmGameFragment.java", "BodyUseAPI": [], "Fixed commit": "d1ca196575e2b42c33c778f45e4f71adc50eb10c", "Url": "https://api.github.com/repos/ScootrNova/ClassyGames", "Date": "2013-06-30T22:02:13Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.HONEYCOMB)) { v.setActivated(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/1292/buggy-version/projects.android.classygames.src.com.charlesmadere.android.classygames.ConfirmGameFragment.java", "BodyUseAPI": [], "Fixed commit": "d1ca196575e2b42c33c778f45e4f71adc50eb10c", "Url": "https://api.github.com/repos/ScootrNova/ClassyGames", "Date": "2013-06-30T22:02:13Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((board) == null) { castle.setEnabled(false); }else { if (((com.charlesmadere.android.classygames.models.games.chess.Board) (board)).canCastle()) { castle.setEnabled(true); }else { castle.setEnabled(false); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/1292/buggy-version/projects.android.classygames.src.com.charlesmadere.android.classygames.ChessGameFragment.java", "BodyUseAPI": [], "Fixed commit": "d1ca196575e2b42c33c778f45e4f71adc50eb10c", "Url": "https://api.github.com/repos/ScootrNova/ClassyGames", "Date": "2013-06-30T22:02:13Z"},
{"Line": "=>489", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((username.equals(com.google.gwt.user.client.Cookies.getCookie(\"loggedIn\"))) && (viewProfileAsPrivate)) privateProfile = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/5753/buggy-version/Addendum.src.com.cs1530.group4.addendum.client.Profile.java", "BodyUseAPI": [], "Fixed commit": "dd4845b7dd89e4e4337bdb5f0b6922ee164ccee1", "Url": "https://api.github.com/repos/RobertMcDermot/CS1530Project", "Date": "2013-11-09T21:05:45Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((username.equals(com.google.gwt.user.client.Cookies.getCookie(\"loggedIn\"))) && (viewProfileAsPrivate)) privateProfile = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/5753/buggy-version/Addendum.src.com.cs1530.group4.addendum.client.Profile.java", "BodyUseAPI": [], "Fixed commit": "dd4845b7dd89e4e4337bdb5f0b6922ee164ccee1", "Url": "https://api.github.com/repos/RobertMcDermot/CS1530Project", "Date": "2013-11-09T21:05:45Z"},
{"Line": "=>391", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((username.equals(com.google.gwt.user.client.Cookies.getCookie(\"loggedIn\"))) && (viewProfileAsPrivate)) privateProfile = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/5753/buggy-version/Addendum.src.com.cs1530.group4.addendum.client.Profile.java", "BodyUseAPI": [], "Fixed commit": "dd4845b7dd89e4e4337bdb5f0b6922ee164ccee1", "Url": "https://api.github.com/repos/RobertMcDermot/CS1530Project", "Date": "2013-11-09T21:05:45Z"},
{"Line": "=>568", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((username.equals(com.google.gwt.user.client.Cookies.getCookie(\"loggedIn\"))) && (viewProfileAsPrivate)) privateProfile = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/5753/buggy-version/Addendum.src.com.cs1530.group4.addendum.client.Profile.java", "BodyUseAPI": [], "Fixed commit": "dd4845b7dd89e4e4337bdb5f0b6922ee164ccee1", "Url": "https://api.github.com/repos/RobertMcDermot/CS1530Project", "Date": "2013-11-09T21:05:45Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (navBarCanMove()) { setup(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/4459/buggy-version/library.src.main.java.com.devbrackets.android.exomedia.widget.FitsSystemWindowRelativeLayout.java", "BodyUseAPI": [], "Fixed commit": "53ac8eca1f3333672248684871e6966c5e8c520d", "Url": "https://api.github.com/repos/brianwernick/ExoMedia", "Date": "2016-01-11T22:28:47Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["SimpleScanner.readString()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (action.equals(\"p\")) { r.takePic(); }else if (action.equals(\"c\")) { java.lang.System.out.print(\"How Much (in %)\"); int chargeLevel = input.readInt(); r.charge(chargeLevel); }else if (action.equals(\"a\")) { java.lang.System.out.print(\"Whom would you like to attack?\"); java.lang.String victim = input.readString(); Rover v = group.find(victim); if (victim != null) { r.damage(v); }else { java.lang.System.out.println(\"Rover Does Not Exist\"); } }else { java.lang.System.out.println(\"Command Invalid\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/4930/buggy-version/RoverRunner.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "92b6e91c437987efdb166e9361f34425cc255260", "Url": "https://api.github.com/repos/NondescriptCoder/mars-rover", "Date": "2017-10-10T14:29:19Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isProjectRename(snapshot)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/7593/buggy-version/plugin-logic.src.main.java.fi.helsinki.cs.plugin.tmc.services.ProjectEventHandler.java", "BodyUseAPI": [], "Fixed commit": "3b0b9375964f1cef189d8c1557aa5999ef30610b", "Url": "https://api.github.com/repos/tmc-eclipse/tmc-eclipse", "Date": "2014-06-13T11:57:05Z"},
{"Line": "=>1211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.dashbuilder.dataprovider.sql.SQLDataSetProvider.LookupProcessor.calculateDateInterval(org.dashbuilder.dataset.group.ColumnGroup)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (DateIntervalType.DAY_OF_WEEK.equals(intervalType)) { throw new java.lang.IllegalArgumentException(\"Group by DAY_OF_WEEK not supported in SQL data sets\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/4643/buggy-version/dashbuilder-backend.dashbuilder-dataset-sql.src.main.java.org.dashbuilder.dataprovider.sql.SQLDataSetProvider.java", "BodyUseAPI": [], "Fixed commit": "51d2c032e5eaf15c742ca9707573abd4aae3dc1a", "Url": "https://api.github.com/repos/dgutierr/dashbuilder", "Date": "2017-04-26T14:02:52Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.orange.groupbuy.manager.ProductManager.getDeltCnt()", "com.orange.groupbuy.manager.ProductManager.getResultCnt(org.apache.solr.common.SolrDocumentList)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (resultCnt >= deltCnt) realCnt = resultCnt - deltCnt;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/7274/buggy-version/src.com.orange.groupbuy.api.service.SearchService.java", "BodyUseAPI": [], "Fixed commit": "f6a6f86107f79553b0f6fc264ec6bc81f2cdd847", "Url": "https://api.github.com/repos/gckjdev/GroupBuy_API_Server", "Date": "2011-10-15T03:17:26Z"},
{"Line": "=>327", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (nodeDrive != null) { nodeDrive = nodeDrive.clone(); nodeDrive.getParameters().put(ManageDriveServiceImpl.DRIVE_PARAMATER_USER_ID, (((((((splitedPath[2]) + \"/\") + (splitedPath[3])) + \"/\") + (splitedPath[4])) + \"/\") + (splitedPath[5]))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/5735/buggy-version/core.services.src.main.java.org.exoplatform.services.cms.documents.impl.DocumentServiceImpl.java", "BodyUseAPI": ["org.exoplatform.services.cms.drives.DriveData.clone()"], "Fixed commit": "70df6b5aafd42bf50343501ce9c5581e20273345", "Url": "https://api.github.com/repos/exodev/ecms", "Date": "2017-05-30T15:57:23Z"},
{"Line": "=>1233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (values != null) { java.util.List<java.lang.String> seeAlsoClassNames = new java.util.ArrayList<java.lang.String>(); for (java.lang.Class next : values) { seeAlsoClassNames.add(next.getName()); } info.setXmlSeeAlso(seeAlsoClassNames); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/359/buggy-version/moxy.org.eclipse.persistence.moxy.src.org.eclipse.persistence.jaxb.compiler.AnnotationsProcessor.java", "BodyUseAPI": [], "Fixed commit": "2dd05cb7e368bc4b7832b5e96d27414fc768034b", "Url": "https://api.github.com/repos/sabineheider/eclipselink.runtime", "Date": "2013-02-15T18:12:03Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_lastRead) > (_offset)) { _lastRead = _offset; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/5609/buggy-version/src.org.derric_lang.validator.ValidatorInputStreamImpl.java", "BodyUseAPI": [], "Fixed commit": "5e52376e7e5a2ad1239fb4ac95bcc6fa23aeff09", "Url": "https://api.github.com/repos/tvdstorm/derric", "Date": "2012-07-23T08:27:24Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_offset) > (_lastRead)) { _lastRead = _offset; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/5609/buggy-version/src.org.derric_lang.validator.ValidatorInputStreamImpl.java", "BodyUseAPI": [], "Fixed commit": "5e52376e7e5a2ad1239fb4ac95bcc6fa23aeff09", "Url": "https://api.github.com/repos/tvdstorm/derric", "Date": "2012-07-23T08:27:24Z"},
{"Line": "=>305", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((registry) != null) { registry.notifyChanged(this, index, 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/179/buggy-version/library.src.main.java.jp.keita.kagurazaka.filteredobservablecollection.FilteredReadOnlyObservableList.java", "BodyUseAPI": [], "Fixed commit": "e3f8a389ea3c90174b0d3e00c1171784ea49ec13", "Url": "https://api.github.com/repos/k-kagurazaka/filtered-observable-collection", "Date": "2016-09-17T12:52:00Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((registry) != null) { registry.notifyChanged(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/179/buggy-version/library.src.main.java.jp.keita.kagurazaka.filteredobservablecollection.FilteredReadOnlyObservableList.java", "BodyUseAPI": [], "Fixed commit": "e3f8a389ea3c90174b0d3e00c1171784ea49ec13", "Url": "https://api.github.com/repos/k-kagurazaka/filtered-observable-collection", "Date": "2016-09-17T12:52:00Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.ObjectInputStream.readObject()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(cMsg.isYou)) users.add(new UserId(cMsg.getUserID(), cMsg.getMessage()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/5959/buggy-version/src.ChatClient.java", "BodyUseAPI": ["ChatMessage.getUserID()", "java.util.ArrayList<UserId>.add(UserId)", "ChatMessage.getMessage()"], "Fixed commit": "f2dc8d4e3fff6ae319a78812b9580a1b18d425e4", "Url": "https://api.github.com/repos/Elric86/ChatClient", "Date": "2016-02-27T02:22:02Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.player.PlayerMoveEvent.getPlayer()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (plugin.getPlayers().isInTeleport(player.getUniqueId())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/8119/buggy-version/src.com.wasteofplastic.acidisland.listeners.AcidEffect.java", "BodyUseAPI": [], "Fixed commit": "d74ca1ea9b348ac7c3d9caf865c1af2898f87d17", "Url": "https://api.github.com/repos/tastybento/acidisland", "Date": "2017-03-17T03:33:51Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((node.getChildCount()) > 0) { java.util.Collection<? extends org.antlr.v4.runtime.tree.ParseTree> matching = elements[i].evaluate(node); next.addAll(matching); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/8880/buggy-version/runtime.Java.src.org.antlr.v4.runtime.tree.xpath.XPath.java", "BodyUseAPI": ["elements[i].evaluate(org.antlr.v4.runtime.tree.ParseTree)"], "Fixed commit": "09ddded3ed086da12d7e11bd580dea8a1a9586fc", "Url": "https://api.github.com/repos/sharwell/antlr4", "Date": "2013-09-12T00:49:25Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<java.lang.String>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (next.equals(org.antlr.v4.runtime.tree.xpath.XPath.WILDCARD)) { elements.add(new org.antlr.v4.runtime.tree.xpath.XPathWildcardAnywhereElement()); }else if (((next.charAt(0)) == '\\'') || (java.lang.Character.isUpperCase(next.charAt(0)))) { elements.add(new org.antlr.v4.runtime.tree.xpath.XPathTokenAnywhereElement(next, tokenTypes.get(next))); }else { elements.add(new org.antlr.v4.runtime.tree.xpath.XPathRuleAnywhereElement(next, ruleIndexes.get(next))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/8880/buggy-version/runtime.Java.src.org.antlr.v4.runtime.tree.xpath.XPath.java", "BodyUseAPI": ["java.lang.String.charAt(int)", "java.lang.Character.isUpperCase(char)", "java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)", "java.util.List<org.antlr.v4.runtime.tree.xpath.XPathElement>.add(org.antlr.v4.runtime.tree.xpath.XPathTokenAnywhereElement)", "java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)", "java.lang.String.charAt(int)", "java.util.List<org.antlr.v4.runtime.tree.xpath.XPathElement>.add(org.antlr.v4.runtime.tree.xpath.XPathRuleAnywhereElement)"], "Fixed commit": "09ddded3ed086da12d7e11bd580dea8a1a9586fc", "Url": "https://api.github.com/repos/sharwell/antlr4", "Date": "2013-09-12T00:49:25Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<java.lang.String>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (el.equals(org.antlr.v4.runtime.tree.xpath.XPath.WILDCARD)) { elements.add(new org.antlr.v4.runtime.tree.xpath.XPathWildcardElement()); }else if (((el.charAt(0)) == '\\'') || (java.lang.Character.isUpperCase(el.charAt(0)))) { elements.add(new org.antlr.v4.runtime.tree.xpath.XPathTokenElement(el, tokenTypes.get(el))); }else { elements.add(new org.antlr.v4.runtime.tree.xpath.XPathRuleElement(el, ruleIndexes.get(el))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/8880/buggy-version/runtime.Java.src.org.antlr.v4.runtime.tree.xpath.XPath.java", "BodyUseAPI": ["java.util.List<org.antlr.v4.runtime.tree.xpath.XPathElement>.add(org.antlr.v4.runtime.tree.xpath.XPathTokenElement)", "java.lang.String.charAt(int)", "java.lang.Character.isUpperCase(char)", "java.util.List<org.antlr.v4.runtime.tree.xpath.XPathElement>.add(org.antlr.v4.runtime.tree.xpath.XPathRuleElement)", "java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)", "java.lang.String.charAt(int)", "java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)"], "Fixed commit": "09ddded3ed086da12d7e11bd580dea8a1a9586fc", "Url": "https://api.github.com/repos/sharwell/antlr4", "Date": "2013-09-12T00:49:25Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((t.getChildren()) == null) { java.lang.System.out.println(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/8880/buggy-version/runtime.Java.src.org.antlr.v4.runtime.tree.xpath.XPathRuleElement.java", "BodyUseAPI": [], "Fixed commit": "09ddded3ed086da12d7e11bd580dea8a1a9586fc", "Url": "https://api.github.com/repos/sharwell/antlr4", "Date": "2013-09-12T00:49:25Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!findTokens) && (t instanceof org.antlr.v4.runtime.ParserRuleContext)) { org.antlr.v4.runtime.ParserRuleContext ctx = ((org.antlr.v4.runtime.ParserRuleContext) (t)); if ((ctx.getRuleIndex()) == index) nodes.add(t); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/8880/buggy-version/runtime.Java.src.org.antlr.v4.runtime.tree.Trees.java", "BodyUseAPI": ["java.util.List<? super org.antlr.v4.runtime.tree.ParseTree>.add(org.antlr.v4.runtime.tree.ParseTree)"], "Fixed commit": "09ddded3ed086da12d7e11bd580dea8a1a9586fc", "Url": "https://api.github.com/repos/sharwell/antlr4", "Date": "2013-09-12T00:49:25Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((vertretungsplan) != null) setVertretungsplan(vertretungsplan);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/4924/buggy-version/Vertretungsplan.vertretungsplan.src.main.java.com.johan.vertretungsplan_2.StartActivity.java", "BodyUseAPI": [], "Fixed commit": "0cd1b6e1905d535801b1929a6ba2df3edb74b4e1", "Url": "https://api.github.com/repos/johan12345/vertretungsplan", "Date": "2014-12-24T12:30:16Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.BufferedInputStream.read(byte[])"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (inputStreamResponse == bufferSize) { MESSAGE_DIGEST.update(digestBuffer); }else { MESSAGE_DIGEST.update(digestBuffer, 0, inputStreamResponse); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/6231/buggy-version/src.com.unduplicator.logic.CheckSumMaker.java", "BodyUseAPI": ["java.security.MessageDigest.update(byte[],int,int)"], "Fixed commit": "d2a05d54ee245e690d90ae7bd2174f59ee8308db", "Url": "https://api.github.com/repos/MontolioV/Uniqueoid", "Date": "2017-10-23T09:03:13Z"},
{"Line": "=>842", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mage.cards.Cards.get(cards.iterator().next(),mage.game.Game)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (chosenCard != null) { moveObjectToLibrary(chosenCard.getId(), source.getSourceId(), game, false, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/3272/buggy-version/Mage.src.mage.players.PlayerImpl.java", "BodyUseAPI": ["mage.cards.Card.getId()", "mage.players.PlayerImpl.moveObjectToLibrary(chosenCard.getId(),source.getSourceId(),mage.game.Game,boolean,boolean)"], "Fixed commit": "fed8c652141aacaf8b23ce7fd80f4dcdd852f745", "Url": "https://api.github.com/repos/myersn024/mage", "Date": "2015-03-03T21:13:49Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.semanticscience.narf.graphs.nucleicacid.NucleicAcid.getMinimumCycleBasis()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((ccb.size()) == 0) { java.lang.System.out.println(((\"PDBID:\" + aFilePath) + \" has an empty cycle basis!\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/2841/buggy-version/graphs.src.main.java.org.semanticscience.narf.graphs.main.CycleExtractor.java", "BodyUseAPI": [], "Fixed commit": "1a12927edce656c23943a1e30ee250742b19acdb", "Url": "https://api.github.com/repos/jctoledo/narf", "Date": "2014-01-07T02:24:12Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (shouldCache) { com.ywwxhz.lib.kits.FileCacheKit.getInstance().put(((item.getSid()) + \"\"), com.ywwxhz.lib.kits.Toolkit.getGson().toJson(item)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/7325/buggy-version/app.src.main.java.com.ywwxhz.data.impl.NewsDetailProvider.java", "BodyUseAPI": [], "Fixed commit": "80ef357f24c9b9479d32002b6f5efbb0b4416e69", "Url": "https://api.github.com/repos/ywwxhz/cnBetaReader", "Date": "2015-06-02T09:16:00Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getPlatformServices().getServiceReferences(com.ibm.jaggr.core.IAggregator.class.getName(), ((\"(name=\" + (getName())) + \")\"))) != null) { throw new java.lang.IllegalStateException((\"Name already registered - \" + (name))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/4467/buggy-version/jaggr-service.src.main.java.com.ibm.jaggr.service.impl.AggregatorImpl.java", "BodyUseAPI": [], "Fixed commit": "21183ddcbf220306d94231ecd4de901fc014f387", "Url": "https://api.github.com/repos/OpenNTF/JavascriptAggregator", "Date": "2014-06-04T20:08:35Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (algo.equals(\"search\")) { mergeManager = new in.edu.ashoka.surf.SearchMergeManager(d, arguments); }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/4132/buggy-version/src.in.edu.ashoka.surf.MergeManager.java", "BodyUseAPI": [], "Fixed commit": "c244a3905bd713e5c8275d8ed26982756db3692a", "Url": "https://api.github.com/repos/tcpd/surf", "Date": "2017-08-02T08:04:54Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dataSnapshot.hasChild(\"lostItems\")) { plus1s.app.model.LostItem.setLostItem(dataSnapshot.child(\"lostItems\").getValue(t)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/3291/buggy-version/App.app.src.main.java.plus1s.app.controllers.LoginActivity.java", "BodyUseAPI": ["com.google.firebase.database.DataSnapshot.child(java.lang.String)", "dataSnapshot.child(\"lostItems\").getValue(com.google.firebase.database.GenericTypeIndicator<java.util.HashMap<java.lang.String, plus1s.app.model.Item>>)", "plus1s.app.model.LostItem.setLostItem(dataSnapshot.child(\"lostItems\").getValue(t))"], "Fixed commit": "9a57e01026613b5ec75a775b24127c2b680ad8e6", "Url": "https://api.github.com/repos/IvoryCandy/Plus1s", "Date": "2017-07-07T17:01:57Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dataSnapshot.hasChild(\"foundItems\")) { plus1s.app.model.FoundItem.setFoundItem(dataSnapshot.child(\"foundItems\").getValue(t)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/3291/buggy-version/App.app.src.main.java.plus1s.app.controllers.LoginActivity.java", "BodyUseAPI": ["dataSnapshot.child(\"foundItems\").getValue(com.google.firebase.database.GenericTypeIndicator<java.util.HashMap<java.lang.String, plus1s.app.model.Item>>)", "com.google.firebase.database.DataSnapshot.child(java.lang.String)", "plus1s.app.model.FoundItem.setFoundItem(dataSnapshot.child(\"foundItems\").getValue(t))"], "Fixed commit": "9a57e01026613b5ec75a775b24127c2b680ad8e6", "Url": "https://api.github.com/repos/IvoryCandy/Plus1s", "Date": "2017-07-07T17:01:57Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dataSnapshot.hasChild(\"items\")) { user.setItems(dataSnapshot.child(\"items\").getValue(t)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/3291/buggy-version/App.app.src.main.java.plus1s.app.controllers.LoginActivity.java", "BodyUseAPI": ["dataSnapshot.child(\"items\").getValue(com.google.firebase.database.GenericTypeIndicator<java.util.HashMap<java.lang.String, plus1s.app.model.Item>>)", "com.google.firebase.database.DataSnapshot.child(java.lang.String)", "plus1s.app.model.Account.setItems(dataSnapshot.child(\"items\").getValue(t))"], "Fixed commit": "9a57e01026613b5ec75a775b24127c2b680ad8e6", "Url": "https://api.github.com/repos/IvoryCandy/Plus1s", "Date": "2017-07-07T17:01:57Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["summary.getDevices().get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((dev.getStatus()) == (org.gunnm.openautomation.model.DeviceStatus.ONLINE)) { img.setImageResource(R.drawable.offline); }else { img.setImageResource(R.drawable.online); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/5384/buggy-version/android-app.LinuxAutomation.src.org.gunnm.openhomeautomation.logger.SummaryAdapter.java", "BodyUseAPI": [], "Fixed commit": "93b22e2ec4d4647939332815594b8516fe049a10", "Url": "https://api.github.com/repos/juli1/linux-automation", "Date": "2014-06-14T00:56:40Z"},
{"Line": "=>583", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["T.getClass()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (pojoClass.isArray()) { if (null == annotations) { annotations = new java.util.ArrayList<java.lang.annotation.Annotation>(); } java.lang.String attributeName = null; fillArray(pojo, attributeName, pojoClass.getClass().getComponentType(), pojoClass.getClass().getComponentType(), annotations, manufacturingCtx, typeArgsMap); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/8186/buggy-version/src.main.java.uk.co.jemos.podam.api.PodamFactoryImpl.java", "BodyUseAPI": ["java.lang.Class<? extends java.lang.Class>.getComponentType()", "java.lang.Class<?>.getClass()", "java.lang.Class<? extends java.lang.Class>.getComponentType()", "uk.co.jemos.podam.api.PodamFactoryImpl.fillArray(T,java.lang.String,java.lang.Class<?>,java.lang.Class<?>,java.util.List<java.lang.annotation.Annotation>,uk.co.jemos.podam.common.ManufacturingContext,java.util.Map<java.lang.String, java.lang.reflect.Type>)", "java.lang.Class<?>.getClass()"], "Fixed commit": "2d7d9b94dea220f2d6d4c305f0efd123c02320e4", "Url": "https://api.github.com/repos/mtedone/podam", "Date": "2017-01-14T21:50:21Z"},
{"Line": "=>1088", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((core.get(getCoreIndex()).seriesMetadata.size()) > 0) { flattenHashtables(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/8133/buggy-version/components.formats-api.src.loci.formats.FormatReader.java", "BodyUseAPI": [], "Fixed commit": "0d60dc77da954953c0f033e9a730e9fa426f45e8", "Url": "https://api.github.com/repos/qidane/bioformats", "Date": "2014-09-10T16:34:42Z"},
{"Line": "=>408", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((core.get(s).seriesMetadata.size()) > 0) { updateMetadataLists(core.get(s).seriesMetadata); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/8133/buggy-version/components.formats-api.src.loci.formats.FormatReader.java", "BodyUseAPI": ["java.util.List<loci.formats.CoreMetadata>.get(int)", "loci.formats.FormatReader.updateMetadataLists(core.get(s).seriesMetadata)"], "Fixed commit": "0d60dc77da954953c0f033e9a730e9fa426f45e8", "Url": "https://api.github.com/repos/qidane/bioformats", "Date": "2014-09-10T16:34:42Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.osee.framework.skynet.core.artifact.BranchManager.getBranch(org.eclipse.osee.framework.core.data.BranchId)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (branch.getBranchType().equals(BranchType.MERGE)) { branch = branch.getParentBranch(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/4388/buggy-version/plugins.org.eclipse.osee.framework.ui.skynet.src.org.eclipse.osee.framework.ui.skynet.render.word.WordTemplateProcessor.java", "BodyUseAPI": ["org.eclipse.osee.framework.core.model.Branch.getParentBranch()"], "Fixed commit": "9f94c580f09e468d0f307183714a5dd22a1474c0", "Url": "https://api.github.com/repos/eclipse/osee", "Date": "2017-10-21T00:14:22Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getResources().getConfiguration().orientation) == (android.content.res.Configuration.ORIENTATION_PORTRAIT)) { coordinatorLayout = ((android.support.design.widget.CoordinatorLayout) (findViewById(R.id.coordinator))); }else { coordinatorLayout = ((android.support.design.widget.CoordinatorLayout) (findViewById(R.id.coordinator_land))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/7726/buggy-version/app.src.main.java.com.ronen.studio08.verysimplepodcast.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "ea1f8d69e7c0bf795fd3ac2cd1d592182ac0c9a0", "Url": "https://api.github.com/repos/ronenlh/VerySimplePodcast", "Date": "2016-05-23T12:23:10Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (counter > max) { max = counter; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/9090/buggy-version/src.MeetingRoomsII.java", "BodyUseAPI": [], "Fixed commit": "db4a9b9592dca07b2387324053d69ff4cc5e0390", "Url": "https://api.github.com/repos/yao23/Java_Playground", "Date": "2017-07-29T23:38:32Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["parser.MiniREScanner.nextChar()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (next == ((char) (-1))) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/8071/buggy-version/CS3240MiniRE.src.parser.MiniREScanner.java", "BodyUseAPI": [], "Fixed commit": "de23b479d2cbc0b0dc925213cd70a987b30f0f8a", "Url": "https://api.github.com/repos/voidlily/minire", "Date": "2010-12-11T21:26:56Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isEditing) { indexOfOldCourse = getIntent().getExtras().getInt(\"oldCourseIndex\"); intent.putExtra(\"oldCourseIndex\", indexOfOldCourse); intent.putExtra(\"oldCourse\", oldCourse); intent.putExtra(\"shouldEdit\", true); setResult(com.example.uottawa.cali.RESULT_OK, intent); finish(); }else { java.util.ArrayList<com.example.uottawa.cali.Course> courses = ((java.util.ArrayList<com.example.uottawa.cali.Course>) (getIntent().getExtras().getSerializable(\"courseArrayList\"))); java.util.Iterator<com.example.uottawa.cali.Course> iter = courses.iterator(); while (iter.hasNext()) { com.example.uottawa.cali.Course currentCourse = iter.next(); if ((currentCourse.getName().equals(course.getName())) && ((currentCourse.getColorIndex()) == (course.getColorIndex()))) { isTheSame = true; } } if (isTheSame) { final android.support.v7.app.AlertDialog.Builder alert = new android.support.v7.app.AlertDialog.Builder(this); alert.setMessage((\"Already a course with the same name\\n\" + \"(Course name has to be unique)\")).setPositiveButton(R.string.ok_filter_dialog, new android.content.DialogInterface.OnClickListener() { @java.lang.Override public void onClick(android.content.DialogInterface dialog, int id) { } }).show(); }else { setResult(com.example.uottawa.cali.RESULT_OK, intent); finish(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/8866/buggy-version/app.src.main.java.com.example.uottawa.cali.CourseActivity.java", "BodyUseAPI": [], "Fixed commit": "f98d3054f57270e2086f52785d1b8496b9cfdd59", "Url": "https://api.github.com/repos/morch028/Cali", "Date": "2017-07-17T22:21:08Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tempString.length()) > 1) { arrString[i] = ((tempString.substring(((tempString.length()) - 1))) + (tempString.substring(1, ((tempString.length()) - 1)))) + (tempString.substring(0, 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/218/buggy-version/src.by.epam.module3.lecture1.task3.ChangeLetters.java", "BodyUseAPI": ["java.lang.String.substring(int)", "java.lang.String.length()", "java.lang.String.length()", "java.lang.String.substring(int,int)", "java.lang.String.substring(int,int)"], "Fixed commit": "2ccdf842853e44bc87ec25bd69e4bf99717d5f2a", "Url": "https://api.github.com/repos/svchig/TA_Java", "Date": "2015-10-29T12:33:13Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.chemistry.opencmis.client.api.Session.getObject(session.createObjectId(objectId))"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (object instanceof org.apache.chemistry.opencmis.client.api.Folder) { ((org.apache.chemistry.opencmis.client.api.Folder) (object)).deleteTree(true, UnfileObject.DELETESINGLEFILED, false); }else { object.delete(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/4380/buggy-version/org.talend.cmis.src.main.java.org.talend.cmis.helper.CmisSessionManager.java", "BodyUseAPI": ["org.apache.chemistry.opencmis.client.api.CmisObject.delete(boolean)"], "Fixed commit": "b316ed658197858b86051ff3a823ba7671e128ff", "Url": "https://api.github.com/repos/Ekito/talend-cmis-plugins", "Date": "2013-05-16T08:32:39Z"},
{"Line": "=>562", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.talend.csv.CSVReader.getValues()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (i >= (columnsValue.length)) { record.put(headers[i], \"\"); }else { if (((columnsValue[i]) != null) && ((columnsValue[i].length()) > 0)) { record.put(headers[i], columnsValue[i]); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/7739/buggy-version/main.plugins.org.talend.dataprofiler.core.src.org.talend.dataprofiler.core.pattern.ImportFactory.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)", "java.util.HashMap<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)", "java.lang.String.length()"], "Fixed commit": "4d5ee640cf62030b023ef9339b727bccd22ec100", "Url": "https://api.github.com/repos/Talend/tdq-studio-se", "Date": "2016-10-31T10:08:59Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.utilsplus.logging.PLogger.wasAlreadyCreated)) { com.utilsplus.logging.LoggingConfigurator.printAll(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/2536/buggy-version/UtilsPlus.src.com.utilsplus.logging.PLogger.java", "BodyUseAPI": [], "Fixed commit": "630b4391c71361ef55dbc62d85047e938ae37d53", "Url": "https://api.github.com/repos/Thyaris/UtilsPlus", "Date": "2015-11-05T09:19:36Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (arguments == null) { throw new java.lang.IllegalArgumentException(\"One argument is expected\"); }else if ((arguments.size()) != 2) { throw new java.lang.IllegalArgumentException(((\"Two arguments were expected, \" + (arguments.size())) + \" were supplied\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/7643/buggy-version/core-rules.src.main.java.org.hisp.dhis.rules.functions.RuleFunctionMonthsBetween.java", "BodyUseAPI": ["java.util.List<java.lang.String>.size()", "java.util.List<java.lang.String>.size()"], "Fixed commit": "9b26ccc0d50dbac00bfd4c42a7bf627358bdd577", "Url": "https://api.github.com/repos/EyeSeeTea/dhis2-android-sdk", "Date": "2017-12-21T12:30:24Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.hisp.dhis.rules.functions.RuleFunctionMonthsBetween.isEmpty(start)) || (org.hisp.dhis.rules.functions.RuleFunctionMonthsBetween.isEmpty(end))) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/7643/buggy-version/core-rules.src.main.java.org.hisp.dhis.rules.functions.RuleFunctionMonthsBetween.java", "BodyUseAPI": [], "Fixed commit": "9b26ccc0d50dbac00bfd4c42a7bf627358bdd577", "Url": "https://api.github.com/repos/EyeSeeTea/dhis2-android-sdk", "Date": "2017-12-21T12:30:24Z"},
{"Line": "=>693", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((boardState.data_.modelForSide(targetSide).getNumMinions()) < (targetIndex.getInt())) { targetIndex = com.hearthsim.card.minion.CharacterIndex.fromInteger(boardState.data_.modelForSide(targetSide).getNumMinions()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/6972/buggy-version/src.main.java.com.hearthsim.card.minion.Minion.java", "BodyUseAPI": ["com.hearthsim.card.minion.CharacterIndex.fromInteger(boardState.data_.modelForSide(targetSide).getNumMinions())", "boardState.data_.modelForSide(targetSide).getNumMinions()", "boardState.data_.modelForSide(com.hearthsim.model.PlayerSide)"], "Fixed commit": "cb05c51309074342e42df009ea1491b9844d1855", "Url": "https://api.github.com/repos/slaymaker1907/HearthSim", "Date": "2015-06-24T17:03:11Z"},
{"Line": "=>576", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.kit.joana.util.Log.getLogger(Log.L_WALA_UNRESOLVED_CLASSES)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (l.isEnabled()) { final java.util.Set<com.ibm.wala.types.TypeReference> unresolved = cfg.cha.getUnresolvedClasses(); if (unresolved != null) { for (final com.ibm.wala.types.TypeReference tref : unresolved) { l.outln((\"unresolved: \" + tref)); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/6746/buggy-version/wala.joana.wala.core.src.edu.kit.joana.wala.core.SDGBuilder.java", "BodyUseAPI": ["edu.kit.joana.util.Logger.outln((\"unresolved: \" + tref))"], "Fixed commit": "de861769d59add83181cd2c00708de117c7bd904", "Url": "https://api.github.com/repos/jgf/joana", "Date": "2014-02-17T14:54:37Z"},
{"Line": "=>361", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((android.support.v4.app.ActivityCompat.checkSelfPermission(getActivity(), Manifest.permission.ACCESS_FINE_LOCATION)) != (android.content.pm.PackageManager.PERMISSION_GRANTED)) && ((android.support.v4.app.ActivityCompat.checkSelfPermission(getActivity(), Manifest.permission.ACCESS_COARSE_LOCATION)) != (android.content.pm.PackageManager.PERMISSION_GRANTED))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/1485/buggy-version/app.src.main.java.com.hetic.hetic_e18_bart.DealsFragment.java", "BodyUseAPI": [], "Fixed commit": "7f9b548d18250623ec037ae9086d922cfd46c3fb", "Url": "https://api.github.com/repos/nothaldir/HETIC-Bart-Project", "Date": "2017-12-22T02:59:39Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.example.user.onedaynquestions.service.FloatingButtonService.xPos) < 0) { com.example.user.onedaynquestions.service.FloatingButtonService.xPos = screenWidth; com.example.user.onedaynquestions.service.FloatingButtonService.yPos = originHeight; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/8902/buggy-version/app.src.main.java.com.example.user.onedaynquestions.service.FloatingButtonService.java", "BodyUseAPI": [], "Fixed commit": "f071d3141a544eca2fa26233fe767c090739d1fb", "Url": "https://api.github.com/repos/KAIST-CS492A-Meddler/1DNQ", "Date": "2016-12-14T10:07:20Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Stack<daybreak.Enemy.Coordinate>.pop()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((map[move.y][move.x].entity) != null) { calculatePath(); }else { setPosition(move.x, move.y); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/991/buggy-version/src.daybreak.Enemy.java", "BodyUseAPI": ["daybreak.Enemy.setPosition(int,int)"], "Fixed commit": "65f633181d40d6df514871144d6d3c3de4c6f8bd", "Url": "https://api.github.com/repos/asr1/Daybreak", "Date": "2015-09-27T23:24:37Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (words.contains(wordChecking)) { highlightWord(wordChecking); words.remove(wordChecking); java.lang.System.out.print((\"words left:\" + (words.size()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/3208/buggy-version/src.main.java.groupProject.wordsearch.GamePanel.java", "BodyUseAPI": ["groupProject.wordsearch.GamePanel.highlightWord(java.lang.String)", "java.io.PrintStream.print(java.lang.String)", "java.util.ArrayList<java.lang.String>.remove(java.lang.String)", "java.util.ArrayList<java.lang.String>.size()"], "Fixed commit": "8144d7b024cfc074571746dd59b5e593026f5e50", "Url": "https://api.github.com/repos/cyoffe/WordSearch", "Date": "2016-02-18T18:59:31Z"},
{"Line": "=>616", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.awt.event.ActionEvent.getSource()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((machineType) > 3) && ((temp.getSelectedIndex()) == 0)) { fourthRotorChoice.setSelectedIndex(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/812/buggy-version/enigma-project.src.main.java.GUINew.RotorPanel.java", "BodyUseAPI": [], "Fixed commit": "5f69e633697a639e0cef6ebcac94c27894cd27c2", "Url": "https://api.github.com/repos/bmwinstead/enigma-project", "Date": "2013-12-13T03:35:33Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (field == null) { parser.nextValue(); return builder; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/6473/buggy-version/protobuf-codec-json.src.main.java.protobuf.codec.json.JacksonJsonReader.java", "BodyUseAPI": [], "Fixed commit": "ad97b441300dc7d14c1ce5455b5a4faee3756214", "Url": "https://api.github.com/repos/spaceapegames/protobuf-codec", "Date": "2014-06-13T12:18:38Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((line[1]) == (line[2])) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/6819/buggy-version/TicTacToe.src.app.game.tictactoe.Game.java", "BodyUseAPI": [], "Fixed commit": "eca8897293de2c3ca7b96129abe99ea4fdf017ca", "Url": "https://api.github.com/repos/fruitCandy/ticTacToe", "Date": "2013-03-23T05:42:14Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((line[1]) == 0) zero++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/6819/buggy-version/TicTacToe.src.app.game.tictactoe.Game.java", "BodyUseAPI": [], "Fixed commit": "eca8897293de2c3ca7b96129abe99ea4fdf017ca", "Url": "https://api.github.com/repos/fruitCandy/ticTacToe", "Date": "2013-03-23T05:42:14Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((line[0]) == 0) zero++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/6819/buggy-version/TicTacToe.src.app.game.tictactoe.Game.java", "BodyUseAPI": [], "Fixed commit": "eca8897293de2c3ca7b96129abe99ea4fdf017ca", "Url": "https://api.github.com/repos/fruitCandy/ticTacToe", "Date": "2013-03-23T05:42:14Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((line[2]) == 0) zero++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/6819/buggy-version/TicTacToe.src.app.game.tictactoe.Game.java", "BodyUseAPI": [], "Fixed commit": "eca8897293de2c3ca7b96129abe99ea4fdf017ca", "Url": "https://api.github.com/repos/fruitCandy/ticTacToe", "Date": "2013-03-23T05:42:14Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (zero != 1) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/6819/buggy-version/TicTacToe.src.app.game.tictactoe.Game.java", "BodyUseAPI": [], "Fixed commit": "eca8897293de2c3ca7b96129abe99ea4fdf017ca", "Url": "https://api.github.com/repos/fruitCandy/ticTacToe", "Date": "2013-03-23T05:42:14Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((line[0]) == (line[2])) { return 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/6819/buggy-version/TicTacToe.src.app.game.tictactoe.Game.java", "BodyUseAPI": [], "Fixed commit": "eca8897293de2c3ca7b96129abe99ea4fdf017ca", "Url": "https://api.github.com/repos/fruitCandy/ticTacToe", "Date": "2013-03-23T05:42:14Z"},
{"Line": "=>553", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((randoop.generation.AbstractGenerator.field_based_gen_keep_non_contributing_tests_percentage) != 1) && (!stored)) { if (randoop.util.fieldbasedcontrol.FieldBasedGenLog.isLoggingOn()) randoop.util.fieldbasedcontrol.FieldBasedGenLog.logLine(\"> The candidates for subsumed sequences are dropped\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/1062/buggy-version/src.main.java.randoop.generation.AbstractGenerator.java", "BodyUseAPI": [], "Fixed commit": "cf71f18bd8ad51f2b35185f49a509a88df15a638", "Url": "https://api.github.com/repos/nmaguirre/randoop", "Date": "2017-01-08T05:19:07Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == b) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/6294/buggy-version/app.src.main.java.com.ds.avare.threed.objects.Map.java", "BodyUseAPI": [], "Fixed commit": "6e9f8fb4bd33a5a3dd59f066b641e53a660eac83", "Url": "https://api.github.com/repos/stratux/avare", "Date": "2016-07-19T15:48:48Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(allUsers)) { this.numUsers = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/3218/buggy-version/RankSys-metrics.src.main.java.es.uam.eps.ir.ranksys.metrics.basic.AverageRecommendationMetric.java", "BodyUseAPI": [], "Fixed commit": "29285e316dede4e4f6c162e617ad990a2aaef248", "Url": "https://api.github.com/repos/jacekwasilewski/RankSys", "Date": "2015-12-18T21:15:18Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((size - i) > 0) { if (checkKante(counter, tempElement)) ret = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/4221/buggy-version/src.com.ma.schiffeversenken.controller.KI.java", "BodyUseAPI": [], "Fixed commit": "53489f0ae1816fdbe09ec752e39af6aae6bc094e", "Url": "https://api.github.com/repos/kschlender/MA", "Date": "2014-11-09T19:58:45Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["WorkersAndWarriorsPlugin.plugin.getSession(org.bukkit.entity.Player)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((session.getState()) != (GameSession.State.OPEN)) { sender.sendMessage(ChatFormat.ERROR.wrap(\"You cannot change your class once the game has started!\")); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/5264/buggy-version/src.nmt.minecraft.WorkersAndWarriors.IO.PlayerCommands.java", "BodyUseAPI": [], "Fixed commit": "31313115a2271a20a7363d626061b0403caf8f7b", "Url": "https://api.github.com/repos/NMTMinecraftClub/WorkersAndWarriors", "Date": "2016-03-26T03:42:26Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mDataset.size()) == 0) mDataset.addAll(data);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/9018/buggy-version/app.src.main.java.com.example.android.newsapp.RecyclerViewFragment.java", "BodyUseAPI": ["java.util.ArrayList<com.example.android.newsapp.Story>.addAll(java.util.List<com.example.android.newsapp.Story>)"], "Fixed commit": "18018ccea10a87d20322955dc99a7480aaef7de1", "Url": "https://api.github.com/repos/Lenki/NewsApp", "Date": "2017-05-28T11:35:54Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(obj.TestAttribute(tmp))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V82/3053/buggy-version/src.main.java.ru.parallel.octotron.rules.Aggregate.java", "BodyUseAPI": [], "Fixed commit": "c782c59539f847bbb6c112fd58babf16d68da9d2", "Url": "https://api.github.com/repos/srcc-msu/octotron_core", "Date": "2014-07-03T08:16:14Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (request.getRequestURI().contains(\"_registered\")) { if ((RegisterPageController.sessions.get(request.getSession())) == null) { response.sendRedirect(\"/index.jsp\"); return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/1713/buggy-version/Reman.src.com.fimelab.reman.utils.Filter.java", "BodyUseAPI": ["RegisterPageController.sessions.get(request.getSession())", "javax.servlet.http.HttpServletRequest.getSession()"], "Fixed commit": "8297002bf81a59b4c209bf18483a47fae5f6f63b", "Url": "https://api.github.com/repos/Jeremielc/Reman", "Date": "2017-02-23T09:58:28Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (photoUri != null) { photo = MediaStore.Images.Media.getBitmap(contentResolver, photoUri); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/6908/buggy-version/app.src.main.java.in.ac.mnnit.sos.extras.Utils.java", "BodyUseAPI": ["MediaStore.Images.Media.getBitmap(android.content.ContentResolver,android.net.Uri)"], "Fixed commit": "164db4bafcf8537822bf0689464977c98500bb73", "Url": "https://api.github.com/repos/prashanth-nani/sos", "Date": "2017-02-28T15:05:34Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (photoUri != null) { photo = MediaStore.Images.Media.getBitmap(contentResolver, android.net.Uri.parse(photoUri)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/6908/buggy-version/app.src.main.java.in.ac.mnnit.sos.extras.Utils.java", "BodyUseAPI": ["MediaStore.Images.Media.getBitmap(android.content.ContentResolver,android.net.Uri.parse(photoUri))", "android.net.Uri.parse(java.lang.String)"], "Fixed commit": "164db4bafcf8537822bf0689464977c98500bb73", "Url": "https://api.github.com/repos/prashanth-nani/sos", "Date": "2017-02-28T15:05:34Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (endPoint == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/3105/buggy-version/integrations.opennms-link-provisioning-adapter.src.main.java.org.opennms.netmgt.provision.adapters.link.DefaultNodeLinkService.java", "BodyUseAPI": [], "Fixed commit": "d865c268a9c0459af94c9cec752e070f8652cc38", "Url": "https://api.github.com/repos/vishwaAbhinav/opennms-1", "Date": "2013-08-12T15:09:07Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getChildren()) != null) { for (java.lang.Object dto : getChildren()) { ((com.thoughtworks.lean.sonar.aggreagtedreport.dao.base.BaseDto) (dto)).setParentId(getId()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/3384/buggy-version/src.main.java.com.thoughtworks.lean.sonar.aggreagtedreport.dao.base.BaseDto.java", "BodyUseAPI": [], "Fixed commit": "730a5082e6927a2c48870fd7b596d8ba4b25764f", "Url": "https://api.github.com/repos/tw-leansw/sonar-aggregated-test-report-plugin", "Date": "2016-05-21T15:42:25Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.file.Files.probeContentType(java.nio.file.Path)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (fileType != null) { t.getResponseHeaders().set(\"Content-Type\", fileType); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/4642/buggy-version/src.com.jackgerrits.handlers.StaticHandler.java", "BodyUseAPI": ["com.sun.net.httpserver.Headers.set(java.lang.String,java.lang.String)"], "Fixed commit": "8a0c05094dd0e6a1e98122bf1d09c2e5e33f74bf", "Url": "https://api.github.com/repos/jackgerrits/smart-home-server", "Date": "2015-05-06T02:48:45Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.blau.android.osm.Relation.getMember(de.blau.android.osm.OsmElement)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (rm != null) { java.lang.String role = rm.getRole(); tl.addView(createRow((role.equals(\"\") ? getString(R.string.empty_role) : role), r.getDescription(), tp)); }else { android.util.Log.d(de.blau.android.ElementInfoFragment.DEBUG_TAG, (((\"inconsistent state: \" + (e.getDescription())) + \" is not a member of \") + r)); org.acra.ACRA.getErrorReporter().putCustomData(\"STATUS\", \"NOCRASH\"); org.acra.ACRA.getErrorReporter().handleException(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/8778/buggy-version/src.de.blau.android.ElementInfoFragment.java", "BodyUseAPI": ["de.blau.android.osm.RelationMember.getRole()"], "Fixed commit": "4bd4a594f023193b62db7c364b88135af0f45d22", "Url": "https://api.github.com/repos/MarcusWolschon/osmeditor4android", "Date": "2015-09-15T10:38:23Z"},
{"Line": "=>611", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(nominatedShepherd.toString().equals(formatNodeIdentifierData()))) { com.rkwon.app.Packet electionQueryPacket = buildElectionResultPacket(null, false, true, false); send(nominatedShepherd, electionQueryPacket); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/6612/buggy-version/src.main.java.com.rkwon.app.CMNode.java", "BodyUseAPI": ["com.rkwon.app.CMNode.send(com.rkwon.app.NodeMetadata,com.rkwon.app.Packet)"], "Fixed commit": "3bde70f9fe2fc12ece4a9a3b82523bc21f2d3e55", "Url": "https://api.github.com/repos/rynkwn/collective-memory", "Date": "2017-12-13T03:38:49Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"init\".equals(msg)) { init(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/8373/buggy-version/code.poker-server.src.main.java.work.notech.poker.net.Server.java", "BodyUseAPI": [], "Fixed commit": "7be6c0be9f7ee7676c6f6d74ccf911df71d1602c", "Url": "https://api.github.com/repos/wangzhaoming/Poker", "Date": "2017-08-05T03:51:22Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (param instanceof com.cnnic.whois.bean.DomainQueryParam) { com.cnnic.whois.bean.DomainQueryParam domainParam = ((com.cnnic.whois.bean.DomainQueryParam) (param)); q = domainParam.getDomainPuny(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/2238/buggy-version/source.whois.src.com.cnnic.whois.dao.query.cache.DnrDomainQueryDao.java", "BodyUseAPI": [], "Fixed commit": "52ce97aa991eee45c7a7f266e3e6ff5732adc7a4", "Url": "https://api.github.com/repos/yun51/restfulwhois", "Date": "2013-12-19T02:40:46Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.lang.Class, java.lang.Integer>.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (orderValue <= 0) { throw new java.lang.IllegalArgumentException(((\"[Error]: Value '\" + orderValue) + \"', value should be > 0\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/4185/buggy-version/homework_module_3.src.com.goit.gojavaonline.musicshop.OrderUtils.java", "BodyUseAPI": [], "Fixed commit": "aeb2162efcbd743371958e5e2bb6572914734337", "Url": "https://api.github.com/repos/IhorPylyavets/GoJavaOnline", "Date": "2016-03-23T12:08:33Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Currency.getDefaultFractionDigits()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (numDigs > 0) { return java.lang.String.format(java.util.Locale.CANADA, ((\"%d.%0\" + (currency_type.getDefaultFractionDigits())) + \"d\"), whole, cents); }else { return java.lang.String.format(java.util.Locale.CANADA, \"%d\", whole); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/3226/buggy-version/src.ca.ualberta.cs.expensemaster.Money.java", "BodyUseAPI": [], "Fixed commit": "f1bc2c27a81d048514fc0eb4e8ec5e6796ca5533", "Url": "https://api.github.com/repos/ItsTristan/ExpenseMaster", "Date": "2015-02-01T11:32:48Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Currency.getDefaultFractionDigits()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (numDigs > 0) { return java.lang.String.format(java.util.Locale.US, ((\"%d.%0\" + (currency_type.getDefaultFractionDigits())) + \"d %s\"), whole, cents, currency_type.toString()); }else { return java.lang.String.format(java.util.Locale.CANADA, \"%d %s\", whole, currency_type.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/3226/buggy-version/src.ca.ualberta.cs.expensemaster.Money.java", "BodyUseAPI": [], "Fixed commit": "f1bc2c27a81d048514fc0eb4e8ec5e6796ca5533", "Url": "https://api.github.com/repos/ItsTristan/ExpenseMaster", "Date": "2015-02-01T11:32:48Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pickupMarker) == null) { updateView(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/1440/buggy-version/app.src.main.java.com.gauravsahu.rides.fragments.FindRidesFragment.java", "BodyUseAPI": [], "Fixed commit": "aa2ec794f9acb6da723fb0964f4769c0e57461ab", "Url": "https://api.github.com/repos/g-sahu/Rides", "Date": "2017-09-16T05:30:52Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((item.getCurrentBidder()) != 0) { hasPrevBidder = true; prevBidder = group.UserBean.initializeFromId(conn, item.getCurrentBidder()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/5828/buggy-version/OnlineAuction.src.controller.CommandConfirmBid.java", "BodyUseAPI": ["group.Item.getCurrentBidder()", "group.UserBean.initializeFromId(java.sql.Connection,item.getCurrentBidder())"], "Fixed commit": "e040baf0562d3e765778784c1ef3f32d9f053588", "Url": "https://api.github.com/repos/mcho421/OnlineAuction", "Date": "2013-10-04T07:26:29Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (uk.co.jordanrobinson.tracktospeech.MainActivity.showNotifier) { displayNotifier(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/3267/buggy-version/app.src.main.java.uk.co.jordanrobinson.tracktospeech.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "9da68d64285cced138699690cf3491622b8c0883", "Url": "https://api.github.com/repos/JordanRobinson/track-to-speech", "Date": "2014-07-31T20:41:22Z"},
{"Line": "=>500", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["context.getInput(transform).getAll()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (allInputs.isEmpty()) { org.apache.flink.api.java.operators.DataSource<java.lang.String> dummySource = context.getExecutionEnvironment().fromElements(\"dummy\"); result = dummySource.flatMap(new org.apache.flink.api.common.functions.FlatMapFunction<java.lang.String, T>() { @java.lang.Override public void flatMap(java.lang.String s, org.apache.flink.util.Collector<T> collector) throws java.lang.Exception { } }).returns(new org.apache.beam.runners.flink.translation.types.CoderTypeInformation(((org.apache.beam.sdk.coders.Coder<T>) (org.apache.beam.sdk.coders.VoidCoder.of())))); }else { for (org.apache.beam.sdk.values.PCollection<T> collection : allInputs) { org.apache.flink.api.java.DataSet<T> current = context.getInputDataSet(collection); if (result == null) { result = current; }else { result = result.union(current); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/3821/buggy-version/runners.flink.runner.src.main.java.org.apache.beam.runners.flink.translation.FlinkBatchTransformTranslators.java", "BodyUseAPI": [], "Fixed commit": "7ad190bc4b13370b3ebebaa9d1df70bc0e14d776", "Url": "https://api.github.com/repos/kennknowles/beam", "Date": "2016-05-06T11:31:18Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (personUrn.equals(\"urn:collab:person:surfnet.nl:rdoe\")) { return java.util.Collections.emptyList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/3913/buggy-version/teams-server.src.main.java.teams.voot.MockVootClient.java", "BodyUseAPI": [], "Fixed commit": "ee213f98ca1718e34ae8591eb57d722214720b78", "Url": "https://api.github.com/repos/OpenConext/OpenConext-Teams-NG", "Date": "2017-05-18T14:56:43Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["federatedUser.getExternalTeams().stream().map(ExternalTeam::getIdentifier).collect(java.util.stream.Collector<java.lang.Object, ?, java.util.List<java.lang.Object>>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (externalTeamIdentifiers.isEmpty()) { return java.util.Collections.emptyMap(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/3913/buggy-version/teams-server.src.main.java.teams.api.ExternalTeamController.java", "BodyUseAPI": [], "Fixed commit": "ee213f98ca1718e34ae8591eb57d722214720b78", "Url": "https://api.github.com/repos/OpenConext/OpenConext-Teams-NG", "Date": "2017-05-18T14:56:43Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (null == (deploymentsPropertyFile)) { getLog().info(((\"Property config file: \" + (deploymentsPropertyFile)) + \" not configured.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/4722/buggy-version/src.main.java.com.orctom.mojo.was.AbstractWASMojo.java", "BodyUseAPI": ["getLog().info(java.lang.String)"], "Fixed commit": "843c12a92efb579e2377f86503602aaf03d4b5f0", "Url": "https://api.github.com/repos/orctom/was-maven-plugin", "Date": "2014-04-28T09:32:21Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(deploymentsPropertyFile.exists())) { getLog().info(((\"Property config file: \" + (deploymentsPropertyFile)) + \" doesn't exist.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/4722/buggy-version/src.main.java.com.orctom.mojo.was.AbstractWASMojo.java", "BodyUseAPI": [], "Fixed commit": "843c12a92efb579e2377f86503602aaf03d4b5f0", "Url": "https://api.github.com/repos/orctom/was-maven-plugin", "Date": "2014-04-28T09:32:21Z"},
{"Line": "=>823", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.emc.storageos.db.client.model.remotereplication.RemoteReplicationPair.getReplicationGroup()", "com.emc.storageos.api.service.impl.resource.remotereplication.RemoteReplicationPairService.queryObject(java.lang.Class,java.net.URI)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (com.emc.storageos.db.client.URIUtil.uriEquals(newGroup.getId(), currentGroupId)) { throw APIException.badRequests.remoteReplicationPairMoveOperationIsNotAllowed(rrPair.getNativeId(), newGroup.getNativeId(), \"target remote replication group can not be the same as the current one\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/6102/buggy-version/apisvc.src.main.java.com.emc.storageos.api.service.impl.resource.remotereplication.RemoteReplicationPairService.java", "BodyUseAPI": ["APIException.badRequests.remoteReplicationPairMoveOperationIsNotAllowed(rrPair.getNativeId(),newGroup.getNativeId(),java.lang.String)", "com.emc.storageos.db.client.model.remotereplication.RemoteReplicationGroup.getNativeId()"], "Fixed commit": "596253fe51694203a3160d4be97369881e7b9d58", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2017-04-19T03:20:26Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (metaService.hasLink(projectVersion, MetaService.COMPONENTS_LINK)) { final java.lang.String componentURL = metaService.getFirstLink(projectVersion, MetaService.COMPONENTS_LINK); return getBomEntries(componentURL); }else { return new java.util.ArrayList<>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/8542/buggy-version/src.main.groovy.com.blackducksoftware.integration.hub.api.aggregate.bom.AggregateBomRequestService.java", "BodyUseAPI": ["com.blackducksoftware.integration.hub.api.item.MetaService.getFirstLink(com.blackducksoftware.integration.hub.model.view.ProjectVersionView,MetaService.COMPONENTS_LINK)"], "Fixed commit": "08bb4460a728b4f2998fad52898392b690942c5d", "Url": "https://api.github.com/repos/blackducksoftware/hub-common", "Date": "2017-08-17T13:48:27Z"},
{"Line": "=>486", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.puppycrawl.tools.checkstyle.checks.coding.RequireThisCheck.getBlockEndToken(com.puppycrawl.tools.checkstyle.api.DetailAST,com.puppycrawl.tools.checkstyle.api.DetailAST)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (blockEndToken != null) { final java.util.Set<com.puppycrawl.tools.checkstyle.api.DetailAST> variableUsagesInsideBlock = com.puppycrawl.tools.checkstyle.checks.coding.RequireThisCheck.getAllTokensWhichAreEqualToCurrent(definitionToken, ident, blockEndToken.getLineNo()); for (com.puppycrawl.tools.checkstyle.api.DetailAST variableUsage : variableUsagesInsideBlock) { final com.puppycrawl.tools.checkstyle.api.DetailAST prevSibling = variableUsage.getPreviousSibling(); if ((prevSibling != null) && ((prevSibling.getType()) == (com.puppycrawl.tools.checkstyle.api.TokenTypes.LITERAL_THIS))) { userDefinedArrangementOfThis = true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/6115/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.checks.coding.RequireThisCheck.java", "BodyUseAPI": ["com.puppycrawl.tools.checkstyle.api.DetailAST.getLineNo()", "com.puppycrawl.tools.checkstyle.checks.coding.RequireThisCheck.getAllTokensWhichAreEqualToCurrent(com.puppycrawl.tools.checkstyle.api.DetailAST,com.puppycrawl.tools.checkstyle.api.DetailAST,blockEndToken.getLineNo())"], "Fixed commit": "d92050aa394cf37743aa301e3fa68913f34decae", "Url": "https://api.github.com/repos/rnveach/checkstyle", "Date": "2016-07-01T20:44:03Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["((net.minecraft.src.EntityPlayerMP) (player)).inventory.getItemStack()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (currentItem != null) (currentItem.stackSize)++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/180/buggy-version/common.pixelmon.comm.packetHandlers.SetHeldItem.java", "BodyUseAPI": [], "Fixed commit": "74ae3202abdfcfb98fdb209913eb91b7acec7703", "Url": "https://api.github.com/repos/Jaryt23/Pixelmon", "Date": "2012-11-09T04:35:32Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((hit.size()) > 0) { double low = hit.get(0); for (int i = 0; i <= ((hit.size()) - 1); i++) { if ((hit.get(i)) <= low) { low = hit.get(i); if ((hitIndex.get(i)) == 0) { lowIndex = 0; }else if ((hitIndex.get(i)) == 2) { lowIndex = 1; }else if ((hitIndex.get(i)) == 4) { lowIndex = 2; }else if ((hitIndex.get(i)) == 6) { lowIndex = 3; } } } java.lang.System.out.println(hit.size()); java.lang.System.out.println(lowIndex); java.lang.System.out.println(((arrriba.model.VectorCalculation.abs(gX.get(lowIndex), gY.get(lowIndex))) + \"bumm\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/5310/buggy-version/src.arrriba.model.Ball.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.Double>.size()", "java.util.ArrayList<java.lang.Double>.get(int)", "java.util.ArrayList<java.lang.Double>.size()", "java.util.ArrayList<java.lang.Double>.get(int)", "java.util.ArrayList<java.lang.Double>.get(int)", "java.io.PrintStream.println(int)"], "Fixed commit": "c620abf565d7c32eaeb1b8c1776ccded08646fef", "Url": "https://api.github.com/repos/pixelvektor/arrriba", "Date": "2016-05-31T09:11:41Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((execution.getTenantId()) == null) || (ProcessEngineConfiguration.NO_TENANT_ID.equals(execution.getTenantId()))) { processDefinition = org.activiti.engine.impl.context.Context.getProcessEngineConfiguration().getDeploymentManager().findDeployedLatestProcessDefinitionByKey(processDefinitonKey); }else { processDefinition = org.activiti.engine.impl.context.Context.getProcessEngineConfiguration().getDeploymentManager().findDeployedLatestProcessDefinitionByKeyAndTenantId(processDefinitonKey, execution.getTenantId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/3686/buggy-version/modules.activiti-engine.src.main.java.org.activiti.engine.impl.bpmn.behavior.CallActivityBehavior.java", "BodyUseAPI": ["org.activiti.engine.impl.pvm.delegate.ActivityExecution.getTenantId()", "org.activiti.engine.impl.context.Context.getProcessEngineConfiguration().getDeploymentManager().findDeployedLatestProcessDefinitionByKeyAndTenantId(java.lang.String,execution.getTenantId())"], "Fixed commit": "03ea540a321b9aec7c3782761c084d6e530354fb", "Url": "https://api.github.com/repos/Activiti/Activiti", "Date": "2014-05-21T12:04:51Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(friend.getBoolean(\"request\"))) { com.example.saurabh.chat.adapters.FriendsAdapter.FriendsItem item = new com.example.saurabh.chat.adapters.FriendsAdapter.FriendsItem(friend.getString(\"username\"), friend.getString(\"date\")); friends.add(item); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/3367/buggy-version/android_app.app.src.main.java.com.example.saurabh.chat.network.FetchFriendsAsyncTask.java", "BodyUseAPI": ["org.json.JSONObject.getString(java.lang.String)", "org.json.JSONObject.getString(java.lang.String)"], "Fixed commit": "7abd6e4ddeab4f6beb690f9e3c56076bb354e2b4", "Url": "https://api.github.com/repos/auroranil/Chat", "Date": "2015-12-30T09:39:10Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((net.minecraftforge.fml.common.FMLCommonHandler.instance().getEffectiveSide()) == (net.minecraftforge.fml.relauncher.Side.CLIENT)) { if ((event.getObject()) instanceof net.minecraft.client.entity.EntityPlayerSP) event.addCapability(CapabilityStatsClientHandler.EP_PLAYER_CLIENT_PROP, new com.mjr.extraplanets.client.handlers.capabilities.CapabilityProviderStatsClient(((net.minecraft.client.entity.EntityPlayerSP) (event.getObject())))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/7473/buggy-version/src.main.java.com.mjr.extraplanets.handlers.MainHandlerServer.java", "BodyUseAPI": [], "Fixed commit": "7ec66cf1e897e3685003d38db117437b8de70684", "Url": "https://api.github.com/repos/MJRLegends/ExtraPlanets", "Date": "2017-04-18T00:55:55Z"},
{"Line": "=>1006", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Params.npcBank.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (secList != null) { for (int i = 0; i < (secList.size()); i++) { this.addNPC(secList.get(i)); } java.util.ArrayList<fap_java.NPC> secBList = Params.npcBacklogBank.get(nmap); if (secBList != null) { for (int i = 0; i < (secBList.size()); i++) { this.addTriggerNPC(secBList.get(i)); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/957/buggy-version/src.fap_java.Game.java", "BodyUseAPI": ["java.util.ArrayList<fap_java.NPC>.size()", "java.util.ArrayList<fap_java.NPC>.get(int)", "fap_java.Game.addNPC(secList.get(i))"], "Fixed commit": "9bd1dfb3cf8602ba49f710f6c19f2670c5096888", "Url": "https://api.github.com/repos/LeonardA-L/FAP_java", "Date": "2015-02-11T12:51:51Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((conMgr) != null) { final android.net.NetworkInfo netInfo = conMgr.getNetworkInfo(ConnectivityManager.TYPE_MOBILE); if (netInfo != null) { currentNetworkSubType = netInfo.getSubtype(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/7141/buggy-version/native.SalesforceSDK.src.com.salesforce.androidsdk.auth.HttpAccess.java", "BodyUseAPI": [], "Fixed commit": "8268eecaa2da7664a444b12f25a6aa47c294f802", "Url": "https://api.github.com/repos/forcedotcom/SalesforceMobileSDK-Android", "Date": "2012-07-05T18:56:58Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (flag) { vegetableCollection.add(vegetablePortion.getVegetable()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/7579/buggy-version/src.com.nika.salad.salad.VegetableFinder.java", "BodyUseAPI": [], "Fixed commit": "dfb3b4440d1906177ef384c30dbb8b9d71e3fe84", "Url": "https://api.github.com/repos/nshkuratova/Auto-Task2.1", "Date": "2017-03-29T11:59:41Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((client.level) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/2618/buggy-version/src.engine.network.packet.Packet32DoObjectDamage.java", "BodyUseAPI": [], "Fixed commit": "65738150089bf84fd9d2dce5a0cad979319dc1a4", "Url": "https://api.github.com/repos/DrFair/Game", "Date": "2016-03-27T19:06:35Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((player.getLevel()) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/2618/buggy-version/src.gfx.PlayerSprite.java", "BodyUseAPI": [], "Fixed commit": "65738150089bf84fd9d2dce5a0cad979319dc1a4", "Url": "https://api.github.com/repos/DrFair/Game", "Date": "2016-03-27T19:06:35Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isSaved)) { directory = new java.io.File(((android.os.Environment.getExternalStorageDirectory().getAbsolutePath()) + (Drop.DROPPED_NOTE_DIR))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/6388/buggy-version/Drop.src.com.example.drop.GalleryScreen.java", "BodyUseAPI": [], "Fixed commit": "e0b5534122ceaf1bc5d52b02bf7d05069193dc7a", "Url": "https://api.github.com/repos/zsweigart/Drop", "Date": "2014-05-06T05:37:00Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uk.ac.man.entitytagger.Mention.getProbabilities()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((probs[i]) == null) probs[i] = 1.0 / ((double) (probs.length));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/3980/buggy-version/txtfnnl-wrappers.src.main.java.txtfnnl.uima.analysis_component.LinnaeusAnnotator.java", "BodyUseAPI": [], "Fixed commit": "9d734859bf0790d392950ebc1d04341367a75ba6", "Url": "https://api.github.com/repos/fnl/txtfnnl", "Date": "2013-05-17T16:52:30Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mattunderscore.trees.binary.ClosedMutableBinaryTreeNode<E>.getRight()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (node != null) { return new com.mattunderscore.trees.binary.search.WrappedBinaryNode(node); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/606/buggy-version/trees-binary.src.main.java.com.mattunderscore.trees.binary.search.WrappedBinaryNode.java", "BodyUseAPI": [], "Fixed commit": "c982a0b3dcf355990594bf6bda8da0903580cda9", "Url": "https://api.github.com/repos/mattunderscorechampion/tree-root", "Date": "2015-06-25T18:48:29Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mattunderscore.trees.binary.ClosedMutableBinaryTreeNode<E>.getChild(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (node != null) { return new com.mattunderscore.trees.binary.search.WrappedBinaryNode(node); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/606/buggy-version/trees-binary.src.main.java.com.mattunderscore.trees.binary.search.WrappedBinaryNode.java", "BodyUseAPI": [], "Fixed commit": "c982a0b3dcf355990594bf6bda8da0903580cda9", "Url": "https://api.github.com/repos/mattunderscorechampion/tree-root", "Date": "2015-06-25T18:48:29Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (node != null) { return new com.mattunderscore.trees.binary.search.WrappedBinaryNode(node); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/606/buggy-version/trees-binary.src.main.java.com.mattunderscore.trees.binary.search.WrappedBinaryNode.java", "BodyUseAPI": [], "Fixed commit": "c982a0b3dcf355990594bf6bda8da0903580cda9", "Url": "https://api.github.com/repos/mattunderscorechampion/tree-root", "Date": "2015-06-25T18:48:29Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (validCube) { float xReal = (x * (stepsizes[0])) - (rMax); float yReal = (y * (stepsizes[0])) - (rMax); float zReal = (z * (stepsizes[0])) - (rMax); double r = java.lang.Math.pow((((java.lang.Math.pow(xReal, 2)) + (java.lang.Math.pow(yReal, 2))) + (java.lang.Math.pow(zReal, 2))), 0.5); if (((r + 0.1F) > (rMin)) && ((r - 0.1F) < (rMax))) { return true; } return false; }else return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/2677/buggy-version/3DPlotter.src.munk.graph.plot.implicit.SphericalMulti.java", "BodyUseAPI": [], "Fixed commit": "ae47a652816708c249b171b79a49f9aca2f74f85", "Url": "https://api.github.com/repos/Munken/3DPlotter", "Date": "2012-05-18T14:33:00Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (con.getFullJID().equals(s.getJid())) { eventNode_data.unsubscribe(s.getJid(), s.getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/8555/buggy-version/src.jp.ac.keio.sfc.ht.sox.soxlib.SoxDevice.java", "BodyUseAPI": ["org.jivesoftware.smackx.pubsub.Subscription.getJid()", "org.jivesoftware.smackx.pubsub.Subscription.getId()", "org.jivesoftware.smackx.pubsub.LeafNode.unsubscribe(s.getJid(),s.getId())"], "Fixed commit": "7bab950bdd77dc543e356f60e1cd3b2d77564212", "Url": "https://api.github.com/repos/htlab/JSoxLib", "Date": "2017-10-31T06:25:00Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (con.getFullJID().equals(s.getJid())) { eventNode_meta.unsubscribe(s.getJid(), s.getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/8555/buggy-version/src.jp.ac.keio.sfc.ht.sox.soxlib.SoxDevice.java", "BodyUseAPI": ["org.jivesoftware.smackx.pubsub.Subscription.getId()", "org.jivesoftware.smackx.pubsub.LeafNode.unsubscribe(s.getJid(),s.getId())", "org.jivesoftware.smackx.pubsub.Subscription.getJid()"], "Fixed commit": "7bab950bdd77dc543e356f60e1cd3b2d77564212", "Url": "https://api.github.com/repos/htlab/JSoxLib", "Date": "2017-10-31T06:25:00Z"},
{"Line": "=>558", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((s2.equalsIgnoreCase(\"interval\")) && ((s.tail().head().ttype) == (TokenType.String))) { java.lang.String sc = s.tail().head().str; java.lang.String sclean = sc.substring(1, ((sc.length()) - 1)); return new spinat.plsqlparser.Res<spinat.plsqlparser.Ast.Expression>(new spinat.plsqlparser.Ast.CString(sclean.replace(\"''\", \"'\")), s.tail().tail().tail()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/4654/buggy-version/src.spinat.plsqlparser.Parser.java", "BodyUseAPI": ["s.tail().tail()", "s.tail().head()", "spinat.plsqlparser.Seq.tail()", "s.tail().tail().tail()", "spinat.plsqlparser.Seq.tail()"], "Fixed commit": "60a6e137da9d911643fcb8cac35fe0d94762d774", "Url": "https://api.github.com/repos/raverkamp/plsql-parser", "Date": "2016-02-21T14:06:23Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (position == 0) { android.content.Intent intent = new android.content.Intent(this, com.mekilit.apostlic.apostlicsonglyric.AlbumArt.class).putExtra(Intent.EXTRA_TEXT, albumID); startActivity(intent); }else { android.content.Intent intent = new android.content.Intent(this, com.mekilit.apostlic.apostlicsonglyric.Lyric.class).putExtra(Intent.EXTRA_TEXT, Songs.get((position - 1))); startActivity(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/4792/buggy-version/app.src.main.java.com.mekilit.apostlic.apostlicsonglyric.OneAlbum.java", "BodyUseAPI": ["android.content.Intent.putExtra(Intent.EXTRA_TEXT,java.lang.String)", "java.util.ArrayList<java.lang.String>.get(int)"], "Fixed commit": "9b02bae364332db97989f1b0b1ec617c9a31c7dc", "Url": "https://api.github.com/repos/menasiephrem/ApostlicSongLyric", "Date": "2016-07-11T07:36:39Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(launcher.isUnix())) { file += \".bat\"; org.hudsonci.maven.plugin.builder.internal.FilePath winMvn = dir.child(\"bin\").child(file); if (!(winMvn.exists())) { file = \"mvn.cmd\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/7101/buggy-version/maven3-plugin.src.main.java.org.hudsonci.maven.plugin.builder.internal.MavenInstallationValidator.java", "BodyUseAPI": [], "Fixed commit": "0096b57a6eebbf2f800e1aeec8c240f3332b8ba7", "Url": "https://api.github.com/repos/hudson3-plugins/maven3-support", "Date": "2015-05-19T23:51:44Z"},
{"Line": "=>732", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (value.equals(\"monkey's audio\")) { format = net.pms.configuration.FormatConfiguration.MONKEYS_AUDIO; }else if (value.contains(\"musepack\")) { format = net.pms.configuration.FormatConfiguration.MPC; }else if (value.contains(\"wavpack\")) { format = net.pms.configuration.FormatConfiguration.WAVPACK; }else if (value.contains(\"mlp\")) { format = net.pms.configuration.FormatConfiguration.MLP; }else if (value.equals(\"openmg\")) { format = net.pms.configuration.FormatConfiguration.ATRAC; }else if (value.startsWith(\"atrac\")) { format = net.pms.configuration.FormatConfiguration.ATRAC; }else if (((media.getContainer()) != null) && (media.getContainer().equals(FormatConfiguration.WMV))) { if ((((media.getCodecV()) != null) && ((!(media.getCodecV().equals(FormatConfiguration.WMV))) || (!(media.getCodecV().equals(FormatConfiguration.VC1))))) || (((audio.getCodecA()) != null) && (((((!(audio.getCodecA().equals(FormatConfiguration.WMA))) || (!(audio.getCodecA().equals(FormatConfiguration.WMAPRO)))) || (!(audio.getCodecA().equals(FormatConfiguration.WMALOSSLESS)))) || (!(audio.getCodecA().equals(FormatConfiguration.WMAVOICE)))) || (!(audio.getCodecA().equals(FormatConfiguration.WMA10)))))) { media.setContainer(FormatConfiguration.ASF); } }else if (value.equals(\"nellymoser\")) { format = net.pms.configuration.FormatConfiguration.NELLYMOSER; }else if (value.equals(\"jpeg\")) { format = net.pms.configuration.FormatConfiguration.JPG; }else if (value.equals(\"png\")) { format = net.pms.configuration.FormatConfiguration.PNG; }else if (value.equals(\"gif\")) { format = net.pms.configuration.FormatConfiguration.GIF; }else if (value.equals(\"bitmap\")) { format = net.pms.configuration.FormatConfiguration.BMP; }else if (value.equals(\"tiff\")) { format = net.pms.configuration.FormatConfiguration.TIFF; }else if ((containsIgnoreCase(value, \"@l\")) && (streamType == (net.pms.dlna.MediaInfo.StreamType.Video))) { media.setAvcLevel(net.pms.dlna.LibMediaInfoParser.getAvcLevel(value)); media.setH264Profile(net.pms.dlna.LibMediaInfoParser.getAvcProfile(value)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/5633/buggy-version/src.main.java.net.pms.dlna.LibMediaInfoParser.java", "BodyUseAPI": ["java.lang.String.contains(java.lang.String)", "net.pms.dlna.DLNAMediaInfo.setH264Profile(java.lang.String)", "net.pms.dlna.LibMediaInfoParser.getAvcLevel(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.String.startsWith(java.lang.String)", "net.pms.dlna.DLNAMediaInfo.setAvcLevel(java.lang.String)", "net.pms.dlna.LibMediaInfoParser.containsIgnoreCase(java.lang.String,java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "net.pms.dlna.LibMediaInfoParser.getAvcProfile(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "07b4083b0a32a5e093c304371d88953a5f700e01", "Url": "https://api.github.com/repos/Sami32/UniversalMediaServer", "Date": "2017-09-15T03:27:16Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((values.length) == 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/3932/buggy-version/WraithEngine.src.wraith.library.WindowUtil.LineGraph.java", "BodyUseAPI": [], "Fixed commit": "9cf7703ec0e9233dfd8bda4ac00f37588ebb5de7", "Url": "https://api.github.com/repos/TheDudeFromCI/WraithEngine", "Date": "2015-04-19T16:15:47Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((orderBy) != null) { extras += ((\" ORDER BY `\" + (orderBy.getColumn())) + \"` \") + (orderBy.getOrderBy().toSQL()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/4372/buggy-version/src.de.mreturkey.sql.query.SelectQuery.java", "BodyUseAPI": [], "Fixed commit": "80478ae9386615571445b450d9620b25f8e31aed", "Url": "https://api.github.com/repos/mReTurkey/SQL-API", "Date": "2016-01-04T15:14:00Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((new org.springframework.security.web.util.matcher.AntPathRequestMatcher(\"/api/collaborateurs\").matches(request)) && (java.util.regex.Pattern.compile(\"^POST$\").matcher(request.getMethod()).matches())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/7136/buggy-version/backend.src.main.java.com.viseo.c360.competence.config.WebSecurityConfig.java", "BodyUseAPI": [], "Fixed commit": "734cf37b16e29359ef8a68e07a44cc8c44dfdb41", "Url": "https://api.github.com/repos/Viseo/C360-Skills", "Date": "2017-11-22T10:20:18Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (schedule.isEmpty()) { completion = currentTime.increase(company.Schedule.BUILD_TIME); }else { completion = schedule.getLast().getCompletionTime().increase(60); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/8477/buggy-version/src.company.Schedule.java", "BodyUseAPI": ["schedule.getLast().getCompletionTime().increase(int)", "schedule.getLast().getCompletionTime()", "java.util.LinkedList<car.CarOrder>.getLast()"], "Fixed commit": "5f35cb0653b4c1de7e74730c538c92067ae3be0c", "Url": "https://api.github.com/repos/Novarg1/SWOP21", "Date": "2014-03-08T15:13:59Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ReplicaLevel.ZERO.equals(repLevel)) { result = (this.sequenceNumber) + (this.numReplica); (this.sequenceNumber)++; }else { result = (this.sequenceNumber) + (repLevel.getValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/3543/buggy-version/src.sim.storage.manager.StorageManager.java", "BodyUseAPI": ["sim.storage.util.ReplicaLevel.getValue()"], "Fixed commit": "cb733933756538ae5fab41f0635d6f2582b18f9a", "Url": "https://api.github.com/repos/reddikih/spsim2", "Date": "2013-06-30T11:03:10Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getKeyCode()) == (java.awt.event.KeyEvent.VK_Z)) { activate(); }else if (((e.getKeyCode()) == (java.awt.event.KeyEvent.VK_ESCAPE)) || ((e.getKeyCode()) == (java.awt.event.KeyEvent.VK_ENTER))) { data.setGameState(GAME_STATE.MENU); data.getMenu().setVisible(true); }else if ((e.getKeyCode()) == (java.awt.event.KeyEvent.VK_G)) { for (int i = 0; i < (data.getParty().length); i++) { if ((data.getParty()[i]) != null) { data.getParty()[i].levelUp(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/4016/buggy-version/Systems.InputManager.java", "BodyUseAPI": ["java.awt.event.KeyEvent.getKeyCode()", "java.awt.event.KeyEvent.getKeyCode()", "java.awt.event.KeyEvent.getKeyCode()"], "Fixed commit": "c222d20c5c0894ac294da14de9c9912a85436cba", "Url": "https://api.github.com/repos/AyrtonStout/Bamboo", "Date": "2013-12-27T20:10:43Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ast instanceof cat.uab.cephis.ast.FunctionDeclaration) { dumpFunctionDeclaration(((cat.uab.cephis.ast.FunctionDeclaration) (ast))); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/1545/buggy-version/src.cat.uab.cephis.CPPWriter.java", "BodyUseAPI": [], "Fixed commit": "ec92a436474ab5425ad3e0116f2e3066f8ed3a71", "Url": "https://api.github.com/repos/davidcastells/Transourcer", "Date": "2017-05-25T06:47:47Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((currGuest.getGuestStatus()) != (com.android.casorio.guest.Guest.GuestStatus.NOT_GOING)) { totalGuests += (currGuest.getAdditinal_guests()) + 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/5444/buggy-version/src.com.android.casorio.database.datasources.GuestDataSource.java", "BodyUseAPI": ["com.android.casorio.guest.Guest.getAdditinal_guests()"], "Fixed commit": "701e07e90a750c6ce04aedad014e96d698acad6d", "Url": "https://api.github.com/repos/lucasfe/Casorio", "Date": "2013-11-07T20:46:30Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((currGuest.getGuestStatus()) != (com.android.casorio.guest.Guest.GuestStatus.NOT_GOING)) { totalGuests += (currGuest.getAdditinal_guests()) + 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/5444/buggy-version/src.com.android.casorio.database.datasources.GuestDataSource.java", "BodyUseAPI": ["com.android.casorio.guest.Guest.getAdditinal_guests()"], "Fixed commit": "701e07e90a750c6ce04aedad014e96d698acad6d", "Url": "https://api.github.com/repos/lucasfe/Casorio", "Date": "2013-11-07T20:46:30Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((credits) == null) { credits = new java.util.ArrayList(); for (de.jreichl.jpa.entity.Credit c : userModel.getCurrentUser().getCredits()) { if (c.getAccount().equals(userModel.getCurrentAccount())) credits.add(c); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/786/buggy-version/src.main.java.de.jreichl.jsf.model.CreditModel.java", "BodyUseAPI": [], "Fixed commit": "79f80f8f1f2662a170a19c75078a3c95bf54960e", "Url": "https://api.github.com/repos/rjuergen/bank", "Date": "2016-12-30T15:24:41Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (test == \"\") return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/6707/buggy-version/src.main.java.seedu.address.model.person.Location.java", "BodyUseAPI": [], "Fixed commit": "b86f1e4fdb81ed3d477a39fbb07f7536eaad2dc0", "Url": "https://api.github.com/repos/CS2103JAN2017-W10-B4/main", "Date": "2017-03-28T15:26:34Z"},
{"Line": "=>385", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mCommitting) { mCommitting = false; mHandler.removeCallbacks(mLifePoisonCommitter); mLifePoisonCommitter.run(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/5566/buggy-version/mobile.src.main.java.com.gelakinetic.mtgfam.helpers.LcPlayer.java", "BodyUseAPI": [], "Fixed commit": "56b757fb791737b2640c2748f2c31340396f4102", "Url": "https://api.github.com/repos/AEFeinstein/mtg-familiar", "Date": "2017-11-09T22:29:16Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (serializedFireworkEffect != null) effect = new regalowl.hyperconomy.inventory.HFireworkEffect(serializedFireworkEffect);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/6776/buggy-version/src.main.java.regalowl.hyperconomy.inventory.HFireworkEffectMeta.java", "BodyUseAPI": [], "Fixed commit": "88bdf77082bf843734410c83b34c05c4e18f3579", "Url": "https://api.github.com/repos/RegalOwl/HyperConomy", "Date": "2016-03-23T00:58:16Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((effect) != null) data.put(\"effect\", effect.serialize());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/6776/buggy-version/src.main.java.regalowl.hyperconomy.inventory.HFireworkEffectMeta.java", "BodyUseAPI": [], "Fixed commit": "88bdf77082bf843734410c83b34c05c4e18f3579", "Url": "https://api.github.com/repos/RegalOwl/HyperConomy", "Date": "2016-03-23T00:58:16Z"},
{"Line": "=>2122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ListClicked) categoryListBuildUp(demo.kolorob.kolorobdemoversion.activity.PlaceDetailsActivityNewLayout.currentCategoryID);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/2615/buggy-version/app.src.main.java.demo.kolorob.kolorobdemoversion.activity.PlaceDetailsActivityNewLayout.java", "BodyUseAPI": [], "Fixed commit": "7e9295633b38586d4d74ccc64367ba7e936ac9c0", "Url": "https://api.github.com/repos/liammagee/Kolorob", "Date": "2016-08-01T06:24:32Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Scanner.nextInt()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (customers < 1) throw new java.util.InputMismatchException(\"must be bigger than 1\"); else numberOfCustomers = customers;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/8594/buggy-version/Elvetaor.src.controllers.Controller.java", "BodyUseAPI": [], "Fixed commit": "d070008cb293b9a0d266dce0c2f885b180c20bd7", "Url": "https://api.github.com/repos/mbenba01/sp2-cw3-2014", "Date": "2014-12-28T21:28:06Z"},
{"Line": "=>321", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (hyphen > 0) { version = version.substring(0, hyphen); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/2806/buggy-version/src.main.java.com.github.ucchyocean.chatbot.Utility.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "ba4abae275843642bf3b8b28299f31bd9ee764a3", "Url": "https://api.github.com/repos/ucchyocean/MintChatBot", "Date": "2016-03-09T11:04:42Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.github.ucchyocean.chatbot.Utility.isCB19orLater()) { writer = new java.io.BufferedWriter(new java.io.OutputStreamWriter(fos, \"UTF-8\")); }else { writer = new java.io.BufferedWriter(new java.io.OutputStreamWriter(fos)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/2806/buggy-version/src.main.java.com.github.ucchyocean.chatbot.Utility.java", "BodyUseAPI": [], "Fixed commit": "ba4abae275843642bf3b8b28299f31bd9ee764a3", "Url": "https://api.github.com/repos/ucchyocean/MintChatBot", "Date": "2016-03-09T11:04:42Z"},
{"Line": "=>871", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (net.sf.jabref.logic.util.OS.WINDOWS) { defaults.put(net.sf.jabref.JabRefPreferences.CONSOLE_COMMAND, \"C:\\\\Program Files\\\\ConEmu\\\\ConEmu64.exe /single /dir \\\"%DIR\\\"\"); }else { defaults.put(net.sf.jabref.JabRefPreferences.CONSOLE_COMMAND, \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/104/buggy-version/src.main.java.net.sf.jabref.JabRefPreferences.java", "BodyUseAPI": [], "Fixed commit": "1cd928425178893815cfa028364560cc453fb86a", "Url": "https://api.github.com/repos/obraliar/jabref", "Date": "2016-07-17T21:52:18Z"},
{"Line": "=>419", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.endercrest.colorcube.game.Game.scoreResults()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(team.equals(\"None\"))) { players = getTeam(team).getPlayers(); }else { players = new java.util.HashSet<com.endercrest.colorcube.game.OfflinePlayer>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/3106/buggy-version/src.main.java.com.endercrest.colorcube.game.Game.java", "BodyUseAPI": ["com.endercrest.colorcube.game.Team.getPlayers()", "com.endercrest.colorcube.game.Game.getTeam(java.lang.String)"], "Fixed commit": "d0782f5e1de4076d4a9abbd249ee92564a8a3bbd", "Url": "https://api.github.com/repos/endercrest/ColorCube", "Date": "2014-12-27T01:40:07Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getBooleanExtra(java.lang.String,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (dbg) android.util.Log.e(Synodroid.DS_TAG, \"Unexpected error\", ex);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/3955/buggy-version/src.com.bigpupdev.synodroid.server.DownloadOriginalIntentService.java", "BodyUseAPI": [], "Fixed commit": "e7f3d6514c126c81e0722f6cbec8fdb16cbc3632", "Url": "https://api.github.com/repos/stevegaron/Synodroid", "Date": "2012-04-27T23:10:58Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ChannelHistory.Message.getPageLink()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (pageLink.startsWith(\"www\")) { pageLink = \"http:// \" + pageLink; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/3602/buggy-version/enews.enews-java.article-editor.src.main.java.com.novoda.enews.ArticleEditor.java", "BodyUseAPI": [], "Fixed commit": "b6b7e863e5c351fbd365d1e608d0a3ed70522806", "Url": "https://api.github.com/repos/novoda/spikes", "Date": "2017-12-04T22:24:53Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(shouldAffectWorld(world))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/5334/buggy-version/src.main.java.com.creativemd.opticmanager.OpticEventHandler.java", "BodyUseAPI": [], "Fixed commit": "24e89937992ca6b17297e88493bae7b20b077160", "Url": "https://api.github.com/repos/CreativeMD/OpticManager", "Date": "2017-05-20T20:21:11Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["new org.apache.olingo.server.api.ODataServerError().setException(e).setMessage(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((serverError.getMessage()) == null) { serverError.setMessage(\"OData Library: An exception without message text was thrown.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/3034/buggy-version/lib.server-core.src.main.java.org.apache.olingo.server.core.ODataExceptionHelper.java", "BodyUseAPI": ["org.apache.olingo.server.api.ODataServerError.setMessage(java.lang.String)"], "Fixed commit": "60f896a9335601debef5ff3071c22565b09a4ed0", "Url": "https://api.github.com/repos/apache/olingo-odata4", "Date": "2015-06-08T13:34:25Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((transport) == null) { transport = new org.atmosphere.gwt.client.impl.ServerTransportProtocol() { @java.lang.Override void send(java.lang.String message, com.google.gwt.user.client.rpc.AsyncCallback<java.lang.Void> callback) { socket.send(message); callback.onSuccess(null); } @java.lang.Override java.lang.String serialize(java.lang.Object message) throws com.google.gwt.user.client.rpc.SerializationException { return client.getSerializer().serialize(message); } }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/4653/buggy-version/extras.gwt.atmosphere-gwt-client.src.main.java.org.atmosphere.gwt.client.impl.WebSocketCometTransport.java", "BodyUseAPI": [], "Fixed commit": "adb145be46affc436ed94992d794a8febde09447", "Url": "https://api.github.com/repos/Emperorlou/atmosphere", "Date": "2012-06-14T14:42:36Z"},
{"Line": "=>428", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((mConfig.hasNavigtionBar()) && (!(mBarParams.fullScreenTemp))) && (!(mBarParams.fullScreen))) { if (mConfig.isNavigationAtBottom()) mContentView.setPadding(0, 0, 0, mConfig.getNavigationBarHeight()); else mContentView.setPadding(0, 0, mConfig.getNavigationBarWidth(), 0); }else { mContentView.setPadding(0, 0, 0, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/3196/buggy-version/barlibrary.src.main.java.com.gyf.barlibrary.ImmersionBar.java", "BodyUseAPI": ["com.gyf.barlibrary.BarConfig.getNavigationBarHeight()", "android.view.ViewGroup.setPadding(int,int,mConfig.getNavigationBarWidth(),int)", "com.gyf.barlibrary.BarConfig.isNavigationAtBottom()", "com.gyf.barlibrary.BarConfig.getNavigationBarWidth()", "android.view.ViewGroup.setPadding(int,int,int,mConfig.getNavigationBarHeight())"], "Fixed commit": "b44620d0abdbd865eeb07485abd5d2e434668ba8", "Url": "https://api.github.com/repos/gyf-dev/ImmersionBar", "Date": "2017-05-12T09:25:20Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(serviceManager.existService(service))) { return javax.ws.rs.core.Response.status(Response.Status.NOT_FOUND).type(MediaType.APPLICATION_JSON).entity(((\"{\\\"error\\\":\\\"There is no service \" + service) + \"\\\"}\")).build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/5018/buggy-version/src.main.java.de.uni_potsdam.hpi.bpt.bp2014.janalytics.rest.RestInterface.java", "BodyUseAPI": ["javax.ws.rs.core.Response.status(Response.Status.NOT_FOUND).type(MediaType.APPLICATION_JSON).entity(java.lang.String)", "javax.ws.rs.core.Response.status(Response.Status.NOT_FOUND).type(MediaType.APPLICATION_JSON).entity(((\"{\\\"error\\\":\\\"There is no service \" + service) + \"\\\"}\")).build()"], "Fixed commit": "c234df689124c03610b7944fd7d618765aa77b02", "Url": "https://api.github.com/repos/BP2014W1/JEngine", "Date": "2015-05-12T08:16:14Z"},
{"Line": "=>308", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((textInputLayouts.length) == 2) { int sys = java.lang.Integer.parseInt(textInputLayouts[0].getEditText().getText().toString()); int dias = java.lang.Integer.parseInt(textInputLayouts[1].getEditText().getText().toString()); if (dias > sys) { android.widget.Toast.makeText(getActivity(), \"Systolic value must be grater then diastolic one\", Toast.LENGTH_LONG).show(); return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/7699/buggy-version/MAGPIE.paams-demo.src.main.java.ch.hevs.aislab.paams.ui.AddValueFragment.java", "BodyUseAPI": ["java.lang.Integer.parseInt(textInputLayouts[0].getEditText().getText().toString())", "textInputLayouts[1].getEditText().getText().toString()", "java.lang.Integer.parseInt(textInputLayouts[1].getEditText().getText().toString())", "textInputLayouts[0].getEditText().getText()", "textInputLayouts[1].getEditText().getText()", "textInputLayouts[0].getEditText()", "textInputLayouts[0].getEditText().getText().toString()", "textInputLayouts[1].getEditText()"], "Fixed commit": "966da9c6eaccee9472450e886c2945c21268f460", "Url": "https://api.github.com/repos/aislab-hevs/magpie", "Date": "2017-02-20T14:53:53Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.getWhitespaceFollowedNode(com.puppycrawl.tools.checkstyle.api.DetailAST)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((whitespaceFollowedAst.getNextSibling()) == null) || ((whitespaceFollowedAst.getNextSibling().getType()) != (com.puppycrawl.tools.checkstyle.api.TokenTypes.ANNOTATIONS))) { final int whitespaceColumnNo = com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.getPositionAfter(whitespaceFollowedAst); final int whitespaceLineNo = whitespaceFollowedAst.getLineNo(); if (hasTrailingWhitespace(ast, whitespaceColumnNo, whitespaceLineNo)) { log(whitespaceLineNo, whitespaceColumnNo, com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.MSG_KEY, whitespaceFollowedAst.getText()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/6138/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.java", "BodyUseAPI": ["com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.log(int,int,java.lang.String,whitespaceFollowedAst.getText())", "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.getPositionAfter(com.puppycrawl.tools.checkstyle.api.DetailAST)", "com.puppycrawl.tools.checkstyle.api.DetailAST.getText()", "com.puppycrawl.tools.checkstyle.api.DetailAST.getLineNo()"], "Fixed commit": "2535ff48bffde7bd27ef319b64a08de0f4c262cf", "Url": "https://api.github.com/repos/sergileon/checkstyle", "Date": "2017-09-05T11:43:02Z"},
{"Line": "=>684", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mPref.isSimulationMode())) { if ((null != (mLineBitmap)) && ((mGpsParams) != null)) { rotateBitmapIntoPlace(mLineBitmap, ((float) (mService.getDestination().getBearing())), mGpsParams.getLongitude(), mGpsParams.getLatitude(), false); canvas.drawBitmap(mLineBitmap.getBitmap(), mLineBitmap.getTransform(), mPaint); } if ((null != (mLineHeadingBitmap)) && ((mGpsParams) != null)) { rotateBitmapIntoPlace(mLineHeadingBitmap, ((float) (mGpsParams.getBearing())), mGpsParams.getLongitude(), mGpsParams.getLatitude(), false); canvas.drawBitmap(mLineHeadingBitmap.getBitmap(), mLineHeadingBitmap.getTransform(), mPaint); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/5807/buggy-version/src.com.ds.avare.LocationView.java", "BodyUseAPI": [], "Fixed commit": "b1ca89f765e5e1bf7544aab85a4948975a741160", "Url": "https://api.github.com/repos/apps4av/avare", "Date": "2013-06-10T18:10:50Z"},
{"Line": "=>595", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ch.thn.commandop.CmdLnBase.addMultiValue(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (errormsg != null) { if (errormsg.startsWith(\"[INFO] \")) { info(errormsg.substring(\"[INFO] \".length())); }else { error(errormsg); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/6843/buggy-version/src.ch.thn.commandop.CommandOP.java", "BodyUseAPI": ["java.lang.String.startsWith(java.lang.String)", "ch.thn.commandop.CommandOP.info(java.lang.String)", "ch.thn.commandop.CommandOP.error(java.lang.String)", "java.lang.String.substring(int)"], "Fixed commit": "282b1aec6169ce80493f27f223f6990b2ab3c4f6", "Url": "https://api.github.com/repos/thnaeff/CommandOP", "Date": "2015-04-18T03:38:46Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((row.getLabel().length()) > 35) form.setLabelAlign(LabelAlign.TOP);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/7028/buggy-version/src.main.java.org.sagebionetworks.web.client.widget.entity.AnnotationsWidgetViewImpl.java", "BodyUseAPI": [], "Fixed commit": "bc87985eaaab5696a1bd704ac4475c062d25b1db", "Url": "https://api.github.com/repos/dburdick/SynapseWebClient", "Date": "2013-11-01T17:34:24Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.isFinishing())) { invitation.show(this.getFragmentManager(), endee.fried.treasure.MainMenuActivity.TAG); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/5927/buggy-version/app.src.main.java.endee.fried.treasure.MainMenuActivity.java", "BodyUseAPI": [], "Fixed commit": "eb31248de0e5c50f060c4c21fa5e6c16a68b875e", "Url": "https://api.github.com/repos/natashad/treasure", "Date": "2014-08-09T22:53:44Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((menu) == null) { menu = new java.util.ArrayList<java.util.Calendar>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/5739/buggy-version/src.com.github.groupENIGMA.journalEgocentrique.ListActivity.java", "BodyUseAPI": [], "Fixed commit": "37fd579a4590c947cec84f30708751891d93fd7b", "Url": "https://api.github.com/repos/groupENIGMA/journalEgocentrique", "Date": "2013-06-19T17:14:18Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((selectedEntry) != null) { setNotes(notes, selectedEntry); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/5739/buggy-version/src.com.github.groupENIGMA.journalEgocentrique.ListActivity.java", "BodyUseAPI": [], "Fixed commit": "37fd579a4590c947cec84f30708751891d93fd7b", "Url": "https://api.github.com/repos/groupENIGMA/journalEgocentrique", "Date": "2013-06-19T17:14:18Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((simple.getParentType()) == null) { baseSimpleType = simple; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/465/buggy-version/schema-compiler.src.main.java.org.opentravel.schemacompiler.util.SimpleTypeInfo.java", "BodyUseAPI": [], "Fixed commit": "0a15cfc37b153d55ad62d889d319f7193b137b39", "Url": "https://api.github.com/repos/OpenTravel/OTM-DE-Compiler", "Date": "2017-08-13T22:10:27Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(healthCheckService.getReportIds(healthServiceUID).isEmpty())) { healthCheckService.solveIssue(healthServiceUID, issueId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/2394/buggy-version/repose-aggregator.core.core-lib.src.main.java.com.rackspace.papi.service.datastore.distributed.impl.distributed.jetty.DistributedDatastoreLauncherServiceImpl.java", "BodyUseAPI": ["com.rackspace.papi.service.healthcheck.HealthCheckService.solveIssue(java.lang.String,java.lang.String)"], "Fixed commit": "2ae1a09196b95276543ce5f8930107b13bd0f914", "Url": "https://api.github.com/repos/rackerlabs/repose", "Date": "2014-02-12T19:58:13Z"},
{"Line": "=>371", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((model == null) || ((model.getObject()) == null)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/1655/buggy-version/gui.admin-gui.src.main.java.com.evolveum.midpoint.web.component.wizard.resource.SchemaHandlingStep.java", "BodyUseAPI": [], "Fixed commit": "88e699e6113eea2fb6044efe7bf1f723b7dffcec", "Url": "https://api.github.com/repos/Evolveum/midpoint", "Date": "2015-03-09T14:47:34Z"},
{"Line": "=>379", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.wicket.model.IModel<com.evolveum.midpoint.web.component.wizard.resource.ResourceAttributeDefinitionType>.getObject()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (attribute.getRef().equals(new com.evolveum.prism.xml.ns._public.types_3.ItemPathType())) { return null; }else { sb.append(com.evolveum.midpoint.prism.util.ItemPathUtil.getOnlySegmentQName(attribute.getRef()).getLocalPart()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/1655/buggy-version/gui.admin-gui.src.main.java.com.evolveum.midpoint.web.component.wizard.resource.SchemaHandlingStep.java", "BodyUseAPI": ["com.evolveum.midpoint.prism.util.ItemPathUtil.getOnlySegmentQName(attribute.getRef()).getLocalPart()", "com.evolveum.midpoint.prism.util.ItemPathUtil.getOnlySegmentQName(attribute.getRef())", "java.lang.StringBuilder.append(com.evolveum.midpoint.prism.util.ItemPathUtil.getOnlySegmentQName(attribute.getRef()).getLocalPart())", "com.evolveum.midpoint.web.component.wizard.resource.ResourceAttributeDefinitionType.getRef()"], "Fixed commit": "88e699e6113eea2fb6044efe7bf1f723b7dffcec", "Url": "https://api.github.com/repos/Evolveum/midpoint", "Date": "2015-03-09T14:47:34Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((allNotes.size()) > 30) { allNotes = allNotes.subList(0, 30); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/3562/buggy-version/app.src.main.java.org.houxg.leamonax.appwidget.AppWidgetViewsFactory.java", "BodyUseAPI": [], "Fixed commit": "2570df8480d95316d564f334f451e2784a02ff0e", "Url": "https://api.github.com/repos/Ericwyn/leanote-android", "Date": "2017-12-29T14:49:02Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (param instanceof java.lang.Double) { preparedStatement.setDouble(i, ((java.lang.Double) (param))); }else if (param instanceof java.sql.Timestamp) { preparedStatement.setTimestamp(i, ((java.sql.Timestamp) (param))); }else if (param instanceof java.lang.Boolean) { preparedStatement.setBoolean(i, ((java.lang.Boolean) (param))); }else { throw new java.lang.RuntimeException((\"Unknown type of param: \" + (param.getClass()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/1090/buggy-version/src.com.mayhew3.gamesutil.games.PostgresConnection.java", "BodyUseAPI": ["java.lang.Object.getClass()"], "Fixed commit": "da574284ed399b6f80e39439cd413701d0dc450a", "Url": "https://api.github.com/repos/mayhew3/MediaMogulData", "Date": "2015-08-26T07:32:02Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(this.decryptor.isInitialized())) { this.decryptor.initialize(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/2879/buggy-version/core.cas-server-core-configuration.src.main.java.org.apereo.cas.configuration.support.CasConfigurationJasyptDecryptor.java", "BodyUseAPI": ["org.jasypt.encryption.pbe.StandardPBEStringEncryptor.initialize()"], "Fixed commit": "74e8a6ad2ee20aedaed2b612882a822434a4e6a2", "Url": "https://api.github.com/repos/apereo/cas", "Date": "2017-03-22T17:24:55Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (TestAttribute(name)) graph_service.DeleteAttribute(this, name);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/4754/buggy-version/src.main.java.ru.parallel.octotron.core.OctoObject.java", "BodyUseAPI": ["main.java.ru.parallel.octotron.core.OctoObject.DeleteAttribute(main.java.ru.parallel.octotron.core.OctoObject,java.lang.String)"], "Fixed commit": "bb6c6002e3c84d8456efbd6e9e33d3631fa9484f", "Url": "https://api.github.com/repos/srcc-msu/octotron_core", "Date": "2014-05-20T13:00:55Z"},
{"Line": "=>923", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (valsIS != null) valsIS.setRow(index);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/4076/buggy-version/src.main.org.deidentifier.arx.framework.data.DataManager.java", "BodyUseAPI": ["org.deidentifier.arx.framework.data.DataMatrix.setRow(int)"], "Fixed commit": "e926a9eafca26e6d0c01179a545acfc4a8343c0d", "Url": "https://api.github.com/repos/arx-deidentifier/arx", "Date": "2017-06-04T14:42:29Z"},
{"Line": "=>922", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (valsDI != null) valsDI.setRow(index);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/4076/buggy-version/src.main.org.deidentifier.arx.framework.data.DataManager.java", "BodyUseAPI": ["org.deidentifier.arx.framework.data.DataMatrix.setRow(int)"], "Fixed commit": "e926a9eafca26e6d0c01179a545acfc4a8343c0d", "Url": "https://api.github.com/repos/arx-deidentifier/arx", "Date": "2017-06-04T14:42:29Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sectionId == null) { return com.orm.query.Select.from(com.yeleman.snisrdcsms.DataValidation.class).where(com.orm.query.Condition.prop(\"SECTION_ID\").isNull()).list(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/6442/buggy-version/app.src.main.java.com.yeleman.snisrdcsms.DataValidation.java", "BodyUseAPI": [], "Fixed commit": "a84f5db83c7cb302e2208ec9666b55266db55f0e", "Url": "https://api.github.com/repos/yeleman/SNIS-SMS", "Date": "2017-11-20T16:13:55Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((BackData.wordFreqDoc.get(docName)) == 0) { return 0; }else { fik = InvertedIndex.invertedIndex.get(term).get(docName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/6679/buggy-version/src.VectorSpaceModel.java", "BodyUseAPI": ["InvertedIndex.invertedIndex.get(term).get(java.lang.String)"], "Fixed commit": "a62186b14cf9823dddc8845b3dc8ccd304167a30", "Url": "https://api.github.com/repos/Recelis/MicroSearch", "Date": "2017-02-24T03:44:52Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ml.shifu.shifu.fs.ShifuFileUtils.isFileExists(progressLog, SourceType.HDFS)) { this.progressOutput = org.apache.hadoop.fs.FileSystem.get(new org.apache.hadoop.conf.Configuration()).append(progressLog); }else { this.progressOutput = org.apache.hadoop.fs.FileSystem.get(new org.apache.hadoop.conf.Configuration()).create(progressLog); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/502/buggy-version/src.main.java.ml.shifu.shifu.core.dtrain.nn.NNOutput.java", "BodyUseAPI": ["org.apache.hadoop.fs.FileSystem.get(new org.apache.hadoop.conf.Configuration()).create(org.apache.hadoop.fs.Path)", "org.apache.hadoop.fs.FileSystem.get(new org.apache.hadoop.conf.Configuration()).append(org.apache.hadoop.fs.Path)"], "Fixed commit": "db5cf9d64560196f1f6666f9eda4751e58e562c1", "Url": "https://api.github.com/repos/ShifuML/shifu", "Date": "2017-02-08T23:35:15Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((user.getDoctorID()) == null) user.setDoctorID(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/9109/buggy-version/app.src.main.java.com.example.mary.hospital.Service.Impl.UserServiceImpl.java", "BodyUseAPI": ["com.example.mary.hospital.Model.User.setDoctorID(int)"], "Fixed commit": "81640f97cd7cda0dd6a2c9bdd2b660e18967d9b4", "Url": "https://api.github.com/repos/YP-Hospital/YP-Hospital", "Date": "2016-03-20T08:48:37Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JTextField.getText()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(s.matches(\"^(?:(?:31(\\\\/|-|\\\\.)(?:0?[13578]|1[02]))\\\\1|(?:(?:29|30)(\\\\/|-|\\\\.)(?:0?[1,3-9]|1[0-2])\\\\2))(?:(?:1[6-9]|[2-9]\\\\d)?\\\\d{2})$|^(?:29(\\\\/|-|\\\\.)0?2\\\\3(?:(?:(?:1[6-9]|[2-9]\\\\d)?(?:0[48]|[2468][048]|[13579][26])|(?:(?:16|[2468][048]|[3579][26])00))))$|^(?:0?[1-9]|1\\\\d|2[0-8])(\\\\/|-|\\\\.)(?:(?:0?[1-9])|(?:1[0-2]))\\\\4(?:(?:1[6-9]|[2-9]\\\\d)?\\\\d{2})$\"))) { javax.swing.JOptionPane.showMessageDialog(null, \"Datum nije ispravno unesen\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/5498/buggy-version/vozniPark.src.main.java.vozniPark.View.OdjavljivanjePreuzetogVozila.java", "BodyUseAPI": [], "Fixed commit": "38cba4f111132429e2330cc2e476fae15736da0c", "Url": "https://api.github.com/repos/SoftverInzenjeringETFSA/SI2015Tim7", "Date": "2016-05-21T11:47:03Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JTextField.getText()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(s1.matches(\"^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$\"))) { javax.swing.JOptionPane.showMessageDialog(null, \"Vrijeme nije ispravno uneseno\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/5498/buggy-version/vozniPark.src.main.java.vozniPark.View.OdjavljivanjePreuzetogVozila.java", "BodyUseAPI": [], "Fixed commit": "38cba4f111132429e2330cc2e476fae15736da0c", "Url": "https://api.github.com/repos/SoftverInzenjeringETFSA/SI2015Tim7", "Date": "2016-05-21T11:47:03Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portal.util.PrefsPropsUtil.getString(themeDisplay.getCompanyId(),PropsKeys.DEFAULT_LANDING_PAGE_PATH)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.liferay.portal.kernel.util.Validator.isNotNull(defaultLandingPagePath)) { redirect = defaultLandingPagePath; }else { javax.portlet.PortletURL portletURL = new com.liferay.portlet.PortletURLImpl(request, com.liferay.portal.util.PortletKeys.LOGIN, themeDisplay.getPlid(), javax.portlet.PortletRequest.RENDER_PHASE); redirect = portletURL.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/3337/buggy-version/portal-impl.src.com.liferay.portal.action.UpdatePasswordAction.java", "BodyUseAPI": [], "Fixed commit": "2af1bf35bf50770764e3ad6b16e9f4730814ef5a", "Url": "https://api.github.com/repos/kiyoshilee/liferay-portal", "Date": "2013-04-10T12:06:18Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<de._13ducks.cor.game.server.movement.Node>.get(int)", "intersecting.intersectionWithEdgeNotAllowed(edge).toNode()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (extraNode.equals(cur)) { de._13ducks.cor.game.server.movement.FreePolygon currentCand = de._13ducks.cor.game.server.ServerPathfinder.commonSector(cur, nxt); if (currentCand != null) { currentPoly = currentCand; } routeAllowed = false; break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/5846/buggy-version/src.de._13ducks.cor.game.server.ServerPathfinder.java", "BodyUseAPI": ["de._13ducks.cor.game.server.ServerPathfinder.commonSector(de._13ducks.cor.game.server.movement.Node,de._13ducks.cor.game.server.movement.Node)"], "Fixed commit": "aaa3dbe376f02c7723ebbf5200e358efaa620758", "Url": "https://api.github.com/repos/tfg13/Centuries-of-Rage", "Date": "2011-05-19T11:45:35Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.sslProperties) != null) session.requiresTLS(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/1677/buggy-version/jnl_lib.src.main.java.com.tresys.jalop.jnl.impl.ContextImpl.java", "BodyUseAPI": [], "Fixed commit": "9a605c709ebb1353be67ec251058e94fd5b32ef6", "Url": "https://api.github.com/repos/jalop-tresys/jjnl", "Date": "2014-09-25T12:59:54Z"},
{"Line": "=>352", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (mOnItemLongClickListener)) startLongPressCheck();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/321/buggy-version/src.com.jianbin.view.FlowTagsLayout.java", "BodyUseAPI": [], "Fixed commit": "03fe9979c21fc72a4b60a719ddbb952d0bac4e3a", "Url": "https://api.github.com/repos/inexistence/FlowTagsLayout", "Date": "2015-04-19T11:07:10Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((next) instanceof org.jgll.grammar.slot.LastGrammarSlot) { parser.getNonterminalNode(((org.jgll.grammar.slot.LastGrammarSlot) (next)), sppfNode); if (checkPopActions(parser, input)) { return null; } parser.pop(); return null; }else { parser.getIntermediateNode(next, sppfNode); if (checkPopActions(parser, input)) { return null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/8056/buggy-version/src.org.jgll.grammar.slot.KeywordGrammarSlot.java", "BodyUseAPI": [], "Fixed commit": "6987125df9a4ae287457183b54b9b249e3cb6266", "Url": "https://api.github.com/repos/cwi-swat/jigll", "Date": "2013-08-09T16:48:26Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((body) != null) { for (io.netty.buffer.ByteBuf byteBuf : body) { value += byteBuf.capacity(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/2867/buggy-version/src.main.java.org.rakam.server.http.HttpServerHandler.java", "BodyUseAPI": [], "Fixed commit": "934049c1cdd45cc28a4372b1d5b94b5784ebde5c", "Url": "https://api.github.com/repos/buremba/netty-rest", "Date": "2017-01-22T22:06:18Z"},
{"Line": "=>564", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.joda.time.Interval.overlap(org.joda.time.Interval)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (lap != null) { org.joda.time.Duration overlap = lap.toDuration(); minutesForTardyOrEco -= overlap.getStandardMinutes(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/8394/buggy-version/src.main.edu.iastate.music.marching.attendance.model.interact.UserManager.java", "BodyUseAPI": ["org.joda.time.Interval.toDuration()"], "Fixed commit": "846566da8898ffc22a2749fafa85e141f6168505", "Url": "https://api.github.com/repos/curtisullerich/attendance", "Date": "2013-10-29T22:45:20Z"},
{"Line": "=>537", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((br.com.carlosrafaelgn.fplay.ui.UI.usableScreenWidth) > 0) && (availableScreenW > (br.com.carlosrafaelgn.fplay.ui.UI.usableScreenWidth))) availableScreenW = br.com.carlosrafaelgn.fplay.ui.UI.usableScreenWidth;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/6722/buggy-version/src.br.com.carlosrafaelgn.fplay.ActivityEffects.java", "BodyUseAPI": [], "Fixed commit": "d51bd06b5ab269391046c5c2966d3fbe80417fdc", "Url": "https://api.github.com/repos/carlosrafaelgn/FPlayAndroid", "Date": "2014-12-31T14:31:48Z"},
{"Line": "=>541", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (br.com.carlosrafaelgn.fplay.ui.UI.isLandscape) availableScreenW >>= 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/6722/buggy-version/src.br.com.carlosrafaelgn.fplay.ActivityEffects.java", "BodyUseAPI": [], "Fixed commit": "d51bd06b5ab269391046c5c2966d3fbe80417fdc", "Url": "https://api.github.com/repos/carlosrafaelgn/FPlayAndroid", "Date": "2014-12-31T14:31:48Z"},
{"Line": "=>534", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["br.com.carlosrafaelgn.fplay.ActivityEffects.getDecorViewWidth()", "br.com.carlosrafaelgn.fplay.ActivityEffects.getDecorViewHeight()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((br.com.carlosrafaelgn.fplay.ui.UI.isLandscape) != (availableScreenW >= hMargin)) availableScreenW = hMargin;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/6722/buggy-version/src.br.com.carlosrafaelgn.fplay.ActivityEffects.java", "BodyUseAPI": [], "Fixed commit": "d51bd06b5ab269391046c5c2966d3fbe80417fdc", "Url": "https://api.github.com/repos/carlosrafaelgn/FPlayAndroid", "Date": "2014-12-31T14:31:48Z"},
{"Line": "=>487", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.abs(normalizeAngle((current - target)))", "java.lang.Math.abs(normalizeAngle((target - current)))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (turnRight < turnLeft) { rotationYaw += turnRight * 0.3; }else { rotationYaw -= turnLeft * 0.3; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/36/buggy-version/src.main.java.com.crowsofwar.avatar.common.entity.mob.EntitySkyBison.java", "BodyUseAPI": [], "Fixed commit": "985bc628a95eb903c84d07c609809b29ab9ec651", "Url": "https://api.github.com/repos/CrowsOfWar/AvatarMod", "Date": "2017-04-13T02:46:51Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentTurn) == (javafx.scene.paint.Color.BLACK)) currentTurn = javafx.scene.paint.Color.WHITE; else currentTurn = javafx.scene.paint.Color.BLACK;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/24/buggy-version/Controller.java", "BodyUseAPI": [], "Fixed commit": "40adff67f9d9f43df550d9a82acf8bd9d89e537a", "Url": "https://api.github.com/repos/ChillyCider/WJChess", "Date": "2016-11-22T20:47:48Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type == (techreborn.init.recipes.RecipeMethods.Type.SMALL_DUST)) { object = \"smallDust\" + (reborncore.common.util.StringUtils.toFirstCapital(name)); }else if (type == (techreborn.init.recipes.RecipeMethods.Type.INGOT)) { object = \"ingot\" + (reborncore.common.util.StringUtils.toFirstCapital(name)); }else if (type == (techreborn.init.recipes.RecipeMethods.Type.GEM)) { object = \"gem\" + (reborncore.common.util.StringUtils.toFirstCapital(name)); }else if (type == (techreborn.init.recipes.RecipeMethods.Type.PLATE)) { object = \"plate\" + (reborncore.common.util.StringUtils.toFirstCapital(name)); }else if (type == (techreborn.init.recipes.RecipeMethods.Type.NUGGET)) { object = \"nugget\" + (reborncore.common.util.StringUtils.toFirstCapital(name)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/1819/buggy-version/src.main.java.techreborn.init.recipes.RecipeMethods.java", "BodyUseAPI": [], "Fixed commit": "80a387b75067dd1c8968ee5d79955a2f7bcc392c", "Url": "https://api.github.com/repos/TechReborn/TechReborn", "Date": "2017-03-13T10:30:37Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((machineName) != null) { content.append(\" machineName = \").append(machineName).append(SEP); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/6459/buggy-version/docker.docker.src.main.java.org.arquillian.cube.docker.impl.client.CubeDockerConfiguration.java", "BodyUseAPI": [], "Fixed commit": "ef6eca88aa78033f9cd5254a11dc49f1f69f36a8", "Url": "https://api.github.com/repos/foxlegend/arquillian-cube", "Date": "2015-11-11T16:35:43Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((definitionFormat) != null) { content.append(\" definitionFormat = \").append(definitionFormat).append(SEP); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/6459/buggy-version/docker.docker.src.main.java.org.arquillian.cube.docker.impl.client.CubeDockerConfiguration.java", "BodyUseAPI": [], "Fixed commit": "ef6eca88aa78033f9cd5254a11dc49f1f69f36a8", "Url": "https://api.github.com/repos/foxlegend/arquillian-cube", "Date": "2015-11-11T16:35:43Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dockerMachinePath) != null) { content.append(\" dockerMachinePath = \").append(dockerMachinePath).append(SEP); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/6459/buggy-version/docker.docker.src.main.java.org.arquillian.cube.docker.impl.client.CubeDockerConfiguration.java", "BodyUseAPI": [], "Fixed commit": "ef6eca88aa78033f9cd5254a11dc49f1f69f36a8", "Url": "https://api.github.com/repos/foxlegend/arquillian-cube", "Date": "2015-11-11T16:35:43Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((email) != null) { content.append(\" email = \").append(email).append(SEP); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/6459/buggy-version/docker.docker.src.main.java.org.arquillian.cube.docker.impl.client.CubeDockerConfiguration.java", "BodyUseAPI": [], "Fixed commit": "ef6eca88aa78033f9cd5254a11dc49f1f69f36a8", "Url": "https://api.github.com/repos/foxlegend/arquillian-cube", "Date": "2015-11-11T16:35:43Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dockerServerUri) != null) { content.append(\" dockerServerUri = \").append(dockerServerUri).append(SEP); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/6459/buggy-version/docker.docker.src.main.java.org.arquillian.cube.docker.impl.client.CubeDockerConfiguration.java", "BodyUseAPI": [], "Fixed commit": "ef6eca88aa78033f9cd5254a11dc49f1f69f36a8", "Url": "https://api.github.com/repos/foxlegend/arquillian-cube", "Date": "2015-11-11T16:35:43Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dockerServerVersion) != null) { content.append(\" dockerServerVersion = \").append(dockerServerVersion).append(SEP); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/6459/buggy-version/docker.docker.src.main.java.org.arquillian.cube.docker.impl.client.CubeDockerConfiguration.java", "BodyUseAPI": [], "Fixed commit": "ef6eca88aa78033f9cd5254a11dc49f1f69f36a8", "Url": "https://api.github.com/repos/foxlegend/arquillian-cube", "Date": "2015-11-11T16:35:43Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dockerContainersContent) != null) { content.append(\" dockerContainersContent = \").append(dockerContainersContent).append(SEP); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/6459/buggy-version/docker.docker.src.main.java.org.arquillian.cube.docker.impl.client.CubeDockerConfiguration.java", "BodyUseAPI": [], "Fixed commit": "ef6eca88aa78033f9cd5254a11dc49f1f69f36a8", "Url": "https://api.github.com/repos/foxlegend/arquillian-cube", "Date": "2015-11-11T16:35:43Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((certPath) != null) { content.append(\" certPath = \").append(certPath).append(SEP); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/6459/buggy-version/docker.docker.src.main.java.org.arquillian.cube.docker.impl.client.CubeDockerConfiguration.java", "BodyUseAPI": [], "Fixed commit": "ef6eca88aa78033f9cd5254a11dc49f1f69f36a8", "Url": "https://api.github.com/repos/foxlegend/arquillian-cube", "Date": "2015-11-11T16:35:43Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((password) != null) { content.append(\" password = \").append(password).append(SEP); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/6459/buggy-version/docker.docker.src.main.java.org.arquillian.cube.docker.impl.client.CubeDockerConfiguration.java", "BodyUseAPI": [], "Fixed commit": "ef6eca88aa78033f9cd5254a11dc49f1f69f36a8", "Url": "https://api.github.com/repos/foxlegend/arquillian-cube", "Date": "2015-11-11T16:35:43Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dockerServerIp) != null) { content.append(\" dockerServerIp = \").append(dockerServerIp).append(SEP); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/6459/buggy-version/docker.docker.src.main.java.org.arquillian.cube.docker.impl.client.CubeDockerConfiguration.java", "BodyUseAPI": [], "Fixed commit": "ef6eca88aa78033f9cd5254a11dc49f1f69f36a8", "Url": "https://api.github.com/repos/foxlegend/arquillian-cube", "Date": "2015-11-11T16:35:43Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((autoStartContainers) != null) { content.append(\" autoStartContainers = \").append(autoStartContainers).append(SEP); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/6459/buggy-version/docker.docker.src.main.java.org.arquillian.cube.docker.impl.client.CubeDockerConfiguration.java", "BodyUseAPI": [], "Fixed commit": "ef6eca88aa78033f9cd5254a11dc49f1f69f36a8", "Url": "https://api.github.com/repos/foxlegend/arquillian-cube", "Date": "2015-11-11T16:35:43Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((boot2DockerPath) != null) { content.append(\" boot2DockerPath = \").append(boot2DockerPath).append(SEP); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/6459/buggy-version/docker.docker.src.main.java.org.arquillian.cube.docker.impl.client.CubeDockerConfiguration.java", "BodyUseAPI": [], "Fixed commit": "ef6eca88aa78033f9cd5254a11dc49f1f69f36a8", "Url": "https://api.github.com/repos/foxlegend/arquillian-cube", "Date": "2015-11-11T16:35:43Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dockerRegistry) != null) { content.append(\" dockerRegistry = \").append(dockerRegistry).append(SEP); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/6459/buggy-version/docker.docker.src.main.java.org.arquillian.cube.docker.impl.client.CubeDockerConfiguration.java", "BodyUseAPI": [], "Fixed commit": "ef6eca88aa78033f9cd5254a11dc49f1f69f36a8", "Url": "https://api.github.com/repos/foxlegend/arquillian-cube", "Date": "2015-11-11T16:35:43Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(this.overlay.isOnFocus(x, y))) { this.controller.mousePressed(button, x, y); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/8811/buggy-version/src.main.java.com.andres_k.components.graphicComponents.graphic.windowGame.WindowGame.java", "BodyUseAPI": ["this.controller.mousePressed(int,int,int)"], "Fixed commit": "28c5fb3ff5fd1cee1dac2fa7cd9bc1ec8b220fdc", "Url": "https://api.github.com/repos/Draym/SpriteBodyEditor", "Date": "2015-07-14T23:03:49Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mess.getUser().equals(\"gicu\")) { simulation.role = AuctionHouse.Mediator.Mediator.ROL_CUMPARATOR; }else { simulation.role = AuctionHouse.Mediator.Mediator.ROL_FURNIZOR; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/3530/buggy-version/AuctionHouseIDP.src.AuctionHouse.Mediator.Mediator.java", "BodyUseAPI": [], "Fixed commit": "578104d75e2080a95a886f3ffa5b320b83059a96", "Url": "https://api.github.com/repos/rpasea/IDP", "Date": "2013-03-29T21:39:40Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.seb.sebastien.opengardenirc.TinyChat.ChatFormatter.getMsg(msg).isEmpty()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/4534/buggy-version/app.src.main.java.com.seb.sebastien.opengardenirc.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "4f747b728510d79ad9d453881975e404e20bd945", "Url": "https://api.github.com/repos/scayetanot/OpenGarderIrc", "Date": "2017-12-10T06:11:51Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (response != null) response.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/3815/buggy-version/src.main.java.shop.leshare.common.utils.HttpClientUtil.java", "BodyUseAPI": ["org.apache.http.client.methods.CloseableHttpResponse.close()"], "Fixed commit": "6e57d69e3822cbf67a33e7e2c070268db566bf36", "Url": "https://api.github.com/repos/leeis/leshare-utils", "Date": "2017-11-29T13:09:02Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.http.impl.client.HttpClients.createDefault()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (client != null) client.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/3815/buggy-version/src.main.java.shop.leshare.common.utils.HttpClientUtil.java", "BodyUseAPI": ["org.apache.http.impl.client.CloseableHttpClient.close()"], "Fixed commit": "6e57d69e3822cbf67a33e7e2c070268db566bf36", "Url": "https://api.github.com/repos/leeis/leshare-utils", "Date": "2017-11-29T13:09:02Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (client != null) client.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/3815/buggy-version/src.main.java.shop.leshare.common.utils.HttpClientUtil.java", "BodyUseAPI": ["org.apache.http.impl.client.CloseableHttpClient.close()"], "Fixed commit": "6e57d69e3822cbf67a33e7e2c070268db566bf36", "Url": "https://api.github.com/repos/leeis/leshare-utils", "Date": "2017-11-29T13:09:02Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (response != null) response.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/3815/buggy-version/src.main.java.shop.leshare.common.utils.HttpClientUtil.java", "BodyUseAPI": ["org.apache.http.client.methods.CloseableHttpResponse.close()"], "Fixed commit": "6e57d69e3822cbf67a33e7e2c070268db566bf36", "Url": "https://api.github.com/repos/leeis/leshare-utils", "Date": "2017-11-29T13:09:02Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.swandev.jukebox.Jukebox.SongData.getMusic()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(music.isPlaying())) { music.setOnCompletionListener(new com.badlogic.gdx.audio.Music.OnCompletionListener() { @java.lang.Override public void onCompletion(com.badlogic.gdx.audio.Music music) { popPlaylist(); } }); music.play(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/8557/buggy-version/jukebox.core.src.com.swandev.jukebox.Jukebox.java", "BodyUseAPI": ["com.badlogic.gdx.audio.Music.play()", "com.badlogic.gdx.audio.Music.setOnCompletionListener(com.badlogic.gdx.audio.Music.OnCompletionListener)"], "Fixed commit": "8ab52c98b78a7cf925f6b534dcd5753b65bb748d", "Url": "https://api.github.com/repos/newmanne/swanboxlibgdx", "Date": "2014-03-19T02:58:46Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tachyon.worker.block.meta.StorageTier.getDir(newLocation.dir())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((dir.getAvailableBytes()) >= (blockMeta.getBlockSize())) { newDir = dir; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/9049/buggy-version/servers.src.main.java.tachyon.worker.block.BlockMetadataManager.java", "BodyUseAPI": [], "Fixed commit": "19d51210d1ea09551c8308fd19d9f10ae39a9def", "Url": "https://api.github.com/repos/calvinjia/tachyon", "Date": "2015-06-26T17:09:41Z"},
{"Line": "=>2703", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fixRepLimit) < (hiveConf.getLongVar(HiveConf.ConfVars.DM_FIX_REP_LIMIT))) { (fixRepLimit)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/9019/buggy-version/src.metastore.src.java.org.apache.hadoop.hive.metastore.DiskManager.java", "BodyUseAPI": [], "Fixed commit": "56629bcdaa6535ba2e675476b1b5e74bef4a2542", "Url": "https://api.github.com/repos/bd-group/metastore", "Date": "2013-11-08T11:18:41Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mValues) == null) || ((mValues.size()) <= index)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/7299/buggy-version/MPChartLib.src.main.java.com.github.mikephil.charting.data.DataSet.java", "BodyUseAPI": [], "Fixed commit": "497f2051baaf5411087309c0f8cb51c1c870f381", "Url": "https://api.github.com/repos/happyjosh/MPAndroidChart", "Date": "2017-10-25T08:33:54Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (attrName.contains(\" (\")) { attrValue = food.getDataSet().getValue(food.getMealTitle(), attrName.substring(0, attrName.indexOf(\" (\")).toLowerCase()); }else { attrValue = food.getDataSet().getValue(food.getMealTitle(), attrName.toLowerCase()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/2633/buggy-version/app.src.main.java.com.manji.cooper.fragments.NutritionFragment.java", "BodyUseAPI": ["java.lang.String.toLowerCase()", "food.getDataSet().getValue(food.getMealTitle(),java.lang.String)", "java.lang.String.substring(int,int)", "food.getDataSet().getValue(food.getMealTitle(),java.lang.String)", "java.lang.String.toLowerCase()", "java.lang.String.indexOf(java.lang.String)"], "Fixed commit": "3137c5b33e1b5337dd0f41929681ccd9c85f2db5", "Url": "https://api.github.com/repos/jffrymrtn/kivvi", "Date": "2015-02-22T00:17:42Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (target.isRecurring()) { return; }else { toDoList.markTask(target); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/8000/buggy-version/src.main.java.seedu.agendum.model.ModelManager.java", "BodyUseAPI": ["seedu.agendum.model.ToDoList.markTask(seedu.agendum.model.task.ReadOnlyTask)"], "Fixed commit": "b9cd34abd9e1244635dbee9fdbe84fe6a92c55dd", "Url": "https://api.github.com/repos/CS2103AUG2016-W11-C2/main", "Date": "2016-10-23T15:16:17Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((event.getAction()) == (org.bukkit.event.block.Action.RIGHT_CLICK_BLOCK)) || ((event.getAction()) == (org.bukkit.event.block.Action.RIGHT_CLICK_AIR))) { org.bukkit.block.Block targetBlock = getTargetBlock(event.getPlayer()); if (targetBlock != null) { if (((targetBlock.getType()) == (org.bukkit.Material.WATER)) || ((targetBlock.getType()) == (org.bukkit.Material.STATIONARY_WATER))) { net.wayward_realms.waywardlib.character.Character character = plugin.getActiveCharacter(event.getPlayer()); character.setThirst(((character.getThirst()) + 1)); event.getPlayer().sendMessage(((((((org.bukkit.ChatColor.GREEN) + \"Thirst: +1\") + (org.bukkit.ChatColor.GRAY)) + \" (Total: \") + (character.getThirst())) + \")\")); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/387/buggy-version/WaywardCharacters.src.main.java.net.wayward_realms.waywardcharacters.PlayerInteractListener.java", "BodyUseAPI": ["event.getPlayer().sendMessage(((((((org.bukkit.ChatColor.GREEN) + \"Thirst: +1\") + (org.bukkit.ChatColor.GRAY)) + \" (Total: \") + (character.getThirst())) + \")\"))", "org.bukkit.event.player.PlayerInteractEvent.getPlayer()", "org.bukkit.event.player.PlayerInteractEvent.getPlayer()", "org.bukkit.event.player.PlayerInteractEvent.getPlayer()", "net.wayward_realms.waywardcharacters.PlayerInteractListener.getTargetBlock(event.getPlayer())", "net.wayward_realms.waywardcharacters.WaywardCharacters.getActiveCharacter(event.getPlayer())"], "Fixed commit": "7cf5a8670677aa7e1a83a88f580b445f6f7c714e", "Url": "https://api.github.com/repos/WaywardRealms/Wayward", "Date": "2014-06-07T09:04:21Z"},
{"Line": "=>356", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((getPacket(PP.x, PP.y)) != null) if (getPacket(PP.x, PP.y).isTaken()) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/530/buggy-version/src.agentsproject.StatesInfo.java", "BodyUseAPI": ["agentsproject.Packet.isTaken()", "StatesInfo.getPacket(int,int)"], "Fixed commit": "a5f1cba74995f95fca529f60e48253e68a854649", "Url": "https://api.github.com/repos/SyedMusaAli/CollaboratingAgents", "Date": "2014-01-09T03:25:32Z"},
{"Line": "=>1052", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.opencms.xml.containerpage.CmsContainerElementBean.getSettings()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (settings == null) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/2571/buggy-version/src.org.opencms.jsp.CmsJspTagContainer.java", "BodyUseAPI": [], "Fixed commit": "934982abc7bb349aa6146938374626d3aba0e354", "Url": "https://api.github.com/repos/alkacon/opencms-core", "Date": "2013-01-22T11:20:14Z"},
{"Line": "=>512", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tabTypeface) != null) { title.setTypeface(tabTypeface, tabTypefaceUnselectedStyle); }else { title.setTypeface(Typeface.DEFAULT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/5304/buggy-version/library.src.io.karim.MaterialTabs.java", "BodyUseAPI": [], "Fixed commit": "89ed13dd46b8230ee2b3b8b6e2d5b06839a86b33", "Url": "https://api.github.com/repos/pizza/MaterialTabs", "Date": "2016-04-06T11:49:00Z"},
{"Line": "=>534", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tabTypeface) != null) { title.setTypeface(tabTypeface, tabTypefaceSelectedStyle); }else { title.setTypeface(Typeface.DEFAULT_BOLD); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/5304/buggy-version/library.src.io.karim.MaterialTabs.java", "BodyUseAPI": [], "Fixed commit": "89ed13dd46b8230ee2b3b8b6e2d5b06839a86b33", "Url": "https://api.github.com/repos/pizza/MaterialTabs", "Date": "2016-04-06T11:49:00Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((other.getSPD()) < 10) other.setSPD(10);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/3157/buggy-version/Pirate_Arena.src.Pirate.java", "BodyUseAPI": ["Pirate.setSPD(int)"], "Fixed commit": "e86f75f8e10dd0ff9af34ad5484ea8b80323c718", "Url": "https://api.github.com/repos/Nydroam/Pirate_Arena", "Date": "2017-07-05T02:43:06Z"},
{"Line": "=>415", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (oncogenic != null) { evidence.setKnownEffect(oncogenic.getOncogenic()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/2417/buggy-version/web.src.main.java.org.mskcc.cbio.oncokb.controller.DriveAnnotationParser.java", "BodyUseAPI": ["org.mskcc.cbio.oncokb.controller.Evidence.setKnownEffect(oncogenic.getOncogenic())", "org.mskcc.cbio.oncokb.controller.Oncogenicity.getOncogenic()"], "Fixed commit": "d50eee5aa33bc68259f78d02970c75c8baf8100b", "Url": "https://api.github.com/repos/zhx828/oncokb", "Date": "2016-12-13T15:14:30Z"},
{"Line": "=>642", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (capabilities.isSetCapabilities()) { abstractProcess.addCapabilities(capabilities); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/3536/buggy-version/coding.sensorML-v20.src.main.java.org.n52.sos.decode.SensorMLDecoderV20.java", "BodyUseAPI": ["org.n52.sos.ogc.sensorML.AbstractProcess.addCapabilities(org.n52.sos.ogc.sensorML.elements.SmlCapabilities)"], "Fixed commit": "a920042c2f0ef8a727664f0d09b422405d4a08cb", "Url": "https://api.github.com/repos/EHJ-52n/SOS", "Date": "2017-04-07T14:35:31Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.apache.shiro.SecurityUtils.getSubject().isPermitted(\"file:create\"))) { return javax.ws.rs.core.Response.status(Status.FORBIDDEN).type(MediaType.TEXT_PLAIN).entity(\"Permission Denied.\").build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/7091/buggy-version/src.main.java.net.qldarch.web.resource.FileSummaryResource.java", "BodyUseAPI": [], "Fixed commit": "84c498170b0e999d885d18884e93947801b916ae", "Url": "https://api.github.com/repos/uq-eresearch/qldarch.ws", "Date": "2014-04-04T03:09:55Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(ipList.contains(ip))) ipList.add(ip);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/5512/buggy-version/src.main.java.me.hockey.capatchafy.Configuration.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "8bced5bad37debf28259f7a02be0442df566167f", "Url": "https://api.github.com/repos/Hockeyfan360/Capatchafy", "Date": "2017-11-13T00:41:03Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(ipList.contains(ip))) ipList.add(ip);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/5512/buggy-version/src.main.java.me.hockey.capatchafy.Configuration.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "8bced5bad37debf28259f7a02be0442df566167f", "Url": "https://api.github.com/repos/Hockeyfan360/Capatchafy", "Date": "2017-11-13T00:41:03Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(ipList.contains(ip))) ipList.add(ip);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/5512/buggy-version/src.main.java.me.hockey.capatchafy.Configuration.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "8bced5bad37debf28259f7a02be0442df566167f", "Url": "https://api.github.com/repos/Hockeyfan360/Capatchafy", "Date": "2017-11-13T00:41:03Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nuberOftries == 0) rehache(tableSize);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/5632/buggy-version/HashTable.Cuckoo.CuckooHashTable.java", "BodyUseAPI": [], "Fixed commit": "b7005f871daea6d67e90dc5b4dfabd84df0ddea4", "Url": "https://api.github.com/repos/benaich/JavaDataStructures", "Date": "2015-01-04T13:21:21Z"},
{"Line": "=>312", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((file) == null) { throw new java.io.IOException(\"No file defined so cannot be renamed\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/107/buggy-version/codec-http.src.main.java.io.netty.handler.codec.http.multipart.AbstractDiskHttpData.java", "BodyUseAPI": [], "Fixed commit": "da5da8e212727991eaaad8f06cce108a3d025471", "Url": "https://api.github.com/repos/netty/netty", "Date": "2014-01-20T15:43:55Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.lang.String, java.lang.Object>.getKey()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (key.equals(\"email\")) { builder.withEmail(((java.lang.String) (value))); }else if (key.equals(\"user_id\")) { builder.withUserId(((java.lang.String) (value))); }else if (key.equals(\"name\")) { builder.withName(((java.lang.String) (value))); }else if (key.equals(\"phone\")) { builder.withPhone(((java.lang.String) (value))); }else if (key.equals(\"language_override\")) { builder.withLanguageOverride(((java.lang.String) (value))); }else if (key.equals(\"signed_up_at\")) { java.sql.Date dateSignedUpAt = new java.sql.Date(((long) (value))); builder.withSignedUpAt(dateSignedUpAt); }else if (key.equals(\"unsubscribed_from_emails\")) { builder.withUnsubscribedFromEmails(((java.lang.Boolean) (value))); }else if (key.equals(\"companies\")) { android.util.Log.w(com.robinpowered.react.Intercom.IntercomModule.TAG, \"Not implemented yet\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/8307/buggy-version/android.src.main.java.com.robinpowered.react.Intercom.IntercomModule.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "00e91699f34a9fddb8688c6a7462c9e8fcd18263", "Url": "https://api.github.com/repos/hayanmind/react-native-intercom", "Date": "2017-10-11T02:12:51Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getId()) != 0) { javax.persistence.EntityManager em = PersonHealthDao.instance.createEntityManager(); java.util.List<introsde.assignment2.ehealth.model.Measurement> list = em.createNamedQuery(\"Measurement.findMostRecentForPerson\", introsde.assignment2.ehealth.model.Measurement.class).setParameter(\"person\", this).getResultList(); PersonHealthDao.instance.closeConnections(em); return list; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/7552/buggy-version/src.introsde.assignment2.ehealth.model.Person.java", "BodyUseAPI": [], "Fixed commit": "0878aba069dd27eba74f65aa23800369eec9ee09", "Url": "https://api.github.com/repos/djbb7/introsde-2015-assignment-2", "Date": "2015-11-20T17:42:38Z"},
{"Line": "=>632", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.uecide.Base.autoCompile) { if (!(s.build())) { java.lang.System.exit(10); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/1383/buggy-version/src.org.uecide.Base.java", "BodyUseAPI": [], "Fixed commit": "73a2269b21b46095ecb196d0a89945f564354a32", "Url": "https://api.github.com/repos/UECIDE/UECIDE", "Date": "2015-01-11T16:37:43Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((params.isInvert()) == isFlash) foundStartBits++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/3121/buggy-version/src.main.java.org.harctoolbox.analyze.BiphaseWithDoubleToggleDecoder.java", "BodyUseAPI": [], "Fixed commit": "3e7e3962af9cc64ff27f01328558907e69b1d019", "Url": "https://api.github.com/repos/bengtmartensson/IrpTransmogrifier", "Date": "2017-10-09T09:11:20Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((file) != null) console = new com.orientechnologies.orient.console.OConsoleDatabaseApp(new java.lang.String[]{ file }); else console = new com.orientechnologies.orient.console.OConsoleDatabaseApp(commands.toArray(new java.lang.String[commands.size()]));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/3991/buggy-version/src.main.java.com.orientechnologies.orient.etl.block.OConsoleBlock.java", "BodyUseAPI": [], "Fixed commit": "de61678bdc493bef5754a086f5d60c4bf05067d5", "Url": "https://api.github.com/repos/orientechnologies/orientdb-etl", "Date": "2014-11-13T18:52:23Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((civItem.getItemType()) == (CivItem.ItemType.FOLDER)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/254/buggy-version/src.org.redcastlemedia.multitallented.civs.civilians.CivilianManager.java", "BodyUseAPI": [], "Fixed commit": "df614c55174bb909f807b62790ff206779410a85", "Url": "https://api.github.com/repos/Multitallented/Civs", "Date": "2017-11-27T16:59:11Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.redcastlemedia.multitallented.civs.items.ItemManager.getInstance().getItemType(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (classType == null) { classType = new org.redcastlemedia.multitallented.civs.civclass.ClassType(new java.util.ArrayList<java.lang.String>(), \"default\", org.redcastlemedia.multitallented.civs.util.CVItem.createCVItemFromString(\"STONE\"), 0, \"\", new java.util.ArrayList<java.lang.String>(), new java.util.HashMap<java.lang.String, java.lang.String>(), new java.util.ArrayList<java.lang.String>(), 5, 100); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/254/buggy-version/src.org.redcastlemedia.multitallented.civs.civclass.ClassManager.java", "BodyUseAPI": [], "Fixed commit": "df614c55174bb909f807b62790ff206779410a85", "Url": "https://api.github.com/repos/Multitallented/Civs", "Date": "2017-11-27T16:59:11Z"},
{"Line": "=>273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.redcastlemedia.multitallented.civs.items.ItemManager.getItemType(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (currentItem == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/254/buggy-version/src.org.redcastlemedia.multitallented.civs.items.ItemManager.java", "BodyUseAPI": [], "Fixed commit": "df614c55174bb909f807b62790ff206779410a85", "Url": "https://api.github.com/repos/Multitallented/Civs", "Date": "2017-11-27T16:59:11Z"},
{"Line": "=>852", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.orientechnologies.orient.core.serialization.serializer.OJSONReader.readString(OJSONReader.NEXT_IN_OBJECT)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(cls.getName().equalsIgnoreCase(shortName))) cls.setShortName(shortName);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/89/buggy-version/core.src.main.java.com.orientechnologies.orient.core.db.tool.ODatabaseImport.java", "BodyUseAPI": ["com.orientechnologies.orient.core.metadata.schema.OClassImpl.setShortName(java.lang.String)"], "Fixed commit": "4dbfbebd45921bf1f0708f6e6665a34d81031b55", "Url": "https://api.github.com/repos/sonatype/orientdb", "Date": "2015-10-05T16:45:54Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.isi.wings.catalog.data.api.impl.kb.DataCreationKB.getMetadataProperty(prop.getID())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (mprop.getDomains().contains(dtypeid)) { if ((mprop.getDomains().size()) > 1) this.removeMetadataPropertyDomain(prop.getID(), dtypeid); else this.removeMetadataProperty(prop.getID()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/6505/buggy-version/planner.src.main.java.edu.isi.wings.catalog.data.api.impl.kb.DataCreationKB.java", "BodyUseAPI": ["mprop.getDomains().size()", "edu.isi.wings.catalog.data.api.impl.kb.DataCreationKB.removeMetadataPropertyDomain(prop.getID(),java.lang.String)", "edu.isi.wings.catalog.data.classes.MetadataProperty.getDomains()"], "Fixed commit": "fd72cbfef33e8094e31e281ea74bf844ed0b3520", "Url": "https://api.github.com/repos/varunratnakar/wings", "Date": "2013-10-11T18:49:31Z"},
{"Line": "=>2295", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (playerIndex == (-1)) playerListNameData.add(new com.mojang.minecraft.PlayerListNameData(NameId, playerName, listName, groupName, unusedRank)); else playerListNameData.set(playerIndex, new com.mojang.minecraft.PlayerListNameData(NameId, playerName, listName, groupName, unusedRank));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/826/buggy-version/src.main.java.com.mojang.minecraft.Minecraft.java", "BodyUseAPI": ["java.util.List<com.mojang.minecraft.PlayerListNameData>.set(int,com.mojang.minecraft.PlayerListNameData)"], "Fixed commit": "04723c15741a979ed062033bddf07b4cb3294ae8", "Url": "https://api.github.com/repos/andrewphorn/ClassiCube-Client", "Date": "2014-01-10T23:33:01Z"},
{"Line": "=>327", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ast.getFirstChild().getType()) == (com.puppycrawl.tools.checkstyle.api.TokenTypes.RESOURCE_SPECIFICATION)) { lcurly = ast.getFirstChild().getNextSibling(); }else { lcurly = ast.getFirstChild(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/1873/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck.java", "BodyUseAPI": ["ast.getFirstChild().getNextSibling()", "com.puppycrawl.tools.checkstyle.api.DetailAST.getFirstChild()", "com.puppycrawl.tools.checkstyle.api.DetailAST.getFirstChild()"], "Fixed commit": "4e78d6d1d66f3b9a54df7456abea912cc1b67e27", "Url": "https://api.github.com/repos/rnveach/checkstyle", "Date": "2017-01-30T20:29:10Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cz.habarta.typescript.generator.ext.BeanPropertyPathExtension.extractOriginalTsType(cz.habarta.typescript.generator.TsType)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(originalType instanceof cz.habarta.typescript.generator.TsType.ReferenceType)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/239/buggy-version/typescript-generator-core.src.main.java.cz.habarta.typescript.generator.ext.BeanPropertyPathExtension.java", "BodyUseAPI": [], "Fixed commit": "95af74c81d3745f4a43fcd65d46af0f9657b8fce", "Url": "https://api.github.com/repos/vojtechhabarta/typescript-generator", "Date": "2016-12-02T20:40:29Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getWidth()) == 0) && ((getHeight()) == 0)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/6683/buggy-version/circleimageview.src.main.java.de.hdodenhof.circleimageview.CircleImageView.java", "BodyUseAPI": [], "Fixed commit": "612474a746b68e616300f89abba1322acc02c69a", "Url": "https://api.github.com/repos/start141/CircleImageView", "Date": "2015-09-11T10:27:36Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((score.rank()) == null) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/2934/buggy-version/app.decorators.ScoreDecorator.java", "BodyUseAPI": [], "Fixed commit": "99af96d99e4b9bc3d644f656a6d5cfeee0b2b684", "Url": "https://api.github.com/repos/jsmadja/shmuphiscores", "Date": "2015-08-10T11:32:29Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(((it.cnr.istc.oratio.core.BaseEnv) (item)).items.containsKey(field.name))) { if (field.type.primitive) { ((it.cnr.istc.oratio.core.BaseEnv) (item)).items.put(field.name, field.type.newInstance(item)); }else { ((it.cnr.istc.oratio.core.BaseEnv) (item)).items.put(field.name, field.type.newExistential()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/2603/buggy-version/src.it.cnr.istc.oratio.core.TypeRefinementListener.java", "BodyUseAPI": ["((it.cnr.istc.oratio.core.BaseEnv) (item)).items.put(field.name,field.type.newInstance(item))", "field.type.newExistential()", "((it.cnr.istc.oratio.core.BaseEnv) (item)).items.put(field.name,field.type.newExistential())", "field.type.newInstance(it.cnr.istc.oratio.core.IItem)"], "Fixed commit": "a796aa18e950ae735cd1b6e742a51d150bf15ede", "Url": "https://api.github.com/repos/oRatioSolver/oRatio", "Date": "2017-01-13T09:44:22Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.time.LocalDateTime.toLocalTime()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((time.getNano()) == 0) { startTime = time; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/3409/buggy-version/src.main.java.Task.java", "BodyUseAPI": [], "Fixed commit": "17c1209558faaacd46708a49a74bce4bc61b569d", "Url": "https://api.github.com/repos/cs2103jan2015-w15-1j/main", "Date": "2015-04-04T09:17:12Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sender) != null) { sender.stop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/5443/buggy-version/app.src.main.java.progbuddies.fragment.EncodeFragment.java", "BodyUseAPI": [], "Fixed commit": "dbeec2d93d1ead79c93fa2195134c6edb794c713", "Url": "https://api.github.com/repos/way2smrt/Android-Morse-Decoder-Encoder", "Date": "2016-03-08T03:51:34Z"},
{"Line": "=>531", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (timeCue.equalsIgnoreCase(\"\")) { timeCue = (secToTime(w.start, shift)) + \" --> \"; text = (w.form) + \" \"; }else if ((w.start) <= interval) { text += (w.form) + \" \"; }else { sb.append(timeCue).append(secToTime(w.end, shift)).append(\"\\n\").append(text).append(\" \").append(w.form).append(\"\\n\\n\"); timeCue = \"\"; text = \"\"; interval = (w.end) + sentTimeInterval; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/6502/buggy-version/src.main.java.elh.eus.MSM.multimediaElement.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "4342c5d0efe4eccc58625c625a4e87cb13c5ae33", "Url": "https://api.github.com/repos/Elhuyar/MSM", "Date": "2017-09-19T17:09:18Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ru.spbau.mit.java.server.tcp.OneRequestTask.call()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (stat == null) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/1340/buggy-version/server.src.main.java.ru.spbau.mit.java.server.tcp.ClientServingTask.java", "BodyUseAPI": [], "Fixed commit": "cc2bc3b89c1a144940e83dd231375a16dfe75556", "Url": "https://api.github.com/repos/egorbunov/java-servers-bench", "Date": "2016-12-21T13:27:06Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["bamboo.trove.common.TitleTools.makeHistogram(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((histogram.size()) < ((bamboo.trove.common.TitleTools.SEO_MINIMUM_WORD_COUNT) * 5)) && ((histogram.height()) < (bamboo.trove.common.TitleTools.SEO_MINIMUM_DUPE_COUNT))) { return bamboo.trove.common.TitleTools.NO_MALUS; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/5149/buggy-version/trove.src.bamboo.trove.common.TitleTools.java", "BodyUseAPI": [], "Fixed commit": "51bfdd13f9dedc6dcfe02bccfe3be440051c006a", "Url": "https://api.github.com/repos/IanCanb/bamboo", "Date": "2017-04-19T04:17:34Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((pathToFollow.size) >= 2) { ant.setSteeringBehavior(new com.badlogic.gdx.ai.steer.behaviors.FollowPath<com.badlogic.gdx.math.Vector2, com.badlogic.gdx.ai.steer.utils.paths.LinePath.LinePathParam>(ant, new com.badlogic.gdx.ai.steer.utils.paths.LinePath<com.badlogic.gdx.math.Vector2>(pathToFollow, true), 10).setArrivalTolerance(0).setDecelerationRadius(2)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/5209/buggy-version/core.src.ru.spbau.kaysin.ants.controls.DragTheAntListener.java", "BodyUseAPI": ["new com.badlogic.gdx.ai.steer.behaviors.FollowPath<com.badlogic.gdx.math.Vector2, com.badlogic.gdx.ai.steer.utils.paths.LinePath.LinePathParam>(ant, new com.badlogic.gdx.ai.steer.utils.paths.LinePath<com.badlogic.gdx.math.Vector2>(pathToFollow, true), 10).setArrivalTolerance(0).setDecelerationRadius(int)", "ru.spbau.kaysin.ants.entities.Ant.setSteeringBehavior(new com.badlogic.gdx.ai.steer.behaviors.FollowPath<com.badlogic.gdx.math.Vector2, com.badlogic.gdx.ai.steer.utils.paths.LinePath.LinePathParam>(ant, new com.badlogic.gdx.ai.steer.utils.paths.LinePath<com.badlogic.gdx.math.Vector2>(pathToFollow, true), 10).setArrivalTolerance(0).setDecelerationRadius(2))", "com.badlogic.gdx.ai.steer.behaviors.FollowPath<com.badlogic.gdx.math.Vector2, com.badlogic.gdx.ai.steer.utils.paths.LinePath.LinePathParam>.setArrivalTolerance(int)"], "Fixed commit": "5b2d6627f51dbb3f3b47a61f042946f0f4e8e23b", "Url": "https://api.github.com/repos/demarkok/The-ants-are-my-friends", "Date": "2016-12-24T18:37:17Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cutoff_) == 0) { cutoff_ = tempcutoff; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/9123/buggy-version/src.threader.UVautomator.java", "BodyUseAPI": [], "Fixed commit": "bdb04f5d147ed82c72ace3a9ad84d16b426c47e9", "Url": "https://api.github.com/repos/jdeschamps/GUIv2", "Date": "2016-01-11T17:52:50Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(world.isRemote)) && (player.isSneaking())) { dismantleBlock(world, x, y, z, false); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/2013/buggy-version/src.main.java.org.halvors.electrometrics.common.block.BlockMachine.java", "BodyUseAPI": ["org.halvors.electrometrics.common.block.BlockMachine.dismantleBlock(net.minecraft.world.World,int,int,int,boolean)"], "Fixed commit": "9fa269d7dbc793e9fa419352e4f3f0b3b64aab90", "Url": "https://api.github.com/repos/halvors/Electrometrics", "Date": "2015-07-28T11:28:48Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["obj.objects.item(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((item.getFirstChild()) != null) { org.json.simple.JSONObject o = new org.json.simple.JSONObject(); o.put(\"text\", item.getFirstChild().getTextContent()); attachments.add(o); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/9032/buggy-version/src.main.java.com.sipstacks.xhml.Slack.java", "BodyUseAPI": ["org.w3c.dom.Node.getFirstChild()", "org.json.simple.JSONObject.put(java.lang.String,java.lang.String)", "org.w3c.dom.Node.getTextContent()"], "Fixed commit": "b2f98faf8b59ad83ea636e1697f7d1b1befb96d9", "Url": "https://api.github.com/repos/midoricorp/xhtml-convert", "Date": "2016-04-27T21:33:24Z"},
{"Line": "=>691", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.crate.analyze.expressions.ExpressionAnalyzer.InnerExpressionAnalyzer.process(node.getMin(),io.crate.analyze.expressions.ExpressionAnalysisContext)", "io.crate.analyze.expressions.ExpressionAnalyzer.InnerExpressionAnalyzer.process(node.getMax(),io.crate.analyze.expressions.ExpressionAnalysisContext)", "io.crate.analyze.expressions.ExpressionAnalyzer.InnerExpressionAnalyzer.process(node.getValue(),io.crate.analyze.expressions.ExpressionAnalysisContext)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((((value.valueType()) == (DataTypes.UNDEFINED)) || ((min.valueType()) == (DataTypes.UNDEFINED))) || ((max.valueType()) == (DataTypes.UNDEFINED))) { return io.crate.analyze.symbol.Literal.NULL; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/8191/buggy-version/sql.src.main.java.io.crate.analyze.expressions.ExpressionAnalyzer.java", "BodyUseAPI": [], "Fixed commit": "6055310d9eb80c308f7871da15b8f7439db5d2b9", "Url": "https://api.github.com/repos/EvilMcJerkface/crate", "Date": "2016-11-15T11:36:28Z"},
{"Line": "=>1836", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isWellSampleDataSelection(selected)) { return; }else if (selected instanceof omero.gateway.model.DataObject) { org.openmicroscopy.shoola.agents.util.browser.NodeSelectionVisitor visitor = new org.openmicroscopy.shoola.agents.util.browser.NodeSelectionVisitor(parent, ((omero.gateway.model.DataObject) (selected))); accept(visitor); foundNode = visitor.getSelectedNode(); if (foundNode != null) { if (multiSelection) model.addFoundNode(foundNode); else model.setSelectedDisplay(foundNode, true); view.setFoundNode(model.getSelectedDisplays()); }else view.setFoundNode(null); }else if (selected instanceof org.openmicroscopy.shoola.agents.util.browser.TreeImageDisplay) { foundNode = ((org.openmicroscopy.shoola.agents.util.browser.TreeImageDisplay) (selected)); if (multiSelection) model.addFoundNode(foundNode); else model.setSelectedDisplay(foundNode, true); view.setFoundNode(model.getSelectedDisplays()); }else if (selected instanceof java.util.List) { org.openmicroscopy.shoola.agents.util.browser.NodeSelectionVisitor visitor = new org.openmicroscopy.shoola.agents.util.browser.NodeSelectionVisitor(parent, ((java.util.List<omero.gateway.model.DataObject>) (selected))); accept(visitor); java.util.List<org.openmicroscopy.shoola.agents.util.browser.TreeImageDisplay> nodes = visitor.getSelectedNodes(); if ((nodes.size()) == 0) { view.setFoundNode(null); }else if ((nodes.size()) == 1) { model.setSelectedDisplay(nodes.get(0), true); view.setFoundNode(model.getSelectedDisplays()); }else { model.setSelectedDisplay(null, true); java.util.Iterator<org.openmicroscopy.shoola.agents.util.browser.TreeImageDisplay> i = nodes.iterator(); while (i.hasNext()) model.addFoundNode(i.next()); view.setFoundNode(model.getSelectedDisplays()); } }else if (selected instanceof java.lang.String) { model.setSelectedDisplay(null, true); view.setFoundNode(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/5797/buggy-version/components.insight.SRC.org.openmicroscopy.shoola.agents.treeviewer.browser.BrowserComponent.java", "BodyUseAPI": [], "Fixed commit": "7916359c37c4c4f182a18f1ae915332cd0167740", "Url": "https://api.github.com/repos/snoopycrimecop/openmicroscopy", "Date": "2016-05-25T03:06:34Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Integer, com.whizzosoftware.hobson.radiora.RadioRaDevice>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (device == null) { device = new com.whizzosoftware.hobson.radiora.RadioRaDevice(this, zoneId, (c == '1')); publishDevice(device); devices.put(zoneId, device); }else { boolean value = c == '1'; if (device.isStarted()) { updates.add(new com.whizzosoftware.hobson.api.variable.VariableUpdate(com.whizzosoftware.hobson.api.device.DeviceContext.create(getContext(), java.lang.Integer.toString(zoneId)), com.whizzosoftware.hobson.api.variable.VariableConstants.ON, value)); }else { device.setStartupValue(value); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/6002/buggy-version/src.main.java.com.whizzosoftware.hobson.radiora.RadioRaPlugin.java", "BodyUseAPI": ["com.whizzosoftware.hobson.radiora.RadioRaDevice.isStarted()", "com.whizzosoftware.hobson.radiora.RadioRaDevice.setStartupValue(boolean)"], "Fixed commit": "7ec1147135917623760a880167ceb686f56ee356", "Url": "https://api.github.com/repos/whizzosoftware/hobson-hub-lutron-radiora", "Date": "2015-07-08T20:09:34Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i < ((Tools.Data.MotionData.JOINT_NUMBER) - 1)) str = in.readLine();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/7843/buggy-version/Data.MotionData.java", "BodyUseAPI": [], "Fixed commit": "2306d42595ca71c44a0f8ae8ebfed3f2a9921e13", "Url": "https://api.github.com/repos/FumihikoKouno/Tools", "Date": "2013-10-08T03:49:30Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(search.getText().toString().equalsIgnoreCase(\"\"))) { search.setText(\" \"); getRequest((((((calibrage.payzanagent.utils.CommonConstants.USERID) + \"/\") + (calibrage.payzanagent.utils.CommonConstants.STATUSTYPE_ID_IN_PROGRESS)) + \",\") + (calibrage.payzanagent.utils.CommonConstants.STATUSTYPE_ID_SUBMIT_FOR_REVIEW)), null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/4864/buggy-version/app.src.main.java.calibrage.payzanagent.fragments.InProgressFragment.java", "BodyUseAPI": ["android.widget.EditText.setText(java.lang.String)"], "Fixed commit": "b7ed92baf0dc9dbe3bdb0dd1128373a4227c78a7", "Url": "https://api.github.com/repos/amithcali/PayzanAgentRegistrationApplication", "Date": "2017-12-04T06:53:42Z"},
{"Line": "=>1457", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((entry.getOperation()) == (org.jsr107.ri.processor.MutableEntryOperation.CREATE)) { writeCacheEntry(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/7678/buggy-version/cache-ri-impl.src.main.java.org.jsr107.ri.RICache.java", "BodyUseAPI": [], "Fixed commit": "bb5f28bf25bb4391fb9b560567176db9b6b5f4fe", "Url": "https://api.github.com/repos/jsr107/RI", "Date": "2013-10-17T21:00:26Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((swipeRefreshLayout) != null) { swipeRefreshLayout.setRefreshing(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/9059/buggy-version/Habitica.src.com.habitrpg.android.habitica.ui.fragments.ChatListFragment.java", "BodyUseAPI": [], "Fixed commit": "c5edb7807b4c4157c0527f77294bbeb216448eac", "Url": "https://api.github.com/repos/Data5tream/habitrpg-android", "Date": "2016-01-06T11:57:46Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tds.get(1).text().replaceAll(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (value.contains(com.sachin.risk.common.data.mobile.MobileIp138Resolver.NOT_KNOWN)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/7731/buggy-version/common-data-extract.src.main.java.com.sachin.risk.common.data.mobile.MobileIp138Resolver.java", "BodyUseAPI": [], "Fixed commit": "bb26fc8f086ea5b2b985ccd0f841d59ad26faf2d", "Url": "https://api.github.com/repos/sachincode/risk-common", "Date": "2017-04-06T08:57:50Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tds.get(1).text().replaceAll(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (value.contains(com.sachin.risk.common.data.mobile.MobileIp138Resolver.NOT_KNOWN)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/7731/buggy-version/common-data-extract.src.main.java.com.sachin.risk.common.data.mobile.MobileIp138Resolver.java", "BodyUseAPI": [], "Fixed commit": "bb26fc8f086ea5b2b985ccd0f841d59ad26faf2d", "Url": "https://api.github.com/repos/sachincode/risk-common", "Date": "2017-04-06T08:57:50Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(matcher.matches())) { throw new zeropoint.core.exception.InvalidVersionException().setMessage((ver + \" is not a valid version string!\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/1239/buggy-version/zeropoint.core.Version.java", "BodyUseAPI": [], "Fixed commit": "ae679b446aa9d9c99ee4f88d02be4abc2c9e201d", "Url": "https://api.github.com/repos/ZeroPointMC/ZeroCore", "Date": "2014-04-23T19:09:53Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getSupportActionBar()) != null) { getSupportActionBar().setDisplayShowTitleEnabled(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/5190/buggy-version/app.src.main.java.me.wcy.music.activity.SearchMusicActivity.java", "BodyUseAPI": [], "Fixed commit": "2b4e01be061efdd042407c6a1c74a5486596e2aa", "Url": "https://api.github.com/repos/wangchenyan/PonyMusic", "Date": "2016-01-13T09:07:40Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((copy.getCityGMLClass()) == (org.citygml4j.model.citygml.CityGMLClass.BUILDING_PART)) { if (isSetGenericApplicationPropertyOfBuildingPart()) { for (org.citygml4j.model.citygml.ade.ADEComponent part : ade) { org.citygml4j.model.citygml.ade.ADEComponent copyPart = ((org.citygml4j.model.citygml.ade.ADEComponent) (copyBuilder.copy(part))); ((org.citygml4j.model.citygml.building.BuildingPart) (copy)).addGenericApplicationPropertyOfBuildingPart(copyPart); if ((part != null) && (copyPart == part)) part.setParent(this); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/4264/buggy-version/src.org.citygml4j.model.citygml.building.BuildingPart.java", "BodyUseAPI": [], "Fixed commit": "45509a1f3e4af71cd2e6773d1cde23c7169cca5a", "Url": "https://api.github.com/repos/rchr/citygml4j", "Date": "2014-07-30T16:16:19Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (parentPath.equals(PublickConstants.PAGE_PATH)) { parentNode = \"\"; }else { parentNode = parent; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/6878/buggy-version/core.src.main.java.com.nateyolles.sling.publick.components.admin.PageEdit.java", "BodyUseAPI": [], "Fixed commit": "304b3a50aa301b233d3930c631f133f0061cae07", "Url": "https://api.github.com/repos/infielddigital/publick-sling-blog", "Date": "2015-11-24T19:33:09Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currentLocation != null) return currentLocation; else return new com.google.android.gms.maps.model.LatLng(37.723357, (-122.480698));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/5568/buggy-version/app.src.main.java.com.group_seven.csc413.finalprojectrepository.MapsActivity.java", "BodyUseAPI": [], "Fixed commit": "d9a6de219eb274be562427572cfc79481f4a538d", "Url": "https://api.github.com/repos/CS413team7/FinalProjectTeam7", "Date": "2015-04-28T00:13:12Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((serverGroupMap.get(serverName)) == null) { org.wso2.deployment.monitor.core.scheduler.ScheduleManager.logger.warn(((\"Unable to find a Server Group with the name : \" + serverName) + \". Task will not be scheduled for this server\")); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/6195/buggy-version/deployment-monitor-core.src.main.java.org.wso2.deployment.monitor.core.scheduler.ScheduleManager.java", "BodyUseAPI": ["org.slf4j.Logger.warn(java.lang.String)"], "Fixed commit": "7cb431e45051e3d5a3309b03342f2157c71885a7", "Url": "https://api.github.com/repos/kasunbg/carbon-deployment-monitor", "Date": "2016-06-27T12:18:43Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((guiContainer.getSlotUnderMouse()) != null) { return guiContainer.getSlotUnderMouse().getStack(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/4115/buggy-version/src.main.java.misterpemodder.tmo.main.compat.jei.injector.AdvancedGuiHandlerInjector.java", "BodyUseAPI": ["guiContainer.getSlotUnderMouse().getStack()", "misterpemodder.tmo.main.client.gui.GuiContainerInjector.getSlotUnderMouse()"], "Fixed commit": "c7541ae27cd1acd30fb24d72c82663e0f38ad42c", "Url": "https://api.github.com/repos/MisterPeModder/TooManyOres3", "Date": "2017-06-25T17:58:37Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.Statement.executeQuery(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((rs.getString(1)) == null) || (rs.getString(1).isEmpty())) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/2833/buggy-version/src.main.java.edu.uiuc.zenvisage.data.remotedb.SQLQueryExecutor.java", "BodyUseAPI": [], "Fixed commit": "5253d12bfe6e415d4684087f8211782795204172", "Url": "https://api.github.com/repos/zenvisage/zenvisage", "Date": "2016-12-29T19:14:20Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rowIndex < 0) || (rowIndex >= (rows.size()))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/3633/buggy-version/src.ninja.egg82.sql.LanguageDatabase.java", "BodyUseAPI": [], "Fixed commit": "3261e4b66c893d3d8985bf67fb3e32ab9ab39f16", "Url": "https://api.github.com/repos/egg82/Java-Lib", "Date": "2017-07-02T05:21:35Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getValue()) != null) { ((org.apache.kerby.asn1.type.Asn1Encodeable) (getValue())).encodeBody(buffer); }else if ((field) != null) { buffer.put(field.getBodyBuffer()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/3754/buggy-version/kerby-asn1.src.main.java.org.apache.kerby.asn1.type.Asn1Any.java", "BodyUseAPI": [], "Fixed commit": "c4b11ccbab7120ad2f3f43c9d94e373167c59aac", "Url": "https://api.github.com/repos/apache/directory-kerby", "Date": "2015-12-10T00:53:56Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getValue()) != null) { return ((org.apache.kerby.asn1.type.Asn1Encodeable) (getValue())).encodingBodyLength(); }else if ((field) != null) { return field.getBodyLength(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/3754/buggy-version/kerby-asn1.src.main.java.org.apache.kerby.asn1.type.Asn1Any.java", "BodyUseAPI": [], "Fixed commit": "c4b11ccbab7120ad2f3f43c9d94e373167c59aac", "Url": "https://api.github.com/repos/apache/directory-kerby", "Date": "2015-12-10T00:53:56Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (transparency == (java.awt.Transparency.TRANSLUCENT)) { return new java.awt.image.BufferedImage(width, height, java.awt.image.BufferedImage.TYPE_INT_ARGB); }else { final java.awt.GraphicsConfiguration gfxConfig = java.awt.GraphicsEnvironment.getLocalGraphicsEnvironment().getDefaultScreenDevice().getDefaultConfiguration(); return gfxConfig.createCompatibleImage(width, height, transparency); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/8040/buggy-version/src.infinity.resource.graphics.ColorConvert.java", "BodyUseAPI": ["java.awt.GraphicsConfiguration.createCompatibleImage(int,int,int)"], "Fixed commit": "df4623a0f3d01d6dfa483785a81e347ccec28001", "Url": "https://api.github.com/repos/Argent77/NearInfinity", "Date": "2015-02-13T10:56:15Z"},
{"Line": "=>555", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((isSeekBySection) && (!(triggerSeekBySection))) { triggerSeekBySection = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/8721/buggy-version/bubbleseekbar.src.main.java.com.xw.repo.BubbleSeekBar.java", "BodyUseAPI": [], "Fixed commit": "66b717c64c2fcae03b21dc97d8b06cd4444fc244", "Url": "https://api.github.com/repos/woxingPATHo/BubbleSeekBar", "Date": "2017-05-03T08:52:57Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isAlwaysShowBubble) { setProgress(mProgress); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/8721/buggy-version/bubbleseekbar.src.main.java.com.xw.repo.BubbleSeekBar.java", "BodyUseAPI": [], "Fixed commit": "66b717c64c2fcae03b21dc97d8b06cd4444fc244", "Url": "https://api.github.com/repos/woxingPATHo/BubbleSeekBar", "Date": "2017-05-03T08:52:57Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.hadoop.hive.accumulo.predicate.AccumuloPredicateHandler.getRanges(org.apache.hadoop.mapred.JobConf,org.apache.hadoop.hive.accumulo.columns.ColumnMapper)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((null != ranges) && (ranges.isEmpty())) { return new org.apache.hadoop.mapred.InputSplit[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/7741/buggy-version/accumulo-handler.src.java.org.apache.hadoop.hive.accumulo.mr.HiveAccumuloTableInputFormat.java", "BodyUseAPI": [], "Fixed commit": "5abe6da819c1074969230457a91d0a82e79f7d64", "Url": "https://api.github.com/repos/joshelser/hive", "Date": "2014-07-24T05:18:31Z"},
{"Line": "=>349", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.lang.String, game.GameObject>.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (o instanceof game.Enemy) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/472/buggy-version/src.game.gameplayStates.GamePlayState.java", "BodyUseAPI": [], "Fixed commit": "71908cf6235b656d3294d5a75a703171e36ccc2a", "Url": "https://api.github.com/repos/jianshentan/cs032_game", "Date": "2013-05-04T21:39:37Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.BufferedReader.readLine()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (line == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/7538/buggy-version/src.main.java.com.treasure_data.bulk_import.reader.JSONFileReader.java", "BodyUseAPI": [], "Fixed commit": "59bc2eb1e569686c64136599b63371eea99fb8fd", "Url": "https://api.github.com/repos/treasure-data/td-bulk-import-java", "Date": "2013-07-01T11:45:05Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((aiFrame) == null) || (!(aiFrame.isVisible()))) aiFrame = new main.AIFrame(startAi, grid);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/1410/buggy-version/src.main.Game.java", "BodyUseAPI": [], "Fixed commit": "a85e78136ceadff134432205358cc24d95284e77", "Url": "https://api.github.com/repos/SuperPenguin/Bejeweled-AI-Project", "Date": "2016-01-05T13:43:16Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isAppendTrailingSlash)) return uri.substring(directory.length()); else return uri.substring(((directory.length()) - 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/7573/buggy-version/src.main.java.net.sf.j2ep.rules.DirectoryRule.java", "BodyUseAPI": [], "Fixed commit": "1d36df4ca712dfe53e85ae52712940d89f0a1458", "Url": "https://api.github.com/repos/lat-lon/j2ep", "Date": "2013-08-08T15:37:55Z"},
{"Line": "=>324", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((hasActiveShape) && (canMoveShapeLeft())) { removeShape(); shape.rotateLeft(); addShape(shape, shape.getYPosition(), shape.getXPosition()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/7634/buggy-version/src.core.GameGrid.java", "BodyUseAPI": [], "Fixed commit": "585ebce27ae509862b80ca94be19549b0c775aa7", "Url": "https://api.github.com/repos/DomParfitt/falling-blocks", "Date": "2017-06-27T20:50:12Z"},
{"Line": "=>335", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((hasActiveShape) && (canMoveShapeRight())) { removeShape(); shape.rotateRight(); addShape(shape, shape.getYPosition(), shape.getXPosition()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/7634/buggy-version/src.core.GameGrid.java", "BodyUseAPI": [], "Fixed commit": "585ebce27ae509862b80ca94be19549b0c775aa7", "Url": "https://api.github.com/repos/DomParfitt/falling-blocks", "Date": "2017-06-27T20:50:12Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ch.jmanagr.bl.UsersBL.validate(ch.jmanagr.bo.User)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (statusCode == (ch.jmanagr.lib.STATUS_CODE.OK)) { bl.save(user); UsersController.userList.add(user); }else { new ch.jmanagr.ui.controls.messagebox.MessageBox(\"User erstellen fehlgeschlagen.\", (\"User erstellen fehlgeschlagen. \\n\\nGrund: \" + statusCode)).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/8918/buggy-version/src.ch.jmanagr.ui.users.UserDetailController.java", "BodyUseAPI": ["ch.jmanagr.ui.controls.messagebox.MessageBox.show()"], "Fixed commit": "eff2e076549435021f0661a3abdb3674c7e0c72c", "Url": "https://api.github.com/repos/IAP12-16B/jManagr", "Date": "2014-06-26T20:57:48Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((entry.getValue()) != null) { if (first) { first = false; }else { result.append(\"&\"); } result.append(java.net.URLEncoder.encode(entry.getKey(), \"UTF-8\")); result.append(\"=\"); result.append(java.net.URLEncoder.encode(entry.getValue(), \"UTF-8\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/3102/buggy-version/epsilon.src.main.java.com.headbangers.epsilon.v3.service.impl.WebService.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "java.net.URLEncoder.encode(java.lang.String,java.lang.String)", "java.util.Map.Entry<java.lang.String, java.lang.String>.getValue()", "java.lang.StringBuilder.append(java.lang.String)", "java.net.URLEncoder.encode(java.lang.String,java.lang.String)", "java.util.Map.Entry<java.lang.String, java.lang.String>.getKey()"], "Fixed commit": "2f84760e785b4441fb1a8a8418ff71a4f066f223", "Url": "https://api.github.com/repos/cbrouillard/epsilon-mobile", "Date": "2017-08-24T17:27:30Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentProgress) != null) { progressDialog.setIndeterminate(false); progressDialog.setProgress(currentProgress.getProgress()); progressDialog.setMessage(currentProgress.getMessage()); }else { progressDialog.setIndeterminate(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/2949/buggy-version/src.org.digitalcampus.oppia.task.DownloadTasksController.java", "BodyUseAPI": [], "Fixed commit": "b5bfbeea22891a40a6bd718b23d6f7e66809581d", "Url": "https://api.github.com/repos/jjoseba/oppia-mobile-android", "Date": "2015-05-29T23:35:05Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (createIfNotExisting) { org.structr.core.Command transactionCommand = org.structr.core.Services.command(securityContext, org.structr.core.notion.TransactionCommand.class); return ((org.structr.core.entity.AbstractNode) (transactionCommand.execute(new org.structr.core.notion.StructrTransaction() { @java.lang.Override public java.lang.Object execute() throws org.structr.common.error.FrameworkException { org.structr.core.entity.AbstractNode newNode = ((org.structr.core.entity.AbstractNode) (org.structr.core.Services.command(securityContext, org.structr.core.node.CreateNodeCommand.class).execute(new org.structr.core.node.NodeAttribute(AbstractNode.Key.type.name(), type.getSimpleName())))); if (newNode == null) { org.structr.core.notion.IdDeserializationStrategy.logger.log(java.util.logging.Level.WARNING, \"Unable to create node of type {0} for property {1}\", new java.lang.Object[]{ type.getSimpleName(), propertyKey.name() }); } return newNode; } }))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/3202/buggy-version/structr.structr-core.src.main.java.org.structr.core.notion.IdDeserializationStrategy.java", "BodyUseAPI": [], "Fixed commit": "7c466a2cc0f4976fc451b12368b20ce10259e94a", "Url": "https://api.github.com/repos/structr/structr", "Date": "2012-07-19T09:57:40Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.structr.core.entity.AbstractNode.getName()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (name == null) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/3202/buggy-version/structr.structr-core.src.main.java.org.structr.core.entity.AbstractNode.java", "BodyUseAPI": [], "Fixed commit": "7c466a2cc0f4976fc451b12368b20ce10259e94a", "Url": "https://api.github.com/repos/structr/structr", "Date": "2012-07-19T09:57:40Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.structr.core.entity.AbstractNode.getName()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (nodeName == null) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/3202/buggy-version/structr.structr-core.src.main.java.org.structr.core.entity.AbstractNode.java", "BodyUseAPI": [], "Fixed commit": "7c466a2cc0f4976fc451b12368b20ce10259e94a", "Url": "https://api.github.com/repos/structr/structr", "Date": "2012-07-19T09:57:40Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (node == null) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/3202/buggy-version/structr.structr-core.src.main.java.org.structr.core.entity.AbstractNode.java", "BodyUseAPI": [], "Fixed commit": "7c466a2cc0f4976fc451b12368b20ce10259e94a", "Url": "https://api.github.com/repos/structr/structr", "Date": "2012-07-19T09:57:40Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.structr.core.entity.AbstractRelationship.identifyEndNode(org.structr.core.entity.RelationshipMapping,java.util.Map<java.lang.String, java.lang.Object>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (endNode == null) { errorBuffer.add(namedRelation.getName(), new org.structr.common.error.EmptyPropertyToken(relationshipEntity.getEndNodeIdKey().name())); hasError = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/3202/buggy-version/structr.structr-rest.src.main.java.org.structr.rest.resource.NamedRelationResource.java", "BodyUseAPI": [], "Fixed commit": "7c466a2cc0f4976fc451b12368b20ce10259e94a", "Url": "https://api.github.com/repos/structr/structr", "Date": "2012-07-19T09:57:40Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((parameters.length) > 1) && ((parameters[1]) instanceof java.util.Map)) { params = ((java.util.Map<java.lang.String, java.lang.Object>) (parameters[1])); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/3202/buggy-version/structr.structr-core.src.main.java.org.structr.core.node.CypherQueryCommand.java", "BodyUseAPI": [], "Fixed commit": "7c466a2cc0f4976fc451b12368b20ce10259e94a", "Url": "https://api.github.com/repos/structr/structr", "Date": "2012-07-19T09:57:40Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (params != null) { result = engine.execute(query, params); }else { result = engine.execute(query); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/3202/buggy-version/structr.structr-core.src.main.java.org.structr.core.node.CypherQueryCommand.java", "BodyUseAPI": ["org.neo4j.cypher.javacompat.ExecutionEngine.execute(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)"], "Fixed commit": "7c466a2cc0f4976fc451b12368b20ce10259e94a", "Url": "https://api.github.com/repos/structr/structr", "Date": "2012-07-19T09:57:40Z"},
{"Line": "=>730", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, org.structr.core.PropertyGroup>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (group == null) { java.lang.Class localType = type; while (((group == null) && (localType != null)) && (!(localType.equals(java.lang.Object.class)))) { group = org.structr.core.EntityContext.getPropertyGroupMapForType(localType).get(key); if (group == null) { for (java.lang.Class interfaceClass : org.structr.core.EntityContext.getInterfacesForType(localType)) { group = org.structr.core.EntityContext.getPropertyGroupMapForType(interfaceClass).get(key); if (group != null) { break; } } } localType = localType.getSuperclass(); } org.structr.core.EntityContext.getAggregatedPropertyGroupMapForType(type).put(key, group); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/3202/buggy-version/structr.structr-core.src.main.java.org.structr.core.EntityContext.java", "BodyUseAPI": [], "Fixed commit": "7c466a2cc0f4976fc451b12368b20ce10259e94a", "Url": "https://api.github.com/repos/structr/structr", "Date": "2012-07-19T09:57:40Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((productTabuMap.containsKey(item.GetProductID())) && ((productTabuMap.get(item.GetProductID())) > 0)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/2952/buggy-version/src.Customer.java", "BodyUseAPI": [], "Fixed commit": "7e566e7745c7a040cbb90279f67deca4e6ee9ad5", "Url": "https://api.github.com/repos/ZhongBot/GroceryPredictionAlgo", "Date": "2016-03-15T16:16:05Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((game) != null) { onPlayersConnected(); }else { onGameCreationFailed(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/9021/buggy-version/app.src.main.java.edu.msu.cse476.teamwoodpecker_project2.AwaitActivity.java", "BodyUseAPI": [], "Fixed commit": "ce100c20f23660116d4e79220526e43eaa5909e8", "Url": "https://api.github.com/repos/PStanos/CSE476-TeamWoodpecker-Project2", "Date": "2015-04-15T23:37:45Z"},
{"Line": "=>350", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (android.text.TextUtils.isEmpty(httpStatusErrorMessage)) { listener.onHttpStatusError(httpStatusCode); }else { listener.onHttpStatusError(httpStatusCode, httpStatusErrorMessage); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/1269/buggy-version/src.com.kkbox.toolkit.internal.api.APIRequest.java", "BodyUseAPI": ["com.kkbox.toolkit.internal.api.APIRequestListener.onHttpStatusError(int,java.lang.String)"], "Fixed commit": "1ca0f656ab6efe816595bbb9a511460e98d7d986", "Url": "https://api.github.com/repos/KKBOX/android_kktoolkit", "Date": "2014-11-28T11:44:21Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tokens.isEmpty()) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/3131/buggy-version/cleartk-berkeleyparser.src.main.java.org.cleartk.berkeleyparser.ParserAnnotator.java", "BodyUseAPI": [], "Fixed commit": "cbd2d94d282425f86769f486d23f5352d91f7161", "Url": "https://api.github.com/repos/mjlaali/cleartk", "Date": "2015-10-21T21:37:51Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!posTagProvided) tags = java.util.Collections.emptyList();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/3131/buggy-version/cleartk-berkeleyparser.src.main.java.org.cleartk.berkeleyparser.ParserAnnotator.java", "BodyUseAPI": [], "Fixed commit": "cbd2d94d282425f86769f486d23f5352d91f7161", "Url": "https://api.github.com/repos/mjlaali/cleartk", "Date": "2015-10-21T21:37:51Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mapping.containsValue(list.get(i))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/1649/buggy-version/GBE.src.MatchedCandidates.java", "BodyUseAPI": [], "Fixed commit": "12124bcd16338176bdc5db37a207b2903b439c49", "Url": "https://api.github.com/repos/LittleDS/Graph", "Date": "2012-12-22T01:45:59Z"},
{"Line": "=>250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ca.mapping.get(se.target)", "ca.mapping.get(se.source)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(sourceInData.equals(targetInData))) { java.util.List<java.lang.String> pathReturned = BFSBuildShortestPath(sourceInData, targetInData, se.length); if ((pathReturned.size()) > 0) { ca.paths.put(((sourceInData + \" \") + targetInData), pathReturned); }else { it.remove(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/1649/buggy-version/GBE.src.GBE.java", "BodyUseAPI": ["ca.paths.put(java.lang.String,java.util.List<java.lang.String>)", "GBE.BFSBuildShortestPath(java.lang.Integer,java.lang.Integer,se.length)"], "Fixed commit": "12124bcd16338176bdc5db37a207b2903b439c49", "Url": "https://api.github.com/repos/LittleDS/Graph", "Date": "2012-12-22T01:45:59Z"},
{"Line": "=>2011", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (var_s2q15i == \"2\") { if (((java.lang.Integer.parseInt(vars.GetAgeYY())) < 14) || ((java.lang.Integer.parseInt(vars.GetAgeYY())) > 22)) { MAPPSApp.sc.setROW_iselig(\"2\"); }else { MAPPSApp.sc.setROW_iselig(\"1\"); } }else { MAPPSApp.sc.setROW_iselig(\"2\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/1632/buggy-version/app.src.main.java.com.mapps.mapps.activities.Section2Activity.java", "BodyUseAPI": [], "Fixed commit": "2188b6e4633b2f577144de19003a6e2d5208611f", "Url": "https://api.github.com/repos/shznaqvi/MaPPS-Form1", "Date": "2017-04-28T13:36:50Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((wl) != null) { wl.release(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/2929/buggy-version/wear.src.main.java.com.better_computer.habitaid.MyApplication.java", "BodyUseAPI": [], "Fixed commit": "13857518bc91a36f06b481ebe3d01f7f9785f6b0", "Url": "https://api.github.com/repos/mye-morr/belii6", "Date": "2017-08-30T10:42:55Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.container.recipe.getRecipeOutput()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (upgrade.isCompatible(this.container.item, this.container.stack, this.container.item.getSlot())) { this.drawStringBounded(cofh.lib.util.helpers.StringHelper.localize(\"info.chbachman.doesWork\"), 70, ((this.guiLeft) + 100), ((this.guiTop) + 50), 16777215); }else { this.drawStringBounded(cofh.lib.util.helpers.StringHelper.localize(\"info.chbachman.doesntWork\"), 70, ((this.guiLeft) + 100), ((this.guiTop) + 50), 16777215); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/3705/buggy-version/src.main.java.chbachman.armour.gui.client.ArmourGuiRecipe.java", "BodyUseAPI": [], "Fixed commit": "82ad79204fb3d4382fdeacd1649eec5c27f9de6e", "Url": "https://api.github.com/repos/chbachman/ModularArmour", "Date": "2014-09-15T02:46:56Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((java.lang.Math.abs(xVelocity)) < (com.oceangamejam.game.gameobjects.Ship.threshhold)) { if (leftMove) { if ((xVelocity) > 0) { xVelocity -= 4 * deltaTime; } xVelocity -= 3 * deltaTime; } if (rightMove) { if ((xVelocity) < 0) { xVelocity += 4 * deltaTime; } xVelocity += 3 * deltaTime; } }else if ((java.lang.Math.abs(xVelocity)) > (com.oceangamejam.game.gameobjects.Ship.threshhold)) { if ((xVelocity) > 0) { xVelocity = (com.oceangamejam.game.gameobjects.Ship.threshhold) - 1; }else { xVelocity = (-(com.oceangamejam.game.gameobjects.Ship.threshhold)) + 1; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/1783/buggy-version/core.src.com.oceangamejam.game.gameobjects.Ship.java", "BodyUseAPI": ["java.lang.Math.abs(double)"], "Fixed commit": "9f4033f4472cd5b9400c7828b4c75498dd91d884", "Url": "https://api.github.com/repos/normandra/oceangamejam", "Date": "2017-05-20T21:02:42Z"},
{"Line": "=>404", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((waitForAndGetElement(ELEMENT_TOTAL_PAGE, 10000, 0)) != null) { page = java.lang.Integer.parseInt(waitForAndGetElement(ELEMENT_TOTAL_PAGE).getText()); for (int i = 1; i < page; i++) { if ((waitForAndGetElement(ELEMENT_QUESTION_LINK.replace(\"${question}\", questionName), 5000, 0)) == null) { if ((waitForAndGetElement(ELEMENT_NEXT_PAGE, 5000, 0)) != null) { click(ELEMENT_NEXT_PAGE); } }else break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/3995/buggy-version/ui-common.src.main.java.org.exoplatform.selenium.platform.forum.AnswerBase.java", "BodyUseAPI": ["org.exoplatform.selenium.platform.forum.AnswerBase.waitForAndGetElement(org.openqa.selenium.By)", "waitForAndGetElement(ELEMENT_TOTAL_PAGE).getText()", "java.lang.Integer.parseInt(waitForAndGetElement(ELEMENT_TOTAL_PAGE).getText())"], "Fixed commit": "12e7faa70eb13ddbf0aa165e4766f81343df0fd0", "Url": "https://api.github.com/repos/exoplatform/ui-test", "Date": "2014-02-20T01:54:42Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.firebase.auth.FirebaseAuth.getInstance().getCurrentUser()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (user != null) { java.lang.String uid = user.getUid(); com.example.dell_pc.health_first.UserInformation userInformation = new com.example.dell_pc.health_first.UserInformation(firstName, lastName, age, phoneNumber, emergencyContact, username, password); databaseReference.child(uid).setValue(userInformation); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/816/buggy-version/app.src.main.java.com.example.dell_pc.health_first.Registration1.java", "BodyUseAPI": ["com.google.firebase.auth.FirebaseUser.getUid()"], "Fixed commit": "1108b50516abb1f27e37326fbff473ab37de79f8", "Url": "https://api.github.com/repos/nikpawar89/Health_First", "Date": "2017-02-19T19:38:49Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((newEntry.getFreeSpace()) > 0) freeRecordSpace.putIfAbsent(newEntry.getFreeSpace(), newEntry);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/1301/buggy-version/src.main.java.de.Lathanael.BinaryFileDB.BaseClass.RecordsFile.java", "BodyUseAPI": ["java.util.concurrent.ConcurrentSkipListMap<java.lang.Integer, de.Lathanael.BinaryFileDB.BaseClass.IndexEntry>.putIfAbsent(newEntry.getFreeSpace(),de.Lathanael.BinaryFileDB.BaseClass.IndexEntry)", "de.Lathanael.BinaryFileDB.BaseClass.IndexEntry.getFreeSpace()"], "Fixed commit": "fbd22a318cb3377f334b99b56de72fca48a442eb", "Url": "https://api.github.com/repos/Lathanael/BinaryFileDB", "Date": "2012-04-11T22:12:55Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((queue.size()) == 0) { queueView.empty(); }else { queueView.notEmpty(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/2684/buggy-version/core.src.main.java.uk.co.amlcurran.queues.core.QueuePresenter.java", "BodyUseAPI": [], "Fixed commit": "028869dd90415af38a750b3aea4984348bfa88d1", "Url": "https://api.github.com/repos/amlcurran/Queues", "Date": "2015-04-12T20:18:57Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (arg instanceof java.lang.Enum<?>) { arg = ((java.lang.Enum<?>) (arg)).name(); resolved = true; }else if (arg instanceof java.lang.ThreadLocal) { arg = ((java.lang.ThreadLocal<?>) (arg)).get(); }else { resolved = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/1168/buggy-version/squidb.src.com.yahoo.squidb.sql.DefaultArgumentResolver.java", "BodyUseAPI": [], "Fixed commit": "0e5cf5f318a572093d3cd2e239455d4db38c340c", "Url": "https://api.github.com/repos/sbosley/squidb", "Date": "2016-08-29T17:11:59Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["FBLT.service.rating.ImplIRatingService.findRatingByUserId(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((ratingList.size()) != 0) { for (FBLT.domain.rating.Rating r : ratingList) { total += java.lang.Integer.parseInt(r.getRating()); } return total / (ratingList.size()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/434/buggy-version/src.main.java.FBLT.controllers.RateMeController.java", "BodyUseAPI": ["java.util.List<FBLT.domain.rating.Rating>.size()"], "Fixed commit": "6847a48258c87387bfac1fe8c313dcaf51197a72", "Url": "https://api.github.com/repos/FerinT/FBLT", "Date": "2016-12-15T19:28:37Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (numericalCondition.matches(score.getValue())) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/7727/buggy-version/pint.queries.src.main.java.edu.scripps.yates.proteindb.queries.semantic.command.QueryFromScoreCommand.java", "BodyUseAPI": [], "Fixed commit": "b42e897520daec04dae699ea13d1694e4b88e3ef", "Url": "https://api.github.com/repos/proteomicsyates/PINT", "Date": "2017-12-06T19:19:52Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (savedInstanceState != null) { seconds = savedInstanceState.getInt(\"seconds\"); running = savedInstanceState.getBoolean(\"running\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/4911/buggy-version/app.src.main.java.com.paxtor.stopwatch.StopwatchActivity.java", "BodyUseAPI": ["android.os.Bundle.getBoolean(java.lang.String)", "android.os.Bundle.getInt(java.lang.String)"], "Fixed commit": "b3ca9813aab511e528515a3883a611ae0c6be4f7", "Url": "https://api.github.com/repos/carlitosspot/stopwatch", "Date": "2015-07-23T03:56:45Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (classInstance != null) subCommands.putAll(cz.sionzee.spigotresource.commands.CommandHandler.getCommandsWithSubCommands(classInstance, command.value()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/971/buggy-version/src.cz.sionzee.spigotresource.commands.CommandHandler.java", "BodyUseAPI": ["java.util.LinkedHashMap<java.lang.String, cz.sionzee.spigotresource.commands.CommandEntry>.putAll(java.util.TreeMap<java.lang.String, cz.sionzee.spigotresource.commands.CommandEntry>)", "cz.sionzee.spigotresource.commands.CommandHandler.getCommandsWithSubCommands(java.lang.Object,command.value())"], "Fixed commit": "06cd82a04973d0e75e29420cbcad07b84fa54412", "Url": "https://api.github.com/repos/siOnzeeSlav/SpigotResource", "Date": "2015-08-19T19:04:15Z"},
{"Line": "=>410", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.Material.getMaterial(com.graywolf336.jail.legacy.OldSettings.getGlobalInt(global, s))"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (mat != null) { c.set(Settings.JAILPAYITEM.getPath(), mat.toString().toLowerCase()); pl.debug((((Settings.JAILPAYPRICEINFINITE.getPath()) + \" <-- \") + (s.getString()))); count++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/2784/buggy-version/src.main.java.com.graywolf336.jail.legacy.LegacyManager.java", "BodyUseAPI": ["org.bukkit.configuration.file.FileConfiguration.set(Settings.JAILPAYITEM.getPath(),mat.toString().toLowerCase())", "org.bukkit.Material.toString()", "mat.toString().toLowerCase()"], "Fixed commit": "7db5fe9da509d71f0a7c8200d27434fbd3beab51", "Url": "https://api.github.com/repos/graywolf336/Jail", "Date": "2014-05-03T06:15:00Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((slide.getResImage()) != 0) { com.squareup.picasso.Picasso.with(getActivity()).load(slide.getResImage()).error(R.drawable.teayudo_usuario).into(imgCard); }else { com.squareup.picasso.Picasso.with(getActivity()).load(android.R.color.transparent).into(imgCard); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/447/buggy-version/app.src.main.java.com.globant.scriptsapadea.ui.fragments.SliderFragment.java", "BodyUseAPI": ["com.squareup.picasso.Picasso.with(getActivity()).load(slide.getResImage())", "com.globant.scriptsapadea.models.Slide.getResImage()", "com.squareup.picasso.Picasso.with(getActivity()).load(slide.getResImage()).error(R.drawable.teayudo_usuario).into(android.widget.ImageView)", "com.squareup.picasso.Picasso.with(getActivity()).load(slide.getResImage()).error(R.drawable.teayudo_usuario)"], "Fixed commit": "d4927f486186abbaf13bbc0a13097b75daf69044", "Url": "https://api.github.com/repos/ProyectoDane/scriptsAPADEA", "Date": "2015-11-15T18:19:10Z"},
{"Line": "=>662", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.w3c.dom.NodeList.item(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (brokerRootNode != null) { javax.xml.bind.JAXBElement<org.apache.activemq.schema.core.DtoBroker> brokerJAXBElement = unMarshaller.unmarshal(brokerRootNode, org.apache.activemq.schema.core.DtoBroker.class); jaxbConfig = brokerJAXBElement.getValue(); lastModified = configToMonitor.lastModified(); loadPropertiesPlaceHolderSupport(doc); }else { info((\"Failed to find 'broker' element by tag in: \" + configToMonitor)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/744/buggy-version/activemq-runtime-config.src.main.java.org.apache.activemq.plugin.RuntimeConfigurationBroker.java", "BodyUseAPI": ["javax.xml.bind.Unmarshaller.unmarshal(org.w3c.dom.Node,java.lang.Class)"], "Fixed commit": "043a4ad4ff235ce28bc1bcbd594c50a262caf373", "Url": "https://api.github.com/repos/apache/activemq", "Date": "2013-10-24T11:59:15Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(ta.hasView(ViewNames.NER_CONLL))) { edu.illinois.cs.cogcomp.core.datastructures.textannotation.SpanLabelView emptyView = new edu.illinois.cs.cogcomp.core.datastructures.textannotation.SpanLabelView(edu.illinois.cs.cogcomp.core.datastructures.ViewNames.NER_CONLL, ta); ta.addView(ViewNames.NER_CONLL, emptyView); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/1238/buggy-version/src.main.java.io.github.mayhewsw.FeatureExtractor.java", "BodyUseAPI": ["edu.illinois.cs.cogcomp.core.datastructures.textannotation.TextAnnotation.addView(ViewNames.NER_CONLL,edu.illinois.cs.cogcomp.core.datastructures.textannotation.SpanLabelView)"], "Fixed commit": "8cf5b5fcd2a7c03bea218660c14d77b666f22f81", "Url": "https://api.github.com/repos/schen149/ner-annotation", "Date": "2017-12-04T05:44:00Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (servletRequest instanceof javax.servlet.http.HttpServletRequest) { url = ((javax.servlet.http.HttpServletRequest) (servletRequest)).getRequestURL().toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/2853/buggy-version/src.main.java.pl.edu.agh.iosr.ServerFaultFilter.java", "BodyUseAPI": [], "Fixed commit": "b01f5ddfada470a28819abec90083d5a09379de3", "Url": "https://api.github.com/repos/pawnow/paxos-simple", "Date": "2016-11-05T15:30:05Z"},
{"Line": "=>416", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((child.key) < (this.min.key)) { this.min = child; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/7608/buggy-version/src.FibonacciHeap.java", "BodyUseAPI": [], "Fixed commit": "ae018a1a8fdb62dfda4ee48db2b73a7d05694ad4", "Url": "https://api.github.com/repos/UriSha/DataStructures02", "Date": "2017-01-07T17:57:30Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (tvDelivered)) { if (item.serverReceived) { tvDelivered.setVisibility(View.VISIBLE); }else { tvDelivered.setVisibility(View.GONE); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/8018/buggy-version/IMDemo.src.main.java.cn.ngds.im.demo.view.chat.MessageAdapter.java", "BodyUseAPI": [], "Fixed commit": "8ba7081e78c08deee51044a3bfb035cd3fdd4ab6", "Url": "https://api.github.com/repos/richmonkey/bauhinia_ios", "Date": "2014-10-28T09:49:43Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((TypeVS.RECEIPT) != (type)) setBase64ContentDigest(getSmimeMessage().getContentDigestStr());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/4034/buggy-version/VotingSystemLibrary.src.main.java.org.votingsystem.model.MessageSMIME.java", "BodyUseAPI": [], "Fixed commit": "8474d2a0b5003dd3dd32d45f29ebe058bf14ca0a", "Url": "https://api.github.com/repos/votingsystem/votingsystem", "Date": "2014-10-05T13:42:27Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(srcClosed)) { if ((!(getCache().srcIsFilterInputStreamCache())) && (!(getCache().isSrcClosed()))) { getCache().close(); } this.srcClosed = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/1962/buggy-version/src.org.exist.util.io.CachingFilterInputStream.java", "BodyUseAPI": [], "Fixed commit": "46d77b6b0e919204ef3ebf79214258096bdd490f", "Url": "https://api.github.com/repos/jensopetersen/exist", "Date": "2015-06-03T15:31:46Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (evaluatedNode.isBoolean()) { if (java.lang.Boolean.class.isAssignableFrom(value.getClass())) { java.lang.Boolean bValue = java.lang.Boolean.parseBoolean(value.toString()); comparisonResult = java.lang.Boolean.compare(evaluatedNode.asBoolean(), bValue); }else { throw new java.lang.IllegalArgumentException(\"Type mismatch between operator and operand\"); } }else if (evaluatedNode.isTextual()) { if (java.lang.String.class.isAssignableFrom(value.getClass())) { comparisonResult = evaluatedNode.asText().compareTo(java.lang.String.valueOf(value)); }else { throw new java.lang.IllegalArgumentException(\"Type mismatch between operator and operand\"); } }else if (evaluatedNode.isObject()) { throw new java.lang.IllegalArgumentException(\"Object comparisons not supported\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/1591/buggy-version/src.main.java.io.appform.jsonrules.utils.ComparisonUtils.java", "BodyUseAPI": ["com.fasterxml.jackson.databind.JsonNode.asText()", "java.lang.Boolean.compare(evaluatedNode.asBoolean(),java.lang.Boolean)", "com.fasterxml.jackson.databind.JsonNode.asBoolean()", "com.fasterxml.jackson.databind.JsonNode.isObject()", "evaluatedNode.asText().compareTo(java.lang.String)", "com.fasterxml.jackson.databind.JsonNode.isTextual()"], "Fixed commit": "e51efc514506adb9d54e5fadf243a65b83effa4f", "Url": "https://api.github.com/repos/santanusinha/json-rules", "Date": "2017-03-01T07:10:44Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(browser.afh.BuildConfig.DEBUG)) { com.crashlytics.android.Crashlytics.logException(e); com.crashlytics.android.Crashlytics.log((\"did : \" + did)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/7342/buggy-version/app.src.main.java.browser.afh.data.FindFiles.java", "BodyUseAPI": [], "Fixed commit": "735d2f2433a4695ba6b4827cb72c9d52e245075b", "Url": "https://api.github.com/repos/out386/AndroidFileHost_Browser", "Date": "2017-03-20T06:21:20Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(browser.afh.BuildConfig.DEBUG)) { com.crashlytics.android.Crashlytics.logException(e); com.crashlytics.android.Crashlytics.log((\"flid : \" + (url.flid))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/7342/buggy-version/app.src.main.java.browser.afh.data.FindFiles.java", "BodyUseAPI": [], "Fixed commit": "735d2f2433a4695ba6b4827cb72c9d52e245075b", "Url": "https://api.github.com/repos/out386/AndroidFileHost_Browser", "Date": "2017-03-20T06:21:20Z"},
{"Line": "=>440", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (H_fADC.hasEntry(0, 0, component)) { H_fADC.get(0, 0, component).reset(); H_NOISE.get(0, 0, component).reset(); H_COSMIC_fADC.get(0, 0, component).reset(); H_COSMIC_CHARGE.get(0, 0, component).reset(); H_COSMIC_VMAX.get(0, 0, component).reset(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/6790/buggy-version/FTmon.src.main.java.org.clas.ftcal.FTCALViewerModule.java", "BodyUseAPI": ["org.jlab.clas.detector.DetectorCollection<org.root.histogram.H1D>.get(int,int,int)", "H_COSMIC_fADC.get(0, 0, component).reset()", "org.jlab.clas.detector.DetectorCollection<org.root.histogram.H1D>.get(int,int,int)", "H_COSMIC_CHARGE.get(0, 0, component).reset()", "H_NOISE.get(0, 0, component).reset()", "H_COSMIC_VMAX.get(0, 0, component).reset()", "org.jlab.clas.detector.DetectorCollection<org.root.histogram.H1D>.get(int,int,int)", "H_fADC.get(0, 0, component).reset()", "org.jlab.clas.detector.DetectorCollection<org.root.histogram.H1D>.get(int,int,int)", "org.jlab.clas.detector.DetectorCollection<org.root.histogram.H1D>.get(int,int,int)"], "Fixed commit": "21072d36891171582c58a960439d00bcca677b6c", "Url": "https://api.github.com/repos/gsmith23/ft", "Date": "2016-03-03T23:00:55Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (reference == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/5387/buggy-version/src.net.falsetrue.heapwalker.util.ObjectTimeMap.java", "BodyUseAPI": [], "Fixed commit": "097c1ca013c20906edaac73d054e7591aaf39309", "Url": "https://api.github.com/repos/Vladiatro/idea-heap-walker", "Date": "2017-03-28T14:35:11Z"},
{"Line": "=>514", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["main.getToolDefine().getOrderList()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((orderList != null) && (!(orderList.isEmpty()))) { category.sortTargetNode(orderList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/2227/buggy-version/src.main.java.jp.co.tabocom.teratermstation.ui.EnvTabItem.java", "BodyUseAPI": ["jp.co.tabocom.teratermstation.model.Category.sortTargetNode(java.util.List<java.lang.String>)"], "Fixed commit": "66409088a89e5aa27490deedfc5edbe42f706ec6", "Url": "https://api.github.com/repos/turbou/TeratermStation", "Date": "2015-11-26T08:25:08Z"},
{"Line": "=>617", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (index < (dailyWeather.size())) { dailyWeather.add(index, copy); }else { dailyWeather.add(copy); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/4917/buggy-version/wear.src.main.java.thjread.annulus.Annulus.java", "BodyUseAPI": ["java.util.List<DayWeatherPoint>.add(int,DayWeatherPoint)", "java.util.List<DayWeatherPoint>.add(DayWeatherPoint)"], "Fixed commit": "313543d615e3973c0f98cee01c2c67803b664fc0", "Url": "https://api.github.com/repos/thjread/Annulus", "Date": "2016-04-13T16:25:35Z"},
{"Line": "=>578", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (firstTime < (weatherData.daily.data.get(0).sunsetTime)) { nextChange = weatherData.daily.data.get(0).sunsetTime; }else if (firstTime < (weatherData.daily.data.get(1).sunriseTime)) { nextChange = weatherData.daily.data.get(1).sunriseTime; }else { nextChange = weatherData.daily.data.get(1).sunsetTime; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/4917/buggy-version/wear.src.main.java.thjread.annulus.Annulus.java", "BodyUseAPI": ["weatherData.daily.data.get(int)", "weatherData.daily.data.get(int)", "weatherData.daily.data.get(int)", "weatherData.daily.data.get(int)"], "Fixed commit": "313543d615e3973c0f98cee01c2c67803b664fc0", "Url": "https://api.github.com/repos/thjread/Annulus", "Date": "2016-04-13T16:25:35Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.bukkit.Bukkit.getPluginManager().getPlugin(\"PermissionsEx\")) != null) { java.lang.System.out.println(\"= PEX: \\u001b[32mFound\\u001b[0m\"); }else { java.lang.System.out.println(\"= PEX: \\u001b[34mNot Found\\u001b[0m\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/64/buggy-version/HubBasics.src.me.Fabricio20.Main.java", "BodyUseAPI": [], "Fixed commit": "d44ccb6397948108568a53dde8d03c9fbdf538cb", "Url": "https://api.github.com/repos/Fabricio20/HubBasics", "Date": "2015-01-11T05:40:38Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((timeRangeGroup.getSelection()) == (autumbreakBtn.getModel())) { model.setTimeRangeTyp(TimeRangeStepModel.AUTUMNBREAK_TIME_RANGE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/6367/buggy-version/src.gui.steps.TimeRangeStep.java", "BodyUseAPI": [], "Fixed commit": "464f91421c1bd3a1666838843b16574548c485df", "Url": "https://api.github.com/repos/dameiers/SI2012", "Date": "2012-09-11T11:34:09Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((durationGroup.getSelection()) == (oneDayBtn.getModel())) { duration = model.steps.DurationStepModel.ONE_DAY_DURATION; }else if ((durationGroup.getSelection()) == (weekendBtn.getModel())) { duration = model.steps.DurationStepModel.WEEKEND_DURATION; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/6367/buggy-version/src.gui.steps.DurationStep.java", "BodyUseAPI": ["javax.swing.ButtonGroup.getSelection()"], "Fixed commit": "464f91421c1bd3a1666838843b16574548c485df", "Url": "https://api.github.com/repos/dameiers/SI2012", "Date": "2012-09-11T11:34:09Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (backupUri == null) { backupUri = ((mCursor.getString(RingtoneManager.URI_COLUMN_INDEX)) + \"/\") + (mCursor.getString(RingtoneManager.ID_COLUMN_INDEX)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/1432/buggy-version/src.edu.stanford.mobisocial.dungbeetle.ui.HomeActivity.java", "BodyUseAPI": [], "Fixed commit": "8be32cbc71049cc3a21aa326cd2c01ba454624a6", "Url": "https://api.github.com/repos/Mobisocial/dungbeetle", "Date": "2011-11-10T19:48:58Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value != (bg.tues.DCL.Value.VOID)) { return value; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/7410/buggy-version/Antlr.DataCentricDSLInterpreter.src.bg.tues.DCL.tree.WhileNode.java", "BodyUseAPI": [], "Fixed commit": "29dcc5e57cb4128b95af49cb744e6a817439cba6", "Url": "https://api.github.com/repos/georgi-ivanov-tues/Data-Centric-DSL-TUES-Project", "Date": "2015-02-06T19:02:17Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value != (bg.tues.DCL.Value.VOID)) { return value; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/7410/buggy-version/Antlr.DataCentricDSLInterpreter.src.bg.tues.DCL.tree.ForNode.java", "BodyUseAPI": [], "Fixed commit": "29dcc5e57cb4128b95af49cb744e6a817439cba6", "Url": "https://api.github.com/repos/georgi-ivanov-tues/Data-Centric-DSL-TUES-Project", "Date": "2015-02-06T19:02:17Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((url) != null) { progress.setVisibility(View.GONE); text.setVisibility(View.GONE); webView.setVisibility(View.VISIBLE); webView.getSettings().setJavaScriptEnabled(true); webView.loadUrl(url); }else { getLoaderManager().initLoader(0, null, this).forceLoad(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/2139/buggy-version/restaurantmediator.src.com.muvari.restaurantmediator.mediator.SummaryActivity.java", "BodyUseAPI": [], "Fixed commit": "b866a056c2f78113001c3bade11322c840f021cd", "Url": "https://api.github.com/repos/muvari/restaurant-mediator", "Date": "2014-07-27T20:54:33Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mw instanceof io.github.mkjung.iviplayer.media.MediaGroup) mw = ((io.github.mkjung.iviplayer.media.MediaGroup) (mw)).getFirstMedia();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/8707/buggy-version/app.src.main.java.io.github.mkjung.iviplayer.gui.helpers.AsyncImageLoader.java", "BodyUseAPI": [], "Fixed commit": "f8153bb15e0b3eae8b43f4cf279083269a64ffa0", "Url": "https://api.github.com/repos/mkjung/ivi-media-player", "Date": "2016-07-26T01:02:41Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.max(float,float)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (java.lang.Float.isNaN(dt)) { dt = 0.0F; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/6926/buggy-version/src.com.dinasgames.net.StateValue.java", "BodyUseAPI": [], "Fixed commit": "6be38d9f9ac73f06f4f690814197a49aa03d8121", "Url": "https://api.github.com/repos/V414/SimpleRTS", "Date": "2015-07-28T18:08:53Z"},
{"Line": "=>302", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (insideElement()) super.endElement(uri, localName, qName);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/5671/buggy-version/src.main.java.nl.inl.blacklab.indexers.DocIndexerWhiteLab2.java", "BodyUseAPI": [], "Fixed commit": "b7994e648ca337a64ea4c82c9b2f4f41ee09dfd3", "Url": "https://api.github.com/repos/Taalmonsters/BlackLab", "Date": "2016-07-04T11:40:29Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (insideElement()) super.startElement(uri, localName, qName, attributes);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/5671/buggy-version/src.main.java.nl.inl.blacklab.indexers.DocIndexerWhiteLab2.java", "BodyUseAPI": [], "Fixed commit": "b7994e648ca337a64ea4c82c9b2f4f41ee09dfd3", "Url": "https://api.github.com/repos/Taalmonsters/BlackLab", "Date": "2016-07-04T11:40:29Z"},
{"Line": "=>564", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((process) == null) { kill(); }else if (!(process.isAlive())) { synchronized(this) { if (!(forkDeathConfirmed)) { forkDeathConfirmed = true; processWatchdog.unregisterFork(this); client = null; process = null; forkCallback.onForkExit(this); this.notifyAll(); kill(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/289/buggy-version/de.gebit.integrity.runner.src.de.gebit.integrity.runner.forking.Fork.java", "BodyUseAPI": [], "Fixed commit": "adea0edc346d0e589573075eed73994ae3c7bbb8", "Url": "https://api.github.com/repos/integrity-tf/integrity", "Date": "2014-04-16T08:13:46Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<java.lang.String>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (extension.isEmpty()) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/6701/buggy-version/src.dorkbox.systemTray.gnomeShell.Extension.java", "BodyUseAPI": [], "Fixed commit": "389c2a0ed4b2d6b773da518576755f7ee4aee875", "Url": "https://api.github.com/repos/dorkbox/SystemTray", "Date": "2016-12-25T15:56:03Z"},
{"Line": "=>708", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.codename1.ui.Display.getInstance().getCurrent()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((position) == (com.codename1.ui.Component.BOTTOM)) && ((f.getInvisibleAreaUnderVKB()) > 0)) { com.codename1.ui.plaf.Style s = c.getAllStyles(); s.setMarginUnit(Style.UNIT_TYPE_PIXELS); s.setMarginBottom(f.getInvisibleAreaUnderVKB()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/8242/buggy-version/CodenameOne.src.com.codename1.components.ToastBar.java", "BodyUseAPI": ["com.codename1.ui.plaf.Style.setMarginBottom(f.getInvisibleAreaUnderVKB())", "com.codename1.ui.Form.getInvisibleAreaUnderVKB()"], "Fixed commit": "e72d404b67c945b8c172cfd44e462abe3de9a6a9", "Url": "https://api.github.com/repos/Firethunder/CodenameOne", "Date": "2017-02-08T20:08:26Z"},
{"Line": "=>276", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Calendar.getInstance()", "java.util.Calendar.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((c1.get(java.util.Calendar.DAY_OF_YEAR)) == (c2.get(java.util.Calendar.DAY_OF_YEAR))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/284/buggy-version/TaskScheduler.src.snaptask.parser.DateTime.java", "BodyUseAPI": [], "Fixed commit": "e678403fb6d20f75b677f56e24dd566e45413ecc", "Url": "https://api.github.com/repos/cs2103jan2016-w10-3j/main", "Date": "2016-04-11T13:26:09Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (line.contains(\"- -\")) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/2169/buggy-version/src.main.java.org.quantumbadger.redreader.reddit.prepared.markdown.MarkdownParser.java", "BodyUseAPI": [], "Fixed commit": "b8186568d8d932defb5f34ef8f5501906056e905", "Url": "https://api.github.com/repos/coreywu/RedReader", "Date": "2015-12-31T02:31:34Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.facebook.imagepipeline.producers.ProducerContext.getImageRequest()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((imageRequest.getPostprocessor()) != null) { cacheKey = mCacheKeyFactory.getPostprocessedBitmapCacheKey(imageRequest, callerContext); }else { cacheKey = mCacheKeyFactory.getBitmapCacheKey(imageRequest, callerContext); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/5471/buggy-version/imagepipeline.src.main.java.com.facebook.imagepipeline.producers.BitmapMemoryCacheProducer.java", "BodyUseAPI": ["com.facebook.imagepipeline.cache.CacheKeyFactory.getBitmapCacheKey(com.facebook.imagepipeline.request.ImageRequest,java.lang.Object)", "com.facebook.imagepipeline.cache.CacheKeyFactory.getPostprocessedBitmapCacheKey(com.facebook.imagepipeline.request.ImageRequest,java.lang.Object)"], "Fixed commit": "6297bf588e77c754887e9aa73e7ba19eb7fb8420", "Url": "https://api.github.com/repos/jungletian/fresco", "Date": "2017-12-26T07:18:53Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.entity.EntityDamageEvent.getEntity()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((wolf.getOwner()) instanceof org.bukkit.OfflinePlayer) { org.bukkit.OfflinePlayer owner = ((org.bukkit.OfflinePlayer) (wolf.getOwner())); if (!(owner.isOnline())) { org.bukkit.entity.Player player = owner.getPlayer(); if (player != null) { if (player.hasPermission(\"eternalwolf.invincible_wolves\")) { event.setCancelled(true); } } } }else { event.setCancelled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/5172/buggy-version/src.main.java.net.robinjam.bukkit.eternalwolf.EntityListener.java", "BodyUseAPI": ["org.bukkit.entity.Wolf.getOwner()"], "Fixed commit": "6632b86eeef755d68e35ff7bb0bc46b03ab3b435", "Url": "https://api.github.com/repos/Kealper/eternal-wolf", "Date": "2016-12-06T02:37:32Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (init.getClass().getName().equals(\"org.eclipse.jdt.internal.compiler.ast.LambdaExpression\")) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/8356/buggy-version/src.eclipseAgent.lombok.eclipse.agent.PatchVal.java", "BodyUseAPI": [], "Fixed commit": "c4761096715a8388e683b9b7f86f2c6a3be4f7a0", "Url": "https://api.github.com/repos/rzwitserloot/lombok", "Date": "2014-02-27T01:57:00Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((local.initialization) != null) && (local.initialization.getClass().getName().equals(\"org.eclipse.jdt.internal.compiler.ast.LambdaExpression\"))) { localNode.addError(\"'val' is not allowed with lambda expressions.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/8356/buggy-version/src.core.lombok.eclipse.handlers.HandleVal.java", "BodyUseAPI": [], "Fixed commit": "c4761096715a8388e683b9b7f86f2c6a3be4f7a0", "Url": "https://api.github.com/repos/rzwitserloot/lombok", "Date": "2014-02-27T01:57:00Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.vincentzhang.Sprite.AbstractSprite.draw(android.graphics.Canvas)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((impactedRect != null) && ((getScrRect()) != null)) canvas.drawText(java.lang.String.valueOf(step), getScrRect().centerX(), getScrRect().centerY(), textPaint);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/1274/buggy-version/app.src.main.java.com.example.vincentzhang.Sprite.WeaponSystem.Bomb.java", "BodyUseAPI": [], "Fixed commit": "644730e86a92fd8c95450b91577ba9092148277a", "Url": "https://api.github.com/repos/talentzxf/LearningAndroid", "Date": "2017-05-16T02:24:17Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mScrRect) != null) canvas.drawBitmap(bm, srcRect, mScrRect, null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/1274/buggy-version/app.src.main.java.com.example.vincentzhang.Sprite.AbstractSprite.java", "BodyUseAPI": [], "Fixed commit": "644730e86a92fd8c95450b91577ba9092148277a", "Url": "https://api.github.com/repos/talentzxf/LearningAndroid", "Date": "2017-05-16T02:24:17Z"},
{"Line": "=>341", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, com.nzv.gwt.dsocatalog.model.Constellation>.get(appPanel.getLiConstellations().getValue(appPanel.getLiConstellations().getSelectedIndex()))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (constellation.isSpreadOnBothSidesOfRightAscensionOriginAxis()) { double leftLimit = com.nzv.gwt.dsocatalog.projection.GeometryUtils.normalizeAngleInDegrees(upperWesterMapLimit.getRightAscension(), (-180), 180); double rightLimit = com.nzv.gwt.dsocatalog.projection.GeometryUtils.normalizeAngleInDegrees(lowerEasterMapLimit.getRightAscension(), (-180), 180); hAxisOptions.setMinValue(((int) (rightLimit))); hAxisOptions.setMaxValue(((int) (leftLimit))); hAxisOptions.setDirection((-1)); }else { hAxisOptions.setMinValue(((int) (upperWesterMapLimit.getRightAscension()))); hAxisOptions.setMaxValue(((int) (lowerEasterMapLimit.getRightAscension()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/4301/buggy-version/src.main.java.com.nzv.gwt.dsocatalog.visualization.VisualizationHelper.java", "BodyUseAPI": [], "Fixed commit": "cafc15a7f956ffd1d93e1a6cd042a7b16d6bde24", "Url": "https://api.github.com/repos/nicolas-vallet/DSOCatalog", "Date": "2015-02-03T10:16:28Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.security.core.context.SecurityContextHolder.getContext()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((securityContext == null) || ((securityContext.getAuthentication()) == null)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/6371/buggy-version/src.main.java.com.cloudezz.houston.security.SecurityUtils.java", "BodyUseAPI": [], "Fixed commit": "a9d9d19720e7040d59f56058b08943a8219efd6f", "Url": "https://api.github.com/repos/cloudezz/houston", "Date": "2014-03-18T20:56:21Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((object == null) || (object instanceof edu.chalmers.brawlbuddies.model.world.Impassible)) { this.getMovement().resetSpeed(alignment); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/304/buggy-version/Program.2DPlatformFighter.src.main.java.edu.chalmers.brawlbuddies.model.world.Character.java", "BodyUseAPI": [], "Fixed commit": "24d12882140d3c737db2118f3359dd5910781382", "Url": "https://api.github.com/repos/ITNano/2DPlatformFighter", "Date": "2014-05-09T13:02:10Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newPos == null) { return obj.getCenterPosition(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/304/buggy-version/Program.2DPlatformFighter.src.main.java.edu.chalmers.brawlbuddies.model.world.World.java", "BodyUseAPI": [], "Fixed commit": "24d12882140d3c737db2118f3359dd5910781382", "Url": "https://api.github.com/repos/ITNano/2DPlatformFighter", "Date": "2014-05-09T13:02:10Z"},
{"Line": "=>386", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newPos == null) { return edu.chalmers.brawlbuddies.util.SlickUtil.shapeToPolygon(obj.getShape()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/304/buggy-version/Program.2DPlatformFighter.src.main.java.edu.chalmers.brawlbuddies.model.world.World.java", "BodyUseAPI": [], "Fixed commit": "24d12882140d3c737db2118f3359dd5910781382", "Url": "https://api.github.com/repos/ITNano/2DPlatformFighter", "Date": "2014-05-09T13:02:10Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JOptionPane.showInputDialog(<nulltype>,java.lang.String,java.lang.String,int,<nulltype>,<nulltype>,pNode.getpName())", "activatedNodes[0].getLookup().lookup(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(s.equalsIgnoreCase(pNode.getpName()))) { try { project.org.jcae.netbeans.of.project.ProjectUtils.updatePatchElement(s, pNode.getpName(), pNode.getsName(), pNode.getrName(), project.getProjectDirectory()); pcNode.renameChildren(pNode, s); } catch (javax.xml.transform.TransformerConfigurationException ex) { org.openide.util.Exceptions.printStackTrace(ex); } catch (javax.xml.transform.TransformerException ex) { org.openide.util.Exceptions.printStackTrace(ex); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/5493/buggy-version/jcae.OpenFOAM.src.project.org.jcae.netbeans.of.actions.RenamePatchAction.java", "BodyUseAPI": ["project.org.jcae.netbeans.of.nodes.PatchNode.getrName()", "project.org.jcae.netbeans.of.nodes.PatchNode.getpName()", "project.org.jcae.netbeans.of.project.ProjectUtils.updatePatchElement(java.lang.String,pNode.getpName(),pNode.getsName(),pNode.getrName(),project.getProjectDirectory())", "project.org.jcae.netbeans.of.nodes.PatchNode.getsName()", "project.org.jcae.netbeans.of.nodes.PatchesChildren.renameChildren(project.org.jcae.netbeans.of.nodes.PatchNode,java.lang.String)"], "Fixed commit": "13d1a63b466d93fbd83c6a3a18e849261bead660", "Url": "https://api.github.com/repos/mohitgarg27/jCAE", "Date": "2013-07-16T08:46:11Z"},
{"Line": "=>312", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (course.isSeminarChosen()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/174/buggy-version/src.timetabler.Timetabler.java", "BodyUseAPI": [], "Fixed commit": "759cbf5be4458d0cb00825fe7e7817258e8ec557", "Url": "https://api.github.com/repos/xbacinsk/MZJ_Timetable", "Date": "2012-06-18T11:55:18Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(directory.exists())) { if (!(directory.mkdir())) { com.zhartunmatthew.web.contactbook.services.fileservice.ImageService.log.error(\"Can't create directory for contact image\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/8200/buggy-version/ContactCommon.src.main.java.com.zhartunmatthew.web.contactbook.services.fileservice.ImageService.java", "BodyUseAPI": ["java.io.File.mkdir()"], "Fixed commit": "0954b25074741885fe98c3ee6272171222a59da2", "Url": "https://api.github.com/repos/ZhartunMatthew/ContactBook", "Date": "2017-04-03T22:21:47Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (loc == null) loc = new android.location.Location(android.location.LocationManager.NETWORK_PROVIDER);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/529/buggy-version/framework.src.com.phonegap.GeoListener.java", "BodyUseAPI": [], "Fixed commit": "bf8ee02e21c86d52365b79b6786d7fc5608104ae", "Url": "https://api.github.com/repos/stevengill/cordova-amazon-fireos", "Date": "2010-05-06T22:43:56Z"},
{"Line": "=>384", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((countDownTimer) == null)) countDownTimer.cancel();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/6005/buggy-version/app.src.main.java.nl.rubenvanerk.speurtocht.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "5e758922f976c3f8047f08984a8302f123362793", "Url": "https://api.github.com/repos/Ruvero/project78-speurtocht", "Date": "2017-06-28T11:41:53Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((entity.getStartDate()) == null) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/1363/buggy-version/src.main.java.org.openstreetmap.josm.plugins.ods.update.DefaultImportFilter.java", "BodyUseAPI": [], "Fixed commit": "0045a0e622760da411482118432d642a73dc0659", "Url": "https://api.github.com/repos/gidema/josm-openservices", "Date": "2017-03-27T20:25:09Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((getSubject()) == null) org.opentravel.schemas.node.resources.ResourceNode.LOGGER.debug((\"No subject assigned: \" + (this))); else getSubject().addWhereUsed(this);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/1456/buggy-version/plugins.org.opentravel.schemas.stl2Developer.src.org.opentravel.schemas.node.resources.ResourceNode.java", "BodyUseAPI": [], "Fixed commit": "2f0814115b3cb7cfd694dab68e738e1864cc1e11", "Url": "https://api.github.com/repos/OpenTravel/OTM-DE", "Date": "2017-07-24T18:29:50Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == (stepPosition)) { this.runOnUiThread(new java.lang.Runnable() { @java.lang.Override public void run() { android.widget.ImageView image = ((android.widget.ImageView) (findViewById(R.id.step_view_step_image))); if ((s.getImage()) != null) { image.setImageBitmap(s.getImage()); } } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/7065/buggy-version/app.src.main.java.ru.spbau.mit.foodmanager.StepViewActivity.java", "BodyUseAPI": [], "Fixed commit": "e19424a625ebb6ca31bb89c880674a71ed180634", "Url": "https://api.github.com/repos/shavkunov/FoodManager", "Date": "2017-02-16T12:56:47Z"},
{"Line": "=>1025", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (\"-browserTimeout\".equalsIgnoreCase(arg)) { configuration.setBrowserTimeoutInMs(java.lang.Integer.parseInt(org.openqa.selenium.server.SeleniumServer.getArg(args, (++i)))); }else if (\"-jettyThreads\".equalsIgnoreCase(arg)) { int jettyThreadsCount = java.lang.Integer.parseInt(org.openqa.selenium.server.SeleniumServer.getArg(args, (++i))); configuration.setJettyThreads(jettyThreadsCount); }else if (\"-trustAllSSLCertificates\".equalsIgnoreCase(arg)) { configuration.setTrustAllSSLCertificates(true); }else if (\"-userJsInjection\".equalsIgnoreCase(arg)) { configuration.setUserJSInjection(true); if (!(org.openqa.selenium.server.InjectionHelper.addUserJsInjectionFile(org.openqa.selenium.server.SeleniumServer.getArg(args, (++i))))) { org.openqa.selenium.server.SeleniumServer.usage(null); java.lang.System.exit(1); } }else if (\"-userContentTransformation\".equalsIgnoreCase(arg)) { if (!(org.openqa.selenium.server.InjectionHelper.addUserContentTransformation(org.openqa.selenium.server.SeleniumServer.getArg(args, (++i)), org.openqa.selenium.server.SeleniumServer.getArg(args, (++i))))) { org.openqa.selenium.server.SeleniumServer.usage(null); java.lang.System.exit(1); } }else if (\"-userExtensions\".equalsIgnoreCase(arg)) { configuration.setUserExtensions(new java.io.File(org.openqa.selenium.server.SeleniumServer.getArg(args, (++i)))); if (!(configuration.getUserExtensions().exists())) { java.lang.System.err.println((\"User Extensions file doesn't exist: \" + (configuration.getUserExtensions().getAbsolutePath()))); java.lang.System.exit(1); } if (!(\"user-extensions.js\".equalsIgnoreCase(configuration.getUserExtensions().getName()))) { java.lang.System.err.println((\"User extensions file MUST be called \\\"user-extensions.js\\\": \" + (configuration.getUserExtensions().getAbsolutePath()))); java.lang.System.exit(1); } }else if (\"-selfTest\".equalsIgnoreCase(arg)) { configuration.setSelfTest(true); configuration.setSelfTestDir(new java.io.File(org.openqa.selenium.server.SeleniumServer.getArg(args, (++i)))); configuration.getSelfTestDir().mkdirs(); }else if (\"-htmlSuite\".equalsIgnoreCase(arg)) { try { java.lang.System.setProperty(\"htmlSuite.browserString\", args[(++i)]); java.lang.System.setProperty(\"htmlSuite.startURL\", args[(++i)]); java.lang.System.setProperty(\"htmlSuite.suiteFilePath\", args[(++i)]); java.lang.System.setProperty(\"htmlSuite.resultFilePath\", args[(++i)]); } catch (java.lang.ArrayIndexOutOfBoundsException e) { java.lang.System.err.println(\"Not enough command line arguments for -htmlSuite\"); java.lang.System.err.println(\"-htmlSuite requires you to specify:\"); java.lang.System.err.println(\"* browserString (e.g. \\\"*firefox\\\")\"); java.lang.System.err.println(\"* startURL (e.g. \\\"http://www.google.com\\\")\"); java.lang.System.err.println(\"* suiteFile (e.g. \\\"c:\\\\absolute\\\\path\\\\to\\\\my\\\\HTMLSuite.html\\\")\"); java.lang.System.err.println(\"* resultFile (e.g. \\\"c:\\\\absolute\\\\path\\\\to\\\\my\\\\results.html\\\")\"); java.lang.System.exit(1); } configuration.setHTMLSuite(true); }else if (\"-interactive\".equalsIgnoreCase(arg)) { configuration.setTimeoutInSeconds(java.lang.Integer.MAX_VALUE); configuration.setInteractive(true); }else if (\"-honor-system-proxy\".equals(arg)) { configuration.setHonorSystemProxy(true); }else if (arg.startsWith(\"-D\")) { org.openqa.selenium.server.SeleniumServer.setSystemProperty(arg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/7492/buggy-version/java.server.src.org.openqa.selenium.server.SeleniumServer.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)", "org.openqa.selenium.server.SeleniumServer.setSystemProperty(java.lang.String)", "java.lang.String.startsWith(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)"], "Fixed commit": "545fba4d6c02645e1530d97a3c20bda74631a180", "Url": "https://api.github.com/repos/SeleniumHQ/selenium", "Date": "2016-01-19T21:44:58Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((timeSeries.getName()) != null) returnTimeSeries.setName(new java.lang.String(timeSeries.getName())); else returnTimeSeries.setName(null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/4641/buggy-version/src.main.java.com.github.TKnudsen.timeseries.operations.tools.TimeSeriesMultivariateTools.java", "BodyUseAPI": ["com.github.TKnudsen.timeseries.data.multivariate.ITimeSeriesMultivariate.getName()", "com.github.TKnudsen.timeseries.data.multivariate.ITimeSeriesMultivariate.setName(java.lang.String)"], "Fixed commit": "cd2eef8c3ead9ff9de109ef11044740360f4686c", "Url": "https://api.github.com/repos/TKnudsen/timeSeries", "Date": "2017-03-06T17:24:47Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((timeSeries.getDescription()) != null) returnTimeSeries.setDescription(new java.lang.String(timeSeries.getDescription())); else returnTimeSeries.setDescription(null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/4641/buggy-version/src.main.java.com.github.TKnudsen.timeseries.operations.tools.TimeSeriesMultivariateTools.java", "BodyUseAPI": ["com.github.TKnudsen.timeseries.data.multivariate.ITimeSeriesMultivariate.setDescription(java.lang.String)", "com.github.TKnudsen.timeseries.data.multivariate.ITimeSeriesMultivariate.getDescription()"], "Fixed commit": "cd2eef8c3ead9ff9de109ef11044740360f4686c", "Url": "https://api.github.com/repos/TKnudsen/timeSeries", "Date": "2017-03-06T17:24:47Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.state) == (KHypercubeNodeState.RUNNING)) { java.util.List<java.lang.Double> remove = new java.util.ArrayList<>(); for (java.lang.Double target : this.hypercubeEdges.keySet()) { if (!(hypercubeTargets.contains(target))) { remove.add(target); } } for (java.lang.Double target : remove) { this.hypercubeEdges.remove(target); this.hypercubeEdges.remove((-target)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/7995/buggy-version/self_stabilizing_systems.hypercube.q_hypercube.parallelKHypercube.KQHypercubeNode.java", "BodyUseAPI": [], "Fixed commit": "f47dd5fbe15d21d52389893c110f1c962dc99669", "Url": "https://api.github.com/repos/Krakomat/Work", "Date": "2016-05-12T09:57:39Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bwCall.getLastState().equals(BWCallState.DISCONNECTED)) { endCall(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/922/buggy-version/app.src.main.java.com.bandwidth.androidreference.CallService.java", "BodyUseAPI": [], "Fixed commit": "a1d1cb62296478d07b7dc232f1ebe6aef35032be", "Url": "https://api.github.com/repos/BandwidthExamples/catapult-reference-app-voice-android", "Date": "2015-06-13T00:22:06Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (changed) { getLog().info(\"wait for changing...\"); changed = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/3799/buggy-version/src.main.java.iron9light.coffeescriptMavenPlugin.CoffeeScriptWatchMojo.java", "BodyUseAPI": [], "Fixed commit": "c0db6bfdb6e6d54b9c270be07b084885369e6ff1", "Url": "https://api.github.com/repos/iron9light/coffeescript-maven-plugin", "Date": "2011-08-26T04:19:54Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (uri != null) { mDefaultTrafficStatsTag = uri.getHost().hashCode(); }else { mDefaultTrafficStatsTag = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/7525/buggy-version/src.com.android.volley.Request.java", "BodyUseAPI": [], "Fixed commit": "49cb15ff8b0a065fb25061b1b6ce02868045f9fc", "Url": "https://api.github.com/repos/TobiasBuchholz/android-volley", "Date": "2013-08-30T14:27:24Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jspresso.framework.application.backend.action.module.AddBeanAsSubModuleAction.findDestinationModule(java.lang.Object,java.util.Map<java.lang.String, java.lang.Object>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (parentModule == null) { org.jspresso.framework.application.model.Workspace parentWorkspace = getParentWorkspace(context); java.lang.String parentWorkspaceName = (parentWorkspace != null) ? parentWorkspace.getName() : \"null\"; throw new org.jspresso.framework.application.backend.BackendException(((((\"Destination module not found for workpace '\" + parentWorkspaceName) + \"' and module '\") + (org.jspresso.framework.application.backend.action.module.AddBeanAsSubModuleAction.getParentModuleName(context))) + \"'\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/1324/buggy-version/application.src.main.java.org.jspresso.framework.application.backend.action.module.AddBeanAsSubModuleAction.java", "BodyUseAPI": [], "Fixed commit": "407cd67bbbf7df41a3d55f0cfee5b51041831df1", "Url": "https://api.github.com/repos/jspresso/jspresso-ce", "Date": "2016-05-23T13:55:01Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (future.isCancelled()) { originalSubscriber.unsubscribe(); }else if (future.isSuccess()) { originalSubscriber.onNext(connection); originalSubscriber.onCompleted(); }else { originalSubscriber.onError(future.cause()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/8829/buggy-version/rxnetty.src.main.java.io.reactivex.netty.protocol.http.websocket.WebSocketClient.java", "BodyUseAPI": ["rx.Subscriber<? super io.reactivex.netty.channel.ObservableConnection<T, T>>.onError(future.cause())", "io.netty.channel.ChannelFuture.isSuccess()", "io.netty.channel.ChannelFuture.cause()"], "Fixed commit": "25a9e4afc43a897825321d53c2a9af0f4a4741cb", "Url": "https://api.github.com/repos/ReactiveX/RxNetty", "Date": "2015-12-09T03:34:49Z"},
{"Line": "=>7247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.redhat.ceylon.compiler.typechecker.analyzer.ExpressionVisitor.getDeclaration(Tree.QualifiedTypeExpression,com.redhat.ceylon.model.typechecker.model.Type)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (d instanceof com.redhat.ceylon.model.typechecker.model.Constructor) { d = d.getExtendedType().getDeclaration(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/7886/buggy-version/typechecker.src.com.redhat.ceylon.compiler.typechecker.analyzer.ExpressionVisitor.java", "BodyUseAPI": ["com.redhat.ceylon.model.typechecker.model.TypeDeclaration.getExtendedType()", "d.getExtendedType().getDeclaration()"], "Fixed commit": "cfc057b8087edbc47728aafc04d9dd567cf0a61f", "Url": "https://api.github.com/repos/eclipse/ceylon", "Date": "2016-04-28T13:06:00Z"},
{"Line": "=>6472", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.redhat.ceylon.compiler.typechecker.analyzer.ExpressionVisitor.getDeclaration(Tree.QualifiedMemberExpression,com.redhat.ceylon.model.typechecker.model.Type)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (d instanceof com.redhat.ceylon.model.typechecker.model.Constructor) { d = d.getExtendedType().getDeclaration(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/7886/buggy-version/typechecker.src.com.redhat.ceylon.compiler.typechecker.analyzer.ExpressionVisitor.java", "BodyUseAPI": ["com.redhat.ceylon.model.typechecker.model.TypeDeclaration.getExtendedType()", "d.getExtendedType().getDeclaration()"], "Fixed commit": "cfc057b8087edbc47728aafc04d9dd567cf0a61f", "Url": "https://api.github.com/repos/eclipse/ceylon", "Date": "2016-04-28T13:06:00Z"},
{"Line": "=>2358", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedExecutableType.getReceiverType()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (overriderReceiverType != null) { overridingType = overriderReceiverType; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/2296/buggy-version/framework.src.org.checkerframework.common.basetype.BaseTypeVisitor.java", "BodyUseAPI": [], "Fixed commit": "5c88652e0d2f6854f1b8ef66000b1c3f6814c45c", "Url": "https://api.github.com/repos/jthaine/checker-framework", "Date": "2015-10-26T01:18:28Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (services != null) { for (java.lang.Integer s : services) { if (s != null) mapper.savePolygraphyService(polygraphyId, s); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/5606/buggy-version/src.main.java.it.sevenbits.graphicartsindustry.core.repository.registration.RegistrationRepository.java", "BodyUseAPI": [], "Fixed commit": "ad98f1d44fea6a095987bcf2ec2174700c4c8ea7", "Url": "https://api.github.com/repos/7bits/internship-2015-polygraphy", "Date": "2015-07-31T09:42:58Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (deliveryMethods != null) { for (java.lang.Integer d : deliveryMethods) { if (d != null) mapper.savePolygraphyDeliveryMethod(polygraphyId, d); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/5606/buggy-version/src.main.java.it.sevenbits.graphicartsindustry.core.repository.registration.RegistrationRepository.java", "BodyUseAPI": [], "Fixed commit": "ad98f1d44fea6a095987bcf2ec2174700c4c8ea7", "Url": "https://api.github.com/repos/7bits/internship-2015-polygraphy", "Date": "2015-07-31T09:42:58Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (paymentMethods != null) { for (java.lang.Integer p : paymentMethods) { if (p != null) mapper.savePolygraphyPaymentMethod(polygraphyId, p); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/5606/buggy-version/src.main.java.it.sevenbits.graphicartsindustry.core.repository.registration.RegistrationRepository.java", "BodyUseAPI": [], "Fixed commit": "ad98f1d44fea6a095987bcf2ec2174700c4c8ea7", "Url": "https://api.github.com/repos/7bits/internship-2015-polygraphy", "Date": "2015-07-31T09:42:58Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cell_arr[Five][Three].equals(EMPTY)) { return Three; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/6957/buggy-version/Game_4_in_a_row.app.src.main.java.com.example.administrator.game_4_in_a_row.AiMove.java", "BodyUseAPI": [], "Fixed commit": "ad448644eaa8795bb1f0323356d8b4dc7d538cc0", "Url": "https://api.github.com/repos/idanbe/Four-in-a-row", "Date": "2016-02-18T08:26:34Z"},
{"Line": "=>2242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.lastIndexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((last - first) < 0) { last = first + (key.substring(first).indexOf(' ')); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/864/buggy-version/components.formats-gpl.src.loci.formats.in.NativeND2Reader.java", "BodyUseAPI": ["java.lang.String.indexOf(char)", "java.lang.String.substring(int)"], "Fixed commit": "631bb91b9c7f0dd3c72a4e979b1086c24cebc3c8", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2016-03-23T03:01:09Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (left instanceof com.github.jcomparison.core.primitive.api.MutablePrimitive) { final com.github.jcomparison.core.primitive.api.MutablePrimitive leftMutablePrimitive = ((com.github.jcomparison.core.primitive.api.MutablePrimitive) (left)); finalLeftObject = leftMutablePrimitive.get(); }else { finalLeftObject = left; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/1623/buggy-version/core.src.main.java.com.github.jcomparison.core.pair.impl.DefaultPairFactory.java", "BodyUseAPI": [], "Fixed commit": "e9c7015a533b97a6d43427dad527ab1afc189d37", "Url": "https://api.github.com/repos/mmirwaldt/jcomparison", "Date": "2017-07-22T20:47:04Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (left instanceof com.github.jcomparison.core.primitive.api.MutablePrimitive) { final com.github.jcomparison.core.primitive.api.MutablePrimitive rightMutablePrimitive = ((com.github.jcomparison.core.primitive.api.MutablePrimitive) (right)); finalRightObject = rightMutablePrimitive.get(); }else { finalRightObject = right; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/1623/buggy-version/core.src.main.java.com.github.jcomparison.core.pair.impl.DefaultPairFactory.java", "BodyUseAPI": [], "Fixed commit": "e9c7015a533b97a6d43427dad527ab1afc189d37", "Url": "https://api.github.com/repos/mmirwaldt/jcomparison", "Date": "2017-07-22T20:47:04Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (t instanceof java.lang.ThreadDeath) throw ((java.lang.ThreadDeath) (t)); else ge = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/6044/buggy-version/src.org.jitsi.impl.neomedia.device.ScreenDeviceImpl.java", "BodyUseAPI": [], "Fixed commit": "dd583f9e94a8bc392d9a95b4f0405b2fac13a307", "Url": "https://api.github.com/repos/jitsi/libjitsi", "Date": "2013-11-20T11:28:05Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (screen.getScreenId().equals(\"gameOver\")) { screen.findElementByName(\"untilWave\").getRenderer(de.lessvoid.nifty.elements.render.TextRenderer.class).setText(((\"Du hast es bist zur Welle \" + (getCurrentWave())) + \" geschaft\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/3095/buggy-version/src.mygame.MyStartScreen.java", "BodyUseAPI": ["screen.findElementByName(\"untilWave\").getRenderer(de.lessvoid.nifty.elements.render.TextRenderer.class).setText(java.lang.String)", "de.lessvoid.nifty.screen.Screen.findElementByName(java.lang.String)", "screen.findElementByName(\"untilWave\").getRenderer(java.lang.Class)"], "Fixed commit": "4c117aa60310a45cb0547675a1181a6661cd118c", "Url": "https://api.github.com/repos/Sajohn-CH/Spielprojekt", "Date": "2016-01-25T08:18:19Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mGameEngine) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/5816/buggy-version/core.src.main.java.com.spidey01.sxe.core.ResourceManager.java", "BodyUseAPI": [], "Fixed commit": "c38657b5a9cd3fe3c1349302fe073e0d58b1ed72", "Url": "https://api.github.com/repos/Spidey01/sxe", "Date": "2014-03-07T22:08:40Z"},
{"Line": "=>411", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.blur.analysis.FieldTypeDefinition.isAlternateFieldNamesSharedAcrossInstances()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (alternateFieldNamesSharedAcrossInstances && (_fieldNameToDefMap.containsKey(alternateFieldName))) { org.apache.blur.analysis.FieldTypeDefinition ftd = _fieldNameToDefMap.get(alternateFieldName); if (!(ftd.getName().equals(fieldTypeDefinition.getName()))) { throw new java.lang.IllegalArgumentException(((((\"Alternate fieldName collision of [\" + alternateFieldName) + \"] from field type definition [\") + fieldTypeDefinition) + \"], this field type definition cannot be added.\")); } }else if (_fieldNameToDefMap.containsKey(alternateFieldName)) { throw new java.lang.IllegalArgumentException(((((\"Alternate fieldName collision of [\" + alternateFieldName) + \"] from field type definition [\") + fieldTypeDefinition) + \"], this field type definition cannot be added.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/3306/buggy-version/blur-query.src.main.java.org.apache.blur.analysis.BaseFieldManager.java", "BodyUseAPI": ["java.util.concurrent.ConcurrentMap<java.lang.String, org.apache.blur.analysis.FieldTypeDefinition>.containsKey(java.lang.String)", "java.util.concurrent.ConcurrentMap<java.lang.String, org.apache.blur.analysis.FieldTypeDefinition>.get(java.lang.String)"], "Fixed commit": "96592cc326afa168c8d937d5080194726a81cecd", "Url": "https://api.github.com/repos/apache/incubator-blur", "Date": "2015-04-07T12:39:35Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mIntentInProgress)) { if (connectionResult.hasResolution()) { try { mIntentInProgress = true; connectionResult.startResolutionForResult(this, GPlusSignIn); } catch (android.content.IntentSender e) { mIntentInProgress = false; mGoogleApiClient.connect(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/7922/buggy-version/Carpooler.app.src.main.java.com.carpooler.ui.activities.CarpoolerActivity.java", "BodyUseAPI": [], "Fixed commit": "e861be753d308864f34a8ee8469e1626382ab838", "Url": "https://api.github.com/repos/SWENG500-Team7/Carpooler", "Date": "2015-07-29T23:33:14Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(connectionResult.hasResolution())) { com.google.android.gms.common.GooglePlayServicesUtil.getErrorDialog(connectionResult.getErrorCode(), this, 0).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/7922/buggy-version/Carpooler.app.src.main.java.com.carpooler.ui.activities.CarpoolerActivity.java", "BodyUseAPI": ["com.google.android.gms.common.GooglePlayServicesUtil.getErrorDialog(connectionResult.getErrorCode(), this, 0).show()", "com.google.android.gms.common.ConnectionResult.getErrorCode()", "com.google.android.gms.common.GooglePlayServicesUtil.getErrorDialog(connectionResult.getErrorCode(),com.carpooler.ui.activities.CarpoolerActivity,int)"], "Fixed commit": "e861be753d308864f34a8ee8469e1626382ab838", "Url": "https://api.github.com/repos/SWENG500-Team7/Carpooler", "Date": "2015-07-29T23:33:14Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (null != (webServiceModel.getCancelationDateTime())) { entityTrip.setCancelationDateTime(convertToDatetime(webServiceModel.getCancelationDateTime())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/8919/buggy-version/src.main.java.de.htw.fb4.imi.jumpup.trip.rest.model.TripEntityMapper.java", "BodyUseAPI": ["de.htw.fb4.imi.jumpup.trip.rest.model.TripWebServiceModel.getCancelationDateTime()", "de.htw.fb4.imi.jumpup.trip.entity.Trip.setCancelationDateTime(java.sql.Timestamp)", "de.htw.fb4.imi.jumpup.trip.rest.model.TripEntityMapper.convertToDatetime(webServiceModel.getCancelationDateTime())"], "Fixed commit": "5b4d35a4cce7008f9a4613914eb94dd0aa1d0d7c", "Url": "https://api.github.com/repos/JumpUpMe/jumpup_webapp", "Date": "2016-02-18T09:54:53Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.bubbaland.trivia.server.TriviaServer.getStandings(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (standings != null) { this.trivia.setStandings(r, standings); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/3172/buggy-version/src.net.bubbaland.trivia.server.TriviaServer.java", "BodyUseAPI": ["net.bubbaland.trivia.Trivia.setStandings(int,net.bubbaland.trivia.ScoreEntry[])"], "Fixed commit": "0dc368c0d9ee6116672dc0d3428a4375680691d9", "Url": "https://api.github.com/repos/bubba0077/Trivia", "Date": "2014-02-08T00:35:02Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.emc.storageos.volumecontroller.impl.utils.attrmatchers.FileReplicationMatcher.queryObject(java.lang.Class,pool.getStorageDevice())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((system.deviceIsType(Type.vnxe)) || (system.deviceIsType(Type.unity))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/8428/buggy-version/controllersvc.src.main.java.com.emc.storageos.volumecontroller.impl.utils.attrmatchers.FileReplicationMatcher.java", "BodyUseAPI": [], "Fixed commit": "3686365d8d5f364d4489959d245fb927ec453f17", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2017-03-23T07:08:59Z"},
{"Line": "=>650", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.treasure_data.client.HttpClientException.getResponseCode()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (statusCode == 409) { java.lang.String name = request.getTableName(); throw new com.treasure_data.model.NotFoundException((\"Table not found: \" + name), e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/8931/buggy-version/src.main.java.com.treasure_data.client.DefaultClientAdaptorImpl.java", "BodyUseAPI": [], "Fixed commit": "681474231a6d5f9462b3afbf8b565f928bed1794", "Url": "https://api.github.com/repos/treasure-data/td-client-java", "Date": "2014-07-31T19:24:05Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.xabber.android.data.message.MessageManager.getInstance().getChat(com.xabber.android.data.entity.AccountJid,com.xabber.android.data.entity.UserJid)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (chat != null) com.xabber.android.data.message.MessageManager.getInstance().removeChat(chat);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/7575/buggy-version/xabber.src.main.java.com.xabber.android.ui.dialog.ContactDeleteDialogFragment.java", "BodyUseAPI": ["com.xabber.android.data.message.MessageManager.getInstance().removeChat(com.xabber.android.data.message.AbstractChat)"], "Fixed commit": "1f4bfcc85ed24ecc7a542732fe23424e7444e701", "Url": "https://api.github.com/repos/ageback/xabber-android", "Date": "2017-07-12T13:24:06Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.sourceforge.fenixedu.domain.student.Student.readStudentByNumber(bean.getNumber())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (student != null) { if ((student.getRegistrationsSet().size()) == 1) { registration = student.getRegistrationsSet().iterator().next(); }else { request.setAttribute(\"student\", student); return mapping.findForward(\"chooseRegistration\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/4248/buggy-version/src.main.java.net.sourceforge.fenixedu.presentationTier.Action.pedagogicalCouncil.TutorshipStudentCurriculum.java", "BodyUseAPI": ["student.getRegistrationsSet().size()", "net.sourceforge.fenixedu.domain.student.Student.getRegistrationsSet()", "student.getRegistrationsSet().iterator()", "net.sourceforge.fenixedu.domain.student.Student.getRegistrationsSet()", "javax.servlet.http.HttpServletRequest.setAttribute(java.lang.String,net.sourceforge.fenixedu.domain.student.Student)", "student.getRegistrationsSet().iterator().next()"], "Fixed commit": "f61800b8da260bd090e8ca0b123cec26886f9cb8", "Url": "https://api.github.com/repos/jcarvalho/fenix", "Date": "2014-05-29T14:51:43Z"},
{"Line": "=>377", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (width <= 0) width = 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/5697/buggy-version/projects.MUIS.src.main.java.org.muis.core.model.AbstractMuisDocumentModel.java", "BodyUseAPI": [], "Fixed commit": "7b623b21980c3e36318a51d6e6b9067de3da9546", "Url": "https://api.github.com/repos/Updownquark/MUIS", "Date": "2013-10-03T21:47:48Z"},
{"Line": "=>342", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rectCrop.y) < 0) { rectCrop.y = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/3059/buggy-version/app.src.main.java.com.example.dale.cs198.FaceDetect.java", "BodyUseAPI": [], "Fixed commit": "a31c4f3db1a249804af617b3ef29a614271e24f6", "Url": "https://api.github.com/repos/francisdale/CS198", "Date": "2015-11-20T15:13:44Z"},
{"Line": "=>345", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((rectCrop.x) + (rectCrop.width)) > (mGray.width())) { rectCrop.width = (mGray.width()) - (rectCrop.x); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/3059/buggy-version/app.src.main.java.com.example.dale.cs198.FaceDetect.java", "BodyUseAPI": ["org.opencv.core.Mat.width()"], "Fixed commit": "a31c4f3db1a249804af617b3ef29a614271e24f6", "Url": "https://api.github.com/repos/francisdale/CS198", "Date": "2015-11-20T15:13:44Z"},
{"Line": "=>339", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rectCrop.x) < 0) { rectCrop.x = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/3059/buggy-version/app.src.main.java.com.example.dale.cs198.FaceDetect.java", "BodyUseAPI": [], "Fixed commit": "a31c4f3db1a249804af617b3ef29a614271e24f6", "Url": "https://api.github.com/repos/francisdale/CS198", "Date": "2015-11-20T15:13:44Z"},
{"Line": "=>348", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((rectCrop.y) + (rectCrop.height)) > (mGray.height())) { rectCrop.height = (mGray.height()) - (rectCrop.y); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/3059/buggy-version/app.src.main.java.com.example.dale.cs198.FaceDetect.java", "BodyUseAPI": ["org.opencv.core.Mat.height()"], "Fixed commit": "a31c4f3db1a249804af617b3ef29a614271e24f6", "Url": "https://api.github.com/repos/francisdale/CS198", "Date": "2015-11-20T15:13:44Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((v.getType()) == (it.unibz.krdb.obda.model.Predicate.COL_TYPE.DATETIME)) { result = dataFactory.getOWLLiteral(value, OWL2Datatype.XSD_DATE_TIME); }else if ((v.getType()) == (it.unibz.krdb.obda.model.Predicate.COL_TYPE.DATE)) { result = dataFactory.getOWLLiteral(value, OWL2Datatype.RDF_PLAIN_LITERAL); }else if ((v.getType()) == (it.unibz.krdb.obda.model.Predicate.COL_TYPE.TIME)) { result = dataFactory.getOWLLiteral(value, OWL2Datatype.RDF_PLAIN_LITERAL); }else if ((v.getType()) == (it.unibz.krdb.obda.model.Predicate.COL_TYPE.YEAR)) { result = dataFactory.getOWLLiteral(value, OWL2Datatype.RDF_PLAIN_LITERAL); }else if ((v.getType()) == (it.unibz.krdb.obda.model.Predicate.COL_TYPE.DECIMAL)) { result = dataFactory.getOWLLiteral(value, OWL2Datatype.XSD_DECIMAL); }else if ((v.getType()) == (it.unibz.krdb.obda.model.Predicate.COL_TYPE.DOUBLE)) { result = dataFactory.getOWLLiteral(value, OWL2Datatype.XSD_DOUBLE); }else if ((v.getType()) == (it.unibz.krdb.obda.model.Predicate.COL_TYPE.INTEGER)) { result = dataFactory.getOWLLiteral(value, OWL2Datatype.XSD_INTEGER); }else if ((v.getType()) == (it.unibz.krdb.obda.model.Predicate.COL_TYPE.LITERAL)) { result = dataFactory.getOWLLiteral(value, OWL2Datatype.RDF_PLAIN_LITERAL); }else if ((v.getType()) == (it.unibz.krdb.obda.model.Predicate.COL_TYPE.LITERAL_LANG)) { result = dataFactory.getOWLLiteral(value, v.getLanguage()); }else if ((v.getType()) == (it.unibz.krdb.obda.model.Predicate.COL_TYPE.STRING)) { result = dataFactory.getOWLLiteral(value, OWL2Datatype.XSD_STRING); }else { throw new java.lang.IllegalArgumentException(v.getType().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/6432/buggy-version/obdalib-owlapi3.src.main.java.it.unibz.krdb.obda.owlapi3.OWLAPI3IndividualTranslator.java", "BodyUseAPI": ["it.unibz.krdb.obda.model.ValueConstant.getType()", "it.unibz.krdb.obda.model.ValueConstant.getType()", "it.unibz.krdb.obda.model.ValueConstant.getType()", "it.unibz.krdb.obda.model.ValueConstant.getLanguage()", "it.unibz.krdb.obda.model.ValueConstant.getType()", "it.unibz.krdb.obda.model.ValueConstant.getType()", "org.semanticweb.owlapi.model.OWLDataFactory.getOWLLiteral(java.lang.String,v.getLanguage())", "it.unibz.krdb.obda.model.ValueConstant.getType()", "v.getType().toString()", "it.unibz.krdb.obda.model.ValueConstant.getType()", "it.unibz.krdb.obda.model.ValueConstant.getType()", "it.unibz.krdb.obda.model.ValueConstant.getType()", "it.unibz.krdb.obda.model.ValueConstant.getType()"], "Fixed commit": "ceec5228f994b2e30094d53d60d2774c28a59db9", "Url": "https://api.github.com/repos/ontop/ontop", "Date": "2014-09-17T14:33:40Z"},
{"Line": "=>381", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((javassist.Modifier.isStatic(field.getModifiers())) == false) && ((javassist.Modifier.isFinal(field.getModifiers())) == false)) { fields.add(field); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/8668/buggy-version/src.main.java.de.terrestris.shogun.dao.DatabaseDao.java", "BodyUseAPI": ["java.util.List<java.lang.reflect.Field>.add(java.lang.reflect.Field)"], "Fixed commit": "bb22caf5f17aac8d9abfdc15cfabab0612e37cd0", "Url": "https://api.github.com/repos/marcjansen/shogun", "Date": "2013-08-05T06:56:39Z"},
{"Line": "=>942", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (characterStyle instanceof com.jiaminglu.markdownedittext.MarkdownEditText.LinePrefixImageSpan) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/1822/buggy-version/library.src.main.java.com.jiaminglu.markdownedittext.MarkdownEditText.java", "BodyUseAPI": [], "Fixed commit": "f639c094f6969aee29b4220097bbf902b7697f16", "Url": "https://api.github.com/repos/jiaminglu/MarkdownEditText", "Date": "2015-06-15T01:48:25Z"},
{"Line": "=>944", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (characterStyle instanceof android.text.style.ClickableSpan) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/1822/buggy-version/library.src.main.java.com.jiaminglu.markdownedittext.MarkdownEditText.java", "BodyUseAPI": [], "Fixed commit": "f639c094f6969aee29b4220097bbf902b7697f16", "Url": "https://api.github.com/repos/jiaminglu/MarkdownEditText", "Date": "2015-06-15T01:48:25Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sweble.wom3.Wom3Node.getLocalName()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (name == null) return node.getNodeName();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/1683/buggy-version/hddiff-wom-adapter.src.main.java.de.fau.cs.osr.hddiff.wom.WomDiffNodeAdapter.java", "BodyUseAPI": [], "Fixed commit": "c1702500906935ab74b743274c2c4de8f1fcdb6a", "Url": "https://api.github.com/repos/sweble/hddiff", "Date": "2014-10-15T20:05:17Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dryRun) { return AbstractInstaller.State.INSTALLED; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/8509/buggy-version/plugins.vcs.common.source_gen.jetbrains.mps.vcs.platform.mergedriver.GitGlobalInstaller.java", "BodyUseAPI": [], "Fixed commit": "32f5792c89cac27d166f8e48ab6a21d126e81fd2", "Url": "https://api.github.com/repos/JetBrains/MPS", "Date": "2013-04-17T18:33:11Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["client.target((((ge.edu.freeuni.sdp.xo.rooms.service.RoomsService.LOGIN_SERVICE) + \"?token=\") + token)).request(MediaType.APPLICATION_JSON).get(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((response.getStatus()) != (Status.OK.getStatusCode())) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/928/buggy-version/src.main.java.ge.edu.freeuni.sdp.xo.rooms.service.RoomsService.java", "BodyUseAPI": [], "Fixed commit": "d4d030c2dafef03815e20241f9830e4caa6be51b", "Url": "https://api.github.com/repos/freeuni-sdp/xo-rooms", "Date": "2015-06-28T20:22:14Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (target.isNeedAuthorization(this._request)) { final io.netty.handler.codec.http.HttpVersion version = _request.getProtocolVersion(); _cached.request().doOnCompleted(new rx.functions.Action0() { @java.lang.Override public void call() { org.jocean.http.util.RxNettys.response401Unauthorized(version, \"Basic realm=\\\"iplusmed\\\"\").subscribe(trade.responseObserver()); } }).subscribe(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/5636/buggy-version/src.main.java.org.jocean.xharbor.relay.RelayTrade.java", "BodyUseAPI": [], "Fixed commit": "424078c931323a564929269a763a706eaa691831", "Url": "https://api.github.com/repos/isdom/xharbor", "Date": "2015-06-25T11:38:33Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayDeque<org.kie.remote.services.rest.query.ActionData>.poll()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((actionData.min) || (actionData.max)) { if ((longData.length) > 1) { throw org.kie.remote.services.rest.exception.KieRemoteRestOperationException.notFound(((\"Only 1 '\" + (actionData.paramName)) + \"' parameter is accepted\")); } if (actionData.min) { instLogQueryBuilder.processInstanceIdMin(longData[0]); actionData.min = false; }else if (actionData.max) { instLogQueryBuilder.processInstanceIdMax(longData[0]); actionData.max = false; } }else { instLogQueryBuilder.processInstanceId(longData); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/1915/buggy-version/kie-remote.kie-remote-services.src.main.java.org.kie.remote.services.rest.query.InternalProcInstQueryHelper.java", "BodyUseAPI": ["org.kie.remote.services.rest.exception.KieRemoteRestOperationException.notFound(((\"Only 1 '\" + (actionData.paramName)) + \"' parameter is accepted\"))"], "Fixed commit": "82f967ac7168678c1fb02f1fb39c612da20d5100", "Url": "https://api.github.com/repos/droolsjbpm/droolsjbpm-integration", "Date": "2014-10-20T08:54:04Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(ch.getStanding())) { force.applyForce(ch); }else { ch.getVelocity().setMagnitude(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/5620/buggy-version/src.vooga.fighter.model.LevelMode.java", "BodyUseAPI": ["vooga.fighter.model.objects.CharacterObject.getVelocity()", "ch.getVelocity().setMagnitude(int)", "vooga.fighter.forces.Force.applyForce(vooga.fighter.model.objects.CharacterObject)"], "Fixed commit": "37db0ec8e6ddc5c2351105373e86cf8fc2315efa", "Url": "https://api.github.com/repos/duke-compsci308-spring2013/vooga", "Date": "2013-04-23T22:09:59Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((weightPercentage) == 0) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/2638/buggy-version/src.ui.marker.EdgeMarker.java", "BodyUseAPI": [], "Fixed commit": "f7d3e4c56f4f7645046ca00bb2255b24811c4d20", "Url": "https://api.github.com/repos/croes/capsel-lak", "Date": "2013-04-17T09:47:12Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (countDiffMap.containsKey(eventName)) { return countDiffMap.get(eventName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/7487/buggy-version/src.main.java.org.tedxuba.social.events.SocialEventListener.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)"], "Fixed commit": "c0f5153be044b104b698d6569afc66972f1ad49a", "Url": "https://api.github.com/repos/fernandospr/fiuba-nubeinteractiva-connector", "Date": "2013-10-26T14:43:41Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((request != null) && ((request.getVersion()) != null)) { this.version = request.getVersion(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/1462/buggy-version/modules.transports.core.nhttp.src.main.java.org.apache.synapse.transport.passthru.SourceResponse.java", "BodyUseAPI": [], "Fixed commit": "26d0bbdac57394a1a5ed4fe6790ceadfbfd15c06", "Url": "https://api.github.com/repos/wso2/wso2-synapse", "Date": "2016-08-16T05:24:37Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (java.util.Objects.equals(patient.getPerson().getDead(), true)) { org.apache.commons.lang.Validate.notNull(patient.getPerson().getCauseOfDeath(), \"Cause of death cannot be null when dead flag is set to true\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/659/buggy-version/openmrs-19.src.main.java.org.motechproject.openmrs19.service.impl.OpenMRSPatientServiceImpl.java", "BodyUseAPI": ["patient.getPerson().getCauseOfDeath()", "org.motechproject.openmrs19.domain.OpenMRSPatient.getPerson()", "org.apache.commons.lang.Validate.notNull(patient.getPerson().getCauseOfDeath(),java.lang.String)"], "Fixed commit": "857a26e564792885b35b580b26083375eb77109e", "Url": "https://api.github.com/repos/martokarski/modules", "Date": "2016-02-29T12:37:40Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((table != null) && (!(table.isEmpty()))) { java.lang.String[] row = table.split(\"],\\\\[\"); for (int i = 0; i < (row.length); i++) { java.lang.String[] col = row[i].split(\",(?=(?:[^\\\"]*\\\"[^\\\"]*\\\")*[^\\\"]*$)\", (-1)); for (int j = 0; j < (col.length); j++) { if ((col[j]) != null) { col[j] = col[j].replaceAll(\"^\\\"|\\\"$\", \"\"); } res.append(((col[j]) + \" \\t\")); } res.append(\" \\n\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/8141/buggy-version/kylin.src.main.java.org.apache.zeppelin.kylin.KylinInterpreter.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "6c2b9d8a9eab0517682b0a13f98355959bc2af13", "Url": "https://api.github.com/repos/jinxliu/zeppelin", "Date": "2017-10-27T07:03:26Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((index) + 1) < (_dataBlock.getBlockRecordCount())) { (index)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/3490/buggy-version/entirej-report.src.org.entirej.framework.report.data.controllers.EJReportBlockController.java", "BodyUseAPI": [], "Fixed commit": "9e0b3815db46c9b7b1904c1cee8e8c4027fe04bd", "Url": "https://api.github.com/repos/entirej/reports-core", "Date": "2015-01-07T10:45:00Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bufferSize) == 0) { bbOutput = java.nio.ByteBuffer.allocate(((input.getBuffer().capacity()) + 1028)); }else { bbOutput = java.nio.ByteBuffer.allocate(bufferSize); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/3271/buggy-version/AudioCompression.src.audioCompression.algorithm.HuffmanEncoderStep.java", "BodyUseAPI": [], "Fixed commit": "9d758ec62dca50785ff6a8009976d332b585febd", "Url": "https://api.github.com/repos/ericaddison/Algs_Term_Project", "Date": "2017-05-02T02:23:48Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState == null) { if ((findViewById(R.id.detail_fragment_container)) != null) { isTwoPaneLayout = true; getSupportFragmentManager().beginTransaction().replace(R.id.detail_fragment_container, new es.alvaroweb.popularmovies.moviesgrid.EmptyFragment()).commit(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/1923/buggy-version/app.src.main.java.es.alvaroweb.popularmovies.moviesgrid.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "1f3e05cdec86e73cd12822b80a7ee96a40ec6534", "Url": "https://api.github.com/repos/alvaro893/popular-movies", "Date": "2016-06-30T20:39:07Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toLowerCase()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!(site.startsWith(\"http://\"))) && (!(site.startsWith(\"https://\")))) { site = \"http://\" + site; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/242/buggy-version/app.src.main.java.com.daquePATHn.chaoli.forum.meta.SFXParser3.java", "BodyUseAPI": [], "Fixed commit": "3dedf4cd206e153794add40b08cad9d08ad23a5d", "Url": "https://api.github.com/repos/daquePATHn/chaoli-forum-for-android-2", "Date": "2017-02-05T12:00:19Z"},
{"Line": "=>2703", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mPausingActivity) == r) { mPausingActivity = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/4206/buggy-version/services.java.com.android.server.am.ActivityStack.java", "BodyUseAPI": [], "Fixed commit": "b05a8f604eeb835957bb992fc5de791b453259e6", "Url": "https://api.github.com/repos/PAC-man/android_frameworks_base", "Date": "2014-08-15T15:46:35Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["controller.MainFrame.getSelectedItem()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (mapOfViews.containsKey(deleteMe)) { mapOfViews.get(deleteMe).dispose(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/3622/buggy-version/assignment1.src.controller.MainController.java", "BodyUseAPI": ["mapOfViews.get(deleteMe).dispose()", "java.util.Map<controller.Part, controller.AddPartFrame>.get(controller.Part)"], "Fixed commit": "dc08ffa4c48b28ea3e0ddf086c5d77d0fe5f2231", "Url": "https://api.github.com/repos/johncwimberly/Applied-Software", "Date": "2015-01-24T02:12:25Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasStableIds()) { adjPosition--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/4843/buggy-version/LRecyclerview_library.src.main.java.com.github.jdsjlzx.recyclerview.LRecyclerViewAdapter.java", "BodyUseAPI": [], "Fixed commit": "49a24fceb7d25f53c66c0c056d2c1b3bf7bc4851", "Url": "https://api.github.com/repos/jdsjlzx/LRecyclerView", "Date": "2017-02-11T08:19:36Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mDataAdapter.getDataList().size()) > position) { com.lzx.demo.bean.ItemModel item = mDataAdapter.getDataList().get(position); com.lzx.demo.util.AppToast.showShortText(getApplicationContext(), item.title); mDataAdapter.remove(position); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/4843/buggy-version/app.src.main.java.com.lzx.demo.ui.EndlessLinearLayoutActivity.java", "BodyUseAPI": ["com.lzx.demo.adapter.DataAdapter.getDataList()", "mDataAdapter.getDataList().get(int)", "com.lzx.demo.adapter.DataAdapter.remove(int)"], "Fixed commit": "49a24fceb7d25f53c66c0c056d2c1b3bf7bc4851", "Url": "https://api.github.com/repos/jdsjlzx/LRecyclerView", "Date": "2017-02-11T08:19:36Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((jdev.description) != null) dev.setDescription(jdev.description); else dev.setDescription(\"\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/6708/buggy-version/src.main.java.com.homeki.core.http.rest.DeviceResource.java", "BodyUseAPI": ["com.homeki.core.device.Device.setDescription(jdev.description)"], "Fixed commit": "ce7fd7aeaaab75f25ac8973d46edf40dca47c9ea", "Url": "https://api.github.com/repos/homeki/homekicore", "Date": "2014-02-13T22:05:57Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.codegrasp.ims.eiu.common.Constants.FIELD_NAMES_MAPPING[i][1].equals(\"Z8MATNRA\")) { value = com.codegrasp.ims.eiu.util.Format.removeLeadingZeros(value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/5876/buggy-version/src.main.java.com.codegrasp.ims.eiu.app.App.java", "BodyUseAPI": [], "Fixed commit": "10de0f2b38bc93bda2ea44eea6b1d2596733d599", "Url": "https://api.github.com/repos/n3p3nthess/EIU", "Date": "2017-04-19T11:47:33Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.codegrasp.ims.eiu.common.Constants.FIELD_NAMES_MAPPING[i][1].equals(\"Z7INAMI\")) { value = com.codegrasp.ims.eiu.util.Format.getHospitalCode(value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/5876/buggy-version/src.main.java.com.codegrasp.ims.eiu.app.App.java", "BodyUseAPI": [], "Fixed commit": "10de0f2b38bc93bda2ea44eea6b1d2596733d599", "Url": "https://api.github.com/repos/n3p3nthess/EIU", "Date": "2017-04-19T11:47:33Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((subState.getParentState()) != (this)) subState.getParentState().exit(stateContext);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/6697/buggy-version/squirrel-foundation.src.main.java.org.squirrelframework.foundation.fsm.impl.StateImpl.java", "BodyUseAPI": ["org.squirrelframework.foundation.fsm.ImmutableState<T, S, E, C>.getParentState()", "subState.getParentState().exit(org.squirrelframework.foundation.fsm.StateContext<T, S, E, C>)"], "Fixed commit": "5215c5ff50db508179a494db3a03f5e032812b8a", "Url": "https://api.github.com/repos/dant3/squirrel", "Date": "2013-11-28T03:43:14Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["martinigt.einfachsparen.data.PeriodDbHelper.getCurrentPeriod()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (currentPeriod != null) { java.util.ArrayList<martinigt.einfachsparen.model.Expense> expenses = expenseDbHelper.getAllExpensesForPeriod(currentPeriod.getId(), true); expenseAdapter = new martinigt.einfachsparen.data.TransactionAdapter(this, martinigt.einfachsparen.helper.Helper.castToTransactionList(expenses)); expenseList.setAdapter(expenseAdapter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/4756/buggy-version/app.src.main.java.martinigt.einfachsparen.DashboardActivity.java", "BodyUseAPI": ["martinigt.einfachsparen.data.ExpenseDbHelper.getAllExpensesForPeriod(currentPeriod.getId(),boolean)", "martinigt.einfachsparen.model.Period.getId()"], "Fixed commit": "5913af84b0bf5b90944fc79127daa076573a0c54", "Url": "https://api.github.com/repos/MartinLepsy/EinfachSparen", "Date": "2016-04-26T19:05:51Z"},
{"Line": "=>406", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (file.exists()) { boolean isDeleted = file.delete(); com.bmc.truesight.remedy.App.log.debug(\"{} file deleted = {}\", Constants.REGKEY_FILE_NAME, isDeleted); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/5291/buggy-version/src.main.java.com.bmc.truesight.remedy.App.java", "BodyUseAPI": ["java.io.File.delete()"], "Fixed commit": "1382b13c5de131636030e56881132cd548d92c36", "Url": "https://api.github.com/repos/boundary/remedy-tsi-bulkingestion-script", "Date": "2017-08-17T10:16:55Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((msg.getMsg()) == null) || ((msg.getMsg().length()) == 0)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/7060/buggy-version/jxshen-netty-server.src.main.java.com.github.jxshen.netty.server.udp.LogEventHandler.java", "BodyUseAPI": [], "Fixed commit": "ee0f636bd9db7c5809834916a0e37d4e1acc4e1a", "Url": "https://api.github.com/repos/FlowerL/jxshen-netty", "Date": "2017-05-27T06:46:01Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ContextImpl.mPackageInfo.get(android.content.Context)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (packageInfo != null) { java.lang.Object receiverResource = LoadedApkHuaWei.mReceiverResource.get(packageInfo); if (receiverResource != null) { if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.N)) { if ((mirror.android.rms.resource.ReceiverResourceN.mWhiteList) != null) { java.util.List<java.lang.String> whiteList = ReceiverResourceN.mWhiteList.get(receiverResource); java.util.List<java.lang.String> newWhiteList = new java.util.ArrayList<>(); newWhiteList.add(mContext.getPackageName()); if (whiteList != null) { newWhiteList.addAll(whiteList); } ReceiverResourceN.mWhiteList.set(receiverResource, newWhiteList); } }else { if ((mirror.android.rms.resource.ReceiverResourceM.mWhiteList) != null) { java.lang.String[] whiteList = ReceiverResourceM.mWhiteList.get(receiverResource); java.util.List<java.lang.String> newWhiteList = new java.util.LinkedList<>(); java.util.Collections.addAll(newWhiteList, whiteList); newWhiteList.add(mContext.getPackageName()); ReceiverResourceM.mWhiteList.set(receiverResource, newWhiteList.toArray(new java.lang.String[newWhiteList.size()])); }else if ((mirror.android.rms.resource.ReceiverResourceLP.mResourceConfig) != null) { ReceiverResourceLP.mResourceConfig.set(receiverResource, null); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/3456/buggy-version/VirtualApp.lib.src.main.java.com.lody.virtual.server.am.BroadcastSystem.java", "BodyUseAPI": ["LoadedApkHuaWei.mReceiverResource.get(java.lang.Object)"], "Fixed commit": "8b282c9a21c30ce823a4a2c23c60ff5b41f27f01", "Url": "https://api.github.com/repos/hhkhub/VirtualApp", "Date": "2017-02-09T11:36:23Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (MIYamlFiles.config.getBoolean(\"compatibilityMode\")) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/6538/buggy-version/src.uk.co.tggl.pluckerpluck.multiinv.listener.MIPlayerListener.java", "BodyUseAPI": [], "Fixed commit": "95d6f9843d9160e356c269070f6a84cc30602060", "Url": "https://api.github.com/repos/Pluckerpluck/MultiInv", "Date": "2012-08-05T09:18:30Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (user.isMobileUser()) { user.setVerified(true); }else { user.setIsMobileUser(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/6325/buggy-version/modules.openlmis-web.src.main.java.org.openlmis.web.controller.UserController.java", "BodyUseAPI": ["org.openlmis.core.domain.User.setIsMobileUser(boolean)", "org.openlmis.core.domain.User.setVerified(boolean)"], "Fixed commit": "7fb8bd640bea3b9419817c462cbb1a0528869166", "Url": "https://api.github.com/repos/OpenLMIS/open-lmis", "Date": "2015-08-12T07:51:22Z"},
{"Line": "=>333", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (selectable) { this.firstPositionActor.addListener(new com.badlogic.gdx.scenes.scene2d.utils.ClickListener() { public void clicked(com.badlogic.gdx.scenes.scene2d.InputEvent event, float x, float y) { galleryGrid.onHide(false); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/2825/buggy-version/editor.core.src.main.java.es.eucm.ead.editor.view.builders.mockup.gallery.BaseGallery.java", "BodyUseAPI": [], "Fixed commit": "a584d6f0170dbc7f4afbcbc19b3bbd49001469d5", "Url": "https://api.github.com/repos/manuel-freire/ead", "Date": "2014-05-22T12:47:27Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["railo.runtime.component.ComponentLoader.loadComponent(railo.runtime.PageContextImpl,<nulltype>,railo.runtime.PageSource,java.lang.String,boolean,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (app.contains(pc, railo.runtime.listener.ModernAppListener.ON_ABORT)) call(app, pci, railo.runtime.listener.ModernAppListener.ON_ABORT, new java.lang.Object[]{ targetPage });", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/2261/buggy-version/railo-java.railo-core.src.railo.runtime.listener.ModernAppListener.java", "BodyUseAPI": ["railo.runtime.listener.ModernAppListener.call(railo.runtime.type.cfc.ComponentAccess,railo.runtime.PageContextImpl,railo.runtime.type.Collection.Key,java.lang.Object[])"], "Fixed commit": "cab1f4b8045a31fcc301c999b800a4ea44482783", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2012-05-03T19:04:46Z"},
{"Line": "=>901", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(policy.shouldAccept(user, task, catProc, s))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/7321/buggy-version/src.frontend.org.voltdb.ClientInterface.java", "BodyUseAPI": [], "Fixed commit": "f59328ba741a069c03031d25ba433ac05c2a86c3", "Url": "https://api.github.com/repos/VoltDB/voltdb", "Date": "2011-11-01T15:41:09Z"},
{"Line": "=>905", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(policy.shouldAccept(user, task, sysProc, s))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/7321/buggy-version/src.frontend.org.voltdb.ClientInterface.java", "BodyUseAPI": [], "Fixed commit": "f59328ba741a069c03031d25ba433ac05c2a86c3", "Url": "https://api.github.com/repos/VoltDB/voltdb", "Date": "2011-11-01T15:41:09Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (initial <= 0) { throw new java.lang.IllegalArgumentException((\"Invalid initial size for HashMap: \" + initial)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/59/buggy-version/CommonChickenRuntimeEngine.src.ccre.util.CHashMap.java", "BodyUseAPI": [], "Fixed commit": "733fda318a1b487ebbed9626ceeda3c960a48eb1", "Url": "https://api.github.com/repos/flamingchickens1540/common-chicken-runtime-engine", "Date": "2015-06-17T03:47:53Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(waitList.isEmpty())) { waitList.get(0).enrollIn(this); waitList.remove(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/8453/buggy-version/src.edu.macalester.registrar.Course.java", "BodyUseAPI": ["java.util.List<edu.macalester.registrar.Student>.remove(int)", "waitList.get(0).enrollIn(edu.macalester.registrar.Course)", "java.util.List<edu.macalester.registrar.Student>.get(int)"], "Fixed commit": "111b2c40df2f0368ec1ddae363cdbc21995ccd8f", "Url": "https://api.github.com/repos/caracheng/comp225-registrar", "Date": "2015-03-13T03:21:07Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.json.JsonObject.getString(java.lang.String)", "javax.json.JsonObject.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(issueUrl.equals(latest_comment_url))) { int issueNumber = java.lang.Integer.parseInt(issueUrl.substring(((issueUrl.lastIndexOf(\"/\")) + 1))); java.lang.String repoFullName = notification.getJsonObject(\"repository\").getString(\"full_name\"); com.jcabi.github.Issue issue = this.github.repos().get(new com.jcabi.github.Coordinates.Simple(repoFullName)).issues().get(issueNumber); if (issue.exists()) { int latestCommentId = java.lang.Integer.parseInt(latest_comment_url.substring(((latest_comment_url.lastIndexOf(\"/\")) + 1))); issues.add(new com.amihaiemil.charles.github.GithubIssue(repoFullName, issueNumber, latestCommentId, issue)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/3470/buggy-version/charles-github-ejb.src.main.java.com.amihaiemil.charles.github.GithubAgent.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "java.lang.String.substring(int)", "java.lang.String.lastIndexOf(java.lang.String)", "java.lang.String.substring(int)", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.String.lastIndexOf(java.lang.String)"], "Fixed commit": "c9fc50dfceacd0ce73a29ed8166fe1445ab44649", "Url": "https://api.github.com/repos/opencharles/charles-rest", "Date": "2016-09-20T18:16:29Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (fileToDownload != null) { fileToDownload.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/7711/buggy-version/components.logging.org.wso2.carbon.logging.view.ui.src.main.java.org.wso2.carbon.logging.view.ui.LogViewerClient.java", "BodyUseAPI": ["java.io.InputStream.close()"], "Fixed commit": "5db19047c909a4a3b3d7bad6777f32b0cc00bbd1", "Url": "https://api.github.com/repos/thusithathilina/carbon-commons", "Date": "2015-11-15T04:41:44Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (DOBchanged) { profileEmployee.setBirthday(DOB); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/4017/buggy-version/app.src.main.java.com.jhdev.hr1.ProfileEmployeeEdit.java", "BodyUseAPI": [], "Fixed commit": "b9fe95f488f381c476f128c63ec0014f63a13387", "Url": "https://api.github.com/repos/jhender/HR1", "Date": "2015-01-26T03:59:19Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portal.kernel.search.SearchContext.getStart()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (start == (com.liferay.portal.kernel.dao.orm.QueryUtil.ALL_POS)) { start = 0; }else if (start < 0) { throw new java.lang.IllegalArgumentException((\"Invalid start \" + start)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/5335/buggy-version/modules.apps.portal-search-solr.portal-search-solr.src.main.java.com.liferay.portal.search.solr.internal.SolrIndexSearcher.java", "BodyUseAPI": [], "Fixed commit": "62952dd271ca90e8e1fb3cad8d5b8953613cf543", "Url": "https://api.github.com/repos/Preston-Crary/liferay-portal", "Date": "2017-04-26T19:07:19Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portal.kernel.search.SearchContext.getStart()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (start == (com.liferay.portal.kernel.dao.orm.QueryUtil.ALL_POS)) { start = 0; }else if (start < 0) { throw new java.lang.IllegalArgumentException((\"Invalid start \" + start)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/5335/buggy-version/modules.apps.foundation.portal-search.portal-search-elasticsearch.src.main.java.com.liferay.portal.search.elasticsearch.internal.ElasticsearchIndexSearcher.java", "BodyUseAPI": [], "Fixed commit": "62952dd271ca90e8e1fb3cad8d5b8953613cf543", "Url": "https://api.github.com/repos/Preston-Crary/liferay-portal", "Date": "2017-04-26T19:07:19Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((solution) != null) { return informationCollector.writeOutputSolution(getClass(), solution, treeSolution, operators); }else { return informationCollector.writeOutputNoSolution(getClass(), operators); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/3138/buggy-version/solution-provider.src.main.java.solutionsearchers.SolutionSearcher.java", "BodyUseAPI": [], "Fixed commit": "e4efddb4c2aaae76a002fd8401b1c21a6a6557f7", "Url": "https://api.github.com/repos/veresdavid/deik-tdk-2017", "Date": "2017-08-31T22:07:39Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((result instanceof org.kframework.krun.api.KRunProofResult) && (((org.kframework.krun.api.KRunProofResult) (result)).isProven())) { return print(((org.kframework.krun.api.KRunProofResult) (result)).getResult(), a); }else if (result instanceof java.util.Set) { int i = 1; for (java.lang.Object o : ((java.util.Set<?>) (result))) { sb.append(((\"Result \" + i) + \":\")); sb.append(print(o, a)); i++; } if (i == 1) { sb.append(\"No results\"); } }else { assert false : \"unexpected output type\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/6649/buggy-version/kernel.src.main.java.org.kframework.backend.unparser.PrintKRunResult.java", "BodyUseAPI": ["org.kframework.backend.unparser.PrintKRunResult.print(((org.kframework.krun.api.KRunProofResult) (result)).getResult(),org.kframework.kil.Attributes)", "java.lang.Object.getResult()"], "Fixed commit": "a6d4d2b9b7d3535f22eb34be43c78bf985530e5f", "Url": "https://api.github.com/repos/andreistefanescu/k", "Date": "2015-01-22T21:40:52Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.kaaproject.kaa.server.transports.tcp.transport.netty.KaaTcpEncoder.LOG.isTraceEnabled()) { org.kaaproject.kaa.server.transports.tcp.transport.netty.KaaTcpEncoder.LOG.trace(\"Channel promise before writeAndFlush isSuccess [{}] isDone [{}] isCancelled [{}] for frame {}\", promise.isSuccess(), promise.isDone(), promise.isCancelled(), frame); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/3807/buggy-version/server.transports.tcp.transport.src.main.java.org.kaaproject.kaa.server.transports.tcp.transport.netty.KaaTcpEncoder.java", "BodyUseAPI": ["org.slf4j.Logger.trace(java.lang.String,promise.isSuccess(),promise.isDone(),promise.isCancelled(),org.kaaproject.kaa.common.channels.protocols.kaatcp.messages.MqttFrame)"], "Fixed commit": "00825ee8caeec34d3119fa66aedc89a4e348be98", "Url": "https://api.github.com/repos/kaaproject/kaa", "Date": "2015-02-06T10:51:30Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.kaaproject.kaa.server.transports.tcp.transport.netty.KaaTcpEncoder.LOG.isTraceEnabled()) { org.kaaproject.kaa.server.transports.tcp.transport.netty.KaaTcpEncoder.LOG.trace(\"Returned future [{}] isSuccess [{}] isDone [{}] isCancelled [{}] cause [{}] for frame {}\", future, future.isSuccess(), future.isDone(), future.isCancelled(), future.cause(), frame); if ((future.cause()) != null) { org.kaaproject.kaa.server.transports.tcp.transport.netty.KaaTcpEncoder.LOG.trace(\"Write operation failed due to:\", future.cause()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/3807/buggy-version/server.transports.tcp.transport.src.main.java.org.kaaproject.kaa.server.transports.tcp.transport.netty.KaaTcpEncoder.java", "BodyUseAPI": ["org.slf4j.Logger.trace(java.lang.String,io.netty.channel.ChannelFuture,future.isSuccess(),future.isDone(),future.isCancelled(),future.cause(),org.kaaproject.kaa.common.channels.protocols.kaatcp.messages.MqttFrame)", "org.slf4j.Logger.trace(java.lang.String,future.cause())"], "Fixed commit": "00825ee8caeec34d3119fa66aedc89a4e348be98", "Url": "https://api.github.com/repos/kaaproject/kaa", "Date": "2015-02-06T10:51:30Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(localfile.getAbsoluteFile().exists())) { java.nio.file.Files.createDirectory(java.nio.file.Paths.get(localfile.getParent())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/7566/buggy-version/src.engines.FTPEngine.java", "BodyUseAPI": ["java.nio.file.Paths.get(java.lang.String)", "java.io.File.getParent()", "java.nio.file.Files.createDirectory(java.nio.file.Path)"], "Fixed commit": "2c4d736dc7614e6b278bddb7f608602d44c662b3", "Url": "https://api.github.com/repos/adithyagspann/FACT_V1-BackEnd", "Date": "2017-08-10T03:46:53Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((java.lang.Boolean.valueOf(isCategory)) || (isCategory.equals(\"1\"))) this.isCategory = true; else this.isCategory = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/4970/buggy-version/src.com.imaginariumfestival.android.infos.InfoModel.java", "BodyUseAPI": [], "Fixed commit": "65688e956507e6608e388b9e8111bb2be563548a", "Url": "https://api.github.com/repos/sallesma/IF-Android", "Date": "2013-11-14T17:24:08Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.checkerframework.javacutil.InternalUtils.annotationFromAnnotationTree(com.sun.source.tree.AnnotationTree)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (org.checkerframework.javacutil.AnnotationUtils.areSameByClass(anno, org.checkerframework.common.value.qual.ArrayLenRange.class)) { int from = org.checkerframework.javacutil.AnnotationUtils.getElementValue(anno, \"from\", java.lang.Integer.class, true); int to = org.checkerframework.javacutil.AnnotationUtils.getElementValue(anno, \"to\", java.lang.Integer.class, true); if (from > to) { checker.report(org.checkerframework.framework.source.Result.failure(\"from.greater.than.to\"), node); return null; }else if (from < 0) { checker.report(org.checkerframework.framework.source.Result.warning(\"negative.arraylen\", from), node); return null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/9037/buggy-version/framework.src.org.checkerframework.common.value.ValueVisitor.java", "BodyUseAPI": ["org.checkerframework.javacutil.AnnotationUtils.getElementValue(javax.lang.model.element.AnnotationMirror,java.lang.String,java.lang.Class,boolean)", "org.checkerframework.javacutil.AnnotationUtils.getElementValue(javax.lang.model.element.AnnotationMirror,java.lang.String,java.lang.Class,boolean)"], "Fixed commit": "aab69ac083d7594629b932554ba9efc0f67b05aa", "Url": "https://api.github.com/repos/kelloggm/checker-framework", "Date": "2017-04-11T16:39:47Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (start == end) { if (start <= (length())) { return ComparableCharSequenceWrapper.EMPTY_SEQUENCE; }else { throw new java.lang.ArrayIndexOutOfBoundsException(start); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/331/buggy-version/querqy-core.src.main.java.querqy.CompoundCharSequence.java", "BodyUseAPI": [], "Fixed commit": "0651779287dc613bf668c0d1b23be78f4056b75b", "Url": "https://api.github.com/repos/renekrie/querqy", "Date": "2015-05-18T15:52:19Z"},
{"Line": "=>614", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<java.lang.String>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((next.length()) == 0) next = Tokenizer.Identifier.statesIterator.next();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/7023/buggy-version/SqlCompiler.src.Tokenizer.Identifier.java", "BodyUseAPI": [], "Fixed commit": "7c14dcd72b691eb79443da4f2a337c2d1807a867", "Url": "https://api.github.com/repos/MateusZitelli/SQL-Compiler", "Date": "2015-04-23T21:35:30Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((index < 0) || (index >= (results.size()))) { index = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/4274/buggy-version/Ticks.uk.ac.cam.md636.tick4.LoaderLife.java", "BodyUseAPI": [], "Fixed commit": "6a16ed2da6c8a3ba019b72a10f7f107aed75c523", "Url": "https://api.github.com/repos/ascent95/Uni", "Date": "2014-02-05T23:13:07Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((entry.getValue().toString()) != null) { android.util.Log.d(\"map values\", (((entry.getKey()) + \": \") + (entry.getValue().toString()))); if (entry.getKey().equals(favMovieid)) { checkBox.setChecked(true); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/5369/buggy-version/app.src.main.java.com.example.home.popularmovies.Fragments.DetailActivityFragment.java", "BodyUseAPI": ["android.util.Log.d(java.lang.String,java.lang.String)", "entry.getValue().toString()", "java.lang.String.equals(java.lang.String)", "java.util.Map.Entry<java.lang.String, ?>.getKey()", "java.util.Map.Entry<java.lang.String, ?>.getValue()", "java.util.Map.Entry<java.lang.String, ?>.getKey()"], "Fixed commit": "e74359ca7c0a7d698bd46c61a614c5eaf85e177f", "Url": "https://api.github.com/repos/PrateeshGoswami/PopularMovies", "Date": "2016-03-03T16:51:54Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getActivity().getSharedPreferences(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(mPrefs.contains(favMovieid))) { prefsEditor.putString(favMovieid, favUrl); prefsEditor.apply(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/5369/buggy-version/app.src.main.java.com.example.home.popularmovies.Fragments.DetailActivityFragment.java", "BodyUseAPI": ["SharedPreferences.Editor.putString(java.lang.String,java.lang.String)"], "Fixed commit": "e74359ca7c0a7d698bd46c61a614c5eaf85e177f", "Url": "https://api.github.com/repos/PrateeshGoswami/PopularMovies", "Date": "2016-03-03T16:51:54Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.tinkerpop.blueprints.impls.orient.OrientElement.getGraph()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (graph != null) return ((T) (new com.tinkerpop.blueprints.impls.orient.OrientElementIterable<com.tinkerpop.blueprints.impls.orient.OrientElement>(graph, com.orientechnologies.common.collection.OMultiValue.getMultiValueIterable(fieldValue))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/958/buggy-version/graphdb.src.main.java.com.tinkerpop.blueprints.impls.orient.OrientElement.java", "BodyUseAPI": [], "Fixed commit": "f777d7ae0bf159e0cf71311939d5b1177672bf0b", "Url": "https://api.github.com/repos/matanshukry/orientdb", "Date": "2015-03-05T23:40:38Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (accountApplyPaymentActionForm.getMemberType().equals(\"member\")) { accountApplyPaymentActionForm.setAmount(oldAmmount.toString()); }else if (!(accountApplyPaymentActionForm.getIndividualValues().isEmpty())) { for (java.lang.String amount : accountApplyPaymentActionForm.getIndividualValues().values()) { newAmounts += java.lang.Double.valueOf(amount); } if (!(oldAmmount.equals(newAmounts))) { accountApplyPaymentActionForm.setAmount(newAmounts.toString()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/8638/buggy-version/application.src.main.java.org.mifos.accounts.struts.action.AccountApplyGroupPaymentAction.java", "BodyUseAPI": ["accountApplyPaymentActionForm.getIndividualValues().isEmpty()", "org.mifos.accounts.struts.actionforms.AccountApplyPaymentActionForm.setAmount(java.lang.String)", "org.mifos.accounts.struts.actionforms.AccountApplyPaymentActionForm.getIndividualValues()", "accountApplyPaymentActionForm.getIndividualValues().values()", "org.mifos.accounts.struts.actionforms.AccountApplyPaymentActionForm.setAmount(java.lang.String)", "org.mifos.accounts.struts.actionforms.AccountApplyPaymentActionForm.getIndividualValues()"], "Fixed commit": "4738b6cd8ade406a692485f74d2ac1fc5e773d41", "Url": "https://api.github.com/repos/manojanandilla/head", "Date": "2012-12-15T15:07:09Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mEditText.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((oldStr.length()) > 0) { mEditText.setText(oldStr.substring(0, ((oldStr.length()) - 1))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/6203/buggy-version/eteacher.src.com.phoenix.eteacher.MathRecognitionFragment.java", "BodyUseAPI": ["com.phoenix.eteacher.view.CustomEditText.setText(java.lang.String)", "java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "cae92c6fcfbb8e24f24a651cc8c7d31ff4e06ef8", "Url": "https://api.github.com/repos/anphoenix/eteacher", "Date": "2014-07-21T02:38:32Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (used[image]) { if ((dlg.core.subsumption.FlatSubsumption.DEBUG) >= 1) java.lang.System.out.println(((\"FlatSubsumption.inference: \" + image) + \" already used! backtrack!\")); backtrack = true; }else { m[vertex] = image; used[image] = true; trail.mappingTrail.add(vertex); if (!(checkEdgeConsistency(vertex, m, g1, g2))) { if ((dlg.core.subsumption.FlatSubsumption.DEBUG) >= 1) java.lang.System.out.println(((\"FlatSubsumption.inference: \" + image) + \" edge consistency failed! backtrack!\")); backtrack = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/6912/buggy-version/src.dlg.core.subsumption.FlatSubsumption.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)", "java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "27aeb4bcbe029651ae57a74a0d06dfe10dd2c05a", "Url": "https://api.github.com/repos/santiontanon/RHOG", "Date": "2016-09-17T10:12:26Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(checkEdgeConsistency(i, m, g1, g2))) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/6912/buggy-version/src.dlg.core.subsumption.FlatSubsumption.java", "BodyUseAPI": [], "Fixed commit": "27aeb4bcbe029651ae57a74a0d06dfe10dd2c05a", "Url": "https://api.github.com/repos/santiontanon/RHOG", "Date": "2016-09-17T10:12:26Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.getItem().getItemStack().getAmount()) == 1) { player.getInventory().setItem(i, event.getItem().getItemStack()); event.getItem().remove(); }else { org.bukkit.inventory.ItemStack item = event.getItem().getItemStack().clone(); item.setAmount(1); player.getInventory().setItem(i, item); event.getItem().getItemStack().setAmount(((event.getItem().getItemStack().getAmount()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/1438/buggy-version/src.main.java.com.endercrest.colorcube.events.PlayerPickupListener.java", "BodyUseAPI": ["event.getItem().getItemStack()", "player.getInventory().setItem(int,event.getItem().getItemStack())", "event.getItem().remove()", "org.bukkit.event.player.PlayerPickupItemEvent.getItem()", "event.getItem().getItemStack().getAmount()", "event.getItem().getItemStack()", "org.bukkit.event.player.PlayerPickupItemEvent.getItem()", "event.getItem().getItemStack().clone()", "event.getItem().getItemStack()", "event.getItem().getItemStack()", "org.bukkit.event.player.PlayerPickupItemEvent.getItem()", "event.getItem().getItemStack().setAmount(((event.getItem().getItemStack().getAmount()) - 1))", "org.bukkit.event.player.PlayerPickupItemEvent.getItem()", "org.bukkit.event.player.PlayerPickupItemEvent.getItem()"], "Fixed commit": "8e79e5c8d7e5bd3697c2d2c64ab4f32eae32f79a", "Url": "https://api.github.com/repos/endercrest/ColorCube", "Date": "2015-01-06T06:33:48Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.gfx.android.orma.migration.ManualStepMigration.fetchDbVersion(android.database.sqlite.SQLiteDatabase)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (dbVersion == 0) { trace(\"no version history\"); saveStep(db, version, null); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/2838/buggy-version/migration.src.main.java.com.github.gfx.android.orma.migration.ManualStepMigration.java", "BodyUseAPI": [], "Fixed commit": "94d072f6499b12a9de6bc1c71412192179cff879", "Url": "https://api.github.com/repos/maskarade/Android-Orma", "Date": "2016-02-25T15:22:43Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (windowSize == null) { this.windowSize = new int[]{ 0, 0 }; }else { this.windowSize = windowSize; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/4039/buggy-version/mrGraphics.src.de.northernstars.mr.mrgraphics.gui.MRGraphicsFrame.java", "BodyUseAPI": [], "Fixed commit": "f4dcca25669f19c8d66a5694c4e75fc4600d8ed2", "Url": "https://api.github.com/repos/NorthernStars/MR-Graphics", "Date": "2016-10-12T15:20:18Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (windowPosition == null) { this.windowPosition = new int[]{ 0, 0 }; }else { this.windowPosition = windowPosition; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/4039/buggy-version/mrGraphics.src.de.northernstars.mr.mrgraphics.gui.MRGraphicsFrame.java", "BodyUseAPI": [], "Fixed commit": "f4dcca25669f19c8d66a5694c4e75fc4600d8ed2", "Url": "https://api.github.com/repos/NorthernStars/MR-Graphics", "Date": "2016-10-12T15:20:18Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.System.getenv(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (noExit == null) { noExit = java.lang.System.getProperty(net.sourceforge.pmd.cli.PMDCommandLineInterface.NO_EXIT_AFTER_RUN); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/2759/buggy-version/pmd-core.src.main.java.net.sourceforge.pmd.cli.PMDCommandLineInterface.java", "BodyUseAPI": [], "Fixed commit": "07e641f20a8d833208db803a1336c10a706dc59e", "Url": "https://api.github.com/repos/pmd/pmd", "Date": "2015-03-21T17:16:16Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.Math.abs(((total) - amount))) < 0.01) { return true; }else if (amount < (total)) { final float remainder = (total) - amount; android.support.v7.app.AlertDialog.Builder builder = new android.support.v7.app.AlertDialog.Builder(this); builder.setTitle(\"Items amount does not add up to total\").setMessage(\"Do you want to add an item for the leftover amount?\").setPositiveButton(android.R.string.yes, new android.content.DialogInterface.OnClickListener() { public void onClick(android.content.DialogInterface dialog, int which) { lineItems.add(new com.noname.splitsaver.Models.Item(\"Other\", remainder)); itemRecyclerViewAdapter.notifyDataSetChanged(); } }).setNegativeButton(android.R.string.no, new android.content.DialogInterface.OnClickListener() { public void onClick(android.content.DialogInterface dialog, int which) { } }).show(); return false; }else { android.widget.Toast.makeText(getApplicationContext(), \"Items amount is greater than total!\", Toast.LENGTH_SHORT).show(); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/6782/buggy-version/app.src.main.java.com.noname.splitsaver.SplitActivity.java", "BodyUseAPI": [], "Fixed commit": "47e45b1620139d2242243bd5e2910c248bb3a3c6", "Url": "https://api.github.com/repos/ErnestWong/split_saver_app", "Date": "2017-07-19T04:03:41Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.getEntity().getLastDamageCause().getEntity()) != null) { org.bukkit.entity.Entity e = event.getEntity().getLastDamageCause().getEntity(); if (e instanceof org.bukkit.entity.Player) { org.bukkit.entity.Player player = ((org.bukkit.entity.Player) (e)); int d = -1; for (java.lang.String string : xp.keySet()) { if (player.hasPermission(string)) { d = xp.get(string); break; } } if (d != (-1)) { event.setDroppedExp(((int) ((event.getDroppedExp()) * d))); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/8004/buggy-version/src.main.java.net.h31ix.damage.Damage.java", "BodyUseAPI": ["org.bukkit.event.entity.EntityDeathEvent.getDroppedExp()", "event.getEntity().getLastDamageCause()", "org.bukkit.event.entity.EntityDeathEvent.setDroppedExp(((int) ((event.getDroppedExp()) * d)))", "event.getEntity().getLastDamageCause().getEntity()", "org.bukkit.event.entity.EntityDeathEvent.getEntity()"], "Fixed commit": "8d4d66747fe54826f383d89d34fe47b47b099017", "Url": "https://api.github.com/repos/h31ix/Damage", "Date": "2012-06-23T02:56:18Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((context.getSession().getAttribute(\"shibPerson\")) == null) { fi.csc.emrex.smp.model.Person person = new fi.csc.emrex.smp.model.Person(); person.setFirstName(httpRequest.getHeader(\"shib-cn\")); person.setLastName(httpRequest.getHeader(\"shib-sn\")); person.setGender(httpRequest.getHeader(\"shib-schacGender\")); person.setBirthDate(httpRequest.getHeader(\"shib-schacDateOfBirth\"), \"YYYYMMDD\"); context.getSession().setAttribute(\"shibPerson\", person); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/1751/buggy-version/src.main.java.fi.csc.emrex.smp.ThymeController.java", "BodyUseAPI": ["javax.servlet.http.HttpServletRequest.getSession()", "context.getSession().setAttribute(java.lang.String,fi.csc.emrex.smp.model.Person)"], "Fixed commit": "970674bfaf360b7a2f102719b0168bdf103b5cdd", "Url": "https://api.github.com/repos/EMREXEU/fi-smp", "Date": "2015-10-15T08:37:32Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((listItems.size()) > 0) { int index = listURL.getSelectionModel().getSelectedIndex(); listItems.remove(index); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/4201/buggy-version/src.main.java.fetcher.controller.MainController.java", "BodyUseAPI": ["javafx.collections.ObservableList<fetcher.model.PageEntry>.remove(int)"], "Fixed commit": "3560a7feb7d05e26f4d5cb74ec6d0cbd2cdd9cf7", "Url": "https://api.github.com/repos/arocketman/URL-pad", "Date": "2014-10-31T10:32:49Z"},
{"Line": "=>758", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (trust == (freenet.node.DarknetPeerNode.FRIEND_TRUST.NORMAL)) input.addAttribute(\"checked\", \"true\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/2166/buggy-version/src.freenet.clients.http.ConnectionsToadlet.java", "BodyUseAPI": [], "Fixed commit": "99001a8479016fd0db3f3709b899fb206b3601e7", "Url": "https://api.github.com/repos/zidel/fred-staging", "Date": "2011-03-02T19:31:08Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((itemClickListener) != null) itemClickListener.onItemClick(null, itemView, position, 0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/7655/buggy-version/autoadapter.src.main.java.com.benny.library.autoadapter.AutoPagerAdapter.java", "BodyUseAPI": [], "Fixed commit": "741b79a1990896b97fade13bae9dec2b466c84d4", "Url": "https://api.github.com/repos/BennyWang/AutoAdapter", "Date": "2016-04-07T15:44:09Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((man) != null) man.closeConnection();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/108/buggy-version/src.pt.Pt.java", "BodyUseAPI": [], "Fixed commit": "f49d14962f7e5339db3782a8bcff429233f7e7f5", "Url": "https://api.github.com/repos/revido/pt", "Date": "2016-01-23T23:01:51Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.zkoss.zss.app.ui.UiUtil.isRepositoryReadonly()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!readonly) { uam.setHandler(DefaultUserActionManagerCtrl.Category.AUXACTION.getName(), AuxAction.SAVE_BOOK.getAction(), new org.zkoss.zss.ui.UserActionHandler() { @java.lang.Override public boolean process(org.zkoss.zss.ui.UserActionContext ctx) { doSaveBook(false); return true; } @java.lang.Override public boolean isEnabled(org.zkoss.zss.api.model.Book book, org.zkoss.zss.api.model.Sheet sheet) { return book != null; } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/6853/buggy-version/zssapp.src.org.zkoss.zss.app.ui.AppCtrl.java", "BodyUseAPI": [], "Fixed commit": "ec9132b804b26df140d2669dc127d0e4732f003a", "Url": "https://api.github.com/repos/zkoss/zkspreadsheet", "Date": "2013-08-19T11:31:48Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.owncloud.android.ui.preview.PreviewTextFragment.getArguments()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (args.containsKey(FileDisplayActivity.EXTRA_SEARCH_QUERY)) { mSearchQuery = args.getString(FileDisplayActivity.EXTRA_SEARCH_QUERY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/6880/buggy-version/src.main.java.com.owncloud.android.ui.preview.PreviewTextFragment.java", "BodyUseAPI": ["android.os.Bundle.getString(FileDisplayActivity.EXTRA_SEARCH_QUERY)"], "Fixed commit": "7eb56528d23a4c311bb6d860025456c00f8f49ad", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2017-01-24T01:01:49Z"},
{"Line": "=>430", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!firstRun) t0 = (t1) - (interval);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/2338/buggy-version/src.com.wanikani.androidnotifier.graph.HistogramPlot.java", "BodyUseAPI": [], "Fixed commit": "ed608fc1b8fa3b2eb4d3b94f35f6509884a5ebe8", "Url": "https://api.github.com/repos/WaniKani/Android-Notification", "Date": "2014-07-25T17:05:55Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((axisAngle[X]) == 0) && ((axisAngle[Y]) == 0)) && ((axisAngle[Z]) == 0)) { throw new java.lang.IllegalArgumentException((((((\"Invalid axis:\" + (axisAngle[X])) + \", \") + (axisAngle[Y])) + \", \") + (axisAngle[Z]))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/6613/buggy-version/src.main.java.com.nucleus.vecmath.AxisAngle.java", "BodyUseAPI": [], "Fixed commit": "2e7903245194ff4818bf19a43ec3f4ad425146e4", "Url": "https://api.github.com/repos/rsahlin/vecmath", "Date": "2017-09-19T19:33:36Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["haven.minimap.Gob.getattr(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (icon != null) gob.delattr(haven.minimap.CustomGobIcon.class);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/2672/buggy-version/src.haven.minimap.CustomIconCache.java", "BodyUseAPI": [], "Fixed commit": "5a7be5b214768cdbad586e50430682b481e81f5e", "Url": "https://api.github.com/repos/k-t/hafen-client", "Date": "2015-09-14T02:24:26Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (writer != null) { writer.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/7815/buggy-version/client-lib.src.main.java.com.ibm.ws.repository.connections.SingleFileRepositoryConnection.java", "BodyUseAPI": ["java.io.OutputStreamWriter.close()"], "Fixed commit": "53813d8bbc6fa9a4e26fc0039e656a4354119b86", "Url": "https://api.github.com/repos/Azquelt/tool.lars", "Date": "2017-12-04T16:13:06Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((permissionService.timesheetAdminExists()) && (permissionService.isTimesheetAdmin(user))) { isAdmin = true; }else if ((!(permissionService.timesheetAdminExists())) && (permissionService.isJiraAdministrator(user))) { isAdmin = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/2376/buggy-version/src.main.java.org.catrobat.jira.timesheet.rest.UserRest.java", "BodyUseAPI": ["org.catrobat.jira.timesheet.services.PermissionService.timesheetAdminExists()", "org.catrobat.jira.timesheet.services.PermissionService.isJiraAdministrator(com.atlassian.jira.user.ApplicationUser)"], "Fixed commit": "2bc01bb26af436aeaae17541e54b9ab3f8e55f75", "Url": "https://api.github.com/repos/Catrobat/Timesheet", "Date": "2017-02-06T20:23:13Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.sunteam.library.net.HttpRequest.get(LibraryConstant.URL_INTERFACE_USER, requestParams, new com.sunteam.library.parse.UserGetPasswordParseResponse())) == null) { return com.sunteam.library.utils.LibraryConstant.RESULT_FAIL; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/3038/buggy-version/Library.src.com.sunteam.library.net.HttpDao.java", "BodyUseAPI": [], "Fixed commit": "ee41bfe8fad149d4cbb193767524395447298db6", "Url": "https://api.github.com/repos/zhanghouding/BrailleLibrary", "Date": "2017-03-14T03:14:01Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(sw.isSuspended())) stop();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/2149/buggy-version/src.main.java.com.tinkerpop.gremlin.elastic.elasticservice.TimingAccessor.java", "BodyUseAPI": [], "Fixed commit": "052eb367ff6e3ea622155c55f243dbf129caa24a", "Url": "https://api.github.com/repos/rmagen/elastic-gremlin", "Date": "2015-03-27T10:32:59Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.optString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(android.text.TextUtils.isEmpty(queryParamString))) { queryParams = new org.json.JSONObject(queryParamString); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/4971/buggy-version/libs.SalesforceHybrid.src.com.salesforce.androidsdk.phonegap.plugin.SalesforceNetworkPlugin.java", "BodyUseAPI": [], "Fixed commit": "0df018526b781ef913e5698d5700e80988b6906f", "Url": "https://api.github.com/repos/helenren/SalesforceMobileSDK-Android", "Date": "2016-09-17T02:03:12Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (string) { af.quote = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/5729/buggy-version/src.main.java.de.crazything.sql.typernate.TypeAnalyzer.java", "BodyUseAPI": [], "Fixed commit": "c4ceaf0d483a3bcbd27ad006a7b9cdf0991c3dd7", "Url": "https://api.github.com/repos/RogerJFX/typernate", "Date": "2014-08-19T12:38:23Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.crazything.sql.typernate.parse.PgParserHelper.lookBehind(char[],int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((behind[1]) == (de.crazything.sql.typernate.parse.PgParserHelper.ESCAPE)) && ((behind[2]) != (de.crazything.sql.typernate.parse.PgParserHelper.WRAPPER))) { result[(cursor++)] = line[(i++)]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/5729/buggy-version/src.main.java.de.crazything.sql.typernate.parse.PgParserHelper.java", "BodyUseAPI": [], "Fixed commit": "c4ceaf0d483a3bcbd27ad006a7b9cdf0991c3dd7", "Url": "https://api.github.com/repos/RogerJFX/typernate", "Date": "2014-08-19T12:38:23Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.drill.exec.physical.base.GroupScan.getScanStats(org.apache.drill.exec.planner.physical.PlannerSettings)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((stats.getCpuCost()) > 0) { cpuCost *= stats.getCpuCost(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/7267/buggy-version/exec.java-exec.src.main.java.org.apache.drill.exec.planner.physical.ScanPrel.java", "BodyUseAPI": ["org.apache.drill.exec.physical.base.ScanStats.getCpuCost()"], "Fixed commit": "ab93beafd97349dbc7f2296c059a6b63b3fc3776", "Url": "https://api.github.com/repos/vkorukanti/drill", "Date": "2015-10-01T22:15:12Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ver.getNotebooks().length) == 0) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/3187/buggy-version/com.mulesoft.portal.sync.buildSrc.src.main.java.com.mulesoft.portal.apis.sync.SynchronizationManager.java", "BodyUseAPI": [], "Fixed commit": "985ff24772cea67c5591182b5e5622d47abe8af7", "Url": "https://api.github.com/repos/raml-apis/synchronization", "Date": "2015-04-01T22:48:28Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (com.mjr.extraplanets.Config.RADIATION) this.potashGen = new micdoodle8.mods.galacticraft.core.world.gen.WorldGenMinableMeta(com.mjr.extraplanets.blocks.ExtraPlanets_Blocks.ORE_POTASH, 5, 0, true, com.mjr.extraplanets.blocks.ExtraPlanets_Blocks.MERCURY_BLOCKS, 2);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/913/buggy-version/src.main.java.com.mjr.extraplanets.planets.Mercury.worldgen.BiomeDecoratorMercury.java", "BodyUseAPI": [], "Fixed commit": "cd80991c558b4fc38b402cbcec7d81ba62f39c30", "Url": "https://api.github.com/repos/MJRLegends/ExtraPlanets", "Date": "2017-07-07T15:22:31Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.mjr.extraplanets.Config.RADIATION) this.generateOre(10, this.potashGen, 0, 20);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/913/buggy-version/src.main.java.com.mjr.extraplanets.planets.Mercury.worldgen.BiomeDecoratorMercury.java", "BodyUseAPI": [], "Fixed commit": "cd80991c558b4fc38b402cbcec7d81ba62f39c30", "Url": "https://api.github.com/repos/MJRLegends/ExtraPlanets", "Date": "2017-07-07T15:22:31Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ai) != null) { ai.stop(); ai = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/4658/buggy-version/src.tk.wurst_client.features.mods.AutoBuildMod.java", "BodyUseAPI": [], "Fixed commit": "4bba69b276f411df1eac985cec1f8b10a92ab300", "Url": "https://api.github.com/repos/Wurst-Imperium/Wurst-MC-1.11", "Date": "2016-12-28T08:25:20Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (node.getMove().equals(Move.NO_MOVE)) { node.baseValue = 0; node.smartValue = 0; }else { current.move(node.getMove(), node.getSide()); int baseValueGained = getValueDifference(previous, current); node.baseValue = baseValueGained; node.smartValue = baseValueGained; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/5883/buggy-version/AI.OthelloAI.src.net.thenumenorean.othelloai.AIJob.java", "BodyUseAPI": ["net.thenumenorean.othelloai.board.OthelloBoard.move(node.getMove(),node.getSide())", "net.thenumenorean.othelloai.DecisionTree.DecisionTreeNode.getSide()", "net.thenumenorean.othelloai.DecisionTree.DecisionTreeNode.getMove()"], "Fixed commit": "fe1bbe48358d62be6135b90930c4e17b4e440781", "Url": "https://api.github.com/repos/TheNumenorean/othello", "Date": "2016-03-08T21:23:49Z"},
{"Line": "=>345", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((buffer != null) && ((buffer.length()) > 0)) textList.add(buffer);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/9256/buggy-version/src.main.java.org.jboss.aesh.parser.Parser.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "b1e7fe6068842df0e15e58aa3f2720f04c19bfca", "Url": "https://api.github.com/repos/gastaldi/aesh", "Date": "2013-08-27T17:08:31Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasZeroElements()) { placeRandomNumber(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/9211/buggy-version/src.com.hackbulgaria.corejava.Game.java", "BodyUseAPI": [], "Fixed commit": "8b9ba59fb9c7c7ff25a79a07461e5276eaae3f57", "Url": "https://api.github.com/repos/mirena92/2048", "Date": "2014-07-10T12:27:39Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasZeroElements()) { placeRandomNumber(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/9211/buggy-version/src.com.hackbulgaria.corejava.Game.java", "BodyUseAPI": [], "Fixed commit": "8b9ba59fb9c7c7ff25a79a07461e5276eaae3f57", "Url": "https://api.github.com/repos/mirena92/2048", "Date": "2014-07-10T12:27:39Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasZeroElements()) { placeRandomNumber(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/9211/buggy-version/src.com.hackbulgaria.corejava.Game.java", "BodyUseAPI": [], "Fixed commit": "8b9ba59fb9c7c7ff25a79a07461e5276eaae3f57", "Url": "https://api.github.com/repos/mirena92/2048", "Date": "2014-07-10T12:27:39Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasZeroElements()) { placeRandomNumber(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/9211/buggy-version/src.com.hackbulgaria.corejava.Game.java", "BodyUseAPI": [], "Fixed commit": "8b9ba59fb9c7c7ff25a79a07461e5276eaae3f57", "Url": "https://api.github.com/repos/mirena92/2048", "Date": "2014-07-10T12:27:39Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["request.getSession().getAttribute(java.lang.String)", "request.getSession().getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((per1 == null) || (per2 == null)) { response.sendRedirect(\"seleccionarpersonajes\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/9184/buggy-version/src.servlets.Combate.java", "BodyUseAPI": [], "Fixed commit": "7bb28636a364901ecabd2fc4d1657a5eb85d37b4", "Url": "https://api.github.com/repos/marcegeek/TPJavaWeb", "Date": "2016-11-19T23:34:53Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isInitializing())) { throw new java.lang.IllegalArgumentException((\"illegal argument use IConfigService.create* methods to create Config (sub)Objects for: \" + (newValue.getClass()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/6060/buggy-version/org.jeconfig.client.src.main.java.org.jeconfig.client.proxy.ConfigProxyMethodHandler.java", "BodyUseAPI": [], "Fixed commit": "9893f18bd0b795baf90c7ecda702fc62eeb1d145", "Url": "https://api.github.com/repos/jeconfig/jeconfig", "Date": "2011-03-15T16:27:27Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.MenuItem.getItemId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (id == (R.id.action_info)) { startActivity(new android.content.Intent(this, samdev.de.mvuprobelokalapp.AppInfo.class)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/7310/buggy-version/app.src.main.java.samdev.de.mvuprobelokalapp.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "286bbef4ed4106c06a7aa11f026b8964a5440274", "Url": "https://api.github.com/repos/Anastron/MVUProbelokalApp2", "Date": "2015-09-13T17:55:24Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Game.played) Init.reset();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/8558/buggy-version/src.Interface.java", "BodyUseAPI": [], "Fixed commit": "e2ba5247059c6f08ad243db9d80334f358091f57", "Url": "https://api.github.com/repos/propra12-orga/gruppe22", "Date": "2012-07-05T15:39:48Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getTabHost().getCurrentTab()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (tab == 1) inflater.inflate(R.menu.begin_monitoring, menu); else if (tab == 2) inflater.inflate(R.menu.readings_chart, menu); else if (tab == 5) inflater.inflate(R.menu.available_foods, menu);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/1515/buggy-version/T1DMAppV1.0.src.com.t1dm.t1dmanagementapp.HomeScreen.java", "BodyUseAPI": [], "Fixed commit": "095cb4fc9f105c0c626d699eb81737ff145b6704", "Url": "https://api.github.com/repos/dheryta/T1DManagementApp", "Date": "2013-12-05T10:13:50Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (singleLetterCode == 'X') { chemComp.setOne_letter_code(\"?\"); }else { chemComp.setOne_letter_code((\"\" + singleLetterCode)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/1981/buggy-version/biojava-structure.src.main.java.org.biojava.nbio.structure.io.mmtf.MmtfStructureReader.java", "BodyUseAPI": ["org.biojava.nbio.structure.io.mmcif.model.ChemComp.setOne_letter_code(java.lang.String)"], "Fixed commit": "9c750cfbb67116c43d62554d296b1d6a352c8eac", "Url": "https://api.github.com/repos/abradle/biojava", "Date": "2016-04-13T17:31:24Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (forcePlayerUpdate) { e.clearPath(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/6447/buggy-version/src.game.EntityChunks.java", "BodyUseAPI": [], "Fixed commit": "6a9ae54bdc46ad00f99f16bd6caa89dfa9108d51", "Url": "https://api.github.com/repos/thekakester/BrandonShavedYesterday", "Date": "2017-02-05T21:14:36Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.pratilipi.data.DataAccessor.getUserAuthorList(java.util.List<java.lang.Long>,author.getId())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (userAuthorList != null) { for (com.pratilipi.data.type.UserAuthor userAuthor : userAuthorList) if ((userAuthor != null) && (userAuthor.isFollowing())) userDataList.get(userIdList.indexOf(userAuthor.getUserId())).setFollowing(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/663/buggy-version/src.main.java.com.pratilipi.data.util.UserAuthorDataUtil.java", "BodyUseAPI": [], "Fixed commit": "1bb152c7dc7db805bca60e096b7be84ff2ee3e8f", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2016-08-09T13:04:37Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((query.getAlteration()) == null) { query.setAlteration(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/7931/buggy-version/core.src.main.java.org.mskcc.cbio.oncokb.util.IndicatorUtils.java", "BodyUseAPI": ["org.mskcc.cbio.oncokb.util.Query.setAlteration(java.lang.String)"], "Fixed commit": "a3b8353d8447acc9469277fc43cf51c776b93824", "Url": "https://api.github.com/repos/zhx828/oncokb", "Date": "2017-02-25T21:28:06Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((query.getAlteration().isEmpty()) && (query.getConsequence().equals(\"splice_region_variant\"))) { query.setAlteration(\"splice mutation\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/7931/buggy-version/core.src.main.java.org.mskcc.cbio.oncokb.util.IndicatorUtils.java", "BodyUseAPI": ["org.mskcc.cbio.oncokb.util.Query.setAlteration(java.lang.String)"], "Fixed commit": "a3b8353d8447acc9469277fc43cf51c776b93824", "Url": "https://api.github.com/repos/zhx828/oncokb", "Date": "2017-02-25T21:28:06Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((dow.length()) == 1) { try { dayOfWeek = java.lang.Integer.valueOf(dow); } catch (java.lang.NumberFormatException nfe) { android.util.Log.e(\"error\", ((\"Can't process days_of_week: [\" + (jsonObject.getString(\"days_of_week\"))) + \"]\")); } }else { try { dayOfWeek = java.lang.Integer.valueOf(dow.indexOf(0)); } catch (java.lang.NumberFormatException nfe) { android.util.Log.e(\"error\", ((\"Can't process days_of_week: [\" + (jsonObject.getString(\"days_of_week\"))) + \"]\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/1282/buggy-version/Yummier.src.com.sanfrenchiscan.yummier.models.Dish.java", "BodyUseAPI": ["java.lang.Integer.valueOf(int)", "java.lang.Integer.valueOf(java.lang.String)", "java.lang.String.indexOf(int)"], "Fixed commit": "1baa69b27dc1d595f5e59fd9adb5530b4911b18f", "Url": "https://api.github.com/repos/cdric/Yummier", "Date": "2017-11-13T00:28:00Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (adresse == (entrepot.getId())) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/4093/buggy-version/titan-shippment.src.model.planning.InterfacePlanning.java", "BodyUseAPI": [], "Fixed commit": "d94fd74d9a27f68ae29d6b5f22391124e8245e16", "Url": "https://api.github.com/repos/LeonardA-L/hm-devOO", "Date": "2014-11-11T12:03:16Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["interfaceView.getVuePanel().getVue_plan().getWhoIsClicked(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (view_noeud != null) { if (interfacePlanning.isNodeADelivery(view_noeud.getNoeud().getId())) { model.planning.Livraison livraison = interfacePlanning.getLivraisonByAdr(view_noeud.getNoeud().getId()); if (livraison != null) { infos = livraison.toString(); }else { infos = \"Entrepot\"; } }else { infos = view_noeud.getNoeud().toString(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/4093/buggy-version/titan-shippment.src.controller.Controller.java", "BodyUseAPI": ["model.planning.InterfacePlanning.isNodeADelivery(view_noeud.getNoeud().getId())", "view.agglomeration.VueNoeud.getNoeud()", "view_noeud.getNoeud().getId()", "view_noeud.getNoeud().toString()", "view.agglomeration.VueNoeud.getNoeud()", "view.agglomeration.VueNoeud.getNoeud()", "view_noeud.getNoeud().getId()", "model.planning.InterfacePlanning.getLivraisonByAdr(view_noeud.getNoeud().getId())"], "Fixed commit": "d94fd74d9a27f68ae29d6b5f22391124e8245e16", "Url": "https://api.github.com/repos/LeonardA-L/hm-devOO", "Date": "2014-11-11T12:03:16Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mPasswordView.getText().toString()", "mEmailView.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (recorder.registerUser(mEmail, mPassword)) { backToWelcome(); }else { mEmailView.setError(getString(R.string.error_existed_email)); mEmailView.requestFocus(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/8872/buggy-version/app.src.main.java.centralcpccommittee.shopwithfriends.RegisterActivity.java", "BodyUseAPI": [], "Fixed commit": "d21506cdba04db53880a3aeaaae85189be8cbba8", "Url": "https://api.github.com/repos/axeisghost/cpc-documentary", "Date": "2015-02-02T20:02:05Z"},
{"Line": "=>583", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"_\".equals(routing)) { return com.erudika.para.utils.Config.APP_NAME_NS; }else { return id; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/7633/buggy-version/para.src.main.java.com.erudika.para.search.ElasticSearch.java", "BodyUseAPI": [], "Fixed commit": "370cfadae088d799d72bf5ff645a949f543f3e1b", "Url": "https://api.github.com/repos/Erudika/para", "Date": "2014-11-21T13:54:10Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((com.sid.demoapp.dummy.MenuContent.ITEMS) == null) || (takeContentChanged())) { forceLoad(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/3839/buggy-version/app.src.main.java.com.sid.demoapp.loaders.CustomLoader.java", "BodyUseAPI": [], "Fixed commit": "e7ccad740f97a3895292348c508ea98559684f13", "Url": "https://api.github.com/repos/rimasg/DemoApp", "Date": "2016-10-20T10:05:43Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((((startDate != null) && (endDate != null)) && (startTime != null)) && (endTime != null)) && (((endDate.compareTo(startDate)) == (ticker.logic.CRUManager.SMALLER)) || ((endTime.compareTo(startTime)) == (ticker.logic.CRUManager.SMALLER)))) { return ticker.logic.CRUManager.FEEDBACK_ERROR_INVALID_DATE_TIME; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/7421/buggy-version/src.ticker.logic.CRUManager.java", "BodyUseAPI": [], "Fixed commit": "68376f666a300e1c61221179fe559f1cafe3acae", "Url": "https://api.github.com/repos/cs2103aug2014-w15-3J/Ticker", "Date": "2014-11-10T05:33:01Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((((startDate != null) && (endDate != null)) && (startTime == null)) && (endTime == null)) && ((endDate.compareTo(startDate)) == (ticker.logic.CRUManager.SMALLER))) { return ticker.logic.CRUManager.FEEDBACK_ERROR_INVALID_ENDING_DATE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/7421/buggy-version/src.ticker.logic.CRUManager.java", "BodyUseAPI": [], "Fixed commit": "68376f666a300e1c61221179fe559f1cafe3acae", "Url": "https://api.github.com/repos/cs2103aug2014-w15-3J/Ticker", "Date": "2014-11-10T05:33:01Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (BuildConfig.DEBUG) { setContentView(R.layout.activity_main); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/6641/buggy-version/app.src.main.java.com.kidsdynamic.swing.androidswingapp.ActivityMain.java", "BodyUseAPI": [], "Fixed commit": "000f6c2d38d8f3f32e37f0b603bd9302c360e471", "Url": "https://api.github.com/repos/kidsdynamic/AndroidSwingApp", "Date": "2017-09-08T00:45:29Z"},
{"Line": "=>250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.talend.core.GlobalServiceRegister.getDefault().isServiceRegistered(org.talend.core.services.IGITProviderService.class)) { gitProviderService = ((org.talend.core.services.IGITProviderService) (org.talend.core.GlobalServiceRegister.getDefault().getService(org.talend.core.services.IGITProviderService.class))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/5433/buggy-version/main.plugins.org.talend.mdm.repository.src.main.java.org.talend.mdm.repository.ui.navigator.MDMRepositoryLabelProvider.java", "BodyUseAPI": ["org.talend.core.GlobalServiceRegister.getDefault().getService(java.lang.Class)"], "Fixed commit": "2d499137cc16c45d8d5874781279441cc67f0d6b", "Url": "https://api.github.com/repos/Talend/tmdm-studio-se", "Date": "2016-07-26T09:55:10Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.talend.core.GlobalServiceRegister.getDefault().isServiceRegistered(org.talend.mdm.repository.core.service.IMDMSVNProviderService.class)) { svnProviderService = ((org.talend.mdm.repository.core.service.IMDMSVNProviderService) (org.talend.core.GlobalServiceRegister.getDefault().getService(org.talend.mdm.repository.core.service.IMDMSVNProviderService.class))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/5433/buggy-version/main.plugins.org.talend.mdm.repository.src.main.java.org.talend.mdm.repository.ui.navigator.MDMRepositoryLabelProvider.java", "BodyUseAPI": ["org.talend.core.GlobalServiceRegister.getDefault().getService(java.lang.Class)"], "Fixed commit": "2d499137cc16c45d8d5874781279441cc67f0d6b", "Url": "https://api.github.com/repos/Talend/tmdm-studio-se", "Date": "2016-07-26T09:55:10Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (timeoutMs <= 0) { io.github.tcdl.TimerProvider.LOG.debug(\"Unable to schedule timeout with negative delay : {}\", timeoutMs); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/144/buggy-version/core.src.main.java.io.github.tcdl.TimerProvider.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String,long)"], "Fixed commit": "6743ed257f939ecf87c2f1c2546afccb4bd8e7c2", "Url": "https://api.github.com/repos/tcdl/msb-java", "Date": "2015-06-09T11:14:08Z"},
{"Line": "=>327", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (field == null) { throw new java.lang.RuntimeException((((\"no such field: \" + name) + \" in class: \") + (this))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/8443/buggy-version/errai-codegen-gwt.src.main.java.org.jboss.errai.codegen.meta.impl.gwt.GWTClass.java", "BodyUseAPI": [], "Fixed commit": "9f3afe6ddfc1095f7ed69dc2a39513f7b897d8aa", "Url": "https://api.github.com/repos/mikebrock/errai", "Date": "2012-09-12T23:16:23Z"},
{"Line": "=>307", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getEnclosedMetaObject().isClassOrInterface()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (type == null) { if ((\"length\".equals(name)) && ((getEnclosedMetaObject().isArray()) != null)) { return new org.jboss.errai.codegen.meta.MetaField.ArrayLengthMetaField(this); } return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/8443/buggy-version/errai-codegen-gwt.src.main.java.org.jboss.errai.codegen.meta.impl.gwt.GWTClass.java", "BodyUseAPI": [], "Fixed commit": "9f3afe6ddfc1095f7ed69dc2a39513f7b897d8aa", "Url": "https://api.github.com/repos/mikebrock/errai", "Date": "2012-09-12T23:16:23Z"},
{"Line": "=>908", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mResumed) { doOnResumeAndBound(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/5239/buggy-version/src.com.owncloud.android.ui.activity.FileActivity.java", "BodyUseAPI": [], "Fixed commit": "5384f6ff86ff7468a7be6f35cdae23314b9a36ae", "Url": "https://api.github.com/repos/owncloud/android", "Date": "2015-11-21T19:18:56Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["session.createCriteria(com.wipro.ats.bdre.md.dao.jpa.LineageQuery.class).add(org.hibernate.criterion.Restrictions.eq(\"processId\", processId)).addOrder(org.hibernate.criterion.Order.desc(\"instanceExecId\"))"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((getLastElementCriteria.list().size()) != 0) { com.wipro.ats.bdre.md.dao.jpa.LineageQuery lineageQuery = ((com.wipro.ats.bdre.md.dao.jpa.LineageQuery) (getLastElementCriteria.list().get(0))); instanceExecId = lineageQuery.getInstanceExecId(); while ((lineageQuery.getInstanceExecId()) == instanceExecId) { lineageQueryList.add(lineageQuery); if (counter < (getLastElementCriteria.list().size())) lineageQuery = ((com.wipro.ats.bdre.md.dao.jpa.LineageQuery) (getLastElementCriteria.list().get((counter++)))); else break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/3893/buggy-version/md-dao.src.main.java.com.wipro.ats.bdre.md.dao.LineageQueryDAO.java", "BodyUseAPI": ["org.hibernate.Criteria.list()", "org.hibernate.Criteria.list()", "org.hibernate.Criteria.list()", "getLastElementCriteria.list().get(int)", "getLastElementCriteria.list().get(int)", "getLastElementCriteria.list().size()"], "Fixed commit": "fe8cfdcb0796eeb289467d06c2f093f783e9e009", "Url": "https://api.github.com/repos/raiashu92/openbdre", "Date": "2016-01-19T12:25:42Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((method.getMethod().hasModifier(ElementModifier.STATIC)) && (method.getMethod().getName().equals(\"$$__readAnnotations__$$\"))) { org.teavm.model.ClassReader cls = agent.getClassSource().get(method.getReference().getClassName()); if (cls != null) { for (org.teavm.model.AnnotationReader annotation : cls.getAnnotations().all()) { agent.linkClass(annotation.getType(), location); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/1625/buggy-version/teavm-classlib.src.main.java.org.teavm.classlib.java.lang.reflect.AnnotationDependencyListener.java", "BodyUseAPI": ["org.teavm.dependency.MethodDependency.getReference()", "agent.getClassSource().get(method.getReference().getClassName())", "method.getReference().getClassName()"], "Fixed commit": "c9e9e3654a85280426da90eb878829a2f28ef1b5", "Url": "https://api.github.com/repos/konsoletyper/teavm", "Date": "2015-06-23T15:17:32Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(config.hasPath(org.apache.drill.exec.ExecConstants.USER_AUTHENTICATOR_IMPL))) { throw new org.apache.drill.exec.exception.DrillbitStartupException(java.lang.String.format(\"BOOT option '%s' is missing in config.\", org.apache.drill.exec.ExecConstants.USER_AUTHENTICATOR_IMPL)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/7467/buggy-version/exec.java-exec.src.main.java.org.apache.drill.exec.rpc.user.security.UserAuthenticatorFactory.java", "BodyUseAPI": [], "Fixed commit": "248e7ac16732f295615c5d6ae8428d8a075ca19c", "Url": "https://api.github.com/repos/sohami/drill", "Date": "2017-02-28T07:28:14Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cl.firstRun()) { cl.getLogDialog().show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/4694/buggy-version/app.src.main.java.mavonie.subterminal.MainActivity.java", "BodyUseAPI": ["cl.getLogDialog().show()", "mavonie.subterminal.Utils.ChangeLog.getLogDialog()"], "Fixed commit": "7ef40288817010ea9a728436dc5adc43b70df169", "Url": "https://api.github.com/repos/mattvb91/Subterminal", "Date": "2016-10-19T16:56:22Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.widget.Spinner.getSelectedItemId()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (rigId > 0) { getItem().setGear_id(java.lang.Integer.parseInt(java.lang.Long.toString(rigId))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/4694/buggy-version/app.src.main.java.mavonie.subterminal.Forms.JumpForm.java", "BodyUseAPI": ["mavonie.subterminal.models.Jump.setGear_id(int)", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.Long.toString(long)"], "Fixed commit": "7ef40288817010ea9a728436dc5adc43b70df169", "Url": "https://api.github.com/repos/mattvb91/Subterminal", "Date": "2016-10-19T16:56:22Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((key.args) < (args.length)) { throw new java.lang.IllegalArgumentException((\"Too many args for key \" + (key.key))); }else { java.lang.String format = net.daboross.bukkitdev.skywars.api.translations.SkyTrans.instance.get(key); try { return java.lang.String.format(format, args); } catch (java.util.IllegalFormatException ex) { net.daboross.bukkitdev.skywars.api.SkyStatic.getLogger().log(java.util.logging.Level.SEVERE, ((((\"Translation format error. Key is '\" + (key.key)) + \", format string is '\") + format) + \"', stacktrace:\"), ex); return java.lang.String.format(\"invalid-message-format[%s][%s]\", key.key, format); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/7085/buggy-version/src.main.java.net.daboross.bukkitdev.skywars.api.translations.SkyTrans.java", "BodyUseAPI": ["net.daboross.bukkitdev.skywars.api.SkyStatic.getLogger().log(java.util.logging.Level,((((\"Translation format error. Key is '\" + (key.key)) + \", format string is '\") + format) + \"', stacktrace:\"),java.util.IllegalFormatException)", "net.daboross.bukkitdev.skywars.api.translations.SkyTranslations.get(net.daboross.bukkitdev.skywars.api.translations.TransKey)", "java.lang.String.format(java.lang.String,key.key,java.lang.String)", "java.lang.String.format(java.lang.String,java.lang.Object[])"], "Fixed commit": "7c2f243f96123512c83f9e1d64b3364f34303f36", "Url": "https://api.github.com/repos/SkyWars/SkyWars-API", "Date": "2016-06-16T03:59:39Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.net.wifi.WifiInfo.getBSSID()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (BSSID != null) { if (BSSID.equals(\"e6:a7:a0:b9:28:50\")) { syncLessonProgress(); syncRevisionProgress(); }else { android.widget.Toast.makeText(this, \"Apologies! You can only sync your progress when you are connected to the Wi-Fi in our training premises\", Toast.LENGTH_LONG).show(); } }else { android.widget.Toast.makeText(this, \"Apologies! You can only sync your progress when you are connected to the Wi-Fi in our training premises\", Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/5923/buggy-version/ProjectAssignment.app.src.main.java.com.a0122554m.kohweilun.projectassignment.MainActivity.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "42de405443a357e1444833e8d5d8168059d66d27", "Url": "https://api.github.com/repos/JailLance/IS3261-Project", "Date": "2017-11-14T14:11:15Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.radiobattletoads.player2.DownloadCurrentinfo.track_title) == null) { listener.onPlayingInformationDownloadError(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/722/buggy-version/src.com.radiobattletoads.player2.DownloadCurrentinfo.java", "BodyUseAPI": [], "Fixed commit": "bdc59758ef0359c65a40cd18fe31bbc763466257", "Url": "https://api.github.com/repos/berfenger/radiobattletoads-android", "Date": "2014-03-30T11:34:23Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (object != null) { com.watabou.utils.Bundle bundle = new com.watabou.utils.Bundle(); bundle.put(com.watabou.utils.Bundle.CLASS_NAME, object.getClass().getName()); object.storeInBundle(bundle); array.put(bundle.data); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/4586/buggy-version/com.watabou.utils.Bundle.java", "BodyUseAPI": ["com.watabou.utils.Bundle.put(java.lang.String,object.getClass().getName())", "object.getClass().getName()", "com.watabou.utils.Bundlable.getClass()", "com.watabou.utils.Bundlable.storeInBundle(com.watabou.utils.Bundle)"], "Fixed commit": "4431a00a594d157f40625005b87b5443233f575a", "Url": "https://api.github.com/repos/00-Evan/PD-classes", "Date": "2014-09-17T20:28:48Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pattern) == null) { pattern = createPattern(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/4155/buggy-version/src.main.java.org.monospark.spongematchers.parser.element.StringElementParser.java", "BodyUseAPI": [], "Fixed commit": "82c24ee10dabb943bde93c4a275e468cb46df4ec", "Url": "https://api.github.com/repos/Monospark/SpongeMatchers", "Date": "2016-01-22T09:57:44Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (syncStartDay < 0) { syncStartDay += 7; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/1975/buggy-version/app.src.main.java.ch.fhnw.ip6.powerconsumptionmanager.network.SynchronizeChargePlanAsyncTask.java", "BodyUseAPI": [], "Fixed commit": "596dba7311703e3271e5efa75d8bbaca3583693c", "Url": "https://api.github.com/repos/radaced/ip6-PCM", "Date": "2016-08-11T18:58:13Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang.StringUtils.isNotBlank(config.getLoadBalancingIPType())) { if (config.getLoadBalancingIPType().equals(\"public\")) { config.setLoadBalancingIPType(org.apache.stratos.cloud.controller.util.CloudControllerUtil.getLoadBalancingIPTypeStringFromEnum(LoadBalancingIPType.Public)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/1930/buggy-version/components.org.apache.stratos.cloud.controller.src.main.java.org.apache.stratos.cloud.controller.util.CloudControllerUtil.java", "BodyUseAPI": ["config.getLoadBalancingIPType().equals(java.lang.String)", "org.apache.stratos.cloud.controller.util.Cartridge.setLoadBalancingIPType(java.lang.String)", "org.apache.stratos.cloud.controller.util.Cartridge.getLoadBalancingIPType()"], "Fixed commit": "84004c1d9eab835c182532e2120bf765baa983bb", "Url": "https://api.github.com/repos/apache/stratos", "Date": "2015-05-18T05:51:18Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.chalmers.dat255.group09.Alarmed.database.AlarmHandler.fetchAlarm(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (alarm == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/1711/buggy-version/src.edu.chalmers.dat255.group09.Alarmed.controller.AlarmController.java", "BodyUseAPI": [], "Fixed commit": "4fd9d02f0c127f911fe52b8d2eb78fc32efc5e77", "Url": "https://api.github.com/repos/rekoil/DAT255-EpiClock", "Date": "2012-10-07T14:24:23Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["context.getContentResolver().query(android.net.Uri,java.lang.String[],<nulltype>,<nulltype>,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (cursor == null) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/5902/buggy-version/QKSMS.src.main.java.com.moez.QKSMS.common.utils.ImageUtils.java", "BodyUseAPI": [], "Fixed commit": "5997cfb5caabd63be62454f1ae3ddcc52cc9527b", "Url": "https://api.github.com/repos/Allsimon/qksms", "Date": "2015-12-24T18:34:01Z"},
{"Line": "=>1393", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.stratelia.webactiv.kmelia.control.ejb.KmeliaBmEJB.getPublicationDetail(pubDetail.getPK())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((com.silverpeas.util.StringUtil.isDefined(old.getTargetValidatorId())) && (!(com.silverpeas.util.StringUtil.isDefined(pubDetail.getTargetValidatorId())))) { pubDetail.setTargetValidatorId(old.getTargetValidatorId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/661/buggy-version/kmelia.kmelia-ejb.src.main.java.com.stratelia.webactiv.kmelia.control.ejb.KmeliaBmEJB.java", "BodyUseAPI": ["com.stratelia.webactiv.util.publication.model.PublicationDetail.setTargetValidatorId(old.getTargetValidatorId())", "com.stratelia.webactiv.util.publication.model.PublicationDetail.getTargetValidatorId()"], "Fixed commit": "e6b4bbe7ef1573e66bc1269054c349cb7d3a9eb9", "Url": "https://api.github.com/repos/mmoqui/Silverpeas-Components", "Date": "2014-08-29T12:49:13Z"},
{"Line": "=>1021", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (\"getChar\".equals(methodName)) { methodName = \"getString\"; }else if (\"getDate\".equals(methodName)) { methodName = \"getLong\"; }else if (\"getInteger\".equals(methodName)) { methodName = \"getInt\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/7708/buggy-version/library.src.org.litepal.crud.DataHandler.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "afcb583e7d622aa6fcb9c960fa5c983a27f12db1", "Url": "https://api.github.com/repos/LitePalFramework/LitePal", "Date": "2015-01-25T04:12:37Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cascading.tuple.Tuple.getObject(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (fromOrig == null) { copy = null; }else if (reuseOrig != null) { copy = fieldSers[i].copy(fromOrig, reuseOrig); }else { copy = fieldSers[i].copy(fromOrig); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/4177/buggy-version/src.main.java.com.dataartisans.flink.cascading.types.tuple.DefinedTupleSerializer.java", "BodyUseAPI": ["fieldSers[i].copy(java.lang.Object,java.lang.Object)", "fieldSers[i].copy(java.lang.Object)"], "Fixed commit": "16c62a7820987bb2e9fe94a94796c8758acb5daa", "Url": "https://api.github.com/repos/kkrugler/cascading-flink", "Date": "2016-03-02T14:24:50Z"},
{"Line": "=>397", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (branch.isVisited()) branch.unvisit();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/5980/buggy-version/main.src.com.juliasoft.dexstudio.flow.FlowNode.java", "BodyUseAPI": ["com.juliasoft.dexstudio.flow.FlowNode.unvisit()"], "Fixed commit": "14bb6c3233a60545bb45a979a352d9a7a2830d43", "Url": "https://api.github.com/repos/JuliaSoft/DexStudio", "Date": "2014-06-17T13:54:43Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Calendar.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (a <= 0) { updateViews.setTextViewText(R.id.hour, java.lang.String.valueOf(\"\u09e7\u09e8\")); }else { char[] charArray = (\"\" + a).toCharArray(); if ((charArray.length) > 1) { char f1 = charArray[0]; char f2 = charArray[1]; java.lang.String al = (com.tusher.bdclockwidget.UpdateService.convert(f1)) + (com.tusher.bdclockwidget.UpdateService.convert(f2)); updateViews.setTextViewText(R.id.hour, java.lang.String.valueOf(al)); }else if ((charArray.length) == 1) { char f1 = charArray[0]; java.lang.String al = \"\u09e6\" + (com.tusher.bdclockwidget.UpdateService.convert(f1)); updateViews.setTextViewText(R.id.hour, java.lang.String.valueOf(al)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/1970/buggy-version/BdClockWidget.src.com.tusher.bdclockwidget.UpdateService.java", "BodyUseAPI": ["java.lang.String.toCharArray()"], "Fixed commit": "3bd2b8341e7a2ffe32394af5612fe6b2f9e8d76f", "Url": "https://api.github.com/repos/HeyRezwan/Android-BanglaClockWidget", "Date": "2015-04-08T12:38:41Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (line.contains(\" \")) { emptyCount++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/2399/buggy-version/src.main.java.metrics22.Metric1.java", "BodyUseAPI": [], "Fixed commit": "361ca00e804059a37150e9467b55dece9b14bea4", "Url": "https://api.github.com/repos/gitminingOrg/DataCrawler", "Date": "2016-01-30T06:43:48Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (proposalsContext.getPermissions(request).getCanManageUsers()) { long proposalId = proposalsContext.getProposal(request).getProposalId(); com.ext.portlet.service.ProposalLocalServiceUtil.removeUserFromTeam(proposalId, memberUserId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/2002/buggy-version/portlets.proposals-portlet.src.main.java.org.xcolab.portlets.proposals.view.action.RemoveUserFromProposalTeamActionController.java", "BodyUseAPI": ["proposalsContext.getProposal(request).getProposalId()", "org.xcolab.portlets.proposals.utils.ProposalsContext.getProposal(javax.portlet.ActionRequest)"], "Fixed commit": "41e2efc1a077dec1fbff2975c6388cca536f6f62", "Url": "https://api.github.com/repos/CCI-MIT/XCoLab", "Date": "2014-08-17T16:28:57Z"},
{"Line": "=>847", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.sf.jasperreports.engine.design.JRDesignTextField.getExpression()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(expression.getText().isEmpty())) textField.setExpression(createVABaseValueExpression(expression, item.getName(), section));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/7032/buggy-version/entirej-reports-jasper.src.org.entirej.report.jasper.builder.EJReportJasperReportBuilder.java", "BodyUseAPI": ["org.entirej.report.jasper.builder.EJReportJasperReportBuilder.createVABaseValueExpression(net.sf.jasperreports.engine.design.JRDesignExpression,item.getName(),org.entirej.framework.report.enumerations.EJReportScreenSection)", "net.sf.jasperreports.engine.design.JRDesignTextField.setExpression(net.sf.jasperreports.engine.design.JRDesignExpression)"], "Fixed commit": "b3fba25925dd5ed3dea587255a1ec3dee285a2c2", "Url": "https://api.github.com/repos/entirej/reports-core", "Date": "2015-02-25T07:37:52Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["instruction.asRType().getDestReg()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (destRegR != null) { registers.add(destRegR); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/3097/buggy-version/src.main.java.simulizer.simulation.cpu.components.CPUPipeline.java", "BodyUseAPI": ["java.util.ArrayList<simulizer.assembler.representation.Register>.add(simulizer.assembler.representation.Register)"], "Fixed commit": "54ed0a3a670d15b531b05337c52680c1733333e7", "Url": "https://api.github.com/repos/Simulizer/Simulizer", "Date": "2016-09-26T08:36:57Z"},
{"Line": "=>911", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.isDone())) observed.add(actor);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/8463/buggy-version/quasar-actors.src.main.java.co.paralleluniverse.actors.Actor.java", "BodyUseAPI": [], "Fixed commit": "2f0628ff7beaff8423a2faa1b389d952505a146d", "Url": "https://api.github.com/repos/circlespainter/quasar", "Date": "2017-05-24T17:20:10Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isGLThread()) { android.opengl.GLES20.glDeleteProgram(handle); com.gplibs.magicsurfaceview.GLUtil.checkGlError(\"glDeleteProgram\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/6749/buggy-version/src.main.java.com.gplibs.magicsurfaceview.Program.java", "BodyUseAPI": [], "Fixed commit": "4a52a029d341c67db7fd6fc820f26ecd8ad5736c", "Url": "https://api.github.com/repos/gplibs/android-magic-surface-view", "Date": "2017-05-18T06:20:09Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sort == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/728/buggy-version/src.main.java.org.springframework.data.ebean.convert.PageListOrderConverter.java", "BodyUseAPI": [], "Fixed commit": "a8b530ea09c1c103037ea8d770f2720ebe748d67", "Url": "https://api.github.com/repos/hexagonframework/spring-data-ebean", "Date": "2017-08-16T10:27:09Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (completeVarID.contains(\":\")) { java.lang.String simpleID = completeVarID.substring(0, completeVarID.indexOf(\":\")); return simpleID; }else { return completeVarID; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/3853/buggy-version/microbat.src.main.microbat.model.variable.Variable.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.indexOf(java.lang.String)"], "Fixed commit": "2f8a486f930e3b3bffed703d7191f83e239f671b", "Url": "https://api.github.com/repos/sunjun-group/Ziyuan", "Date": "2016-02-10T10:18:05Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (sslEngine.getUseClientMode()) { sslEngine.beginHandshake(); doIO(sslEngine.getHandshakeStatus()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/3982/buggy-version/src.main.java.au.id.villar.net.SSLSocketTask.java", "BodyUseAPI": ["au.id.villar.net.SSLSocketTask.1.doIO(javax.net.ssl.SSLEngineResult.HandshakeStatus)", "javax.net.ssl.SSLEngine.beginHandshake()", "javax.net.ssl.SSLEngine.getHandshakeStatus()"], "Fixed commit": "f9a62fd3bd83fffb3ba3416bd5a486689b184a54", "Url": "https://api.github.com/repos/morgano5/commons-net-bis", "Date": "2017-03-13T11:39:51Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<java.lang.String>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (url3.contains(\",\")) url3 = url3.split(\",\")[1];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/8912/buggy-version/app.src.main.java.me.ccrama.redditslide.Adapters.AlbumView.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "f5be90e029b8140bc26bd56cf6ccc168a3fb4547", "Url": "https://api.github.com/repos/Nxt3/Slide", "Date": "2016-04-06T02:16:51Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<java.lang.String>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (url2.contains(\",\")) url2 = url2.split(\",\")[0];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/8912/buggy-version/app.src.main.java.me.ccrama.redditslide.Adapters.AlbumView.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "f5be90e029b8140bc26bd56cf6ccc168a3fb4547", "Url": "https://api.github.com/repos/Nxt3/Slide", "Date": "2016-04-06T02:16:51Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<java.lang.String>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (s.contains(\",\")) { s = s.split(\",\")[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/8912/buggy-version/app.src.main.java.me.ccrama.redditslide.Adapters.ImageGridAdapter.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "f5be90e029b8140bc26bd56cf6ccc168a3fb4547", "Url": "https://api.github.com/repos/Nxt3/Slide", "Date": "2016-04-06T02:16:51Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (index < ((this.length) - 1)) { s.append(\", \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/5484/buggy-version/SparseArray.java", "BodyUseAPI": [], "Fixed commit": "7b8c121f4c1b51e37ddfd039f567fc93bf1e03fc", "Url": "https://api.github.com/repos/wt65074/Project1", "Date": "2017-09-25T00:40:26Z"},
{"Line": "=>374", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (card == null) { data = com.github.devnied.emvnfccard.utils.TlvUtil.getValue(pGpo, EmvTags.APPLICATION_FILE_LOCATOR); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/5063/buggy-version/library.src.main.java.com.github.devnied.emvnfccard.parser.EmvParser.java", "BodyUseAPI": [], "Fixed commit": "babefeebf9db52e4c282630a946aee6c1d3e5a48", "Url": "https://api.github.com/repos/devnied/EMV-NFC-Paycard-Enrollment", "Date": "2014-09-09T21:55:27Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.agmip.core.types.AdvancedHashMap<java.lang.String, java.lang.Object>.getOr(java.lang.String,java.util.ArrayList)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (weatherRecords.isEmpty()) { fileName += \"0001.WTH\"; }else { fileName += (adapter.exportRecord(((java.util.Map) (weatherRecords.get(0)))).getOr(\"w_date\", \"2000\").toString().substring(2, 4)) + \"01.WTH\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/8729/buggy-version/src.main.java.org.agmip.translators.dssat.DssatWeatherOutput.java", "BodyUseAPI": ["java.util.ArrayList.get(int)", "adapter.exportRecord(((java.util.Map) (weatherRecords.get(0)))).getOr(java.lang.String,java.lang.String)", "adapter.exportRecord(((java.util.Map) (weatherRecords.get(0)))).getOr(\"w_date\", \"2000\").toString().substring(int,int)", "adapter.exportRecord(((java.util.Map) (weatherRecords.get(0)))).getOr(\"w_date\", \"2000\").toString()", "org.agmip.util.JSONAdapter.exportRecord(java.lang.Object)"], "Fixed commit": "56b06900eb6ef690503d53cbde728be168d9728d", "Url": "https://api.github.com/repos/MengZhang/translator-dssat", "Date": "2012-06-29T17:28:21Z"},
{"Line": "=>535", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.intellij.grammar.parser.PsiBuilder.rawTokenIndex()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((eatMoreFlagOnce || ((!result) && ((frame.position) != (builder.rawTokenIndex())))) || ((frame.errorReportedAt) > initialPos)) { errorReported = org.intellij.grammar.parser.GeneratedParserUtilBase.reportError(builder, state, frame, null, true, false); }else if (((!result) && pinned) && ((frame.errorReportedAt) < 0)) { errorReported = org.intellij.grammar.parser.GeneratedParserUtilBase.reportError(builder, state, frame, elementType, false, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/482/buggy-version/support.org.intellij.grammar.parser.GeneratedParserUtilBase.java", "BodyUseAPI": ["org.intellij.grammar.parser.GeneratedParserUtilBase.reportError(org.intellij.grammar.parser.PsiBuilder,org.intellij.grammar.parser.GeneratedParserUtilBase.ErrorState,org.intellij.grammar.parser.GeneratedParserUtilBase.Frame,<nulltype>,boolean,boolean)", "org.intellij.grammar.parser.GeneratedParserUtilBase.reportError(org.intellij.grammar.parser.PsiBuilder,org.intellij.grammar.parser.GeneratedParserUtilBase.ErrorState,org.intellij.grammar.parser.GeneratedParserUtilBase.Frame,com.intellij.psi.tree.IElementType,boolean,boolean)"], "Fixed commit": "c8b2fb19d7c89e9fbdf56d3e0a555a4526690c66", "Url": "https://api.github.com/repos/JetBrains/Grammar-Kit", "Date": "2015-08-26T23:12:02Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((person.getPosX()) == 0) || ((person.getPosY()) == 0)) { java.lang.System.out.println((((((((person.getPosX()) + \"-\") + (person.getPosY())) + \"-\") + ((person.getPosX()) / 45)) + \"-\") + ((person.getPosY()) / 45))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/3402/buggy-version/main.TheStreet.src.com.stalkindustries.main.game.Simulation.java", "BodyUseAPI": ["com.stalkindustries.main.game.Person.getPosY()", "com.stalkindustries.main.game.Person.getPosY()", "com.stalkindustries.main.game.Person.getPosX()", "java.io.PrintStream.println((((((((person.getPosX()) + \"-\") + (person.getPosY())) + \"-\") + ((person.getPosX()) / 45)) + \"-\") + ((person.getPosY()) / 45)))", "com.stalkindustries.main.game.Person.getPosX()"], "Fixed commit": "601546b849bafa38a44d4bc2d19d5fabd786f202", "Url": "https://api.github.com/repos/topahl/die-Strasse", "Date": "2013-10-24T17:29:24Z"},
{"Line": "=>5", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (d < 0) { t = -t; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/5412/buggy-version/Rational.java", "BodyUseAPI": [], "Fixed commit": "32177f478269181eb39fc2c92e223cd0f6b82e88", "Url": "https://api.github.com/repos/Mgccl/mgccl-oj", "Date": "2013-07-17T18:20:44Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (shouldRecurse(isLocator, resource, locator)) { populateEndpoints(endpoints, path, locator.getMethod().getReturnType(), true); }else { endpoints.add(formatEndpoint(\"*\", path, klass)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/6395/buggy-version/dropwizard-jersey.src.main.java.io.dropwizard.jersey.DropwizardResourceConfig.java", "BodyUseAPI": ["com.sun.jersey.api.model.AbstractSubResourceLocator.getMethod()", "io.dropwizard.jersey.DropwizardResourceConfig.populateEndpoints(java.util.List<java.lang.String>,java.lang.String,locator.getMethod().getReturnType(),boolean)", "locator.getMethod().getReturnType()"], "Fixed commit": "72669d9f4aba82c709e37c80c93eb5b9e5342d1d", "Url": "https://api.github.com/repos/dropwizard/dropwizard", "Date": "2014-10-29T10:24:25Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isProgressDialogNotShowing()) { showProgressDialog(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/9177/buggy-version/app.src.main.java.com.arctouch.easybus.search.SearchFragment.java", "BodyUseAPI": [], "Fixed commit": "2192c6f416872c40b686991646c0cf0337d5c131", "Url": "https://api.github.com/repos/tfcporciuncula/easy-bus", "Date": "2016-03-13T20:26:00Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((categoryLists.get(category)) == null) { categoryLists.put(category, new java.util.ArrayList<list.model.ITask>()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/6484/buggy-version/src.list.TaskManager.java", "BodyUseAPI": ["java.util.Map<list.model.ICategory, java.util.List<list.model.ITask>>.put(list.model.ICategory,java.util.ArrayList<list.model.ITask>)"], "Fixed commit": "4f74eb34f63c112ff3422277a7aff587b0b93dc2", "Url": "https://api.github.com/repos/andhieka/LIST", "Date": "2014-11-06T19:45:55Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.andune.minecraft.hsp.PlayerJoinEvent.getPlayer()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((storagePlayer != null) && (!(p.getName().equals(storagePlayer.getName())))) { final java.lang.String oldName = storagePlayer.getName(); log.info(\"Player {} changed names (oldName={}, uid={})\", p.getName(), oldName, p.getUUID()); int count = nameChangeUtil.changeName(p.getName(), storagePlayer.getName()); log.info(\"Updated {} rows in database from oldName ({}) to newName ({}) (uid={})\", count, oldName, p.getName(), p.getUUID()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/2306/buggy-version/core.src.main.java.com.andune.minecraft.hsp.EventListener.java", "BodyUseAPI": ["com.andune.minecraft.hsp.util.NameChangeUtil.changeName(p.getName(),storagePlayer.getName())", "com.andune.minecraft.commonlib.server.api.Player.getUUID()", "com.andune.minecraft.commonlib.Logger.info(java.lang.String,p.getName(),java.lang.String,p.getUUID())", "com.andune.minecraft.commonlib.server.api.Player.getUUID()", "com.andune.minecraft.commonlib.server.api.Player.getName()", "com.andune.minecraft.commonlib.server.api.Player.getName()", "com.andune.minecraft.commonlib.server.api.Player.getName()", "com.andune.minecraft.commonlib.Logger.info(java.lang.String,int,java.lang.String,p.getName(),p.getUUID())", "com.andune.minecraft.commonlib.server.api.Player.getName()", "com.andune.minecraft.commonlib.server.api.Player.getName()"], "Fixed commit": "ec1cdce249a0c0d7c4954d566b256d7a64f996c0", "Url": "https://api.github.com/repos/andune/HomeSpawnPlus", "Date": "2015-02-05T06:44:47Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.android.gms.location.LocationClient.getLastLocation()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (currentLocation != null) { mActivityIndicator.setVisibility(View.VISIBLE); new fr.julienheissat.ui.activity.ViewTasksActivity.GetAddressTask(this).execute(currentLocation); }else { android.widget.Toast.makeText(this, \"Could not get last location !\", Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/7672/buggy-version/app.src.main.java.fr.julienheissat.UI.activity.ViewTasksActivity.java", "BodyUseAPI": ["fr.julienheissat.ui.activity.ViewTasksActivity.GetAddressTask.execute(android.location.Location)"], "Fixed commit": "b9ee7f4ae3c1a3de71b1870ac7bd1f721dffec77", "Url": "https://api.github.com/repos/Orabig/TaskManager", "Date": "2014-09-19T12:10:59Z"},
{"Line": "=>969", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(se.arnetheduck.j2c.transform.TransformUtil.isVoid(mb.getReturnType()))) { pw.print(\"return \"); if (!(mb2.getReturnType().getErasure().isEqualTo(mb.getReturnType().getErasure()))) { se.arnetheduck.j2c.transform.TransformUtil.addDep(mb.getReturnType(), deps); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/7985/buggy-version/plugin.src.se.arnetheduck.j2c.transform.TransformUtil.java", "BodyUseAPI": ["org.eclipse.jdt.core.dom.IMethodBinding.getReturnType()", "mb.getReturnType().getErasure()", "se.arnetheduck.j2c.transform.TransformUtil.addDep(mb.getReturnType(),java.util.List<org.eclipse.jdt.core.dom.ITypeBinding>)", "mb2.getReturnType().getErasure().isEqualTo(mb.getReturnType().getErasure())", "org.eclipse.jdt.core.dom.IMethodBinding.getReturnType()"], "Fixed commit": "9e77a02db5d9459d51a1cc4d20692549110706cf", "Url": "https://api.github.com/repos/arnetheduck/j2c", "Date": "2012-06-26T19:39:59Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (be instanceof com.laytonsmith.abstraction.bukkit.Item) { return new com.laytonsmith.abstraction.bukkit.BukkitMCItem(((com.laytonsmith.abstraction.bukkit.Item) (be))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/5054/buggy-version/src.main.java.com.laytonsmith.abstraction.bukkit.BukkitConvertor.java", "BodyUseAPI": [], "Fixed commit": "66b81626dc71ee20dd856941e4859c72a3cc2e9a", "Url": "https://api.github.com/repos/sk89q/commandhelper", "Date": "2012-09-06T04:42:14Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((cAttribute.getDifferentialPath()) == null) { com.nedap.archie.rminfo.RMAttributeInfo attributeInfo = lookup.getAttributeInfo(owningObject.getRmTypeName(), cAttribute.getRmAttributeName()); if (attributeInfo == null) { result.add(new com.nedap.archie.archetypevalidator.ValidationMessage(com.nedap.archie.archetypevalidator.ErrorType.VCARM, cAttribute.getPath(), ((((cAttribute.getRmAttributeName()) + \" is not a known attribute of \") + (owningObject.getRmTypeName())) + \" or it is has not been implemented in Archie\"))); }else { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/3703/buggy-version/tools.src.main.java.com.nedap.archie.archetypevalidator.validations.ModelConformanceValidation.java", "BodyUseAPI": ["com.nedap.archie.rminfo.ModelInfoLookup.getAttributeInfo(owningObject.getRmTypeName(),cAttribute.getRmAttributeName())", "com.nedap.archie.aom.CAttribute.getRmAttributeName()", "com.nedap.archie.aom.CAttribute.getRmAttributeName()", "com.nedap.archie.aom.CAttribute.getPath()", "java.util.List<com.nedap.archie.archetypevalidator.ValidationMessage>.add(com.nedap.archie.archetypevalidator.ValidationMessage)"], "Fixed commit": "53987ad77d90bbf253c64c5efb95cc4383eb2fae", "Url": "https://api.github.com/repos/openEHR/archie", "Date": "2017-10-28T10:41:03Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((d != (c.cause().delta())) && (d != (c.cause().delta().opposite()))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/3066/buggy-version/ollitosbot.src.ollitos.bot.physics.IBCollision.java", "BodyUseAPI": [], "Fixed commit": "6db13b27b9e2807e1ffeaf595357a391cf4b0037", "Url": "https://api.github.com/repos/alvarogonzalezsotillo/Bongard", "Date": "2013-03-21T16:49:03Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.mjr.MJRBot.MJRBot.bot.isConnected()) com.mjr.Gui.GUI.TextToConsole(\"Connected to Twitch!\", \"Bot\", null); else com.mjr.Gui.GUI.TextToConsole(\"Connection to Twitch failed, check your login details!\", \"Bot\", null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/6437/buggy-version/src.com.mjr.MJRBot.MJRBot.java", "BodyUseAPI": [], "Fixed commit": "9029fa3c05a9c30712abba959e1bd18d29565acc", "Url": "https://api.github.com/repos/MJRLegends/MJRBot", "Date": "2016-02-18T17:44:48Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((!(com.mjr.files.Config.getSetting(\"Username\").equals(\"\"))) && (!(com.mjr.files.Config.getSetting(\"Password\").equals(\"\")))) && (com.mjr.MJRBot.MJRBot.bot.isConnected())) { com.mjr.Gui.GUI.loadsettings(); if (com.mjr.files.Config.getSetting(\"Points\").equalsIgnoreCase(\"true\")) { com.mjr.files.PointsSystem.load(); } if (com.mjr.files.Config.getSetting(\"Ranks\").equalsIgnoreCase(\"true\")) { com.mjr.files.Ranks.load(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/6437/buggy-version/src.com.mjr.MJRBot.MJRBot.java", "BodyUseAPI": [], "Fixed commit": "9029fa3c05a9c30712abba959e1bd18d29565acc", "Url": "https://api.github.com/repos/MJRLegends/MJRBot", "Date": "2016-02-18T17:44:48Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(headerComplete)) { endHeader(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/6508/buggy-version/core.queryresultio.sparqljson.src.main.java.org.openrdf.query.resultio.sparqljson.SPARQLResultsJSONWriter.java", "BodyUseAPI": [], "Fixed commit": "d611771fb54e833ec4ee1b3dc4369eef31ee4736", "Url": "https://api.github.com/repos/ansell/openrdf-sesame", "Date": "2013-02-13T00:10:18Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.app_url) != null) { link.put(\"app_url\", this.app_url); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/9078/buggy-version/src.com.minxing.client.model.ShareLink.java", "BodyUseAPI": [], "Fixed commit": "979396527ca1aa2f62f75eff9e5136c9c004c981", "Url": "https://api.github.com/repos/dehuinet/minxing_java_sdk", "Date": "2016-05-30T06:11:01Z"},
{"Line": "=>1084", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getSubject()) != null) getSubject().setState(state);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/6806/buggy-version/AppPOS.src.main.java.com.magestore.app.pos.controller.CheckoutListController.java", "BodyUseAPI": [], "Fixed commit": "934fb64e586799c32a150b873c058f136c7f5474", "Url": "https://api.github.com/repos/miketrueplus/MagestorePOSAndroid", "Date": "2017-03-24T08:45:33Z"},
{"Line": "=>1078", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isEnable) { keyObserv = com.magestore.app.pos.controller.CheckoutListController.STATE_ENABLE_CHANGE_CART_ITEM; }else { keyObserv = com.magestore.app.pos.controller.CheckoutListController.STATE_DISABLE_CHANGE_CART_ITEM; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/6806/buggy-version/AppPOS.src.main.java.com.magestore.app.pos.controller.CheckoutListController.java", "BodyUseAPI": [], "Fixed commit": "934fb64e586799c32a150b873c058f136c7f5474", "Url": "https://api.github.com/repos/miketrueplus/MagestorePOSAndroid", "Date": "2017-03-24T08:45:33Z"},
{"Line": "=>918", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(ZombieAwareness.config.ZAConfigFeatures.awareness_Sound)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/4859/buggy-version/src.main.java.ZombieAwareness.ZAUtil.java", "BodyUseAPI": [], "Fixed commit": "f0a5f3106e5e9b7068adc055e819eb66f2d8d50e", "Url": "https://api.github.com/repos/Corosauce/ZombieAwareness", "Date": "2016-02-26T03:20:17Z"},
{"Line": "=>363", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.bluetooth.BluetoothDevice.getName()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (name == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/8913/buggy-version/app.src.main.java.org.hwyl.sexytopo.control.activity.DeviceActivity.java", "BodyUseAPI": [], "Fixed commit": "8abdd56d4bfdfd07f7789c9eb9dafd325dc8af24", "Url": "https://api.github.com/repos/richsmith/sexytopo", "Date": "2017-12-04T22:04:17Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((material) == null) { java.lang.System.err.println(\"Material = null!\"); }else if ((material.getTexture()) == null) { java.lang.System.err.println(\"Texture = null!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/65/buggy-version/src.net.minegeek360.jumpman.world.objects.WorldObject.java", "BodyUseAPI": [], "Fixed commit": "d944357e77c7a7f2861225619698806ea1af0a7e", "Url": "https://api.github.com/repos/MightyElemental/jumpy-man", "Date": "2015-07-30T15:56:22Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mTask) != null) { mTask.setCallback(callback); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/4366/buggy-version/sample.src.com.manuelpeinado.addressfragment.demo.apiclients.wikilocation.WikiLocationClient.java", "BodyUseAPI": [], "Fixed commit": "e30eb2649711957d39e75d2aece35b8d87a567a3", "Url": "https://api.github.com/repos/ManuelPeinado/AddressFragment", "Date": "2013-04-27T07:51:56Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cursor.isClosed()) { cursor = com.nomapp.nomapp_beta.Database.Database.getDatabase().getGeneralDb().query(com.nomapp.nomapp_beta.Database.Database.getRecipesTableName(), new java.lang.String[]{ com.nomapp.nomapp_beta.Database.Database.getRecipesId(), com.nomapp.nomapp_beta.Database.Database.getRecipesName(), com.nomapp.nomapp_beta.Database.Database.getRecipesIsAvailable(), com.nomapp.nomapp_beta.Database.Database.getRecipesNumberOfSteps(), com.nomapp.nomapp_beta.Database.Database.getRecipesTimeForCooking(), com.nomapp.nomapp_beta.Database.Database.getRecipesNumberOfIngredients(), com.nomapp.nomapp_beta.Database.Database.getRecipesMeasureForTime() }, null, null, null, null, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/1610/buggy-version/app.src.main.java.com.nomapp.nomapp_beta.CategoriesOfRecipes.RecipesSearchFragment.java", "BodyUseAPI": [], "Fixed commit": "f22055b1ef072555179dc521fe76f38ea964f4af", "Url": "https://api.github.com/repos/keipa/nomapp", "Date": "2016-01-30T20:46:11Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (index == 0) { deletedData = head.getData(); head = head.getNext(); (size)--; }else { for (int i = 0; i < (index - 1); i++) { currentNode = currentNode.getNext(); } deletedData = currentNode.getNext().getData(); currentNode.setNext(currentNode.getNext().getNext()); (size)--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/3952/buggy-version/src.listLab.SingularLL.java", "BodyUseAPI": [], "Fixed commit": "0dd3c4ae49c11b090999cf2d182010873bc118cd", "Url": "https://api.github.com/repos/grahamw0/ListLab", "Date": "2016-10-01T17:06:03Z"},
{"Line": "=>1145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["sample.TextInputDialog.showAndWait()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (result.toString().contains(\"youtube.com/watch?v=\")) { videoNode = new sample.VideoNode(result.get()); videoNode.getNodePane().setOnMousePressed(OnMousePressedEventHandler); videoNode.getNodePane().setOnMouseDragged(OnMouseDraggedEventHandler); videoNode.getNodePane().setOnMouseReleased(VideoOnMouseReleasedEventHandler); newNodeStage.getChildren().add(videoNode.getNodePane()); }else javax.swing.JOptionPane.showMessageDialog(null, \"Not a valid youtube URL.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/6566/buggy-version/ClassMapAppFX.src.sample.Controller.java", "BodyUseAPI": ["java.util.Optional<java.lang.String>.get()"], "Fixed commit": "e4e66b68369ef2a6a3b2b86836cc38cc61616c7f", "Url": "https://api.github.com/repos/classmapapp/Student-Coding-Contest-ClassMap", "Date": "2016-01-04T14:20:21Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (null != (com.tannuo.sdk.util.DataProxy.instance.mInWriter)) { com.tannuo.sdk.util.DataProxy.instance.mInWriter.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/7938/buggy-version/sdk.src.main.java.com.tannuo.sdk.util.DataProxy.java", "BodyUseAPI": ["java.io.OutputStreamWriter.close()"], "Fixed commit": "b495141029939b1c192c5ab0706185941d9a96e7", "Url": "https://api.github.com/repos/lzcj4/DolphinNote", "Date": "2016-05-06T04:22:25Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(session.isOpen())) { session = com.jessemcgilallen.lc.persistence.SessionFactoryProvider.getSessionFactory().openSession(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/137/buggy-version/src.main.java.com.jessemcgilallen.lc.persistence.AbstractDao.java", "BodyUseAPI": [], "Fixed commit": "e2b4181a687d0782bfdc221a308a81c01dc12000", "Url": "https://api.github.com/repos/JesseMcGilAllen/javaIndividualProject", "Date": "2016-05-04T23:42:05Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.disconnectReason) == null) { for (final java.lang.String s : data) { java.util.Collections.addAll(this.outputBuffer, splitPattern.split(s)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/1639/buggy-version/src.main.java.core.server.session.Session.java", "BodyUseAPI": [], "Fixed commit": "3260b81a302becea02386b654e00411da1ca75ca", "Url": "https://api.github.com/repos/0xbaadf00d/psychic-soul", "Date": "2016-01-01T08:56:42Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.disconnectReason) == null) { java.util.Collections.addAll(this.outputBuffer, splitPattern.split(data)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/1639/buggy-version/src.main.java.core.server.session.Session.java", "BodyUseAPI": [], "Fixed commit": "3260b81a302becea02386b654e00411da1ca75ca", "Url": "https://api.github.com/repos/0xbaadf00d/psychic-soul", "Date": "2016-01-01T08:56:42Z"},
{"Line": "=>353", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.opentsdb.graph.Plot.getAggregatedTags()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((aggregatedTags == null) || (aggregatedTags.isEmpty())) { buf.append(\"[[]]\"); }else { buf.append(\",\\\"etags\\\":[\"); for (final java.util.Set<java.lang.String> tags : plot.getAggregatedTags()) { if ((tags == null) || (tags.isEmpty())) { buf.append(\"[]\"); }else { net.opentsdb.tsd.HttpQuery.toJsonArray(tags, buf); } buf.append(','); } buf.setCharAt(((buf.length()) - 1), ']'); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/3896/buggy-version/src.tsd.GraphHandler.java", "BodyUseAPI": [], "Fixed commit": "e2c6f77aa58c520f07098b5654bf4bb4890c7f3c", "Url": "https://api.github.com/repos/gutefrage/opentsdb", "Date": "2012-11-14T15:43:19Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (parrots.containsKey(doneParrot)) { parrots.remove(doneParrot); (deadParrotCount)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/8793/buggy-version/src.bots.ParrotBot.ParrotCage.java", "BodyUseAPI": ["java.util.Map<java.lang.String, bots.ParrotBot.ParrotBot>.remove(java.lang.String)"], "Fixed commit": "3b85713e4b3b3fd166d6047e265f0fe747b63e66", "Url": "https://api.github.com/repos/Vinpasso/BridgeMPP-Bot", "Date": "2015-10-21T11:32:59Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.thoughtworks.go.plugin.api.GoApplicationAccessor.submit(com.thoughtworks.go.plugin.api.request.DefaultGoApiRequest)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.apache.commons.lang.StringUtils.isBlank(response.responseBody())) { java.lang.String message = \"Plugin settings is required for this plugin. Please set that up on the server.\"; cd.go.contrib.elasticagents.docker.LOG.error(message); throw new java.lang.RuntimeException(message); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/4183/buggy-version/src.cd.go.contrib.elasticagents.docker.PluginRequest.java", "BodyUseAPI": [], "Fixed commit": "7ab15b43e7f74aeba2277ac3ea0d59faba9a2e5d", "Url": "https://api.github.com/repos/ketan/docker-elastic-agents", "Date": "2016-04-11T10:49:48Z"},
{"Line": "=>399", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((me.appView) == null) { me.init(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/7033/buggy-version/framework.src.com.phonegap.DroidGap.java", "BodyUseAPI": ["com.phonegap.DroidGap.init()"], "Fixed commit": "cbdd400fe7bc97152c2f1da144f7cf368a5abf9c", "Url": "https://api.github.com/repos/willshen/callback-android", "Date": "2011-11-16T05:13:49Z"},
{"Line": "=>523", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((me.appView) == null) { me.init(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/7033/buggy-version/framework.src.com.phonegap.DroidGap.java", "BodyUseAPI": ["com.phonegap.DroidGap.init()"], "Fixed commit": "cbdd400fe7bc97152c2f1da144f7cf368a5abf9c", "Url": "https://api.github.com/repos/willshen/callback-android", "Date": "2011-11-16T05:13:49Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(toParse.contains(\".\"))) { toParse = new java.lang.StringBuilder(toParse).insert(((toParse.lastIndexOf(\":\")) + 3), \".000\").toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/8116/buggy-version/core.src.main.java.org.jclouds.date.internal.SimpleDateFormatDateService.java", "BodyUseAPI": ["java.lang.StringBuilder.insert(int,java.lang.String)", "java.lang.String.lastIndexOf(java.lang.String)", "java.lang.StringBuilder.toString()"], "Fixed commit": "a14db1283c15bb1bd92ab95a0787a51c59366624", "Url": "https://api.github.com/repos/florianleibert/jclouds", "Date": "2013-08-08T21:45:43Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (main.activator.Activator.getDefault().getEditorController().isEverythingMatching()) { boolean state = org.eclipse.ui.handlers.HandlerUtil.toggleCommandState(event.getCommand()); main.activator.Activator.getDefault().getCFGController().settLinkState((!state)); }else org.eclipse.jface.dialogs.MessageDialog.openInformation(window.getShell(), Messages.DRAW_GRAPH_TITLE, Messages.GRAPH_UPDATE_MSG);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/3643/buggy-version/PESTT.src.ui.handler.LinkHandler.java", "BodyUseAPI": [], "Fixed commit": "bbe2112541fdf1df9cd807e710e1d90f6dcf1be0", "Url": "https://api.github.com/repos/pestt/PESTT", "Date": "2012-03-29T12:21:08Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (main.activator.Activator.getDefault().getEditorController().isEverythingMatching()) { option = event.getParameter(RadioState.PARAMETER_ID); if (((option) != null) && (!(option.equals(old)))) { if (((option) != null) && (!(option.equals(Description.NONE)))) { org.eclipse.ui.handlers.HandlerUtil.updateRadioState(event.getCommand(), option); old = option; } main.activator.Activator.getDefault().getTestPathController().selectTourType(old); } }else { flag = true; org.eclipse.jface.dialogs.MessageDialog.openInformation(window.getShell(), Messages.DRAW_GRAPH_TITLE, Messages.GRAPH_UPDATE_MSG); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/3643/buggy-version/PESTT.src.ui.handler.ToursHandler.java", "BodyUseAPI": [], "Fixed commit": "bbe2112541fdf1df9cd807e710e1d90f6dcf1be0", "Url": "https://api.github.com/repos/pestt/PESTT", "Date": "2012-03-29T12:21:08Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (main.activator.Activator.getDefault().getEditorController().isEverythingMatching()) { option = event.getParameter(RadioState.PARAMETER_ID); if (((option) != null) && (!(option.equals(Description.NONE)))) { org.eclipse.ui.handlers.HandlerUtil.updateRadioState(event.getCommand(), option); old = option; }else if (((option) == null) && (old.equals(Layer.EMPTY.toString()))) old = ((java.lang.String) (event.getCommand().getState(\"org.eclipse.ui.commands.radioState\").getValue())); main.activator.Activator.getDefault().getCFGController().selectLayer(old); }else { flag = true; org.eclipse.jface.dialogs.MessageDialog.openInformation(window.getShell(), Messages.DRAW_GRAPH_TITLE, Messages.GRAPH_UPDATE_MSG); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/3643/buggy-version/PESTT.src.ui.handler.LayerHandler.java", "BodyUseAPI": [], "Fixed commit": "bbe2112541fdf1df9cd807e710e1d90f6dcf1be0", "Url": "https://api.github.com/repos/pestt/PESTT", "Date": "2012-03-29T12:21:08Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.jabs.hwrkit.LoginBackFragment.pauseListener)) { prevAct.flipCard(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/6745/buggy-version/HwrkIt.src.com.jabs.hwrkit.LoginBackFragment.java", "BodyUseAPI": [], "Fixed commit": "5331ca0b230e2357f602e60bef1d19eb9a0ddd39", "Url": "https://api.github.com/repos/jacobrs/HwrkIt", "Date": "2014-12-12T02:25:03Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.jabs.hwrkit.LoginFrontFragment.pauseListener)) { prevAct.flipCard(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/6745/buggy-version/HwrkIt.src.com.jabs.hwrkit.LoginFrontFragment.java", "BodyUseAPI": [], "Fixed commit": "5331ca0b230e2357f602e60bef1d19eb9a0ddd39", "Url": "https://api.github.com/repos/jacobrs/HwrkIt", "Date": "2014-12-12T02:25:03Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.codedao.truyenonline.view.fragment.StoryChapterFragment.adapter) != null) { getSupportFragmentManager().beginTransaction().remove(StoryChapterFragment.adapter.getItem(0)).remove(StoryChapterFragment.adapter.getItem(1)).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/2563/buggy-version/app.src.main.java.com.codedao.truyenonline.view.Screen1.java", "BodyUseAPI": [], "Fixed commit": "86f0e9320211bcb192c746c89184832351101e67", "Url": "https://api.github.com/repos/NamHV4/TruyenOnline", "Date": "2017-09-12T17:06:15Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jboss.seam.contexts.Contexts.getEventContext().get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (syncs != null) { org.jboss.seam.contexts.Contexts.getEventContext().set(SEAM_TX_SYNCS, syncs); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/2092/buggy-version/nuxeo-platform-webapp-core.src.main.java.org.nuxeo.ecm.webapp.shield.SeamExceptionHandlingListener.java", "BodyUseAPI": ["org.jboss.seam.contexts.Contexts.getEventContext().set(java.lang.String,java.lang.Object)"], "Fixed commit": "6b85442b66eeece2c3680cd5c87a0931f7ffdf5a", "Url": "https://api.github.com/repos/nuxeo/nuxeo-dm", "Date": "2011-11-21T17:07:41Z"},
{"Line": "=>276", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<ru.sukharev.pathtracker.utils.orm.MapPoint>.get(((mPoints.size()) - 1))"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((mapPoint.equals(endPoint)) && (!(mapPoint.isEndPoint()))) { flagOfLastPoint = true; mapPoint.setIsEndPoint(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/14/buggy-version/app.src.main.java.ru.sukharev.pathtracker.utils.MapHelper.java", "BodyUseAPI": ["ru.sukharev.pathtracker.utils.orm.MapPoint.setIsEndPoint(boolean)"], "Fixed commit": "a299c76f7fc30c12ca00cac024f95e21d7ee92f9", "Url": "https://api.github.com/repos/SukharevPavel/PathTracker", "Date": "2016-01-16T06:56:18Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (flagOfLastPoint) { flagOfLastPoint = false; mapPoint.setIsEndPoint(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/14/buggy-version/app.src.main.java.ru.sukharev.pathtracker.utils.MapHelper.java", "BodyUseAPI": [], "Fixed commit": "a299c76f7fc30c12ca00cac024f95e21d7ee92f9", "Url": "https://api.github.com/repos/SukharevPavel/PathTracker", "Date": "2016-01-16T06:56:18Z"},
{"Line": "=>402", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((checkedModules) != null) { return checkedModules; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/1292/buggy-version/eclipse.tern.eclipse.ide.ui.src.tern.eclipse.ide.ui.controls.TernModulesBlock.java", "BodyUseAPI": [], "Fixed commit": "d19bf95f77e3d551c9c111f610003aa04d5914aa", "Url": "https://api.github.com/repos/angelozerr/tern.java", "Date": "2015-09-15T17:33:05Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.autorefactor.refactoring.rules.ReplaceQualifiedNamesBySimpleNamesRefactoring.Names.getBestMatches(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(matches.get(0).isMember())) { return fullyQualifiedName.equals(matches.get(0).fullyQualifiedName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/7269/buggy-version/plugin.src.main.java.org.autorefactor.refactoring.rules.ReplaceQualifiedNamesBySimpleNamesRefactoring.java", "BodyUseAPI": ["org.autorefactor.refactoring.rules.ReplaceQualifiedNamesBySimpleNamesRefactoring.QName.equals(org.autorefactor.refactoring.rules.ReplaceQualifiedNamesBySimpleNamesRefactoring.QName)", "java.util.List<org.autorefactor.refactoring.rules.ReplaceQualifiedNamesBySimpleNamesRefactoring.FQN>.get(int)"], "Fixed commit": "bd09f74edf1cd661e9395b351e59e93440f8db61", "Url": "https://api.github.com/repos/JnRouvignac/AutoRefactor", "Date": "2017-06-02T19:31:26Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(run)) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/5762/buggy-version/src.main.java.net.usikkert.kouchat.net.ConnectionWorker.java", "BodyUseAPI": [], "Fixed commit": "b4a413fdcb4efe192713cf564e4486995f3fa261", "Url": "https://api.github.com/repos/blurpy/kouchat", "Date": "2014-05-01T09:13:43Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((lname == null) || (lname.isEmpty())) lname = \"____\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/6800/buggy-version/SimpleServer.src.juniors.server.ext.web.ui.handlers.RegistrationHandler.java", "BodyUseAPI": [], "Fixed commit": "ab1e0bdc7fcbf046d06b626441e502e4b7296e27", "Url": "https://api.github.com/repos/BkService/Release", "Date": "2013-12-05T21:49:18Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((term.indexOf(':')) == (-1)) { java.lang.String newTerm = \"\"; for (java.lang.String field : fields) { if ((newTerm.length()) > 0) newTerm += \" \"; newTerm += (field + \":\") + term; } result.add(newTerm); }else { result.add(term); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/7103/buggy-version/components.common.src.ome.util.search.LuceneQueryBuilder.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "d47eb7265678685f0f97ae9f932ac9c037408351", "Url": "https://api.github.com/repos/dominikl/openmicroscopy", "Date": "2015-02-26T10:05:40Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getListAdapter().getItem(info.position)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(cursor.moveToNext())) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/3974/buggy-version/src.com.axelby.podax.ui.QueueFragment.java", "BodyUseAPI": [], "Fixed commit": "9e41d157f84aa061159b9cc5bf4cb24b6903a4cc", "Url": "https://api.github.com/repos/DavidEGx/Podax", "Date": "2012-10-26T21:44:05Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.line) > 0) { consumer.consume(line, ((sb.length()) > 0 ? lineMd5Digest.digest(sb.toString().getBytes(Charsets.UTF_8)) : null)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/1125/buggy-version/sonar-plugin-api.src.main.java.org.sonar.api.batch.fs.internal.FileMetadata.java", "BodyUseAPI": [], "Fixed commit": "5cfd5f674d24b304db1ded615ee371905593fd40", "Url": "https://api.github.com/repos/SonarSource/sonarqube", "Date": "2015-04-08T08:12:04Z"},
{"Line": "=>1238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lastLocation) != null) { lastLocation = lastLocation.clone(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/3060/buggy-version/Magic.src.main.java.com.elmakers.mine.bukkit.magic.Mage.java", "BodyUseAPI": [], "Fixed commit": "9b98e3d4c5b9ad254ef8fe964a1c67e6c76b41a0", "Url": "https://api.github.com/repos/elBukkit/MagicPlugin", "Date": "2017-05-01T14:33:38Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (tmpTime != 0) { this.startTime.add(new java.util.Date(tmpTime)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/6013/buggy-version/app.src.main.java.com.example.BehaveMonitor.Session.java", "BodyUseAPI": [], "Fixed commit": "ded2aed599c43608f3ac6afe69a6f6c966dab696", "Url": "https://api.github.com/repos/bjdx/BehaveMonitor", "Date": "2015-03-15T19:28:30Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (null != fragment) { this.runOnUiThread(new java.lang.Runnable() { @java.lang.Override public void run() { recreateFragmentView(fragment); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/7858/buggy-version/src.org.openmrs.mobile.activities.PatientDashboardActivity.java", "BodyUseAPI": ["org.openmrs.mobile.activities.PatientDashboardActivity.runOnUiThread(java.lang.Runnable)", "org.openmrs.mobile.activities.PatientDashboardActivity.3.recreateFragmentView(android.support.v4.app.Fragment)"], "Fixed commit": "46912d7ec31fdb26ea6ca22d6345e3bc613adda4", "Url": "https://api.github.com/repos/ehaligowska/openmrs-contrib-android-client", "Date": "2015-02-02T15:52:43Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (inputDate.equals(\"\")) return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/5604/buggy-version/app.src.main.java.com.logisticsmarketplace.android.driver.Utility.java", "BodyUseAPI": [], "Fixed commit": "707a5c0bdc8e1a99e6dd227278f8e57e8987ff1c", "Url": "https://api.github.com/repos/davidcast95/HTDriver", "Date": "2017-10-10T03:18:21Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (inputDate == null) return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/5604/buggy-version/app.src.main.java.com.logisticsmarketplace.android.driver.Utility.java", "BodyUseAPI": [], "Fixed commit": "707a5c0bdc8e1a99e6dd227278f8e57e8987ff1c", "Url": "https://api.github.com/repos/davidcast95/HTDriver", "Date": "2017-10-10T03:18:21Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(response.equalsIgnoreCase(\"0 results\"))) { putStudent(response); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/3300/buggy-version/app.src.main.java.edu.umd.cs.queuelist.service.impl.InMemoryStudentService.java", "BodyUseAPI": ["edu.umd.cs.queuelist.service.impl.InMemoryStudentService.getStudent.putStudent(java.lang.String)"], "Fixed commit": "e8df6c2585869da7b5d76997d5911b03cce4554b", "Url": "https://api.github.com/repos/jihoonok/QueueList", "Date": "2017-04-08T23:31:33Z"},
{"Line": "=>422", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.crate.operation.join.RowReceiver.setNextRow(io.crate.operation.join.NestedLoopOperation.CombinedRow)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (result == (Result.STOP)) { stop = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/4936/buggy-version/sql.src.main.java.io.crate.operation.join.NestedLoopOperation.java", "BodyUseAPI": [], "Fixed commit": "1f0a1198e9760d55133315e207353208e20b2a14", "Url": "https://api.github.com/repos/crate/crate", "Date": "2016-09-22T08:55:47Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((values.get(0)) == \"\") { values.remove(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/1143/buggy-version/application.app.src.main.java.com.awakeland.websitechange.SiteEdit.java", "BodyUseAPI": ["java.util.List.remove(int)"], "Fixed commit": "5c347825eeec11107d42948bd589a4a30bcb8fbf", "Url": "https://api.github.com/repos/drulm/Website_Change", "Date": "2017-02-04T22:47:38Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.plugin.core.PluginRegistry<org.zalando.planb.provider.realms.RealmPlugin, java.lang.String>.getPluginFor(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (plugin == null) { return new org.zalando.planb.provider.TestRealm(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/2690/buggy-version/src.main.java.org.zalando.planb.provider.RealmConfig.java", "BodyUseAPI": [], "Fixed commit": "8fdb874fc72de30264f8629f3fc566afc4bdebd5", "Url": "https://api.github.com/repos/zalando-stups/planb-provider", "Date": "2016-02-12T16:27:25Z"},
{"Line": "=>1822", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dayLength <= 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/5426/buggy-version/src.main.java.micdoodle8.mods.galacticraft.core.util.WorldUtil.java", "BodyUseAPI": [], "Fixed commit": "a920a79704146590fdc79fade3ff83fb4ea519c0", "Url": "https://api.github.com/repos/micdoodle8/Galacticraft", "Date": "2017-06-06T21:56:20Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (persistent()) container.activate(req, 1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/6524/buggy-version/src.freenet.client.async.ClientRequestSchedulerBase.java", "BodyUseAPI": [], "Fixed commit": "2946ad84226ddc617f73c6420f0a9b1627b90315", "Url": "https://api.github.com/repos/freenet/fred", "Date": "2011-07-27T17:54:09Z"},
{"Line": "=>404", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (k.getValue().startsWith(\"SHFT_T(\")) { value = value.substring(7, ((value.length()) - 1)); try { de.caluga.ergodox.ErgodoxKeyCode c = de.caluga.ergodox.ErgodoxKeyCode.valueOf(value); } catch (java.lang.IllegalArgumentException e) { unknownKeyCodeAlert(value); } }else if (((((k.getValue().startsWith(\"GUI_T(\")) || (k.getValue().startsWith(\"ALT_T(\"))) || (k.getValue().startsWith(\"CTL_T(\"))) || (k.getValue().startsWith(\"ALL_T(\"))) || (k.getValue().startsWith(\"MEH_T(\"))) { value = value.substring(6, ((value.length()) - 1)); try { de.caluga.ergodox.ErgodoxKeyCode c = de.caluga.ergodox.ErgodoxKeyCode.valueOf(value); } catch (java.lang.IllegalArgumentException e) { unknownKeyCodeAlert(value); } }else if ((k.getValue().startsWith(\"KC_FN\")) || (k.getValue().startsWith(\"F(\"))) { new javafx.scene.control.Alert(Alert.AlertType.WARNING, (\"There is no support for FN-Keys! Do not write this layout, you will lose functionality!\\nYou can easily recreate the functionality using macros\\nKey set to: \" + (k.getValue())), javafx.scene.control.ButtonType.CLOSE).showAndWait(); }else if (k.getValue().contains(\"(\")) { javafx.scene.control.Alert a = new javafx.scene.control.Alert(Alert.AlertType.WARNING, ((\"WARNING: Unsupported function call \" + (k.getValue())) + \"\\nmight cause problems, when saving!\"), javafx.scene.control.ButtonType.CLOSE); a.showAndWait(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/8450/buggy-version/src.main.java.de.caluga.ergodox.KeymapParser.java", "BodyUseAPI": ["k.getValue().startsWith(java.lang.String)", "de.caluga.ergodox.Key.getValue()", "de.caluga.ergodox.Key.getValue()", "de.caluga.ergodox.Key.getValue()", "k.getValue().startsWith(java.lang.String)", "k.getValue().startsWith(java.lang.String)", "de.caluga.ergodox.Key.getValue()", "de.caluga.ergodox.Key.getValue()", "de.caluga.ergodox.Key.getValue()", "k.getValue().startsWith(java.lang.String)", "de.caluga.ergodox.Key.getValue()", "de.caluga.ergodox.Key.getValue()", "k.getValue().startsWith(java.lang.String)", "de.caluga.ergodox.Key.getValue()", "k.getValue().startsWith(java.lang.String)", "k.getValue().contains(java.lang.String)", "javafx.scene.control.Alert.showAndWait()", "k.getValue().startsWith(java.lang.String)", "de.caluga.ergodox.Key.getValue()"], "Fixed commit": "6a4394f517e016abe1cd7d878a9df80f3ec17b59", "Url": "https://api.github.com/repos/sboesebeck/ErgodoxLayoutGenerator", "Date": "2016-05-25T21:48:16Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (date.isEmpty()) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/6359/buggy-version/src.dotdotdot.Logic.java", "BodyUseAPI": [], "Fixed commit": "f171c5a8ac9d3a5b855f92f7cf387f6b1646ba94", "Url": "https://api.github.com/repos/cs2103jan2016-f14-1j/main", "Date": "2016-02-21T07:18:46Z"},
{"Line": "=>1960", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((lexer.token()) != (com.alibaba.druid.sql.parser.Token.COMMA)) && ((lexer.token()) != (com.alibaba.druid.sql.parser.Token.RPAREN))) { expr = this.exprParser.exprRest(expr); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/2187/buggy-version/src.main.java.com.alibaba.druid.sql.dialect.mysql.parser.MySqlStatementParser.java", "BodyUseAPI": [], "Fixed commit": "1180ae458804d14071f25ecbe11a2a048b502667", "Url": "https://api.github.com/repos/mosoft521/druid", "Date": "2014-06-27T06:20:04Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.lang.Integer, java.lang.Integer>.getKey()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((map.get(num)) > 1) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/1773/buggy-version/src.com.leetcode.www.TwoSumIII.java", "BodyUseAPI": [], "Fixed commit": "809aecefdc8d51a3bf7409b69797195567702995", "Url": "https://api.github.com/repos/yao23/Java_Playground", "Date": "2017-10-01T18:08:09Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((res.length()) > 2) m.setMessage(sb.toString().trim().substring(2));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/7719/buggy-version/src.dreamhackbotpro.filters.ListFilter.java", "BodyUseAPI": [], "Fixed commit": "28123d66909c2bd7f35409a11a4cc3abb6e52c41", "Url": "https://api.github.com/repos/RAMPKORV/Benis", "Date": "2011-07-26T19:44:51Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.TreeMap.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (tempWord == null) { translated_message = (translated_message + \" \") + ((java.lang.String) (temp)); }else { translated_message = (translated_message + \" \") + ((java.lang.String) (tempWord)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/5249/buggy-version/src.EarthTextAdaptor.java", "BodyUseAPI": [], "Fixed commit": "af09fb3790150a92e97aeaa4e68e528da11f6da2", "Url": "https://api.github.com/repos/ricardoalcaraz/Adaptor-Design-Patterns", "Date": "2017-11-08T23:18:38Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (c != null) { c.drawRect(0, 0, c.getWidth(), c.getHeight(), paint); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/2047/buggy-version/src.com.hunterdavis.thegrind.CanvasThread.java", "BodyUseAPI": ["android.graphics.Canvas.getHeight()", "android.graphics.Canvas.getWidth()", "android.graphics.Canvas.drawRect(int,int,c.getWidth(),c.getHeight(),android.graphics.Paint)"], "Fixed commit": "96d9f45d844bb10e664fc33b878a807d87d23aea", "Url": "https://api.github.com/repos/huntergdavis/The_Grind", "Date": "2012-12-08T22:46:09Z"},
{"Line": "=>827", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Class>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (java.lang.String.class.equals(c)) { s = (\"\\\"\" + s) + \"\\\"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/313/buggy-version/src.main.java.com.greenlaw110.rythm.template.TemplateBase.java", "BodyUseAPI": [], "Fixed commit": "8562766346b1aa9fdae1b1e3e11961a37c6c71f4", "Url": "https://api.github.com/repos/greenlaw110/Rythm", "Date": "2013-03-20T05:27:26Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.isValid())) { throw new InvalidValueException(\"Invalid value!\"); }else { return this.doubleValue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/2844/buggy-version/src.GeneralValue.java", "BodyUseAPI": [], "Fixed commit": "9e95a03db4b9ea94afb86898f82004233560a8e7", "Url": "https://api.github.com/repos/iamLoi/Projects-CS_2334", "Date": "2017-10-18T19:12:35Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.isValid()) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/2844/buggy-version/src.GeneralValue.java", "BodyUseAPI": [], "Fixed commit": "9e95a03db4b9ea94afb86898f82004233560a8e7", "Url": "https://api.github.com/repos/iamLoi/Projects-CS_2334", "Date": "2017-10-18T19:12:35Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["lab4.substituteCharacters(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((tree.findSuffix(possibleStrings.get(i))) != (-1)) { outputBufferWriter.write((\"Matches: \" + (tree.findSuffix(possibleStrings.get(i))))); outputBufferWriter.newLine(); outputBufferWriter.write((\"\" + (dnaSequence.toString().indexOf(possibleStrings.get(i))))); outputBufferWriter.newLine(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/4321/buggy-version/Lab4.src.lab4.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.get(int)", "SuffixTree.findSuffix(java.lang.String)", "java.lang.String.indexOf(java.lang.String)", "java.io.BufferedWriter.write(java.lang.String)", "java.io.BufferedWriter.write((\"Matches: \" + (tree.findSuffix(possibleStrings.get(i)))))", "java.util.ArrayList<java.lang.String>.get(int)"], "Fixed commit": "f09533f514d15cca7857818803abd44f5c35c9d2", "Url": "https://api.github.com/repos/jtang22/448Labs", "Date": "2015-10-29T22:13:57Z"},
{"Line": "=>795", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(team_ids.contains(team_id_string))) { team_ids.add(team_id_string); java.lang.System.out.println(((\"team json: \" + json) + \"\\n\")); team_id = java.lang.Long.parseLong(team_id_string); teams.add(new com.example.dustin.cs495helloworld.Team(team_id, json.getString(\"name\"), users)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/442/buggy-version/app.src.main.java.com.example.dustin.cs495helloworld.Tables.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)", "java.lang.Long.parseLong(java.lang.String)"], "Fixed commit": "2fe9c39f8a472548ecfcb539932b2e5dc44b2a9a", "Url": "https://api.github.com/repos/healthy-u/healthyu", "Date": "2017-04-27T18:15:55Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((grid.get(selectedDecTile).getDecorations().size()) <= (selectedDecIndex)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/1446/buggy-version/src.main.java.TileMapEditor.Tiles.TileMap.java", "BodyUseAPI": [], "Fixed commit": "05c779758d401e1d0409e07abd5a3d618372abe6", "Url": "https://api.github.com/repos/colaxgutten/Tilemap", "Date": "2017-01-20T08:40:27Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((AdvancedXP.instance.theme) != null) { java.lang.String tempFileNameStorage = AdvancedXP.instance.theme.fileName; AdvancedXP.instance.theme = co.bugg.advancedxp.util.FileUtil.deserializeTheme(new java.io.File(((AdvancedXP.instance.themesPath) + tempFileNameStorage))); AdvancedXP.instance.theme.fileName = tempFileNameStorage; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/3771/buggy-version/src.main.java.co.bugg.advancedxp.AdvancedXPEventHandler.java", "BodyUseAPI": [], "Fixed commit": "a13afd05576392914d3ed72d5d26c07574dc29ef", "Url": "https://api.github.com/repos/bugfroggy/AdvancedXP", "Date": "2017-09-28T01:18:26Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.ucchyocean.ct.ColorTeaming.getPlayerColor(org.bukkit.entity.Entity)", "com.github.ucchyocean.ct.ColorTeaming.getPlayerColor(org.bukkit.entity.LivingEntity)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((attackerColor.equals(\"\")) || (defenderColor.equals(\"\"))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/5734/buggy-version/src.main.java.com.github.ucchyocean.ct.listener.EntityDamageListener.java", "BodyUseAPI": [], "Fixed commit": "18302d021cfe0e7cbc0d0ac88fac15e5e5e521eb", "Url": "https://api.github.com/repos/ucchyocean/ColorTeaming", "Date": "2013-04-16T18:48:13Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.ucchyocean.ct.ColorTeaming.getPlayerColor(org.bukkit.entity.Entity)", "com.github.ucchyocean.ct.ColorTeaming.getPlayerColor(org.bukkit.entity.Entity)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((attackerColor.equals(\"\")) || (defenderColor.equals(\"\"))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/5734/buggy-version/src.main.java.com.github.ucchyocean.ct.listener.EntityDamageListener.java", "BodyUseAPI": [], "Fixed commit": "18302d021cfe0e7cbc0d0ac88fac15e5e5e521eb", "Url": "https://api.github.com/repos/ucchyocean/ColorTeaming", "Date": "2013-04-16T18:48:13Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ocsoft.olivia.models.file.OliviaFile.create(java.io.File)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(projectPath.exists())) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/8416/buggy-version/src.main.java.org.ocsoft.olivia.contexts.ProjectContext.java", "BodyUseAPI": [], "Fixed commit": "8752c7bb72330d1a425b64498f0d4313e434bad0", "Url": "https://api.github.com/repos/tohhy/olivia-core", "Date": "2015-01-27T14:37:27Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (iValue instanceof com.orientechnologies.orient.core.db.record.OIdentifiable) { final com.orientechnologies.orient.core.db.record.OIdentifiable linked = ((com.orientechnologies.orient.core.db.record.OIdentifiable) (iValue)); if (linked.getIdentity().isValid()) { buffer.append('\\\"'); linked.getIdentity().toString(buffer); buffer.append('\\\"'); }else { if ((iFormat != null) && (iFormat.contains(\"shallow\"))) buffer.append(\"{}\"); else buffer.append(linked.getRecord().toJSON(iFormat)); } }else if (iValue.getClass().isArray()) { if (iValue instanceof byte[]) { buffer.append('\\\"'); final byte[] source = ((byte[]) (iValue)); if ((iFormat != null) && (iFormat.contains(\"shallow\"))) buffer.append(source.length); else buffer.append(com.orientechnologies.orient.core.serialization.OBase64Utils.encodeBytes(source)); buffer.append('\\\"'); }else { buffer.append('['); int size = java.lang.reflect.Array.getLength(iValue); if ((iFormat != null) && (iFormat.contains(\"shallow\"))) buffer.append(size); else for (int i = 0; i < size; ++i) { if (i > 0) buffer.append(\",\"); buffer.append(com.orientechnologies.orient.core.serialization.serializer.OJSONWriter.writeValue(java.lang.reflect.Array.get(iValue, i), iFormat)); } buffer.append(']'); } }else if (iValue instanceof java.util.Iterator<?>) com.orientechnologies.orient.core.serialization.serializer.OJSONWriter.iteratorToJSON(((java.util.Iterator<?>) (iValue)), iFormat, buffer); else if (iValue instanceof java.lang.Iterable<?>) com.orientechnologies.orient.core.serialization.serializer.OJSONWriter.iteratorToJSON(((java.lang.Iterable<?>) (iValue)).iterator(), iFormat, buffer); else if (iValue instanceof java.util.Map<?, ?>) com.orientechnologies.orient.core.serialization.serializer.OJSONWriter.mapToJSON(((java.util.Map<java.lang.Object, java.lang.Object>) (iValue)), iFormat, buffer); else if (iValue instanceof java.util.Map.Entry<?, ?>) { final java.util.Map.Entry<?, ?> entry = ((java.util.Map.Entry<?, ?>) (iValue)); buffer.append('{'); buffer.append(com.orientechnologies.orient.core.serialization.serializer.OJSONWriter.writeValue(entry.getKey(), iFormat)); buffer.append(\":\"); buffer.append(com.orientechnologies.orient.core.serialization.serializer.OJSONWriter.writeValue(entry.getValue(), iFormat)); buffer.append('}'); }else if (iValue instanceof java.util.Date) { if ((iFormat.indexOf(\"dateAsLong\")) > (-1)) buffer.append(((java.util.Date) (iValue)).getTime()); else { buffer.append('\"'); buffer.append(com.orientechnologies.orient.core.util.ODateHelper.getDateTimeFormatInstance().format(iValue)); buffer.append('\"'); } }else if (iValue instanceof java.math.BigDecimal) buffer.append(((java.math.BigDecimal) (iValue)).toPlainString()); else if (iValue instanceof com.orientechnologies.orient.core.db.record.ORecordLazyMultiValue) com.orientechnologies.orient.core.serialization.serializer.OJSONWriter.iteratorToJSON(((com.orientechnologies.orient.core.db.record.ORecordLazyMultiValue) (iValue)).rawIterator(), iFormat, buffer); else if (iValue instanceof java.lang.Iterable<?>) com.orientechnologies.orient.core.serialization.serializer.OJSONWriter.iteratorToJSON(((java.lang.Iterable<?>) (iValue)).iterator(), iFormat, buffer); else { final java.lang.String v = iValue.toString(); buffer.append('\"'); buffer.append(com.orientechnologies.orient.core.serialization.serializer.OJSONWriter.encode(v)); buffer.append('\"'); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/7939/buggy-version/core.src.main.java.com.orientechnologies.orient.core.serialization.serializer.OJSONWriter.java", "BodyUseAPI": ["com.orientechnologies.orient.core.util.ODateHelper.getDateTimeFormatInstance().format(java.lang.Object)", "java.lang.Object.getClass()", "java.lang.StringBuilder.append(com.orientechnologies.orient.core.util.ODateHelper.getDateTimeFormatInstance().format(iValue))", "java.lang.Class<? extends java.lang.Object>.isArray()", "java.lang.reflect.Array.get(java.lang.Object,int)", "com.orientechnologies.orient.core.serialization.serializer.OJSONWriter.writeValue(java.lang.Object,java.lang.String)", "java.lang.Object.toString()", "java.lang.reflect.Array.getLength(java.lang.Object)", "java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "f4b3695cac4e23b258df3f3a8bb26ae5fb38eb64", "Url": "https://api.github.com/repos/kowalot/orientdb", "Date": "2014-04-17T14:40:08Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((type) == (com.smanzana.templateeditor.data.SimpleFieldData.FieldType.LIST_DOUBLE)) { java.util.List<com.smanzana.templateeditor.data.SimpleFieldData> list = ((java.util.List<com.smanzana.templateeditor.data.SimpleFieldData>) (value)); java.util.List<java.lang.Double> newlist = new java.util.ArrayList<>(list.size()); for (com.smanzana.templateeditor.data.SimpleFieldData d : list) { newlist.add(((java.lang.Double) (d.getValue()))); } realValue = newlist; }else if ((type) == (com.smanzana.templateeditor.data.SimpleFieldData.FieldType.LIST_STRING)) { java.util.List<com.smanzana.templateeditor.data.SimpleFieldData> list = ((java.util.List<com.smanzana.templateeditor.data.SimpleFieldData>) (value)); java.util.List<java.lang.String> newlist = new java.util.ArrayList<>(list.size()); for (com.smanzana.templateeditor.data.SimpleFieldData d : list) { newlist.add(((java.lang.String) (d.getValue()))); } realValue = newlist; }else if ((type) == (com.smanzana.templateeditor.data.SimpleFieldData.FieldType.LIST_INT)) { java.util.List<com.smanzana.templateeditor.data.SimpleFieldData> list = ((java.util.List<com.smanzana.templateeditor.data.SimpleFieldData>) (value)); java.util.List<java.lang.Integer> newlist = new java.util.ArrayList<>(list.size()); for (com.smanzana.templateeditor.data.SimpleFieldData d : list) { newlist.add(((java.lang.Integer) (d.getValue()))); } realValue = newlist; }else { realValue = value; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/1549/buggy-version/src.com.smanzana.templateeditor.data.SimpleFieldData.java", "BodyUseAPI": [], "Fixed commit": "0271d1863c02c62def10897432a2139bcf9a8050", "Url": "https://api.github.com/repos/Dove-Bren/TemplateEditor", "Date": "2017-10-23T00:09:04Z"},
{"Line": "=>550", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (url.endsWith(\"/\")) { url = url.substring(0, ((url.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/4573/buggy-version/src.main.java.org.giiwa.framework.web.Model.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "5fc7e31fb67aa9cc4ea4981d0111b44fe5c99a65", "Url": "https://api.github.com/repos/giiwa/giiwa", "Date": "2016-06-23T00:51:03Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (w != null) { w.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/5504/buggy-version/esup-opi-domain-services.src.main.java.org.esupportail.opi.services.export.CastorService.java", "BodyUseAPI": ["java.io.Writer.close()"], "Fixed commit": "76a0d6a17dc884211400b5ebf16118abdef75f1d", "Url": "https://api.github.com/repos/EsupPortail/esup-opi", "Date": "2013-01-22T07:57:02Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.nikr.eve.jeveasset.io.esi.AbstractEsiGetter.updateApi(net.nikr.eve.jeveasset.io.esi.AbstractEsiGetter.EsiPageUpdater<K>,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (returnValue != null) { values.addAll(returnValue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/1710/buggy-version/src.main.java.net.nikr.eve.jeveasset.io.esi.AbstractEsiGetter.java", "BodyUseAPI": ["java.util.List<K>.addAll(java.util.List<K>)"], "Fixed commit": "8871d3629a9bf2d23a437dda0ff38cc35bf71fc9", "Url": "https://api.github.com/repos/GoldenGnu/jeveassets", "Date": "2017-10-13T06:10:10Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eu.modernmt.model.Alignment.iterator()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (iterator.hasNext()) pair = iterator.next(); else break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/5455/buggy-version/src.decoder-neural.src.main.java.eu.modernmt.decoder.neural.bpe.SubwordTextProcessor.java", "BodyUseAPI": ["java.util.Iterator<int[]>.next()"], "Fixed commit": "88e4bab97ce753df25ef4f435d1055e3d0fd0a6a", "Url": "https://api.github.com/repos/ModernMT/MMT", "Date": "2017-12-27T16:26:40Z"},
{"Line": "=>866", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getTopicType()) == (org.jboss.pressgang.ccms.contentspec.enums.TopicType.LEVEL)) { return ((org.jboss.pressgang.ccms.contentspec.Level) (getParent())).getUniqueLinkId(useFixedUrls); }else { final java.lang.String topicXRefId; if ((topic) instanceof org.jboss.pressgang.ccms.rest.v1.entities.RESTTranslatedTopicV1) { if (useFixedUrls) topicXRefId = org.jboss.pressgang.ccms.rest.v1.components.ComponentTranslatedTopicV1.returnXrefPropertyOrId(((org.jboss.pressgang.ccms.rest.v1.entities.RESTTranslatedTopicV1) (topic)), CommonConstants.FIXED_URL_PROP_TAG_ID); else { topicXRefId = org.jboss.pressgang.ccms.rest.v1.components.ComponentTranslatedTopicV1.returnXRefID(((org.jboss.pressgang.ccms.rest.v1.entities.RESTTranslatedTopicV1) (topic))); } }else { if (useFixedUrls) topicXRefId = org.jboss.pressgang.ccms.rest.v1.components.ComponentTopicV1.returnXrefPropertyOrId(((org.jboss.pressgang.ccms.rest.v1.entities.RESTTopicV1) (topic)), CommonConstants.FIXED_URL_PROP_TAG_ID); else { topicXRefId = org.jboss.pressgang.ccms.rest.v1.components.ComponentTopicV1.returnXRefID(((org.jboss.pressgang.ccms.rest.v1.entities.RESTTopicV1) (topic))); } } return topicXRefId + ((duplicateId) == null ? \"\" : \"-\" + (duplicateId)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/8990/buggy-version/src.main.java.org.jboss.pressgang.ccms.contentspec.SpecTopic.java", "BodyUseAPI": [], "Fixed commit": "4f86eb58d0191a90bd6f423e80785d8166d74467", "Url": "https://api.github.com/repos/pressgang-ccms/PressGangCCMSContentSpec", "Date": "2013-05-31T01:43:59Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((beaconService) == null) { setupBeaconService(); }else { beaconService.checkBeaconScanner(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/8219/buggy-version/app.src.main.java.pro.scanna.ScannaApp.java", "BodyUseAPI": [], "Fixed commit": "65a8c7c1abac3d4a5c78659f65a658f5f12b5bf0", "Url": "https://api.github.com/repos/gtanyware/ScannaPro", "Date": "2016-12-12T20:14:46Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((holes[mobileapp.wahoogame.Hole.FindHole(current.holes[0])].getColor()) == (current.getColor())) return 666; else tempNewHole = current.holes[0];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/6931/buggy-version/app.src.main.java.mobileapp.wahoogame.GameBoard.java", "BodyUseAPI": [], "Fixed commit": "0c683a3cd432eb51b752329f2e36e75ddfa84365", "Url": "https://api.github.com/repos/drewdemechko/WahooGame", "Date": "2015-08-17T03:14:54Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (embeddedDocumentObject != null) com.impetus.kundera.property.PropertyAccessorHelper.set(entity, embeddedField, com.impetus.client.rdbms.HibernateUtils.getObjectFromDocument(metamodel, ((java.util.Map<java.lang.String, java.lang.Object>) (embeddedDocumentObject)), embeddable.getAttributes(), obj));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/8074/buggy-version/src.kundera-rdbms.src.main.java.com.impetus.client.rdbms.HibernateUtils.java", "BodyUseAPI": [], "Fixed commit": "5fa4e328cb40904e4b733e4c501715bf94dde8a9", "Url": "https://api.github.com/repos/impetus-opensource/Kundera", "Date": "2014-01-31T05:41:31Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.geogit.api.plumbing.RefParse.getRef(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(target.isPresent())) { throw new java.lang.RuntimeException((storedValue + \" was not present.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/7431/buggy-version/src.core.src.main.java.org.geogit.api.plumbing.RefParse.java", "BodyUseAPI": [], "Fixed commit": "25a5c6278c516b4305710f3ceb528d36cb00601c", "Url": "https://api.github.com/repos/kelseyishmael/GeoGit", "Date": "2013-01-31T23:50:24Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getGom().createFuture(com.actemium.basicTvx_sdk.ManagerChargementEnProfondeur,java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (future == null) compteurdeTaches.oneTaskCompleted(); else mapFutureToObject.put(future, o);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/4112/buggy-version/src.main.java.com.actemium.basicTvx_sdk.ManagerChargementEnProfondeur.java", "BodyUseAPI": ["java.util.Map<java.util.concurrent.Future<java.lang.Object>, java.lang.Object>.put(java.util.concurrent.Future<java.lang.Object>,java.lang.Object)"], "Fixed commit": "28884027d2c31ad383504c9678385be32caeb050", "Url": "https://api.github.com/repos/tiparry/sdkBasicT", "Date": "2017-03-31T15:40:21Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tokenSpan.getSentenceIndex()) < 0) { output.add(edu.cmu.ml.rtw.generic.data.feature.fn.FnSentencePosition.Position.NONE.toString()); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/9280/buggy-version/src.main.java.edu.cmu.ml.rtw.generic.data.feature.fn.FnSentencePosition.java", "BodyUseAPI": [], "Fixed commit": "309504a7634c0cdf3071e17e7594f580fd57fa2d", "Url": "https://api.github.com/repos/cmunell/micro-util", "Date": "2016-03-18T03:18:56Z"},
{"Line": "=>326", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jinstagram.entity.users.feed.MediaFeedData.getComments()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (comments != null) { for (org.jinstagram.entity.comments.CommentData commentData : comments.getComments()) { commentsConcat += \" \" + (commentData.getText()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/7015/buggy-version/streams-contrib.streams-provider-instagram.src.main.java.org.apache.streams.instagram.serializer.util.InstagramActivityUtil.java", "BodyUseAPI": ["org.apache.streams.instagram.serializer.util.Comments.getComments()"], "Fixed commit": "8c45159b0e034c533a6836bc5d23f83a02395af5", "Url": "https://api.github.com/repos/rbnks/incubator-streams", "Date": "2014-09-22T22:23:59Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((checker.shouldRunRatioCalc()) && (!(validator.validateRatioCalculation(parameters[6])))) { isOk = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/4525/buggy-version/src.process.classes.RawToProfileConverter.java", "BodyUseAPI": [], "Fixed commit": "93e1d38e370b3df99881c8ba5b617461d5c3b8ec", "Url": "https://api.github.com/repos/genomizer/genomizer-server", "Date": "2014-05-26T12:51:59Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((checker.shouldRunStep()) && (!(validator.validateStep(parameters[5])))) { isOk = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/4525/buggy-version/src.process.classes.RawToProfileConverter.java", "BodyUseAPI": [], "Fixed commit": "93e1d38e370b3df99881c8ba5b617461d5c3b8ec", "Url": "https://api.github.com/repos/genomizer/genomizer-server", "Date": "2014-05-26T12:51:59Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.osgi.service.cm.ConfigurationAdmin.listConfigurations(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (configs != null) { for (org.osgi.service.cm.Configuration config : configs) { java.util.Enumeration<java.lang.String> keys = config.getProperties().keys(); while (keys.hasMoreElements()) { java.lang.String element = keys.nextElement(); allBypassObjectName.add(element); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/3116/buggy-version/management.server.src.main.java.org.apache.karaf.management.KarafMBeanServerGuard.java", "BodyUseAPI": [], "Fixed commit": "a2881fe114f64ea11085521683fa2587c88727b1", "Url": "https://api.github.com/repos/sobkowiak/karaf", "Date": "2014-08-23T06:22:00Z"},
{"Line": "=>374", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (width < (this.width)) { firstPartOfWord.append((\"\" + c)); firstPartWordWidth = java.lang.Math.max(width, firstPartWordWidth); }else { if (i == 0) { firstPartOfWord.append((\"\" + c)); for (int j = 1; j < (lastTextToken.length()); j++) { restOfTheWord.append((\"\" + (lastTextToken.charAt(j)))); } break; }else { restOfTheWord.append((\"\" + c)); restOfTheWordWidth = java.lang.Math.max(width, restOfTheWordWidth); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/2471/buggy-version/src.main.java.be.quodlibet.boxable.Paragraph.java", "BodyUseAPI": ["java.lang.Math.max(float,float)", "java.lang.Math.max(float,float)"], "Fixed commit": "90c797cdc86504f947145ed37ecb19939cfbc970", "Url": "https://api.github.com/repos/dhorions/boxable", "Date": "2016-06-02T18:38:21Z"},
{"Line": "=>385", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((files.size()) == 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/459/buggy-version/components.formats-common.src.loci.common.Location.java", "BodyUseAPI": [], "Fixed commit": "fc0b9d01ed1babb874b5a389e544d3c18f603147", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2014-04-25T07:46:10Z"},
{"Line": "=>434", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((item.node) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/8249/buggy-version/zigbee-api.src.main.java.org.bubblecloud.zigbee.network.discovery.LinkQualityIndicatorNetworkBrowser.java", "BodyUseAPI": [], "Fixed commit": "87776e078b4f9867e6b5ad556961629b276c65d7", "Url": "https://api.github.com/repos/cdjackson/zigbee4java", "Date": "2015-08-15T12:22:41Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (changed) { prevValue = get(entity); onUpdate(entity); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/543/buggy-version/src.main.java.com.oglcraft.oglmod.core.characteristic.buffable.BuffableBase.java", "BodyUseAPI": [], "Fixed commit": "2680a5bcc59978abb21249156c597f54eb80e22c", "Url": "https://api.github.com/repos/oglcraft/oglmod", "Date": "2016-05-17T21:01:26Z"},
{"Line": "=>2183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((candidates.size()) == 1) { coords = convertPointCoordinatesToWGS84(coords); }else { de.tub.citydb.api.geometry.GeometryObject geomObj = convertToWGS84(de.tub.citydb.api.geometry.GeometryObject.createCurve(coords, 3, dbSrs.getSrid())); coords = geomObj.getCoordinates(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/6398/buggy-version/src.de.tub.citydb.modules.kml.database.KmlGenericObject.java", "BodyUseAPI": [], "Fixed commit": "a14177820f38882a5ba4cc442123e9294a4552dc", "Url": "https://api.github.com/repos/3dcitydb/importer-exporter", "Date": "2014-04-16T13:32:43Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, org.joda.time.DateTimeZone>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (ret == null) { ret = org.joda.time.DateTimeZone.forID(zone); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/414/buggy-version/api.src.main.java.com.github.logview.util.DateUtil.java", "BodyUseAPI": [], "Fixed commit": "d5732b154d7de2419b2faf277d8e5083aac5d21d", "Url": "https://api.github.com/repos/logview/logview", "Date": "2012-04-23T13:32:03Z"},
{"Line": "=>361", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((currRestAsync.isResponseStatusSuccess()) == true) { result.put(locationType, new com.vangav.backend.data_structures_and_algorithms.tuple.Pair<java.lang.Integer, com.vangav.backend.networks.rest_client.RestResponseJson>(currRestAsync.getResponseStatusCode(), currRestAsync.getRestResponseJson())); }else { result.put(locationType, new com.vangav.backend.data_structures_and_algorithms.tuple.Pair<java.lang.Integer, com.vangav.backend.networks.rest_client.RestResponseJson>(currRestAsync.getResponseStatusCode(), new com.vangav.backend.public_apis.car2go.ErrorResponse(currRestAsync.getRawResponseString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/205/buggy-version/src.com.vangav.backend.public_apis.car2go.Car2GoApi.java", "BodyUseAPI": ["java.util.Map<com.vangav.backend.public_apis.car2go.LocationType, com.vangav.backend.data_structures_and_algorithms.tuple.Pair<java.lang.Integer, com.vangav.backend.networks.rest_client.RestResponseJson>>.put(com.vangav.backend.public_apis.car2go.LocationType,com.vangav.backend.data_structures_and_algorithms.tuple.Pair<java.lang.Integer, com.vangav.backend.networks.rest_client.RestResponseJson>)", "com.vangav.backend.networks.rest_client.RestAsync.getResponseStatusCode()", "com.vangav.backend.networks.rest_client.RestAsync.getRestResponseJson()", "java.util.Map<com.vangav.backend.public_apis.car2go.LocationType, com.vangav.backend.data_structures_and_algorithms.tuple.Pair<java.lang.Integer, com.vangav.backend.networks.rest_client.RestResponseJson>>.put(com.vangav.backend.public_apis.car2go.LocationType,com.vangav.backend.data_structures_and_algorithms.tuple.Pair<java.lang.Integer, com.vangav.backend.networks.rest_client.RestResponseJson>)", "com.vangav.backend.networks.rest_client.RestAsync.getRawResponseString()", "com.vangav.backend.networks.rest_client.RestAsync.getResponseStatusCode()"], "Fixed commit": "fafdd0afbe896287f31ef530b65e7fcfd682e3b4", "Url": "https://api.github.com/repos/vangav/vos_backend", "Date": "2017-01-27T10:28:50Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((currRestAsync.isResponseStatusSuccess()) == true) { result.put(locationType, new com.vangav.backend.data_structures_and_algorithms.tuple.Pair<java.lang.Integer, com.vangav.backend.networks.rest_client.RestResponseJson>(currRestAsync.getResponseStatusCode(), currRestAsync.getRestResponseJson())); }else { result.put(locationType, new com.vangav.backend.data_structures_and_algorithms.tuple.Pair<java.lang.Integer, com.vangav.backend.networks.rest_client.RestResponseJson>(currRestAsync.getResponseStatusCode(), new com.vangav.backend.public_apis.car2go.ErrorResponse(currRestAsync.getRawResponseString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/205/buggy-version/src.com.vangav.backend.public_apis.car2go.Car2GoApi.java", "BodyUseAPI": ["com.vangav.backend.networks.rest_client.RestAsync.getRestResponseJson()", "java.util.Map<com.vangav.backend.public_apis.car2go.LocationType, com.vangav.backend.data_structures_and_algorithms.tuple.Pair<java.lang.Integer, com.vangav.backend.networks.rest_client.RestResponseJson>>.put(com.vangav.backend.public_apis.car2go.LocationType,com.vangav.backend.data_structures_and_algorithms.tuple.Pair<java.lang.Integer, com.vangav.backend.networks.rest_client.RestResponseJson>)", "com.vangav.backend.networks.rest_client.RestAsync.getResponseStatusCode()", "java.util.Map<com.vangav.backend.public_apis.car2go.LocationType, com.vangav.backend.data_structures_and_algorithms.tuple.Pair<java.lang.Integer, com.vangav.backend.networks.rest_client.RestResponseJson>>.put(com.vangav.backend.public_apis.car2go.LocationType,com.vangav.backend.data_structures_and_algorithms.tuple.Pair<java.lang.Integer, com.vangav.backend.networks.rest_client.RestResponseJson>)", "com.vangav.backend.networks.rest_client.RestAsync.getRawResponseString()", "com.vangav.backend.networks.rest_client.RestAsync.getResponseStatusCode()"], "Fixed commit": "fafdd0afbe896287f31ef530b65e7fcfd682e3b4", "Url": "https://api.github.com/repos/vangav/vos_backend", "Date": "2017-01-27T10:28:50Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (obj == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/3588/buggy-version/src.gui.propertysheet.types.StringListProperty.java", "BodyUseAPI": [], "Fixed commit": "d0d7004baf2251e2c0c4a32fb142b4bbff99834e", "Url": "https://api.github.com/repos/zetool/components-property", "Date": "2015-09-13T00:06:14Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.DataInput.readUTF()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (molString.isEmpty()) { return new uk.ac.ebi.mdk.domain.annotation.AtomContainerAnnotation(new org.openscience.cdk.AtomContainer()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/7220/buggy-version/io.annotation-data-io.src.main.java.uk.ac.ebi.mdk.io.annotation.AtomContainerAnnotationReader.java", "BodyUseAPI": [], "Fixed commit": "f30287562de320f208c6a32df1df1a2534f84599", "Url": "https://api.github.com/repos/johnmay/mdk", "Date": "2012-05-15T12:28:53Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mage.game.Game.getCard(targetPointer.getFirst(game, source))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (stackCard == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/8926/buggy-version/Mage.Sets.src.mage.sets.alarareborn.MaelstromNexus.java", "BodyUseAPI": [], "Fixed commit": "eaba56568d89f3ebf7684e7ac11aa0a80ee2ef79", "Url": "https://api.github.com/repos/magefree/mage", "Date": "2013-09-07T05:51:29Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jenkinsci.plugins.github.webhook.WebhookManager.triggerFrom(hudson.model.Job<?, ?>,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (trigger != null) { projectSecret = trigger.getSharedSecret(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/6760/buggy-version/src.main.java.org.jenkinsci.plugins.github.webhook.WebhookManager.java", "BodyUseAPI": ["com.cloudbees.jenkins.GitHubTrigger.getSharedSecret()"], "Fixed commit": "b7b31d23afa014182262abb99b95e94a2689c6cf", "Url": "https://api.github.com/repos/martinmine/github-plugin", "Date": "2016-07-07T08:07:02Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mustSearchVariation.get(i).getAnnotation()) == null) { mustSearchVariation.get(i).setAnnotation(new org.opencb.cellbase.core.variant.annotation.VariantAnnotation()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/3132/buggy-version/cellbase-core.src.main.java.org.opencb.cellbase.core.variant.annotation.VariantAnnotationCalculator.java", "BodyUseAPI": ["java.util.List<org.opencb.biodata.models.variant.Variant>.get(int)", "mustSearchVariation.get(i).setAnnotation(org.opencb.cellbase.core.variant.annotation.VariantAnnotation)"], "Fixed commit": "ac78f1e105928d73c2dfe0b120e35e8c45e0d3ff", "Url": "https://api.github.com/repos/opencb/cellbase", "Date": "2016-06-29T13:04:42Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((worldObj) != null) worldObj.markBlockForUpdate(xCoord, yCoord, zCoord);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/1254/buggy-version/src.main.java.com.dynious.refinedrelocation.tileentity.TilePowerLimiter.java", "BodyUseAPI": [], "Fixed commit": "7d9ccc1e520f5ac5deea1d92ee1c4a9b34d9333f", "Url": "https://api.github.com/repos/Dynious/RefinedRelocation", "Date": "2014-06-12T16:03:02Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Object.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (object instanceof java.lang.String) { scimResourceString = ((org.json.JSONArray) (resources)).getString(i); }else if (object instanceof org.json.JSONObject) { scimResourceString = ((org.json.JSONArray) (resources)).getJSONObject(i).toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/91/buggy-version/modules.charon-core.src.main.java.org.wso2.charon.core.encoder.json.JSONDecoder.java", "BodyUseAPI": [], "Fixed commit": "35b6d2c53e3ac2462e258a52f4e0c8dc32517ad1", "Url": "https://api.github.com/repos/wso2/charon", "Date": "2015-12-16T13:31:21Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (sender.isConnected()) { if (o instanceof bgsep.model.Button) { bgsep.model.Button button = ((bgsep.model.Button) (o)); sender.send(((byte) (button.getButtonID())), button.isPressed()); }else if (((o instanceof bgsep.model.JoystickHandler) || (o instanceof bgsep.model.Gyro)) && (obj instanceof bgsep.communication.CommunicationNotifier)) { bgsep.communication.CommunicationNotifier cn = ((bgsep.communication.CommunicationNotifier) (obj)); sender.send(((byte) (cn.id)), cn.value); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V83/3899/buggy-version/VirtualGamepad.src.bgsep.communication.Communication.java", "BodyUseAPI": ["bgsep.communication.Sender.send(((byte) (cn.id)),cn.value)", "bgsep.communication.Sender.send(((byte) (button.getButtonID())),button.isPressed())"], "Fixed commit": "930b51258e8a2935d9cfb08416794d286d612312", "Url": "https://api.github.com/repos/golvmopp/BGSEP", "Date": "2013-10-18T12:44:39Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.BufferedReader.readLine()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (readLine.equals(\"|next|\")) stop = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/5105/buggy-version/src.main.java.com.louddoor.hbase_streaming.StreamingJob.java", "BodyUseAPI": [], "Fixed commit": "67a68e62b854caa7e7a752a537dfc2b0f45da047", "Url": "https://api.github.com/repos/srnice/hbase-streaming", "Date": "2013-09-26T05:56:05Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((day) == 29) && ((month) == 1)) && (!(isLeapYear()))) { day = 1; month = 2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/1713/buggy-version/ECML.src.com.calendar.Date.java", "BodyUseAPI": [], "Fixed commit": "573d0ed2638fa28673da340cbdcf612440dee2a0", "Url": "https://api.github.com/repos/ECML/ECML", "Date": "2014-07-29T08:09:06Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((written) == false) { myClient.write(serverClient.ClientSide.boolToBytes(offPattern, 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/1304/buggy-version/src.serverClient.ClientSide.java", "BodyUseAPI": [], "Fixed commit": "7c24765f9f2fad2475317250f988d66866e46f50", "Url": "https://api.github.com/repos/creikey/game-of-life-online", "Date": "2017-08-04T21:43:57Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.util.Locale.getDefault().getLanguage().equals(\"ru\")) { this.sadView.loadAd(SADView.LANGUAGE_RU); }else { this.sadView.loadAd(SADView.LANGUAGE_EN); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/8112/buggy-version/XO.src.main.java.com.mobilez365.xo.activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "5d104c4d3f41e2b5056343554c4858ed871fa1e5", "Url": "https://api.github.com/repos/YourTradingSystems/XO_Android", "Date": "2014-07-15T23:33:51Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.charset.Charset.newEncoder()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(asciiEncoder.canEncode(data[i][j]))) { SheetParser.ce.checkError(\"Character\", (i + 1), CompileError.ERROR_1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/2967/buggy-version/src.SheetParser.java", "BodyUseAPI": ["CompileError.checkError(java.lang.String,int,CompileError.ERROR_1)"], "Fixed commit": "0bdff140d9eb7052f507253dc247ac94b911f8e8", "Url": "https://api.github.com/repos/David-Parker/API-Builder", "Date": "2014-10-15T17:31:19Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (type.equals(\"Bool\")) { if (arg2 == (CompileError.ERROR_1)) CompileError.message(((\"A boolean control does not have the specified two values at line \" + arg1) + \".\")); }else if (type.equals(\"Character\")) { if (arg2 == (CompileError.ERROR_1)) CompileError.message(((\"A non-ASCII character was found at line \" + arg1) + \".\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/2967/buggy-version/src.CompileError.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "0bdff140d9eb7052f507253dc247ac94b911f8e8", "Url": "https://api.github.com/repos/David-Parker/API-Builder", "Date": "2014-10-15T17:31:19Z"},
{"Line": "=>845", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((fc.getFileFilter().getDescription()) == (filter2.getDescription())) { ext = \"png\"; }else if ((fc.getFileFilter().getDescription()) == (filter.getDescription())) { ext = \"jpg\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/7138/buggy-version/src.com.main.Visualizer.java", "BodyUseAPI": ["javax.swing.JFileChooser.getFileFilter()", "javax.swing.filechooser.FileFilter.getDescription()"], "Fixed commit": "88659faad9f45d2e8c465eddc4bc1a42bf728636", "Url": "https://api.github.com/repos/Theappletreeman/Plotter", "Date": "2015-05-07T23:00:08Z"},
{"Line": "=>868", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ext == \"\") { dot = \"\"; ext2 = \"\"; ext = \"png\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/7138/buggy-version/src.com.main.Visualizer.java", "BodyUseAPI": [], "Fixed commit": "88659faad9f45d2e8c465eddc4bc1a42bf728636", "Url": "https://api.github.com/repos/Theappletreeman/Plotter", "Date": "2015-05-07T23:00:08Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((implId != null) && (implVersion != null)) { for (org.bonitasoft.studio.connectors.repository.ConnectorImplFileStore implStore : getChildren()) { org.bonitasoft.studio.connector.model.implementation.ConnectorImplementation impl = implStore.getContent(); if (((impl != null) && (implId.equals(impl.getImplementationId()))) && (implVersion.equals(impl.getImplementationVersion()))) { return implStore; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/2183/buggy-version/bundles.plugins.org.bonitasoft.studio.connectors.src.org.bonitasoft.studio.connectors.repository.ConnectorImplRepositoryStore.java", "BodyUseAPI": ["java.lang.String.equals(impl.getImplementationId())", "java.lang.String.equals(impl.getImplementationVersion())"], "Fixed commit": "34074c6edb0893dec7dd11447c20eeef24fa5c9e", "Url": "https://api.github.com/repos/bonitasoft/bonita-studio", "Date": "2013-08-20T09:45:53Z"},
{"Line": "=>456", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.wicket.model.IModel<com.evolveum.midpoint.web.component.progress.ProgressReporter>.getObject()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (reporter.isAbortRequested()) { page.showResult(asyncOperationResult); target.add(page.getFeedbackPanel()); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/7717/buggy-version/gui.admin-gui.src.main.java.com.evolveum.midpoint.web.component.progress.ProgressPanel.java", "BodyUseAPI": [], "Fixed commit": "dd098f52d712c7aca2e4d7394d4ea843f49558cd", "Url": "https://api.github.com/repos/Evolveum/midpoint", "Date": "2017-11-15T13:00:55Z"},
{"Line": "=>271", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ru.sincore.ClientManager.uninitializedClients.remove(client)) { ru.sincore.ClientManager.log.debug(((\"Uninitialized client with sid = \\'\" + (client.getSid())) + \"\\' was removed.\")); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/1650/buggy-version/src.main.java.ru.sincore.ClientManager.java", "BodyUseAPI": ["org.slf4j.Logger.debug(((\"Uninitialized client with sid = \\'\" + (client.getSid())) + \"\\' was removed.\"))", "ru.sincore.client.AbstractClient.getSid()"], "Fixed commit": "bcb6097c9690249dfc5f1cb500cdc77d14471776", "Url": "https://api.github.com/repos/ValorVl/jDcHub", "Date": "2011-10-12T05:27:15Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((uk.co.newagedev.hieranarchy.util.Mouse.pressing[i]) && (uk.co.newagedev.hieranarchy.util.Mouse.down[i])) { uk.co.newagedev.hieranarchy.util.Mouse.down[i] = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/5984/buggy-version/src.uk.co.newagedev.hieranarchy.util.Mouse.java", "BodyUseAPI": [], "Fixed commit": "bac47cd93807a003f1113fb4b095a2eba8a9af08", "Url": "https://api.github.com/repos/JoshuaBradbury/Hieranarchy", "Date": "2015-03-26T09:27:39Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((uk.co.newagedev.hieranarchy.util.Mouse.pressing[i]) && (uk.co.newagedev.hieranarchy.util.Mouse.releasing[i])) { uk.co.newagedev.hieranarchy.util.Mouse.releasing[i] = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/5984/buggy-version/src.uk.co.newagedev.hieranarchy.util.Mouse.java", "BodyUseAPI": [], "Fixed commit": "bac47cd93807a003f1113fb4b095a2eba8a9af08", "Url": "https://api.github.com/repos/JoshuaBradbury/Hieranarchy", "Date": "2015-03-26T09:27:39Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((uk.co.newagedev.hieranarchy.util.Mouse.releasing[i]) && (uk.co.newagedev.hieranarchy.util.Mouse.down[i])) { uk.co.newagedev.hieranarchy.util.Mouse.down[i] = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/5984/buggy-version/src.uk.co.newagedev.hieranarchy.util.Mouse.java", "BodyUseAPI": [], "Fixed commit": "bac47cd93807a003f1113fb4b095a2eba8a9af08", "Url": "https://api.github.com/repos/JoshuaBradbury/Hieranarchy", "Date": "2015-03-26T09:27:39Z"},
{"Line": "=>1110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (intent == null) { return START_NOT_STICKY; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/2359/buggy-version/app.src.main.java.com.ds.avare.StorageService.java", "BodyUseAPI": [], "Fixed commit": "a9c9a16400009d1914f118f9f8c494aeffd3f363", "Url": "https://api.github.com/repos/annerajb/avare", "Date": "2015-09-03T04:16:38Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sb.length()) > 1) { sb.delete(((sb.length()) - 1), sb.length()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/937/buggy-version/bundles.sqlconsole.src.main.java.org.orbisgis.sqlconsole.ui.FunctionElement.java", "BodyUseAPI": ["java.lang.StringBuilder.delete(int,int)", "java.lang.StringBuilder.length()", "java.lang.StringBuilder.length()"], "Fixed commit": "5a15fcd9cbda07061f3445d1186f5986d5283bde", "Url": "https://api.github.com/repos/nicolas-f/orbisgis", "Date": "2015-02-23T10:44:53Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (names[i].equals(\"\")) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/3491/buggy-version/cyni-api.src.main.java.org.cytoscape.cyni.CyniAlgorithmContext.java", "BodyUseAPI": [], "Fixed commit": "ece48d0553dd7ff9dacbd952ed0992a3d0f10de0", "Url": "https://api.github.com/repos/schwikowskilab/cyniProject", "Date": "2014-06-05T15:38:30Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((text) != null) { text = text.trim(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/4290/buggy-version/src.com.dandrex.malfriends.controller.util.FeedParser.java", "BodyUseAPI": [], "Fixed commit": "62224fec7c9d06dca9a933e8eed108a5b2ae0b27", "Url": "https://api.github.com/repos/DandreX/MALFriends", "Date": "2014-09-26T23:33:21Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((org.dawb.common.ui.plot.trace.IImageTrace) (evt.getSource())).getUserObject()) == (org.dawb.workbench.plotting.tools.history.ImageHistoryTool.ImageHistoryMarker.MARKER)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/474/buggy-version/org.dawb.workbench.plotting.src.org.dawb.workbench.plotting.tools.history.ImageHistoryTool.java", "BodyUseAPI": [], "Fixed commit": "e1881517466c241ea6600dbf2af58f950d86c551", "Url": "https://api.github.com/repos/DawnScience/dawn-ui", "Date": "2013-01-21T13:42:08Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((org.dawb.common.ui.plot.trace.IImageTrace) (evt.getSource())).getUserObject()) == (org.dawb.workbench.plotting.tools.history.ImageHistoryTool.ImageHistoryMarker.MARKER)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/474/buggy-version/org.dawb.workbench.plotting.src.org.dawb.workbench.plotting.tools.history.ImageHistoryTool.java", "BodyUseAPI": [], "Fixed commit": "e1881517466c241ea6600dbf2af58f950d86c551", "Url": "https://api.github.com/repos/DawnScience/dawn-ui", "Date": "2013-01-21T13:42:08Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(\"\".equals(alert.getMessage()))) { alertText.append(\"<b>Alert<b><p>\").append(alert.getMessage()); found = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/4558/buggy-version/app.src.main.java.org.septa.android.app.systemstatus.SystemStatusLineTabHandler.java", "BodyUseAPI": ["java.lang.StringBuilder.append(alert.getMessage())", "AlertDetail.Detail.getMessage()"], "Fixed commit": "c6587210ae912aa7a3b5e09ac58f86d552a547e7", "Url": "https://api.github.com/repos/septadev/SEPTA-Android", "Date": "2017-09-28T12:29:35Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(\"\".equals(alert.getAdvisoryMessage()))) { alertText.append(\"<b>ADVISORIES<b><p>\").append(alert.getAdvisoryMessage()); found = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/4558/buggy-version/app.src.main.java.org.septa.android.app.systemstatus.SystemStatusLineTabHandler.java", "BodyUseAPI": ["java.lang.StringBuilder.append(alert.getAdvisoryMessage())", "AlertDetail.Detail.getAdvisoryMessage()"], "Fixed commit": "c6587210ae912aa7a3b5e09ac58f86d552a547e7", "Url": "https://api.github.com/repos/septadev/SEPTA-Android", "Date": "2017-09-28T12:29:35Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (found) { globalAlertText.setHtml(org.septa.android.app.support.GeneralUtils.updateUrls(alertText.toString())); }else { globalAlertView.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/4558/buggy-version/app.src.main.java.org.septa.android.app.systemstatus.SystemStatusLineTabHandler.java", "BodyUseAPI": [], "Fixed commit": "c6587210ae912aa7a3b5e09ac58f86d552a547e7", "Url": "https://api.github.com/repos/septadev/SEPTA-Android", "Date": "2017-09-28T12:29:35Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((turn) == 0) { setPlayerMoved(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/5381/buggy-version/src.cluePlayers.ClueGame.java", "BodyUseAPI": [], "Fixed commit": "2891088039c69b4e77dff17067bb372c217ef7e3", "Url": "https://api.github.com/repos/rstauffe/boardgui", "Date": "2013-04-08T23:31:00Z"},
{"Line": "=>823", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.ignite.internal.binary.BinaryRawReaderEx.readInt()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (argCnt > 0) { args = new java.lang.Object[argCnt]; for (int i = 0; i < argCnt; i++) args[i] = reader.readObjectDetached(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/2892/buggy-version/modules.core.src.main.java.org.apache.ignite.internal.processors.platform.cache.PlatformCache.java", "BodyUseAPI": [], "Fixed commit": "83b5bca6bf402d2368d55ae5c7d6314ad7a225b4", "Url": "https://api.github.com/repos/apache/ignite", "Date": "2017-01-20T09:56:26Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (searchType.equals(\"all\")) { java.util.ArrayList<java.util.HashMap<java.lang.String, java.lang.String>> jobs = org.launchcode.models.JobData.findByValue(searchTerm); java.lang.Integer resultSize = jobs.size(); java.lang.String results = (resultSize.toString()) + \" result(s) found\"; java.lang.String newSearch = searchTerm; model.addAttribute(\"columns\", ListController.columnChoices); model.addAttribute(\"jobs\", jobs); model.addAttribute(\"results\", results); model.addAttribute(\"newSearch\", newSearch); return \"search\"; }else { java.util.ArrayList<java.util.HashMap<java.lang.String, java.lang.String>> jobs = org.launchcode.models.JobData.findByColumnAndValue(searchType, searchTerm); java.lang.Integer resultSize = jobs.size(); java.lang.String results = (resultSize.toString()) + \" result(s) found\"; java.lang.String newSearch = searchTerm; model.addAttribute(\"columns\", ListController.columnChoices); model.addAttribute(\"jobs\", jobs); model.addAttribute(\"results\", results); model.addAttribute(\"newSearch\", newSearch); return \"search\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/7723/buggy-version/src.main.java.org.launchcode.controllers.SearchController.java", "BodyUseAPI": ["org.launchcode.models.JobData.findByColumnAndValue(java.lang.String,java.lang.String)"], "Fixed commit": "44642f049e81a4bf8abbbb4da4ccdb65a514df3d", "Url": "https://api.github.com/repos/ParkinsonXC/techjobs-mvc", "Date": "2017-11-29T20:05:13Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jetbrains.jet.lang.psi.JetFile.getUserData(com.intellij.openapi.util.Key<com.intellij.psi.util.CachedValue<org.jetbrains.jet.analyzer.AnalyzeExhaust>>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((bindingContextCachedValue != null) && (bindingContextCachedValue.hasUpToDateValue())) { com.intellij.psi.util.PsiModificationTracker tracker = com.intellij.psi.PsiManager.getInstance(file.getProject()).getModificationTracker(); ((com.intellij.psi.impl.PsiModificationTrackerImpl) (tracker)).incOutOfCodeBlockModificationCounter(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/6650/buggy-version/idea.src.org.jetbrains.jet.plugin.project.AnalyzerFacadeWithCache.java", "BodyUseAPI": [], "Fixed commit": "669d7c704c13c3644b911bc38bdcb009a5f2402d", "Url": "https://api.github.com/repos/JetBrains/kotlin", "Date": "2012-06-13T17:17:54Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (shiftTime == 6) shiftTimeAsString = \"0\".concat(shiftTimeAsString);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/2570/buggy-version/Project.src.utilities.RosterParser.java", "BodyUseAPI": [], "Fixed commit": "aaf249ea9d4268048f3ba62287804783bf4f36e9", "Url": "https://api.github.com/repos/hcix/CSC531", "Date": "2012-04-03T19:47:25Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.util.Arrays.asList(weapon.getTags()).contains(WeaponTag.ClinchEnhancer)) { net.sf.anathema.character.generic.traits.IGenericTrait str = collection.getTrait(AttributeType.Strength); if ((trait.getCurrentValue()) < (str.getCurrentValue())) { trait = str; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/2114/buggy-version/Character_Equipment_Impl.src.net.sf.anathema.character.equipment.impl.reporting.content.stats.weapons.AccuracyWeaponStatsGroup.java", "BodyUseAPI": [], "Fixed commit": "83a4d8ea00ca7e692393de5d556c346fe4c801a4", "Url": "https://api.github.com/repos/curttasker/anathema", "Date": "2012-04-20T05:54:47Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(oovProviderPlugins.isEmpty())) { defaultOovProvider = oovProviderPlugins.get(((oovProviderPlugins.size()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/8542/buggy-version/src.main.java.com.worksap.nlp.sudachi.JapaneseTokenizer.java", "BodyUseAPI": [], "Fixed commit": "794954d131ae33da809fb9c897b5df5a0b0254d5", "Url": "https://api.github.com/repos/WorksApplications/Sudachi", "Date": "2017-10-18T01:32:06Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!hasWords) && ((defaultOovProvider) != null)) { for (com.worksap.nlp.sudachi.LatticeNode node : defaultOovProvider.getOOV(input, i, hasWords)) { hasWords = true; lattice.insert(node.getBegin(), node.getEnd(), node); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/8542/buggy-version/src.main.java.com.worksap.nlp.sudachi.JapaneseTokenizer.java", "BodyUseAPI": ["com.worksap.nlp.sudachi.OovProviderPlugin.getOOV(com.worksap.nlp.sudachi.UTF8InputText,int,boolean)"], "Fixed commit": "794954d131ae33da809fb9c897b5df5a0b0254d5", "Url": "https://api.github.com/repos/WorksApplications/Sudachi", "Date": "2017-10-18T01:32:06Z"},
{"Line": "=>12", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args.length) != 2) { throw new java.lang.RuntimeException(\"Invalid arguments!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/2194/buggy-version/hw4.src.main.java.Main.java", "BodyUseAPI": [], "Fixed commit": "d2f25b4906b744b4bd039e975146c154e977ac6a", "Url": "https://api.github.com/repos/karvozavr/java-fall-2017", "Date": "2017-11-19T18:25:31Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, net.osmand.swing.NativeSwingRendering.MapDiff>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((md.baseFile) != null) { closeBinaryMapFile(md.baseFile.getAbsolutePath()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/8227/buggy-version/OsmAndMapCreator.src.net.osmand.swing.NativeSwingRendering.java", "BodyUseAPI": ["java.io.File.getAbsolutePath()", "net.osmand.swing.NativeSwingRendering.closeBinaryMapFile(java.lang.String)"], "Fixed commit": "4cda1678cbfe6df2769992e0f8706919aa97e4f2", "Url": "https://api.github.com/repos/osmandapp/OsmAnd-tools", "Date": "2017-06-25T11:00:10Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (matcher == null) { matcher = new io.netty.util.internal.TypeParameterMatcher.ReflectiveMatcher(messageType); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/5822/buggy-version/common.src.main.java.io.netty.util.internal.TypeParameterMatcher.java", "BodyUseAPI": [], "Fixed commit": "742db71a524496c8be21f49b472542cbddc05d4c", "Url": "https://api.github.com/repos/md-5/netty", "Date": "2013-02-14T07:56:55Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.wallet.getAddress().length()) > 0) { setAddress(this.address); descriptionAdapter.setWallet(wallet); db.addWallet(wallet); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/3064/buggy-version/src.paymium.paytunia.scanbook.Scanbook.java", "BodyUseAPI": [], "Fixed commit": "a63f2e4a02ed2df89f09fa26912f15cbfd84fa1f", "Url": "https://api.github.com/repos/Paymium/Scanbook-Android", "Date": "2012-08-08T21:06:41Z"},
{"Line": "=>584", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSwitchedListener) != null) { mSwitchedListener.onSwitched(mPositionManager.currentPosition); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/8369/buggy-version/sliding_view_library.src.main.java.com.kohoh.SlidingView.SlidingView.java", "BodyUseAPI": [], "Fixed commit": "17531cfcb792547c213eb3591f7d22f6bc827db2", "Url": "https://api.github.com/repos/KOHOH1992/SlidingView", "Date": "2014-03-18T03:50:50Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.USC.CCA.Query.dispatchQuery(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(json.equalsIgnoreCase(\"null\\n\"))) { com.USC.CCA.TalentType.contactArray = com.USC.CCA.TalentType.g.fromJson(json, com.USC.CCA.Contact_info[].class); }else { com.USC.CCA.Contact_info[] empty = new com.USC.CCA.Contact_info[]{ }; com.USC.CCA.TalentType.contactArray = empty; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/6070/buggy-version/CCA.src.com.USC.CCA.TalentType.java", "BodyUseAPI": ["com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)"], "Fixed commit": "cb85de636680885ed91e93db52f8bfeecaf7839f", "Url": "https://api.github.com/repos/furykid/CCA_app", "Date": "2012-03-19T21:24:23Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (comm.CardInterface.login(passwordField.getText(), true)) { main.Traingui.getTraingui().setScreen(new gui.TrainerView()); }else { textInfo.setText(\"falsches Passwort\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/7879/buggy-version/Traingui.src.gui.PasswordCheck.java", "BodyUseAPI": [], "Fixed commit": "be2d20accbea1b418239179c2f3e88998f7d8c4c", "Url": "https://api.github.com/repos/TBoonX/sc_traincard", "Date": "2014-07-10T12:44:48Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["comm.CardInterface.getProgress()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (myProgress == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/7879/buggy-version/Traingui.src.gui.SportlerView.java", "BodyUseAPI": [], "Fixed commit": "be2d20accbea1b418239179c2f3e88998f7d8c4c", "Url": "https://api.github.com/repos/TBoonX/sc_traincard", "Date": "2014-07-10T12:44:48Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((weventh) != null) wallet.removeEventListener(weventh);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/8686/buggy-version/AquaRegia.src.org.aquaregia.wallet.ARWallet.java", "BodyUseAPI": [], "Fixed commit": "25d07111808001fa92e03968e13179d76e249a2f", "Url": "https://api.github.com/repos/yiyanghu/AquaRegia", "Date": "2014-04-24T04:01:01Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (currentPlayer != null) { do { if (counter > 0) { playersInfo.append(\" - \"); } playersInfo.append(currentPlayer.getName()); counter++; currentPlayer = game.getPlayer(playerList.getNext()); } while (!(currentPlayer.getId().equals(game.getStartingPlayerId())) ); }else { playersInfo.append(\"[got no players]\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/7069/buggy-version/Mage.src.mage.game.match.MatchImpl.java", "BodyUseAPI": ["java.lang.StringBuilder.append(currentPlayer.getName())", "mage.players.Player.getName()"], "Fixed commit": "db3b2e4973b1a3d576b5c6774a83b6794cf036cc", "Url": "https://api.github.com/repos/jlin14/mage", "Date": "2014-10-08T23:30:14Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((countDownTimerService.getTimerStatus()) == (CountDownTimerUtil.PREPARE)) { btnServiceStart.setText(\"START\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/3834/buggy-version/CountDownTimer.app.src.main.java.com.arjinmc.countdowntimer.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "ea5645b613d3c5a40121a4588445096d841d83f0", "Url": "https://api.github.com/repos/arjinmc/Android-CountDownTimer", "Date": "2015-08-18T09:58:55Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ctx.options().contains(Option.DEFAULT_PATH_LEAF_TO_NULL)) { ctx.addResult(evalPath, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/8324/buggy-version/json-path.src.main.java.com.jayway.jsonpath.internal.token.PathToken.java", "BodyUseAPI": ["com.jayway.jsonpath.internal.token.EvaluationContextImpl.addResult(java.lang.String,<nulltype>)"], "Fixed commit": "215a5e237f2b704f9c0c40a826f82ccfdd22e9b4", "Url": "https://api.github.com/repos/jochenberger/JsonPath", "Date": "2014-09-23T09:29:34Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((addContentRequest.getTitle()) != null) && (!(addContentRequest.getTitle().trim().isEmpty()))) { content.setPictureSummary(addContentRequest.getTitle()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/6965/buggy-version/src.main.java.com.picturestory.service.api.CreatePixtory.java", "BodyUseAPI": ["com.picturestory.service.request.AddContentRequest.getTitle()", "com.picturestory.service.pojo.Content.setPictureSummary(addContentRequest.getTitle())"], "Fixed commit": "33011273ea7d744ab0f5daae3652dea993b13ba6", "Url": "https://api.github.com/repos/bankuruprasannakumar/PictureStory", "Date": "2016-09-03T14:29:59Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((addContentRequest.getLocation()) != null) && (!(addContentRequest.getLocation().trim().isEmpty()))) { content.setPlace(addContentRequest.getTitle()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/6965/buggy-version/src.main.java.com.picturestory.service.api.CreatePixtory.java", "BodyUseAPI": ["com.picturestory.service.pojo.Content.setPlace(addContentRequest.getTitle())", "com.picturestory.service.request.AddContentRequest.getTitle()"], "Fixed commit": "33011273ea7d744ab0f5daae3652dea993b13ba6", "Url": "https://api.github.com/repos/bankuruprasannakumar/PictureStory", "Date": "2016-09-03T14:29:59Z"},
{"Line": "=>2114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.silverpeas.components.kmelia.service.DefaultKmeliaService.getPublicationDetail(org.silverpeas.core.contribution.publication.model.PublicationPK)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (publication.isValidationRequired()) { sendValidationAlert(publication, validatorIds); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/7863/buggy-version/kmelia.kmelia-library.src.main.java.org.silverpeas.components.kmelia.service.DefaultKmeliaService.java", "BodyUseAPI": ["org.silverpeas.components.kmelia.service.DefaultKmeliaService.sendValidationAlert(org.silverpeas.core.contribution.publication.model.PublicationDetail,java.lang.String[])"], "Fixed commit": "0946b583795be6d51eb6aff49b5aae6fa649ba41", "Url": "https://api.github.com/repos/Silverpeas/Silverpeas-Components", "Date": "2016-07-20T12:34:43Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((client) == null) { android.util.Log.w(CBLDatabase.TAG, \"ChangeTracker run() loop aborting because client == null\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/1351/buggy-version/src.main.java.com.couchbase.cblite.replicator.changetracker.CBLChangeTracker.java", "BodyUseAPI": [], "Fixed commit": "1fe0b3bb03bdc38f24430d848a101f92adeab335", "Url": "https://api.github.com/repos/couchbase/couchbase-lite-android-core", "Date": "2013-11-08T20:23:29Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isElementDisplayed(nextButton, 2)) { nextButton.click(); }else { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/4654/buggy-version/src.main.java.page.EbayStorePage.java", "BodyUseAPI": ["org.openqa.selenium.WebElement.click()"], "Fixed commit": "d489e9680942907ee0defd0d7a3bd91c35dd3892", "Url": "https://api.github.com/repos/andriy-shevchuk/EbayScraper", "Date": "2017-09-17T10:04:50Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["realm.where(pl.marczak.ifixpicturesrenderer.data.AvailablePic.class).equalTo(\"name\", name, Case.INSENSITIVE).findFirst()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((pic.getContent()) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/2829/buggy-version/app.src.main.java.pl.marczak.ifixpicturesrenderer.connection.OpcDaClient.java", "BodyUseAPI": [], "Fixed commit": "3e9ff38a39f5bc82080820ac98e1484d4d8d2e44", "Url": "https://api.github.com/repos/Marchuck/IfixPicturesRenderer", "Date": "2017-06-12T06:27:58Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.salesforce.androidsdk.accounts.UserAccountManager.getInstance().getCurrentUser()) == null) { errorCallback.invoke(\"not logged in\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/8414/buggy-version/libs.SalesforceReact.src.com.salesforce.androidsdk.reactnative.bridge.SmartStoreReactBridge.java", "BodyUseAPI": [], "Fixed commit": "0db1d65acd4d00fbd0972bb88d6b72f600b7ce4e", "Url": "https://api.github.com/repos/ivanbogdanov/SalesforceMobileSDK-Android", "Date": "2016-11-17T21:05:08Z"},
{"Line": "=>371", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["bubolo.world.World.getMapTiles()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (allTiles == null) { hidden = false; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/4667/buggy-version/bubolo.src.bubolo.world.entity.concrete.Tank.java", "BodyUseAPI": [], "Fixed commit": "9719e85ea19fee31efef95253022a005d7944338", "Url": "https://api.github.com/repos/BU-CS673/bubolo", "Date": "2014-04-05T22:07:22Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\" \".equals(this.getValueAt(x, y).toString())) { java.lang.System.out.println(\"????\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/8772/buggy-version/src.rhsu.wordScratcher.gameObjects.implementations.ScratcherBoardImpl.java", "BodyUseAPI": [], "Fixed commit": "6652b81bd948bfe254c927d5527a1a9fb4fa19e9", "Url": "https://api.github.com/repos/rhsu/WordScratcherGame", "Date": "2013-12-16T14:37:31Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (original == null) throw new java.lang.IllegalArgumentException(((\"Original data for \" + relative) + \" is null\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/5056/buggy-version/src.main.java.net.minecraftforge.gradle.patcher.TaskGenPatches.java", "BodyUseAPI": [], "Fixed commit": "f61941732a2f1f06508ded824447674ee6aeac39", "Url": "https://api.github.com/repos/matthewprenger/ForgeGradle", "Date": "2016-05-18T06:30:06Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["stock.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(validSymbol(symbol))) { new android.app.AlertDialog.Builder(parent).setTitle(R.string.dialog_invalid_symbol_title).setMessage(R.string.dialog_invalid_symbol_msg).setPositiveButton(android.R.string.yes, new android.content.DialogInterface.OnClickListener() { public void onClick(android.content.DialogInterface dialog, int which) { } }).setIcon(android.R.drawable.ic_dialog_info).show(); }else if (networkUp()) { new android.os.AsyncTask<java.lang.Void, java.lang.Void, java.lang.Boolean>() { @java.lang.Override protected java.lang.Boolean doInBackground(java.lang.Void... params) { try { yahoofinance.Stock stock = yahoofinance.YahooFinance.get(symbol); yahoofinance.quotes.stock.StockQuote quote = (stock != null) ? stock.getQuote() : null; boolean isUnknown = ((quote == null) || ((quote.getPrice()) == null)) || ((quote.getChange()) == null); return isUnknown; } catch (java.io.IOException exception) { timber.log.Timber.e(exception, (\"Error fetching stock quote for: \" + symbol)); return true; } } @java.lang.Override protected void onPostExecute(java.lang.Boolean isUnknown) { if (isUnknown) { new android.app.AlertDialog.Builder(parent).setTitle(R.string.dialog_confirmation_unknown_title).setMessage(R.string.dialog_confirmation_unknown_msg).setPositiveButton(android.R.string.yes, new android.content.DialogInterface.OnClickListener() { public void onClick(android.content.DialogInterface dialog, int which) { if (parent instanceof com.udacity.stockhawk.ui.MainActivity) { ((com.udacity.stockhawk.ui.MainActivity) (parent)).addStock(symbol); } } }).setNegativeButton(android.R.string.no, new android.content.DialogInterface.OnClickListener() { public void onClick(android.content.DialogInterface dialog, int which) { } }).setIcon(android.R.drawable.ic_dialog_alert).show(); }else { if (parent instanceof com.udacity.stockhawk.ui.MainActivity) { ((com.udacity.stockhawk.ui.MainActivity) (parent)).addStock(symbol); } } } }.execute(); }else { new android.app.AlertDialog.Builder(parent).setTitle(R.string.dialog_confirmation_no_network_title).setMessage(R.string.dialog_confirmation_no_network_msg).setPositiveButton(android.R.string.yes, new android.content.DialogInterface.OnClickListener() { public void onClick(android.content.DialogInterface dialog, int which) { if (parent instanceof com.udacity.stockhawk.ui.MainActivity) { ((com.udacity.stockhawk.ui.MainActivity) (parent)).addStock(symbol); } } }).setNegativeButton(android.R.string.no, new android.content.DialogInterface.OnClickListener() { public void onClick(android.content.DialogInterface dialog, int which) { } }).setIcon(android.R.drawable.ic_dialog_alert).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/5583/buggy-version/StockHawk.app.src.main.java.com.udacity.stockhawk.ui.AddStockDialog.java", "BodyUseAPI": ["android.app.Activity.addStock(java.lang.String)", "new android.app.AlertDialog.Builder(parent).setTitle(R.string.dialog_confirmation_unknown_title).setMessage(R.string.dialog_confirmation_unknown_msg).setPositiveButton(android.R.string.yes, new android.content.DialogInterface.OnClickListener() {\n    public void onClick(android.content.DialogInterface dialog, int which) {\n        if (parent instanceof com.udacity.stockhawk.ui.MainActivity) {\n            ((com.udacity.stockhawk.ui.MainActivity) (parent)).addStock(symbol);\n        }\n    }\n}).setNegativeButton(android.R.string.no, new android.content.DialogInterface.OnClickListener() {\n    public void onClick(android.content.DialogInterface dialog, int which) {\n    }\n}).setIcon(android.R.drawable.ic_dialog_alert)", "new android.app.AlertDialog.Builder(parent).setTitle(R.string.dialog_confirmation_no_network_title).setMessage(R.string.dialog_confirmation_no_network_msg).setPositiveButton(android.R.string.yes, new android.content.DialogInterface.OnClickListener() {\n    public void onClick(android.content.DialogInterface dialog, int which) {\n        if (parent instanceof com.udacity.stockhawk.ui.MainActivity) {\n            ((com.udacity.stockhawk.ui.MainActivity) (parent)).addStock(symbol);\n        }\n    }\n}).setNegativeButton(android.R.string.no, new android.content.DialogInterface.OnClickListener() {\n    public void onClick(android.content.DialogInterface dialog, int which) {\n    }\n}).setIcon(android.R.drawable.ic_dialog_alert).show()", "new android.app.AlertDialog.Builder(parent).setTitle(R.string.dialog_confirmation_no_network_title).setMessage(R.string.dialog_confirmation_no_network_msg).setPositiveButton(android.R.string.yes,android.content.DialogInterface.OnClickListener)", "yahoofinance.YahooFinance.get(java.lang.String)", "android.app.Activity.addStock(java.lang.String)", "new android.app.AlertDialog.Builder(parent).setTitle(R.string.dialog_confirmation_no_network_title).setMessage(R.string.dialog_confirmation_no_network_msg).setPositiveButton(android.R.string.yes, new android.content.DialogInterface.OnClickListener() {\n    public void onClick(android.content.DialogInterface dialog, int which) {\n        if (parent instanceof com.udacity.stockhawk.ui.MainActivity) {\n            ((com.udacity.stockhawk.ui.MainActivity) (parent)).addStock(symbol);\n        }\n    }\n}).setNegativeButton(android.R.string.no,android.content.DialogInterface.OnClickListener)", "new android.app.AlertDialog.Builder(parent).setTitle(R.string.dialog_confirmation_no_network_title).setMessage(R.string.dialog_confirmation_no_network_msg).setPositiveButton(android.R.string.yes, new android.content.DialogInterface.OnClickListener() {\n    public void onClick(android.content.DialogInterface dialog, int which) {\n        if (parent instanceof com.udacity.stockhawk.ui.MainActivity) {\n            ((com.udacity.stockhawk.ui.MainActivity) (parent)).addStock(symbol);\n        }\n    }\n}).setNegativeButton(android.R.string.no, new android.content.DialogInterface.OnClickListener() {\n    public void onClick(android.content.DialogInterface dialog, int which) {\n    }\n}).setIcon(android.R.drawable.ic_dialog_alert)", "android.app.Activity.addStock(java.lang.String)", "new android.app.AlertDialog.Builder(parent).setTitle(R.string.dialog_confirmation_unknown_title).setMessage(R.string.dialog_confirmation_unknown_msg).setPositiveButton(android.R.string.yes, new android.content.DialogInterface.OnClickListener() {\n    public void onClick(android.content.DialogInterface dialog, int which) {\n        if (parent instanceof com.udacity.stockhawk.ui.MainActivity) {\n            ((com.udacity.stockhawk.ui.MainActivity) (parent)).addStock(symbol);\n        }\n    }\n}).setNegativeButton(android.R.string.no, new android.content.DialogInterface.OnClickListener() {\n    public void onClick(android.content.DialogInterface dialog, int which) {\n    }\n}).setIcon(android.R.drawable.ic_dialog_alert).show()", "new android.app.AlertDialog.Builder(parent).setTitle(R.string.dialog_confirmation_unknown_title).setMessage(R.string.dialog_confirmation_unknown_msg).setPositiveButton(android.R.string.yes, new android.content.DialogInterface.OnClickListener() {\n    public void onClick(android.content.DialogInterface dialog, int which) {\n        if (parent instanceof com.udacity.stockhawk.ui.MainActivity) {\n            ((com.udacity.stockhawk.ui.MainActivity) (parent)).addStock(symbol);\n        }\n    }\n}).setNegativeButton(android.R.string.no,android.content.DialogInterface.OnClickListener)", "new android.app.AlertDialog.Builder(parent).setTitle(R.string.dialog_confirmation_unknown_title).setMessage(R.string.dialog_confirmation_unknown_msg).setPositiveButton(android.R.string.yes,android.content.DialogInterface.OnClickListener)", "android.os.AsyncTask<java.lang.Void, java.lang.Void, java.lang.Boolean>.execute()", "timber.log.Timber.e(java.io.IOException,java.lang.String)"], "Fixed commit": "074e0eed3efcd22d8a9581fc59283eac6a35021f", "Url": "https://api.github.com/repos/nfdz/StockHawk", "Date": "2017-05-09T11:42:38Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (debugMode) { java.lang.String msg = \"Size of languages = \" + (languages.size()); android.util.Log.d(\"CODE\", msg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/3930/buggy-version/app.src.main.java.ch.riverworld.collector.TableActivity.java", "BodyUseAPI": [], "Fixed commit": "bb93102ecf7fd23f51f824ef8ca6019c8bcd7072", "Url": "https://api.github.com/repos/MWeigert/Collector", "Date": "2016-04-13T20:43:28Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((apiNameId) == null) || ((apiVersionId) == null)) throw new java.lang.IllegalArgumentException((((\"There is no API with API Name: \" + apiName) + \" and API Version: \") + apiVersion));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/5730/buggy-version/src.main.java.org.mule.scripts.SSLPostProcessingWithDownloadFromNames.java", "BodyUseAPI": [], "Fixed commit": "62bc62e8a973add14361216db5ffff01dea86ce3", "Url": "https://api.github.com/repos/mulesoft/api-policies", "Date": "2015-07-22T08:33:04Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(sender instanceof org.bukkit.entity.Player)) { return false; }else if (!(sender.hasPermission(\"fasttravelsigns.range\"))) { net.minebot.fasttravel.FastTravelUtil.sendFTMessage(sender, \"You don't have permission to do this\"); return false; }else if ((args.length) == 0) { net.minebot.fasttravel.FastTravelUtil.sendFTMessage(sender, \"Invalid arguments.\"); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/8017/buggy-version/src.main.java.net.minebot.fasttravel.commands.FastTravelSetRangeCommand.java", "BodyUseAPI": ["net.minebot.fasttravel.FastTravelUtil.sendFTMessage(org.bukkit.command.CommandSender,java.lang.String)", "org.bukkit.command.CommandSender.hasPermission(java.lang.String)", "net.minebot.fasttravel.FastTravelUtil.sendFTMessage(org.bukkit.command.CommandSender,java.lang.String)"], "Fixed commit": "4a4a808fbb1d9a6754259ae642241ae4f6dc2f1d", "Url": "https://api.github.com/repos/oneill011990/FastTravel", "Date": "2014-12-11T15:37:00Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!shouldItDoAnything) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/5444/buggy-version/MyPlayerv3.app.src.main.java.com.damian.myplayerv3.MusicControllerFragment.java", "BodyUseAPI": [], "Fixed commit": "2e8797c1c53175dd59f1db5a1f0bbf183e1005d6", "Url": "https://api.github.com/repos/DamianMandrake/MyPlayerv3", "Date": "2017-02-19T18:06:53Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((goods.getId()) == null) { storeHousesService.increaseGoodsQuantityOnStorehouse(goods, currentElement.getStoreHouse()); }else { storeHousesService.changeIncreaseGoodsQuantityOnStorehouse(goods, currentElement.getStoreHouse()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/4539/buggy-version/src.main.java.small.business.businesslayer.ComingsInvoicesService.java", "BodyUseAPI": ["small.business.businesslayer.ComingsInvoicesService.increaseGoodsQuantityOnStorehouse(small.business.domainmodel.interfaces.IGoods,currentElement.getStoreHouse())", "small.business.businesslayer.ComingsInvoicesService.changeIncreaseGoodsQuantityOnStorehouse(small.business.domainmodel.interfaces.IGoods,currentElement.getStoreHouse())"], "Fixed commit": "f87c90b5f1a1f1c0c320b2b1232154cd2690c820", "Url": "https://api.github.com/repos/452/jbusiness", "Date": "2012-10-02T11:09:37Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((goods.getId()) == null) { storeHousesService.reduceGoodsQuantityOnStorehouse(goods, currentElement.getStoreHouse()); }else { storeHousesService.changeReduceGoodsQuantityOnStorehouse(goods, currentElement.getStoreHouse()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/4539/buggy-version/src.main.java.small.business.businesslayer.OutputInvoicesService.java", "BodyUseAPI": ["small.business.businesslayer.OutputInvoicesService.changeReduceGoodsQuantityOnStorehouse(small.business.dao.entity.OutputGoods,currentElement.getStoreHouse())", "small.business.businesslayer.OutputInvoicesService.reduceGoodsQuantityOnStorehouse(small.business.dao.entity.OutputGoods,currentElement.getStoreHouse())"], "Fixed commit": "f87c90b5f1a1f1c0c320b2b1232154cd2690c820", "Url": "https://api.github.com/repos/452/jbusiness", "Date": "2012-10-02T11:09:37Z"},
{"Line": "=>2652", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((com.platypus.android.tablet.TeleOpPanel.currentBoat) != null) || ((com.platypus.android.tablet.TeleOpPanel.currentBoat.getLocation()) != null)) || ((mMapboxMap) != null)) { touchpointList.add(com.platypus.android.tablet.TeleOpPanel.currentBoat.getLocation()); java.lang.System.out.println(touchpointList.size()); boatPath = new com.platypus.android.tablet.Path.Path(touchpointList); invalidate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/6401/buggy-version/app.src.main.java.com.platypus.android.tablet.TeleOpPanel.java", "BodyUseAPI": ["com.platypus.android.tablet.Boat.getLocation()", "java.util.ArrayList<com.mapbox.mapboxsdk.geometry.LatLng>.add(com.platypus.android.tablet.TeleOpPanel.currentBoat.getLocation())"], "Fixed commit": "809e165d41aef8574585381533bc598cb1a797d8", "Url": "https://api.github.com/repos/platypusllc/tablet", "Date": "2017-03-02T07:19:59Z"},
{"Line": "=>953", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((com.platypus.android.tablet.TeleOpPanel.currentBoat.getLocation()) == null) { editor.putString(SettingsActivity.KEY_PREF_LAT, java.lang.Double.toString(pHollowStartingPoint.getLatitude())); editor.putString(SettingsActivity.KEY_PREF_LON, java.lang.Double.toString(pHollowStartingPoint.getLongitude())); }else { editor.putString(SettingsActivity.KEY_PREF_LAT, java.lang.Double.toString(com.platypus.android.tablet.TeleOpPanel.currentBoat.getLocation().getLatitude())); editor.putString(SettingsActivity.KEY_PREF_LON, java.lang.Double.toString(com.platypus.android.tablet.TeleOpPanel.currentBoat.getLocation().getLongitude())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/6401/buggy-version/app.src.main.java.com.platypus.android.tablet.TeleOpPanel.java", "BodyUseAPI": ["SharedPreferences.Editor.putString(SettingsActivity.KEY_PREF_LON,java.lang.String)", "java.lang.Double.toString(com.platypus.android.tablet.TeleOpPanel.currentBoat.getLocation().getLongitude())", "com.platypus.android.tablet.TeleOpPanel.currentBoat.getLocation().getLatitude()", "com.platypus.android.tablet.Boat.getLocation()", "SharedPreferences.Editor.putString(SettingsActivity.KEY_PREF_LAT,java.lang.String)", "com.platypus.android.tablet.TeleOpPanel.currentBoat.getLocation().getLongitude()", "java.lang.Double.toString(com.platypus.android.tablet.TeleOpPanel.currentBoat.getLocation().getLatitude())", "com.platypus.android.tablet.Boat.getLocation()"], "Fixed commit": "809e165d41aef8574585381533bc598cb1a797d8", "Url": "https://api.github.com/repos/platypusllc/tablet", "Date": "2017-03-02T07:19:59Z"},
{"Line": "=>945", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((com.platypus.android.tablet.TeleOpPanel.currentBoat) == null) || ((com.platypus.android.tablet.TeleOpPanel.currentBoat.getIpAddress()) == null)) { editor.putString(SettingsActivity.KEY_PREF_DEFAULT_IP, \"192.168.1.1\"); }else { editor.putString(SettingsActivity.KEY_PREF_DEFAULT_IP, com.platypus.android.tablet.TeleOpPanel.currentBoat.getIpAddress().getAddress().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/6401/buggy-version/app.src.main.java.com.platypus.android.tablet.TeleOpPanel.java", "BodyUseAPI": ["SharedPreferences.Editor.putString(SettingsActivity.KEY_PREF_DEFAULT_IP,com.platypus.android.tablet.TeleOpPanel.currentBoat.getIpAddress().getAddress().toString())", "com.platypus.android.tablet.Boat.getIpAddress()", "com.platypus.android.tablet.TeleOpPanel.currentBoat.getIpAddress().getAddress().toString()", "com.platypus.android.tablet.TeleOpPanel.currentBoat.getIpAddress().getAddress()"], "Fixed commit": "809e165d41aef8574585381533bc598cb1a797d8", "Url": "https://api.github.com/repos/platypusllc/tablet", "Date": "2017-03-02T07:19:59Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, org.ow2.chameleon.fuchsia.fake.discovery.ImportDeclaration>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (declaration == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/5680/buggy-version/discoveries.fake.src.main.java.org.ow2.chameleon.fuchsia.fake.discovery.FakeDiscoveryBridge.java", "BodyUseAPI": [], "Fixed commit": "e8e4389de28a51990a94bc6df18c39ee82745f7a", "Url": "https://api.github.com/repos/ow2-chameleon/fuchsia", "Date": "2014-01-10T13:40:28Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.uni_hamburg.informatik.sep.zuul.client.ClientConsole.leseZeileEin()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(nachricht.equals(\"\"))) verarbeiteEingabe(nachricht);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/3486/buggy-version/src.de.uni_hamburg.informatik.sep.zuul.client.ClientConsole.java", "BodyUseAPI": ["de.uni_hamburg.informatik.sep.zuul.client.ClientConsole.verarbeiteEingabe(java.lang.String)"], "Fixed commit": "078c2c756facc767e3e2564b85970a33eb265eb0", "Url": "https://api.github.com/repos/FlaShG/SEP12", "Date": "2012-09-25T11:45:43Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!((paket.getNachricht()) == null)) { for (java.lang.String zeile : paket.getNachricht().split(\"\\n\")) java.lang.System.out.println(zeile); run(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/3486/buggy-version/src.de.uni_hamburg.informatik.sep.zuul.client.ClientConsole.java", "BodyUseAPI": ["de.uni_hamburg.informatik.sep.zuul.client.ClientPaket.getNachricht()", "paket.getNachricht().split(java.lang.String)"], "Fixed commit": "078c2c756facc767e3e2564b85970a33eb265eb0", "Url": "https://api.github.com/repos/FlaShG/SEP12", "Date": "2012-09-25T11:45:43Z"},
{"Line": "=>866", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((clientChain) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/104/buggy-version/src.java.main.org.apache.zookeeper.server.NettyServerCnxn.java", "BodyUseAPI": [], "Fixed commit": "a054a72e556bfe5c801a943f93ddb8dece548a43", "Url": "https://api.github.com/repos/iandimayuga/zookeeper", "Date": "2015-03-23T21:22:29Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (org.jboss.tools.central.internal.dnd.LinuxURLTransfer.isLinuxGTK()) { transfers = new org.eclipse.swt.dnd.Transfer[]{ org.eclipse.swt.dnd.URLTransfer.getInstance(), org.jboss.tools.central.internal.dnd.LinuxURLTransfer.getInstance() }; }else { transfers = new org.eclipse.swt.dnd.Transfer[]{ org.eclipse.swt.dnd.URLTransfer.getInstance() }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/6943/buggy-version/central.plugins.org.jboss.tools.central.src.org.jboss.tools.central.internal.dnd.JBossCentralDropTarget.java", "BodyUseAPI": [], "Fixed commit": "b3e8e069700fb03e3c5fe6ed909fbd73a1c9a1ea", "Url": "https://api.github.com/repos/snjeza/jbosstools-central", "Date": "2013-11-06T09:55:25Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(buildFile.isAbsolute())) { buildFile = new java.io.File(project.getBaseDir(), buildFile.getPath()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/6164/buggy-version/src.main.java.org.nuxeo.build.ant.AntClient.java", "BodyUseAPI": ["java.io.File.getPath()"], "Fixed commit": "6c8ea69a0ee8a1fb79868b2a369f0e12e9c33e6c", "Url": "https://api.github.com/repos/jcarsique/ant-assembly-maven-plugin", "Date": "2014-03-10T18:25:41Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["zswi.schemas.dav.proxies.Prop.getCalendarProxyReadFor()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (proxyRead != null) { java.util.ArrayList<zswi.objects.dav.collections.PrincipalCollection> readCollections = parseProxyResponses(proxyRead.getResponse(), store, isFakePrincipals); collections.put(\"read\", readCollections); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/3298/buggy-version/src.zswi.objects.dav.collections.PrincipalCollection.java", "BodyUseAPI": ["zswi.objects.dav.collections.PrincipalCollection.parseProxyResponses(proxyRead.getResponse(),zswi.protocols.communication.core.DavStore,boolean)", "zswi.schemas.dav.proxies.CalendarProxyReadFor.getResponse()"], "Fixed commit": "9cdc9b7240c0bad849d8649a0bf3d03497e8bc9d", "Url": "https://api.github.com/repos/pascalrobert/cdav-connector", "Date": "2014-12-15T00:59:50Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["zswi.schemas.dav.proxies.Prop.getCalendarProxyWriteFor()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (proxyWrite != null) { java.util.ArrayList<zswi.objects.dav.collections.PrincipalCollection> writeCollections = parseProxyResponses(proxyWrite.getResponse(), store, isFakePrincipals); collections.put(\"write\", writeCollections); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/3298/buggy-version/src.zswi.objects.dav.collections.PrincipalCollection.java", "BodyUseAPI": ["zswi.schemas.dav.proxies.CalendarProxyWriteFor.getResponse()", "zswi.objects.dav.collections.PrincipalCollection.parseProxyResponses(proxyWrite.getResponse(),zswi.protocols.communication.core.DavStore,boolean)"], "Fixed commit": "9cdc9b7240c0bad849d8649a0bf3d03497e8bc9d", "Url": "https://api.github.com/repos/pascalrobert/cdav-connector", "Date": "2014-12-15T00:59:50Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (child == null) { throw new java.lang.IllegalArgumentException(((\"Unable to override \" + name) + \"; node with index not found.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/4401/buggy-version/dropwizard-configuration.src.main.java.io.dropwizard.configuration.ConfigurationFactory.java", "BodyUseAPI": [], "Fixed commit": "fd948f76d8834d9093ce01aa33e869642b3ea590", "Url": "https://api.github.com/repos/cmicali/dropwizard", "Date": "2014-02-06T14:52:03Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(((((((((((((f.equals(\"class_name\")) || (f.equals(\"field\"))) || (f.equals(\"field_value\"))) || (f.equals(\"details\"))) || (f.equals(\"context\"))) || (f.equals(\"document_url\"))) || (f.equals(\"document_url\"))) || (f.equals(\"document_column\"))) || (f.equals(\"check_result\"))) || (f.equals(\"check_parent_id\"))) || (f.equals(\"check_id\"))) || (f.equals(\"check_tree_id\"))) || (f.equals(\"check_level\")))) { fieldsBuilder.put(e.getKey(), new hu.sztaki.ilab.longneck.ImmutableFieldImpl(e.getValue())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/4424/buggy-version/src.main.java.hu.sztaki.ilab.longneck.process.ImmutableErrorRecordImpl.java", "BodyUseAPI": [], "Fixed commit": "cf0fd389a4d6a508ed76d38b15f648fac219369f", "Url": "https://api.github.com/repos/MTA-SZTAKI/longneck-core", "Date": "2015-01-20T23:40:52Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (filter.isEmpty()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/4482/buggy-version/src.io.github.davidg95.JTill.jtillserver.ProductSelectDialog.java", "BodyUseAPI": [], "Fixed commit": "95e31d1f643be63c21c81bc0a66d34f668403608", "Url": "https://api.github.com/repos/davidg95/JTillServer", "Date": "2017-12-20T19:10:35Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (block != null) { block.getSubBlocks(net.minecraft.item.Item.getItemFromBlock(block), this, list); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/8698/buggy-version/src.main.scala.com.builtbroken.mc.lib.mod.ModCreativeTab.java", "BodyUseAPI": ["net.minecraft.block.Block.getSubBlocks(net.minecraft.item.Item.getItemFromBlock(block),com.builtbroken.mc.lib.mod.ModCreativeTab,java.util.List)", "net.minecraft.item.Item.getItemFromBlock(net.minecraft.block.Block)"], "Fixed commit": "ccbc3ed2b25087f8dba2898ab32f7e474b04d68e", "Url": "https://api.github.com/repos/VoltzEngine-Project/Engine", "Date": "2017-05-09T03:54:19Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (item != null) { item.getSubItems(item, this, list); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/8698/buggy-version/src.main.scala.com.builtbroken.mc.lib.mod.ModCreativeTab.java", "BodyUseAPI": ["net.minecraft.item.Item.getSubItems(net.minecraft.item.Item,com.builtbroken.mc.lib.mod.ModCreativeTab,java.util.List)"], "Fixed commit": "ccbc3ed2b25087f8dba2898ab32f7e474b04d68e", "Url": "https://api.github.com/repos/VoltzEngine-Project/Engine", "Date": "2017-05-09T03:54:19Z"},
{"Line": "=>341", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ens.getParent()) == null) { return listOfParents; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/4615/buggy-version/de.opalproject.vespucci.sliceEditor.src.de.opalproject.vespucci.sliceEditor.features.AddEnsembleFeature.java", "BodyUseAPI": [], "Fixed commit": "d3b9c151ff67065ab36656f12710d8eadbb9ae13", "Url": "https://api.github.com/repos/Delors/Vespucci2", "Date": "2013-01-17T13:41:13Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (field.isMarkForMobileField()) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/6208/buggy-version/app.src.main.java.org.unicef.rapidreg.widgets.viewholder.BaseViewHolder.java", "BodyUseAPI": [], "Fixed commit": "718601de2ec9caffd42538e6765bf6caf39ad603", "Url": "https://api.github.com/repos/UnicefNY/RapidReg", "Date": "2016-07-18T08:04:59Z"},
{"Line": "=>316", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)", "java.util.List<com.twistlet.falcon.model.entity.FalconUser>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(registeredUser.getUsername().equals(username))) { item.add(false); }else { item.add(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/6186/buggy-version/src.main.java.com.twistlet.falcon.controller.ListPatronController.java", "BodyUseAPI": [], "Fixed commit": "a473b2027b76853f3a7efe962a6cb28427924403", "Url": "https://api.github.com/repos/blacksnow666/falcon", "Date": "2013-07-16T13:50:37Z"},
{"Line": "=>338", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<com.twistlet.falcon.model.entity.FalconUser>.get(int)", "javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(registeredUser.getUsername().equals(username))) { item.add(false); item.add((\"A duplicate phone is already registered by \" + registeredEmail)); }else { item.add(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/6186/buggy-version/src.main.java.com.twistlet.falcon.controller.ListPatronController.java", "BodyUseAPI": [], "Fixed commit": "a473b2027b76853f3a7efe962a6cb28427924403", "Url": "https://api.github.com/repos/blacksnow666/falcon", "Date": "2013-07-16T13:50:37Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newType == (this.floorTransitionType)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/3531/buggy-version/src.main.java.app.dataPrimitives.GraphNode.java", "BodyUseAPI": [], "Fixed commit": "dc140249c739e4971603a08ccba1bf3967ce605d", "Url": "https://api.github.com/repos/WPI-CS3733-C17-Gamma/project-pather", "Date": "2017-02-28T23:50:29Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((version == null) || ((version.trim().length()) == 0)) { throw new com.roche.iceboar.IceBoarException(\"Version number cannot be null\", null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/5498/buggy-version/ice-boar.src.main.java.com.roche.iceboar.runner.JVMVersionMatcher.java", "BodyUseAPI": [], "Fixed commit": "152763fbc7d88a324d0644b01bdbb2e32ff102e6", "Url": "https://api.github.com/repos/Roche/IceBoar", "Date": "2016-04-22T21:37:00Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((obj == null) || ((obj.getClass()) != (uk.co.jamesmcguigan.rockpaperscissors.models.Gesture.class))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/6578/buggy-version/rock-paper-scissors.src.main.java.uk.co.jamesmcguigan.rockpaperscissors.models.Gesture.java", "BodyUseAPI": [], "Fixed commit": "90ae445c12d9d6af3a7d25673c5305b4188cda7d", "Url": "https://api.github.com/repos/modernmaster/katas", "Date": "2016-06-01T20:46:22Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.robovm.pods.facebook.core.FBSDKAccessToken.getCurrentAccessToken()) != null) { org.robovm.pods.facebook.core.FBSDKAccessToken.getCurrentAccessToken().getTokenString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/9166/buggy-version/gdx-facebook-ios.src.de.tomgrill.gdxfacebook.ios.IOSGDXFacebook.java", "BodyUseAPI": [], "Fixed commit": "fa28ee07f11aec6f52fbd45fec3ed5a32a51e2d2", "Url": "https://api.github.com/repos/TomGrill/gdx-facebook", "Date": "2015-06-26T23:02:12Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.facebook.AccessToken.getCurrentAccessToken()) != null) { return com.facebook.AccessToken.getCurrentAccessToken().getToken(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/9166/buggy-version/gdx-facebook-android.src.de.tomgrill.gdxfacebook.android.AndroidGDXFacebook.java", "BodyUseAPI": [], "Fixed commit": "fa28ee07f11aec6f52fbd45fec3ed5a32a51e2d2", "Url": "https://api.github.com/repos/TomGrill/gdx-facebook", "Date": "2015-06-26T23:02:12Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (minDiff <= closeEnough) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/2777/buggy-version/src.com.commonsware.cwac.camera.CameraUtils.java", "BodyUseAPI": [], "Fixed commit": "f9f042b47ef66eb0fcd203d54df742daffa3b8e7", "Url": "https://api.github.com/repos/commonsguy/cwac-camera", "Date": "2013-09-29T13:17:35Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((iter % 10000) == 0) { java.lang.System.out.println((iter + \" iterations complete.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/1452/buggy-version/assignment3.Brute.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "22d4dcaab2674d676da2c6a3c772358ea83671f0", "Url": "https://api.github.com/repos/venkyramachandran82/algo", "Date": "2014-09-22T17:31:37Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((moves[i]) == 5) { location = 0; }else { (location)--; java.lang.Integer[] secondMove = new java.lang.Integer[2]; secondMove[0] = 24; secondMove[1] = moves[i]; moveSet.add(secondMove); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/8403/buggy-version/app.src.main.java.com.jeffreychan.yutnori.Piece.java", "BodyUseAPI": [], "Fixed commit": "5b176a55bd18040ee92f3e2e0f6e4a93186bebf9", "Url": "https://api.github.com/repos/superjeffreyc/Yut", "Date": "2016-04-25T03:20:18Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jdal.vaadin.ui.table.PageableTable<?>.getFilter()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (filter == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/1273/buggy-version/vaadin.src.main.java.org.jdal.vaadin.ui.table.ClearFilterAction.java", "BodyUseAPI": [], "Fixed commit": "604ccba9e20e35c1ff982b2a28375db6116344d1", "Url": "https://api.github.com/repos/chelu/jdal", "Date": "2014-05-19T17:52:18Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (count == 0) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/4902/buggy-version/cli.src.main.java.com.vmware.bdd.cli.commands.ConnectionCommands.java", "BodyUseAPI": [], "Fixed commit": "e7c3ef390da5859f1b58330a94028e271146cee5", "Url": "https://api.github.com/repos/vmware-serengeti/serengeti-ws", "Date": "2012-11-21T13:10:28Z"},
{"Line": "=>393", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((entry.getValue()) == null) { reportingTask.removeProperty(entry.getKey()); }else { reportingTask.setProperty(entry.getKey(), entry.getValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/8887/buggy-version/nifi.nifi-nar-bundles.nifi-framework-bundle.nifi-framework.nifi-framework-core.src.main.java.org.apache.nifi.controller.StandardFlowSynchronizer.java", "BodyUseAPI": ["java.util.Map.Entry<java.lang.String, java.lang.String>.getKey()", "org.apache.nifi.controller.ReportingTaskNode.setProperty(java.lang.String,java.lang.String)", "org.apache.nifi.controller.ReportingTaskNode.removeProperty(java.lang.String)", "java.util.Map.Entry<java.lang.String, java.lang.String>.getKey()", "java.util.Map.Entry<java.lang.String, java.lang.String>.getValue()"], "Fixed commit": "31caadb20a85c2afa53969b1bd60f1979e1f004f", "Url": "https://api.github.com/repos/apache/nifi", "Date": "2015-01-29T13:49:44Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((id) == null) id = org.bukkit.Material.AIR;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/8732/buggy-version/src.main.java.com.sk89q.craftbook.util.ItemInfo.java", "BodyUseAPI": [], "Fixed commit": "c4233532bd2afaedff731ef6ce248f910f0974bc", "Url": "https://api.github.com/repos/sk89q/craftbook", "Date": "2013-10-18T21:48:56Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((id) == null) id = org.bukkit.Material.AIR;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/8732/buggy-version/src.main.java.com.sk89q.craftbook.util.ItemInfo.java", "BodyUseAPI": [], "Fixed commit": "c4233532bd2afaedff731ef6ce248f910f0974bc", "Url": "https://api.github.com/repos/sk89q/craftbook", "Date": "2013-10-18T21:48:56Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (classType.isInterface()) { throw new nl.basroding.supreme.binder.InjectionException((\"Can not create instance of \" + (binding.getKey().toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/891/buggy-version/src.main.java.nl.basroding.supreme.binder.InjectionFactory.java", "BodyUseAPI": [], "Fixed commit": "ac64c824af9be36a2b6e79a08cd7a4832c4351d2", "Url": "https://api.github.com/repos/broding/supreme-gdx", "Date": "2015-12-19T23:10:35Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((updater) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/470/buggy-version/src.main.java.io.github.alshain01.flags.Flags.java", "BodyUseAPI": [], "Fixed commit": "f0e81b6b1e57d0189d6a849a384170ed47aaae33", "Url": "https://api.github.com/repos/Alshain01/Flags", "Date": "2014-01-27T18:39:30Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Context.startService(android.content.Intent)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (serviceName == null) { android.util.Log.d(com.example.android.sunshine.app.wearsupport.WxProvider.TAG, \"SendWearDataService failed to start!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/1819/buggy-version/app.src.main.java.com.example.android.sunshine.app.wearsupport.WxProvider.java", "BodyUseAPI": [], "Fixed commit": "b2748145b9d7724ae88603b8ee0c2ad27e156ef4", "Url": "https://api.github.com/repos/JimNtexas/Project6_Wearables", "Date": "2016-05-11T18:08:24Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bid.getId()) == 36) { java.lang.System.out.println(\"** ITS ABOUT TO HAPPEN\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/696/buggy-version/Masterarbeit.src.de.wnill.master.simulator.Truck.java", "BodyUseAPI": [], "Fixed commit": "360fca8640f58c487f741d98b101a3a4c50c169d", "Url": "https://api.github.com/repos/wnill/ca", "Date": "2016-07-12T15:41:25Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class<? extends ro.isdc.wro.model.resource.locator.ClasspathUriLocator>.getResource(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (url == null) { url = getClass().getResource(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/3642/buggy-version/wro4j-core.src.main.java.ro.isdc.wro.model.resource.locator.ClasspathUriLocator.java", "BodyUseAPI": [], "Fixed commit": "075a6a03eb32c0e7c4aeb2217872a85634934d4f", "Url": "https://api.github.com/repos/alexo/wro4j", "Date": "2011-07-17T15:31:29Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Boolean.parseBoolean(config.getFirstProperty(APIConstants.API_GLOBAL_CEP_ENABLE))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isGlobalThrottlingEnabled) { if (((subPolicies == null) || (subPolicies.isEmpty())) || (apiLevelPolicy == null)) { throw new org.wso2.carbon.apimgt.api.APIManagementException((\"Failed to publish service to API store while executing \" + \"APIExecutor. No policy selected\")); } }else { if ((tiers == null) || ((tiers.size()) <= 0)) { throw new org.wso2.carbon.apimgt.api.APIManagementException((\"Failed to publish service to API store while executing \" + \"APIExecutor. No Tiers selected\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/5889/buggy-version/components.apimgt.org.wso2.carbon.apimgt.impl.src.main.java.org.wso2.carbon.apimgt.impl.executors.APIExecutor.java", "BodyUseAPI": [], "Fixed commit": "4bc66b66251f036d6eb55ae0aaf3850c6088cc62", "Url": "https://api.github.com/repos/dinusha92/carbon-apimgt", "Date": "2016-03-15T09:33:07Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentObject) instanceof org.structr.core.entity.AbstractRelationship) { currentElement.inline(\"a\").css(\"id\").attr(new org.structr.rest.serialization.html.attr.Href(((((((restPath) + \"/\") + (currentObject.getProperty(AbstractRelationship.type))) + \"/\") + value) + (propertyView)))).text(\"\\\"\", value, \"\\\"\"); }else { currentElement.inline(\"a\").css(\"id\").attr(new org.structr.rest.serialization.html.attr.Href(((((((restPath) + \"/\") + (currentObject.getType())) + \"/\") + value) + (propertyView)))).text(\"\\\"\", value, \"\\\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/9019/buggy-version/structr-rest.src.main.java.org.structr.rest.serialization.StructrJsonHtmlWriter.java", "BodyUseAPI": [], "Fixed commit": "8e9e90b29321be14051d686a438b05675712461c", "Url": "https://api.github.com/repos/structr/structr", "Date": "2017-01-19T11:41:02Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.support.v4.app.ActivityCompat.checkSelfPermission(this, Manifest.permission.READ_EXTERNAL_STORAGE)) != (android.content.pm.PackageManager.PERMISSION_GRANTED)) { android.support.v4.app.ActivityCompat.requestPermissions(this, new java.lang.String[]{ Manifest.permission.READ_EXTERNAL_STORAGE, Manifest.permission.INTERNET }, 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/51/buggy-version/app.src.main.java.aggrathon.a360video.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "e20d8b4d3d5e82be49e84ad0ac03812a166ac2a0", "Url": "https://api.github.com/repos/Aggrathon/360-Video-Player", "Date": "2016-11-26T19:22:33Z"},
{"Line": "=>1662", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.expression) instanceof ch.fhnw.cpib.compiler.parser.AbsTree.ExprStore) { loc1 = ((ch.fhnw.cpib.compiler.parser.AbsTree.ExprStore) (this.expression)).codeRef(loc1, true, true); }else { loc1 = this.expression.code(loc1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/6892/buggy-version/src.ch.fhnw.cpib.compiler.parser.AbsTree.java", "BodyUseAPI": [], "Fixed commit": "86b7ddae6e68931eeaaa7999382545aba6c024b5", "Url": "https://api.github.com/repos/compr00t/FHNW_cpib", "Date": "2016-01-17T19:43:21Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (buttonImage != null) { com.smartdevicelink.api.file.SdlFileManager fileManager = mSdlContext.getSdlFileManager(); android.util.Log.d(com.smartdevicelink.api.view.SdlButtonView.TAG, ((\"Adding \" + (buttonImage.getSdlName())) + \" to ImageStatusRegister\")); mImageStatusRegister.put(buttonImage.getSdlName(), new com.smartdevicelink.api.view.SdlButtonView.SdlButtonImageRecord(buttonImage, fileManager.isFileOnModule(buttonImage.getSdlName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/3897/buggy-version/sdl_android_lib.src.com.smartdevicelink.api.view.SdlButtonView.java", "BodyUseAPI": ["com.smartdevicelink.api.file.SdlImage.getSdlName()", "android.util.Log.d(java.lang.String,((\"Adding \" + (buttonImage.getSdlName())) + \" to ImageStatusRegister\"))", "com.smartdevicelink.api.file.SdlImage.getSdlName()", "com.smartdevicelink.api.file.SdlFileManager.isFileOnModule(buttonImage.getSdlName())", "com.smartdevicelink.api.file.SdlImage.getSdlName()", "java.util.HashMap<java.lang.String, com.smartdevicelink.api.view.SdlButtonView.SdlButtonImageRecord>.put(buttonImage.getSdlName(),com.smartdevicelink.api.view.SdlButtonView.SdlButtonImageRecord)"], "Fixed commit": "55120ba943a8858a6be4542314a834118cc7c44c", "Url": "https://api.github.com/repos/FordDev/sdl_android", "Date": "2016-09-28T18:33:58Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (element instanceof org.apache.axiom.om.OMElement) { newHeaderNodes.add(org.apache.axiom.om.util.ElementHelper.toSOAPHeaderBlock(((org.apache.axiom.om.OMElement) (element)), fac)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/7862/buggy-version/modules.core.src.main.java.org.apache.synapse.mediators.builtin.CalloutMediator.java", "BodyUseAPI": [], "Fixed commit": "191a49c053912bf586aab1c4fa08db94c7ff4308", "Url": "https://api.github.com/repos/priyadarssini/wso2-synapse", "Date": "2015-08-27T13:15:02Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.hardware.Camera.getParameters()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((params.getMaxNumFocusAreas()) == 0) && (focusViewSet)) focusViewSet = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/512/buggy-version/app.src.main.java.com.unicorn.faces.app.views.CameraPreview.java", "BodyUseAPI": [], "Fixed commit": "1081a99f70f2cb22d298eed2599cf0fc87cd5b90", "Url": "https://api.github.com/repos/framlog/Faces", "Date": "2015-05-19T15:23:23Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (AVATAR != \"No Avatar\") { em.setThumbnail(AVATAR); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/4122/buggy-version/src.main.java.commands.essentials.UserInfo.java", "BodyUseAPI": ["net.dv8tion.jda.core.EmbedBuilder.setThumbnail(java.lang.String)"], "Fixed commit": "bd33b1cd21995be8846baceacab3e47b8908718e", "Url": "https://api.github.com/repos/Skillkiller/DiscordBot", "Date": "2017-06-25T16:29:24Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["memb.getUser().getAvatarUrl()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (AVATAR == null) { AVATAR = \"No Avatar\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/4122/buggy-version/src.main.java.commands.essentials.UserInfo.java", "BodyUseAPI": [], "Fixed commit": "bd33b1cd21995be8846baceacab3e47b8908718e", "Url": "https://api.github.com/repos/Skillkiller/DiscordBot", "Date": "2017-06-25T16:29:24Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.HttpURLConnection.getResponseCode()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (statusCode == (java.net.HttpURLConnection.HTTP_BAD_METHOD)) { responseData = (\"server returns :\" + (javax.net.ssl.HttpsURLConnection.HTTP_BAD_METHOD)) + \"\\nNot allowed.\"; mException = new java.lang.Exception(responseData); }else { responseData = (\"server returns :\" + (javax.net.ssl.HttpsURLConnection.HTTP_INTERNAL_ERROR)) + \"\\nSomething went wrong on Stripe\\'s end.\"; mException = new java.lang.Exception(responseData); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/2927/buggy-version/app.src.main.java.it.stefanodp91.android.stripedemo.HttpPostTask.java", "BodyUseAPI": [], "Fixed commit": "0f9e05bdfdb7a0888cc6f8efdd3335ccedeccaa5", "Url": "https://api.github.com/repos/stefanodp91/android-stripe-demo", "Date": "2017-10-18T08:25:31Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((id) == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/6234/buggy-version/src.main.java.fi.pss.cleanbeach.data.AbstractEntity.java", "BodyUseAPI": [], "Fixed commit": "01f38ce5685e0f49f71675c97868dfe41dcb238e", "Url": "https://api.github.com/repos/tmattsso/CleanBeach", "Date": "2014-04-26T12:24:50Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pl.project13.jgit.DescribeResult.dirtyMarker()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (dirty != null) { sb.append(dirty); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/8588/buggy-version/src.main.java.pl.project13.jgit.DescribeResult.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "d49e721db9bd8b068e77a8325ec0fced193eefa8", "Url": "https://api.github.com/repos/fredcooke/maven-git-commit-id-plugin", "Date": "2012-09-17T13:15:45Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.github.ucchyocean.lc.LunaChat.config.isEnableChannelChat())) { com.github.ucchyocean.lc.LunaChat.manager.removeAllDefaultChannels(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/4152/buggy-version/src.main.java.com.github.ucchyocean.lc.LunaChat.java", "BodyUseAPI": [], "Fixed commit": "941f7ab0b8a9eecaf4c0f5c46c53e02247892c11", "Url": "https://api.github.com/repos/ucchyocean/LunaChat", "Date": "2013-11-14T02:51:30Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(rb.hasOverrideBlockTexture())) { for (net.minecraftforge.common.util.ForgeDirection dir : externals) { renderExternalConnection(dir); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/8925/buggy-version/src.main.java.crazypants.enderio.conduit.render.ConduitBundleRenderer.java", "BodyUseAPI": [], "Fixed commit": "f35294b0c29609ebfd05cd04647c9189311bdd3e", "Url": "https://api.github.com/repos/SleepyTrousers/EnderIO", "Date": "2015-04-01T17:49:02Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mIsDetailsActivityStarted)) { mIsDetailsActivityStarted = true; startActivity(intent, android.app.ActivityOptions.makeSceneTransitionAnimation(this, mAlbumImage, mAlbumImage.getTransitionName()).toBundle()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/4339/buggy-version/app.src.main.java.com.alexjlockwood.activity.transitions.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "af08450226cb67af1591ab8202938f649d425776", "Url": "https://api.github.com/repos/alexjlockwood/adp-activity-transitions", "Date": "2015-03-07T00:01:53Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(l_result.hasErrors())) { handleJson(l_result, l_information, l_cmd); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/15/buggy-version/pages.src.org.elaya.page.reciever.JsonReciever.java", "BodyUseAPI": ["org.elaya.page.reciever.JsonReciever<T>.handleJson(org.elaya.page.reciever.JSONResult,T,java.lang.String)"], "Fixed commit": "104b2e148d06f1dec6ddb50aa3959c7ca6c02d5a", "Url": "https://api.github.com/repos/iddekingej/pages", "Date": "2016-10-02T16:22:26Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (extension.contains(\";\")) { extension = extension.substring(0, extension.lastIndexOf(\";\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/6440/buggy-version/app.src.main.java.com.example.bestbrowser.MainActivity.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.lastIndexOf(java.lang.String)"], "Fixed commit": "69a9f1a41bd45f0a0c7cd670fb2596b5817d1ceb", "Url": "https://api.github.com/repos/nadre/mis-2016-exercise-1-helloandroid", "Date": "2016-04-20T21:15:17Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((numbers) != null) { for (int i = 0; i < (numbers.size()); i++) { sum += numbers.get(i); } return sum; }else { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/53/buggy-version/week04.day03.src.Sum.java", "BodyUseAPI": [], "Fixed commit": "6ae1b979f4ae1fa97a26c74a5054bec23eef687e", "Url": "https://api.github.com/repos/green-fox-academy/balintvecsey", "Date": "2017-04-05T10:36:12Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mConfig.getConfigurationSection(\"worlds\")) == null) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/3253/buggy-version/src.au.com.addstar.pandora.modules.LobbyProtection.java", "BodyUseAPI": [], "Fixed commit": "27bc62fe3ccbafdcce56ac17fbd5e14af0c1c7c1", "Url": "https://api.github.com/repos/addstar/Pandora", "Date": "2014-09-24T05:52:58Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (teamInQuestion != null) { return teamInQuestion; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/1395/buggy-version/src.main.java.sportsbot.service.RosterService.java", "BodyUseAPI": [], "Fixed commit": "5f3255e4465f98ba1bc3423eb2047ce40c5f8af6", "Url": "https://api.github.com/repos/djdapz/EecsSportsBotWithTests", "Date": "2017-05-17T22:21:30Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/8179/buggy-version/src.main.java.com.spotify.docker.client.messages.RegistryConfigs.java", "BodyUseAPI": [], "Fixed commit": "b6d531dfbb0262f6b5d7b21617fcc933b8236845", "Url": "https://api.github.com/repos/spotify/docker-client", "Date": "2017-05-22T20:52:54Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.abs(randomGaussian(((java.lang.Math.PI) / 2)))"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (angle < (Galaxy.BULB_LIMIT)) { x = randomGaussian(Galaxy.BULB_WIDTH); y = randomGaussian(Galaxy.BULB_HEIGHT); }else { distance = (galaxy.getSpiralDistance(angle)) + (randomGaussian(Galaxy.ARM_WIDTH)); if ((random.nextInt(2)) == 0) angle += java.lang.Math.PI; x = (distance) * (java.lang.Math.cos(angle)); y = (distance) * (java.lang.Math.sin(angle)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/1865/buggy-version/src.fr.ircf.humanity.Star.java", "BodyUseAPI": ["fr.ircf.humanity.Galaxy.getSpiralDistance(double)"], "Fixed commit": "ff08627c1def326b01c5c77620561795245a4bf4", "Url": "https://api.github.com/repos/mbautista/humanity", "Date": "2014-12-26T10:23:34Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((location[0]) != null) { android.util.Log.v(\"\", ((\"Latitude : \" + (location[0].getLatitude())) + \"\\n\")); android.util.Log.v(\"\", ((\"Langitude : \" + (location[0].getLongitude())) + \"\\n\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/3503/buggy-version/app.src.main.java.sos.android.blesos.receivers.ScanReceiver.java", "BodyUseAPI": ["android.util.Log.v(java.lang.String,((\"Latitude  :\t\t\" + (location[0].getLatitude())) + \"\\n\"))", "location[0].getLatitude()", "location[0].getLongitude()", "android.util.Log.v(java.lang.String,((\"Langitude :\t\t\" + (location[0].getLongitude())) + \"\\n\"))"], "Fixed commit": "5c0793e052ae4a841768be8122d5df14375b7875", "Url": "https://api.github.com/repos/suryann/BLESOS", "Date": "2016-12-25T03:23:48Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(termStack.isEmpty())) exp = termStack.pop(); else exp = new taylor.math.Constant(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/112/buggy-version/src.taylor.math.Function.java", "BodyUseAPI": [], "Fixed commit": "d746c67714d362b26cdcfbaa32de38543945893d", "Url": "https://api.github.com/repos/anubiann00b/TaylorVisualization", "Date": "2014-06-11T15:51:12Z"},
{"Line": "=>435", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (o instanceof com.goide.psi.impl.GoTypeAssertionExpr) { return ((com.goide.psi.impl.GoTypeAssertionExpr) (o)).getType(); }else if (o instanceof com.goide.psi.impl.GoConversionExpr) { return ((com.goide.psi.impl.GoConversionExpr) (o)).getType().getType(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/254/buggy-version/src.com.goide.psi.impl.GoPsiImplUtil.java", "BodyUseAPI": [], "Fixed commit": "7562ca184ee96e9030bb8949ba69d9b17923e024", "Url": "https://api.github.com/repos/go-lang-plugin-org/go-lang-idea-plugin", "Date": "2015-01-17T21:37:35Z"},
{"Line": "=>1751", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.w3c.dom.Element.getNodeName()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((\"many-to-one\".equals(name)) || (\"one-to-one\".equals(name))) { if (b != null) x2x.setAttribute(\"lazy\", (b.booleanValue() ? \"proxy\" : \"false\")); else if (\"proxy\".equalsIgnoreCase(str)) x2x.setAttribute(\"lazy\", \"proxy\"); else if (\"no-proxy\".equalsIgnoreCase(str)) x2x.setAttribute(\"lazy\", \"no-proxy\"); else throw railo.runtime.orm.hibernate.HBMCreator.invalidValue(engine, cfc, prop, \"lazy\", str, \"true,false,proxy,no-proxy\"); }else if ((\"many-to-many\".equals(name)) || (\"key-many-to-one\".equals(name))) { if (b != null) x2x.setAttribute(\"lazy\", (b.booleanValue() ? \"proxy\" : \"false\")); else if (\"proxy\".equalsIgnoreCase(str)) x2x.setAttribute(\"lazy\", \"proxy\"); throw railo.runtime.orm.hibernate.HBMCreator.invalidValue(engine, cfc, prop, \"lazy\", str, \"true,false,proxy\"); }else { if (b != null) x2x.setAttribute(\"lazy\", (b.booleanValue() ? \"true\" : \"false\")); else if (\"extra\".equalsIgnoreCase(str)) x2x.setAttribute(\"lazy\", \"extra\"); else throw railo.runtime.orm.hibernate.HBMCreator.invalidValue(engine, cfc, prop, \"lazy\", str, \"true,false,extra\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/89/buggy-version/railo-java.railo-core.src.railo.runtime.orm.hibernate.HBMCreator.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "861e66d5315c360ad472ad8088f8bc3bd3af75a9", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2011-06-29T13:23:55Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (message instanceof org.elasticsoftware.elasticactors.cluster.InternalMessageImpl) { undeliverableMessage = new org.elasticsoftware.elasticactors.cluster.InternalMessageImpl(message.getReceiver(), message.getSender(), message.getPayload(), message.getPayloadClass(), durable, true); }else { undeliverableMessage = new org.elasticsoftware.elasticactors.cluster.TransientInternalMessage(message.getReceiver(), message.getSender(), message.getPayload(null), true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/5852/buggy-version/core.src.main.java.org.elasticsoftware.elasticactors.cluster.LocalActorShard.java", "BodyUseAPI": ["org.elasticsoftware.elasticactors.cluster.InternalMessage.getSender()", "org.elasticsoftware.elasticactors.cluster.InternalMessage.getPayloadClass()", "org.elasticsoftware.elasticactors.cluster.InternalMessage.getReceiver()", "org.elasticsoftware.elasticactors.cluster.InternalMessage.getSender()", "org.elasticsoftware.elasticactors.cluster.InternalMessage.getReceiver()", "org.elasticsoftware.elasticactors.cluster.InternalMessage.getPayload()", "org.elasticsoftware.elasticactors.cluster.InternalMessage.getPayload(<nulltype>)"], "Fixed commit": "6409f2b81693dc420d2fd9bab920286f17e81136", "Url": "https://api.github.com/repos/elasticsoftwarefoundation/elasticactors", "Date": "2015-12-10T16:03:49Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (x == y) { strBuff.append(((s[x]) + str)); }else { strBuff.append(str); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/6505/buggy-version/src.com.company.Algos.DP.LongestPalindromeByBottomUp.java", "BodyUseAPI": ["java.lang.StringBuffer.append(java.lang.String)"], "Fixed commit": "7b41db0d1b305a3fde3ee8f114f06c9323441fed", "Url": "https://api.github.com/repos/raangs4u/DsProject", "Date": "2015-09-25T06:20:36Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.json.JsonObject.getJsonObject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (c == null) { c = com.nec.strudel.metrics.Report.EMPTY_VALUE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/7080/buggy-version/workload.src.main.java.com.nec.strudel.metrics.Report.java", "BodyUseAPI": [], "Fixed commit": "ea9c96b4440ccfec7484b8b9c58db0534cb7de7d", "Url": "https://api.github.com/repos/tatemura/strudel", "Date": "2016-01-15T01:04:39Z"},
{"Line": "=>325", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (variation == (android.text.InputType.TYPE_TEXT_VARIATION_FILTER)) { mEditing = org.nyanya.android.traditionalt9.TraditionalT9.EDITING_NOSHOW; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/3188/buggy-version/src.org.nyanya.android.traditionalt9.TraditionalT9.java", "BodyUseAPI": [], "Fixed commit": "2e16566185e87481095ece5e7e67a78b3a1d7f75", "Url": "https://api.github.com/repos/Clam-/TraditionalT9", "Date": "2014-03-30T09:12:46Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(context.healthinformatics.Parser.ExcelParser.isRowEmpty(ws.getRow(i)))) { processXLSXRow(ws.getRow(i)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/8044/buggy-version/src.main.java.context.healthinformatics.Parser.ExcelParser.java", "BodyUseAPI": ["org.apache.poi.xssf.usermodel.XSSFSheet.getRow(int)", "context.healthinformatics.Parser.ExcelParser.processXLSXRow(ws.getRow(i))"], "Fixed commit": "d367e92037fb2a3a132d0d37bf9507b54281c9a7", "Url": "https://api.github.com/repos/rpjproost/Context-project-Health-informatics-2", "Date": "2015-05-21T12:43:15Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ygl.piggynote.util.CollinsDicUtil.searchWordFromWebApi(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (csr != null) { model.addAttribute(\"collinsSenseList\", csr.getSenseList()); model.addAttribute(\"searchWordPron\", csr.getHeadWord().getPron()); model.addAttribute(\"searchWord\", word); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/5144/buggy-version/src.main.java.com.ygl.piggynote.controller.dingup.SearchTranController.java", "BodyUseAPI": ["com.ygl.piggynote.controller.dingup.CollinsSearchResult.getHeadWord()", "org.springframework.ui.ModelMap.addAttribute(java.lang.String,csr.getHeadWord().getPron())", "org.springframework.ui.ModelMap.addAttribute(java.lang.String,csr.getSenseList())", "csr.getHeadWord().getPron()", "com.ygl.piggynote.controller.dingup.CollinsSearchResult.getSenseList()"], "Fixed commit": "96833c7fb02746d06dd3ca769bb17ba4f2cc86c5", "Url": "https://api.github.com/repos/yangguilin/JPiggyNote", "Date": "2017-04-06T08:25:49Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((inputDevice) == null) { open(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/4308/buggy-version/MIDIDriver.src.jp.kshoji.javax.sound.midi.usb.UsbMidiTransmitter.java", "BodyUseAPI": [], "Fixed commit": "a9f39a7e2d1ca3a5b48e936317542ab96c553841", "Url": "https://api.github.com/repos/kshoji/USB-MIDI-Driver", "Date": "2014-03-12T09:23:15Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((allSnakes.size()) == 2) { Main.handler.hasStarted = false; java.util.Timer timer = new java.util.Timer(); timer.schedule(new java.util.TimerTask() { @java.lang.Override public void run() { SneakySnakeServer.Game.SnakeController.reset(); Main.handler.hasStarted = true; } }, 3000); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/8405/buggy-version/src.SneakySnakeServer.Game.Snake.java", "BodyUseAPI": [], "Fixed commit": "efe141b4b205ba4853fd1c7f8e0a05cda0c516de", "Url": "https://api.github.com/repos/PLEXATIC/SneakySnakeServer", "Date": "2016-04-06T08:01:17Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (sender instanceof org.bukkit.entity.Player) { com.htmlman1.capitaleconomy.user.CapitalUser user = com.htmlman1.capitaleconomy.api.CapitalUserFactory.getUser(((org.bukkit.entity.Player) (sender))); if (user.hasPermission(CapitalPermission.BUY_LOTTERY)) { org.bukkit.inventory.Inventory inv = ((org.bukkit.entity.Player) (sender)).getInventory(); if ((inv.firstEmpty()) > (-1)) { try { inv.addItem(com.htmlman1.capitaleconomy.item.CapitalItems.getLotteryTicket()); user.decreaseDebit(ConfigurationSettings.ticketPrice); sender.sendMessage((((((((org.bukkit.ChatColor.GREEN) + \"You purchased one lottery ticket for\") + (org.bukkit.ChatColor.GOLD)) + \"$\") + (com.htmlman1.capitaleconomy.configuration.ConfigurationSettings.ticketPrice)) + (org.bukkit.ChatColor.GREEN)) + \".\")); } catch (com.htmlman1.capitaleconomy.lottery.LotteryFullException e) { throw new java.lang.IllegalArgumentException(((org.bukkit.ChatColor.RED) + \"Sorry, but all available slots for the lottery have already been purchased.\")); } }else { throw new java.lang.IllegalArgumentException(((org.bukkit.ChatColor.RED) + \"Please empty a slot in your inventory first.\")); } }else { throw new java.lang.IllegalArgumentException(CapitalMessages.NO_PERMS); } }else { throw new java.lang.IllegalArgumentException(CapitalMessages.BE_PLAYER); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/215/buggy-version/src.com.htmlman1.capitaleconomy.commands.executor.LotteryBuyCommand.java", "BodyUseAPI": ["org.bukkit.command.CommandSender.sendMessage((((((((org.bukkit.ChatColor.GREEN) + \"You purchased one lottery ticket for\") + (org.bukkit.ChatColor.GOLD)) + \"$\") + (com.htmlman1.capitaleconomy.configuration.ConfigurationSettings.ticketPrice)) + (org.bukkit.ChatColor.GREEN)) + \".\"))"], "Fixed commit": "fc51dafbc6b34ffc68389f3b8974d84b8f3409a2", "Url": "https://api.github.com/repos/htmlman1/Capital-SurvivalEconomy", "Date": "2016-07-22T12:44:53Z"},
{"Line": "=>13", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (sender instanceof org.bukkit.entity.Player) { org.bukkit.entity.Player player = ((org.bukkit.entity.Player) (sender)); double worth = 0.0; if ((args.length) >= 1) { java.lang.String context = \"inventory\"; if (args[0].equalsIgnoreCase(\"hand\")) { context = \"hand\"; org.bukkit.inventory.ItemStack hand = player.getInventory().getItemInMainHand(); worth = com.htmlman1.capitaleconomy.bank.ServerShop.getValue(hand); }else { worth = com.htmlman1.capitaleconomy.bank.ServerShop.getValue(player.getInventory()); } sender.sendMessage((((((((((org.bukkit.ChatColor.GREEN) + \"The items in your \") + context) + \" are currently worth \") + (org.bukkit.ChatColor.GOLD)) + \"$\") + (com.htmlman1.capitaleconomy.commands.executor.CapitalMessages.toCashFormat(worth))) + (org.bukkit.ChatColor.GREEN)) + \".\")); }else { sender.sendMessage(((org.bukkit.ChatColor.RED) + \"/cash <all|hand>\")); } }else { throw new java.lang.IllegalArgumentException(CapitalMessages.BE_PLAYER); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/215/buggy-version/src.com.htmlman1.capitaleconomy.commands.executor.CashCountCommand.java", "BodyUseAPI": ["org.bukkit.command.CommandSender.sendMessage(((org.bukkit.ChatColor.RED) + \"/cash <all|hand>\"))", "org.bukkit.command.CommandSender.sendMessage((((((((((org.bukkit.ChatColor.GREEN) + \"The items in your \") + context) + \" are currently worth \") + (org.bukkit.ChatColor.GOLD)) + \"$\") + (com.htmlman1.capitaleconomy.commands.executor.CapitalMessages.toCashFormat(worth))) + (org.bukkit.ChatColor.GREEN)) + \".\"))"], "Fixed commit": "fc51dafbc6b34ffc68389f3b8974d84b8f3409a2", "Url": "https://api.github.com/repos/htmlman1/Capital-SurvivalEconomy", "Date": "2016-07-22T12:44:53Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Optional<java.lang.String>.get()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (value.endsWith(\"%\")) { value = value.substring(0, ((value.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/3540/buggy-version/src.main.java.pl.io.gui.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "edb584de1da03b9c682df5dadc9df542f2647a9b", "Url": "https://api.github.com/repos/lechu7/Acoustic-Insulation", "Date": "2017-06-10T11:30:43Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.util.List<java.lang.String>>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (directors == null) { this.directors.put(website, new java.util.LinkedList<>()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/8375/buggy-version/src.main.java.caseloader.credentials.Credentials.java", "BodyUseAPI": [], "Fixed commit": "49d4ac65c4fb690bec726db53e7d830f06de6951", "Url": "https://api.github.com/repos/tech-team/case-finder", "Date": "2014-08-07T14:29:59Z"},
{"Line": "=>320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((min) instanceof java.lang.Integer) || ((min) instanceof java.lang.Long)) { return java.lang.String.format(\"Min: %d; Max: %d; Mean: %.3f; Stdev: %.3f\", min, max, mean, stdev); }else { return java.lang.String.format(\"Min: %.3f; Max: %.3f; Mean: %.3f; Stdev: %.3f\", min, max, mean, stdev); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/6018/buggy-version/java.core.ar.util.Util.java", "BodyUseAPI": [], "Fixed commit": "457e1f2245332c200ef21df5916f1a653a2d1839", "Url": "https://api.github.com/repos/JosephCottam/AbstractRendering", "Date": "2013-12-09T21:03:04Z"},
{"Line": "=>317", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (AuthorizationConstants.ANONYMOUS_USER_ID.equals(name)) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/5415/buggy-version/services.repository.src.main.java.org.sagebionetworks.repo.manager.backup.PrincipalBackupDriver.java", "BodyUseAPI": [], "Fixed commit": "6bb4db3b892a6e92adee0c44c3ab507067c528b2", "Url": "https://api.github.com/repos/eric-wu/Synapse-Repository-Services", "Date": "2012-08-10T17:41:30Z"},
{"Line": "=>473", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (count <= 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/5351/buggy-version/photoweb.src.com.backend.dao.FaceTableDao.java", "BodyUseAPI": [], "Fixed commit": "e2f12fa7368450db36a12b56e163690491932d80", "Url": "https://api.github.com/repos/shentar/jAlbum", "Date": "2017-04-06T15:22:32Z"},
{"Line": "=>353", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tm.alashow.datmusic.model.Audio.getHashes()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (hashes == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/5516/buggy-version/app.src.main.java.tm.alashow.datmusic.ui.activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "afc312b5b22cfcc96922fbc0fa4b18e5ec521837", "Url": "https://api.github.com/repos/alashow/datmusic-android", "Date": "2017-02-19T06:47:06Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cmd.isEmpty()) { cmd = \"\"; }else if (cmd.contains(\"::\")) { if (classes == null) { classes = \"\"; }else { if (classes.contains(cmd.substring(2, cmd.length()))) { java.lang.System.out.println(\"Class already exists!\"); cmd = \"\"; }else { java.lang.System.out.println(\"Please define the class: \"); cmd = (\"class \" + (cmd.substring(2, cmd.length()))) + \"{\"; while ((Jrepl.left(cmd)) != (Jrepl.right(cmd))) { input = new java.util.Scanner(java.lang.System.in); cmd += input.nextLine(); } classes += cmd; bufferedWriter = new java.io.BufferedWriter(new java.io.FileWriter(\"classes.java\")); bufferedWriter.write(classes); bufferedWriter.newLine(); bufferedWriter.flush(); cmd = \"\"; } } }else if ((cmd.charAt(0)) == ':') { if (functions == null) { functions = \"\"; } if (((((((cmd.indexOf(\"int \")) == 1) || ((cmd.indexOf(\"char \")) == 1)) || ((cmd.indexOf(\"String \")) == 1)) || ((cmd.indexOf(\"double \")) == 1)) || ((cmd.indexOf(\"float \")) == 1)) || ((cmd.indexOf(\"boolean \")) == 1)) { if (functions.contains(cmd.substring(((cmd.indexOf(\" \")) + 1), ((cmd.indexOf(\"(\")) - 1)))) { java.lang.System.out.println(\"Function already exists! Run it now?(y/n)\"); input = new java.util.Scanner(java.lang.System.in); java.lang.String choice = input.nextLine(); if ((choice.charAt(0)) == 'y') { cmd = cmd.substring(((cmd.indexOf(\" \")) + 1), cmd.length()); }else { cmd = \"\"; } }else { cmd = cmd.substring(1, cmd.length()); java.lang.System.out.println(\"please define the function: \"); input = new java.util.Scanner(java.lang.System.in); cmd += input.nextLine(); while ((((!(cmd.contains(\";\"))) && (!(cmd.equals(\"\")))) && ((cmd.contains(\"{\")) && (!(cmd.contains(\"}\"))))) && ((cmd.contains(\"(\")) && (!(cmd.contains(\")\"))))) { input = new java.util.Scanner(java.lang.System.in); cmd += input.nextLine(); } functions += \"public static \" + cmd; bufferedWriter = new java.io.BufferedWriter(new java.io.FileWriter(\"functions.java\")); bufferedWriter.write(functions); bufferedWriter.newLine(); bufferedWriter.flush(); cmd = \"\"; } }else if ((functions != null) && (functions.contains(cmd.substring(1, ((cmd.indexOf(\"(\")) - 1))))) { java.lang.System.out.println(\"Function already exists! Run it now?(y/n)\"); input = new java.util.Scanner(java.lang.System.in); java.lang.String choice = input.nextLine(); if ((choice.charAt(0)) == 'y') { cmd = (cmd.substring(1, cmd.length())) + \";\"; }else { cmd = \"\"; } }else { if (functions.isEmpty()) { pw = new java.io.PrintWriter(\"functions.java\"); pw.close(); java.lang.System.out.println(\"Please enter a return type for the function: \"); input = new java.util.Scanner(java.lang.System.in); java.lang.String type = input.nextLine(); java.lang.System.out.println(\"please define the function: \"); cmd = cmd.substring(1, cmd.length()); while ((((!(cmd.contains(\";\"))) && (!(cmd.equals(\"\")))) || ((cmd.contains(\"{\")) && (!(cmd.contains(\"}\"))))) || ((cmd.contains(\"(\")) && (!(cmd.contains(\")\"))))) { input = new java.util.Scanner(java.lang.System.in); cmd += input.nextLine(); } functions = ((\"public static \" + type) + \" \") + cmd; bufferedWriter = new java.io.BufferedWriter(new java.io.FileWriter(\"functions.java\")); bufferedWriter.write(functions); bufferedWriter.newLine(); bufferedWriter.flush(); cmd = \"\"; }else { java.lang.System.out.println(\"Specified function does not exist! Create it now?(y/n) \"); input = new java.util.Scanner(java.lang.System.in); java.lang.String choice = input.nextLine(); if ((choice.charAt(0)) == 'y') { cmd = cmd.substring(1, cmd.length()); java.lang.System.out.println(\"Please enter a return type for the function: \"); input = new java.util.Scanner(java.lang.System.in); java.lang.String type = input.nextLine(); java.lang.System.out.println(\"Please define the function: \"); input = new java.util.Scanner(java.lang.System.in); cmd += input.nextLine(); while ((((!(cmd.contains(\";\"))) && (!(cmd.equals(\"\")))) && ((cmd.contains(\"{\")) && (!(cmd.contains(\"}\"))))) && ((cmd.contains(\"(\")) && (!(cmd.contains(\")\"))))) { input = new java.util.Scanner(java.lang.System.in); cmd += input.nextLine(); } if (functions.isEmpty()) functions = ((\"public static \" + type) + \" \") + cmd; else functions += (((\"public static \" + type) + \" \") + cmd) + \"\\n\"; bufferedWriter = new java.io.BufferedWriter(new java.io.FileWriter(\"functions.java\")); bufferedWriter.write(functions); bufferedWriter.newLine(); bufferedWriter.flush(); cmd = \"\"; }else { cmd = \"\"; } } } }else if ((cmd.charAt(0)) == '-') { cmd = cmd.substring(1, cmd.length()); if (cmd.startsWith(\"import\")) { if (!(cmd.endsWith(\";\"))) cmd += \";\"; imports += cmd + \"\\n\"; }else if (cmd.equals(\"buffer\")) { java.lang.System.out.println(Jrepl.readfile(\"Test.java\")); }else if (cmd.equals(\"version\")) { java.lang.System.out.println(((\"\\t\" + (Jrepl.header)) + \"\\n\\t\\t-Aneesh Durg\")); }else if (cmd.equals(\"help\")) { java.lang.System.out.println(Jrepl.header); java.lang.System.out.println(Jrepl.readfile(\"help.txt\")); }else if (cmd.equals(\"InputTxt\")) { java.lang.System.out.println(Jrepl.readfile(\"InputTxt.txt\")); }else if (cmd.equals(\"reset\")) { file = \"public class Test{public static void main(String[] args)throws Exception{\\n\"; functions = \"\"; classes = \"\"; imports = \"\"; bufferedWriter = new java.io.BufferedWriter(new java.io.FileWriter(\"Test.java\")); bufferedWriter.write((((((imports + file) + \"\\n}\\n\") + functions) + \"\\n}\\n\") + classes)); bufferedWriter.newLine(); bufferedWriter.flush(); bufferedWriter = new java.io.BufferedWriter(new java.io.FileWriter(\"functions.java\")); bufferedWriter.write(functions); bufferedWriter.newLine(); bufferedWriter.flush(); bufferedWriter = new java.io.BufferedWriter(new java.io.FileWriter(\"classes.java\")); bufferedWriter.write(classes); bufferedWriter.newLine(); bufferedWriter.flush(); }else if (cmd.equals(\"about\")) { java.lang.System.out.println(Jrepl.readfile(\"about.txt\")); java.lang.System.out.println(\"######*END OF ABOUT*#####\"); }else if (cmd.equals(\"quine\")) { java.lang.System.out.println(Jrepl.readfile(\"Jrepl.java\")); java.lang.System.out.println(\"######*END OF QUINE*#####\"); }else { java.lang.System.out.println(\"Unknown command! Please try again or enter -help.\"); } cmd = \"\"; }else { if ((((((((cmd.contains(\"+\")) || (cmd.contains(\"-\"))) || (cmd.contains(\"/\"))) || (cmd.contains(\"*\"))) || (cmd.contains(\"%\"))) && (!(cmd.contains(\"=\")))) || (((cmd.contains(\"==\")) || (cmd.contains(\"||\"))) || (cmd.contains(\"&&\")))) && (!(cmd.contains(\"System.out.print\")))) { if (cmd.endsWith(\";\")) { cmd = cmd.substring(0, ((cmd.length()) - 1)); } cmd = (\"System.out.println(\" + cmd) + \");\"; } if (cmd.equals(\"exit\")) { java.lang.System.exit(0); } while ((((!(cmd.contains(\";\"))) && (!(cmd.equals(\"\")))) || ((cmd.contains(\"){\")) && (!(cmd.contains(\"}\"))))) || ((cmd.contains(\"(\")) && (!(cmd.contains(\")\"))))) { input = new java.util.Scanner(java.lang.System.in); cmd += input.nextLine(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/6355/buggy-version/Jrepl.java", "BodyUseAPI": ["java.lang.String.contains(java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.String.length()", "java.lang.String.contains(java.lang.String)"], "Fixed commit": "8bdceca8e44f95836579d8caf58788ff13158ee9", "Url": "https://api.github.com/repos/aneeshdurg/JRepl", "Date": "2015-10-22T00:50:09Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((recommendations.size()) > (org.smartreaction.boardgamegeek.view.WhatToPlayView.MAX_GAMES_TO_RECOMMEND)) { recommendations = recommendations.subList(0, org.smartreaction.boardgamegeek.view.WhatToPlayView.MAX_GAMES_TO_RECOMMEND); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/5862/buggy-version/src.main.java.org.smartreaction.boardgamegeek.view.WhatToPlayView.java", "BodyUseAPI": ["java.util.List<org.smartreaction.boardgamegeek.model.WhatToPlayRecommendation>.subList(int,int)"], "Fixed commit": "71a4dcf1a46f96f5e4128875ab12b934a2ff2fe4", "Url": "https://api.github.com/repos/icesphere/boardgamegeek", "Date": "2014-04-11T04:38:42Z"},
{"Line": "=>379", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.ptp.internal.rdt.sync.git.core.GitRemoteSyncConnection.executeRemoteCommand(java.lang.String,org.eclipse.core.runtime.IProgressMonitor)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((commandResults.getExitCode()) == 0) objectId = repository.resolve(commandResults.getStdout());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/8191/buggy-version/rdt.org.eclipse.ptp.rdt.sync.git.core.src.org.eclipse.ptp.internal.rdt.sync.git.core.GitRemoteSyncConnection.java", "BodyUseAPI": ["org.eclipse.ptp.internal.rdt.sync.git.core.CommandRunner.CommandResults.getStdout()", "org.eclipse.jgit.lib.Repository.resolve(commandResults.getStdout())"], "Fixed commit": "e73b6e1a7450deed1fdb313bf7748e25666b22cb", "Url": "https://api.github.com/repos/rolandschulz/PTP", "Date": "2013-06-04T20:15:50Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((partition) != (that.partition)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/3678/buggy-version/camus-etl-kafka.src.main.java.com.linkedin.camus.etl.kafka.common.EtlRequest.java", "BodyUseAPI": [], "Fixed commit": "add0179b9b3fb31ebf4a8ad638b8e8ff23a79512", "Url": "https://api.github.com/repos/linqia/camus", "Date": "2014-05-29T17:02:43Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(o instanceof com.linkedin.camus.etl.kafka.common.EtlRequest)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/3678/buggy-version/camus-etl-kafka.src.main.java.com.linkedin.camus.etl.kafka.common.EtlRequest.java", "BodyUseAPI": [], "Fixed commit": "add0179b9b3fb31ebf4a8ad638b8e8ff23a79512", "Url": "https://api.github.com/repos/linqia/camus", "Date": "2014-05-29T17:02:43Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(topic.equals(that.topic))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/3678/buggy-version/camus-etl-kafka.src.main.java.com.linkedin.camus.etl.kafka.common.EtlRequest.java", "BodyUseAPI": [], "Fixed commit": "add0179b9b3fb31ebf4a8ad638b8e8ff23a79512", "Url": "https://api.github.com/repos/linqia/camus", "Date": "2014-05-29T17:02:43Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Scanner.nextInt()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (n == 1) { printText = \"Not prime\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/8615/buggy-version/30-days-of-code.src.day2x.day25.timencomplexity.Solution.java", "BodyUseAPI": [], "Fixed commit": "914e578dc46b3257044e39690a83a8c800355a0c", "Url": "https://api.github.com/repos/jsong00505/HackerRank-Studies", "Date": "2017-03-29T11:13:48Z"},
{"Line": "=>590", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((animation) == null) || (((enemyType) == (com.majalis.battle.BattleFactory.EnemyEnum.HARPY)) && ((stance) == (Stance.FELLATIO)))) || (((enemyType) == (com.majalis.battle.BattleFactory.EnemyEnum.BRIGAND)) && (!(((stance) == (Stance.DOGGY)) || ((stance) == (Stance.STANDING)))))) { if ((range) == 0) { batch.draw(texture, x, y, width, height); }else if ((range) == 1) { batch.draw(texture, (x + 150), (y + 150), (width / 2), (height / 2)); }else { batch.draw(texture, (x + 200), (y + 350), (width / 3), (height / 3)); } if ((animation) != null) animation.addAction(com.badlogic.gdx.scenes.scene2d.actions.Actions.hide()); }else { animation.addAction(com.badlogic.gdx.scenes.scene2d.actions.Actions.show()); animation.draw(batch, parentAlpha); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/7512/buggy-version/core.src.com.majalis.character.EnemyCharacter.java", "BodyUseAPI": [], "Fixed commit": "f40f230423173449ff7a38077ce016c297cfd401", "Url": "https://api.github.com/repos/majalistic/tales-of-androgyny", "Date": "2017-03-13T01:22:32Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isFabOpen)) { hideFab(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/633/buggy-version/app.src.main.java.com.hkapps.storykorner.StoryDescription.java", "BodyUseAPI": [], "Fixed commit": "9f6c1ed254d78d9a5ad4bb1a9fe81a392f81905b", "Url": "https://api.github.com/repos/hksapp/StoryKorner", "Date": "2017-01-03T17:05:51Z"},
{"Line": "=>313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (attrs.containsKey(a)) { if ((attrs.get(a)) != null) { java.lang.String val = net.bootsfaces.render.A.asString(attrs.get(a)); if ((val != null) && ((val.length()) > 0)) { rw.writeAttribute(a, val, a); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/5659/buggy-version/src.net.bootsfaces.render.R.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)", "java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)", "net.bootsfaces.render.A.asString(java.lang.Object)", "javax.faces.context.ResponseWriter.writeAttribute(java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "0cd3c1040b2adcdfb40374e70331fe0ce73ac9f9", "Url": "https://api.github.com/repos/TheCoder4eu/BootsFaces-OSP", "Date": "2014-11-08T23:35:18Z"},
{"Line": "=>318", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.code) instanceof wyil.io.Code.Label) { }else { writeCode(e.code, (offset++), labels, output); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/3612/buggy-version/src.wyil.io.WyilFileWriter.java", "BodyUseAPI": ["wyil.io.WyilFileWriter.writeCode(e.code,int,java.util.HashMap<java.lang.String, java.lang.Integer>,wyjvm.io.BinaryOutputStream)"], "Fixed commit": "b4f87660dc8b6925ff1b8d885fe8d8f82ccc2cac", "Url": "https://api.github.com/repos/DavePearce/Whiley", "Date": "2012-07-25T02:39:04Z"},
{"Line": "=>726", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.noeasy.money.model.DormitoryLineItem.getDormitory()", "com.noeasy.money.service.IDormitoryService.findRoomPrice(dormitoryItem.getRoomInfo().getId(),dormitoryItem.getContractType().getId())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((-1) == (price.getSalePrice())) || ((-1) == (dormitory.getAdditionalPrice()))) { amount = new java.math.BigDecimal(\"-1\"); }else { amount = new java.math.BigDecimal(price.getSalePrice()); amount = amount.add(new java.math.BigDecimal(dormitory.getAdditionalPrice())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/6891/buggy-version/src.main.java.com.noeasy.money.web.controller.OrderController.java", "BodyUseAPI": ["com.noeasy.money.model.DormitoryBean.getAdditionalPrice()", "com.noeasy.money.model.RoomPrice.getSalePrice()", "java.math.BigDecimal.add(java.math.BigDecimal)"], "Fixed commit": "482d486ff2d834005ef052c7686fb2a32028a75c", "Url": "https://api.github.com/repos/DormitoryTeam/Dormitory", "Date": "2014-05-08T17:16:37Z"},
{"Line": "=>4009", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.sumo.traffic.traffic.mList.size()) == 1) { if (!(InitialListStaffs.isEmpty())) { InitialListStaffs.clear(); adapterStaff.notifyDataSetChanged(); polylines.clear(); com.sumo.traffic.traffic.points.set(0, com.sumo.traffic.traffic.latLng); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/3223/buggy-version/app.src.main.java.com.sumo.traffic.traffic.java", "BodyUseAPI": [], "Fixed commit": "4eb6019bc7a572181654567b52bcf24a2dccd6b0", "Url": "https://api.github.com/repos/lawrencecsfrancisco/Traffic-master2", "Date": "2017-08-11T15:25:10Z"},
{"Line": "=>888", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["au.edu.uq.cmm.paul.grabber.DatasetGrabber.grabDataset()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (grabbedDataset != null) { grabbedDataset.updateDatasetHash(); model.addAttribute(\"message\", \"Dataset grab succeeded\"); return \"ok\"; }else { model.addAttribute(\"message\", \"Dataset grab failed\"); return \"failed\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/3921/buggy-version/paul.src.main.java.au.edu.uq.cmm.paul.servlet.WebUIController.java", "BodyUseAPI": ["au.edu.uq.cmm.paul.grabber.DatasetMetadata.updateDatasetHash()"], "Fixed commit": "19dfd70c7a20cc97e4a54be075edbd0b10ba3c49", "Url": "https://api.github.com/repos/UQ-CMM-Mirage/CMM-data-grabber", "Date": "2013-05-10T02:55:18Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (activity != null) return activity; else return entity;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/8549/buggy-version/src.main.java.br.uff.ic.utility.GraphUtils.java", "BodyUseAPI": [], "Fixed commit": "885cd69999a63e03d58a9029b0525d1d67dcb68b", "Url": "https://api.github.com/repos/gems-uff/prov-viewer", "Date": "2016-02-19T15:12:02Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (vertex instanceof br.uff.ic.utility.graph.EntityVertex) entity = vertex;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/8549/buggy-version/src.main.java.br.uff.ic.utility.GraphUtils.java", "BodyUseAPI": [], "Fixed commit": "885cd69999a63e03d58a9029b0525d1d67dcb68b", "Url": "https://api.github.com/repos/gems-uff/prov-viewer", "Date": "2016-02-19T15:12:02Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (col == null) { return dates; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/1681/buggy-version/app.src.main.java.f.myCircle.DatabaseManager.java", "BodyUseAPI": [], "Fixed commit": "3902ba7090893b6782e3a63f684e39d992e87231", "Url": "https://api.github.com/repos/iambald/myCircle", "Date": "2014-07-22T00:35:10Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["wyc.stages.WhileyParser.matchIdentifier()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (paramNames.contains(n.text)) { syntaxError(\"duplicate parameter name\", n); }else { paramNames.add(n.text); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/6378/buggy-version/src.wyc.stages.WhileyParser.java", "BodyUseAPI": ["wyc.stages.WhileyParser.syntaxError(java.lang.String,wyc.stages.Identifier)", "java.util.HashSet<java.lang.String>.add(n.text)"], "Fixed commit": "c50658a1a9b3c4d64d8fe8089e7204b426b541e2", "Url": "https://api.github.com/repos/zimothy/Whiley", "Date": "2012-01-15T05:14:35Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((req.session().attribute(\"order\")) == null) { req.session().attribute(\"order\", new com.codecool.shop.model.Order()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/5200/buggy-version/src.main.java.com.codecool.shop.controller.ProductController.java", "BodyUseAPI": ["spark.Request.session()", "req.session().attribute(java.lang.String,com.codecool.shop.model.Order)"], "Fixed commit": "9a4bb75a2dd5668d6b5a9bd9522e997efb9adb43", "Url": "https://api.github.com/repos/CodecoolBP20161/from-python-to-java-codecool-shop-mafl_a", "Date": "2016-11-17T14:17:35Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.cs4j.core.SearchAlgorithm.search(org.cs4j.core.SearchDomain)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (arResult.hasSolution()) { arResult.increase(nrResult); return arResult; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/7754/buggy-version/src.main.java.org.cs4j.core.algorithms.WNARAStar.java", "BodyUseAPI": ["org.cs4j.core.SearchResult.increase(org.cs4j.core.algorithms.SearchResultImpl)"], "Fixed commit": "078fa4a9eab31412d858794feccd48e3fffd6e4d", "Url": "https://api.github.com/repos/sepetnit/j-heuristic-search-framework", "Date": "2015-12-26T20:42:39Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((updateToVersion) == null) { org.owasp.dependencycheck.data.update.EngineVersionCheck.LOGGER.debug(\"Unable to obtain current release\"); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/8114/buggy-version/dependency-check-core.src.main.java.org.owasp.dependencycheck.data.update.EngineVersionCheck.java", "BodyUseAPI": [], "Fixed commit": "fc00b7d1ccaa2617360aa1dcad05e8452af4fce8", "Url": "https://api.github.com/repos/jeremylong/DependencyCheck", "Date": "2016-01-03T13:51:03Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(macro.isPlaying())) { mode.setLockedDirection(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/184/buggy-version/eb_client.eb.client.GhostBlockHandler.java", "BodyUseAPI": [], "Fixed commit": "feb0df3d4f5f22a4c9c3980c858bfb33b573c2e9", "Url": "https://api.github.com/repos/lerp/EasyBuilding", "Date": "2012-12-21T02:53:26Z"},
{"Line": "=>505", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((graphIterator) != null) { mainDrawingCanvas.setBeingShown(mainDrawingCanvas.getElementAtParticularIndex(numberOfGraphToDisplay)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/2026/buggy-version/Blockade_Games_2017.src.blockadeGames.MainWindow.java", "BodyUseAPI": [], "Fixed commit": "56f69d119a75e60599901e9ede9f12fd1f5bf016", "Url": "https://api.github.com/repos/beloitcollegecomputerscience/Blockade_Games", "Date": "2017-07-07T19:34:36Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((lines.get(x).getX1()) != (lines.get(x).getX2())) { sumSlope += lines.get(x).getM(); java.lang.System.out.println((((((((((lines.get(x).getX1()) + \" \") + (lines.get(x).getY1())) + \" \") + (lines.get(x).getX2())) + \" \") + (lines.get(x).getY2())) + \" \") + (lines.get(x).getM()))); }else sizeOffset--;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/4213/buggy-version/Lines.java", "BodyUseAPI": ["java.util.ArrayList<Lines>.get(int)", "Lines.getM()", "Lines.getY1()", "java.util.ArrayList<Lines>.get(int)", "java.io.PrintStream.println(java.lang.String)", "Lines.getM()", "java.util.ArrayList<Lines>.get(int)", "java.util.ArrayList<Lines>.get(int)", "java.util.ArrayList<Lines>.get(int)", "Lines.getX1()", "Lines.getX2()", "java.util.ArrayList<Lines>.get(int)", "Lines.getY2()"], "Fixed commit": "8ab9345051e2daf5ec6147aa800d72e18dc5a79f", "Url": "https://api.github.com/repos/BenVizena/Water_Drop_Research_Program", "Date": "2017-02-16T07:05:48Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((players[n]) == null) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/4836/buggy-version/src.org.kwstudios.play.ragemode.gameLogic.PlayerList.java", "BodyUseAPI": [], "Fixed commit": "285cc70da1b20e13a5a52651ca9447ca2a09da08", "Url": "https://api.github.com/repos/KWStudios/RageMode", "Date": "2015-08-01T21:25:21Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((mDateWidget.isCalendarShown()) || (!(mDateWidget.isDayHidden()))) { linearLayout.addView(mTimeWidget); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/835/buggy-version/collect_app.src.main.java.org.odk.collect.android.widgets.DateTimeWidget.java", "BodyUseAPI": [], "Fixed commit": "c99583b1f5b5b6c65be649d0c40a48dc01268b7b", "Url": "https://api.github.com/repos/grzesiek2010/collect", "Date": "2017-04-12T16:12:13Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(stmt.containsInvokeExpr())) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/699/buggy-version/src.soot.jimple.infoflow.android.callbacks.AbstractCallbackAnalyzer.java", "BodyUseAPI": [], "Fixed commit": "21eb6435b83d61ef1ecf018dcb2c4d6bd6f7f301", "Url": "https://api.github.com/repos/denis-bogdanas/soot-infoflow-android", "Date": "2016-05-16T14:44:49Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (soot.Scene.v().hasCallGraph()) { java.util.Iterator<soot.jimple.toolkits.callgraph.Edge> edgeIt = soot.Scene.v().getCallGraph().edgesOutOf(stmt); while (edgeIt.hasNext()) { soot.jimple.toolkits.callgraph.Edge edge = edgeIt.next(); java.lang.String targetClass = edge.getTgt().method().getDeclaringClass().getName(); for (java.lang.String className : classNames) if (className.equals(targetClass)) return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/699/buggy-version/src.soot.jimple.infoflow.android.callbacks.AbstractCallbackAnalyzer.java", "BodyUseAPI": [], "Fixed commit": "21eb6435b83d61ef1ecf018dcb2c4d6bd6f7f301", "Url": "https://api.github.com/repos/denis-bogdanas/soot-infoflow-android", "Date": "2016-05-16T14:44:49Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.floor((((yPos - (widgetProvider.getGuiTop())) - ((yPosition) + 1)) / (renderer.FONT_HEIGHT)))"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (rowSelect < (displayedText.size())) { if ((widgetProvider.getTileEntity()) instanceof com.timthebrick.tinystorage.common.tileentity.TileEntityTinyStorage) { for (java.util.UUID id : TinyStorage.instance.playerUUIDMap.keySet()) { if (TinyStorage.instance.playerUUIDMap.get(id).equals(displayedText.get(rowSelect))) { if (!(((com.timthebrick.tinystorage.common.tileentity.TileEntityTinyStorage) (widgetProvider.getTileEntity())).friendsList.contains(((id.toString()) + (displayedText.get(rowSelect)))))) { PacketHandler.INSTANCE.sendToServer(new com.timthebrick.tinystorage.network.message.MessageAddFriend(id, TinyStorage.instance.playerUUIDMap.get(id), widgetProvider.getTileEntity().xCoord, widgetProvider.getTileEntity().yCoord, widgetProvider.getTileEntity().zCoord)); }else { PacketHandler.INSTANCE.sendToServer(new com.timthebrick.tinystorage.network.message.MessageRemoveFriend(id, TinyStorage.instance.playerUUIDMap.get(id), widgetProvider.getTileEntity().xCoord, widgetProvider.getTileEntity().yCoord, widgetProvider.getTileEntity().zCoord)); } } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/7402/buggy-version/src.main.java.com.timthebrick.tinystorage.client.gui.widgets.GuiFriendsList.java", "BodyUseAPI": ["TinyStorage.instance.playerUUIDMap.get(id).equals(displayedText.get(rowSelect))", "com.timthebrick.tinystorage.client.gui.widgets.GuiFriendsList.get(int)", "((com.timthebrick.tinystorage.common.tileentity.TileEntityTinyStorage) (widgetProvider.getTileEntity())).friendsList.contains(((id.toString()) + (displayedText.get(rowSelect))))", "com.timthebrick.tinystorage.client.gui.widgets.GuiFriendsList.get(int)"], "Fixed commit": "372f1db340130fd6a0fbb0eb5edc4f388f6de70f", "Url": "https://api.github.com/repos/SmithsGaming/Tiny-Storage", "Date": "2015-08-21T10:51:45Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.w3c.dom.Element.getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (classes == null) classes = \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/8431/buggy-version/dragome-guia.src.main.java.com.dragome.render.DomHelper.java", "BodyUseAPI": [], "Fixed commit": "f4910f8a0732a9721fe8628eaff2ff62584c4e81", "Url": "https://api.github.com/repos/dragome/dragome-sdk", "Date": "2014-12-31T23:16:15Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((conversionService) != null) { dto.setFeed(conversionService.convert(entity.getFeed(), jreader.dto.FeedDto.class)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/4589/buggy-version/jreader-services.src.main.java.jreader.converter.SubscriptionDtoConverter.java", "BodyUseAPI": [], "Fixed commit": "76863aa5a259f576883764f928f73005243bd1ec", "Url": "https://api.github.com/repos/uzonyib/jreader", "Date": "2015-06-07T14:26:14Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((pair.value.resolvedType) == null) pair.resolveTypeExpecting(this.scope, returnTypeBinding);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/8845/buggy-version/org.eclipse.jdt.core.compiler.org.eclipse.jdt.internal.compiler.ast.AnnotationMethodDeclaration.java", "BodyUseAPI": ["org.eclipse.jdt.internal.compiler.ast.MemberValuePair.resolveTypeExpecting(this.scope,org.eclipse.jdt.internal.compiler.lookup.TypeBinding)"], "Fixed commit": "47cd3e6cb31127575a1bbeda862fe74fff5aff5f", "Url": "https://api.github.com/repos/mateusz-matela/eclipse.jdt.core", "Date": "2014-11-23T10:25:16Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (f == null) f = clazz.getConstructor().newInstance();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/4114/buggy-version/src.com.axelby.podax.ui.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "658ba9100e65f19966beba81a97fa54bda6b30de", "Url": "https://api.github.com/repos/thasmin/Podax", "Date": "2013-10-28T12:43:34Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_savedFragments.size()) > 0) ft.addToBackStack(null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/4114/buggy-version/src.com.axelby.podax.ui.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "658ba9100e65f19966beba81a97fa54bda6b30de", "Url": "https://api.github.com/repos/thasmin/Podax", "Date": "2013-10-28T12:43:34Z"},
{"Line": "=>659", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.fieldType.equals(SuggestionCompletionEngine.TYPE_THIS)) && (boundFieldType.equals(SuggestionCompletionEngine.TYPE_DATE))) { if ((this.constraint) instanceof org.drools.ide.common.client.modeldriven.brl.HasOperator) { org.drools.ide.common.client.modeldriven.brl.HasOperator hop = ((org.drools.ide.common.client.modeldriven.brl.HasOperator) (this.constraint)); if (org.drools.ide.common.client.modeldriven.SuggestionCompletionEngine.isCEPOperator(hop.getOperator())) { return true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/794/buggy-version/guvnor-webapp.src.main.java.org.drools.guvnor.client.modeldriven.ui.ConstraintValueEditor.java", "BodyUseAPI": [], "Fixed commit": "a6923df3244ee843db8a4f363a6328dfa201687d", "Url": "https://api.github.com/repos/sotty/guvnor", "Date": "2011-07-28T14:46:03Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((times == null) || (times == 0)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/3311/buggy-version/src.de.systemNEO.recipes.Results.java", "BodyUseAPI": [], "Fixed commit": "21fd61685f3dbb3fd7ed0d03dd47cde8df36bcf1", "Url": "https://api.github.com/repos/systemNEO/Recipes", "Date": "2013-01-21T00:52:43Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mCameraHeight) > (backgroundSprite.getHeight())) { backgroundSprite.setHeight(mCameraHeight); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/2961/buggy-version/src.org.game.bangyouscreen.scene.FingerScene.java", "BodyUseAPI": ["org.andengine.entity.sprite.Sprite.setHeight(float)"], "Fixed commit": "5d50ab099e9bf741ff5a3c58d674c8d251524c97", "Url": "https://api.github.com/repos/zuowhat/BangYouScreen", "Date": "2014-02-24T09:19:23Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["sketch.world.contents.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!((other instanceof game.Key) && (((game.Key) (other)).isCollected))) { carry(((game.Carryable) (other))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/3453/buggy-version/src.game.Swarmling.java", "BodyUseAPI": [], "Fixed commit": "7e2b340ef8c068e73a66d8da29282f747c18dbd9", "Url": "https://api.github.com/repos/BoomYan/Leader", "Date": "2015-05-14T19:23:29Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["co.paralleluniverse.common.util.ExtendedStackTraceElement.getParameterTypes(java.lang.reflect.Member)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((paramTypes.length) > 0) sb.delete(((sb.length()) - 1), sb.length());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/6868/buggy-version/quasar-core.src.main.java.co.paralleluniverse.common.util.ExtendedStackTraceElement.java", "BodyUseAPI": [], "Fixed commit": "67b1b97499e58edcd050fbaa49705e518fd5e36a", "Url": "https://api.github.com/repos/puniverse/quasar", "Date": "2016-12-02T12:10:39Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(headers.isEmpty())) { headers.add(0, \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/947/buggy-version/src.main.java.org.venutolo.texttablebuilder.ToStringBuilder.java", "BodyUseAPI": [], "Fixed commit": "74ccb6d6dd4a0ff6e54d1d19d6c195b6039eb8ee", "Url": "https://api.github.com/repos/rvenutolo/text-table-builder", "Date": "2015-11-14T19:16:08Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.ui.automation.browserClient.OSUtils.isWindows()) { chromeDriverName = \"chromedriver.exe\"; chromedriverPath = java.lang.Thread.currentThread().getContextClassLoader().getResource(chromeDriverName).getPath(); }else chromeDriverName = \"chromedriver\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/2712/buggy-version/src.main.java.com.ui.automation.browserClient.BrowserClient.java", "BodyUseAPI": [], "Fixed commit": "2cb9195bc3873fc943d1f0924a89162bd6ccf323", "Url": "https://api.github.com/repos/TuXuuTT/glPl_testTask", "Date": "2016-03-10T15:54:51Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["model.getInputConfig().getInput()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (data == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/4819/buggy-version/src.gui.org.deidentifier.arx.gui.view.impl.common.ViewDataInput.java", "BodyUseAPI": [], "Fixed commit": "55e0b4285f8b07cad3a6a41564b63335bc034a0c", "Url": "https://api.github.com/repos/arx-deidentifier/arx", "Date": "2015-03-13T09:45:51Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (position == 0) { mWifiTetherNetwork = null; }else { mWifiTetherNetwork = ((android.widget.Spinner) (parent)).getItemAtPosition(position).toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/5953/buggy-version/src.com.android.settings.wifi.WifiApDialog.java", "BodyUseAPI": ["android.widget.AdapterView<?>.getItemAtPosition(int)", "((android.widget.Spinner) (parent)).getItemAtPosition(position).toString()"], "Fixed commit": "f8e2e5d68dd8023e1d1af07f00c980b96e665aee", "Url": "https://api.github.com/repos/PAC-man/android_packages_apps_Settings", "Date": "2014-08-19T03:18:59Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jdom.transform.JDOMResult.getResult()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((transformResult.size()) == 1) { return ((org.jdom.Element) (transformResult.get(0))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/3857/buggy-version/languages.util.runConfigurations.solutions.jetbrains.mps.execution.impl.source_gen.jetbrains.mps.execution.impl.configurations.RunConfigurationsStateManager.java", "BodyUseAPI": ["java.util.List.get(int)"], "Fixed commit": "4900762622087cd8cb1b1b9fc8675bbc1f1d1932", "Url": "https://api.github.com/repos/JetBrains/MPS", "Date": "2011-12-05T17:23:12Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.todoroo.astrid.subtasks.OrderedListFragmentHelper<LIST>.DraggableTaskAdapter.getItemId(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (targetTaskId <= 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/238/buggy-version/astrid.plugin-src.com.todoroo.astrid.subtasks.OrderedListFragmentHelper.java", "BodyUseAPI": [], "Fixed commit": "f7143cc2ffa2e3628d11d1c1c088d0746430106c", "Url": "https://api.github.com/repos/serzhant/astrid", "Date": "2012-02-24T00:16:50Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.todoroo.astrid.subtasks.OrderedListFragmentHelper<LIST>.DraggableTaskAdapter.getItemId(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (targetTaskId <= 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/238/buggy-version/astrid.plugin-src.com.todoroo.astrid.subtasks.OrderedListFragmentHelper.java", "BodyUseAPI": [], "Fixed commit": "f7143cc2ffa2e3628d11d1c1c088d0746430106c", "Url": "https://api.github.com/repos/serzhant/astrid", "Date": "2012-02-24T00:16:50Z"},
{"Line": "=>841", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.emc.storageos.db.client.DbClient.queryObject(java.lang.Class,java.net.URI)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (host != null) { if (!(com.emc.storageos.db.client.util.NullColumnValueGetter.isNullURI(host.getCluster()))) { oldClusterId = host.getCluster(); } if (!(com.emc.storageos.db.client.util.NullColumnValueGetter.isNullURI(host.getVcenterDataCenter()))) { oldvCenterDataCenterId = host.getVcenterDataCenter(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/7399/buggy-version/controllersvc.src.main.java.com.emc.storageos.computesystemcontroller.impl.ComputeSystemControllerImpl.java", "BodyUseAPI": ["com.emc.storageos.db.client.model.Host.getVcenterDataCenter()", "com.emc.storageos.db.client.model.Host.getCluster()", "com.emc.storageos.db.client.model.Host.getCluster()", "com.emc.storageos.db.client.model.Host.getVcenterDataCenter()", "com.emc.storageos.db.client.util.NullColumnValueGetter.isNullURI(host.getVcenterDataCenter())", "com.emc.storageos.db.client.util.NullColumnValueGetter.isNullURI(host.getCluster())"], "Fixed commit": "ffa58904c890b01bfa5ea803e979843201b693b2", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-11-28T18:18:47Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (tier.isObtainable()) { icons[tier.ordinal()] = register.registerIcon(((\"mekanism:\" + (tier.getName())) + \"TierInstaller\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/4090/buggy-version/src.main.java.mekanism.common.item.ItemTierInstaller.java", "BodyUseAPI": ["mekanism.common.Tier.BaseTier.getName()", "net.minecraft.client.renderer.texture.IIconRegister.registerIcon(((\"mekanism:\" + (tier.getName())) + \"TierInstaller\"))", "mekanism.common.Tier.BaseTier.ordinal()"], "Fixed commit": "e4eb04ea13ac0a2b48e3cf4b9f601b4c24d4f9d3", "Url": "https://api.github.com/repos/Furt/Mekanism", "Date": "2016-07-13T21:19:23Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((e.getKeyCode()) == (java.awt.event.KeyEvent.VK_DOWN)) || ((e.getKeyCode()) == (java.awt.event.KeyEvent.VK_UP))) { try { statusLabel.setText((\"Line \" + ((editor.getLineOfOffset(editor.getCaretPosition())) + 1))); } catch (javax.swing.text.BadLocationException ble) { com.raviteja.editor.EditorWindow.logger.error((\"Unable to get line number: \" + ble)); statusLabel.setText(\"\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/7382/buggy-version/src.com.raviteja.editor.EditorWindow.java", "BodyUseAPI": [], "Fixed commit": "baecb100244c0149fa8d1f7b74793e0cd6c1fbab", "Url": "https://api.github.com/repos/cyberpirate92/FileViewer", "Date": "2017-04-16T00:06:45Z"},
{"Line": "=>350", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lavit.Env.isMac()) { java.lang.String path = java.lang.System.getenv(\"PATH\"); if (!(java.util.Arrays.asList(path.split(\":\")).contains(\"/usr/local/bin\"))) { map.put(\"PATH\", (\"/usr/local/bin:\" + path)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/3729/buggy-version/src.lavit.Env.java", "BodyUseAPI": [], "Fixed commit": "d507ce3dfa47ccba2f8171288537328831a008bb", "Url": "https://api.github.com/repos/lmntal/lavit", "Date": "2015-04-15T05:32:53Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((m_Window) != null) { m_Window.dispose(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/2456/buggy-version/src.plugins.functions.gui.ProgressWindow.java", "BodyUseAPI": [], "Fixed commit": "467d9389e5145dbebf5d3e585cad53dce0f5800f", "Url": "https://api.github.com/repos/tbepler/JProbe", "Date": "2014-06-26T21:24:22Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (networkInfo != null) isMobileConn = networkInfo.isConnected();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/1054/buggy-version/app.src.main.java.eu.focusnet.app.ui.activity.LoginActivity.java", "BodyUseAPI": ["android.net.NetworkInfo.isConnected()"], "Fixed commit": "75409ea03eb5434032250b48a89be83e48f32d44", "Url": "https://api.github.com/repos/focusnet/focus-app-android", "Date": "2016-02-24T13:02:44Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (javax.swing.JFrame.isDefaultLookAndFeelDecorated()) { frame.dispose(); frame.setUndecorated((lookAndFeel instanceof javax.swing.plaf.metal.MetalLookAndFeel)); frame.getRootPane().setWindowDecorationStyle(javax.swing.JRootPane.FRAME); frame.setVisible(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/5773/buggy-version/src.main.java.com.example.Main.java", "BodyUseAPI": [], "Fixed commit": "1024476a3b95a6789eeb4d8a1cf57fe2e3d35639", "Url": "https://api.github.com/repos/unix-junkie/dynamic-laf-switch", "Date": "2013-08-14T11:22:26Z"},
{"Line": "=>1563", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getTBox().getCI(e(D)).getTaxVertex()", "getTBox().getCI(e(C)).getTaxVertex()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((cV == null) || (dV == null)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/4906/buggy-version/src.main.java.uk.ac.manchester.cs.jfact.kernel.ReasoningKernel.java", "BodyUseAPI": [], "Fixed commit": "dc805583e596421cdd699db9c4928b257afb02dd", "Url": "https://api.github.com/repos/owlcs/jfact", "Date": "2014-01-12T11:40:56Z"},
{"Line": "=>855", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["wyil.transforms.ConstantPropagation.Env.get(code.operand)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (c instanceof wyil.transforms.ConstantPropagation.Alias) { environment.set(code.operand, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/4860/buggy-version/modules.wyil.src.wyil.transforms.ConstantPropagation.java", "BodyUseAPI": [], "Fixed commit": "727993b74b03f2dcf2b5fb4446a4bff29e0a7b56", "Url": "https://api.github.com/repos/DavePearce/Whiley", "Date": "2013-06-26T10:57:44Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (polyLineOptions != null) { vn.efode.vts.MainActivity.map.addPolyline(polyLineOptions); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/1269/buggy-version/mobile_app.app.src.main.java.vn.efode.vts.service.ParserTask.java", "BodyUseAPI": ["vn.efode.vts.service.ParserTask.addPolyline(com.google.android.gms.maps.model.PolylineOptions)"], "Fixed commit": "02a184a68d954f4ab80aa4d6edd839723f14752c", "Url": "https://api.github.com/repos/efode-intership/VTS", "Date": "2017-04-17T04:31:02Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(measurements.get(houseId).isEmpty())) return measurements.get(houseId).get(0); else return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/7070/buggy-version/src.main.java.ge.edu.freeuni.sdp.iot.sensor.bath_humidity.data.InMemoryRepository.java", "BodyUseAPI": ["measurements.get(houseId).get(int)", "java.util.Map<java.lang.String, java.util.List<ge.edu.freeuni.sdp.iot.sensor.bath_humidity.model.Humidity>>.get(java.lang.String)"], "Fixed commit": "2ddebd9e18ccc115913ae93d8448be1e12d084e2", "Url": "https://api.github.com/repos/freeuni-sdp/iot-bath-humidity-sensor", "Date": "2016-07-13T16:38:27Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((arrayList.size()) != 0) { if (arrayList.contains(0)) { displayString = displayString.toUpperCase(); } if (arrayList.contains(1)) { displayString = displayString + \"!!!!\"; } if (arrayList.contains(2)) { displayString = displayString + \" :)\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/997/buggy-version/app.src.main.java.com.example.angel.textchanger.MainActivity.java", "BodyUseAPI": ["java.util.ArrayList.contains(int)", "java.util.ArrayList.contains(int)", "java.util.ArrayList.contains(int)"], "Fixed commit": "050f356cc3817f5d06cf6c3471c98ca973b92d17", "Url": "https://api.github.com/repos/Alex-Olson/TextChanger", "Date": "2015-10-13T00:04:39Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.subForm) != null) { org.json.JSONObject formElements = this.subForm.getSubFormJSON(); if ((formElements.length()) > 0) { rdfbones.lib.JSON.put(obj, \"formElements\", formElements); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/3435/buggy-version/src.rdfbones.form.SubformAdder.java", "BodyUseAPI": [], "Fixed commit": "9f3dddf108f573de6a53d1ecbd8738b39178c506", "Url": "https://api.github.com/repos/RDFBones/RDFBones", "Date": "2016-12-01T19:13:32Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(java.nio.file.Files.exists(to.getParent()))) { com.atlauncher.utils.FileUtils.createDirectory(to.getParent()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/4533/buggy-version/src.main.java.com.atlauncher.utils.FileUtils.java", "BodyUseAPI": ["com.atlauncher.utils.FileUtils.createDirectory(java.nio.file.Path)", "java.nio.file.Path.getParent()"], "Fixed commit": "f553d1d5cdd5e405ffec08b638ac4a3e76549275", "Url": "https://api.github.com/repos/ATLauncher/ATLauncher", "Date": "2015-05-25T02:10:06Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getParams().getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (stringValue == null) stringValue = \"4G\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/5587/buggy-version/src.preference_network.LaunchSettings.java", "BodyUseAPI": [], "Fixed commit": "40cf5c0350fab9e96e09bed7726f757908375eca", "Url": "https://api.github.com/repos/MPTCP-smartphone-thesis/uitests-preference_network", "Date": "2014-11-19T10:08:33Z"},
{"Line": "=>2920", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JComboBox.getSelectedItem()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (selectedName.equals(\"BrowserComponent\")) { c = new com.codename1.ui.Label(\"Preview\", \"BrowserComponent\"); }else { java.lang.Class cls = java.lang.Class.forName((\"com.codename1.ui.\" + selectedName)); c = ((com.codename1.ui.Component) (cls.newInstance())); if (c instanceof com.codename1.ui.Label) { ((com.codename1.ui.Label) (c)).setText(\"Preview\"); }else { if (c instanceof com.codename1.ui.List) { ((com.codename1.ui.List) (c)).setModel(new com.codename1.ui.list.DefaultListModel(new java.lang.Object[]{ \"Preview 1\", \"Preview 2\", \"Preview 3\" })); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/7877/buggy-version/CodenameOneDesigner.src.com.codename1.designer.AddThemeEntry.java", "BodyUseAPI": ["java.lang.Class.forName(java.lang.String)"], "Fixed commit": "5374cb3314018ae5c3eb1be338f3c8a33b03e87c", "Url": "https://api.github.com/repos/codenameone/CodenameOne", "Date": "2016-10-05T09:37:16Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((state instanceof twopiradians.minewatch.client.render.tileentity.TileEntityOBJRenderer.OBJModelState) && (textures.containsKey(\"None\"))) this.particleTexture = textures.get(\"None\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/398/buggy-version/src.main.java.twopiradians.minewatch.client.model.BakedMWItem.java", "BodyUseAPI": [], "Fixed commit": "49cf9011d4251a3cf2bd0f639719b7b229fa5aeb", "Url": "https://api.github.com/repos/2piradians/Minewatch", "Date": "2017-12-19T03:59:27Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.liferay.ide.core.util.FileUtil.notExists(sdk.getLocation())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/4685/buggy-version/tools.plugins.com.liferay.ide.sdk.core.src.com.liferay.ide.sdk.core.SDKManager.java", "BodyUseAPI": [], "Fixed commit": "220974615348db9d1241a739fb52b72643775c4d", "Url": "https://api.github.com/repos/rui123wang/liferay-ide", "Date": "2017-11-22T06:42:39Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((targetValues.size()) > 1) { target = targetValues.get(1); }else { target = targetValues.get(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/8160/buggy-version/src.me.ryanhamshire.griefprevention.command.CommandClaimFlagGroup.java", "BodyUseAPI": ["java.util.List<java.lang.String>.get(int)", "java.util.List<java.lang.String>.get(int)"], "Fixed commit": "6f2fca7e99fa2d3696a3601607d48ead1057a998", "Url": "https://api.github.com/repos/MinecraftPortCentral/GriefPrevention", "Date": "2017-01-09T18:32:46Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((targetValues.size()) > 1) { target = targetValues.get(1); }else { target = targetValues.get(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/8160/buggy-version/src.me.ryanhamshire.griefprevention.command.CommandClaimFlag.java", "BodyUseAPI": ["java.util.List<java.lang.String>.get(int)", "java.util.List<java.lang.String>.get(int)"], "Fixed commit": "6f2fca7e99fa2d3696a3601607d48ead1057a998", "Url": "https://api.github.com/repos/MinecraftPortCentral/GriefPrevention", "Date": "2017-01-09T18:32:46Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.onefengma.taobuxiu.manager.AuthManager.instance().getUserProfile()", "com.alibaba.fastjson.JSON.parseObject(message.getContent(),java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (((data != null) && (userProfile != null)) && (!(com.onefengma.taobuxiu.utils.StringUtils.equals(data.userId, userProfile.userId)))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/3555/buggy-version/app.src.main.java.com.onefengma.taobuxiu.push.DemoMessageReceiver.java", "BodyUseAPI": [], "Fixed commit": "de0bb56b6a4ed8e074ae1368de4e17d3e9ce250c", "Url": "https://api.github.com/repos/chufengma/b2bApp", "Date": "2016-09-17T01:59:18Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!directChildsOnly) && (element.hasChilderen())) { try { return getConfigElementRecursiveByContent(element, filter, filterType, directChildsOnly); } catch (org.jboss.forge.maven.plugins.ConfigurationElementNotFoundException ex) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/7981/buggy-version/maven-api.src.main.java.org.jboss.forge.maven.plugins.ConfigurationElementImpl.java", "BodyUseAPI": ["org.jboss.forge.maven.plugins.ConfigurationElementImpl.getConfigElementRecursiveByContent(org.jboss.forge.maven.plugins.ConfigurationElement,java.lang.String,org.jboss.forge.maven.plugins.ConfigurationElementImpl.FilterType,boolean)"], "Fixed commit": "a05e303d162aec5e67bf41788ca591c0db85a75f", "Url": "https://api.github.com/repos/forge/core", "Date": "2011-05-23T13:56:09Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!added) { tail.next = new Link(pcb); tail = tail.next; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/434/buggy-version/PriorityQueue.java", "BodyUseAPI": [], "Fixed commit": "49e6997abd9ca68adaf7945d86ca9fba9dc3577c", "Url": "https://api.github.com/repos/EJEHardenberg/CPU-Schedule", "Date": "2012-12-02T06:54:56Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Pattern.matcher(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (mat.find()) return mat.group();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/8682/buggy-version/app.src.com.goal98.flipdroid.model.Article.java", "BodyUseAPI": ["java.util.regex.Matcher.group()"], "Fixed commit": "9e743da1115212b36a59e95ec615f29e0a1d5f6a", "Url": "https://api.github.com/repos/helianbobo/FlipDroid", "Date": "2011-12-21T16:42:29Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (operation == (ORole.PERMISSION_NONE)) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/8602/buggy-version/core.src.main.java.com.orientechnologies.orient.core.metadata.security.ORule.java", "BodyUseAPI": [], "Fixed commit": "63d8f41651bf049ab5253649b7b9ad115a3cd10b", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2015-08-20T16:05:02Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getString(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (predictions.isEmpty()) { return new java.util.ArrayList<>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/2078/buggy-version/app.src.main.java.com.klinker.android.launcher.launcher3.allapps.PredictiveAppsProvider.java", "BodyUseAPI": [], "Fixed commit": "4a44ed29217c58d30be74c958a6d2cfca736e037", "Url": "https://api.github.com/repos/klinker24/Android-Blur-Launcher", "Date": "2015-10-08T15:00:03Z"},
{"Line": "=>382", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (type2.equals(ObjType.OLIGO)) { typeQuery = mainQuery.createAssociationQuery(Sample.Fields.OLIGO); typeQuery.add(typeQuery.getMatchesCrit(Oligo.Fields.NAME, name)); }else if (type2.equals(ObjType.PLASMID)) { typeQuery = mainQuery.createAssociationQuery(Sample.Fields.PLASMID); typeQuery.add(typeQuery.getMatchesCrit(Plasmid.Fields.NAME, name)); }else if (type2.equals(ObjType.STRAIN)) { typeQuery = mainQuery.createAssociationQuery(Sample.Fields.STRAIN); typeQuery.add(typeQuery.getMatchesCrit(Strain.Fields.NAME, name)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/5017/buggy-version/ClothoBiofabEdition.ClothoApps.SearchAlgorithms.src.org.clothocad.algorithm.searchalgorithm.searchActor.java", "BodyUseAPI": ["org.clothocad.algorithm.searchalgorithm.ObjType.equals(ObjType.STRAIN)", "org.clothocad.algorithm.searchalgorithm.ObjType.equals(ObjType.PLASMID)"], "Fixed commit": "33ea2af78ab0310840f34f9ee0e2b91ee17e1702", "Url": "https://api.github.com/repos/jenhantao/iGEM-Clotho", "Date": "2011-09-23T00:00:52Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.twistlet.falcon.model.service.StaffService.listStaffByAdminStaffLike(com.twistlet.falcon.model.entity.FalconUser,com.twistlet.falcon.model.entity.FalconStaff)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.apache.commons.collections.CollectionUtils.isNotEmpty(staffs)) { for (com.twistlet.falcon.model.entity.FalconStaff theStaff : staffs) { if (org.apache.commons.lang3.StringUtils.isNotBlank(id)) { if (theStaff.getId().equals(java.lang.Integer.valueOf(id))) { break; } } isValid = false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/2240/buggy-version/src.main.java.com.twistlet.falcon.controller.ListStaffController.java", "BodyUseAPI": [], "Fixed commit": "843852aadf64a50556f03802114ba97dd9de64d6", "Url": "https://api.github.com/repos/blacksnow666/falcon", "Date": "2013-05-23T17:00:14Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!createOrUpdate) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/72/buggy-version/performance.performance-assessment.src.main.java.org.egov.pa.validator.RequestValidator.java", "BodyUseAPI": [], "Fixed commit": "60f0853188d85fdec930ac97fbed1713df3cb738", "Url": "https://api.github.com/repos/egovernments/egov-services", "Date": "2017-12-07T07:36:36Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((doc.getActive()) && (org.apache.commons.lang3.StringUtils.isNotBlank(doc.getName()))) || ((!(doc.getActive())) && (org.apache.commons.lang3.StringUtils.isNotBlank(doc.getName())))) { finalDocumentList.add(doc); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/72/buggy-version/performance.performance-assessment.src.main.java.org.egov.pa.validator.RequestValidator.java", "BodyUseAPI": ["java.util.List<org.egov.pa.model.Document>.add(org.egov.pa.model.Document)"], "Fixed commit": "60f0853188d85fdec930ac97fbed1713df3cb738", "Url": "https://api.github.com/repos/egovernments/egov-services", "Date": "2017-12-07T07:36:36Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (cookies != null) { java.util.StringTokenizer tokenizer = new java.util.StringTokenizer(cookies, \"; \"); while (tokenizer.hasMoreTokens()) { java.lang.String cookie = tokenizer.nextToken(); cookiesList.add(cookie); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/9098/buggy-version/src.server.basics.HttpRequest.java", "BodyUseAPI": [], "Fixed commit": "0c8a24ac31dc1358655cb120aa052181f4301b2e", "Url": "https://api.github.com/repos/igorravasi/Memo", "Date": "2015-05-22T21:49:44Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((taskToEdit.isEvent()) && (!((editTaskDescriptor.getStart().isPresent()) && (editTaskDescriptor.getStart().get().getValue().isEmpty())))) { seedu.address.model.task.TaskDate updatedStartDate = editTaskDescriptor.getStart().orElseGet(((seedu.address.model.task.ReadOnlyEvent) (taskToEdit))::getStartDate); seedu.address.model.task.TaskTime updatedStartTime = editTaskDescriptor.getStartTime().orElseGet(((seedu.address.model.task.ReadOnlyEvent) (taskToEdit))::getStartTime); if ((taskToEdit.isRecurring()) || ((editTaskDescriptor.getRecurringMode()) != null)) { return new seedu.address.model.task.RecurringEvent(updatedName, updatedStartDate, updatedStartTime, updatedDueDate, updatedDueTime, updatedDescription, updatedTag, updatedVenue, updatedPriority, isFavourite, isFinished, mode); }else { return new seedu.address.model.task.Event(updatedName, updatedStartDate, updatedStartTime, updatedDueDate, updatedDueTime, updatedDescription, updatedTag, updatedVenue, updatedPriority, isFavourite, isFinished); } }else if ((!(taskToEdit.isEvent())) && ((editTaskDescriptor.getStart().isPresent()) && (!(editTaskDescriptor.getStart().get().getValue().isEmpty())))) { seedu.address.model.task.TaskDate updatedStartDate = editTaskDescriptor.getStart().orElse(new seedu.address.model.task.TaskDate(\"\")); seedu.address.model.task.TaskTime updatedStartTime = editTaskDescriptor.getStartTime().orElse(new seedu.address.model.task.TaskTime(\"\")); if ((taskToEdit.isRecurring()) || ((editTaskDescriptor.getRecurringMode()) != null)) { return new seedu.address.model.task.RecurringEvent(updatedName, updatedStartDate, updatedStartTime, updatedDueDate, updatedDueTime, updatedDescription, updatedTag, updatedVenue, updatedPriority, isFavourite, isFinished, mode); }else { return new seedu.address.model.task.Event(updatedName, updatedStartDate, updatedStartTime, updatedDueDate, updatedDueTime, updatedDescription, updatedTag, updatedVenue, updatedPriority, isFavourite, isFinished); } }else { if ((taskToEdit.isRecurring()) || ((editTaskDescriptor.getRecurringMode()) != null)) { return new seedu.address.model.task.RecurringTask(updatedName, updatedDueDate, updatedDueTime, updatedDescription, updatedTag, updatedVenue, updatedPriority, isFavourite, isFinished, mode); }else { return new seedu.address.model.task.Task(updatedName, updatedDueDate, updatedDueTime, updatedDescription, updatedTag, updatedVenue, updatedPriority, isFavourite, isFinished); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/2784/buggy-version/src.main.java.seedu.address.logic.commands.EditCommand.java", "BodyUseAPI": ["seedu.address.logic.commands.EditTaskDescriptor.getStartTime()", "seedu.address.logic.commands.EditTaskDescriptor.getStart()", "editTaskDescriptor.getStartTime().orElseGet(((seedu.address.model.task.ReadOnlyEvent) (taskToEdit))::getStartTime)", "editTaskDescriptor.getStart().orElse(seedu.address.model.task.TaskDate)", "seedu.address.logic.commands.EditTaskDescriptor.getStart()", "seedu.address.logic.commands.EditTaskDescriptor.getStart()", "editTaskDescriptor.getStart().get()", "editTaskDescriptor.getStartTime().orElse(seedu.address.model.task.TaskTime)", "editTaskDescriptor.getStart().get().getValue().isEmpty()", "seedu.address.model.task.ReadOnlyTask.isEvent()", "editTaskDescriptor.getStart().orElseGet(((seedu.address.model.task.ReadOnlyEvent) (taskToEdit))::getStartDate)", "seedu.address.model.task.ReadOnlyTask.isRecurring()", "seedu.address.logic.commands.EditTaskDescriptor.getRecurringMode()", "seedu.address.logic.commands.EditTaskDescriptor.getStart()", "seedu.address.model.task.ReadOnlyTask.isRecurring()", "seedu.address.logic.commands.EditTaskDescriptor.getRecurringMode()", "editTaskDescriptor.getStart().get().getValue()", "seedu.address.logic.commands.EditTaskDescriptor.getRecurringMode()", "editTaskDescriptor.getStart().isPresent()", "seedu.address.model.task.ReadOnlyTask.isRecurring()", "seedu.address.logic.commands.EditTaskDescriptor.getStartTime()"], "Fixed commit": "63f92ea639cd40996dd53f0c467a0b18f7c89cc8", "Url": "https://api.github.com/repos/CS2103JAN2017-W10-B1/main", "Date": "2017-04-08T05:55:23Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getCurrentIndex()) == 0) { args.add(\"-\"); }else { super.addArgs(args); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/6704/buggy-version/src.main.java.net.earthcomputer.easyeditors.gui.command.syntax.SyntaxFill.java", "BodyUseAPI": [], "Fixed commit": "3b888509e8b82c8e666be3c74de75259a0f39ec2", "Url": "https://api.github.com/repos/Earthcomputer/Easy-Editors", "Date": "2017-04-20T07:08:30Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((intentMappingServiceRegistration) != null) intentMappingServiceRegistration.unregister();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/750/buggy-version/intent-mapping-mdsal.src.main.java.org.opendaylight.nic.mapping.mdsal.impl.MappingMdsalProvider.java", "BodyUseAPI": [], "Fixed commit": "140e264250377c664778c3a5db43e66e10cd657f", "Url": "https://api.github.com/repos/opendaylight/nic", "Date": "2015-11-21T00:29:35Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((args.length) == 0) { if ((this.executorMap.get(label)) != null) { com.dhlab.xephyr.bukkit.commands.XCommandExecutor executor = this.executorMap.get(label); executor.handleCommand(new com.dhlab.xephyr.bukkit.commands.CommandArgs(sender, label, args)); return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/7613/buggy-version/src.main.java.com.dhlab.xephyr.bukkit.commands.CommandFramework.java", "BodyUseAPI": ["com.dhlab.xephyr.bukkit.commands.XCommandExecutor.handleCommand(com.dhlab.xephyr.bukkit.commands.CommandArgs)"], "Fixed commit": "7fd0396595c2014da88fc176f9ecd07ac8146609", "Url": "https://api.github.com/repos/DHLAB-Development/Xephyr", "Date": "2014-06-03T00:47:21Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (flags == (mines[x][y])) { if (lost) { matrix[tempX][tempY].click(true); }else { clickAdjacent(x, y); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/7380/buggy-version/src.gui.MineField.java", "BodyUseAPI": ["gui.MineField.clickAdjacent(int,int)"], "Fixed commit": "72f56a02bb12388c608cb864cca1bb50a4e830ba", "Url": "https://api.github.com/repos/digli/minesweeper", "Date": "2013-12-26T16:26:00Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.tigerzone.fall2016.tileplacement.tile.BoardTile.getTerrainNode(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((predatorPlacementNode.getMinimumZoneValue()) != predatorPlacementZone) { predatorPlaceable = false; }else if (!(predatorPlacementNode.getArea().isPredatorPlaceable(predator))) { predatorPlaceable = false; }else if (!(predatorPlacementNode.getArea().canPlaceTiger())) { predatorPlaceable = false; }else { com.tigerzone.fall2016.area.Area area = predatorPlacementNode.getArea(); predatorPlaceable = false; if (area != null) { area.placePredator(predator); predatorPlaceable = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/4638/buggy-version/src.com.tigerzone.fall2016.area.AreaManager.java", "BodyUseAPI": ["com.tigerzone.fall2016.area.terrainnode.TerrainNode.getArea()", "com.tigerzone.fall2016.area.terrainnode.TerrainNode.getArea()", "com.tigerzone.fall2016.area.terrainnode.TerrainNode.getArea()", "predatorPlacementNode.getArea().canPlaceTiger()", "predatorPlacementNode.getArea().isPredatorPlaceable(com.tigerzone.fall2016.animals.Predator)"], "Fixed commit": "609575eea23a15fd9caf27a8bac37cff5a8d2177", "Url": "https://api.github.com/repos/chausen/TigerZoneServer", "Date": "2016-12-05T17:50:48Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((COUNT_OF_5) > 0) { toIssue5 = ((amount - (toIssue20 * 20)) - (toIssue10 * 10)) / 5; if (toIssue5 > (COUNT_OF_5)) { org.ostroukh.SimulatorATM.model.Terminal.LOGGER.info(\"Failed to issue the specified amount\"); COUNT_OF_20 = (COUNT_OF_20) + toIssue20; COUNT_OF_10 = (COUNT_OF_10) + toIssue10; return false; } COUNT_OF_5 = (COUNT_OF_5) - toIssue5; }else if (amount != (((toIssue20 * 20) + (toIssue10 * 10)) + (toIssue5 * 5))) { org.ostroukh.SimulatorATM.model.Terminal.LOGGER.info(\"Failed to issue the specified amount\"); COUNT_OF_20 = (COUNT_OF_20) + toIssue20; COUNT_OF_10 = (COUNT_OF_10) + toIssue10; return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/780/buggy-version/src.main.java.org.ostroukh.SimulatorATM.model.Terminal.java", "BodyUseAPI": [], "Fixed commit": "84683472c65d7e2d25fefac4d4f640577c095ed7", "Url": "https://api.github.com/repos/astraukh/SimulatorATM", "Date": "2017-10-15T13:35:05Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["isaac.bastion.manager.BastionBlockManager.getBlockingBastion(org.bukkit.Location,player.getName())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (bastion.shouldCull()) bastions.remove(bastion);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/1117/buggy-version/Bastion.src.isaac.bastion.manager.BastionBlockManager.java", "BodyUseAPI": ["isaac.bastion.storage.BastionBlockSet.remove(isaac.bastion.BastionBlock)"], "Fixed commit": "641d2c644478a129619f1789e5076e21ea8f6b10", "Url": "https://api.github.com/repos/spaceFountain/Bastion", "Date": "2014-01-01T21:39:16Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (shouldHandle) { bastion.handlePlaced(loc.getBlock()); player.getInventory().remove(new org.bukkit.inventory.ItemStack(loc.getBlock().getType())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/1117/buggy-version/Bastion.src.isaac.bastion.manager.BastionBlockManager.java", "BodyUseAPI": [], "Fixed commit": "641d2c644478a129619f1789e5076e21ea8f6b10", "Url": "https://api.github.com/repos/spaceFountain/Bastion", "Date": "2014-01-01T21:39:16Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.net.ConnectivityManager.getActiveNetworkInfo()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((netInfo != null) && (netInfo.isConnectedOrConnecting())) { readWebpage(l); }else { android.widget.Toast.makeText(this, R.string.NOWEB, Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/5910/buggy-version/src.com.andredittrich.dataresource.WFSSelectionActivity.java", "BodyUseAPI": [], "Fixed commit": "9dfd7d4a9e81035ee8f923fbfe79082090abc90f", "Url": "https://api.github.com/repos/AndrePeter/G-REX3D", "Date": "2012-08-27T18:02:55Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (depth == 0) { this.startAirport = f.dep.code; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/5093/buggy-version/FlightReservationSystem.src.flightFinder.Search.java", "BodyUseAPI": [], "Fixed commit": "e0af2f84478ce5cf9ee7b293c0a3d5dd34e94423", "Url": "https://api.github.com/repos/GunnarHorve/SSR_FlightReservation", "Date": "2017-04-24T23:46:30Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.stratos.autoscaler.context.cluster.ClusterInstanceContext.getPartitionAlgorithm()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (paritionAlgo == null) { paritionAlgo = \"one-after-another\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/9181/buggy-version/components.org.apache.stratos.autoscaler.src.main.java.org.apache.stratos.autoscaler.monitor.cluster.VMClusterMonitor.java", "BodyUseAPI": [], "Fixed commit": "0b18914f107cc6351f7356e1f14c92c70194e813", "Url": "https://api.github.com/repos/manulachathurika/Stratos", "Date": "2014-12-06T08:01:35Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Method.getName()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (methodName.equals(\"hashCode\")) { return java.lang.System.identityHashCode(proxy); }else if (\"toString\".equals(methodName)) { return toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/7294/buggy-version/vfs.src.main.java.org.jboss.spring.vfs.VFSResourcePatternResolvingHelper.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "289667b3c06d6c970a89e44291a8db42a6e07e9d", "Url": "https://api.github.com/repos/dlmiles/snowdrop", "Date": "2013-02-06T16:42:48Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mailData.getMailerName().equalsIgnoreCase(\"PRS\")) { if (counter != 0) { sb.append(\"\\n\"); } sb.append((++counter)).append(\". \").append(mailData.getMailerName()).append(\" process on hold\"); }else { if (mailData.getMailSentChange().contains(\"-\")) { if (counter != 0) { sb.append(\"\\n\"); } sb.append((++counter)).append(\". \").append(mailData.getMailerName()).append(\" dip by \").append(mailData.getMailSentChange().replace(\"-\", \"\")).append(\".\"); }else if (((mailData.getMailSentBenchMark()) == 0) && ((mailData.getMailsSent()) > 0)) { if (counter != 0) { sb.append(\"\\n\"); } sb.append((++counter)).append(\". \").append(mailData.getMailerName()).append(\" running overnight.\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/1729/buggy-version/src.main.java.utils.SMSSender.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "testData.MailData.getMailsSent()", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "mailData.getMailSentChange().replace(java.lang.String,java.lang.String)", "java.lang.StringBuilder.append(mailData.getMailerName())", "sb.append((++counter)).append(\". \").append(mailData.getMailerName()).append(\" dip by \").append(mailData.getMailSentChange().replace(\"-\", \"\")).append(java.lang.String)", "mailData.getMailSentChange().contains(java.lang.String)", "sb.append((++counter)).append(\". \").append(mailData.getMailerName()).append(\" dip by \").append(mailData.getMailSentChange().replace(\"-\", \"\"))", "testData.MailData.getMailerName()", "java.lang.StringBuilder.append(mailData.getMailerName())", "java.lang.StringBuilder.append(mailData.getMailerName())", "testData.MailData.getMailerName()", "testData.MailData.getMailSentChange()", "testData.MailData.getMailSentChange()", "testData.MailData.getMailSentBenchMark()", "testData.MailData.getMailerName()"], "Fixed commit": "1ad7bc80c85801974c095a0662bb2aaccc9a0da6", "Url": "https://api.github.com/repos/dailymasreport/MASReportMailer", "Date": "2017-06-08T06:48:57Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dir == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/3917/buggy-version/src.main.java.ru.spbu.astro.dust.PixPlot.java", "BodyUseAPI": [], "Fixed commit": "ede539b9155536c8299e6fe754d61cb7bc57e599", "Url": "https://api.github.com/repos/amosov-f/DustDetection", "Date": "2013-12-18T08:27:20Z"},
{"Line": "=>642", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sEnemies.get(i).getEnemyType()) == (enemyType.fire_boss)) { com.gra.rozgrywka.BossSprite e = new com.gra.rozgrywka.BossSprite(enemies, this, enemyType.fire_boss, sEnemies.get(i).getX(), sEnemies.get(i).getY(), enemyAttacks); e.setAll(sEnemies.get(i).getX(), sEnemies.get(i).getY(), sEnemies.get(i).getLife(), sEnemies.get(i).getSlowedTimes(), sEnemies.get(i).getState(), sEnemies.get(i).getRange(), sEnemies.get(i).getCurrentFrame()); enemies.add(e); }else { com.gra.rozgrywka.EnemySprite e = createEnemy(sEnemies.get(i).getEnemyType(), sEnemies.get(i).getX(), sEnemies.get(i).getY()); e.setAll(sEnemies.get(i).getX(), sEnemies.get(i).getY(), sEnemies.get(i).getLife(), sEnemies.get(i).getSlowedTimes(), sEnemies.get(i).getState(), sEnemies.get(i).getRange(), sEnemies.get(i).getCurrentFrame()); enemies.add(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/7355/buggy-version/src.com.gra.rozgrywka.GameView.java", "BodyUseAPI": ["java.util.List<com.gra.rozgrywka.Unit>.get(int)", "java.util.List<com.gra.rozgrywka.Unit>.get(int)", "java.util.List<com.gra.rozgrywka.Unit>.get(int)", "java.util.List<com.gra.rozgrywka.Unit>.get(int)", "java.util.List<com.gra.rozgrywka.Unit>.get(int)", "java.util.List<com.gra.rozgrywka.Unit>.get(int)", "sEnemies.get(i).getX()", "java.util.List<com.gra.rozgrywka.Unit>.get(int)", "java.util.List<com.gra.rozgrywka.Unit>.get(int)", "java.util.List<com.gra.rozgrywka.Unit>.get(int)", "sEnemies.get(i).getX()", "sEnemies.get(i).getY()", "sEnemies.get(i).getSlowedTimes()", "sEnemies.get(i).getX()", "sEnemies.get(i).getY()", "java.util.List<com.gra.rozgrywka.Unit>.get(int)", "java.util.List<com.gra.rozgrywka.Unit>.get(int)", "java.util.List<com.gra.rozgrywka.Unit>.get(int)", "sEnemies.get(i).getRange()", "sEnemies.get(i).getX()", "sEnemies.get(i).getLife()", "sEnemies.get(i).getCurrentFrame()", "sEnemies.get(i).getCurrentFrame()", "java.util.List<com.gra.rozgrywka.Unit>.get(int)", "java.util.List<com.gra.rozgrywka.Unit>.get(int)", "sEnemies.get(i).getState()", "sEnemies.get(i).getRange()", "sEnemies.get(i).getY()", "com.gra.rozgrywka.BossSprite.setAll(sEnemies.get(i).getX(),sEnemies.get(i).getY(),sEnemies.get(i).getLife(),sEnemies.get(i).getSlowedTimes(),sEnemies.get(i).getState(),sEnemies.get(i).getRange(),sEnemies.get(i).getCurrentFrame())", "com.gra.rozgrywka.GameView.createEnemy(sEnemies.get(i).getEnemyType(),sEnemies.get(i).getX(),sEnemies.get(i).getY())", "sEnemies.get(i).getEnemyType()", "java.util.List<com.gra.rozgrywka.Unit>.get(int)", "java.util.List<com.gra.rozgrywka.Unit>.get(int)", "sEnemies.get(i).getY()", "java.util.List<com.gra.rozgrywka.Unit>.get(int)", "sEnemies.get(i).getSlowedTimes()", "sEnemies.get(i).getState()", "java.util.List<com.gra.rozgrywka.Unit>.get(int)", "java.util.List<com.gra.rozgrywka.Unit>.get(int)", "sEnemies.get(i).getLife()", "com.gra.rozgrywka.EnemySprite.setAll(sEnemies.get(i).getX(),sEnemies.get(i).getY(),sEnemies.get(i).getLife(),sEnemies.get(i).getSlowedTimes(),sEnemies.get(i).getState(),sEnemies.get(i).getRange(),sEnemies.get(i).getCurrentFrame())"], "Fixed commit": "8b40f04e9898ea886e87e784b5113cd52f6cccbc", "Url": "https://api.github.com/repos/szpada/myfirstproject", "Date": "2012-06-10T21:41:32Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((action.Manager.getUser()) == null) return this.schools = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/2165/buggy-version/src.action.function.teacher.Export.java", "BodyUseAPI": [], "Fixed commit": "e59f207d783467375b3480030238a6d2375a517b", "Url": "https://api.github.com/repos/LionCherry/EPMS", "Date": "2017-12-14T05:22:09Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((action.Manager.getUser()) != null) { token.Role r = token.Role.getRole(action.Manager.getUser()); if (r != null) this.setSchoolName(r.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/2165/buggy-version/src.action.function.teacher.Export.java", "BodyUseAPI": [], "Fixed commit": "e59f207d783467375b3480030238a6d2375a517b", "Url": "https://api.github.com/repos/LionCherry/EPMS", "Date": "2017-12-14T05:22:09Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tenv.source.charAt(tok_start)) != 0) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/9105/buggy-version/src.sugar.tokenizer.parser.ParseUNDEF.java", "BodyUseAPI": [], "Fixed commit": "74904c78294be7303eb06c20e48d4d273a89ffe2", "Url": "https://api.github.com/repos/shinpei/jkonoha", "Date": "2012-05-14T07:54:21Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.worldObj.getBlock(int,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((blockcheck.getCollisionBoundingBoxFromPool(this.worldObj, xend, yend, zend)) != null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/837/buggy-version/src.main.java.commoble.ccritter.com.entity.gnome.EntityGnomeDeep.java", "BodyUseAPI": [], "Fixed commit": "ff4a130da747527211ca9730531f8034968d7ea1", "Url": "https://api.github.com/repos/Commoble/ccritter", "Date": "2015-06-29T15:21:01Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (clapDetected) { listener.clapDetected(); lastSilent = true; lastLoudTime = 0L; }else { lastLoud = loudestFreq; lastLoudTime = new java.util.Date().getTime(); lastSilent = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/8768/buggy-version/src.com.awaker.audio_in.ClapDetector.java", "BodyUseAPI": [], "Fixed commit": "17bd859bb9eea415a1e564b8db6044d6257ea8c5", "Url": "https://api.github.com/repos/caleron/awaker", "Date": "2016-10-16T15:35:12Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.startsWith(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (caseInsensitive) { relativeToFilePath = relativeToFilePath.toLowerCase(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/4633/buggy-version/compiler-jx.src.main.java.org.apache.royale.compiler.internal.codegen.js.JSWriter.java", "BodyUseAPI": [], "Fixed commit": "8f24f4fc531c3141b8f820962e73585a020939ce", "Url": "https://api.github.com/repos/apache/royale-compiler", "Date": "2017-09-28T22:33:11Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.startsWith(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (caseInsensitive) { absoluteCurrentFile = absoluteCurrentFile.toLowerCase(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/4633/buggy-version/compiler-jx.src.main.java.org.apache.royale.compiler.internal.codegen.js.JSWriter.java", "BodyUseAPI": [], "Fixed commit": "8f24f4fc531c3141b8f820962e73585a020939ce", "Url": "https://api.github.com/repos/apache/royale-compiler", "Date": "2017-09-28T22:33:11Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["request().cookie(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (requestCookie != null) { matchID = requestCookie.value(); }else { for (play.mvc.Http.Cookie cookie : response().cookies()) { if ((cookie.name()) == (controllers.Application.COOKIE_MATCH_ID)) { matchID = cookie.value(); break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/2762/buggy-version/app.controllers.Application.java", "BodyUseAPI": ["play.mvc.Http.Cookie.value()"], "Fixed commit": "faeb4ff5ce36c94432223b138c8b08a9393ec707", "Url": "https://api.github.com/repos/julmayer/checkersWUI", "Date": "2014-12-17T10:31:05Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (currentMatch != null) { gameController = currentMatch.getGameController(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/2762/buggy-version/app.controllers.Application.java", "BodyUseAPI": ["model.Match.getGameController()"], "Fixed commit": "faeb4ff5ce36c94432223b138c8b08a9393ec707", "Url": "https://api.github.com/repos/julmayer/checkersWUI", "Date": "2014-12-17T10:31:05Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (gameController == null) { result = ok(views.html.waitGame.render(\"Wait for creation of game\")); controllers.Application.getCurrentPlayer().reload(); }else if ((gameController.getCurrentState()) != (de.htwg.checkers.controller.State.RUNNING)) { result = ok(views.html.waitGame.render(\"Wait for other player\")); }else if (gameController.checkIfWin()) { controllers.Application.runningMatches.remove(currentMatch); response().discardCookie(controllers.Application.COOKIE_MATCH_ID); result = ok(views.html.finish.render(gameController.getInfo())); }else { model.Player player = controllers.Application.getCurrentPlayer(); java.util.List<java.util.List<java.lang.String>> data = controllers.Application.updateData(gameController.getField().getField()); java.lang.String nextPlayer = \"Wait for opponent.\"; if (controllers.Application.isPlayerOnTurn(player, currentMatch)) { nextPlayer = \"Your turn\"; } java.lang.String error = \"\"; if ((gameController.getError()) != null) { error = gameController.getError(); } result = ok(views.html.playGame.render(data, data.size(), nextPlayer, error)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/2762/buggy-version/app.controllers.Application.java", "BodyUseAPI": ["views.html.finish.render(gameController.getInfo())", "controllers.Application.updateData(gameController.getField().getField())", "controllers.Application.ok(views.html.finish.render(gameController.getInfo()))", "gameController.getField().getField()", "de.htwg.checkers.controller.IGameController.getError()", "de.htwg.checkers.controller.IGameController.getError()", "de.htwg.checkers.controller.IGameController.getCurrentState()", "de.htwg.checkers.controller.IGameController.checkIfWin()", "de.htwg.checkers.controller.IGameController.getField()", "de.htwg.checkers.controller.IGameController.getInfo()"], "Fixed commit": "faeb4ff5ce36c94432223b138c8b08a9393ec707", "Url": "https://api.github.com/repos/julmayer/checkersWUI", "Date": "2014-12-17T10:31:05Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (gameController.checkIfWin()) { controllers.Application.runningMatches.remove(currentMatch); response().discardCookie(controllers.Application.COOKIE_MATCH_ID); result = ok(views.html.finish.render(gameController.getInfo())); }else { model.Player player = controllers.Application.getCurrentPlayer(); java.util.List<java.util.List<java.lang.String>> data = controllers.Application.updateData(gameController.getField().getField()); java.lang.String nextPlayer = \"Wait for opponent.\"; if (controllers.Application.isPlayerOnTurn(player, currentMatch)) { nextPlayer = \"Your turn\"; } java.lang.String error = \"\"; if ((gameController.getError()) != null) { error = gameController.getError(); } result = ok(views.html.playGame.render(data, data.size(), nextPlayer, error)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/2762/buggy-version/app.controllers.Application.java", "BodyUseAPI": ["de.htwg.checkers.controller.IGameController.getInfo()", "gameController.getField().getField()", "de.htwg.checkers.controller.IGameController.getError()", "views.html.finish.render(gameController.getInfo())", "controllers.Application.updateData(gameController.getField().getField())", "controllers.Application.ok(views.html.finish.render(gameController.getInfo()))", "de.htwg.checkers.controller.IGameController.getField()", "de.htwg.checkers.controller.IGameController.getError()"], "Fixed commit": "faeb4ff5ce36c94432223b138c8b08a9393ec707", "Url": "https://api.github.com/repos/julmayer/checkersWUI", "Date": "2014-12-17T10:31:05Z"},
{"Line": "=>1034", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (byteRead < (com.seafile.seadroid2.data.DataManager.BUFFER_SIZE)) cipher = com.seafile.seadroid2.crypto.Crypto.encrypt(buffer, byteRead, encKey, enkIv); else cipher = com.seafile.seadroid2.crypto.Crypto.encrypt(buffer, encKey, enkIv);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/2790/buggy-version/app.src.main.java.com.seafile.seadroid2.data.DataManager.java", "BodyUseAPI": ["com.seafile.seadroid2.crypto.Crypto.encrypt(byte[],int,java.lang.String,java.lang.String)"], "Fixed commit": "7a761644d5c0449c4a8f62872badf85db75ea835", "Url": "https://api.github.com/repos/Logan676/seadroid", "Date": "2016-06-13T16:36:59Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (_bildPanel.getSchauenLabel().isVisible()) { for (java.lang.String befehl : paket.getVerfuegbareBefehle().keySet()) { if (befehl.startsWith(TextVerwalter.BEFEHL_GEHEN)) paket.getVerfuegbareBefehle().put(befehl, false); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/977/buggy-version/src.de.uni_hamburg.informatik.sep.zuul.client.ClientGUI.java", "BodyUseAPI": [], "Fixed commit": "a8c3e9f724ecf4366b4a9fda2c1dbae239e9e004", "Url": "https://api.github.com/repos/FlaShG/SEP12", "Date": "2012-09-26T14:28:25Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (unit != null) unit.setMoved(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/5111/buggy-version/src.net.fe.overworldStage.ClientOverworldStage.java", "BodyUseAPI": ["net.fe.unit.Unit.setMoved(boolean)"], "Fixed commit": "ffd22a2acf6ac367375eb58b54cf8ee5430b6dd2", "Url": "https://api.github.com/repos/chudooder/FEMultiplayer", "Date": "2014-01-14T05:35:50Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (unit != null) { grid.move(unit, ((unit.getXCoord()) + (cmds.moveX)), ((unit.getYCoord()) + (cmds.moveY)), false); unit.setMoved(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/5111/buggy-version/src.net.fe.overworldStage.OverworldStage.java", "BodyUseAPI": ["net.fe.unit.Unit.getYCoord()", "net.fe.unit.Unit.getXCoord()", "net.fe.overworldStage.Grid.move(net.fe.unit.Unit,((unit.getXCoord()) + (cmds.moveX)),((unit.getYCoord()) + (cmds.moveY)),boolean)", "net.fe.unit.Unit.setMoved(boolean)"], "Fixed commit": "ffd22a2acf6ac367375eb58b54cf8ee5430b6dd2", "Url": "https://api.github.com/repos/chudooder/FEMultiplayer", "Date": "2014-01-14T05:35:50Z"},
{"Line": "=>325", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(selectedDish.matches(\"[0-9]+\"))) { eu.trentorise.smartcampus.ifame.activity.Menu_mese.StartWebSearchAlertDialog dialog = new eu.trentorise.smartcampus.ifame.activity.Menu_mese.StartWebSearchAlertDialog(); dialog.show(getSupportFragmentManager(), null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/9194/buggy-version/src.eu.trentorise.smartcampus.ifame.activity.Menu_mese.java", "BodyUseAPI": [], "Fixed commit": "4a63f93591fac4f4644a9b19e254b1a5f9850699", "Url": "https://api.github.com/repos/smartcampuslab/smartcampus.vas.ifame.android", "Date": "2013-07-10T09:45:25Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dT <= 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/6967/buggy-version/src.main.java.org.jtrfp.trcl.core.Renderer.java", "BodyUseAPI": [], "Fixed commit": "31b51f281559dd17bb4511d9d42e54fb305129ed", "Url": "https://api.github.com/repos/jtrfp/terminal-recall", "Date": "2014-03-18T03:43:14Z"},
{"Line": "=>798", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((this) instanceof mage.abilities.MageSingleton)) { this.ruleVisible = ruleVisible; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/8883/buggy-version/Mage.src.mage.abilities.AbilityImpl.java", "BodyUseAPI": [], "Fixed commit": "2e7219de2fe349dd62ca9b51d559c4d06338559e", "Url": "https://api.github.com/repos/magefree/mage", "Date": "2014-07-27T00:00:07Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (ability.getZone().match(Zone.COMMAND)) { mage.abilities.Ability newAbility = ability.copy(); newAbility.setRuleVisible(false); abilites.add(newAbility); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/8883/buggy-version/Mage.src.mage.game.command.Commander.java", "BodyUseAPI": [], "Fixed commit": "2e7219de2fe349dd62ca9b51d559c4d06338559e", "Url": "https://api.github.com/repos/magefree/mage", "Date": "2014-07-27T00:00:07Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((equip[itemPlace]) instanceof uk.ac.brighton.uni.ab607.mmorpg.common.object.Weapon) { uk.ac.brighton.uni.ab607.mmorpg.common.object.Weapon w = ((uk.ac.brighton.uni.ab607.mmorpg.common.object.Weapon) (equip[itemPlace])); if ((w.type.ordinal()) >= (WeaponType.TWO_H_SWORD.ordinal())) { if (itemPlace == (uk.ac.brighton.uni.ab607.mmorpg.common.Player.RIGHT_HAND)) equip[uk.ac.brighton.uni.ab607.mmorpg.common.Player.LEFT_HAND] = uk.ac.brighton.uni.ab607.mmorpg.common.object.ObjectManager.getWeaponByID(ID.Weapon.HANDS); else equip[uk.ac.brighton.uni.ab607.mmorpg.common.Player.RIGHT_HAND] = uk.ac.brighton.uni.ab607.mmorpg.common.object.ObjectManager.getWeaponByID(ID.Weapon.HANDS); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/5172/buggy-version/src.uk.ac.brighton.uni.ab607.mmorpg.common.Player.java", "BodyUseAPI": [], "Fixed commit": "eef974a1e1d3c902eb9cdf4240c8fc21caaa6a89", "Url": "https://api.github.com/repos/AlmasB/mmorpg", "Date": "2014-05-03T23:27:41Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isTaskRoot())) { android.content.Intent intent = getIntent(); java.lang.String action = intent.getAction(); if ((intent.hasCategory(Intent.CATEGORY_LAUNCHER)) && (action.equals(Intent.ACTION_MAIN))) { finish(); return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/3355/buggy-version/src.com.easemob.easeui.ui.EaseBaseActivity.java", "BodyUseAPI": [], "Fixed commit": "cbed7e42a3b46ecac63f2ed16b554db33c6772b6", "Url": "https://api.github.com/repos/easemob/easeui", "Date": "2015-11-16T08:18:11Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(selector.contains(\"[\"))) { return selector.equals(item.getNodeName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/5161/buggy-version/src.main.java.org.xmlbeam.util.intern.DOMHelper.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "0c0bdae4142f896d6d955b366de8596915a041e4", "Url": "https://api.github.com/repos/SvenEwald/xmlbeam", "Date": "2013-06-29T19:21:45Z"},
{"Line": "=>573", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getFragmentManager().findFragmentByTag(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (null != existingFragment) { return existingFragment; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/6719/buggy-version/app.src.main.java.com.beatboxers.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "02e2960c9220e6278a79b58d2851c8554713c392", "Url": "https://api.github.com/repos/BeatBoxers/com.beatboxers.android", "Date": "2016-04-10T09:53:55Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.frostwire.android.gui.adnetworks.Offers.isFreeAppsReady()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (freeAppsReady) { buttonFreeApps.setOnClickListener(freeAppsListener); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/5313/buggy-version/android.src.com.frostwire.android.gui.views.SearchProgressView.java", "BodyUseAPI": [], "Fixed commit": "ac894fefbb75c49b61eec384c057714b89f36f52", "Url": "https://api.github.com/repos/frostwire/frostwire", "Date": "2016-04-13T17:37:38Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.paypal.selion.utils.ConfigParser.configuration) == null) { com.paypal.selion.utils.ConfigParser.configFile = file; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/1123/buggy-version/server.src.main.java.com.paypal.selion.utils.ConfigParser.java", "BodyUseAPI": [], "Fixed commit": "3272d4a2cfee35f1df1f272fce90f37c8990187a", "Url": "https://api.github.com/repos/sebady/SeLion", "Date": "2015-12-15T16:57:07Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ergPv == (java.lang.Double.MIN_NORMAL)) { ergPv = 0.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/1631/buggy-version/src.main.java.dbServices.ValuesService.java", "BodyUseAPI": [], "Fixed commit": "6e0fccf6c0bdc6460f575bee273a513add80ba88", "Url": "https://api.github.com/repos/paffman/WBS-Project", "Date": "2014-02-04T10:19:46Z"},
{"Line": "=>336", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((input.contains(\"X\")) || (input.contains(\"x\"))) { if (forX.getText().isEmpty()) throw new java.lang.IllegalArgumentException(\"Enter a value for x.\"); else x = forX.getText(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/490/buggy-version/GraphingCalculator.java", "BodyUseAPI": [], "Fixed commit": "e8f445e3bbe59a747e940ea22cf02423908ca503", "Url": "https://api.github.com/repos/ECE309-Team1/Graphing_calculator", "Date": "2015-04-19T23:20:02Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((xInPixels < 0) || (xInPixels > ((getWidth()) - (25 * 2)))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/490/buggy-version/GraphPanel.java", "BodyUseAPI": [], "Fixed commit": "e8f445e3bbe59a747e940ea22cf02423908ca503", "Url": "https://api.github.com/repos/ECE309-Team1/Graphing_calculator", "Date": "2015-04-19T23:20:02Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tvTime) != null) { tvTime.setText(java.lang.String.format(\"%d:%d\", c.get(java.util.Calendar.HOUR_OF_DAY), c.get(java.util.Calendar.MINUTE))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/2479/buggy-version/app.src.main.java.com.android.tedcoder.material.view.TimeView.java", "BodyUseAPI": [], "Fixed commit": "c7465c76b12348c9127160692b65c37f13449cc5", "Url": "https://api.github.com/repos/frankjunqi/mubea", "Date": "2016-03-17T16:32:41Z"},
{"Line": "=>342", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (retValue) { return retValue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/1148/buggy-version/src.main.State.java", "BodyUseAPI": [], "Fixed commit": "b6271239b77294e361c94d97ad8de090c2081256", "Url": "https://api.github.com/repos/cs2103jan2016-T16-1J/main", "Date": "2016-04-11T15:27:12Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.performizeit.mjstack.MJStack.parseCommandLine(java.lang.String[])"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (steps == null) { com.performizeit.mjstack.MJStack.printSynopsisAndExit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/4085/buggy-version/src.main.java.com.performizeit.mjstack.MJStack.java", "BodyUseAPI": [], "Fixed commit": "9b1e992a94be4f9ac723bbf21b08f596ffae413d", "Url": "https://api.github.com/repos/lifey/mjstack", "Date": "2014-03-02T10:52:33Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args.length) == 0) { htmlToCsv.showHelp(); java.lang.System.exit(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/3143/buggy-version/htmlToCsv.java", "BodyUseAPI": [], "Fixed commit": "ea6e27a15ab4d44fde6f5503947709d5a02d7cf1", "Url": "https://api.github.com/repos/riosmartinivan/html-csv", "Date": "2017-11-22T15:47:21Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (str == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/2671/buggy-version/server.vc.src.main.java.com.vmware.aurora.vc.MoUtil.java", "BodyUseAPI": [], "Fixed commit": "9920f0eb210d0588b1bbfdc87ced79f0dffeba05", "Url": "https://api.github.com/repos/vmware-serengeti/serengeti-ws", "Date": "2013-11-25T06:31:15Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((playerList.get(i)) != p) playerList.get(i).give(50);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/2735/buggy-version/Chance.java", "BodyUseAPI": ["playerList.get(i).give(int)", "java.util.ArrayList<Player>.get(int)"], "Fixed commit": "8d3c5d17583d04ca741dec0e0a03ab38f380225f", "Url": "https://api.github.com/repos/alanc2k17/Team-Admeyerable-Pennybags", "Date": "2016-01-24T17:30:44Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (json.equalsIgnoreCase(\"\")) { throw new net.virtalab.vson.exception.NoJsonFoundException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/9147/buggy-version/src.main.java.net.virtalab.vson.Vson.java", "BodyUseAPI": [], "Fixed commit": "d9482c056ea646fdee22ef8bd9861055e94f06d1", "Url": "https://api.github.com/repos/kyberorg/vson", "Date": "2014-01-26T07:48:12Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (jsonedObject == null) { java.lang.System.err.println(\"TAASA ja NULL\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/9147/buggy-version/src.main.java.net.virtalab.vson.Vson.java", "BodyUseAPI": [], "Fixed commit": "d9482c056ea646fdee22ef8bd9861055e94f06d1", "Url": "https://api.github.com/repos/kyberorg/vson", "Date": "2014-01-26T07:48:12Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (json == null) { throw new net.virtalab.vson.exception.NoJsonFoundException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/9147/buggy-version/src.main.java.net.virtalab.vson.Vson.java", "BodyUseAPI": [], "Fixed commit": "d9482c056ea646fdee22ef8bd9861055e94f06d1", "Url": "https://api.github.com/repos/kyberorg/vson", "Date": "2014-01-26T07:48:12Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.pratilipi.data.DataAccessorFactory.getDataAccessor()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((dataAccessor.getAuthorByUserId(com.pratilipi.filter.AccessTokenFilter.getAccessToken().getUserId()).getId()) != null) { java.util.List<java.lang.Long> userIdList = new java.util.ArrayList(authorDataList.size()); for (com.pratilipi.data.client.AuthorData authorData : authorDataList) if ((authorData.getUser().getId()) != null) userIdList.add(authorData.getUser().getId()); java.util.List<com.pratilipi.data.type.UserAuthor> userAuthorList = dataAccessor.getUserAuthorList(userIdList, dataAccessor.getAuthorByUserId(com.pratilipi.filter.AccessTokenFilter.getAccessToken().getUserId()).getId()); for (com.pratilipi.data.type.UserAuthor userAuthor : userAuthorList) if ((userAuthor != null) && (userAuthor.isFollowing())) authorDataList.get(authorIdList.indexOf(userAuthor.getAuthorId())).getUser().setFollowing(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/959/buggy-version/src.main.java.com.pratilipi.data.util.UserAuthorDataUtil.java", "BodyUseAPI": ["dataAccessor.getAuthorByUserId(com.pratilipi.filter.AccessTokenFilter.getAccessToken().getUserId()).getId()", "com.pratilipi.data.DataAccessor.getAuthorByUserId(com.pratilipi.filter.AccessTokenFilter.getAccessToken().getUserId())", "com.pratilipi.data.DataAccessor.getUserAuthorList(java.util.List<java.lang.Long>,dataAccessor.getAuthorByUserId(com.pratilipi.filter.AccessTokenFilter.getAccessToken().getUserId()).getId())"], "Fixed commit": "71c0252a04c2d7e7cca32a4084e598fc7ab1497d", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2016-07-21T07:28:02Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((beans.size()) > 0) { org.openhab.io.cv.internal.resources.beans.ItemStateListBean responseBean = new org.openhab.io.cv.internal.resources.beans.ItemStateListBean(new org.openhab.io.cv.internal.resources.beans.ItemListBean(beans)); responseBean.index = java.lang.System.currentTimeMillis(); broadcaster.broadcast(responseBean); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/6744/buggy-version/bundles.io.org.openhab.io.cv.src.main.java.org.openhab.io.cv.internal.listeners.ResourceStateChangeListener.java", "BodyUseAPI": [], "Fixed commit": "8b80f482191c843d226887bdf57be450a960777f", "Url": "https://api.github.com/repos/peuter/openhab", "Date": "2015-04-02T08:00:23Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["soot.SootMethod.getDeclaringClass()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(sc.isInterface())) { for (soot.SootClass clazz : iccBaseClasses) { if (soot.Scene.v().getFastHierarchy().isSubclass(sc, clazz)) { final java.lang.String subSig = callee.getSubSignature(); if (clazz.declaresMethod(subSig)) { if (this.sinkMethods.containsKey(clazz.getMethod(subSig).getSignature())) return true; break; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/2591/buggy-version/src.soot.jimple.infoflow.android.AndroidSourceSinkManager.java", "BodyUseAPI": ["soot.Scene.v().getFastHierarchy().isSubclass(soot.SootClass,soot.SootClass)"], "Fixed commit": "7250cbb3a5d973ad07d52e5920a81a8d5d05f5ee", "Url": "https://api.github.com/repos/secure-software-engineering/soot-infoflow-android", "Date": "2014-05-08T11:31:17Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.lang.String, java.lang.String>.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.google.api.client.repackaged.com.google.common.base.Strings.isNullOrEmpty(docker)) { callToType.put(callId, callType); }else { callToType.put(callId, toolType); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/4153/buggy-version/dockstore-webservice.src.main.java.io.dockstore.webservice.helpers.DAGHelper.java", "BodyUseAPI": [], "Fixed commit": "ffcae303e00f10e636e3bee1a47260e37cfeaf97", "Url": "https://api.github.com/repos/ga4gh/dockstore", "Date": "2016-10-19T20:33:46Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (setAnimator) { routinesAdapter.notifyItemRemoved((position + 1)); routinesAdapter.notifyItemRangeChanged((position + 1), mDataSet.size()); }else { routinesAdapter.notifyDataSetChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/4120/buggy-version/reading_routine.src.main.java.com.agenthun.readingroutine.fragments.RoutinesFragment.java", "BodyUseAPI": [], "Fixed commit": "5864f32add65da159ef2a288e5ccc41db9a34e6e", "Url": "https://api.github.com/repos/agenthun/ReadingRoutine", "Date": "2015-07-28T06:54:53Z"},
{"Line": "=>649", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.ClassLoader.getResourceAsStream(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (resource != null) { resource.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/648/buggy-version/bpm.bonita-core.bonita-process-engine.src.main.java.org.bonitasoft.engine.service.impl.SpringTenantServiceAccessor.java", "BodyUseAPI": ["java.io.InputStream.close()"], "Fixed commit": "fbf5245a32e06730ac92b5a3c0a6db6fd6c5c666", "Url": "https://api.github.com/repos/bonitasoft/bonita-engine", "Date": "2014-02-12T09:57:04Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<x.java.NodeWrapper>.get(((nodesInSnippet.size()) - 1))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (lastNodeInSnippet.isNextNodeAComment()) { return (x.java.JavaConfig.EOL) + (indentService.getCurrentIndent()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/4889/buggy-version/src.main.java.x.java.snippets.ImportDeclaration.java", "BodyUseAPI": [], "Fixed commit": "2705ad44f4d290cf3333ad257a19607f040a5cdc", "Url": "https://api.github.com/repos/klaus31/x-formatter", "Date": "2017-02-05T09:08:38Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<x.java.NodeWrapper>.get(((nodesInSnippet.size()) - 1))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (lastNodeInSnippet.isNextNodeACommentInSameLine()) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/4889/buggy-version/src.main.java.x.java.snippets.ImportDeclaration.java", "BodyUseAPI": [], "Fixed commit": "2705ad44f4d290cf3333ad257a19607f040a5cdc", "Url": "https://api.github.com/repos/klaus31/x-formatter", "Date": "2017-02-05T09:08:38Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((response) != null) { list = ((java.lang.String[]) (response)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/4809/buggy-version/src.network.ClientSender.java", "BodyUseAPI": [], "Fixed commit": "22bd8082612e7aa8a8276c948fbf4bd129a4c877", "Url": "https://api.github.com/repos/mehrdadjg/Scalability-Dolphins", "Date": "2016-12-05T05:21:07Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jr.jrfitbitsdk.parser.JRFBActivitySumParser.parseActivity(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (summary != null) { summary.setActivityDate(activityDate); this.delegate.didFetchActivity(this, summary); }else { didFailRequest(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/2251/buggy-version/jrfitbitsdk.src.main.java.com.jr.jrfitbitsdk.JRFBActivitySumAPI.java", "BodyUseAPI": ["com.jr.jrfitbitsdk.model.JRFBActivitySummary.setActivityDate(java.lang.String)", "com.jr.jrfitbitsdk.JRFBActivitySummaryInterface.didFetchActivity(com.jr.jrfitbitsdk.JRFBActivitySumAPI,com.jr.jrfitbitsdk.model.JRFBActivitySummary)"], "Fixed commit": "a193a6b121451e5d4825071a6eaf29bd8430868a", "Url": "https://api.github.com/repos/jithin/FitbitSDK-Android", "Date": "2016-09-12T01:15:04Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.auth) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/2251/buggy-version/jrfitbitsdk.src.main.java.com.jr.jrfitbitsdk.JRFitbitSDK.java", "BodyUseAPI": [], "Fixed commit": "a193a6b121451e5d4825071a6eaf29bd8430868a", "Url": "https://api.github.com/repos/jithin/FitbitSDK-Android", "Date": "2016-09-12T01:15:04Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(toName.isEmpty())) && (!(message.isEmpty()))) { handler.send(de.jattyv.jcapi.util.Packer.packNewMessage(handler.getUser().getLogKey(), toName, message)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/6771/buggy-version/src.main.java.de.jattyv.jcapi.client.handler.OutputHandler.java", "BodyUseAPI": ["de.jattyv.jcapi.client.handler.OutputHandler.send(de.jattyv.jcapi.util.Packer.packNewMessage(handler.getUser().getLogKey(), toName, message))", "de.jattyv.jcapi.util.Packer.packNewMessage(handler.getUser().getLogKey(),java.lang.String,java.lang.String)"], "Fixed commit": "80f4346fcf46fddb72249db11955717583dde7f7", "Url": "https://api.github.com/repos/Lixja/jcapi", "Date": "2017-02-06T14:09:25Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(gName.isEmpty())) && (!(fName.isEmpty()))) { handler.send(de.jattyv.jcapi.util.Packer.packAddUserToGroup(gName, fName)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/6771/buggy-version/src.main.java.de.jattyv.jcapi.client.handler.OutputHandler.java", "BodyUseAPI": ["de.jattyv.jcapi.client.handler.OutputHandler.send(de.jattyv.jcapi.util.Packer.packAddUserToGroup(gName, fName))", "de.jattyv.jcapi.util.Packer.packAddUserToGroup(java.lang.String,java.lang.String)"], "Fixed commit": "80f4346fcf46fddb72249db11955717583dde7f7", "Url": "https://api.github.com/repos/Lixja/jcapi", "Date": "2017-02-06T14:09:25Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(gName.isEmpty())) { handler.send(de.jattyv.jcapi.util.Packer.packCreateGroup(gName, handler.getUser().getLogKey())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/6771/buggy-version/src.main.java.de.jattyv.jcapi.client.handler.OutputHandler.java", "BodyUseAPI": ["de.jattyv.jcapi.util.Packer.packCreateGroup(java.lang.String,handler.getUser().getLogKey())", "de.jattyv.jcapi.client.handler.OutputHandler.send(de.jattyv.jcapi.util.Packer.packCreateGroup(gName, handler.getUser().getLogKey()))"], "Fixed commit": "80f4346fcf46fddb72249db11955717583dde7f7", "Url": "https://api.github.com/repos/Lixja/jcapi", "Date": "2017-02-06T14:09:25Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(uname.isEmpty())) && (!(upassword.isEmpty()))) { handler.start(de.jattyv.jcapi.util.Packer.packRegistration(uname, de.jattyv.jcapi.util.crypt.PasswordHasher.generateLKey(uname, upassword))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/6771/buggy-version/src.main.java.de.jattyv.jcapi.client.handler.OutputHandler.java", "BodyUseAPI": ["de.jattyv.jcapi.client.handler.OutputHandler.start(de.jattyv.jcapi.util.Packer.packRegistration(uname, de.jattyv.jcapi.util.crypt.PasswordHasher.generateLKey(uname, upassword)))", "de.jattyv.jcapi.util.Packer.packRegistration(java.lang.String,de.jattyv.jcapi.util.crypt.PasswordHasher.generateLKey(uname, upassword))", "de.jattyv.jcapi.util.crypt.PasswordHasher.generateLKey(java.lang.String,java.lang.String)"], "Fixed commit": "80f4346fcf46fddb72249db11955717583dde7f7", "Url": "https://api.github.com/repos/Lixja/jcapi", "Date": "2017-02-06T14:09:25Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(uname.isEmpty())) && (!(upassword.isEmpty()))) { handler.start(de.jattyv.jcapi.util.Packer.packLogin(uname, de.jattyv.jcapi.util.crypt.PasswordHasher.generateLKey(uname, upassword))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/6771/buggy-version/src.main.java.de.jattyv.jcapi.client.handler.OutputHandler.java", "BodyUseAPI": ["de.jattyv.jcapi.client.handler.OutputHandler.start(de.jattyv.jcapi.util.Packer.packLogin(uname, de.jattyv.jcapi.util.crypt.PasswordHasher.generateLKey(uname, upassword)))", "de.jattyv.jcapi.util.Packer.packLogin(java.lang.String,de.jattyv.jcapi.util.crypt.PasswordHasher.generateLKey(uname, upassword))", "de.jattyv.jcapi.util.crypt.PasswordHasher.generateLKey(java.lang.String,java.lang.String)"], "Fixed commit": "80f4346fcf46fddb72249db11955717583dde7f7", "Url": "https://api.github.com/repos/Lixja/jcapi", "Date": "2017-02-06T14:09:25Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(toGroup.isEmpty())) && (!(msg.isEmpty()))) { handler.send(de.jattyv.jcapi.util.Packer.packNewGroupMessage(handler.getUser().getLogKey(), toGroup, msg)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/6771/buggy-version/src.main.java.de.jattyv.jcapi.client.handler.OutputHandler.java", "BodyUseAPI": ["de.jattyv.jcapi.client.handler.OutputHandler.send(de.jattyv.jcapi.util.Packer.packNewGroupMessage(handler.getUser().getLogKey(), toGroup, msg))", "de.jattyv.jcapi.util.Packer.packNewGroupMessage(handler.getUser().getLogKey(),java.lang.String,java.lang.String)"], "Fixed commit": "80f4346fcf46fddb72249db11955717583dde7f7", "Url": "https://api.github.com/repos/Lixja/jcapi", "Date": "2017-02-06T14:09:25Z"},
{"Line": "=>323", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (n.getVariables().get(0).getInitializer().isPresent()) { com.github.javaparser.ast.expr.Expression value = n.getVariables().get(0).getInitializer().get(); com.github.javaparser.ast.expr.Expression target = new com.github.javaparser.ast.expr.NameExpr(n.getVariables().get(0).getName()); com.github.javaparser.ast.expr.AssignExpr a = new com.github.javaparser.ast.expr.AssignExpr(target, value, com.github.javaparser.ast.expr.AssignExpr.Operator.ASSIGN); super.visit(a, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/5899/buggy-version/core.main.src.mast.ProhibitsVisitor.java", "BodyUseAPI": ["n.getVariables().get(0).getInitializer().get()", "n.getVariables().get(int)", "com.github.javaparser.ast.body.FieldDeclaration.getVariables()", "n.getVariables().get(0).getInitializer()", "n.getVariables().get(int)", "com.github.javaparser.ast.body.FieldDeclaration.getVariables()", "n.getVariables().get(0).getName()"], "Fixed commit": "66abf5a5e6421a0301cdc2203e2a46f629fb5647", "Url": "https://api.github.com/repos/johncurcio/jRestrict", "Date": "2017-06-14T11:36:49Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fr.pizzeria.ihm.OptionMenuUpdatePizza.findPizzaByCode(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(pizzaFound.isPresent())) { throw new fr.pizzeria.exception.UpdatePizzaException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/2332/buggy-version/src.main.java.fr.pizzeria.ihm.OptionMenuUpdatePizza.java", "BodyUseAPI": [], "Fixed commit": "19e8c507784f11ccb2d7e641c75dcd248532a19e", "Url": "https://api.github.com/repos/damiengrt/FormationDTA-ProjetFilRouge-Pizzeria", "Date": "2017-07-24T11:31:22Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getResources().getConfiguration().orientation) == (android.content.res.Configuration.ORIENTATION_PORTRAIT)) { lLayout = new android.support.v7.widget.GridLayoutManager(getActivity(), 4); }else { lLayout = new android.support.v7.widget.GridLayoutManager(getActivity(), 2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/9056/buggy-version/app.src.main.java.com.organiser.fragment.WeatherFragment.java", "BodyUseAPI": [], "Fixed commit": "42bae4256f6dbf336f161c87f71db9a4985b50da", "Url": "https://api.github.com/repos/vlad-alekseev/Organiser", "Date": "2016-06-13T13:28:35Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (monthOfYear != 1) { cal.add(java.util.Calendar.MONTH, (-1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/9056/buggy-version/app.src.main.java.com.organiser.data.TimeConverter.java", "BodyUseAPI": [], "Fixed commit": "42bae4256f6dbf336f161c87f71db9a4985b50da", "Url": "https://api.github.com/repos/vlad-alekseev/Organiser", "Date": "2016-06-13T13:28:35Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (monthOfYear != 12) { cal.add(java.util.Calendar.MONTH, 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/9056/buggy-version/app.src.main.java.com.organiser.data.TimeConverter.java", "BodyUseAPI": [], "Fixed commit": "42bae4256f6dbf336f161c87f71db9a4985b50da", "Url": "https://api.github.com/repos/vlad-alekseev/Organiser", "Date": "2016-06-13T13:28:35Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cookies.size()) == 0) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/4355/buggy-version/weaklib.src.main.java.tw.clotai.weaklib.Utils.java", "BodyUseAPI": [], "Fixed commit": "f9e410cdb79f622ee92b0a9cb45c3063df448d7f", "Url": "https://api.github.com/repos/weakapp/weaklib", "Date": "2014-12-05T04:59:32Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (method.getName().equals(\"settings\")) { return new java.util.HashMap<java.lang.String, java.lang.String>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/6226/buggy-version/subprojects.platform-play.src.main.java.org.gradle.play.internal.run.PlayExecuter.java", "BodyUseAPI": [], "Fixed commit": "e7f15296cf2c6f0990dbd4358bf58b3a4f6e0906", "Url": "https://api.github.com/repos/surfing/gradle", "Date": "2014-11-12T12:17:19Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((startIp.equals(endIp)) && ((allocatedIps.length) == 0)) { return startIp; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/5315/buggy-version/utils.src.main.java.org.zstack.utils.network.NetworkUtils.java", "BodyUseAPI": [], "Fixed commit": "63c785abd57e0f24d713cd1794a0427899fca076", "Url": "https://api.github.com/repos/AlanJager/zstack", "Date": "2017-04-11T07:55:56Z"},
{"Line": "=>273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((startIp.equals(endIp)) && ((allocatedIps.size()) == 0)) { return org.zstack.utils.network.NetworkUtils.longToIpv4String(startIp); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/5315/buggy-version/utils.src.main.java.org.zstack.utils.network.NetworkUtils.java", "BodyUseAPI": ["org.zstack.utils.network.NetworkUtils.longToIpv4String(java.lang.Long)"], "Fixed commit": "63c785abd57e0f24d713cd1794a0427899fca076", "Url": "https://api.github.com/repos/AlanJager/zstack", "Date": "2017-04-11T07:55:56Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!isConnected) { setRunState(DaeRunState.UNKNOWN); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/8196/buggy-version/base.uk.ac.stfc.isis.ibex.dae.src.uk.ac.stfc.isis.ibex.dae.actions.DaeAction.java", "BodyUseAPI": [], "Fixed commit": "1ed63ce36faf2690ed87928b34ca0b0088b5a60c", "Url": "https://api.github.com/repos/ISISComputingGroup/ibex_gui", "Date": "2017-10-10T16:40:48Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((dependencyClassList[i].isMemberClass()) && (!(java.lang.reflect.Modifier.isPublic(dependencyClassList[i].getModifiers())))) { dependencyClassList[i] = dependencyClassList[i].getSuperclass(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/4461/buggy-version/src.main.java.io.torch.route.RouteTarget.java", "BodyUseAPI": [], "Fixed commit": "72c6619c3f76e8ee61aaec6e89470e434d65acd4", "Url": "https://api.github.com/repos/laxika/TorchWS", "Date": "2013-09-20T12:01:05Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((assumptions.size()) > 0) { wycs.transforms.Expr lhs = wycs.transforms.Expr.Nary(Expr.Nary.Op.AND, assumptions, e.attribute(Attribute.Source.class)); return wycs.transforms.Expr.Binary(Expr.Binary.Op.IMPLIES, lhs, e, e.attribute(Attribute.Source.class)); }else { return e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/8586/buggy-version/modules.wycs.src.wycs.transforms.ConstraintInline.java", "BodyUseAPI": ["wycs.transforms.Expr.Nary(Expr.Nary.Op.AND,java.util.ArrayList<wycs.transforms.Expr>,e.attribute(Attribute.Source.class))"], "Fixed commit": "052f3481cfeb1d69ae983e6228ccd91d192e761d", "Url": "https://api.github.com/repos/melbyruarus/Whiley", "Date": "2013-03-15T03:30:22Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edtSearch.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((searchContent.length()) == 0) { cn.eoe.app.ui.Toast.makeText(this, getResources().getString(R.string.search_empty_tips), Toast.LENGTH_SHORT).show(); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/9022/buggy-version/source.src.cn.eoe.app.ui.SearchActivity.java", "BodyUseAPI": [], "Fixed commit": "11fa5c631f21e1c56cab3a607de2626d71d9b462", "Url": "https://api.github.com/repos/xinmeng2011/android-app", "Date": "2013-12-02T09:54:47Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((update_dataHNum) == 0) { update_box.setToDefault(\"data_hnum\"); }else { update_box.setData_hnum(update_dataHNum); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/8972/buggy-version/app.src.main.java.com.example.xunself.x8hot_os.WorkOrderDeleteActivity.java", "BodyUseAPI": [], "Fixed commit": "ec82c71f384bb54a3eed155aa193ba056d7f41a1", "Url": "https://api.github.com/repos/XunselF/X8hot_Os", "Date": "2017-12-07T01:30:38Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((update_boxHNum) == 0) update_box.setToDefault(\"box_hnum\"); else update_box.setBox_hnum(update_boxHNum);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/8972/buggy-version/app.src.main.java.com.example.xunself.x8hot_os.WorkOrderDeleteActivity.java", "BodyUseAPI": [], "Fixed commit": "ec82c71f384bb54a3eed155aa193ba056d7f41a1", "Url": "https://api.github.com/repos/XunselF/X8hot_Os", "Date": "2017-12-07T01:30:38Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((update_boxHNum) == 0) update_box.setToDefault(\"box_num\"); else update_box.setBox_num(update_boxNum);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/8972/buggy-version/app.src.main.java.com.example.xunself.x8hot_os.WorkOrderDeleteActivity.java", "BodyUseAPI": [], "Fixed commit": "ec82c71f384bb54a3eed155aa193ba056d7f41a1", "Url": "https://api.github.com/repos/XunselF/X8hot_Os", "Date": "2017-12-07T01:30:38Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((update_dataHNum) == 0) update_box.setToDefault(\"data_hnum\"); else update_box.setData_hnum(update_dataHNum);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/8972/buggy-version/app.src.main.java.com.example.xunself.x8hot_os.WorkOrderDeleteActivity.java", "BodyUseAPI": [], "Fixed commit": "ec82c71f384bb54a3eed155aa193ba056d7f41a1", "Url": "https://api.github.com/repos/XunselF/X8hot_Os", "Date": "2017-12-07T01:30:38Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isInputMoreMessage) { isInputMoreMessage = false; transformView(); }else { finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/8972/buggy-version/app.src.main.java.com.example.xunself.x8hot_os.AddBoxsActivity.java", "BodyUseAPI": [], "Fixed commit": "ec82c71f384bb54a3eed155aa193ba056d7f41a1", "Url": "https://api.github.com/repos/XunselF/X8hot_Os", "Date": "2017-12-07T01:30:38Z"},
{"Line": "=>334", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.characterizationDate) != null) { java.lang.String dateString = gov.nih.nci.cananolab.util.DateUtils.convertDateToString(this.characterizationDate, Constants.DEFAULT_DATE_FORMAT); achar.setDateString(dateString); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/5507/buggy-version/software.cananolab-webapp.src.gov.nih.nci.cananolab.restful.view.edit.SimpleCharacterizationEditBean.java", "BodyUseAPI": [], "Fixed commit": "1bf23a40ca0b22d782daec7abf10a886c7c431cd", "Url": "https://api.github.com/repos/CBIIT/cananolab", "Date": "2014-09-19T15:35:19Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((charBean.getDomainChar().getDate()) == null) && ((simpleEdit.getCharacterizationDate()) != null)) charBean.getDomainChar().setDate(simpleEdit.getCharacterizationDate());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/5507/buggy-version/software.cananolab-webapp.src.gov.nih.nci.cananolab.restful.sample.CharacterizationBO.java", "BodyUseAPI": ["gov.nih.nci.cananolab.restful.view.edit.SimpleCharacterizationEditBean.getCharacterizationDate()", "charBean.getDomainChar().setDate(simpleEdit.getCharacterizationDate())", "gov.nih.nci.cananolab.dto.particle.characterization.CharacterizationBean.getDomainChar()"], "Fixed commit": "1bf23a40ca0b22d782daec7abf10a886c7c431cd", "Url": "https://api.github.com/repos/CBIIT/cananolab", "Date": "2014-09-19T15:35:19Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openrdf.query.algebra.evaluation.util.QueryEvaluationUtil.compareLiterals(org.openrdf.model.Literal,org.openrdf.model.Literal,CompareOp.EQ)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isEquivalent) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/6316/buggy-version/core.queryalgebra.evaluation.src.main.java.org.openrdf.query.algebra.evaluation.util.ValueComparator.java", "BodyUseAPI": [], "Fixed commit": "dbff4580b4456ca4737a1837b882ca2e6a5dceec", "Url": "https://api.github.com/repos/ansell/openrdf-sesame", "Date": "2015-03-16T22:47:58Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((p_msgIDList != null) && ((p_msgIDList.size()) > 0)) { java.lang.String msgID = getStringFromList(p_msgIDList); p_output.addSkeleton(((POToken.MSGSID) + \" \\\"\")); p_output.addSkeleton(msgID); p_output.addSkeleton(\"\\\"\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/928/buggy-version/main6.ling.com.globalsight.ling.docproc.extractor.po.Extractor.java", "BodyUseAPI": ["com.globalsight.ling.docproc.extractor.po.Extractor.getStringFromList(java.util.List<java.lang.String>)"], "Fixed commit": "45f6226aa27b9c2d8b741dda9af5ec6157c2a600", "Url": "https://api.github.com/repos/tingley/globalsight", "Date": "2016-11-01T06:21:20Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((hostAddressX.length) > 0) hostAddress = hostAddressX[((hostAddressX.length) - 1)]; else hostAddress = publishAddressHostX;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/3156/buggy-version/src.main.java.org.elasticsearch.transport.couchbase.capi.CouchbaseCAPITransportImpl.java", "BodyUseAPI": [], "Fixed commit": "03b8df07b64463c9f8c7a2756e561f8df7218005", "Url": "https://api.github.com/repos/couchbaselabs/elasticsearch-transport-couchbase", "Date": "2015-12-30T14:22:16Z"},
{"Line": "=>862", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (properties.containsKey(\"expandable\")) { properties.remove(\"expandable\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/6723/buggy-version/phresco-framework-web.src.main.java.com.photon.phresco.framework.actions.applications.Features.java", "BodyUseAPI": ["java.util.Properties.remove(java.lang.String)"], "Fixed commit": "8b2e7f985cf14dc478c613c1766cb833312f7cc5", "Url": "https://api.github.com/repos/phresco/framework", "Date": "2013-04-17T16:42:56Z"},
{"Line": "=>853", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getOnItemLongClickListener()) != null) { view.setOnLongClickListener(new android.view.View.OnLongClickListener() { @java.lang.Override public boolean onLongClick(android.view.View v) { return getOnItemLongClickListener().onItemLongClick(com.chad.library.adapter.base.BaseQuickAdapter.this, v, ((baseViewHolder.getLayoutPosition()) - (getHeaderLayoutCount()))); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/4266/buggy-version/library.src.main.java.com.chad.library.adapter.base.BaseQuickAdapter.java", "BodyUseAPI": [], "Fixed commit": "0e6f3256a87d15770377eafdc2847f27ef1b035a", "Url": "https://api.github.com/repos/liaolintao/BaseRecyclerViewAdapterHelper", "Date": "2017-05-16T03:39:38Z"},
{"Line": "=>845", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getOnItemClickListener()) != null) { view.setOnClickListener(new android.view.View.OnClickListener() { @java.lang.Override public void onClick(android.view.View v) { getOnItemClickListener().onItemClick(com.chad.library.adapter.base.BaseQuickAdapter.this, v, ((baseViewHolder.getLayoutPosition()) - (getHeaderLayoutCount()))); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/4266/buggy-version/library.src.main.java.com.chad.library.adapter.base.BaseQuickAdapter.java", "BodyUseAPI": [], "Fixed commit": "0e6f3256a87d15770377eafdc2847f27ef1b035a", "Url": "https://api.github.com/repos/liaolintao/BaseRecyclerViewAdapterHelper", "Date": "2017-05-16T03:39:38Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (trueTurns < 0) { trueTurns = (Squarelotron.MAX_TURN) + trueTurns; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/1969/buggy-version/src.main.java.Squarelotron.java", "BodyUseAPI": [], "Fixed commit": "b5d72c768e14fce3f612f558c29dd16e66a864d3", "Url": "https://api.github.com/repos/Poghosyan/Squarelotron", "Date": "2017-11-21T18:57:17Z"},
{"Line": "=>394", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.util.SparseArray<edu.cmu.chimps.messageontap_api.ParseTree.Node>.valueAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((android.text.TextUtils.equals(node.getType(), edu.cmu.chimps.messageontap_api.ParseTree.DEP_PUNCTUATION)) && (android.text.TextUtils.equals(node.getWord(), \"?\"))) { mood = edu.cmu.chimps.messageontap_api.ParseTree.Mood.INTERROGATIVE; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/77/buggy-version/api.src.main.java.edu.cmu.chimps.messageontap_api.ParseTree.java", "BodyUseAPI": [], "Fixed commit": "927b0952e02be341a1c7ed85dad71ce306a23f31", "Url": "https://api.github.com/repos/adamyi/MessageOnTap_API", "Date": "2017-08-12T02:24:05Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (createDcel) model.setCornerTable(new cz.fidentis.model.corner_table.CornerTable(model));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/7836/buggy-version/Model.src.cz.fidentis.model.ModelLoader.java", "BodyUseAPI": [], "Fixed commit": "c483f5ca9f1d79faf9846c309be9d78b52c2951f", "Url": "https://api.github.com/repos/Fidentis/Analyst", "Date": "2016-11-21T15:00:49Z"},
{"Line": "=>469", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(isInEditMode())) android.util.Log.i(org.pocketworkstation.pckeyboard.LatinKeyboardBaseView.TAG, (\"Creating new LatinKeyboardBaseView \" + (this)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/4640/buggy-version/java.src.org.pocketworkstation.pckeyboard.LatinKeyboardBaseView.java", "BodyUseAPI": [], "Fixed commit": "8abb21c29d42ad3e1603fc82a3579ed1408999e7", "Url": "https://api.github.com/repos/klausw/hackerskeyboard", "Date": "2016-04-01T16:51:06Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(isInEditMode())) android.util.Log.i(org.pocketworkstation.pckeyboard.LatinKeyboardView.TAG, (((\"new mMiniKeyboardPopup \" + (mMiniKeyboardPopup)) + \" from \") + (this)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/4640/buggy-version/java.src.org.pocketworkstation.pckeyboard.LatinKeyboardView.java", "BodyUseAPI": [], "Fixed commit": "8abb21c29d42ad3e1603fc82a3579ed1408999e7", "Url": "https://api.github.com/repos/klausw/hackerskeyboard", "Date": "2016-04-01T16:51:06Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(isInEditMode())) android.util.Log.i(org.pocketworkstation.pckeyboard.LatinKeyboardView.TAG, (((\"new mPreviewPopup \" + (mPreviewPopup)) + \" from \") + (this)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/4640/buggy-version/java.src.org.pocketworkstation.pckeyboard.LatinKeyboardView.java", "BodyUseAPI": [], "Fixed commit": "8abb21c29d42ad3e1603fc82a3579ed1408999e7", "Url": "https://api.github.com/repos/klausw/hackerskeyboard", "Date": "2016-04-01T16:51:06Z"},
{"Line": "=>285", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isInEditMode())) mService.onAutoCompletionStateChanged(existsAutoCompletion);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/4640/buggy-version/java.src.org.pocketworkstation.pckeyboard.CandidateView.java", "BodyUseAPI": [], "Fixed commit": "8abb21c29d42ad3e1603fc82a3579ed1408999e7", "Url": "https://api.github.com/repos/klausw/hackerskeyboard", "Date": "2016-04-01T16:51:06Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.baodanyun.websocket.util.MsgSourceUtil.get(sendMsg.getFrom().concat(sendMsg.getTo()))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (null != source) { sendMsg.setSource(source); sendMsg.setSourceDesc(TeminalTypeEnum.H5.getDesc(source)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/6830/buggy-version/src.main.java.com.baodanyun.websocket.node.sendUtils.SessionSendUtils.java", "BodyUseAPI": ["com.baodanyun.websocket.bean.msg.Msg.setSourceDesc(TeminalTypeEnum.H5.getDesc(source))", "com.baodanyun.websocket.bean.msg.Msg.setSource(java.lang.Integer)", "TeminalTypeEnum.H5.getDesc(java.lang.Integer)"], "Fixed commit": "007a8fd94c436073c5195ce42de9c6fd653b8a8d", "Url": "https://api.github.com/repos/liaowuhen88/wxmpp", "Date": "2017-07-14T10:52:49Z"},
{"Line": "=>335", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["lombok.javac.handlers.HandleDelegate.MethodSig.getParameterNames()", "javax.lang.model.element.ExecutableElement.isVarArgs()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (varargs && (idx == (paramNames.length))) { paramMods.flags |= com.sun.tools.javac.code.Flags.VARARGS; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/3963/buggy-version/src.core.lombok.javac.handlers.HandleDelegate.java", "BodyUseAPI": [], "Fixed commit": "34a6fd644f6036bef5c2d94d925b6cf8e20ab17d", "Url": "https://api.github.com/repos/PKRoma/lombok", "Date": "2015-12-18T19:17:47Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.cordova.api.DataResource.initiateNewDataRequestForUri(java.lang.String,this.appView.pluginManager,org.apache.cordova.IceCreamCordovaWebViewClient,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((is = dataResource.getInputStream()) != null) && ((mimeType = dataResource.getMimeType()) != null)) { ret = new android.webkit.WebResourceResponse(mimeType, \"UTF-8\", is); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/3149/buggy-version/framework.src.org.apache.cordova.IceCreamCordovaWebViewClient.java", "BodyUseAPI": [], "Fixed commit": "0075d181fe48cadd8826a86fc7b5c876011ee90b", "Url": "https://api.github.com/repos/shravanrn/cordova-android", "Date": "2013-05-10T21:08:50Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (uriString.startsWith(\"file://\")) { return new java.io.FileInputStream(org.apache.cordova.FileHelper.getRealPath(uriString, cordova)); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/3149/buggy-version/framework.src.org.apache.cordova.FileHelper.java", "BodyUseAPI": ["org.apache.cordova.FileHelper.getRealPath(java.lang.String,org.apache.cordova.api.CordovaInterface)"], "Fixed commit": "0075d181fe48cadd8826a86fc7b5c876011ee90b", "Url": "https://api.github.com/repos/shravanrn/cordova-android", "Date": "2013-05-10T21:08:50Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(entry.trim().isEmpty())) { result.add(entry); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/1352/buggy-version/runtime.src.main.java.com.kloudtek.ktserializer.Serializer.java", "BodyUseAPI": ["java.util.Set<java.lang.String>.add(java.lang.String)"], "Fixed commit": "481c9b8b19cf654a651146e930d22d7ada522590", "Url": "https://api.github.com/repos/kloudtek/ktserializer", "Date": "2016-01-26T23:31:28Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (array != null) { for (java.io.File file : array) { if (file.isDirectory()) { io.konig.core.impl.RdfUtil.loadTurtle(file, parser); }else if (file.getName().endsWith(\".ttl\")) { java.io.FileInputStream input = new java.io.FileInputStream(file); parser.parse(input, \"\"); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/311/buggy-version/konig-core.src.main.java.io.konig.core.impl.RdfUtil.java", "BodyUseAPI": [], "Fixed commit": "6bdd41c30bab723761ae10b24172c0f19dc3046a", "Url": "https://api.github.com/repos/konigio/konig", "Date": "2016-08-12T13:11:37Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"null\".equals(string)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/2017/buggy-version/src.de.neo.android.persistence.fields.PersistentLongArray.java", "BodyUseAPI": [], "Fixed commit": "17423c34b99a91b3c4e0e0eee36d140292eec4b0", "Url": "https://api.github.com/repos/dabastynator/de.neo.android", "Date": "2015-06-28T17:19:34Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"null\".equals(string)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/2017/buggy-version/src.de.neo.android.persistence.fields.PersistentIntegerArray.java", "BodyUseAPI": [], "Fixed commit": "17423c34b99a91b3c4e0e0eee36d140292eec4b0", "Url": "https://api.github.com/repos/dabastynator/de.neo.android", "Date": "2015-06-28T17:19:34Z"},
{"Line": "=>1069", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isBlueBall && isBlueBall) { result = org.firstinspires.ftc.teamcode.SwerveUtilLOP.TeamColor.UNKNOWN; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/3353/buggy-version/TeamCode.src.main.java.org.firstinspires.ftc.teamcode.SwerveUtilLOP.java", "BodyUseAPI": [], "Fixed commit": "8798138f905638ed22a55c0af76eac1cf94c70ca", "Url": "https://api.github.com/repos/tobortechftc/swerve", "Date": "2017-11-18T04:45:57Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((playerOrder.get(index).getPoints()) < 0) playerOrder.get(index).clearPlayer();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/3878/buggy-version/Game.java", "BodyUseAPI": ["java.util.ArrayList<Player>.get(int)", "playerOrder.get(index).clearPlayer()"], "Fixed commit": "ac1312a72c5b3a081140059f0615a6207d393c18", "Url": "https://api.github.com/repos/Devking/HeartsAI", "Date": "2015-05-06T20:54:51Z"},
{"Line": "=>468", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.eleybourn.bookcatalogue.Fields.Field.getView()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (v != null) { java.lang.String newVal = field.format(s); java.lang.String oldVal = ((v.getText()) == null) ? null : v.getText().toString(); if ((newVal == null) && (oldVal == null)) return; if (((newVal != null) && (oldVal != null)) && (newVal.equals(oldVal))) return; v.setText(newVal); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/281/buggy-version/src.com.eleybourn.bookcatalogue.Fields.java", "BodyUseAPI": ["android.widget.TextView.getText()", "android.widget.TextView.setText(java.lang.String)", "v.getText().toString()", "android.widget.TextView.getText()"], "Fixed commit": "e25c1861f94aff14fcd1bcd965209db949221a94", "Url": "https://api.github.com/repos/GuillaumeSmaha/Book-Catalogue", "Date": "2013-03-24T06:37:35Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(dirr.exists())) { dirr.mkdir(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/5876/buggy-version/app.src.main.java.com.teamsmokeweed.qroute.genqr.GenQr2Activity.java", "BodyUseAPI": ["java.io.File.mkdir()"], "Fixed commit": "2360c3440c71316c05b37c6a2e4967eb7fb319f6", "Url": "https://api.github.com/repos/arm19jong/QRoute", "Date": "2016-10-23T16:41:57Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == j) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/237/buggy-version/src.com.teamdev.Problem.java", "BodyUseAPI": [], "Fixed commit": "5b9d33438050d0006c9ce620c52c912d95bc08d5", "Url": "https://api.github.com/repos/kirill-sidorchuk/fizzbuzz", "Date": "2016-08-07T07:33:15Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (rooted != 1) { throw new java.lang.IllegalArgumentException(\"Not a rooted DAG\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/2261/buggy-version/Assignment6.src.WordNet.java", "BodyUseAPI": [], "Fixed commit": "2bb372cd7a770db6d1da5fb6dc74fc995c220120", "Url": "https://api.github.com/repos/michaellohsy/Coursera-Algorithm", "Date": "2015-11-26T08:39:04Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.kangyonggan.extra.core.util.JCTreeUtil.getReturnType(javax.lang.model.element.Element)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((returnType == null) || (returnType.toString().equals(Constants.RETURN_VOID))) { fieldAccess = treeMaker.Select(treeMaker.Ident(names.fromString(varName)), names.fromString(\"logAfter\")); methodInvocation = treeMaker.Apply(com.sun.tools.javac.util.List.nil(), fieldAccess, com.sun.tools.javac.util.List.of(com.kangyonggan.extra.core.util.JCTreeUtil.getMethodName(element), treeMaker.Ident(names.fromString(((com.kangyonggan.extra.core.model.Constants.VARIABLE_PREFIX) + \"methodStartTime\"))), com.kangyonggan.extra.core.util.JCTreeUtil.getNull())); statements.append(treeMaker.Exec(methodInvocation)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/8835/buggy-version/extra-core.src.main.java.com.kangyonggan.extra.core.processor.LogProcessor.java", "BodyUseAPI": [], "Fixed commit": "d4453c634ab6c5ec922fda00e2d50a6b927153fd", "Url": "https://api.github.com/repos/kangyonggan/extra", "Date": "2017-11-05T03:56:28Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((basePathOverride) != null) { basePathOverride = (((basePathOverride) + \"\\\\\") + (runDir.getName())) + \"\\\\AquaCrop\\\\DATA\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/8388/buggy-version/src.main.java.org.uncertweb.aquacrop.AquaCropInterface.java", "BodyUseAPI": [], "Fixed commit": "6fdf64d573b531286ef2e828fddbaf38e91815ba", "Url": "https://api.github.com/repos/itszootime/aquacrop-interface", "Date": "2012-11-23T14:23:08Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((inputSplit.length) > 1) commandInput.setName(inputSplit[1]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/3806/buggy-version/src.main.java.sg.edu.nus.cs2103t.omnitask.parser.ParserMainImpl.java", "BodyUseAPI": ["sg.edu.nus.cs2103t.omnitask.model.CommandInput.setName(java.lang.String)"], "Fixed commit": "a770a60cba0f01c0fa4e835d80dd7c7256dec290", "Url": "https://api.github.com/repos/cs2103jan2015-t09-1j/main", "Date": "2015-03-22T15:13:23Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (serializer != null) collection = ((edu.cmu.ml.rtw.generic.data.store.StoredCollection<I, ?>) (storage.getCollection(collectionName, ((edu.cmu.ml.rtw.generic.data.Serializer) (serializer))))); else collection = ((edu.cmu.ml.rtw.generic.data.store.StoredCollection<I, ?>) (storage.getCollection(collectionName)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/893/buggy-version/src.main.java.edu.cmu.ml.rtw.generic.data.StoredItemSetManager.java", "BodyUseAPI": [], "Fixed commit": "906132421a16bd9cde5970d69e43c109fe0750e6", "Url": "https://api.github.com/repos/cmunell/micro-util", "Date": "2016-03-12T21:15:43Z"},
{"Line": "=>305", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.mapdb.Fun.isNullOrEmptyIterator(source)) { throw new java.lang.IllegalArgumentException(\"source iterator cannot be empty\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/8766/buggy-version/src.main.java.org.mapdb.Pump.java", "BodyUseAPI": [], "Fixed commit": "b2151f520b876b2f623dd0bc5c553b287543d46b", "Url": "https://api.github.com/repos/SleimanJneidi/mapdb", "Date": "2015-03-22T22:08:10Z"},
{"Line": "=>555", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.jhu.agiga.AgigaMention.getEndTokenIdx()", "edu.jhu.agiga.AgigaMention.getStartTokenIdx()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((end - start) <= 0) { edu.jhu.hlt.concrete.agiga.AgigaConverter.logger.error(((((\"SKIPPING AgigaMention \" + m) + \" in doc \") + (doc.getDocId())) + \" has end not strictly after start\")); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/7023/buggy-version/src.main.java.edu.jhu.hlt.concrete.agiga.AgigaConverter.java", "BodyUseAPI": [], "Fixed commit": "76ab29245515b0727dd71958d239b86a6ffb43c7", "Url": "https://api.github.com/repos/hltcoe/concrete-agiga", "Date": "2014-09-10T01:36:31Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.jhu.agiga.AgigaMention.getStartTokenIdx()", "edu.jhu.agiga.AgigaMention.getEndTokenIdx()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((end - start) <= 0) { throw new java.lang.RuntimeException((((((\"Calling extractTokenRefSequence on mention \" + m) + \" with head = \") + (m.getHeadTokenIdx())) + \", UUID = \") + uuid)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/7023/buggy-version/src.main.java.edu.jhu.hlt.concrete.agiga.AgigaConverter.java", "BodyUseAPI": [], "Fixed commit": "76ab29245515b0727dd71958d239b86a6ffb43c7", "Url": "https://api.github.com/repos/hltcoe/concrete-agiga", "Date": "2014-09-10T01:36:31Z"},
{"Line": "=>353", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tabletMode) view.setLayoutParams(new android.widget.LinearLayout.LayoutParams(0, LinearLayout.LayoutParams.FILL_PARENT, 0.0F)); else view.setLayoutParams(new android.widget.LinearLayout.LayoutParams(LinearLayout.LayoutParams.FILL_PARENT, 0, 0.0F));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/2370/buggy-version/src.com.gzplanet.xposed.xperianavbarbuttons.XperiaNavBarButtons.java", "BodyUseAPI": [], "Fixed commit": "756240d6ecbf7b9af6582ead0f2338d9fedb171d", "Url": "https://api.github.com/repos/itandy/XperiaAOSPNavBarButtons", "Date": "2014-12-28T15:03:10Z"},
{"Line": "=>534", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (android.text.TextUtils.isEmpty(path)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/5505/buggy-version/okgo.src.main.java.com.lzy.okgo.utils.IOUtils.java", "BodyUseAPI": [], "Fixed commit": "fc30d4d44c707f1d9f1150bbfec3b2e987665dcc", "Url": "https://api.github.com/repos/jeasonlzy/okhttp-OkGo", "Date": "2017-06-12T12:02:56Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (signature == null) { throw new java.lang.IllegalArgumentException(\"process() received null argument\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/858/buggy-version/src.main.java.edu.fordham.cis.wisdm.biometrics.server.RequestManager.java", "BodyUseAPI": [], "Fixed commit": "3875784ce3a6646fda636a0e7c1e092aa1ceb870", "Url": "https://api.github.com/repos/disparliament/balloons", "Date": "2015-07-29T18:01:48Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.sjl.dsl4xml.support.Classes.MapBasedInvocationHandler.indexOfUpperCase(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (_indexOfFirstUpperCase < 0) return aMethodName;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/3629/buggy-version/core.src.main.java.com.sjl.dsl4xml.support.Classes.java", "BodyUseAPI": [], "Fixed commit": "7a2e86e460e8092bcb50a7a7d0ea31a61768b8bf", "Url": "https://api.github.com/repos/steveliles/dsl4xml", "Date": "2013-05-02T16:35:46Z"},
{"Line": "=>375", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (pageSize > 0) { totalPage = (total >= 0) ? ((int) (java.lang.Math.ceil((total / pageSize)))) : -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/1585/buggy-version/task-management.src.main.java.org.exoplatform.task.management.controller.ProjectController.java", "BodyUseAPI": ["java.lang.Math.ceil(int)"], "Fixed commit": "2a8f881d77b8c7921cb68bbd15ed91ae96ea2c18", "Url": "https://api.github.com/repos/exoplatform/task", "Date": "2015-09-09T05:25:06Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((params == null) || (params.equals(\"\"))) pb = new java.lang.ProcessBuilder(\"java\", \"-jar\", serverJarPath, java.lang.String.valueOf(tcpPort), java.lang.String.valueOf(udpPort)); else pb = new java.lang.ProcessBuilder(\"java\", \"-jar\", serverJarPath, java.lang.String.valueOf(tcpPort), java.lang.String.valueOf(udpPort), params);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/6008/buggy-version/src.main.java.masterServer.ServerManager.java", "BodyUseAPI": [], "Fixed commit": "693748da2321eb7a536658247ae1b7e06d73a7f1", "Url": "https://api.github.com/repos/Souverain73/MasterServer", "Date": "2017-03-07T20:38:02Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((itemsUpForBiddingSelectBox.getItems().size) > 0) { try { io.github.teamfractal.util.AuctionBid bid = new io.github.teamfractal.util.AuctionBid(java.lang.Integer.parseInt(bidAmount.getText()), game.getPlayer()); auction.getAuctionItemAtIndex(itemsUpForBiddingSelectBox.getSelectedIndex(), game.getPlayer()).placeBid(bid); widgetUpdate(false); } catch (io.github.teamfractal.exception.NotEnoughMoneyException e) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/6130/buggy-version/core.src.io.github.teamfractal.actors.AuctionActors.java", "BodyUseAPI": ["io.github.teamfractal.Auction.getAuctionItemAtIndex(itemsUpForBiddingSelectBox.getSelectedIndex(),game.getPlayer())", "com.badlogic.gdx.scenes.scene2d.ui.SelectBox<java.lang.String>.getSelectedIndex()", "auction.getAuctionItemAtIndex(itemsUpForBiddingSelectBox.getSelectedIndex(), game.getPlayer()).placeBid(io.github.teamfractal.util.AuctionBid)"], "Fixed commit": "de775695de8333da6bf78f0a32840734fe73db64", "Url": "https://api.github.com/repos/BugfreeGames/Roboticon-Quest", "Date": "2017-02-20T16:34:59Z"},
{"Line": "=>546", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["context.getContentResolver().update(LocationProfileConstants.CONTENT_URI,android.content.ContentValues,((LocationProfileConstants.FIELD_TYPE) + \" = ?\"),java.lang.String[])"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (updated > 0) { android.util.Log.v(org.mythtv.db.preferences.LocationProfileDaoHelper.TAG, \"resetSelectedProfiles : reset all selected location profiles by type\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/1181/buggy-version/src.org.mythtv.db.preferences.LocationProfileDaoHelper.java", "BodyUseAPI": [], "Fixed commit": "48791405c9d1877b3d50919ce1b237abbd747c1e", "Url": "https://api.github.com/repos/MythTV-Clients/MythTV-Android-Frontend", "Date": "2013-09-20T01:26:12Z"},
{"Line": "=>393", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tudelft.smartphonesensing.ParticleFilter.HistoryParticle.getHistoryParticleWiFiData()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((wifiJson == null) || ((wifiJson.size()) == 0)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/2754/buggy-version/app.src.main.java.tudelft.smartphonesensing.ParticleFilter.Filter.java", "BodyUseAPI": [], "Fixed commit": "a2479477f80258d0f03708bbdb002ed018f1f2ff", "Url": "https://api.github.com/repos/jlmdegoede/SmartphoneSensing", "Date": "2015-06-30T13:26:10Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tudelft.smartphonesensing.ParticleFilter.Filter.getCell(double,double)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (cell.equals(\"none\")) { return data; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/2754/buggy-version/app.src.main.java.tudelft.smartphonesensing.ParticleFilter.HistoryParticle.java", "BodyUseAPI": [], "Fixed commit": "a2479477f80258d0f03708bbdb002ed018f1f2ff", "Url": "https://api.github.com/repos/jlmdegoede/SmartphoneSensing", "Date": "2015-06-30T13:26:10Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((myGame.isPaused()) == true) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/1824/buggy-version/src.main.java.s32a.airhockey.Puck.java", "BodyUseAPI": [], "Fixed commit": "602a0ca1fbc172cdd83b7e0023a25762868bb1ec", "Url": "https://api.github.com/repos/PTS32A/Airhockey", "Date": "2014-10-30T16:36:50Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.avaje.ebean.EbeanServer.find(java.lang.Class,com.github.hoqhuuep.islandcraft.realestate.SerializableLocation)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (fresh == null) { ebean.save(deed); cache.put(id, deed); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/6356/buggy-version/IslandCraft-RealEstate.src.main.java.com.github.hoqhuuep.islandcraft.realestate.RealEstateDatabase.java", "BodyUseAPI": [], "Fixed commit": "552185e679760074a52eecd8acb0467dce02614d", "Url": "https://api.github.com/repos/hoqhuuep/IslandCraft", "Date": "2014-03-05T06:03:24Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (validAnswers.get(position, false)) wantedView.setBackgroundColor(getResources().getColor(R.color.app_main_color));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/736/buggy-version/confhermexam.src.fr.conferencehermes.confhermexam.QuestionResponseActivity.java", "BodyUseAPI": [], "Fixed commit": "9b77c4f2f0ddb4b26841095c5cf17797131cabb5", "Url": "https://api.github.com/repos/aram-hakobyan/confherm", "Date": "2014-06-24T12:45:00Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Context.getSystemService(Context.TELEPHONY_SERVICE)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((tm.getDeviceId()) != null) return tm.getDeviceId(); else return android.provider.Settings.Secure.getString(c.getContentResolver(), Secure.ANDROID_ID);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/736/buggy-version/confhermexam.src.fr.conferencehermes.confhermexam.util.Utilities.java", "BodyUseAPI": ["android.telephony.TelephonyManager.getDeviceId()"], "Fixed commit": "9b77c4f2f0ddb4b26841095c5cf17797131cabb5", "Url": "https://api.github.com/repos/aram-hakobyan/confherm", "Date": "2014-06-24T12:45:00Z"},
{"Line": "=>873", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portlet.expando.service.impl.ExpandoValueLocalServiceImpl.findByRowId(value.getRowId())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (values.isEmpty()) { com.liferay.expando.kernel.model.ExpandoRow row = expandoRowPersistence.fetchByPrimaryKey(value.getRowId()); if (row != null) { expandoRowPersistence.remove(row); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/8004/buggy-version/portal-impl.src.com.liferay.portlet.expando.service.impl.ExpandoValueLocalServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "fc8e71e4b68c8e67db767d4ef47aae2076c7d654", "Url": "https://api.github.com/repos/ctampoya/liferay-portal", "Date": "2016-11-25T09:04:16Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((audioTrack) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/6549/buggy-version/musicprocessor.audiodevice.AndroidAudioDevice.java", "BodyUseAPI": [], "Fixed commit": "156e95ab2d852f74c20e8b09bd68e2ddc5eb2614", "Url": "https://api.github.com/repos/jerry2714/ledcubeproject.models", "Date": "2017-06-11T16:17:24Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (path.contains(\"\\\\\\\\\")) { return path.replaceAll(\"\\\\\\\\\", \".\"); }else { return path.replaceAll(\"/\", \".\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/7911/buggy-version/src.main.java.ru.hw.winter.util.Scans.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)", "java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "ef6722d8fa6d9f478431084c42a63e4765b4fc01", "Url": "https://api.github.com/repos/tony-ts/winter", "Date": "2016-12-25T20:30:24Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(options.mainDefinitionFile().exists())) { kem.registerCriticalError((\"Definition file doesn't exist: \" + (options.mainDefinitionFile().getAbsolutePath()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/4240/buggy-version/k-core.src.main.java.org.kframework.kompile.KompileFrontEnd.java", "BodyUseAPI": ["org.kframework.utils.errorsystem.KExceptionManager.registerCriticalError((\"Definition file doesn't exist: \" + (options.mainDefinitionFile().getAbsolutePath())))", "options.mainDefinitionFile().getAbsolutePath()", "org.kframework.kompile.KompileOptions.mainDefinitionFile()"], "Fixed commit": "c4acdee4ebff10533f1464cdec6f56b5cac7fe1f", "Url": "https://api.github.com/repos/osa1/k", "Date": "2014-10-13T13:07:08Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (context.kompiled.exists()) { checkAnotherKompiled(context.kompiled); }else if (!(context.kompiled.mkdirs())) { kem.registerCriticalError((\"Could not create directory \" + (context.kompiled))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/4240/buggy-version/k-core.src.main.java.org.kframework.kompile.KompileFrontEnd.java", "BodyUseAPI": ["org.kframework.kompile.KompileFrontEnd.checkAnotherKompiled(context.kompiled)", "org.kframework.utils.errorsystem.KExceptionManager.registerCriticalError((\"Could not create directory \" + (context.kompiled)))", "context.kompiled.mkdirs()"], "Fixed commit": "c4acdee4ebff10533f1464cdec6f56b5cac7fe1f", "Url": "https://api.github.com/repos/osa1/k", "Date": "2014-10-13T13:07:08Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.hibernate.SessionFactory.openSession()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (session != null) { session.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/8669/buggy-version/privacy-trust.java.privacy-protection.privacy-data-management.src.main.java.org.societies.privacytrust.privacyprotection.datamanagement.PrivacyDataManagerInternal.java", "BodyUseAPI": ["org.hibernate.Session.close()"], "Fixed commit": "8fd518f0f442ef6d101931c0881a35f1035c0749", "Url": "https://api.github.com/repos/societies/SOCIETIES-Platform", "Date": "2012-10-23T07:26:17Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (dateTime == null) { throw new java.text.ParseException(\"dateTime is null\", (-1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/7389/buggy-version/src.main.java.seedu.address.logic.parser.DateParser.java", "BodyUseAPI": [], "Fixed commit": "d863e15d9021b516ddba87bb3edacce6dd13df01", "Url": "https://api.github.com/repos/CS2103AUG2016-T10-C2/main", "Date": "2016-10-19T10:24:07Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.yahoo.labs.samoa.topology.impl.ThreadsEngine.threadPool.size()) <= 0) throw new java.lang.IllegalStateException(\"Try to get ExecutorService from an empty pool.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/177/buggy-version/samoa-threads.src.main.java.com.yahoo.labs.samoa.topology.impl.ThreadsEngine.java", "BodyUseAPI": [], "Fixed commit": "94647b457945ed4e7c45d0ed4f6404c505a15734", "Url": "https://api.github.com/repos/yahoo/samoa", "Date": "2014-02-18T16:38:09Z"},
{"Line": "=>430", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(entryFile.exists())) { entryFile = new java.io.File(line.replace(\".complete\", \"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/231/buggy-version/src.github.daneren2005.dsub.service.OfflineMusicService.java", "BodyUseAPI": [], "Fixed commit": "78fdf4a61fbb455297e89ae025c73862686ea366", "Url": "https://api.github.com/repos/thknepper/DSub", "Date": "2014-03-29T04:00:17Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uk.ac.diamond.scisoft.analysis.rcp.preference.AnalysisRpcAndRmiPreferencePage.getRmiPort()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((rmiPort < 1) || (org.dawb.common.util.net.NetUtils.isPortFree(rmiPort))) uk.ac.diamond.scisoft.analysis.RMIServerProvider.getInstance().setPort(rmiPort);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/8581/buggy-version/uk.ac.diamond.scisoft.analysis.rcp.src.uk.ac.diamond.scisoft.analysis.rcp.InitPlotServer.java", "BodyUseAPI": ["uk.ac.diamond.scisoft.analysis.RMIServerProvider.getInstance().setPort(int)"], "Fixed commit": "d1162ad13f056f43ab64e92a7ba5267425ee95d5", "Url": "https://api.github.com/repos/DawnScience/scisoft-ui", "Date": "2014-02-10T10:50:36Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uk.ac.diamond.scisoft.analysis.rcp.preference.AnalysisRpcAndRmiPreferencePage.getAnalysisRpcPort()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((analysisPort < 1) || (org.dawb.common.util.net.NetUtils.isPortFree(analysisPort))) uk.ac.diamond.scisoft.analysis.AnalysisRpcServerProvider.getInstance().setPort(analysisPort);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/8581/buggy-version/uk.ac.diamond.scisoft.analysis.rcp.src.uk.ac.diamond.scisoft.analysis.rcp.InitPlotServer.java", "BodyUseAPI": ["uk.ac.diamond.scisoft.analysis.AnalysisRpcServerProvider.getInstance().setPort(int)"], "Fixed commit": "d1162ad13f056f43ab64e92a7ba5267425ee95d5", "Url": "https://api.github.com/repos/DawnScience/scisoft-ui", "Date": "2014-02-10T10:50:36Z"},
{"Line": "=>388", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.sharkfw.system.SNSemanticTag.getSI()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (si != null) { firstSI = si[0]; }else { firstSI = \"ANY\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/8417/buggy-version/src.java.core.net.sharkfw.system.L.java", "BodyUseAPI": [], "Fixed commit": "7a5fb6de1fb99a43390d7ddde0ce9350167ffc0b", "Url": "https://api.github.com/repos/SharedKnowledge/SharkFW", "Date": "2014-04-09T20:05:33Z"},
{"Line": "=>454", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.sharkfw.knowledgeBase.SemanticNet.getSemanticTag(referencedTag.getSI())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (copyReferencedTag != null) { fragmentTag.setPredicate(predicateString, copyReferencedTag); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/8417/buggy-version/src.java.core.net.sharkfw.knowledgeBase.SharkCSAlgebra.java", "BodyUseAPI": ["net.sharkfw.knowledgeBase.SNSemanticTag.setPredicate(java.lang.String,net.sharkfw.knowledgeBase.SNSemanticTag)"], "Fixed commit": "7a5fb6de1fb99a43390d7ddde0ce9350167ffc0b", "Url": "https://api.github.com/repos/SharedKnowledge/SharkFW", "Date": "2014-04-09T20:05:33Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["navigationContext.getFragmentManager().findFragmentByTag(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(fragment.isRemoving())) { result.add(fragment); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/5570/buggy-version/library.src.main.java.com.art.alligator.implementation.CommandUtils.java", "BodyUseAPI": ["java.util.List<android.support.v4.app.Fragment>.add(android.support.v4.app.Fragment)"], "Fixed commit": "0b08c66c5004fc5432551a7d6defaf27feff0e6e", "Url": "https://api.github.com/repos/aartikov/Alligator", "Date": "2017-03-01T15:57:15Z"},
{"Line": "=>378", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) != null) { getActivity().runOnUiThread(new java.lang.Runnable() { @java.lang.Override public void run() { if (shuttleRefreshLayout.isRefreshing()) { shuttleRefreshLayout.setRefreshing(false); } } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/2694/buggy-version/app.src.main.java.edu.mit.mitmobile2.shuttles.fragment.ShuttlesFragment.java", "BodyUseAPI": [], "Fixed commit": "0adc0126e5cf5233a1caa9c850cc8a080867b0db", "Url": "https://api.github.com/repos/MIT-Mobile/MIT-Mobile-for-Android", "Date": "2015-06-19T14:39:41Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["serversrc.resImpl.TMimpl.readData(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (t == null) throw new serversrc.resImpl.InvalidTransactionException();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/3474/buggy-version/clean.serversrc.resImpl.TMimpl.java", "BodyUseAPI": [], "Fixed commit": "ae968be19a5901865e27edbea72b28b3fc5cff0c", "Url": "https://api.github.com/repos/davidthibodeau/drunken-robot", "Date": "2013-11-07T19:16:54Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["serversrc.resImpl.TMimpl.readData(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (tr == null) throw new serversrc.resImpl.InvalidTransactionException();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/3474/buggy-version/clean.serversrc.resImpl.TMimpl.java", "BodyUseAPI": [], "Fixed commit": "ae968be19a5901865e27edbea72b28b3fc5cff0c", "Url": "https://api.github.com/repos/davidthibodeau/drunken-robot", "Date": "2013-11-07T19:16:54Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (i == ((AffLoci.length) - 1)) { sb.append(AffLoci[i]); }else { sb.append(((AffLoci[i]) + \",\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/4072/buggy-version/pedgmdr.src.FamilyGenerator.java", "BodyUseAPI": ["java.lang.StringBuffer.append(int)", "java.lang.StringBuffer.append(java.lang.String)"], "Fixed commit": "279c3f218ab9fd09b3ef0d6d9fd9d93a23ab3b30", "Url": "https://api.github.com/repos/gc5k/GEAR", "Date": "2010-03-24T21:57:26Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (value.contains(\"money\")) { value = line.replace(\"money: \", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/2798/buggy-version/src.main.java.com.greatmancode.craftconomy3.converter.converters.Essentials.java", "BodyUseAPI": [], "Fixed commit": "ed5e632e33fd3c6d4b81f05bcb760112195c0552", "Url": "https://api.github.com/repos/greatman/craftconomy3", "Date": "2013-08-24T20:26:42Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (rd != null) rd.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/871/buggy-version/src.main.java.org.jvalue.ods.adapter.generic.HttpJsonAdapter.java", "BodyUseAPI": ["java.io.BufferedReader.close()"], "Fixed commit": "5bf759dd0f0263e2c7a6ebd97ef02515a123ea65", "Url": "https://api.github.com/repos/jvalue/open-data-service", "Date": "2014-01-10T22:49:34Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (conn != null) conn.disconnect();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/871/buggy-version/src.main.java.org.jvalue.ods.adapter.generic.HttpJsonAdapter.java", "BodyUseAPI": ["java.net.HttpURLConnection.disconnect()"], "Fixed commit": "5bf759dd0f0263e2c7a6ebd97ef02515a123ea65", "Url": "https://api.github.com/repos/jvalue/open-data-service", "Date": "2014-01-10T22:49:34Z"},
{"Line": "=>550", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openmrs.module.shr.contenthandler.api.ContentHandlerService.getContentHandlerByClass(java.lang.Class<? extends org.openmrs.module.shr.contenthandler.api.ContentHandler>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (h == null) { h = chs.getDefaultUnstructuredHandler(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/3484/buggy-version/omod.src.main.java.org.openmrs.module.xdsbrepository.ihe.iti.actors.impl.XdsDocumentRepositoryServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "a5ea5a4dee23d6b3efcaec9b6dee75e64a4d8337", "Url": "https://api.github.com/repos/jembi/openmrs-module-shr-xds-b-repository", "Date": "2014-09-16T13:04:51Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.spongepowered.asm.mixin.transformer.ClassInfo.forType(org.spongepowered.asm.lib.Type)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (typeInfo == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/3886/buggy-version/src.main.java.org.spongepowered.asm.mixin.transformer.MixinVerifier.java", "BodyUseAPI": [], "Fixed commit": "053a0572ab0d5b31176f42a1943602df929abdf9", "Url": "https://api.github.com/repos/SpongePowered/Mixin", "Date": "2015-10-25T00:37:03Z"},
{"Line": "=>336", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.s23m.cell.core.OrderedSet.iteratorIndexOfUUID(java.util.List<org.s23m.cell.Set>,java.util.UUID)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (indexOf >= 0) { final int previous = indexOf - 1; if (((-1) < previous) && (previous < (size()))) { return getValue(contents, previous); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/1957/buggy-version/org.s23m.cell.kernel.src.main.java.org.s23m.cell.core.OrderedSet.java", "BodyUseAPI": [], "Fixed commit": "ac31ebec27d91a516767bd499339d83df8a0eea2", "Url": "https://api.github.com/repos/s23m/cell", "Date": "2012-10-18T16:57:50Z"},
{"Line": "=>318", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.s23m.cell.core.OrderedSet.iteratorIndexOfUUID(java.util.List<org.s23m.cell.Set>,java.util.UUID)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (indexOf >= 0) { final int next = indexOf + 1; if (((size()) > next) && (next > (-1))) { return getValue(contents, next); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/1957/buggy-version/org.s23m.cell.kernel.src.main.java.org.s23m.cell.core.OrderedSet.java", "BodyUseAPI": [], "Fixed commit": "ac31ebec27d91a516767bd499339d83df8a0eea2", "Url": "https://api.github.com/repos/s23m/cell", "Date": "2012-10-18T16:57:50Z"},
{"Line": "=>1458", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (definitive) { deleteComponentData(componentId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/2222/buggy-version/lib-core.src.main.java.com.stratelia.webactiv.beans.admin.Admin.java", "BodyUseAPI": [], "Fixed commit": "cfa3aae991cbaebc2e30cced51c5acbb4ad8af27", "Url": "https://api.github.com/repos/CecileBONIN/Silverpeas-Core", "Date": "2014-11-25T08:46:59Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (resultCode == (RESULT_CANCELED)) { mCamera = getCameraInstance(); mPreview.setCameraInstance(mCamera); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/2319/buggy-version/src.activity.CameraActivity.java", "BodyUseAPI": [], "Fixed commit": "d9d01d5b6389849a1be0848ded5c378ec2e5172e", "Url": "https://api.github.com/repos/theresa77/Generic_Classification_App", "Date": "2014-08-03T18:17:06Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((TablePile.selectedPile.getTotalCards()) > 0) && (!(TablePile.selectedPile.top().isFaceUp()))) { TablePile.selectedPile.top().flip(); incrementFlippedCards(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/1827/buggy-version/src.day170717.solitaire.SuitPile.java", "BodyUseAPI": [], "Fixed commit": "41379b1979d0372dbf88b6e10bd75822409c6ce7", "Url": "https://api.github.com/repos/Duelist256/CoreJava", "Date": "2017-09-10T13:12:38Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (iBadResponse instanceof java.lang.Throwable) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/7243/buggy-version/server.src.main.java.com.orientechnologies.orient.server.distributed.task.OCreateRecordTask.java", "BodyUseAPI": [], "Fixed commit": "64672ae73f3206bee6db3751c11617dd8b7543d7", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2014-09-03T17:22:16Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (iBadResponse instanceof java.lang.Throwable) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/7243/buggy-version/server.src.main.java.com.orientechnologies.orient.server.distributed.task.OCreateRecordTask.java", "BodyUseAPI": [], "Fixed commit": "64672ae73f3206bee6db3751c11617dd8b7543d7", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2014-09-03T17:22:16Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pStructureType == (mw.server.gamelogic.enums.StructureType.WATCHTOWER)) { return mw.shared.SharedTile.Terrain.GRASS; }else { throw new java.lang.IllegalArgumentException(((((((\"The tuple \" + pStructureType) + \",\") + pHasMeadow) + \",\") + pColor) + \" is not a valid tuple to be translated to SharedTile.Terrain\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/7369/buggy-version/src.mw.server.network.translators.SharedTileTranslator.java", "BodyUseAPI": [], "Fixed commit": "f2cd81e223a08168ed41919769204e39d4b496b5", "Url": "https://api.github.com/repos/EmilyRSager/MedeivalWarfare", "Date": "2015-04-09T19:02:23Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (transformations.isEmpty()) { throw new de.tuberlin.amos.ws17.swit.application.TransformBufferException(\"No transformation data available!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/4216/buggy-version/src.main.java.de.tuberlin.amos.ws17.swit.application.TransformationBuffer.java", "BodyUseAPI": [], "Fixed commit": "08414f0f3bffb79def64e322bb0b2cb02b7413d7", "Url": "https://api.github.com/repos/cfengler/amos-ws17-proj2", "Date": "2017-11-21T17:12:31Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currentclass == null) { throw new java.lang.RuntimeException(((\"Unable to locate method '\" + method) + \"' anywhere in the inheritance chain of the given class!\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/8287/buggy-version/mcp.ModAction.java", "BodyUseAPI": [], "Fixed commit": "dafca3f9dd11ceff82fba0aa059403df58303e1f", "Url": "https://api.github.com/repos/ShaRose/GuiAPI", "Date": "2011-09-21T01:10:13Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (weekNo == 0) { weekNo = 51; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/5998/buggy-version/java_app.src.db.DBConnection.java", "BodyUseAPI": [], "Fixed commit": "94b66d82429577dacbe1f91fd9f83dcfde62f7da", "Url": "https://api.github.com/repos/mathiasose/fellesprosjekt", "Date": "2014-03-20T09:37:18Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles(java.io.FilenameFilter)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (files == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/8259/buggy-version/src.main.java.org.bitbucket.ucchy.glr.LockDataManager.java", "BodyUseAPI": [], "Fixed commit": "3e1a7d26b7fef0f3f1ecd7e4359131c45a5adb00", "Url": "https://api.github.com/repos/ucchyocean/GakubuchiLockReloaded", "Date": "2016-05-15T11:05:27Z"},
{"Line": "=>721", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.flink.streaming.runtime.tasks.StreamTask.LOG.isDebugEnabled()) { org.apache.flink.streaming.runtime.tasks.StreamTask.LOG.debug((\"{} - finished synchronous part of checkpoint {}.\" + \"Alignment duration: {} ms, snapshot duration {} ms\"), getName(), checkpointId, (alignmentDurationNanos / 1000000), syncDurationMillis); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/1142/buggy-version/flink-streaming-java.src.main.java.org.apache.flink.streaming.runtime.tasks.StreamTask.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String,java.lang.String,long,long,long)"], "Fixed commit": "6f8f5eb3b9ba07cd3bb4d9f7edd43d4b8862acbe", "Url": "https://api.github.com/repos/aljoscha/flink", "Date": "2016-09-29T19:12:38Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (value != null) { byte[] utf8Bytes = value.getBytes(java.nio.charset.StandardCharsets.UTF_8); this.ensureCapacity((2 + (utf8Bytes.length))); this.writeShortValue(((short) (utf8Bytes.length))); this.buffer.put(utf8Bytes); }else { this.writeShortValue(((short) (0))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/3448/buggy-version/src.main.java.io.gomint.taglib.NBTWriter.java", "BodyUseAPI": ["java.lang.String.getBytes(java.nio.charset.Charset)"], "Fixed commit": "15da265f1d11c50b678a71f903fc5decaf6d16f0", "Url": "https://api.github.com/repos/GoMint/TagLib", "Date": "2016-02-09T23:03:20Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((actionText) != \"\") actionText += \"\\n\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/8333/buggy-version/AndroidFree.src.main.java.com.chewielouie.textadventure.TextAdventurePresenter.java", "BodyUseAPI": [], "Fixed commit": "f6db344813e3967d55467f9512ebe5412b785198", "Url": "https://api.github.com/repos/julianchurchill/text-adventure", "Date": "2013-06-08T15:33:03Z"},
{"Line": "=>588", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (info != null) { flags = info.getFlags(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/886/buggy-version/com.ibm.wala.dalvik.src.com.ibm.wala.dalvik.ipa.callgraph.androidModel.AndroidModel.java", "BodyUseAPI": ["IntentStarters.StartInfo.getFlags()"], "Fixed commit": "eeffa0ca8c31b2c2637d4f2a8daac3dbe395cda5", "Url": "https://api.github.com/repos/uheai/WALA", "Date": "2016-02-20T15:22:33Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (method == null) return com.ibm.wala.dalvik.util.AndroidComponent.UNKNOWN;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/886/buggy-version/com.ibm.wala.dalvik.src.com.ibm.wala.dalvik.util.AndroidComponent.java", "BodyUseAPI": [], "Fixed commit": "eeffa0ca8c31b2c2637d4f2a8daac3dbe395cda5", "Url": "https://api.github.com/repos/uheai/WALA", "Date": "2016-02-20T15:22:33Z"},
{"Line": "=>354", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ibm.wala.classLoader.IClass.getMethod(ifMethod.getSelector())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (method != null) { if (this.flags.contains(com.ibm.wala.dalvik.util.AndroidEntryPointLocator.LocatorFlags.WITH_SUPER)) { final com.ibm.wala.dalvik.ipa.callgraph.impl.AndroidEntryPoint ep = makeEntryPointForHeuristic(method, cha); if ((eps.contains(ep)) && (!(method.isStatic()))) { for (final com.ibm.wala.dalvik.ipa.callgraph.impl.AndroidEntryPoint eps_ep : eps) { if (eps_ep.equals(ep)) { final com.ibm.wala.types.TypeReference[] oldTypes = eps_ep.getParameterTypes(0); final com.ibm.wala.types.TypeReference[] newTypes = new com.ibm.wala.types.TypeReference[(oldTypes.length) + 1]; java.lang.System.arraycopy(oldTypes, 0, newTypes, 0, oldTypes.length); newTypes[oldTypes.length] = appClass.getReference(); eps_ep.setParameterTypes(0, newTypes); com.ibm.wala.dalvik.util.AndroidEntryPointLocator.logger.debug(\"New This-Types for {} are {}\", method.getSelector(), java.util.Arrays.toString(newTypes)); } } }else { if (!(method.isStatic())) { ep.setParameterTypes(0, new com.ibm.wala.types.TypeReference[]{ appClass.getReference() }); } eps.add(ep); com.ibm.wala.dalvik.util.AndroidEntryPointLocator.logger.debug(\"Heuristic 2b: selecting from super {}\", method); } }else { com.ibm.wala.dalvik.util.AndroidEntryPointLocator.logger.debug(\"Heuristic 2b: Skipping {}\", method); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/886/buggy-version/com.ibm.wala.dalvik.src.com.ibm.wala.dalvik.util.AndroidEntryPointLocator.java", "BodyUseAPI": ["com.ibm.wala.classLoader.IMethod.getSelector()", "com.ibm.wala.dalvik.util.AndroidEntryPointLocator.makeEntryPointForHeuristic(com.ibm.wala.classLoader.IMethod,com.ibm.wala.ipa.cha.IClassHierarchy)", "org.slf4j.Logger.debug(java.lang.String,method.getSelector(),java.lang.String)", "org.slf4j.Logger.debug(java.lang.String,com.ibm.wala.classLoader.IMethod)", "org.slf4j.Logger.debug(java.lang.String,com.ibm.wala.classLoader.IMethod)", "com.ibm.wala.classLoader.IMethod.isStatic()", "com.ibm.wala.classLoader.IMethod.isStatic()"], "Fixed commit": "eeffa0ca8c31b2c2637d4f2a8daac3dbe395cda5", "Url": "https://api.github.com/repos/uheai/WALA", "Date": "2016-02-20T15:22:33Z"},
{"Line": "=>519", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (indexDot == (-1)) { throw new java.lang.RuntimeException(((\"The referenced class \" + internalName) + \" does not exists\")); }else { loadInnerClass(internalName, imported, node, actions); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/8566/buggy-version/src.main.java.org.walkmod.javalang.compiler.types.TypesLoaderVisitor.java", "BodyUseAPI": [], "Fixed commit": "f64492234c8170ebc358b7a6083e66173c0b68d2", "Url": "https://api.github.com/repos/rpau/javalang-compiler", "Date": "2016-03-20T16:07:53Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (saveEcore) { org.eclipse.emf.ecore.resource.Resource resource = rs.createResource(org.eclipse.emf.common.util.URI.createFileURI((message + \".ecore\"))); resource.getContents().add(pkg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/9191/buggy-version/edi.ecore.src.main.java.org.milyn.ecore.SchemaConverter.java", "BodyUseAPI": [], "Fixed commit": "1b4e59d448ccc8c4c2aceddeeb83fe41df16fec3", "Url": "https://api.github.com/repos/zubairov/smooks", "Date": "2011-03-15T16:31:02Z"},
{"Line": "=>450", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["root.path(\"login\").path(\"result\").textValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.wikidata.wdtk.wikibaseapi.ApiConnection.LOGIN_WRONG_TOKEN.equals(result)) { throw new org.wikidata.wdtk.wikibaseapi.NeedTokenException(message); }else { throw new org.wikidata.wdtk.wikibaseapi.LoginFailedException(message); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/4144/buggy-version/wdtk-wikibaseapi.src.main.java.org.wikidata.wdtk.wikibaseapi.ApiConnection.java", "BodyUseAPI": [], "Fixed commit": "8fd9372e5bd3caac6e60bd12f9e5ec3aaa1a15b9", "Url": "https://api.github.com/repos/Wikidata/Wikidata-Toolkit", "Date": "2015-08-25T15:11:05Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Calendar.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (endHour > (startingHour)) y = rowHeight; else y = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/2884/buggy-version/src.main.java.views.gui.components.JEventDisplay.java", "BodyUseAPI": [], "Fixed commit": "d1e5bc9f9840f854d177dc90a612b111fda9f4be", "Url": "https://api.github.com/repos/stnatic/tcs-organizer", "Date": "2013-06-07T18:30:46Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isValid && ((lastDisplayedSeconds) > 90)) { vibrate = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/8719/buggy-version/src.com.remulasce.lametroapp.ArrivalNotifyService.java", "BodyUseAPI": [], "Fixed commit": "a0ae795e8faea6b1d0d7ae8dd4a35df0dd4aae91", "Url": "https://api.github.com/repos/remulasce/metroapp", "Date": "2014-12-04T04:25:32Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.stuur.stuur.MainActivity.censor_weight.equals(\"none\")) type_list.setVisibility(rootView.GONE); else type_list.setVisibility(rootView.VISIBLE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/4845/buggy-version/Stuur.app.src.main.java.com.stuur.stuur.PlaceholderFragment.java", "BodyUseAPI": [], "Fixed commit": "c85411ee8670ef9c6705d4c656cf7be9d2c2b6a5", "Url": "https://api.github.com/repos/beefy/Stuur", "Date": "2016-03-12T22:23:46Z"},
{"Line": "=>585", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (attrTypedDecl.isStatic()) { initFlagFieldOwner = owner.makeJavaType(((com.redhat.ceylon.model.typechecker.model.ClassOrInterface) (attrTypedDecl.getContainer())).getType(), AbstractTransformer.JT_RAW); }else { initFlagFieldOwner = owner.naming.makeThis(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/3918/buggy-version/compiler-java.src.com.redhat.ceylon.compiler.java.codegen.AttributeDefinitionBuilder.java", "BodyUseAPI": ["((com.redhat.ceylon.model.typechecker.model.ClassOrInterface) (attrTypedDecl.getContainer())).getType()", "com.redhat.ceylon.compiler.java.codegen.AbstractTransformer.makeJavaType(((com.redhat.ceylon.model.typechecker.model.ClassOrInterface) (attrTypedDecl.getContainer())).getType(),AbstractTransformer.JT_RAW)", "com.redhat.ceylon.model.typechecker.model.TypedDeclaration.getContainer()"], "Fixed commit": "a901001ad5070c1bf70575a082dd760c598e5c80", "Url": "https://api.github.com/repos/eclipse/ceylon", "Date": "2016-10-17T14:09:16Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((left) != null) { builder.append(\"left:\\n\"); builder.append(left.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/1600/buggy-version/src.pl.poznan.put.cs.bioserver.clustering.ClustererHierarchical.java", "BodyUseAPI": [], "Fixed commit": "1dfa3460de82a53b084ee650d83c574a5b2d9e72", "Url": "https://api.github.com/repos/tzok/mcq4structures", "Date": "2013-10-18T11:02:34Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((right) != null) { builder.append(\"right:\\n\"); builder.append(right.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/1600/buggy-version/src.pl.poznan.put.cs.bioserver.clustering.ClustererHierarchical.java", "BodyUseAPI": [], "Fixed commit": "1dfa3460de82a53b084ee650d83c574a5b2d9e72", "Url": "https://api.github.com/repos/tzok/mcq4structures", "Date": "2013-10-18T11:02:34Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (stopwatch.isRunning()) { stopwatch.stop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/2578/buggy-version/core.src.main.java.io.grpc.internal.ResettableTimer.java", "BodyUseAPI": ["com.google.common.base.Stopwatch.stop()"], "Fixed commit": "b15c65e3fad1b2967e8095d9ae93117639adcc30", "Url": "https://api.github.com/repos/zhangkun83/grpc-java", "Date": "2016-07-01T06:20:01Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((argsOr2.size()) > 1) { argsOr2.addAll(java.util.Arrays.asList(argsOr).subList(2, argsOr.length)); java.lang.String[] args = argsOr2.toArray(new java.lang.String[argsOr2.size()]); if ((args.length) > 0) { java.lang.String command = argsOr[1]; cmd.issueCommand(command, args, event); }else { cmd.issueCommand(\"DisCal\", args, event); } }else { cmd.issueCommand(\"DisCal\", new java.lang.String[1], event); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/6341/buggy-version/src.main.java.com.cloudcraftgaming.module.command.CommandListener.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.toArray(java.lang.String[])", "java.util.ArrayList<java.lang.String>.size()", "java.util.ArrayList<java.lang.String>.addAll(java.util.List<java.lang.String>)"], "Fixed commit": "a9f7d224dc8b522a240967a8bc0db6977e845c42", "Url": "https://api.github.com/repos/NovaFox161/DisCal-Discord-Bot", "Date": "2017-02-18T15:32:21Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (exBeanDeser != null) { for (java.util.Map.Entry<java.lang.String, java.lang.Object> entry : otherValues.entrySet()) { java.lang.String key = entry.getKey(); java.lang.Object value = entry.getValue(); com.alibaba.fastjson.parser.deserializer.FieldDeserializer fieldDeserializer = exBeanDeser.getFieldDeserializer(key); if (fieldDeserializer != null) { fieldDeserializer.setValue(ex, value); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/31/buggy-version/src.main.java.com.alibaba.fastjson.parser.deserializer.ThrowableDeserializer.java", "BodyUseAPI": ["com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.getFieldDeserializer(java.lang.String)"], "Fixed commit": "60659659948c06593f2a0a11fe1d75679c80505a", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2017-12-01T12:34:46Z"},
{"Line": "=>355", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.fossasia.openevent.dbutils.DbSingleton.getInstance().getEventDetails()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (currentEvent != null) org.fossasia.openevent.activities.MainActivity.getDaysBetweenDates(org.fossasia.openevent.utils.ISO8601Date.getDateObject(currentEvent.getStart()), org.fossasia.openevent.utils.ISO8601Date.getDateObject(currentEvent.getEnd()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/1104/buggy-version/android.app.src.main.java.org.fossasia.openevent.activities.MainActivity.java", "BodyUseAPI": ["org.fossasia.openevent.data.Event.getEnd()", "org.fossasia.openevent.utils.ISO8601Date.getDateObject(currentEvent.getStart())", "org.fossasia.openevent.activities.MainActivity.getDaysBetweenDates(org.fossasia.openevent.utils.ISO8601Date.getDateObject(currentEvent.getStart()),org.fossasia.openevent.utils.ISO8601Date.getDateObject(currentEvent.getEnd()))", "org.fossasia.openevent.data.Event.getStart()", "org.fossasia.openevent.utils.ISO8601Date.getDateObject(currentEvent.getEnd())"], "Fixed commit": "228b8b25f66bb7cd9d5907178e401d48188f5782", "Url": "https://api.github.com/repos/rohanagarwal94/open-event-android", "Date": "2017-02-26T06:23:59Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["AVL.No.getPai()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((pai.getFatorBalanceamento()) == 0) { atualizarFatorBalanceamento(pai, operacao); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/3036/buggy-version/estruturas.src.AVL.Arvore.java", "BodyUseAPI": ["AVL.Arvore.atualizarFatorBalanceamento(AVL.No,int)"], "Fixed commit": "41f158d70473548282cc8de28a16139a1cada907", "Url": "https://api.github.com/repos/chicobentojr/estrutura-de-dados-nao-lineares", "Date": "2017-10-20T19:21:41Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((entity.getProfesional()) != null) dto.setProfesional(profesionalMapper.toDTO(entity.getProfesional())); else dto.setProfesional(null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/299/buggy-version/SiSaludSRL.src.main.java.ar.edu.ungs.business.mappers.RegistroHistoriaClinicaMapper.java", "BodyUseAPI": ["ar.edu.ungs.business.mappers.ProfesionalMapper.toDTO(entity.getProfesional())", "ar.edu.ungs.persistence.entities.historiaclinica.RegistroHistoriaClinica.getProfesional()", "ar.edu.ungs.business.dto.RegistroHistoriaClinicaDTO.setProfesional(profesionalMapper.toDTO(entity.getProfesional()))"], "Fixed commit": "a17c192c2212fabd7ecac5d5ddfa4081301120db", "Url": "https://api.github.com/repos/alefherrera/sisalud", "Date": "2017-06-04T21:57:29Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((obj == null) || (!(obj.getClass().equals(uk.co.jamesmcguigan.rockpaperscissors.models.Player.class)))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/4349/buggy-version/rock-paper-scissors.src.main.java.uk.co.jamesmcguigan.rockpaperscissors.models.Player.java", "BodyUseAPI": [], "Fixed commit": "b36d583fcaeed0e9446966fb8ea0dd189ed85456", "Url": "https://api.github.com/repos/modernmaster/katas", "Date": "2016-06-01T20:12:03Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentClassifier) instanceof org.eclipse.uml2.uml.Interface) { operation.setVisibility(VisibilityKind.PUBLIC_LITERAL); }else { operation.setVisibility(VisibilityKind.PACKAGE_LITERAL); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/5178/buggy-version/plugins.org.obeonetwork.jdt2uml.creator.src.org.obeonetwork.jdt2uml.creator.internal.handler.async.MethodDeclarationHandler.java", "BodyUseAPI": [], "Fixed commit": "001b6de9bb48e36a2afa57932c9bd71f9b729108", "Url": "https://api.github.com/repos/hmarchadour/2uml", "Date": "2014-04-20T17:05:07Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentClassifier) instanceof org.eclipse.uml2.uml.Interface) { attribute.setVisibility(VisibilityKind.PUBLIC_LITERAL); }else { attribute.setVisibility(VisibilityKind.PACKAGE_LITERAL); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/5178/buggy-version/plugins.org.obeonetwork.jdt2uml.creator.src.org.obeonetwork.jdt2uml.creator.internal.handler.async.FieldDeclarationHandler.java", "BodyUseAPI": [], "Fixed commit": "001b6de9bb48e36a2afa57932c9bd71f9b729108", "Url": "https://api.github.com/repos/hmarchadour/2uml", "Date": "2014-04-20T17:05:07Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.somethingdreadful.MAL.DetailView.findViewById(R.id.tabs)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (tabs != null) { if ((tabs.getTabCount()) == 4) tabs.removeTabAt(2); if (!hidePersonal) tabs.addTab(tabs.newTab().setText(getPageTitle(2)), 2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/5201/buggy-version/Atarashii.src.net.somethingdreadful.MAL.adapters.DetailViewPagerAdapter.java", "BodyUseAPI": ["android.support.design.widget.TabLayout.newTab()", "android.support.design.widget.TabLayout.getTabCount()", "android.support.design.widget.TabLayout.addTab(tabs.newTab().setText(getPageTitle(2)),int)", "tabs.newTab().setText(java.lang.String)", "android.support.design.widget.TabLayout.removeTabAt(int)"], "Fixed commit": "98194e7d73983abf2319d853e73f9dfe5c31d4e8", "Url": "https://api.github.com/repos/ratan12/Atarashii", "Date": "2016-01-16T14:10:32Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((acceptPatterns[inx]) != null) && (!(\"\".equals(acceptPatterns[inx])))) { if (!(acceptPatterns[inx].matcher(path).find())) { logger.trace(\"Not Accepted Pattern Found In : {}\", path); return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/5065/buggy-version/server.src.main.java.org.fastcatsearch.datasource.reader.DirectoryPathReader.java", "BodyUseAPI": ["java.util.regex.Matcher.find()", "java.util.regex.Pattern.matcher(java.lang.String)"], "Fixed commit": "f47d22171ad71e6c9468452db7d0dfcb90f18453", "Url": "https://api.github.com/repos/fastcatsearch/fastcatsearch", "Date": "2014-09-11T08:56:54Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((skipPatterns[inx]) != null) && (!(\"\".equals(skipPatterns[inx])))) { if (skipPatterns[inx].matcher(path).find()) { logger.trace(\"Skip Pattern Found In : {}\", path); return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/5065/buggy-version/server.src.main.java.org.fastcatsearch.datasource.reader.DirectoryPathReader.java", "BodyUseAPI": ["java.util.regex.Pattern.matcher(java.lang.String)", "java.util.regex.Matcher.find()"], "Fixed commit": "f47d22171ad71e6c9468452db7d0dfcb90f18453", "Url": "https://api.github.com/repos/fastcatsearch/fastcatsearch", "Date": "2014-09-11T08:56:54Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((node.nodeData.getChilds().size()) > 1) { accThreshLabeltext = (node.nodeData.getChilds().get(1).id) + \" threshold: \"; }else { accThreshLabeltext = \"parent 2 threshold: \"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/4825/buggy-version/limes-core.src.main.java.org.aksw.limes.core.gui.view.graphBuilder.ThresholdModifyView.java", "BodyUseAPI": [], "Fixed commit": "d00ffbd472918452f92af052a32ac52ba95c23d9", "Url": "https://api.github.com/repos/dice-group/LIMES", "Date": "2016-10-10T14:45:15Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((i == 171) && (j == 162)) { r = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/3397/buggy-version/src.RayTracer.java", "BodyUseAPI": [], "Fixed commit": "901bd5dcf3ab338064d2fc71950dacda8e7b2f61", "Url": "https://api.github.com/repos/itaiyifrach/RayCasting", "Date": "2017-06-04T16:38:14Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.badlogic.gdx.controllers.Controllers.getControllers().size) <= (controller)) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/1156/buggy-version/au.com.voltic.gdx.control.ControllerAxis.java", "BodyUseAPI": [], "Fixed commit": "eedcf56d5ca8b3c819a0cdf56a383e1f9d43bddd", "Url": "https://api.github.com/repos/volticgames/GDXPunk", "Date": "2013-05-26T05:07:49Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.badlogic.gdx.controllers.Controllers.getControllers().size) <= (controller)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/1156/buggy-version/au.com.voltic.gdx.control.ControllerButton.java", "BodyUseAPI": [], "Fixed commit": "eedcf56d5ca8b3c819a0cdf56a383e1f9d43bddd", "Url": "https://api.github.com/repos/volticgames/GDXPunk", "Date": "2013-05-26T05:07:49Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((analysis.getExactMatching()) != null) exactMatchingChB.setChecked(analysis.getExactMatching());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/2877/buggy-version/rega-genotype.src.main.java.rega.genotype.ui.admin.file_editor.blast.BlastAnalysisForm.java", "BodyUseAPI": ["eu.webtoolkit.jwt.WCheckBox.setChecked(analysis.getExactMatching())", "rega.genotype.BlastAnalysis.getExactMatching()"], "Fixed commit": "c1d1a7b1f7a9bfbf0c173632370f578dcaf15b5d", "Url": "https://api.github.com/repos/rega-cev/rega-genotype", "Date": "2016-06-10T11:53:44Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((originalCoordinates) == null) && ((userCoordinates) == null)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/6243/buggy-version/app.src.main.java.ru.ifmo.geoquiz.MapDialog.java", "BodyUseAPI": [], "Fixed commit": "cc84b7abf65d98519fe235f8239023ef60e588bd", "Url": "https://api.github.com/repos/kvld/GeoQuiz", "Date": "2015-12-13T13:35:18Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (jsonPrimitive.isBoolean()) { return jsonElement.getAsBoolean(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/8846/buggy-version/javers-persistence-mongo.src.main.java.org.javers.repository.mongo.DocumentConverter.java", "BodyUseAPI": [], "Fixed commit": "45c055910d4b1a10b2ff1cbf3aff935fe1a72a4b", "Url": "https://api.github.com/repos/javers/javers", "Date": "2017-01-24T22:01:25Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dbObject instanceof java.lang.Boolean) { return new org.javers.repository.mongo.JsonPrimitive(((java.lang.Boolean) (dbObject))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/8846/buggy-version/javers-persistence-mongo.src.main.java.org.javers.repository.mongo.DocumentConverter.java", "BodyUseAPI": [], "Fixed commit": "45c055910d4b1a10b2ff1cbf3aff935fe1a72a4b", "Url": "https://api.github.com/repos/javers/javers", "Date": "2017-01-24T22:01:25Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.opensymphony.xwork2.config.RuntimeConfiguration.getActionConfig(mapping.getNamespace(),java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (actionConfig == null) { actionConfig = configuration.getActionConfig(mapping.getNamespace(), actionName.substring((actionSlashPos + 1))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/1509/buggy-version/src.main.java.de.nak.exammgmt.util.struts.Restful3ActionMapper.java", "BodyUseAPI": [], "Fixed commit": "1f32ae9f80d7f9066cea40d0641160f99f4ee4ac", "Url": "https://api.github.com/repos/domu1de/IAAHausarbeit", "Date": "2014-12-22T12:23:33Z"},
{"Line": "=>284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (kpi.isTrendDisplayed(DataType.ADDITIONAL2)) { notDisplayedCustomAttributeColumns.add((((framework.utils.Table.KPI_COLUMN_NAME_PREFIX) + (DataType.ADDITIONAL2.name())) + (kpi.getUid()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/8043/buggy-version/app.framework.utils.Table.java", "BodyUseAPI": ["framework.services.kpi.Kpi.getUid()", "java.util.Set<java.lang.String>.add((((framework.utils.Table.KPI_COLUMN_NAME_PREFIX) + (DataType.ADDITIONAL2.name())) + (kpi.getUid())))"], "Fixed commit": "ba8ad387a956f98d0e80d133c1c59fea34f686c3", "Url": "https://api.github.com/repos/theAgileFactory/app-framework", "Date": "2016-03-17T19:33:29Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (kpi.isTrendDisplayed(DataType.MAIN)) { notDisplayedCustomAttributeColumns.add((((framework.utils.Table.KPI_COLUMN_NAME_PREFIX) + (DataType.MAIN.name())) + (kpi.getUid()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/8043/buggy-version/app.framework.utils.Table.java", "BodyUseAPI": ["framework.services.kpi.Kpi.getUid()", "java.util.Set<java.lang.String>.add((((framework.utils.Table.KPI_COLUMN_NAME_PREFIX) + (DataType.MAIN.name())) + (kpi.getUid())))"], "Fixed commit": "ba8ad387a956f98d0e80d133c1c59fea34f686c3", "Url": "https://api.github.com/repos/theAgileFactory/app-framework", "Date": "2016-03-17T19:33:29Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (kpi.isTrendDisplayed(DataType.ADDITIONAL1)) { notDisplayedCustomAttributeColumns.add((((framework.utils.Table.KPI_COLUMN_NAME_PREFIX) + (DataType.ADDITIONAL1.name())) + (kpi.getUid()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/8043/buggy-version/app.framework.utils.Table.java", "BodyUseAPI": ["java.util.Set<java.lang.String>.add((((framework.utils.Table.KPI_COLUMN_NAME_PREFIX) + (DataType.ADDITIONAL1.name())) + (kpi.getUid())))", "framework.services.kpi.Kpi.getUid()"], "Fixed commit": "ba8ad387a956f98d0e80d133c1c59fea34f686c3", "Url": "https://api.github.com/repos/theAgileFactory/app-framework", "Date": "2016-03-17T19:33:29Z"},
{"Line": "=>395", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.movielabs.mddflib.avails.xml.Pedigree.getRawValue()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (isSpecified(value)) { if ((value.length()) > 2) { countryEl = process(regionEl, \"countryRegion\", xb.getMdNSpace(), cellKey); }else { countryEl = process(regionEl, \"country\", xb.getMdNSpace(), cellKey); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/6848/buggy-version/mddf-lib.src.com.movielabs.mddflib.avails.xml.RowToXmlHelper.java", "BodyUseAPI": ["java.lang.String.length()"], "Fixed commit": "178ddd86979e13e74d30b220cd020fec4cace5ed", "Url": "https://api.github.com/repos/MovieLabs/mddf", "Date": "2017-01-19T21:27:58Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.snmp4j.CommandResponderEvent.getPDU()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((pdu.getType()) == (org.snmp4j.PDU.SET)) { java.lang.System.out.println((\"SET: \" + (event.toString()))); java.lang.System.out.println((\"Object: \" + (pdu.getVariableBindings().toString()))); java.util.Vector<org.snmp4j.smi.VariableBinding> variableBindingsList = ((java.util.Vector<org.snmp4j.smi.VariableBinding>) (pdu.getVariableBindings())); for (org.snmp4j.smi.VariableBinding variableBinding : variableBindingsList) { java.lang.System.out.println(variableBinding.toString()); if (java.util.Objects.equals(variableBinding.getOid().toString(), com.project29.randomnumberssnmp.server.ManagedObjectCreator.getResetOID())) { if (java.util.Objects.equals(variableBinding.getVariable().toString(), unpredictableConf.getCommandKey())) { java.lang.System.out.println(\"Success\"); reset(address, \"C:\\\\Users\\\\anton\\\\OneDrive\\\\Documentos\\\\NetBeansProjects\\\\RandomNumbersSNMP\\\\resource\\\\unpredictable-conf.txt\"); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/8041/buggy-version/src.main.java.com.project29.randomnumberssnmp.server.SNMPAgent.java", "BodyUseAPI": ["pdu.getVariableBindings().toString()", "java.io.PrintStream.println((\"Object: \" + (pdu.getVariableBindings().toString())))", "org.snmp4j.PDU.getVariableBindings()", "org.snmp4j.PDU.getVariableBindings()"], "Fixed commit": "2cc0312c4e707adb1320d7217cc799bc205c4a48", "Url": "https://api.github.com/repos/antoniosilva9116/RandomNumbersSNMP", "Date": "2017-02-09T17:42:50Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["phc.android.MainActivity.findViewById(R.id.button_services)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (servicesButton == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/5557/buggy-version/PHC-Android.PHC.src.main.java.phc.android.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "fffae6403bc0c00f68528a6e864294e7e3042c02", "Url": "https://api.github.com/repos/calblueprint/PHC", "Date": "2014-12-09T19:12:59Z"},
{"Line": "=>914", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((courseObjG) != null) if ((courseObjG.getThumbnails()) != null) { createOrUpDate.setUrl(courseObjG.getThumbnails().getUrl()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/3703/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.gshelf.collectiondetails.CollectionInfoView.java", "BodyUseAPI": [], "Fixed commit": "f51837c01aef528e557a21d5e511fd24d0f9e486", "Url": "https://api.github.com/repos/chandrasekharv/Gooru-Web", "Date": "2015-10-08T09:39:49Z"},
{"Line": "=>590", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (attachment.containsKey(\"type\")) { contentType = ((java.lang.String) (attachment.get(\"type\"))); }else if (attachment.containsKey(\"content-type\")) { com.couchbase.lite.util.Log.w(Log.TAG_SYNC, (\"Found attachment that uses content-type\" + (\" field name instead of content_type (see couchbase-lite-android\" + \" issue #80): %s\")), attachment); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/4859/buggy-version/src.main.java.com.couchbase.lite.replicator.PusherInternal.java", "BodyUseAPI": ["com.couchbase.lite.util.Log.w(Log.TAG_SYNC,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)", "java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)", "java.util.Map<java.lang.String, java.lang.Object>.containsKey(java.lang.String)"], "Fixed commit": "1d67e7d010a85446cd85093ef58fd528b1be5688", "Url": "https://api.github.com/repos/gotmyjobs/couchbase-lite-java-core", "Date": "2015-07-22T23:15:13Z"},
{"Line": "=>599", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (contentType == null) contentType = \"application/octet-stream\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/4859/buggy-version/src.main.java.com.couchbase.lite.replicator.PusherInternal.java", "BodyUseAPI": [], "Fixed commit": "1d67e7d010a85446cd85093ef58fd528b1be5688", "Url": "https://api.github.com/repos/gotmyjobs/couchbase-lite-java-core", "Date": "2015-07-22T23:15:13Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNotBlank(redirect)) { redirect = java.net.URLDecoder.decode(redirect, \"UTF-8\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/6340/buggy-version/taotao-sso.src.main.java.com.taotao.sso.controller.UserController.java", "BodyUseAPI": ["java.net.URLDecoder.decode(java.lang.String,java.lang.String)"], "Fixed commit": "582ffb3a892646376c2f3252ea7a9be13408a073", "Url": "https://api.github.com/repos/w341000/taotaorepository", "Date": "2017-10-29T12:48:39Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (location != null) { android.content.Intent intent = new android.content.Intent(com.tzachsolomon.spendingtracker.SpendingTrackerLocationService.ACTION_FILTER); intent.putExtra(\"location\", location); sendBroadcast(intent); checkReminders(location); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/1214/buggy-version/src.com.tzachsolomon.spendingtracker.SpendingTrackerLocationService.java", "BodyUseAPI": ["android.content.Intent.putExtra(java.lang.String,android.location.Location)", "com.tzachsolomon.spendingtracker.SpendingTrackerLocationService.checkReminders(android.location.Location)"], "Fixed commit": "adbae64790b9b56e5c08ccd66f26782c2a269440", "Url": "https://api.github.com/repos/tzachs/SpendingTracker", "Date": "2013-02-18T06:23:47Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (arg.getClass().isArray()) strBuilder.append(Utils.objectsToString(arg)); else strBuilder.append(arg.toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/5800/buggy-version/InfoCrawlers.src.Utils.java", "BodyUseAPI": ["Utils.objectsToString(java.lang.Object)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.Object.toString()"], "Fixed commit": "03409d8d9b8bc25d2d3c229de03ec832f3f720b3", "Url": "https://api.github.com/repos/clembanas/EventViz-15", "Date": "2015-06-17T20:02:08Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (desireCurrency == null) { return resources.getString(R.string.euro_sign); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/4887/buggy-version/app.src.main.java.wanthavers.mad.cs.fau.de.wanthavers_android.domain.DesireLogic.java", "BodyUseAPI": [], "Fixed commit": "ca4f0838050df2f23af6204f0b502c1db028c5d7", "Url": "https://api.github.com/repos/FAU-Inf2/wanthavers-android", "Date": "2016-08-09T13:35:59Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (response == null) { android.util.Log.i(\"INFO\", \"THERE WAS AN ERROR\"); }else if (response.isEmpty()) { android.widget.TextView takenError = ((android.widget.TextView) (findViewById(R.id.registerUserTakenError))); takenError.setVisibility(View.VISIBLE); }else { progressBar.setVisibility(View.GONE); com.fangman.austin.thecollector.RegisterUserActivity.UserData data = new com.google.gson.Gson().fromJson(response, new com.google.gson.reflect.TypeToken<com.fangman.austin.thecollector.RegisterUserActivity.UserData>() {}.getType()); goToMain(data.getName(), data.getId()); android.util.Log.i(\"INFO\", response); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/4073/buggy-version/app.src.main.java.com.fangman.austin.thecollector.RegisterUserActivity.java", "BodyUseAPI": ["android.util.Log.i(java.lang.String,java.lang.String)", "com.google.gson.Gson.fromJson(java.lang.String,new com.google.gson.reflect.TypeToken<com.fangman.austin.thecollector.RegisterUserActivity.UserData>() {}.getType())", "java.lang.String.isEmpty()"], "Fixed commit": "abcad98d2df01d80db9063ddd418ff33702ad4ec", "Url": "https://api.github.com/repos/apfangman/theCollector", "Date": "2017-05-09T08:42:59Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (d1 == d2) { runclass = \"td_run_data\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/3094/buggy-version/src.vddlogger.VddSummaryReporter.java", "BodyUseAPI": [], "Fixed commit": "f6be97a99af94b6d1a3d007b3b7a4d987c0a2a84", "Url": "https://api.github.com/repos/sugarcrm/VooDooDriver", "Date": "2011-10-21T18:47:22Z"},
{"Line": "=>296", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((scanId == null) || (scanId.equals(scan.getId()))) { vulnerabilityFilterService.updateScanCounts(scan); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/1854/buggy-version/threadfix-main.src.main.java.com.denimgroup.threadfix.service.VulnerabilityServiceImpl.java", "BodyUseAPI": ["com.denimgroup.threadfix.service.VulnerabilityFilterService.updateScanCounts(com.denimgroup.threadfix.service.Scan)"], "Fixed commit": "77275db32ca1d08e24b0e3e5b761bcecc6d68da9", "Url": "https://api.github.com/repos/denimgroup/threadfix", "Date": "2015-06-09T17:58:17Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eu.openeo.backend.wcps.domain.Filter.getAxis()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (axis.contains(\"DATE\")) { stringBuilder.append(\"\\\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/483/buggy-version/src.main.java.eu.openeo.backend.wcps.WCPSQueryFactory.java", "BodyUseAPI": [], "Fixed commit": "d95c17d30ac4e25634c9d263f2dbd9cf397077fe", "Url": "https://api.github.com/repos/Open-EO/openeo-wcps-driver", "Date": "2017-12-07T22:48:19Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eu.openeo.backend.wcps.domain.Filter.getAxis()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (axis.contains(\"DATE\")) { stringBuilder.append(\"\\\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/483/buggy-version/src.main.java.eu.openeo.backend.wcps.WCPSQueryFactory.java", "BodyUseAPI": [], "Fixed commit": "d95c17d30ac4e25634c9d263f2dbd9cf397077fe", "Url": "https://api.github.com/repos/Open-EO/openeo-wcps-driver", "Date": "2017-12-07T22:48:19Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eu.openeo.backend.wcps.domain.Filter.getAxis()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (axis.contains(\"DATE\")) { stringBuilder.append(\"\\\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/483/buggy-version/src.main.java.eu.openeo.backend.wcps.WCPSQueryFactory.java", "BodyUseAPI": [], "Fixed commit": "d95c17d30ac4e25634c9d263f2dbd9cf397077fe", "Url": "https://api.github.com/repos/Open-EO/openeo-wcps-driver", "Date": "2017-12-07T22:48:19Z"},
{"Line": "=>778", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.android.settings.bluetooth.BluetoothSettings.class.getName().equals(fragmentName)) { intent.setClass(context, SubSettings.BluetoothSubSettings.class); }else { intent.setClass(context, com.android.settings.SubSettings.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/1535/buggy-version/src.com.android.settings.Utils.java", "BodyUseAPI": [], "Fixed commit": "fadf7d674a28937c82eceae0028bd0c8df48b8a2", "Url": "https://api.github.com/repos/AICP/packages_apps_Settings", "Date": "2014-12-19T14:29:33Z"},
{"Line": "=>464", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (((file.isAbsolute()) != (dir.isAbsolute())) && (optRootPath != null)) { if (file.isAbsolute()) file = optRootPath.relativize(file); else newDir = optRootPath.relativize(dir); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/7819/buggy-version/capsule-util.src.main.java.co.paralleluniverse.capsule.Jar.java", "BodyUseAPI": ["java.nio.file.Path.relativize(java.nio.file.Path)", "java.nio.file.Path.isAbsolute()", "java.nio.file.Path.relativize(java.nio.file.Path)"], "Fixed commit": "c46ce114fe7fc11538108ac94ba8fe726b04e8d6", "Url": "https://api.github.com/repos/circlespainter/capsule", "Date": "2014-10-08T10:41:14Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.dungeon.core.creatures.Hero.selectInventoryItem(java.lang.String[])"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((getWeapon()) == selectedItem) { unequipWeapon(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/2015/buggy-version/src.org.dungeon.core.creatures.Hero.java", "BodyUseAPI": [], "Fixed commit": "8199e0a4640d037b9e5f8fa8a6b6fa2d836f06ce", "Url": "https://api.github.com/repos/mafagafogigante/dungeon", "Date": "2014-09-21T01:20:22Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["flow_structure.TreeNode<T>.getParent()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (previousParent != null) previousParent.removeChild(this);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/2119/buggy-version/src.flow_structure.TreeNode.java", "BodyUseAPI": ["flow_structure.TreeNode<T>.removeChild(flow_structure.TreeNode<T>)"], "Fixed commit": "3df73b980117cb468207709a14e1917d039e3cb3", "Url": "https://api.github.com/repos/Mikkomario/UtopiaFlow", "Date": "2015-01-22T12:07:08Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.hibernate.Query.list()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((list.size()) == 0) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/5030/buggy-version/midas-webapp.src.java.com.robonobo.midas.dao.UserConfigDaoImpl.java", "BodyUseAPI": [], "Fixed commit": "41ea12c29760ae0b4679c8abfd5b54c8924ebc02", "Url": "https://api.github.com/repos/macavity23/robonobo", "Date": "2011-10-10T14:21:02Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.hibernate.Query.list()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((list.size()) > 1) log.error((((\"Error: Duplicate result for user config key = \" + key) + \", val = \") + value));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/5030/buggy-version/midas-webapp.src.java.com.robonobo.midas.dao.UserConfigDaoImpl.java", "BodyUseAPI": [], "Fixed commit": "41ea12c29760ae0b4679c8abfd5b54c8924ebc02", "Url": "https://api.github.com/repos/macavity23/robonobo", "Date": "2011-10-10T14:21:02Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(dueDateText.isEmpty())) { this.dueDateText = dueDateText; dueDate = com.deonna.todone.models.Todo.formatDueDate(dueDateText); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/4834/buggy-version/app.src.main.java.com.deonna.todone.models.Todo.java", "BodyUseAPI": ["com.deonna.todone.models.Todo.formatDueDate(java.lang.String)"], "Fixed commit": "da47f08df723371effdc347ab3006718ee6cf801", "Url": "https://api.github.com/repos/deonna/to-done", "Date": "2017-02-20T06:03:30Z"},
{"Line": "=>341", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (day != null) { layerUpdate.setAttribute(UNREDDLayerUpdate.Attributes.DAY, day); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/7425/buggy-version/src.gb-actions-unredd.script.src.main.java.it.geosolutions.geobatch.unredd.script.util.GeoStoreFacade.java", "BodyUseAPI": ["it.geosolutions.unredd.geostore.model.UNREDDLayerUpdate.setAttribute(UNREDDLayerUpdate.Attributes.DAY,java.lang.String)"], "Fixed commit": "202616cafbcad34d2c16644fb38284f182afa226", "Url": "https://api.github.com/repos/nfms4redd/nfms-geobatch", "Date": "2012-09-19T08:13:51Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["input.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((value.length()) == 0) value = mPrefs.getString(\"mUsername\", \"New User\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/2775/buggy-version/app.src.main.java.groupn.spin_counter.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "acda359c20990e8b8595a323aa640f9200e46743", "Url": "https://api.github.com/repos/ccl2of4/Spin-Counter", "Date": "2015-04-01T00:24:18Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (portID == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/1767/buggy-version/src.hamster-project-app.src.main.java.hamster.app.network.NetworkManager.java", "BodyUseAPI": [], "Fixed commit": "a5a094dda467690e288d0717932c25cc789c29da", "Url": "https://api.github.com/repos/Seally/hamster-project", "Date": "2015-11-26T12:29:04Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.io.FileUtils.getFile(mainSessionCtrl.getOrganisationController().getComponentParameterValue(componentId, \"directory\"))", "javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (sourceFile.startsWith(org.apache.commons.io.FilenameUtils.separatorsToUnix(rootPath.getPath()))) { fileStat = fileToSend = org.apache.commons.io.FileUtils.getFile(sourceFile); }else { fileStat = fileToSend = org.apache.commons.io.FileUtils.getFile(rootPath, sourceFile); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/2995/buggy-version/silvercrawler.silvercrawler-war.src.main.java.com.silverpeas.silvercrawler.servlets.SilverCrawlerFileServer.java", "BodyUseAPI": ["org.apache.commons.io.FileUtils.getFile(java.lang.String)", "org.apache.commons.io.FileUtils.getFile(java.io.File,java.lang.String)"], "Fixed commit": "f2073acbf49d5a7ad39320f5a5814a73bb6d4fcb", "Url": "https://api.github.com/repos/Silverpeas/Silverpeas-Components", "Date": "2017-02-27T16:20:49Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tmpTrainBrakePosition < 0) { maxVelocityTrain = new ch.sreng.schedule.procedure.DriveStrategyBangBang.MaxVelocity(tmpTrainBrakePosition, 0); }else { maxVelocityTrain = new ch.sreng.schedule.procedure.DriveStrategyBangBang.MaxVelocity(tmpTrainBrakePosition, java.lang.Math.min(otherTrain.getVelocity(), requester.getMaxVelocity())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/3424/buggy-version/src.ch.sreng.schedule.procedure.DriveStrategyBangBang.java", "BodyUseAPI": [], "Fixed commit": "e1b1245f9b5059617d1c438a608c3e581d16cf82", "Url": "https://api.github.com/repos/denahiro/TrainScheduler", "Date": "2012-10-06T18:45:26Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (targetValue < 1) { targetValue = 1.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/706/buggy-version/src.main.java.eu.trentorise.game.challenges.ChallengesRulesGenerator.java", "BodyUseAPI": [], "Fixed commit": "4fcabadad2e468b5fb57525e6f6548fb34c569fe", "Url": "https://api.github.com/repos/smartcommunitylab/game-engine.challenge-gen", "Date": "2016-10-03T14:44:40Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tarif.getTva().getId()) != null) { ps.setInt(3, tarif.getTva().getId()); }else { ps.setNull(3, java.sql.Types.INTEGER); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/1292/buggy-version/src.com.boucheriebenz.eboucherie.service.TarifService.java", "BodyUseAPI": ["com.boucheriebenz.eboucherie.model.Tarif.getTva()", "tarif.getTva().getId()", "java.sql.PreparedStatement.setInt(int,tarif.getTva().getId())"], "Fixed commit": "307b9cb574eb251b0d9d9b087b7aed9da792ec85", "Url": "https://api.github.com/repos/ArthurBargy/eboucherie", "Date": "2013-02-24T18:42:49Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tarif.getPreparation().getId()) != null) { ps.setInt(2, tarif.getPreparation().getId()); }else { ps.setNull(2, java.sql.Types.INTEGER); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/1292/buggy-version/src.com.boucheriebenz.eboucherie.service.TarifService.java", "BodyUseAPI": ["tarif.getPreparation().getId()", "java.sql.PreparedStatement.setInt(int,tarif.getPreparation().getId())", "com.boucheriebenz.eboucherie.model.Tarif.getPreparation()"], "Fixed commit": "307b9cb574eb251b0d9d9b087b7aed9da792ec85", "Url": "https://api.github.com/repos/ArthurBargy/eboucherie", "Date": "2013-02-24T18:42:49Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tarif.getArticle().getId()) != null) { ps.setInt(1, tarif.getArticle().getId()); }else { ps.setNull(1, java.sql.Types.INTEGER); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/1292/buggy-version/src.com.boucheriebenz.eboucherie.service.TarifService.java", "BodyUseAPI": ["tarif.getArticle().getId()", "java.sql.PreparedStatement.setInt(int,tarif.getArticle().getId())", "com.boucheriebenz.eboucherie.model.Tarif.getArticle()"], "Fixed commit": "307b9cb574eb251b0d9d9b087b7aed9da792ec85", "Url": "https://api.github.com/repos/ArthurBargy/eboucherie", "Date": "2013-02-24T18:42:49Z"},
{"Line": "=>993", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.emc.storageos.coordinator.client.service.impl.CoordinatorClientImpl.getTargetInfo(java.lang.Class,java.lang.String,PropertyInfoExt.TARGET_PROPERTY)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (siteScopePropInfo != null) { info.getProperties().putAll(siteScopePropInfo.getProperties()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/5762/buggy-version/coordinatorsvc.src.main.java.com.emc.storageos.coordinator.client.service.impl.CoordinatorClientImpl.java", "BodyUseAPI": ["com.emc.storageos.coordinator.client.model.PropertyInfoExt.getProperties()", "info.getProperties().putAll(siteScopePropInfo.getProperties())"], "Fixed commit": "348e1ef718b338151479009cddb6ff307d8b1eb2", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2015-12-30T05:48:49Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jsoup.nodes.Element.select(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((s.size()) == 0) { seeds = \"0\"; }else { seeds = s.first().ownText(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/162/buggy-version/src.goncalojoaocorreia.jbitsnooper.Search.java", "BodyUseAPI": ["s.first().ownText()", "org.jsoup.select.Elements.first()"], "Fixed commit": "3194da257c26984797c95732e8661923a1d4b933", "Url": "https://api.github.com/repos/GoncaloJoaoCorreia/jBitSnooper", "Date": "2016-02-04T18:01:43Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (now == ((months.size()) - 1)) { calendar.addFutureMonths(1); months = ((java.util.ArrayList<calendar.Month>) (calendar.getMonths())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/4643/buggy-version/src.calendarGUI.MonthViewController.java", "BodyUseAPI": [], "Fixed commit": "f9586b6b489c3a58c45c7702c6f21246017db537", "Url": "https://api.github.com/repos/johansme/Fellesprosjektet", "Date": "2015-03-05T13:31:09Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (alphaPixels == null) { for (int i = 0; i < (cpPixels.length); ++i) { cpPixels[i] &= -1; } }else if (binaryMask) { for (int i = 0; i < (cpPixels.length); ++i) { if ((alphaPixels[i]) == (-1)) cpPixels[i] &= -1; else cpPixels[i] &= 16777215; } }else { for (int i = 0; i < (cpPixels.length); ++i) { cpPixels[i] &= 16777215 | ((alphaPixels[i]) << 24); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/2486/buggy-version/render-app.src.main.java.org.janelia.alignment.ArgbRenderer.java", "BodyUseAPI": [], "Fixed commit": "c89a0c9934883a686e89a002c249aec697b5808b", "Url": "https://api.github.com/repos/saalfeldlab/render", "Date": "2017-02-16T17:46:30Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((target.outside) != null) { alphaPixels = ((byte[]) (target.outside.getPixels())); }else { alphaPixels = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/2486/buggy-version/render-app.src.main.java.org.janelia.alignment.ArgbRenderer.java", "BodyUseAPI": ["target.outside.getPixels()"], "Fixed commit": "c89a0c9934883a686e89a002c249aec697b5808b", "Url": "https://api.github.com/repos/saalfeldlab/render", "Date": "2017-02-16T17:46:30Z"},
{"Line": "=>329", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasMask) { for (final mpicbg.trakem2.transform.TransformMeshMappingWithMasks.ImageProcessorWithMasks targetChannel : targetChannels.values()) { if ((targetChannel.mask) == null) { targetChannel.mask = new ij.process.ByteProcessor(targetChannel.ip.getWidth(), targetChannel.ip.getHeight()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/2486/buggy-version/render-app.src.main.java.org.janelia.alignment.mipmap.RenderedCanvasMipmapSource.java", "BodyUseAPI": [], "Fixed commit": "c89a0c9934883a686e89a002c249aec697b5808b", "Url": "https://api.github.com/repos/saalfeldlab/render", "Date": "2017-02-16T17:46:30Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((supportedLanguages) != null) && (!(supportedLanguages.isEmpty()))) { for (java.lang.String language : supportedLanguages) { if ((language.contains(\"tr\")) || (language.contains(\"TR\"))) { return true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/8280/buggy-version/app.src.main.java.com.dnkilic.seslihaber.recognition.LanguageDetailsChecker.java", "BodyUseAPI": [], "Fixed commit": "698f180785cf768d96167de07c56dc19e56d99a1", "Url": "https://api.github.com/repos/dnkilic/android-sesli-haber", "Date": "2017-01-30T10:44:30Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ff.python.ModuleCallback.call(ff.python.jna.PyObject,ff.python.jna.PyTuple,ff.python.jna.PyObject)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (call == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/7858/buggy-version/src.main.java.ff.python.jna.BasicPyCallback.java", "BodyUseAPI": [], "Fixed commit": "24c385a01c19bccbe4dd1f87167775a5d4f6b4eb", "Url": "https://api.github.com/repos/fernandojerez/raptor", "Date": "2017-07-10T16:32:39Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((existing_IDs.contains(employee_id)) == false) { java.sql.Statement stm = null; java.lang.String sql = \"DELETE FROM employee WHERE Employee_id=\" + employee_id; java.lang.System.out.println(sql); stm = domain.DBStorage.con.createStatement(); stm.executeUpdate(sql); java.lang.System.out.println(((\"The employee \" + employee_id) + \" has been deleted from the database\")); }else { java.lang.System.out.println(\"No employee with given ID number\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/1429/buggy-version/src.main.java.domain.DBStorage.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "178cecb45125e9e77e69ecd615690c229d2d61dc", "Url": "https://api.github.com/repos/soltanimohamed/harbormaster", "Date": "2017-05-15T11:48:12Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((key) != null) keydata = map.keys.compareData(key, prefix, keydata);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/7758/buggy-version/src.org.srlutils.btree.Bmeta.java", "BodyUseAPI": [], "Fixed commit": "a91ef5952990d8c6ebcf8a059d07b5b60dc9b890", "Url": "https://api.github.com/repos/db4j/srlutils", "Date": "2017-06-07T03:29:31Z"},
{"Line": "=>509", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jbse.val.WideningConversion.getType()", "x.getArg().getType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((argType == (jbse.common.Type.BOOLEAN)) && (type == (jbse.common.Type.INT))) { final java.lang.String arg = translation.remove(0); translation.add(((\"(\" + arg) + \" == false ? 0 : 1)\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/5123/buggy-version/src.jbse.apps.StateFormatterSushiPathCondition.java", "BodyUseAPI": [], "Fixed commit": "6bfe578b8a541dbd2bad2d456bc24944a8d00c63", "Url": "https://api.github.com/repos/pietrobraione/jbse", "Date": "2015-12-14T10:37:01Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mResponse.toString().split(\"<!\")[0].replace(\"_\", \" \").trim().toString()) == \"1\") return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/6274/buggy-version/src.com.syntaxsofts.shopsoftclient.doCheckout.java", "BodyUseAPI": [], "Fixed commit": "598bcab2bab5d59cd8a532cfa18fb7f05905df3d", "Url": "https://api.github.com/repos/saketsjo/ShopSoftClient", "Date": "2014-03-12T19:16:02Z"},
{"Line": "=>2971", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fmax == 0) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/4972/buggy-version/src.com.ichi2.anki.Deck.java", "BodyUseAPI": [], "Fixed commit": "18982b920ee331767a8d623765565f5edbde9f87", "Url": "https://api.github.com/repos/nobnago/Anki-Android", "Date": "2011-09-03T08:52:11Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((map.getCharacterSprite(p.getX(), p.getY())) == null) map.setHighlightedSprite(p.getX(), p.getY(), true, com.viish.apis.iso2djavaengine.wrappers.WrappersFactory.newColor(255, 0, 0, 25));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/3387/buggy-version/src.com.viish.apis.iso2djavaengine.examples.swing.ExamplePanel.java", "BodyUseAPI": ["com.viish.apis.iso2djavaengine.Point.getX()", "com.viish.apis.iso2djavaengine.Map.setHighlightedSprite(p.getX(),p.getY(),boolean,com.viish.apis.iso2djavaengine.wrappers.WrappersFactory.newColor(255, 0, 0, 25))", "com.viish.apis.iso2djavaengine.Point.getY()"], "Fixed commit": "6abf3eaf49b7e56c543befd14938bba9950a3b76", "Url": "https://api.github.com/repos/Viish/Iso2DJavaEngine", "Date": "2012-03-29T22:04:28Z"},
{"Line": "=>2116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.compomics.util.gui.GuiUtilities.validateIntegerInput(com.compomics.util.gui.parameters.identification_parameters.SearchSettingsDialog,javax.swing.JLabel,javax.swing.JTextField,java.lang.String,java.lang.String,boolean,boolean,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!lowerBoundValid) { com.compomics.util.gui.GuiUtilities.validateIntegerInput(this, isotopesLbl, isotopeMinTxt, \"lower bound for the precursor isotope\", \"Precursor Isotope Error\", false, showMessage, valid); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/1387/buggy-version/src.main.java.com.compomics.util.gui.parameters.identification_parameters.SearchSettingsDialog.java", "BodyUseAPI": [], "Fixed commit": "54be96465dcf3ff21d561fb28f4e634d3d816978", "Url": "https://api.github.com/repos/compomics/compomics-utilities", "Date": "2016-01-22T17:07:31Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((line.getChildren()) == null) || (line.getChildren().isEmpty())) { if ((lines) != null) lines.remove(line); lineHeight = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/7596/buggy-version/library.src.main.java.com.hyena.coretext.layout.CYHorizontalLayout.java", "BodyUseAPI": ["java.util.List<com.hyena.coretext.blocks.CYLineBlock>.remove(com.hyena.coretext.blocks.CYLineBlock)"], "Fixed commit": "4f40c025da8b9cfb204b18acd54bc762ee131ed9", "Url": "https://api.github.com/repos/zhaozhu365/AndroidCoreText", "Date": "2017-02-23T07:44:45Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((Modes.contains(\"BICYCLE\")) && (Modes.contains(\"FOOT\"))) { mode = imu.recommender.helpers.RecommenderModes.recommenderModesStr[imu.recommender.helpers.RecommenderModes.BICYCLE]; }else if ((Modes.contains(\"CAR\")) && (Modes.contains(\"FOOT\"))) { mode = imu.recommender.helpers.RecommenderModes.recommenderModesStr[imu.recommender.helpers.RecommenderModes.CAR]; }else if ((Modes.contains(\"FOOT\")) && ((Modes.size()) == 1)) { mode = imu.recommender.helpers.RecommenderModes.recommenderModesStr[imu.recommender.helpers.RecommenderModes.WALK]; }else if ((Modes.contains(\"BICYCLE\")) && ((Modes.size()) == 1)) { mode = imu.recommender.helpers.RecommenderModes.recommenderModesStr[imu.recommender.helpers.RecommenderModes.BICYCLE]; }else if ((Modes.contains(\"CAR\")) && ((Modes.size()) == 1)) { mode = imu.recommender.helpers.RecommenderModes.recommenderModesStr[imu.recommender.helpers.RecommenderModes.CAR]; }else if ((Modes.contains(\"PUBLIC_TRANSPORT\")) && ((Modes.size()) == 1)) { mode = imu.recommender.helpers.RecommenderModes.recommenderModesStr[imu.recommender.helpers.RecommenderModes.PUBLIC_TRANSPORT]; }else { mode = imu.recommender.helpers.RecommenderModes.recommenderModesStr[imu.recommender.helpers.RecommenderModes.UNKNOWN]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/7441/buggy-version/src.main.java.imu.recommender.models.route.RouteModel.java", "BodyUseAPI": ["java.util.List<java.lang.String>.contains(java.lang.String)", "java.util.List<java.lang.String>.size()", "java.util.List<java.lang.String>.contains(java.lang.String)", "java.util.List<java.lang.String>.size()", "java.util.List<java.lang.String>.contains(java.lang.String)", "java.util.List<java.lang.String>.size()", "java.util.List<java.lang.String>.contains(java.lang.String)", "java.util.List<java.lang.String>.contains(java.lang.String)", "java.util.List<java.lang.String>.size()", "java.util.List<java.lang.String>.contains(java.lang.String)"], "Fixed commit": "6cec0fc0b24593f26ad262e77dcf6b1820d55902", "Url": "https://api.github.com/repos/mpthimios/optimum_recommender", "Date": "2016-11-25T13:49:11Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.spongepowered.api.Sponge.getServer().getWorld(java.util.UUID)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (optWorld.isPresent()) { nation.addSpawn(e.getKey(), optWorld.get().getLocation(spawnObj.get(\"x\").getAsDouble(), spawnObj.get(\"y\").getAsDouble(), spawnObj.get(\"z\").getAsDouble())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/4054/buggy-version/src.main.java.com.arckenver.nations.serializer.NationDeserializer.java", "BodyUseAPI": ["com.arckenver.nations.object.Nation.addSpawn(e.getKey(),optWorld.get().getLocation(spawnObj.get(\"x\").getAsDouble(), spawnObj.get(\"y\").getAsDouble(), spawnObj.get(\"z\").getAsDouble()))", "optWorld.get().getLocation(spawnObj.get(\"x\").getAsDouble(),spawnObj.get(\"y\").getAsDouble(),spawnObj.get(\"z\").getAsDouble())", "java.util.Optional<org.spongepowered.api.world.World>.get()"], "Fixed commit": "86e3c2ba9e82c84431f2e5c774c79535a889c314", "Url": "https://api.github.com/repos/Arckenver/Nations", "Date": "2016-08-10T18:13:42Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((item.getOwningCollection()) != null) { validityKey.append(item.getOwningCollection()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/3910/buggy-version/dspace-xmlui.dspace-xmlui-api.src.main.java.org.dspace.app.xmlui.utils.DSpaceValidity.java", "BodyUseAPI": ["org.dspace.content.Item.getOwningCollection()", "java.lang.StringBuffer.append(item.getOwningCollection())"], "Fixed commit": "68f6ac94ad8c278d0e03cd7307083531ad9af968", "Url": "https://api.github.com/repos/datadryad/dryad-repo", "Date": "2013-10-31T18:24:59Z"},
{"Line": "=>346", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.dspace.storage.rdbms.TableRow.getIntColumn(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (cid == (-1)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/3910/buggy-version/dspace-api.src.main.java.org.dspace.content.Item.java", "BodyUseAPI": [], "Fixed commit": "68f6ac94ad8c278d0e03cd7307083531ad9af968", "Url": "https://api.github.com/repos/datadryad/dryad-repo", "Date": "2013-10-31T18:24:59Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (front.equals(\"\")) { front = \"/\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/5930/buggy-version/src.main.java.md.mgmt.service.impl.CreateMdIndexServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "c642ec67a7ec763f2d20d44dfa4dd5e15a862bef", "Url": "https://api.github.com/repos/Yang14/md.mgmt.server.index", "Date": "2016-01-20T06:37:09Z"},
{"Line": "=>619", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((map) != null) { for (int row = 0; row < (rows); row++) { for (int col = 0; col < (columns); col++) { essentials.objects.Brick b = map[row][col]; if (b != null) newMap[row][col] = b.clone(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/2431/buggy-version/mtScrabble.src.essentials.objects.ScrabbleMap.java", "BodyUseAPI": [], "Fixed commit": "6831abc805b8f139d9783f8fd7db9c28fbe86681", "Url": "https://api.github.com/repos/hanneseilers/mtScrabble", "Date": "2013-06-20T12:10:58Z"},
{"Line": "=>373", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["essentials.objects.BrickList.getColumn()", "essentials.objects.BrickList.getRow()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!(isBrickPlaceable(row, col, b))) && (bricksOnMapCounter < (aBrickList.size()))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/2431/buggy-version/mtScrabble.src.essentials.objects.ScrabbleMap.java", "BodyUseAPI": [], "Fixed commit": "6831abc805b8f139d9783f8fd7db9c28fbe86681", "Url": "https://api.github.com/repos/hanneseilers/mtScrabble", "Date": "2013-06-20T12:10:58Z"},
{"Line": "=>402", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["essentials.objects.BrickList.getRow()", "essentials.objects.BrickList.getColumn()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!(isBrickPlaceable(row, col, b))) && (bricksOnMapCounter < (aBrickList.size()))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/2431/buggy-version/mtScrabble.src.essentials.objects.ScrabbleMap.java", "BodyUseAPI": [], "Fixed commit": "6831abc805b8f139d9783f8fd7db9c28fbe86681", "Url": "https://api.github.com/repos/hanneseilers/mtScrabble", "Date": "2013-06-20T12:10:58Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((subSection.get(key)) instanceof java.util.ArrayList) { java.util.ArrayList mirrorList = ((java.util.ArrayList) (subSection.get(key))); for (java.lang.Object o : mirrorList) { java.lang.String type = o.toString().toLowerCase(); try { if (type.equals(\"groups\")) mirrorsGroup.remove(((java.lang.String) (key)).toLowerCase()); if (type.equals(\"users\")) mirrorsUser.remove(((java.lang.String) (key)).toLowerCase()); } catch (java.lang.Exception e) { } if (type.equals(\"groups\")) { mirrorsGroup.put(((java.lang.String) (key)).toLowerCase(), getWorldData(source).getName()); GroupManager.logger.log(java.util.logging.Level.FINE, ((\"Adding groups mirror for \" + key) + \".\")); } if (type.equals(\"users\")) { mirrorsUser.put(((java.lang.String) (key)).toLowerCase(), getWorldData(source).getName()); GroupManager.logger.log(java.util.logging.Level.FINE, ((\"Adding users mirror for \" + key) + \".\")); } } mirroredWorlds.add(((java.lang.String) (key))); }else throw new java.lang.IllegalStateException((\"Unknown mirroring format for \" + ((java.lang.String) (key))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/258/buggy-version/EssentialsGroupManager.src.org.anjocaido.groupmanager.dataholder.worlds.WorldsHolder.java", "BodyUseAPI": ["GroupManager.logger.log(java.util.logging.Level,java.lang.String)", "java.util.Map.get(java.lang.Object)", "GroupManager.logger.log(java.util.logging.Level,java.lang.String)"], "Fixed commit": "1151f1a29c15527eb5867b5d4fac7203bb244772", "Url": "https://api.github.com/repos/evonuts/Essentials", "Date": "2012-11-20T14:55:06Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(trailingIndex.endsWith(\"/\"))) { trailingIndex += \"/\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/2830/buggy-version/server.src.serverPlugins.FileHandler.java", "BodyUseAPI": [], "Fixed commit": "4a474589751bccba1a34f0e61224254d59af311b", "Url": "https://api.github.com/repos/jfly/tnoodle", "Date": "2011-08-23T15:32:03Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((x) == 0) || ((y) == 0)) { generateRandom(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/2844/buggy-version/app.src.main.java.com.example.alex.parkinsonsdiseaseapp.Circle.java", "BodyUseAPI": [], "Fixed commit": "763c67005a6a515d12ff5ebc863973defbe4c241", "Url": "https://api.github.com/repos/malexcauthen/ParkinsonsDiseaseApp", "Date": "2016-04-28T15:21:18Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.searchbox.client.JestClient.execute(new com.brandonsramirez.todoApi.Delete.Builder(taskId).index(\"tasks\").type(\"task\").build())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(result.isSucceeded())) { java.lang.System.out.println((\"Failed to delete task \" + taskId)); java.lang.System.out.println((\"Error from Searchly: \" + (result.getErrorMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/3641/buggy-version/source.main.com.brandonsramirez.todoApi.SearchlySearchProvider.java", "BodyUseAPI": ["io.searchbox.client.JestResult.getErrorMessage()", "java.io.PrintStream.println((\"Error from Searchly: \" + (result.getErrorMessage())))"], "Fixed commit": "f50156253b7fd031bca718a31bbf0a151fe1ec48", "Url": "https://api.github.com/repos/brandonramirez/todo-api", "Date": "2014-03-30T02:11:30Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mMasterKeyId) != null) { dest.writeLong(mMasterKeyId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/2848/buggy-version/OpenKeychain.src.main.java.org.sufficientlysecure.keychain.keyimport.ParcelableKeyRing.java", "BodyUseAPI": [], "Fixed commit": "700defd243c20dc8ac6ea050cb0c2ba4c25cfd3b", "Url": "https://api.github.com/repos/open-keychain/open-keychain", "Date": "2016-08-22T00:35:37Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (inFile.exists()) { org.eclipse.core.resources.IMarker marker = inFile.createMarker(com.baselet.plugin.builder.UmletBuilder.PROBLEM_MARKER_TYPE); marker.setAttribute(IMarker.MESSAGE, (\"Error while exporting Umlet diagram: \" + (e.getCause().getMessage()))); marker.setAttribute(IMarker.SEVERITY, IMarker.SEVERITY_ERROR); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/5605/buggy-version/umlet-eclipse-plugin.src.main.java.com.baselet.plugin.builder.UmletBuilder.java", "BodyUseAPI": ["org.eclipse.core.resources.IFile.createMarker(java.lang.String)"], "Fixed commit": "7254ad5edd539ceef3969e9eff3ad4fb56e72a60", "Url": "https://api.github.com/repos/ruediste/umlet", "Date": "2016-01-02T19:17:27Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (plugin.permOption.equalsIgnoreCase(\"rp\")) { level = com.llfrealms.util.Utilities.getKeyByValue(plugin.presLvlsComb, perms[1]); rank = nextRank(perms[0]); if (rank.equalsIgnoreCase(plugin.ranks.get(0))) { money = plugin.presMonValue; time = 0; }else { money = plugin.getConfig().getDouble(((((\"rankReq.\" + rank) + \".\") + level) + \".money\")); time = plugin.getConfig().getDouble(((((\"rankReq.\" + rank) + \".\") + level) + \".time\")); } time *= 60000; }else { level = com.llfrealms.util.Utilities.getKeyByValue(plugin.presLvlsComb, perms[0]); rank = nextRank(perms[1]); if (rank.equalsIgnoreCase(plugin.ranks.get(0))) { money = plugin.presMonValue; time = 0; }else { money = plugin.getConfig().getDouble(((((\"rankReq.\" + rank) + \".\") + level) + \".money\")); time = plugin.getConfig().getDouble(((((\"rankReq.\" + rank) + \".\") + level) + \".time\")); } time *= 60000; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/6182/buggy-version/src.com.llfrealms.OnTimeRankUp.Commands.java", "BodyUseAPI": ["com.llfrealms.util.Utilities.getKeyByValue(plugin.presLvlsComb,java.lang.String)", "com.llfrealms.OnTimeRankUp.OnTimeRankUp.getConfig()", "com.llfrealms.OnTimeRankUp.OnTimeRankUp.getConfig()", "com.llfrealms.OnTimeRankUp.OnTimeRankUp.getConfig()", "plugin.ranks.get(int)", "plugin.getConfig().getDouble(java.lang.String)", "com.llfrealms.OnTimeRankUp.OnTimeRankUp.getConfig()", "plugin.getConfig().getDouble(java.lang.String)", "plugin.ranks.get(int)", "java.lang.String.equalsIgnoreCase(plugin.ranks.get(0))", "plugin.getConfig().getDouble(java.lang.String)", "java.lang.String.equalsIgnoreCase(plugin.ranks.get(0))", "plugin.getConfig().getDouble(java.lang.String)", "com.llfrealms.util.Utilities.getKeyByValue(plugin.presLvlsComb,java.lang.String)"], "Fixed commit": "fea1cc36ec284584042d94072257e93a52ea9cf3", "Url": "https://api.github.com/repos/LLFRealms/OnTimeRankUp", "Date": "2014-03-20T00:13:25Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (war.Objective.objectives.isEmpty()) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/9074/buggy-version/src.war.Objective.java", "BodyUseAPI": [], "Fixed commit": "1decbc66a0126b3b004bf5dbdb50f8f63c8e37c2", "Url": "https://api.github.com/repos/diegomachadosoares/War", "Date": "2016-06-18T20:47:02Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.tmatesoft.svn.core.SVNLogEntryPath.getPath()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(relativePath.startsWith(this.repositoryManager.getRelativePath()))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/1933/buggy-version/src.main.java.jp.ac.osaka_u.ist.sdl.scanalyzer.io.in.svn.SVNFileChangeEntryDetector.java", "BodyUseAPI": [], "Fixed commit": "f8415f40372a2db7513038a21ab445df4db11deb", "Url": "https://api.github.com/repos/k-hotta/SCAnalyzer", "Date": "2014-12-04T19:08:58Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Calendar.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (currentDay > 9) { date += \" \" + (currentDay.toString()); }else { date += \" 0\" + (currentDay.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/3447/buggy-version/src.main.java.com.atheohar.gym.component.BookClass.java", "BodyUseAPI": ["java.lang.Integer.toString()", "java.lang.Integer.toString()"], "Fixed commit": "b0e653160b1e37e28deebc61fb954ea4ec0eb9ee", "Url": "https://api.github.com/repos/atheohar/puregym-book-class", "Date": "2017-11-27T10:17:19Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(isBackArc(successor, state))) { parents.put(successor, state); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/3646/buggy-version/src.main.java.pipe.reachability.algorithm.CoverabilityExplorerUtilities.java", "BodyUseAPI": ["com.google.common.collect.Multimap<uk.ac.imperial.state.ClassifiedState, uk.ac.imperial.state.ClassifiedState>.put(uk.ac.imperial.state.ClassifiedState,uk.ac.imperial.state.ClassifiedState)"], "Fixed commit": "15b01a8dfc7526df28deb130b95211547e09c921", "Url": "https://api.github.com/repos/sarahtattersall/PIPEAnalysis", "Date": "2014-06-10T22:24:59Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(aktuellerJobBean.isIstNeuesTicket())) { aktuellerJobBean.setJob(findJobByID(aktuellerJobBean.getJob().getId())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/1483/buggy-version/JobTicket.src.main.java.jt.beans.StartBean.java", "BodyUseAPI": ["aktuellerJobBean.getJob().getId()", "jt.beans.StartBean.findJobByID(aktuellerJobBean.getJob().getId())", "jt.beans.AktuellerJobBean.getJob()", "jt.beans.AktuellerJobBean.setJob(jt.entities.Job)"], "Fixed commit": "7f794c30509274eba6d7af697de142e9dcf2111a", "Url": "https://api.github.com/repos/timtreibmann/JobTicket", "Date": "2014-06-30T12:44:57Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (instructorCourseList != null) { for (teammates.common.datatransfer.CourseDetailsBundle courseDetails : instructorCourseList) { teammates.ui.template.AdminAccountDetailsInstructorCourseListTableRow row = new teammates.ui.template.AdminAccountDetailsInstructorCourseListTableRow(accountInformation.googleId, courseDetails); courseListTable.add(row); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/6846/buggy-version/src.main.java.teammates.ui.controller.AdminAccountDetailsPageData.java", "BodyUseAPI": [], "Fixed commit": "5b6b00235439584aa3060585af4037c6e747a6bb", "Url": "https://api.github.com/repos/TEAMMATES/teammates", "Date": "2015-07-22T06:26:08Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (studentCourseList != null) { for (teammates.common.datatransfer.CourseAttributes courseDetails : studentCourseList) { teammates.ui.template.AdminAccountDetailsStudentCourseListTableRow row = new teammates.ui.template.AdminAccountDetailsStudentCourseListTableRow(accountInformation.googleId, courseDetails); courseListTable.add(row); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/6846/buggy-version/src.main.java.teammates.ui.controller.AdminAccountDetailsPageData.java", "BodyUseAPI": [], "Fixed commit": "5b6b00235439584aa3060585af4037c6e747a6bb", "Url": "https://api.github.com/repos/TEAMMATES/teammates", "Date": "2015-07-22T06:26:08Z"},
{"Line": "=>302", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (null != preferredBackupWindow) { java.lang.String startTime = ((java.lang.String.format(\"%02d\", preferredBackupWindow.getStartHour())) + \":\") + (java.lang.String.format(\"%02d\", preferredBackupWindow.getStartMinute())); updatedBackupConfiguration.setStartTime(startTime); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/8526/buggy-version/src.main.java.org.dasein.cloud.google.platform.RDS.java", "BodyUseAPI": ["org.dasein.cloud.TimeWindow.getStartMinute()", "java.lang.String.format(java.lang.String,preferredBackupWindow.getStartHour())", "org.dasein.cloud.TimeWindow.getStartHour()", "java.lang.String.format(java.lang.String,preferredBackupWindow.getStartMinute())"], "Fixed commit": "ba9dafdc361eff3e09dbbbee82b467b310e6789b", "Url": "https://api.github.com/repos/unwin/dasein-cloud-google", "Date": "2015-01-07T00:41:40Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.micro.maintainance.candidate.service.CandidateEntryLocalServiceUtil.getCandidateByWikiPageId(long)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (candidateEntry == null) { return runningVotes; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/1138/buggy-version/modules.micro-maintainance-portlet.src.main.java.com.liferay.micro.maintainance.task.TaskHandlerImpl.java", "BodyUseAPI": [], "Fixed commit": "0280908b08021d10d40870fffacb4616453175eb", "Url": "https://api.github.com/repos/moltam89/OWXP", "Date": "2017-03-30T08:45:55Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (safeCity) safeCities.add(city);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/1710/buggy-version/ep15.CBSPaths.java", "BodyUseAPI": [], "Fixed commit": "4d0c5e320c06ef6fdd0cf0ccec08b4f6a8fcfb6f", "Url": "https://api.github.com/repos/caco13/mac0323", "Date": "2017-07-02T23:07:34Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.xyzreader.ui.ArticleBody.getArguments()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (args != null) articleBody.setText(android.text.Html.fromHtml(args.getString(com.example.xyzreader.ui.ArticleBody.TEXT)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/5455/buggy-version/XYZReader.src.main.java.com.example.xyzreader.ui.ArticleBody.java", "BodyUseAPI": ["android.text.Html.fromHtml(args.getString(com.example.xyzreader.ui.ArticleBody.TEXT))", "android.widget.TextView.setText(android.text.Html.fromHtml(args.getString(com.example.xyzreader.ui.ArticleBody.TEXT)))", "android.os.Bundle.getString(java.lang.String)"], "Fixed commit": "f7780bef91a63f7d98323ed021289c1a96daf0f5", "Url": "https://api.github.com/repos/seliverstov/XYZreader", "Date": "2016-01-21T14:25:41Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((bloom.getBloomIntensity()) < 20) bloom.setBloomIntesity(((bloom.getBloomIntensity()) + 0.1F));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/7739/buggy-version/core.src.net.pixelstatic.bossdash.BossDash.java", "BodyUseAPI": ["com.bitfire.postprocessing.effects.Bloom.setBloomIntesity(((bloom.getBloomIntensity()) + 0.1F))", "com.bitfire.postprocessing.effects.Bloom.getBloomIntensity()"], "Fixed commit": "9e178448054343560b77721229b148bdd0eb726b", "Url": "https://api.github.com/repos/Anuken/Plasmo", "Date": "2016-07-25T03:22:45Z"},
{"Line": "=>349", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((decoder.getInputProperties().size()) > sourceId) inputProperties = new edu.stanford.nlp.mt.util.InputProperties(decoder.getInputProperties().get(sourceId)); else inputProperties = new edu.stanford.nlp.mt.util.InputProperties();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/4223/buggy-version/src.edu.stanford.nlp.mt.tune.OnlineTuner.java", "BodyUseAPI": ["decoder.getInputProperties().get(int)", "edu.stanford.nlp.mt.Phrasal.getInputProperties()"], "Fixed commit": "25076f059eeee554c8a1db44bdabdd1fd3ce0569", "Url": "https://api.github.com/repos/stanfordnlp/phrasal", "Date": "2015-04-14T06:58:47Z"},
{"Line": "=>250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (response.headers().contains(TajoPullServerService.CHUNK_LENGTH_HEADER_NAME)) { java.lang.String stringOffset = response.headers().get(TajoPullServerService.CHUNK_LENGTH_HEADER_NAME); for (java.lang.String eachSplit : stringOffset.split(\",\")) { chunkLengths.add(java.lang.Long.parseLong(eachSplit)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/8900/buggy-version/tajo-core.src.main.java.org.apache.tajo.worker.Fetcher.java", "BodyUseAPI": ["org.apache.tajo.worker.HttpResponse.headers()", "response.headers().get(TajoPullServerService.CHUNK_LENGTH_HEADER_NAME)"], "Fixed commit": "c1cbfef28e86c226e85de41aabbf0708969d61eb", "Url": "https://api.github.com/repos/jihoonson/tajo", "Date": "2015-12-16T09:06:59Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((diff.operation) == (diff_match_patch.Operation.EQUAL)) { common += diff.text.length(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/658/buggy-version/src.main.java.uk.ac.susx.tag.dialoguer.dialogue.analysing.analysers.DiffAnalyser.java", "BodyUseAPI": ["diff.text.length()"], "Fixed commit": "c8804db6fe76cb4ad53334081e7f340053e4fb32", "Url": "https://api.github.com/repos/daoudclarke/tag-dialogue-framework", "Date": "2015-11-02T21:48:42Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.wynprice.secretroomsmod.SecretConfig.optifineConnectedTextures) && (!isHelmet)) for (net.minecraft.util.EnumFacing face : net.minecraft.util.EnumFacing.values()) if (renderState.isOpaqueCube()) if (((!((world.getBlockState(tileEntity.getPos().offset(face)).getBlock()) instanceof com.wynprice.secretroomsmod.base.interfaces.ISecretBlock)) && (world.getBlockState(tileEntity.getPos().offset(face)).shouldSideBeRendered(world, tileEntity.getPos().offset(face), face.getOpposite()))) && ((net.minecraft.client.Minecraft.getMinecraft().getBlockRendererDispatcher().getModelForState(world.getBlockState(tileEntity.getPos().offset(face)).getActualState(world, tileEntity.getPos().offset(face)))) != (net.minecraft.client.Minecraft.getMinecraft().getBlockRendererDispatcher().getModelForState(Blocks.AIR.getDefaultState())))) net.minecraft.client.Minecraft.getMinecraft().getBlockRendererDispatcher().getBlockModelRenderer().renderModel(world, new com.wynprice.secretroomsmod.render.fakemodels.OneSidedRender(world.getBlockState(tileEntity.getPos().offset(face)).getActualState(world, tileEntity.getPos().offset(face)), face.getOpposite()), renderState.getBlock().getExtendedState(renderState, world, tileEntity.getPos().offset(face)), tileEntity.getPos().offset(face), net.minecraft.client.renderer.Tessellator.getInstance().getBuffer(), false); else if ((((((world.getBlockState(tileEntity.getPos().offset(face)).getBlock()) instanceof com.wynprice.secretroomsmod.base.interfaces.ISecretBlock) && ((com.wynprice.secretroomsmod.base.interfaces.ISecretTileEntity.getMirrorState(world, tileEntity.getPos().offset(face))) != null)) && (com.wynprice.secretroomsmod.base.interfaces.ISecretTileEntity.getMirrorState(world, tileEntity.getPos().offset(face)).shouldSideBeRendered(world, tileEntity.getPos().offset(face), face.getOpposite()))) && ((net.minecraft.client.Minecraft.getMinecraft().getBlockRendererDispatcher().getModelForState(com.wynprice.secretroomsmod.base.interfaces.ISecretTileEntity.getMirrorState(world, tileEntity.getPos().offset(face)).getActualState(world, tileEntity.getPos().offset(face)))) != (net.minecraft.client.Minecraft.getMinecraft().getBlockRendererDispatcher().getModelForState(Blocks.AIR.getDefaultState())))) && ((((com.wynprice.secretroomsmod.base.interfaces.ISecretBlock) (world.getBlockState(tileEntity.getPos().offset(face)).getBlock())).phaseModel(new com.wynprice.secretroomsmod.render.fakemodels.FakeBlockModel(Blocks.STONE.getDefaultState())).getClass()) == (com.wynprice.secretroomsmod.render.fakemodels.FakeBlockModel.class))) net.minecraft.client.Minecraft.getMinecraft().getBlockRendererDispatcher().getBlockModelRenderer().renderModel(world, new com.wynprice.secretroomsmod.render.fakemodels.OneSidedRender(((com.wynprice.secretroomsmod.base.interfaces.ISecretBlock) (world.getBlockState(tileEntity.getPos().offset(face)).getBlock())).phaseModel(new com.wynprice.secretroomsmod.render.fakemodels.FakeBlockModel(com.wynprice.secretroomsmod.base.interfaces.ISecretTileEntity.getMirrorState(world, tileEntity.getPos().offset(face)).getActualState(world, tileEntity.getPos().offset(face)))), face.getOpposite()), com.wynprice.secretroomsmod.base.interfaces.ISecretTileEntity.getMirrorState(world, com.wynprice.secretroomsmod.base.BaseTERender.currentPos).getBlock().getExtendedState(com.wynprice.secretroomsmod.base.interfaces.ISecretTileEntity.getMirrorState(world, com.wynprice.secretroomsmod.base.BaseTERender.currentPos), world, tileEntity.getPos().offset(face)), tileEntity.getPos().offset(face), net.minecraft.client.renderer.Tessellator.getInstance().getBuffer(), false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/6818/buggy-version/src.main.java.com.wynprice.secretroomsmod.base.BaseTERender.java", "BodyUseAPI": [], "Fixed commit": "d1e62695b0b1fbcd692edeac03ead07caee9299c", "Url": "https://api.github.com/repos/AbrarSyed/SecretRoomsMod-forge", "Date": "2017-12-13T23:04:59Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(com.impetus.kundera.proxy.ProxyHelper.isProxyOrCollection(o))) { if (com.impetus.kundera.property.PropertyAccessorHelper.isCollection(o.getClass())) { java.util.Collection c = ((java.util.Collection) (o)); if (c.isEmpty()) { return true; } }else if (java.util.Map.class.isAssignableFrom(o.getClass())) { java.util.Map m = ((java.util.Map) (o)); if (m.isEmpty()) { return true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/3906/buggy-version/kundera-core.src.main.java.com.impetus.kundera.utils.KunderaCoreUtils.java", "BodyUseAPI": ["java.lang.Class.isAssignableFrom(java.lang.Class<? extends java.lang.Object>)", "java.lang.Object.getClass()", "com.impetus.kundera.property.PropertyAccessorHelper.isCollection(java.lang.Class<? extends java.lang.Object>)", "java.lang.Object.getClass()"], "Fixed commit": "670a5c176d6dc16c9ce988d4b3ae522c4edfdc4b", "Url": "https://api.github.com/repos/sonatype/Kundera", "Date": "2013-09-13T14:31:03Z"},
{"Line": "=>3991", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.xensource.xenapi.VLAN.create(com.xensource.xenapi.Connection,com.xensource.xenapi.PIF,long,com.xensource.xenapi.Network)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (vlan != null) { com.xensource.xenapi.VLAN.Record vlanr = vlan.getRecord(conn); if (vlanr != null) { if (com.cloud.hypervisor.xenserver.resource.CitrixResourceBase.s_logger.isDebugEnabled()) { com.cloud.hypervisor.xenserver.resource.CitrixResourceBase.s_logger.debug((((\"VLAN is created for \" + tag) + \". The uuid is \") + (vlanr.uuid))); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/8819/buggy-version/plugins.hypervisors.xenserver.src.com.cloud.hypervisor.xenserver.resource.CitrixResourceBase.java", "BodyUseAPI": ["com.xensource.xenapi.VLAN.getRecord(com.xensource.xenapi.Connection)"], "Fixed commit": "f9e11540c7e70f3d6f1a8cc660b4067c2e1ec876", "Url": "https://api.github.com/repos/greenqloud/cloudstack", "Date": "2014-08-11T10:32:19Z"},
{"Line": "=>1603", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.cloudstack.engine.orchestration.service.NetworkOrchestrationService.implementNetwork(guestNetwork.getId(),com.cloud.deploy.DeployDestination,com.cloud.vm.ReservationContext)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (implementedNetwork != null) { guestNetwork = implementedNetwork.second(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/8819/buggy-version/server.src.com.cloud.network.IpAddressManagerImpl.java", "BodyUseAPI": ["com.cloud.utils.Pair<? extends com.cloud.network.guru.NetworkGuru, ? extends com.cloud.network.Network>.second()"], "Fixed commit": "f9e11540c7e70f3d6f1a8cc660b4067c2e1ec876", "Url": "https://api.github.com/repos/greenqloud/cloudstack", "Date": "2014-08-11T10:32:19Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.cloud.resource.ResourceManager.listAllNotInMaintenanceHostsInOneZone(Host.Type.Routing,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (hosts != null) { for (com.cloud.host.HostVO host : hosts) { _capacityMgr.updateCapacityForHost(host); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/8819/buggy-version/server.src.com.cloud.alert.AlertManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "f9e11540c7e70f3d6f1a8cc660b4067c2e1ec876", "Url": "https://api.github.com/repos/greenqloud/cloudstack", "Date": "2014-08-11T10:32:19Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["infodoc.core.container.CaseContainer.getHqlConditionToFilterByUserGroup()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(condition.isEmpty())) { condition = \" and c.\" + condition; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/577/buggy-version/src.infodoc.core.container.CaseContainer.java", "BodyUseAPI": [], "Fixed commit": "487f0f1c17f4747d0047f343e17cbc4ff4aadcb4", "Url": "https://api.github.com/repos/alejandro-du/infodoc-core", "Date": "2013-04-11T18:14:07Z"},
{"Line": "=>1356", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((scaledMonochrome) != null) && (!(scaledMonochrome.isRecycled()))) { scaledMonochrome.recycle(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/8697/buggy-version/ImageSegmentation.src.com.tum.imagesegmentation.MainActivity.java", "BodyUseAPI": ["android.graphics.Bitmap.recycle()"], "Fixed commit": "c16ae4ab4ce93439635a17e8ed2c9ef0be61fcd1", "Url": "https://api.github.com/repos/gameover27/ImageSegmentation", "Date": "2014-11-20T16:11:32Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (vb == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/4476/buggy-version/src.com.kh.beatbot.view.SurfaceViewBase.java", "BodyUseAPI": [], "Fixed commit": "48bc58d99b2523cd52aa86f9c0089fc885d7fbf4", "Url": "https://api.github.com/repos/khiner/BeatBot", "Date": "2012-08-19T23:23:17Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (vb == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/4476/buggy-version/src.com.kh.beatbot.view.SurfaceViewBase.java", "BodyUseAPI": [], "Fixed commit": "48bc58d99b2523cd52aa86f9c0089fc885d7fbf4", "Url": "https://api.github.com/repos/khiner/BeatBot", "Date": "2012-08-19T23:23:17Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((authToken) == null) { return org.fruct.oss.socialnavigator.utils.PublishingTask.Result.ERROR; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/8274/buggy-version/app.src.main.java.org.fruct.oss.socialnavigator.utils.PublishingTask.java", "BodyUseAPI": [], "Fixed commit": "b8b134daa6458b7d8399a1db5276c6c247c971e9", "Url": "https://api.github.com/repos/oss-fruct-org/social-navigator", "Date": "2015-03-17T14:30:11Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (arg.trim().equals(\"\")) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/1369/buggy-version/fr.inria.soctrace.tools.importer.paje.src.fr.inria.soctrace.tools.importer.paje.PajeImporter.java", "BodyUseAPI": [], "Fixed commit": "52b40aa381dcdd87e2a1f073d31280bdf0fe6191", "Url": "https://api.github.com/repos/soctrace-inria/framesoc.importers", "Date": "2015-01-30T16:55:37Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.getMessageParser().isInReplyTo()) { final org.jsoup.select.Elements select = doc.select(\".gmail_quote\"); if ((select.size()) > 0) { select.remove(); return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/3334/buggy-version/src.com.brif.nix.parser.TextMessageParser.java", "BodyUseAPI": [], "Fixed commit": "f819398d2c93850099d7c65724c4c13ae2bdd8c3", "Url": "https://api.github.com/repos/ganoro/com.brif.nix", "Date": "2014-08-29T18:52:43Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((combo.getSelectionIndex()) == (-1)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/1221/buggy-version/src.main.java.cceclipseplugin.ui.dialogs.AddProjectDialog.java", "BodyUseAPI": [], "Fixed commit": "fd8197e322dfcfbfbd65810f9963040bc45d45ee", "Url": "https://api.github.com/repos/CodeCollaborate/EclipsePlugin", "Date": "2016-10-29T00:31:53Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.oracle.truffle.api.CompilerDirectives.inInterpreter()) { if (value == null) { throw com.oracle.truffle.r.runtime.RInternalError.shouldNotReachHere(\"Java 'null' not allowed in arguments\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/4278/buggy-version/com.oracle.truffle.r.nodes.src.com.oracle.truffle.r.nodes.function.call.PrepareArguments.java", "BodyUseAPI": [], "Fixed commit": "43c7f6587cbbe00791f660931e61d03926fbd9b2", "Url": "https://api.github.com/repos/oracle/fastr", "Date": "2017-02-10T09:50:11Z"},
{"Line": "=>393", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (resultCode == 0) { projectOrderCheckpointList.removeAllViews(); for (int i = 0; i < (tView.size()); i++) { ((com.auguraclient.view.OrderView.ItemView) (tView.get(i))).recycle(); } initAdapterView(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/7029/buggy-version/src.com.auguraclient.view.OrderView.java", "BodyUseAPI": [], "Fixed commit": "8960061d864b7fbcf9d8c5dc120004500adf195d", "Url": "https://api.github.com/repos/jiangzhen1984/CRMAndroidClientTA", "Date": "2013-05-03T09:17:10Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((recall[i]) == 0.0) { precision[i] = 1.0; }else { precision[i] /= recall[i]; recall[i] /= measurements; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/6924/buggy-version/src.main.org.deidentifier.arx.aggregates.StatisticsClassification.java", "BodyUseAPI": [], "Fixed commit": "bfef046b546e480c207ff235387c81c3a541bf19", "Url": "https://api.github.com/repos/arx-deidentifier/arx", "Date": "2016-04-25T09:32:58Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (f.getName().startsWith(\".\")) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/589/buggy-version/src.cmu.ds.mr.mapred.ReduceTask.java", "BodyUseAPI": [], "Fixed commit": "985ce6bfe00cfd004eb15a30dff9a429603d56bb", "Url": "https://api.github.com/repos/zyli5313/MapReduce", "Date": "2013-04-09T21:48:08Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.openhft.chronicle.bytes.BytesStore.length()", "net.openhft.chronicle.bytes.BytesStore.length()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (toLength < fromLength) { bytes.write(0, bufferImpl.bytes, 0, toLength); }else { bytes.write(0, bufferImpl.bytes, 0, fromLength); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/898/buggy-version/src.main.java.com.epam.cme.mdp3.sbe.message.SbeBufferImpl.java", "BodyUseAPI": ["net.openhft.chronicle.bytes.BytesStore.write(int,net.openhft.chronicle.bytes.BytesStore,int,long)", "net.openhft.chronicle.bytes.BytesStore.write(int,net.openhft.chronicle.bytes.BytesStore,int,long)"], "Fixed commit": "40be640a5b8e668c86dbc64af0c8e35149291aad", "Url": "https://api.github.com/repos/kolybelkin/java-cme-mdp3-handler", "Date": "2017-05-03T08:31:42Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((imageProcessing) != null) imageProcessing.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/3967/buggy-version/src.main.java.epigraph.MainWindow.java", "BodyUseAPI": [], "Fixed commit": "a5d889837cea7f85fbf1bfa6a11b68f53b86ffb0", "Url": "https://api.github.com/repos/ComplexOrganizationOfLivingMatter/Epigraph", "Date": "2017-02-20T10:36:22Z"},
{"Line": "=>326", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((url.charAt(((url.length()) - 1))) == '/') { url = url.substring(0, ((url.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/8077/buggy-version/androidcommon_lib.src.main.java.org.opendatakit.views.ODKWebView.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "89ab9b84c8023b8b68f30ead5fd35bfeceb849d7", "Url": "https://api.github.com/repos/opendatakit/androidcommon", "Date": "2017-07-09T01:21:35Z"},
{"Line": "=>329", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((intendedPageToLoad.charAt(((intendedPageToLoad.length()) - 1))) == '/') { intendedPageToLoad = intendedPageToLoad.substring(0, ((intendedPageToLoad.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/8077/buggy-version/androidcommon_lib.src.main.java.org.opendatakit.views.ODKWebView.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "89ab9b84c8023b8b68f30ead5fd35bfeceb849d7", "Url": "https://api.github.com/repos/opendatakit/androidcommon", "Date": "2017-07-09T01:21:35Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) > (Build.VERSION_CODES.KITKAT)) { android.view.Window w = getWindow(); w.setFlags(WindowManager.LayoutParams.FLAG_LAYOUT_NO_LIMITS, WindowManager.LayoutParams.FLAG_LAYOUT_NO_LIMITS); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/9018/buggy-version/app.src.main.java.g4eis.ontern.g4project.About_us.java", "BodyUseAPI": [], "Fixed commit": "dc593963004e2daf22c13f080495c3351c5f91de", "Url": "https://api.github.com/repos/piyushrj100/G4Project", "Date": "2017-08-14T12:48:22Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Cluster.getDataPoints()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(dps.empty())) { float[] meanPos = meanGridPosition(dps); c.setPosition(meanPos); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/2869/buggy-version/src.GroupScheduler.java", "BodyUseAPI": ["GroupScheduler.meanGridPosition(java.util.Stack<DataPoint>)"], "Fixed commit": "683cd6db5513b31430cfe99a578984ebb31ba330", "Url": "https://api.github.com/repos/zlizah/swim_grouping", "Date": "2015-08-19T18:29:19Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((order.constant) == 1) { final double meanParScale = (10 * (differencedSeries.stdDeviation())) / (java.lang.Math.sqrt(differencedSeries.n())); return builder.set((n - 1), (n - 1), meanParScale).build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/5453/buggy-version/src.main.java.timeseries.models.Arima.java", "BodyUseAPI": [], "Fixed commit": "c04c49c3e0207d268cae670255e7b99470d0a027", "Url": "https://api.github.com/repos/signaflo/java-timeseries", "Date": "2016-10-01T06:31:50Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (newPage == (getTopPage())) { newPage.getView().bringToFront(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/7871/buggy-version/PaginizeLib.src.net.neevek.android.lib.paginize.PageManager.java", "BodyUseAPI": ["newPage.getView().bringToFront()", "net.neevek.android.lib.paginize.Page.getView()"], "Fixed commit": "da24d28c1a385888423042422f6ff562bfbf0cff", "Url": "https://api.github.com/repos/neevek/Paginize", "Date": "2015-05-14T06:36:22Z"},
{"Line": "=>441", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (prevPage == (getTopPage())) { prevPage.getView().bringToFront(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/7871/buggy-version/PaginizeLib.src.net.neevek.android.lib.paginize.PageManager.java", "BodyUseAPI": ["prevPage.getView().bringToFront()", "net.neevek.android.lib.paginize.Page.getView()"], "Fixed commit": "da24d28c1a385888423042422f6ff562bfbf0cff", "Url": "https://api.github.com/repos/neevek/Paginize", "Date": "2015-05-14T06:36:22Z"},
{"Line": "=>664", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (testResultNameMap != null) { resultTestSuiteNames = new java.util.ArrayList<java.lang.String>(testResultNameMap.keySet()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/8234/buggy-version/phresco-framework-web.src.main.java.com.photon.phresco.framework.actions.applications.Quality.java", "BodyUseAPI": ["java.util.Map<java.lang.String, org.w3c.dom.NodeList>.keySet()"], "Fixed commit": "729323c77dd02d4f18c73393b4a932db5d16c693", "Url": "https://api.github.com/repos/phresco/framework", "Date": "2012-11-19T16:23:59Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (path.exists()) { org.olat.core.util.WebappHelper.fullPathToSrc = fullPathToSrc; }else { org.olat.core.util.WebappHelper.log.debug(\"Invalid fullPathToSrc configuration, reset to empty path\"); org.olat.core.util.WebappHelper.fullPathToSrc = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/3899/buggy-version/src.main.java.org.olat.core.util.WebappHelper.java", "BodyUseAPI": [], "Fixed commit": "6a5ec87da747fb6332407ea50e5a81d17df8c407", "Url": "https://api.github.com/repos/klemens/openolat-pa", "Date": "2012-06-14T16:31:07Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (path.exists()) { org.olat.core.util.WebappHelper.fullPathToWebappSrc = fullPathToWebappSrc; }else { org.olat.core.util.WebappHelper.log.debug(\"Invalid fullPathToWebappSrc configuration, reset to empty path\"); org.olat.core.util.WebappHelper.fullPathToWebappSrc = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V84/3899/buggy-version/src.main.java.org.olat.core.util.WebappHelper.java", "BodyUseAPI": [], "Fixed commit": "6a5ec87da747fb6332407ea50e5a81d17df8c407", "Url": "https://api.github.com/repos/klemens/openolat-pa", "Date": "2012-06-14T16:31:07Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.james.status.utils.PreferenceUtils.getBooleanPreference(com.james.status.services.StatusService,PreferenceUtils.PreferenceIdentifier.SHOW_DATA)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((data == null) || data) icons.add(new com.james.status.data.icon.DataIconData(this));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/8112/buggy-version/app.src.main.java.com.james.status.services.StatusService.java", "BodyUseAPI": [], "Fixed commit": "573b0332ceecb8490a625e945ed17381fe47c1ef", "Url": "https://api.github.com/repos/TheAndroidMaster/Status", "Date": "2016-08-17T20:21:48Z"},
{"Line": "=>329", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (subtypeName == null) ejt.doInsert(\"INSERT INTO eventHandlersMapping (eventHandlerId, eventTypeName, eventTypeRef1, eventTypeRef2) values (?,?,?,?)\", new java.lang.Object[]{ eventHandlerId, typeName, typeRef1, typeRef2 }, new int[]{ java.sql.Types.INTEGER, java.sql.Types.VARCHAR, java.sql.Types.INTEGER, java.sql.Types.INTEGER }); else ejt.doInsert(\"INSERT INTO eventHandlersMapping (eventHandlerId, eventTypeName, eventSubtypeName, eventTypeRef1, eventTypeRef2) values (?,?,?,?,?)\", new java.lang.Object[]{ eventHandlerId, typeName, subtypeName, typeRef1, typeRef2 }, new int[]{ java.sql.Types.INTEGER, java.sql.Types.VARCHAR, java.sql.Types.VARCHAR, java.sql.Types.INTEGER, java.sql.Types.INTEGER });", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/5424/buggy-version/Core.src.com.serotonin.m2m2.db.dao.EventHandlerDao.java", "BodyUseAPI": ["com.serotonin.m2m2.db.dao.EventHandlerDao.doInsert(java.lang.String,java.lang.Object[],int[])"], "Fixed commit": "b7aa85a4f98ad007ba9ad469b05b349b55201aa5", "Url": "https://api.github.com/repos/infiniteautomation/ma-core-public", "Date": "2017-10-26T17:01:21Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mOnBackPressed)) { android.content.Intent intent = new android.content.Intent(this, com.acbelter.android1.homework1.SecondActivity.class); startActivity(intent); finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/3109/buggy-version/app.src.main.java.com.acbelter.android1.homework1.FirstActivity.java", "BodyUseAPI": [], "Fixed commit": "a731e46cc28feefc5b4461754e508dfe8e59454d", "Url": "https://api.github.com/repos/acbelter/track_android1_homework1", "Date": "2016-03-17T16:55:34Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((latLongList.size()) > 3) { onlyThree(); }else { tempLatLongList.clear(); for (int x = (latLongList.size()) - 1; x > (-1); x--) { tempLatLongList.add(latLongList.get(x)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/3211/buggy-version/app.src.main.java.studios.redleef.latlonglog.MainActivity.java", "BodyUseAPI": ["java.util.ArrayList<studios.redleef.latlonglog.LatLongObject>.size()", "java.util.ArrayList<studios.redleef.latlonglog.LatLongObject>.add(latLongList.get(x))", "java.util.ArrayList<studios.redleef.latlonglog.LatLongObject>.get(int)"], "Fixed commit": "2d8b4e64acb79354a4f9b6515662b705a54ad039", "Url": "https://api.github.com/repos/leef3/LatLongLog", "Date": "2015-07-31T06:25:33Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((lastLatitude) == 0) && ((lastLongitude) == 0)) { android.widget.Toast.makeText(context, \"Requires GPS Signal\", Toast.LENGTH_SHORT).show(); }else if (((java.lang.System.currentTimeMillis()) - (lastUpdate)) > 360000) { android.widget.Toast.makeText(context, \"Coordinates are outdated\", Toast.LENGTH_SHORT).show(); }else { latLongList.add(new studios.redleef.latlonglog.LatLongObject(lastLatitude, lastLongitude)); mAdapter.notifyDataSetChanged(); onlyThree(); saveData(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/3211/buggy-version/app.src.main.java.studios.redleef.latlonglog.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "2d8b4e64acb79354a4f9b6515662b705a54ad039", "Url": "https://api.github.com/repos/leef3/LatLongLog", "Date": "2015-07-31T06:25:33Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasDigits) { foundNum = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/120/buggy-version/workflow_plugins.solr-plugin.src.main.java.eu.europeana.uim.plugin.solr.utils.EuropeanaDateUtils.java", "BodyUseAPI": [], "Fixed commit": "7e26d146db70787bb2b0fb4e238ff830bbe9b022", "Url": "https://api.github.com/repos/europeana/uim-europeana", "Date": "2013-10-01T14:24:01Z"},
{"Line": "=>355", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (networkInputs.contains(vertexInputs.get(s).get(0))) { org.deeplearning4j.nn.conf.inputs.InputType.InputTypeConvolutional conv = ((org.deeplearning4j.nn.conf.inputs.InputType.InputTypeConvolutional) (layerInput)); lv.setPreProcessor(new org.deeplearning4j.nn.conf.FeedForwardToCnnPreProcessor(conv.getHeight(), conv.getWidth(), conv.getDepth())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/8889/buggy-version/deeplearning4j-core.src.main.java.org.deeplearning4j.nn.conf.ComputationGraphConfiguration.java", "BodyUseAPI": [], "Fixed commit": "47678f4949d64884dffd7724b787b38a532c8e56", "Url": "https://api.github.com/repos/deeplearning4j/deeplearning4j", "Date": "2016-01-27T10:06:30Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.gephi.visualization.opengl.AbstractEngine.getOctree()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(octree.isEmpty())) { octree.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/5911/buggy-version/modules.VisualizationImpl.src.main.java.org.gephi.visualization.bridge.DataBridge.java", "BodyUseAPI": ["org.gephi.visualization.octree.Octree.clear()"], "Fixed commit": "03e179793cdbbdcafeff64196fb5ba56ff80c436", "Url": "https://api.github.com/repos/gephi/gephi", "Date": "2015-12-06T11:18:51Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (observer.isNew()) { observer.hasGraphChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/5911/buggy-version/modules.VisualizationImpl.src.main.java.org.gephi.visualization.bridge.DataBridge.java", "BodyUseAPI": ["org.gephi.graph.api.GraphObserver.hasGraphChanged()"], "Fixed commit": "03e179793cdbbdcafeff64196fb5ba56ff80c436", "Url": "https://api.github.com/repos/gephi/gephi", "Date": "2015-12-06T11:18:51Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.ape.material.weather.util.CityLocationManager.isGPSProviderEnabled(getContext())) { com.ape.material.weather.fragment.WeatherFragmentPermissionsDispatcher.getLocationWithCheck(this); }else { showErrorTip(\"\u8bf7\u6253\u5f00GPS\u5b9a\u4f4d\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/5346/buggy-version/app.src.main.java.com.ape.material.weather.fragment.WeatherFragment.java", "BodyUseAPI": [], "Fixed commit": "7824e08ba06367622e27bff8bb88861fa0c18b24", "Url": "https://api.github.com/repos/way1989/MaterialWeather", "Date": "2016-11-23T07:18:33Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((offer.getPrice()) == null) || ((offer.getName()) == null)) return new org.springframework.http.ResponseEntity<marketplace.controllers.MarketPlaceError>(new marketplace.controllers.MarketPlaceError(MarketPlaceErrorCodes.INVALID_PARAMETERS), org.springframework.http.HttpStatus.BAD_REQUEST);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/7436/buggy-version/src.main.java.marketplace.controllers.MarketPlaceController.java", "BodyUseAPI": [], "Fixed commit": "5c7b16975a186d2afca91b76330ee1c37b0c03d1", "Url": "https://api.github.com/repos/chrisparker126/merchant-market-place", "Date": "2017-03-12T23:34:53Z"},
{"Line": "=>340", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isDetached()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/2238/buggy-version/app.src.main.java.org.itishka.pointim.SinglePostFragment.java", "BodyUseAPI": [], "Fixed commit": "df7985c52e851dfaa7b0edbf12345847e5c80d31", "Url": "https://api.github.com/repos/Tishka17/Point.im-Android", "Date": "2015-01-11T21:37:50Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isDetached())) android.widget.Toast.makeText(getActivity(), error.toString(), Toast.LENGTH_SHORT).show();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/2238/buggy-version/app.src.main.java.org.itishka.pointim.SinglePostFragment.java", "BodyUseAPI": [], "Fixed commit": "df7985c52e851dfaa7b0edbf12345847e5c80d31", "Url": "https://api.github.com/repos/Tishka17/Point.im-Android", "Date": "2015-01-11T21:37:50Z"},
{"Line": "=>354", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isDetached())) android.widget.Toast.makeText(getActivity(), error.toString(), Toast.LENGTH_SHORT).show();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/2238/buggy-version/app.src.main.java.org.itishka.pointim.SinglePostFragment.java", "BodyUseAPI": [], "Fixed commit": "df7985c52e851dfaa7b0edbf12345847e5c80d31", "Url": "https://api.github.com/repos/Tishka17/Point.im-Android", "Date": "2015-01-11T21:37:50Z"},
{"Line": "=>688", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (orientation.SunFlower.servoVerbose) { java.lang.System.out.println(\"----------------------------------------------\"); java.lang.String posMess = java.lang.String.format(\"Position %s / %s, Heading servo: #%s, Tilt servo: #%s, Tilt: limit %d, offset %d\", user.util.GeomUtil.decToSex(getLatitude(), GeomUtil.SWING, GeomUtil.NS), user.util.GeomUtil.decToSex(getLongitude(), GeomUtil.SWING, GeomUtil.EW), java.util.Arrays.stream(orientation.SunFlower.headingServoID).boxed().map(java.lang.String::valueOf).collect(java.util.stream.Collectors.joining(\",\")), java.util.Arrays.stream(orientation.SunFlower.tiltServoID).boxed().map(java.lang.String::valueOf).collect(java.util.stream.Collectors.joining(\",\")), orientation.SunFlower.tiltLimit, orientation.SunFlower.tiltOffset); java.lang.System.out.println(posMess); java.lang.System.out.println(\"----------------------------------------------\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/474/buggy-version/SunFlower.src.orientation.SunFlower.java", "BodyUseAPI": [], "Fixed commit": "31e40ea8ddc9f39a87d7672d3a6723197f153303", "Url": "https://api.github.com/repos/OlivierLD/raspberry-pi4j-samples", "Date": "2017-07-08T18:32:49Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (updateTask != null) { updateTask.addError(net.nikr.eve.jeveasset.i18n.DialoguesUpdate.get().citadel(), ex.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/5381/buggy-version/src.main.java.net.nikr.eve.jeveasset.io.online.CitadelGetter.java", "BodyUseAPI": ["net.nikr.eve.jeveasset.gui.dialogs.update.UpdateTask.addError(net.nikr.eve.jeveasset.i18n.DialoguesUpdate.get().citadel(),java.lang.String)"], "Fixed commit": "a2729ba3a277b30eed0c2756cc403121d59c21ec", "Url": "https://api.github.com/repos/GoldenGnu/jeveassets", "Date": "2016-09-30T11:44:00Z"},
{"Line": "=>436", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (database.exists()) database.delete();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/878/buggy-version/library.src.main.java.com.tesera.andbtiles.Andbtiles.java", "BodyUseAPI": ["java.io.File.delete()"], "Fixed commit": "fde0591db41998ee619e28e67f84de3a86dd81de", "Url": "https://api.github.com/repos/tesera/andbtiles", "Date": "2014-02-05T17:34:23Z"},
{"Line": "=>440", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (database.exists()) database.delete();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/878/buggy-version/library.src.main.java.com.tesera.andbtiles.Andbtiles.java", "BodyUseAPI": ["java.io.File.delete()"], "Fixed commit": "fde0591db41998ee619e28e67f84de3a86dd81de", "Url": "https://api.github.com/repos/tesera/andbtiles", "Date": "2014-02-05T17:34:23Z"},
{"Line": "=>578", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (formId == null) { android.util.Log.e(org.odk.collect.android.activities.FormDownloadList.t, \"isLocalFormSuperseded: server is not OpenRosa-compliant. <formID> is null!\"); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/7723/buggy-version/collect_app.src.main.java.org.odk.collect.android.activities.FormDownloadList.java", "BodyUseAPI": [], "Fixed commit": "4d007d5079d0f9d26232999e0f92e14c9962fe2a", "Url": "https://api.github.com/repos/jkpr/collect-fixed", "Date": "2015-10-13T17:00:12Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(activity.isDestroyed())) { if (((progressDialog) != null) && (progressDialog.isShowing())) { progressDialog.dismiss(); } activity.finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/3988/buggy-version/appplus.src.main.java.sk.ab.herbsplus.StorageLoading.java", "BodyUseAPI": ["android.app.Activity.finish()"], "Fixed commit": "2fff58fe675ad00fde804710ec6590ee1f33494a", "Url": "https://api.github.com/repos/benadrasni/abherbs", "Date": "2017-05-18T11:23:02Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (card.equals(\"Curse\")) { score -= 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/689/buggy-version/src.tda367.dominion.server.game.Dominion.java", "BodyUseAPI": [], "Fixed commit": "f831d1bffc5cfdbf9f18e9a8aa1476a9ed43dad3", "Url": "https://api.github.com/repos/Glazastik/Dominion", "Date": "2013-05-26T12:52:46Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mBTH) != null) { mBTH.send(((java.lang.String) (msg.obj))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/3267/buggy-version/src.com.mumu.bluetooth.MyActivity.java", "BodyUseAPI": [], "Fixed commit": "a0303beb012dc4416206bfe91e768fe4fa9ee36b", "Url": "https://api.github.com/repos/mumumusuc/BTConnector", "Date": "2017-06-23T08:24:20Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((org.openbaton.common.vnfm_sdk.utils.VnfmUtils.getLifecycleEvent(virtualNetworkFunctionRecord.getLifecycle_event(), Event.CONFIGURE)) != null) { log.debug((\"LifeCycle events: \" + (org.openbaton.common.vnfm_sdk.utils.VnfmUtils.getLifecycleEvent(virtualNetworkFunctionRecord.getLifecycle_event(), Event.CONFIGURE).getLifecycle_events()))); log.info(\"-----------------------------------------------------------------------\"); log.info((\"Result script for CONFIGURE: \\n\\n\" + (this.executeScriptsForEvent(virtualNetworkFunctionRecord, Event.CONFIGURE, dependency)))); log.info(\"-----------------------------------------------------------------------\"); }else { log.debug(\"No LifeCycle events for Event.CONFIGURE\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/5695/buggy-version/src.main.java.org.openbaton.vnfm.generic.GenericVNFM.java", "BodyUseAPI": ["org.openbaton.vnfm.generic.GenericVNFM.executeScriptsForEvent(org.openbaton.catalogue.mano.record.VirtualNetworkFunctionRecord,Event.CONFIGURE,org.openbaton.catalogue.mano.record.VNFRecordDependency)", "org.openbaton.common.vnfm_sdk.utils.VnfmUtils.getLifecycleEvent(virtualNetworkFunctionRecord.getLifecycle_event(), Event.CONFIGURE).getLifecycle_events()", "org.openbaton.vnfm.generic.GenericVNFM.debug((\"LifeCycle events: \" + (org.openbaton.common.vnfm_sdk.utils.VnfmUtils.getLifecycleEvent(virtualNetworkFunctionRecord.getLifecycle_event(), Event.CONFIGURE).getLifecycle_events())))", "org.openbaton.common.vnfm_sdk.utils.VnfmUtils.getLifecycleEvent(virtualNetworkFunctionRecord.getLifecycle_event(),Event.CONFIGURE)", "org.openbaton.vnfm.generic.GenericVNFM.info((\"Result script for CONFIGURE: \\n\\n\" + (this.executeScriptsForEvent(virtualNetworkFunctionRecord, Event.CONFIGURE, dependency))))", "org.openbaton.catalogue.mano.record.VirtualNetworkFunctionRecord.getLifecycle_event()"], "Fixed commit": "d1181bfd70eccc6402a7fa34e5d7d47ada8520ee", "Url": "https://api.github.com/repos/openbaton/generic-vnfm", "Date": "2015-11-02T19:00:05Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<net.minecraft.world.chunk.Chunk, java.util.Set<net.minecraft.entity.player.EntityPlayerMP>>.getKey()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((chunk.worldObj) == world) { double dist = pneumaticCraft.common.util.PneumaticCraftUtils.distBetween(player.posX, 0, player.posZ, chunkX, 0, chunkZ); if (dist < (pneumaticCraft.common.semiblock.SemiBlockManager.SYNC_DISTANCE)) { if (syncedPlayers.add(player)) { for (pneumaticCraft.common.semiblock.ISemiBlock semiBlock : semiBlocks.get(chunk).values()) { if (!(semiBlock.isInvalid())) { pneumaticCraft.common.network.NetworkHandler.sendTo(new pneumaticCraft.common.network.PacketSetSemiBlock(semiBlock), player); pneumaticCraft.common.network.PacketDescription descPacket = semiBlock.getDescriptionPacket(); if (descPacket != null) pneumaticCraft.common.network.NetworkHandler.sendTo(descPacket, player); } } } }else if (dist > ((pneumaticCraft.common.semiblock.SemiBlockManager.SYNC_DISTANCE) + 5)) { syncedPlayers.remove(player); } }else { syncedPlayers.remove(player); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/8232/buggy-version/src.pneumaticCraft.common.semiblock.SemiBlockManager.java", "BodyUseAPI": ["java.util.Map<net.minecraft.world.chunk.Chunk, java.util.Map<net.minecraft.world.ChunkPosition, pneumaticCraft.common.semiblock.ISemiBlock>>.get(net.minecraft.world.chunk.Chunk)", "semiBlocks.get(chunk).values()"], "Fixed commit": "48ba35f613b9f567309bac73e5d1bcc39dda090d", "Url": "https://api.github.com/repos/MineMaarten/PneumaticCraft", "Date": "2015-08-24T14:35:51Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<java.util.List<User>>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((team.size()) != 0) value /= ((double) (team.size()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/6547/buggy-version/src.TeamManager.java", "BodyUseAPI": ["java.util.List<User>.size()"], "Fixed commit": "59115a4167dea38d2816c86dbe65bf093a3e1553", "Url": "https://api.github.com/repos/dysfunctionals/brumball-server", "Date": "2017-11-18T19:53:32Z"},
{"Line": "=>481", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (java.lang.Double.isNaN(y)) data.add(x); else data.add(x, y);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/5769/buggy-version/data.src.main.java.smile.data.parser.ArffParser.java", "BodyUseAPI": ["smile.data.AttributeDataset.add(double[],double)"], "Fixed commit": "f85a836a95460438bce0b0aff8e169ff2d7c46b7", "Url": "https://api.github.com/repos/haifengl/smile", "Date": "2017-09-18T20:36:54Z"},
{"Line": "=>531", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (java.lang.Double.isNaN(y)) data.add(x); else data.add(x, y);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/5769/buggy-version/data.src.main.java.smile.data.parser.ArffParser.java", "BodyUseAPI": ["smile.data.AttributeDataset.add(double[],double)"], "Fixed commit": "f85a836a95460438bce0b0aff8e169ff2d7c46b7", "Url": "https://api.github.com/repos/haifengl/smile", "Date": "2017-09-18T20:36:54Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isEditingPhoneNumber) { desiredText = phone_number; }else { desiredText = message; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/6007/buggy-version/app.src.main.java.sms.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "93c829d7d291c05f01b8a82b6696ea7b04e6c64b", "Url": "https://api.github.com/repos/chends888/desagil-morse", "Date": "2017-05-02T00:58:45Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (in != null) { try { in.close(); } catch (java.io.IOException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/210/buggy-version/core.server.common.src.main.java.alluxio.web.LogLevel.java", "BodyUseAPI": ["java.io.BufferedReader.close()"], "Fixed commit": "8c0e143e17ee4824358cddfc4b2e71bf4c6ad885", "Url": "https://api.github.com/repos/Dukecat0613/alluxio", "Date": "2017-05-10T06:12:26Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (loadDevicesOnStart) { loadBondedDevices(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/4875/buggy-version/AmdessApp.app.src.main.java.edu.uah.cpe.amdessapp.SensorListActivity.java", "BodyUseAPI": [], "Fixed commit": "d879bc2a337fe54cdc7009d982df6708148b2e8c", "Url": "https://api.github.com/repos/jbw3/CPE621Project", "Date": "2015-11-08T21:44:57Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args.length) < 1) { Main.printHelpAndExit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/4258/buggy-version/Main.java", "BodyUseAPI": [], "Fixed commit": "4ae4a09787b655b237cebdfd1ef7ee1aad38c5ab", "Url": "https://api.github.com/repos/SCastaneda/statistical-spam-detector", "Date": "2014-11-17T02:11:41Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.widget.TimePicker.getMinute()", "java.util.Calendar.get(int)", "java.util.Calendar.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((ringHour <= h) && (ringMin < m)) { ringHour = ringHour + 24; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/302/buggy-version/app.src.main.java.com.apps.aditya.hc0.Picker.java", "BodyUseAPI": [], "Fixed commit": "021f820e88e557efd0dd867ed9fedf5d5334e1bb", "Url": "https://api.github.com/repos/adiv2/HexClock", "Date": "2016-10-30T17:25:59Z"},
{"Line": "=>2572", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (xform != null) { transform(xform); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/8268/buggy-version/src.main.java.org.jfree.graphics2d.svg.SVGGraphics2D.java", "BodyUseAPI": ["org.jfree.graphics2d.svg.SVGGraphics2D.transform(java.awt.geom.AffineTransform)"], "Fixed commit": "74ced3ef5be3fcd8d32c9620dfb4573d200a56e3", "Url": "https://api.github.com/repos/jfree/jfreesvg", "Date": "2016-08-30T18:40:14Z"},
{"Line": "=>2576", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (xform != null) { setTransform(savedTransform); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/8268/buggy-version/src.main.java.org.jfree.graphics2d.svg.SVGGraphics2D.java", "BodyUseAPI": [], "Fixed commit": "74ced3ef5be3fcd8d32c9620dfb4573d200a56e3", "Url": "https://api.github.com/repos/jfree/jfreesvg", "Date": "2016-08-30T18:40:14Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mArg) != null) mArg.print(out);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/2016/buggy-version/xmlsh.src.shell.org.xmlsh.sh.core.ReturnStatement.java", "BodyUseAPI": [], "Fixed commit": "b2335c238908642d5430efe4b956c98f86593bda", "Url": "https://api.github.com/repos/xmlsh/xmlsh", "Date": "2014-06-06T14:36:54Z"},
{"Line": "=>1223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (items.contains(treeItem_Duplicates[0])) { org.nschmidt.ldparteditor.logger.NLogger.debug(getClass(), \"+Quick fix all duplicates.\"); items.remove(treeItem_Duplicates[0]); for (org.nschmidt.ldparteditor.widgets.TreeItem sort : treeItem_Duplicates[0].getItems()) { if (!(items.contains(sort))) items.add(sort); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/8587/buggy-version/src.org.nschmidt.ldparteditor.composites.compositetab.CompositeTab.java", "BodyUseAPI": ["treeItem_Duplicates[0].getItems()", "java.util.HashSet<org.nschmidt.ldparteditor.widgets.TreeItem>.contains(org.nschmidt.ldparteditor.widgets.TreeItem)", "java.util.HashSet<org.nschmidt.ldparteditor.widgets.TreeItem>.remove(treeItem_Duplicates[0])", "java.util.HashSet<org.nschmidt.ldparteditor.widgets.TreeItem>.add(org.nschmidt.ldparteditor.widgets.TreeItem)"], "Fixed commit": "98b5753eaa7ed1149669b2489aa8ddd242261b2f", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2016-08-17T21:23:30Z"},
{"Line": "=>1167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (sort.equals(treeItem_Warnings[0])) { items.add(treeItem_Warnings[0]); }else if (sort.equals(treeItem_Duplicates[0])) { items.add(treeItem_Duplicates[0]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/8587/buggy-version/src.org.nschmidt.ldparteditor.composites.compositetab.CompositeTab.java", "BodyUseAPI": ["java.util.HashSet<org.nschmidt.ldparteditor.widgets.TreeItem>.add(treeItem_Warnings[0])", "org.nschmidt.ldparteditor.widgets.TreeItem.equals(treeItem_Duplicates[0])"], "Fixed commit": "98b5753eaa7ed1149669b2489aa8ddd242261b2f", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2016-08-17T21:23:30Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jvmhub.springboot.utils.SetUtils.first(methodCondition.getMethods())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (null != first) { requestType = first.name(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/2623/buggy-version/src.main.java.com.jvmhub.springboot.controller.IndexController.java", "BodyUseAPI": ["org.springframework.web.bind.annotation.RequestMethod.name()"], "Fixed commit": "cd01f3358c67fa367b14485be89bcc43d418f30f", "Url": "https://api.github.com/repos/workcheng/Spring-Boot-with-Thymeleaf-tutorial", "Date": "2017-04-05T07:04:20Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cookies == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/2334/buggy-version/src.main.java.com.changyi.fi.component.endpoint.response.InboundDetailResponse.java", "BodyUseAPI": [], "Fixed commit": "9b754a087d5bc4971f0c917adcc17da68accb3b5", "Url": "https://api.github.com/repos/finley007/Suishoushu", "Date": "2017-08-24T02:16:51Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currentInput.equals(\"sdf\")) { mashTyping = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/5629/buggy-version/src.chat.model.ChatBot.java", "BodyUseAPI": [], "Fixed commit": "5e914ef0ab4e09e8761de1f11167183694699f10", "Url": "https://api.github.com/repos/CoLo7/Chat", "Date": "2015-12-02T14:40:42Z"},
{"Line": "=>344", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isExternalStorageWritable()) { sdCard = android.os.Environment.getExternalStorageDirectory(); directory = new java.io.File(((sdCard.getAbsolutePath()) + \"/Cash Manager\")); }else { directory = new java.io.File(\"/Cash Manager\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/3477/buggy-version/app.src.main.java.com.pr.se.cash_manager.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "18c0aa6ea7349ec8ee6ab6703eb291434685bb03", "Url": "https://api.github.com/repos/michaelbenk/Cash_Manager", "Date": "2017-06-24T15:21:25Z"},
{"Line": "=>436", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isExternalStorageWritable()) { sdCard = android.os.Environment.getExternalStorageDirectory(); directory = new java.io.File(((sdCard.getAbsolutePath()) + \"/Cash Manager\")); }else { directory = new java.io.File(\"/Cash Manager\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/3477/buggy-version/app.src.main.java.com.pr.se.cash_manager.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "18c0aa6ea7349ec8ee6ab6703eb291434685bb03", "Url": "https://api.github.com/repos/michaelbenk/Cash_Manager", "Date": "2017-06-24T15:21:25Z"},
{"Line": "=>317", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (path.isEmpty()) return path;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/3980/buggy-version/src.run_mouse_run.PathFinder.java", "BodyUseAPI": [], "Fixed commit": "4e082fbad29024a8355cb5730e777407ec3fdd0b", "Url": "https://api.github.com/repos/UdevCommunity/URivals-RunMouseRun", "Date": "2017-07-16T01:24:24Z"},
{"Line": "=>378", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.dspace.submit.utils.DryadJournalSubmissionUtils.findKeyByFullname(org.dspace.core.Context,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (concept != null) { isBlackedOut = org.dspace.submit.utils.DryadJournalSubmissionUtils.isBlackedOut(context, concept.getIdentifier()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/2998/buggy-version/dspace.modules.xmlui.src.main.java.org.dspace.app.xmlui.aspect.submission.submit.DescribeStepUtils.java", "BodyUseAPI": ["org.dspace.submit.utils.DryadJournalSubmissionUtils.isBlackedOut(org.dspace.core.Context,concept.getIdentifier())", "org.dspace.app.xmlui.aspect.submission.submit.Concept.getIdentifier()"], "Fixed commit": "7ecd647fdc696880929073a110a6a7cadcafaf79", "Url": "https://api.github.com/repos/datadryad/dryad-repo", "Date": "2014-06-20T23:35:22Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.dspace.submit.utils.DryadJournalSubmissionUtils.findKeyByFullname(org.dspace.core.Context,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (concept != null) { journalID = concept.getIdentifier(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/2998/buggy-version/dspace.modules.api.src.main.java.org.dspace.submit.step.SelectPublicationStep.java", "BodyUseAPI": ["org.dspace.submit.step.Concept.getIdentifier()"], "Fixed commit": "7ecd647fdc696880929073a110a6a7cadcafaf79", "Url": "https://api.github.com/repos/datadryad/dryad-repo", "Date": "2014-06-20T23:35:22Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.dspace.submit.utils.DryadJournalSubmissionUtils.findKeyByFullname(org.dspace.core.Context,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (concept != null) { journalID = concept.getIdentifier(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/2998/buggy-version/dspace.modules.api.src.main.java.org.dspace.submit.step.SelectPublicationStep.java", "BodyUseAPI": ["org.dspace.submit.step.Concept.getIdentifier()"], "Fixed commit": "7ecd647fdc696880929073a110a6a7cadcafaf79", "Url": "https://api.github.com/repos/datadryad/dryad-repo", "Date": "2014-06-20T23:35:22Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.dspace.submit.utils.DryadJournalSubmissionUtils.findKeyByFullname(org.dspace.core.Context,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (concept != null) { journalIdentifier = concept.getIdentifier(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/2998/buggy-version/dspace.modules.api.src.main.java.org.dspace.submit.utils.DryadJournalSubmissionUtils.java", "BodyUseAPI": ["org.dspace.submit.utils.Concept.getIdentifier()"], "Fixed commit": "7ecd647fdc696880929073a110a6a7cadcafaf79", "Url": "https://api.github.com/repos/datadryad/dryad-repo", "Date": "2014-06-20T23:35:22Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (wind.isPlaying()) { wind.stop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/7842/buggy-version/src.com.maycontainsoftware.pumpkinpatchpanic.GameScreen.java", "BodyUseAPI": ["com.badlogic.gdx.audio.Music.stop()"], "Fixed commit": "c8a1f1276e07406d569bb1b295c2d873fa0fce85", "Url": "https://api.github.com/repos/cfmdobbie/PumpkinPatchPanic", "Date": "2014-10-30T14:30:58Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((java.util.Map) (object)).size()) > 0) { stringBuilder.deleteLastChar(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/4600/buggy-version/src.main.java.com.silentgo.json.serializer.MapSerializer.java", "BodyUseAPI": [], "Fixed commit": "53bc5b8f4c7fdc5856c8646b6356dfb02e89e133", "Url": "https://api.github.com/repos/Teddy-Zhu/SilentGo-JSON", "Date": "2017-01-24T03:22:21Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (state.isFinalState()) { endStates[state.getId()] = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/354/buggy-version/src.org.jgll.regex.AutomatonOperations.java", "BodyUseAPI": ["org.jgll.regex.State.getId()"], "Fixed commit": "151fca21dcad44dfc7a28fd8d4d907a245590b1a", "Url": "https://api.github.com/repos/cwi-swat/iguana", "Date": "2013-12-30T01:42:52Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.w3c.dom.Node.getFirstChild()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (node != null) { node = node.getFirstChild(); if (node != null) { node = node.getFirstChild(); if (node != null) { return node.getTextContent(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/8667/buggy-version/jbpm-bpmn2.src.main.java.org.jbpm.bpmn2.xml.UserTaskHandler.java", "BodyUseAPI": ["org.w3c.dom.Node.getFirstChild()"], "Fixed commit": "7b23bf0e091710fca8ce5815a4f8af48e9749e30", "Url": "https://api.github.com/repos/jsvitak/jbpm", "Date": "2013-02-13T15:00:15Z"},
{"Line": "=>417", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["parquet.column.page.PageReader.readPage()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (page.getValueEncoding().usesDictionary()) { if ((dictionary) == null) { throw new parquet.io.ParquetDecodingException((((((\"could not read page \" + page) + \" in col \") + (path)) + \" as the dictionary was missing for encoding \") + (page.getValueEncoding()))); } this.dataColumn = page.getValueEncoding().getDictionaryBasedValuesReader(path, ValuesType.VALUES, dictionary); }else { this.dataColumn = page.getValueEncoding().getValuesReader(path, ValuesType.VALUES); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/6734/buggy-version/parquet-column.src.main.java.parquet.column.impl.ColumnReaderImpl.java", "BodyUseAPI": ["parquet.column.page.Page.getValueEncoding()", "parquet.column.page.Page.getValueEncoding()", "page.getValueEncoding().getDictionaryBasedValuesReader(parquet.column.ColumnDescriptor,ValuesType.VALUES,parquet.column.Dictionary)", "parquet.column.page.Page.getValueEncoding()", "page.getValueEncoding().getValuesReader(parquet.column.ColumnDescriptor,ValuesType.VALUES)"], "Fixed commit": "94afb195dfae10fc40699f3c0efc31bb8f23f51a", "Url": "https://api.github.com/repos/laserson/parquet-mr", "Date": "2013-07-02T22:53:13Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(connect())) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/2072/buggy-version/src.com.socket.Client.java", "BodyUseAPI": [], "Fixed commit": "dad95bd1540c4032f89667987df7e2013d9ca276", "Url": "https://api.github.com/repos/codercg2/TaskSchedulingMgr", "Date": "2017-04-13T08:08:30Z"},
{"Line": "=>628", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (elem instanceof org.talend.designer.core.ui.editor.notes.Note) { return EElementType.NOTE.getCategories(); }else if (elem instanceof org.talend.designer.core.ui.editor.subjobcontainer.SubjobContainer) { return EElementType.SUBJOB.getCategories(); }else if (elem instanceof org.talend.designer.core.ui.editor.connections.ConnectionLabel) { return getCategories(((org.talend.designer.core.ui.editor.connections.ConnectionLabel) (elem)).getConnection()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/3840/buggy-version/main.plugins.org.talend.designer.core.src.main.java.org.talend.designer.core.ui.views.properties.ComponentSettingsView.java", "BodyUseAPI": [], "Fixed commit": "a4dcb7096e29a77ae9f6d177db4f3c5577e16b8d", "Url": "https://api.github.com/repos/pbailly/tdi-studio-se", "Date": "2014-06-30T22:32:51Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.jface.viewers.IStructuredSelection.getFirstElement()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((descriptor.getData()) instanceof org.talend.designer.core.ui.editor.connections.ConnectionLabel) { createDynamicComposite(tabFactory.getTabComposite(), ((org.talend.designer.core.ui.editor.connections.ConnectionLabel) (descriptor.getData())).getConnection(), descriptor.getCategory()); }else { createDynamicComposite(tabFactory.getTabComposite(), ((org.talend.core.model.process.Element) (descriptor.getData())), descriptor.getCategory()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/3840/buggy-version/main.plugins.org.talend.designer.core.src.main.java.org.talend.designer.core.ui.views.properties.ComponentSettingsView.java", "BodyUseAPI": ["org.talend.designer.core.ui.views.properties.ComponentSettingsView.1.createDynamicComposite(tabFactory.getTabComposite(),((org.talend.designer.core.ui.editor.connections.ConnectionLabel) (descriptor.getData())).getConnection(),descriptor.getCategory())", "org.talend.core.properties.tab.TalendPropertyTabDescriptor.getData()", "((org.talend.designer.core.ui.editor.connections.ConnectionLabel) (descriptor.getData())).getConnection()", "org.talend.designer.core.ui.views.properties.ComponentSettingsView.1.createDynamicComposite(tabFactory.getTabComposite(),((org.talend.core.model.process.Element) (descriptor.getData())),descriptor.getCategory())", "org.talend.core.properties.tab.TalendPropertyTabDescriptor.getCategory()", "org.talend.core.properties.tab.TalendPropertyTabDescriptor.getData()", "org.talend.core.properties.tab.TalendPropertyTabDescriptor.getCategory()"], "Fixed commit": "a4dcb7096e29a77ae9f6d177db4f3c5577e16b8d", "Url": "https://api.github.com/repos/pbailly/tdi-studio-se", "Date": "2014-06-30T22:32:51Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((de.paginagmbh.epubchecker.EpubValidator.guiManager.getExpandedSave()) == (de.paginagmbh.epubchecker.GuiManager.ExpandedSaveMode.ALWAYS)) { saveEpubFromExpandedFolder(); }else if (epubFile.exists()) { epubFile.delete(); gui.addLogMessage(Severity.WARNING, ((\"\\n\\n\" + (__(\"EPUB from source folder wasn't saved because it contains errors or warnings!\"))) + \"\\n\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/3543/buggy-version/src.main.java.de.paginagmbh.epubchecker.EpubValidator.java", "BodyUseAPI": [], "Fixed commit": "1db5bc4e40f223bb0a5e7dce77df71c035e53335", "Url": "https://api.github.com/repos/paginagmbh/EPUB-Checker", "Date": "2016-12-14T08:48:04Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Stack<java.lang.Class<?>>.pop()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(creationOrder.contains(pop))) { creationOrder.add(pop); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/5444/buggy-version/src.main.java.com.github.kuros.random.jpa.resolver.CreationOrderResolverImpl.java", "BodyUseAPI": ["com.github.kuros.random.jpa.types.CreationOrder.add(java.lang.Class<?>)"], "Fixed commit": "404f4db97ffb87c144bbc785024ddb5329a9935c", "Url": "https://api.github.com/repos/kuros/random-jpa", "Date": "2015-06-03T14:18:14Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(e.getItemStack().isEmpty())) { if (java.util.Objects.equals(config.getOreDictEntriesTooltipMode(), \"enabled\")) { com.snowshock35.jeiintegration.TooltipEventHandler.genOreDictTooltip(e); }else if ((java.util.Objects.equals(config.getOreDictEntriesTooltipMode(), \"onShift\")) && (com.snowshock35.jeiintegration.TooltipEventHandler.isShiftKeyDown())) { com.snowshock35.jeiintegration.TooltipEventHandler.genOreDictTooltip(e); }else if ((java.util.Objects.equals(config.getOreDictEntriesTooltipMode(), \"onDebug\")) && (com.snowshock35.jeiintegration.TooltipEventHandler.isDebugMode())) { com.snowshock35.jeiintegration.TooltipEventHandler.genOreDictTooltip(e); }else if (((java.util.Objects.equals(config.getOreDictEntriesTooltipMode(), \"onShiftAndDebug\")) && (com.snowshock35.jeiintegration.TooltipEventHandler.isShiftKeyDown())) && (com.snowshock35.jeiintegration.TooltipEventHandler.isDebugMode())) { com.snowshock35.jeiintegration.TooltipEventHandler.genOreDictTooltip(e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/5233/buggy-version/src.main.java.com.snowshock35.jeiintegration.TooltipEventHandler.java", "BodyUseAPI": ["com.snowshock35.jeiintegration.TooltipEventHandler.genOreDictTooltip(net.minecraftforge.event.entity.player.ItemTooltipEvent)", "com.snowshock35.jeiintegration.TooltipEventHandler.genOreDictTooltip(net.minecraftforge.event.entity.player.ItemTooltipEvent)", "com.snowshock35.jeiintegration.TooltipEventHandler.genOreDictTooltip(net.minecraftforge.event.entity.player.ItemTooltipEvent)", "com.snowshock35.jeiintegration.TooltipEventHandler.genOreDictTooltip(net.minecraftforge.event.entity.player.ItemTooltipEvent)"], "Fixed commit": "062047194f8005467deb9ad53ee01ddf4263d4cf", "Url": "https://api.github.com/repos/SnowShock35/JEIIntegration", "Date": "2017-07-29T22:20:25Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((region.getOwner()) == null) { player.sendMessage(((com.undeadscythes.udsplugin.Color.MESSAGE) + \"This area is protected.\")); }else if (region.getOwner().equals(player)) { player.sendMessage(((com.undeadscythes.udsplugin.Color.MESSAGE) + \"You own this block.\")); }else if (region.getMembers().contains(player)) { player.sendMessage(((com.undeadscythes.udsplugin.Color.MESSAGE) + \"Your room mate owns this block.\")); }else { player.sendMessage(((com.undeadscythes.udsplugin.Color.MESSAGE) + \"Somebody else owns this block.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/6027/buggy-version/src.com.undeadscythes.udsplugin.eventhandlers.PlayerInteract.java", "BodyUseAPI": ["region.getOwner().equals(com.undeadscythes.udsplugin.eventhandlers.SaveablePlayer)", "com.undeadscythes.udsplugin.eventhandlers.Region.getMembers()", "com.undeadscythes.udsplugin.eventhandlers.Region.getOwner()", "region.getMembers().contains(com.undeadscythes.udsplugin.eventhandlers.SaveablePlayer)"], "Fixed commit": "2a1e8ce36bc7fe65c251623d608d9c1e69836bf2", "Url": "https://api.github.com/repos/UndeadScythes/UDSPlugin", "Date": "2013-07-27T09:57:14Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(checkIfStatusIsSuccess(result))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/5566/buggy-version/src.main.java.com.goolla.http.HttpExecutor.java", "BodyUseAPI": [], "Fixed commit": "44dcc57056fc15ede4e9df8dcd2145f399d56b29", "Url": "https://api.github.com/repos/szagriichuk/goolla", "Date": "2016-03-22T16:08:47Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (search == null) { return errHandle.DoError(\"Failed to create an XqF job\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/3488/buggy-version/src.nl.ru.crpx.project.ExecutePsdxStream.java", "BodyUseAPI": [], "Fixed commit": "db6ca5447fffc7162931a79f723b43dc7be47afb", "Url": "https://api.github.com/repos/ErwinKomen/CrpxProcessor", "Date": "2016-01-26T11:04:51Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (annotation != null) { setAnnotation(annotation); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/2615/buggy-version/src.main.java.org.helm.notation2.parser.notation.polymer.PolymerNotation.java", "BodyUseAPI": [], "Fixed commit": "c78ee01e29ddc19fe8abb7289862c87c1c2b0561", "Url": "https://api.github.com/repos/PistoiaHELM/HELMNotationParser", "Date": "2016-01-12T14:37:58Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.tileentity.TileEntity.getFillPercentage()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (percentage > 0.5F) { percentage = 0.5F; renderTop = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/4761/buggy-version/src.main.java.com.nik7.upgcraft.client.render.tileentity.TileEntityRendererTank.java", "BodyUseAPI": [], "Fixed commit": "becb636ecb159e7f5f1948c0e35f9ad3cd9c9781", "Url": "https://api.github.com/repos/nik7007/UpgradeCraft", "Date": "2015-05-10T18:41:33Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getView()) != null) { setEmptyText(\"No Surveys\"); mPullToRefreshLayout.setRefreshComplete(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/39/buggy-version/ohmage.src.main.java.org.ohmage.fragments.HomeFragment.java", "BodyUseAPI": [], "Fixed commit": "7b11a45f42f576e3ccaae913e3f79daeb8d47c3f", "Url": "https://api.github.com/repos/ohmage/android", "Date": "2014-04-11T00:32:33Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (length < 0) { length += 256; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/4356/buggy-version/src.main.java.org.themassacre.tpmp.packets.Message.java", "BodyUseAPI": [], "Fixed commit": "0dc3c7d78d2f1c1aee939f28c575151d3822a1b0", "Url": "https://api.github.com/repos/MEDVEDx64/Sabotage", "Date": "2017-08-22T10:01:47Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ean.length()) < 13) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/4982/buggy-version/alexandria.app.src.main.java.it.jaschke.alexandria.AddBook.java", "BodyUseAPI": [], "Fixed commit": "55a3721dc6ff3c4b19444343ba0e5bc163bb27b6", "Url": "https://api.github.com/repos/milneti/SuperDuo", "Date": "2015-07-25T01:10:07Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((shareActionProvider) != null) { shareActionProvider.setShareIntent(shareIntent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/4982/buggy-version/alexandria.app.src.main.java.it.jaschke.alexandria.BookDetail.java", "BodyUseAPI": [], "Fixed commit": "55a3721dc6ff3c4b19444343ba0e5bc163bb27b6", "Url": "https://api.github.com/repos/milneti/SuperDuo", "Date": "2015-07-25T01:10:07Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getId()) == null) { save(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/6725/buggy-version/app.src.main.java.share.fair.fairshare.GroupLog.java", "BodyUseAPI": [], "Fixed commit": "e527d3b37e51861879f83bc53c4492056568e0c0", "Url": "https://api.github.com/repos/Niryo/FairShare", "Date": "2015-10-20T20:33:16Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getId()) == null) { save(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/6725/buggy-version/app.src.main.java.share.fair.fairshare.GroupLog.java", "BodyUseAPI": [], "Fixed commit": "e527d3b37e51861879f83bc53c4492056568e0c0", "Url": "https://api.github.com/repos/Niryo/FairShare", "Date": "2015-10-20T20:33:16Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (tasks == null) { throw stateException(\"CreateMultipleBlockVolumes.illegalState.invalid\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/5694/buggy-version/vipr-portal.com.iwave.isa.content.src.java.com.emc.sa.service.vipr.block.tasks.CreateMultipleBlockVolumes.java", "BodyUseAPI": [], "Fixed commit": "899573d622b9f55469eac30aec361d417247950e", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2015-12-23T21:54:22Z"},
{"Line": "=>656", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mAnimateRows) { mAnimateRows = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/2781/buggy-version/src.org.wordpress.android.ui.reader.adapters.ReaderPostAdapter.java", "BodyUseAPI": [], "Fixed commit": "2c1a6a5034a905ac6548719cf4d5893eaa3e4c94", "Url": "https://api.github.com/repos/mjangda/WordPress-Android", "Date": "2014-06-12T14:13:26Z"},
{"Line": "=>485", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.jar.JarFile.getManifest()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (manifest == null) { java.util.logging.Logger.getLogger(org.codesecure.dependencycheck.analyzer.JarAnalyzer.class.getName()).log(java.util.logging.Level.SEVERE, \"Jar file '{0}' does not contain a manifest.\", dependency.getFileName()); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/4751/buggy-version/src.main.java.org.codesecure.dependencycheck.analyzer.JarAnalyzer.java", "BodyUseAPI": [], "Fixed commit": "9ee5455b8cfabb5b4d5814ff82188efba5bcf001", "Url": "https://api.github.com/repos/jeremylong/DependencyCheck", "Date": "2012-12-21T02:39:02Z"},
{"Line": "=>363", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.sap.furcas.runtime.common.interfaces.IMetaModelLookup<Type>.getOclReturnType(metaModelTypeOfPropertyReference.getReference(),com.sap.furcas.runtime.tcs.PropertyArgumentUtil.getReferenceByAsOCL(args.referenceByPArg))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (type == null) { errorBucket.addError(((metaModelTypeOfPropertyReference + \" is no suitable context for the OCL expression \") + (com.sap.furcas.runtime.tcs.PropertyArgumentUtil.getReferenceByAsOCL(args.referenceByPArg))), prop); }else { com.sap.furcas.runtime.common.interfaces.ResolvedNameAndReferenceBean<Type> metaModelTypeOfQueryResult = metaLookup.resolveReferenceName(type); com.sap.furcas.metamodel.FURCAS.TCS.PrimitiveTemplate propertyPrimitiveTemplate = syntaxLookup.getDefaultPrimitiveTemplateRule(metaModelTypeOfQueryResult); if (propertyPrimitiveTemplate == null) { errorBucket.addError((((\"Syntax does not define a rule for \" + metaModelTypeOfQueryResult) + \" which is the return type of the referenceBy expression \") + (com.sap.furcas.runtime.tcs.PropertyArgumentUtil.getReferenceByAsOCL(args.referenceByPArg))), prop); }else { ruleBodyPart.append(propertyPrimitiveTemplate.getTemplateName()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/568/buggy-version/DSLEngineering.com.sap.furcas.parsergenerator.src.com.sap.furcas.parsergenerator.tcs.t2m.grammar.PropertyTypeHandler.java", "BodyUseAPI": ["com.sap.furcas.runtime.common.interfaces.IMetaModelLookup<Type>.resolveReferenceName(Type)"], "Fixed commit": "1f882f6ee973a362046a474e12f2727172edd1ce", "Url": "https://api.github.com/repos/FURCAS-dev/FURCAS", "Date": "2011-05-18T21:19:46Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mInsideRightImageAsset) != null) assets.add(mInsideRightImageAsset);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/986/buggy-version/KitePrintSDK.src.main.java.ly.kite.catalogue.GreetingCardPrintJob.java", "BodyUseAPI": [], "Fixed commit": "070aff686e459d65275c26ce0409369081ac9b79", "Url": "https://api.github.com/repos/OceanLabs/Android-Print-SDK", "Date": "2015-12-23T13:31:36Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mFrontImageAsset) != null) assets.add(mFrontImageAsset);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/986/buggy-version/KitePrintSDK.src.main.java.ly.kite.catalogue.GreetingCardPrintJob.java", "BodyUseAPI": [], "Fixed commit": "070aff686e459d65275c26ce0409369081ac9b79", "Url": "https://api.github.com/repos/OceanLabs/Android-Print-SDK", "Date": "2015-12-23T13:31:36Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mInsideLeftImageAsset) != null) assets.add(mInsideLeftImageAsset);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/986/buggy-version/KitePrintSDK.src.main.java.ly.kite.catalogue.GreetingCardPrintJob.java", "BodyUseAPI": [], "Fixed commit": "070aff686e459d65275c26ce0409369081ac9b79", "Url": "https://api.github.com/repos/OceanLabs/Android-Print-SDK", "Date": "2015-12-23T13:31:36Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mBackImageAsset) != null) assets.add(mBackImageAsset);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/986/buggy-version/KitePrintSDK.src.main.java.ly.kite.catalogue.GreetingCardPrintJob.java", "BodyUseAPI": [], "Fixed commit": "070aff686e459d65275c26ce0409369081ac9b79", "Url": "https://api.github.com/repos/OceanLabs/Android-Print-SDK", "Date": "2015-12-23T13:31:36Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<com.example.krysztian.ascribe.model.Note>.indexOf(com.example.krysztian.ascribe.model.Note)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (index != (-1)) { notes.remove(noteToDelete); notifyItemRemoved(index); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/371/buggy-version/app.src.main.java.com.example.krysztian.ascribe.main.recycler.NotesAdapter.java", "BodyUseAPI": ["com.example.krysztian.ascribe.main.recycler.NotesAdapter.notifyItemRemoved(int)"], "Fixed commit": "6b927a665540a73c24f76ff164a6affb042ffa9b", "Url": "https://api.github.com/repos/Laaidback/A.scribe", "Date": "2017-07-24T11:06:27Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["((com.thebluealliance.androidclient.adapters.ListViewAdapter) (parent.getAdapter())).getItem(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((item != null) && (item instanceof com.thebluealliance.androidclient.datatypes.ListElement)) { android.content.Intent intent = new android.content.Intent(getActivity(), com.thebluealliance.androidclient.activities.ViewEventActivity.class); java.lang.String eventKey = ((com.thebluealliance.androidclient.datatypes.ListElement) (item)).getKey(); intent.putExtra(\"eventKey\", eventKey); startActivity(intent); }else { android.util.Log.d(Constants.LOG_TAG, \"ListHeader clicked. Ignore...\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/3434/buggy-version/android.src.main.java.com.thebluealliance.androidclient.fragments.EventListFragment.java", "BodyUseAPI": [], "Fixed commit": "8c3f711b286d277ed39589734f90f0bfc02031f7", "Url": "https://api.github.com/repos/KineticLiminality/the-blue-alliance-android", "Date": "2014-05-21T01:31:46Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (options.connectionInfo.isClient()) { clientBotVsBot(options.getNumTrainingGames(), options.connectionInfo.getIp(), options.connectionInfo.getPort()); }else if (options.connectionInfo.isHost()) { hostBotVsBot(options.connectionInfo.getPort()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/2394/buggy-version/src.main.java.com.tictactoebot.gameEngine.GameEngine.java", "BodyUseAPI": ["options.connectionInfo.getPort()", "com.tictactoebot.gameEngine.GameEngine.clientBotVsBot(options.getNumTrainingGames(),options.connectionInfo.getIp(),options.connectionInfo.getPort())", "options.connectionInfo.isHost()", "options.connectionInfo.getIp()", "options.connectionInfo.getPort()", "com.tictactoebot.gameEngine.Options.getNumTrainingGames()", "com.tictactoebot.gameEngine.GameEngine.hostBotVsBot(options.connectionInfo.getPort())"], "Fixed commit": "a5cb62f2c948db6543e7feef1fdd65ceeb68c8ed", "Url": "https://api.github.com/repos/AaronCoplan/tic-tac-toe-bot", "Date": "2017-02-22T08:15:22Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((font) == null) { throw new java.lang.IllegalArgumentException(\"Font not set.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/1655/buggy-version/src.main.java.be.quodlibet.boxable.Cell.java", "BodyUseAPI": [], "Fixed commit": "f00f3d88aaeef0bf2fbe8baf6b60ecc6ee4d8dab", "Url": "https://api.github.com/repos/dgautier/boxable", "Date": "2015-02-04T12:35:18Z"},
{"Line": "=>477", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((heart_rate) >= 0) { broadcastIntent.putExtra(\"HEARTRATE\", heart_rate); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/2851/buggy-version/src.com.njackson.GPSService.java", "BodyUseAPI": [], "Fixed commit": "ac98bca87fea01a6b955407a5e58ce4cef9f8f17", "Url": "https://api.github.com/repos/pebble-bike/PebbleBike-AndroidApp", "Date": "2014-01-19T22:50:19Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.security.cert.Certificate.getExtensionValue(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (ski == null) { com.emc.vipr.transform.encryption.KeyStoreEncryptionFactory.logger.debug(\"Certificate does not have SKI. Computing fingerprint.\"); return com.emc.vipr.transform.encryption.KeyUtils.getRsaPublicKeyFingerprint(((java.security.interfaces.RSAPublicKey) (cert.getPublicKey())), provider); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/6078/buggy-version/src.main.java.com.emc.vipr.transform.encryption.KeyStoreEncryptionFactory.java", "BodyUseAPI": [], "Fixed commit": "e16a66dc03641a2e5181fe3b083c43cdf4193b7a", "Url": "https://api.github.com/repos/EMCECS/ecs-object-transform-java", "Date": "2014-01-14T17:38:24Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (joinNode.hasJoinQual()) { joinNode.setJoinQual(evalRewriter.visit(null, joinNode.getJoinQual(), new java.util.Stack<org.apache.tajo.plan.rewrite.rules.EvalNode>())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/2742/buggy-version/tajo-plan.src.main.java.org.apache.tajo.plan.rewrite.rules.CommonConditionReduceRule.java", "BodyUseAPI": ["org.apache.tajo.plan.logical.JoinNode.setJoinQual(evalRewriter.visit(null, joinNode.getJoinQual(), new java.util.Stack<org.apache.tajo.plan.rewrite.rules.EvalNode>()))", "org.apache.tajo.plan.logical.JoinNode.getJoinQual()", "org.apache.tajo.plan.rewrite.rules.CommonConditionReduceRule.EvalRewriter.visit(<nulltype>,joinNode.getJoinQual(),java.util.Stack<org.apache.tajo.plan.rewrite.rules.EvalNode>)"], "Fixed commit": "6888aa99a4fbcf5258abc9f6d27946114fac7cdd", "Url": "https://api.github.com/repos/jihoonson/tajo", "Date": "2015-08-12T06:46:57Z"}]}
