{"UNKNOWN to If":[{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.maoyuchaxue.catfishclubnewsapp.data.ResourceCache.getBitmapFromBlob(byte[])"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (bm == null) android.util.Log.i(\"ResourceCache\", \"NULL\"); else android.util.Log.i(\"ResourceCache\", url.toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/6809/buggy-version/app.src.main.java.com.maoyuchaxue.catfishclubnewsapp.data.ResourceCache.java", "BodyUseAPI": [], "Fixed commit": "88014f524116bc7b481e998c64811016be4d286d", "Url": "https://api.github.com/repos/maoyuchaxue/CatfishClubNewsApp", "Date": "2017-09-14T07:02:41Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((cfgFile) == null) { java.lang.System.err.println(jsap.getHelp()); java.lang.System.exit(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/1918/buggy-version/demos.distexec.src.main.java.org.infinispan.demo.Demo.java", "BodyUseAPI": [], "Fixed commit": "7dc9b8dbdb53c94e6bf1d1c5011f38868e12d96a", "Url": "https://api.github.com/repos/Sanne/infinispan", "Date": "2015-03-16T09:00:18Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((first) == removeMe) { first = removeMe.next; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/6679/buggy-version/src.classscheduling.HopelessPartialSchedules.java", "BodyUseAPI": [], "Fixed commit": "a839aef8d5b99872ca4b26d67d12b2609e149b36", "Url": "https://api.github.com/repos/krzysztofmajewski/class-scheduler", "Date": "2017-03-07T01:33:00Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((customerSearchFormBean.getFilters()) == null) { customerSearchFormBean.setFilters(new org.mifos.dto.screen.SearchFiltersDto()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/7298/buggy-version/userInterface.src.main.java.org.mifos.ui.core.controller.SearchResultController.java", "BodyUseAPI": ["org.mifos.ui.core.controller.CustomerSearchFormBean.setFilters(org.mifos.dto.screen.SearchFiltersDto)"], "Fixed commit": "057bef751f5f971781f54ed89c441bf9f642e0ca", "Url": "https://api.github.com/repos/mifos/head", "Date": "2013-04-15T09:32:31Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (module == null) { request.setAttribute(\"message\", \"Please select the radio button\"); request.getRequestDispatcher(\"viewmodule.jsp\").forward(request, response); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/8103/buggy-version/src.com.accenture.tmt.presentation.servlet.EditModule.java", "BodyUseAPI": [], "Fixed commit": "a5245da39c36eb60f69da4375dd44f9cbefa91d0", "Url": "https://api.github.com/repos/nitin2402/accentureaserocks", "Date": "2015-07-15T05:14:22Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((str.charAt(i)) == '_') return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/6379/buggy-version/src.cc.moecraft.hykilpikonna.lores.Utils.StringUtils.java", "BodyUseAPI": [], "Fixed commit": "fefd7e4b8df502cad4215fb545d41c238b973a3b", "Url": "https://api.github.com/repos/hykilpikonna/HyLores", "Date": "2017-06-15T13:21:24Z"},
{"Line": "=>1079", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (it.borove.playerborove.PlayerController.playingPlaylist) { it.borove.playerborove.PlayerController.musicSrv.pausePlayer(); it.borove.playerborove.PlayerController.musicSrv.seek(0); }else if (((it.borove.playerborove.PlayerController.musicSrv) != null) && (it.borove.playerborove.PlayerController.serviceConnected)) { it.borove.playerborove.PlayerController.lbm.registerReceiver(it.borove.playerborove.PlayerController.songPreparedReceiver, new android.content.IntentFilter(\"Prepared\")); it.borove.playerborove.PlayerController.musicSrv.stop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/2751/buggy-version/PlayerBoRoVe.src.it.borove.playerborove.PlayerController.java", "BodyUseAPI": [], "Fixed commit": "a2b71bf878444e0f86ac358ba2bb0c0f3e48e21c", "Url": "https://api.github.com/repos/WAFcoding/ProgettoMobileProgramming", "Date": "2014-12-13T14:45:39Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (values == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/4902/buggy-version/src.main.java.com.github.TKnudsen.ComplexDataObject.model.tools.DataConversion.java", "BodyUseAPI": [], "Fixed commit": "f50bffc38db5cc187aa6445e4f80c5699bd75231", "Url": "https://api.github.com/repos/TKnudsen/ComplexDataObject", "Date": "2017-06-21T16:12:01Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isAdded()) { if ((statusMessage) != null) android.widget.Toast.makeText(getActivity(), statusMessage, Toast.LENGTH_SHORT).show(); else android.widget.Toast.makeText(getActivity(), getString(R.string.err_check_internet), Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/4506/buggy-version/src.main.java.it.eternitywall.eternitywall.fragments.ListFragment.java", "BodyUseAPI": [], "Fixed commit": "1ae250aa03b88ea9034bf8d941b6b71b2bc5fda0", "Url": "https://api.github.com/repos/RCasatta/EternityWallAndroid", "Date": "2016-01-15T10:37:03Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (th.isValid()) { s.remove_torrent(th.getSwig()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/3700/buggy-version/src.com.frostwire.jlibtorrent.Session.java", "BodyUseAPI": ["com.frostwire.jlibtorrent.TorrentHandle.getSwig()", "com.frostwire.jlibtorrent.session.remove_torrent(th.getSwig())"], "Fixed commit": "8ab7fa55f001c21b2dd70eb0cb6b5320718a1b10", "Url": "https://api.github.com/repos/frostwire/frostwire-jlibtorrent", "Date": "2014-09-24T00:34:51Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (message.isEmpty()) message = \"No direction to display.\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/7214/buggy-version/src.dungeon.Dungeon.java", "BodyUseAPI": [], "Fixed commit": "7c33c25e327a302a58271886d33646859249851f", "Url": "https://api.github.com/repos/leoplo/Dungeon", "Date": "2015-10-01T16:57:39Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isPost && is2ch) { return org.monazilla.v2c.V2CHttpUtil.DEFAULT_UA; }else { return org.monazilla.v2c.V2CHttpUtil.IE_UA; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/8920/buggy-version/src.org.monazilla.v2c.V2CHttpUtil.java", "BodyUseAPI": [], "Fixed commit": "0144e058f28c5db8bcd45379b920a0203b082a27", "Url": "https://api.github.com/repos/v2c-patch/V2C_api", "Date": "2015-03-15T00:44:16Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((in.mycp.utils.Commons.EDITION_ENABLED) == (in.mycp.utils.Commons.SERVICE_PROVIDER_EDITION_ENABLED)) { c.setCurrency(in.mycp.domain.Company.findFirstCompany().getCurrency()); }else { c.setCurrency(Commons.CURRENCY_DEFAULT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/3224/buggy-version/src.main.java.in.mycp.controller.LoginController.java", "BodyUseAPI": [], "Fixed commit": "95dbf91d800c28dd0638c846f07963870db3ac5d", "Url": "https://api.github.com/repos/MCPTech/mycp", "Date": "2012-12-18T17:56:54Z"},
{"Line": "=>271", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mService.ContactInfo.get(i)) == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/5890/buggy-version/Leumi.src.com.pictureit.leumi.main.fragments.ServiceFragment.java", "BodyUseAPI": [], "Fixed commit": "beb4456cbb87a8a248642019d0f188067e22b95d", "Url": "https://api.github.com/repos/NoamBO/Pictureit", "Date": "2014-06-02T12:25:45Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mService.ContactInfo.get(i)) == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/5890/buggy-version/Leumi.src.com.pictureit.leumi.main.fragments.ServiceFragment.java", "BodyUseAPI": [], "Fixed commit": "beb4456cbb87a8a248642019d0f188067e22b95d", "Url": "https://api.github.com/repos/NoamBO/Pictureit", "Date": "2014-06-02T12:25:45Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((contactInfo.get(i)) == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/5890/buggy-version/Leumi.src.com.pictureit.leumi.main.fragments.ScreensHelper.java", "BodyUseAPI": [], "Fixed commit": "beb4456cbb87a8a248642019d0f188067e22b95d", "Url": "https://api.github.com/repos/NoamBO/Pictureit", "Date": "2014-06-02T12:25:45Z"},
{"Line": "=>305", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.github.ibuildthecloud.gdapi.context.ApiContext.getContext().getPolicy()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (policy == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/7357/buggy-version/code.iaas.auth-logic.src.main.java.io.cattle.platform.iaas.api.auth.dao.impl.AuthDaoImpl.java", "BodyUseAPI": [], "Fixed commit": "e93f41e85afae421d6012c52fc468c82c5e54424", "Url": "https://api.github.com/repos/hibooboo2/cattle", "Date": "2015-04-07T01:32:49Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cost == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/3439/buggy-version/service.src.main.java.ru.iav.takoe.countee.service.CostCommentsService.java", "BodyUseAPI": [], "Fixed commit": "8b7ec4df1f5c71b7bbbe8c2ba78e8c8ee75f13e9", "Url": "https://api.github.com/repos/iav0207/countee", "Date": "2017-08-12T14:35:01Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.text.NumberFormat.format(double)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((com.amsen.par.cewlrency.base.util.CurrencyUtil.isCurrencySymbolBeforeValueInLocale) && (!(formatted.contains(\" \")))) { java.lang.String symbol = formatted.substring(0, currency.getSymbol().length()); java.lang.String valueString = formatted.substring(currency.getSymbol().length(), formatted.length()); return (symbol + \" \") + valueString; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/4253/buggy-version/app.src.main.java.com.amsen.par.cewlrency.base.util.CurrencyUtil.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "b989a3d97b20e05a596ecd852a07767f52b0e2ba", "Url": "https://api.github.com/repos/paramsen/currency-android-reactive", "Date": "2016-10-09T00:40:23Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["firefighters.actions.Planner.discoverPossiblePlans(firefighters.agent.Agent)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((possiblePlans.size()) == 0) return new firefighters.actions.Plan(new java.util.ArrayList<firefighters.actions.AbstractAction>()); else return java.util.Collections.max(possiblePlans, new firefighters.utility.PlanUtilityComparator(utilityFunction, agent));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/1441/buggy-version/src.firefighters.actions.Planner.java", "BodyUseAPI": ["java.util.Collections.max(java.util.List<firefighters.actions.Plan>,firefighters.utility.PlanUtilityComparator)"], "Fixed commit": "ec72f9ef6fe026810d695ec5a98b63ba20fff150", "Url": "https://api.github.com/repos/WimLogister/mas-firefighters", "Date": "2015-12-13T17:36:51Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (list == null) { list = new java.util.ArrayList<it.geosolutions.geostore.services.rest.model.RESTSecurityRule>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/8554/buggy-version/src.server.modules.rest.impl.src.main.java.it.geosolutions.geostore.services.rest.utils.Convert.java", "BodyUseAPI": [], "Fixed commit": "ad658aa1cfa27027944f34c3ed3de3e2558da7bb", "Url": "https://api.github.com/repos/Damianofds/geostore", "Date": "2014-07-03T14:04:16Z"},
{"Line": "=>1929", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (standardPanelUc.isVisible()) { standardPanelUc.setVisible(true); }else { standardPanelUc.setVisible(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/7965/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.search.SearchFilterVc.java", "BodyUseAPI": ["com.google.gwt.user.client.ui.HTMLPanel.setVisible(boolean)", "com.google.gwt.user.client.ui.HTMLPanel.setVisible(boolean)"], "Fixed commit": "2d9aca5f7fd1fe73bd0cedc9bd40a49f13ba7e12", "Url": "https://api.github.com/repos/VinRudramurthy/Gooru-Web", "Date": "2014-12-11T11:45:55Z"},
{"Line": "=>1980", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (standardPanelUc.isVisible()) { standardPanelUc.setVisible(true); }else { standardPanelUc.setVisible(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/7965/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.search.SearchFilterVc.java", "BodyUseAPI": ["com.google.gwt.user.client.ui.HTMLPanel.setVisible(boolean)", "com.google.gwt.user.client.ui.HTMLPanel.setVisible(boolean)"], "Fixed commit": "2d9aca5f7fd1fe73bd0cedc9bd40a49f13ba7e12", "Url": "https://api.github.com/repos/VinRudramurthy/Gooru-Web", "Date": "2014-12-11T11:45:55Z"},
{"Line": "=>1961", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (standardPanelUc.isVisible()) { standardPanelUc.setVisible(true); }else { standardPanelUc.setVisible(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/7965/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.search.SearchFilterVc.java", "BodyUseAPI": ["com.google.gwt.user.client.ui.HTMLPanel.setVisible(boolean)", "com.google.gwt.user.client.ui.HTMLPanel.setVisible(boolean)"], "Fixed commit": "2d9aca5f7fd1fe73bd0cedc9bd40a49f13ba7e12", "Url": "https://api.github.com/repos/VinRudramurthy/Gooru-Web", "Date": "2014-12-11T11:45:55Z"},
{"Line": "=>1943", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (standardPanelUc.isVisible()) { standardPanelUc.setVisible(true); }else { standardPanelUc.setVisible(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/7965/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.search.SearchFilterVc.java", "BodyUseAPI": ["com.google.gwt.user.client.ui.HTMLPanel.setVisible(boolean)", "com.google.gwt.user.client.ui.HTMLPanel.setVisible(boolean)"], "Fixed commit": "2d9aca5f7fd1fe73bd0cedc9bd40a49f13ba7e12", "Url": "https://api.github.com/repos/VinRudramurthy/Gooru-Web", "Date": "2014-12-11T11:45:55Z"},
{"Line": "=>2268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (standardPanelUc.isVisible()) { standardPanelUc.setVisible(true); }else { standardPanelUc.setVisible(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/7965/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.search.SearchFilterVc.java", "BodyUseAPI": ["com.google.gwt.user.client.ui.HTMLPanel.setVisible(boolean)", "com.google.gwt.user.client.ui.HTMLPanel.setVisible(boolean)"], "Fixed commit": "2d9aca5f7fd1fe73bd0cedc9bd40a49f13ba7e12", "Url": "https://api.github.com/repos/VinRudramurthy/Gooru-Web", "Date": "2014-12-11T11:45:55Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((curLoc) == null) { android.widget.Toast.makeText(this, getResources().getString(R.string.location_not_found), Toast.LENGTH_LONG).show(); throw new java.lang.RuntimeException(\"No GPS Found\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/7012/buggy-version/src.org.mixare.MixContext.java", "BodyUseAPI": [], "Fixed commit": "44ac367080e1ea699c531e1bfe5b0fba933adff2", "Url": "https://api.github.com/repos/abduegal/mixare", "Date": "2012-03-26T16:14:21Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.thelearningtriangle.mapbuilder.ui.OverworldPanel.getMap()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!((((fieldX == 0) || (fieldY == 0)) || (fieldX == ((map.length) - 1))) || (fieldY == ((map.length) - 1)))) { if (e.isShiftDown()) { map[fieldY][fieldX] = (((map[fieldY][fieldX])--) < 2) ? 5 : (map[fieldY][fieldX])--; }else { map[fieldY][fieldX] = (((map[fieldY][fieldX])++) > 4) ? 1 : (map[fieldY][fieldX])++; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/660/buggy-version/TheLearningTriangle-MapBuilder.src.de.thelearningtriangle.mapbuilder.core.MouseController.java", "BodyUseAPI": [], "Fixed commit": "5d3eee995985570821ecd3ef807d48d1ba46174c", "Url": "https://api.github.com/repos/KingMus/thelearningtriangle-mapbuilder", "Date": "2017-10-16T11:24:31Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((firebaseGetReviewsListManager) != null) firebaseGetReviewsListManager.terminate();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/5669/buggy-version/app.src.main.java.it.polito.mad_lab4.restaurant.reviews_prev.ReviewsPrevFragment.java", "BodyUseAPI": [], "Fixed commit": "e14746ed856944f4a608be3a2d2de66ae30c7552", "Url": "https://api.github.com/repos/FabioGermano/MAD_Lab4", "Date": "2016-09-16T11:55:05Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((((filename.endsWith(\".entries\")) || (filename.endsWith(\".header\"))) || (filename.endsWith(\".entries.txt\"))) || (filename.endsWith(\"header.txt\")))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/1033/buggy-version/src.org.broad.igv.goby.GobyAlignmentQueryReader.java", "BodyUseAPI": [], "Fixed commit": "ae6d9fd7817a54f1b8e5ce3bda064ccd22c8385d", "Url": "https://api.github.com/repos/broadinstitute/IGV", "Date": "2012-07-20T18:04:30Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((mmr.extractMetadata(MediaMetadataRetriever.METADATA_KEY_DURATION)) != null) { durationInMilliseconds = mmr.extractMetadata(MediaMetadataRetriever.METADATA_KEY_DURATION); duration = (java.lang.Integer.parseInt(durationInMilliseconds)) / 1000; tracksMinutes = ((duration) / 60) + \"\"; if ((((duration) % 60) / 10) == 0) tracksSeconds = \"0\" + ((duration) % 60); else tracksSeconds = ((duration) % 60) + \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/8506/buggy-version/MusicPlayer.app.src.main.java.com.example.user1.musicplayer.Track.java", "BodyUseAPI": [], "Fixed commit": "1e3ac7383ac7fe616106db0b7391d84751de12e2", "Url": "https://api.github.com/repos/JohnRoz/Music-Player", "Date": "2016-10-17T12:12:48Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((progressIndicator) != null) { progressIndicator.setAlpha(0.0F); progressIndicator.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/6514/buggy-version/app.src.main.java.com.buddybuild.ui.ProgressIndicatorDelegate.java", "BodyUseAPI": [], "Fixed commit": "dc5071a790ef13a51f45e0bb8f30568461fb2d2e", "Url": "https://api.github.com/repos/tir38/android-buddybuild", "Date": "2017-06-08T04:03:02Z"},
{"Line": "=>355", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.geeksfactory.opacclient.apis.IOpac.getQueryParamsFirst(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (params.containsKey(\"recno\")) { int recno = java.lang.Integer.valueOf(params.get(\"recno\")); sr.setNr((((10 * (page - 1)) + recno) - 1)); }else { sr.setNr(((10 * (page - 1)) + i)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/8000/buggy-version/src.de.geeksfactory.opacclient.apis.IOpac.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)", "java.lang.Integer.valueOf(java.lang.String)"], "Fixed commit": "4267f7baa5c801c1cab46f64b02737e07ef4bc6b", "Url": "https://api.github.com/repos/raphaelm/opacclient", "Date": "2014-10-06T18:47:13Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((this.book.getImage()) != null) { path = this.book.getImage(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/530/buggy-version/LMS.src.view.BookDetail.java", "BodyUseAPI": [], "Fixed commit": "be20b758f73914d0835b25cce800bb70f46c5431", "Url": "https://api.github.com/repos/songulabuzar/CS535-LibraryManagementSystem", "Date": "2016-11-29T15:21:53Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.viper.net.server.Util.getDefaultFile(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (defaultFile != null) { fileMap.put(relativePath, defaultFile); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/5778/buggy-version/src.main.java.io.viper.net.server.Util.java", "BodyUseAPI": ["java.util.Map<java.lang.String, io.viper.net.server.chunkproxy.FileContentInfo>.put(java.lang.String,io.viper.net.server.chunkproxy.FileContentInfo)"], "Fixed commit": "7145cf13df43d4a1685d46df00939bae69e328ef", "Url": "https://api.github.com/repos/briangu/viper.io", "Date": "2011-09-16T22:01:26Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.nbt.NBTTagCompound.getInteger(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (level >= 1) base *= java.lang.Math.pow(IguanaConfig.xpPerLevelMultiplier, (level - 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/1088/buggy-version/src.iguanaman.iguanatweakstconstruct.IguanaLevelingLogic.java", "BodyUseAPI": ["java.lang.Math.pow(IguanaConfig.xpPerLevelMultiplier,int)"], "Fixed commit": "16eab2a222d1499d4ef97a38738b8e3a7b88be99", "Url": "https://api.github.com/repos/iguanaman/IguanaTweaksTConstruct", "Date": "2013-12-06T15:23:24Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fr.mathdu07.visualshop.VsTransaction.writer) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/82/buggy-version/src.fr.mathdu07.visualshop.VsTransaction.java", "BodyUseAPI": [], "Fixed commit": "119113d8b7606fc0adc0b4dfd97f524ffc752a89", "Url": "https://api.github.com/repos/mathdu07/VisualShop", "Date": "2013-10-29T22:56:22Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((shopSaver) != null) shopSaver.onDisable();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/82/buggy-version/src.fr.mathdu07.visualshop.VisualShop.java", "BodyUseAPI": [], "Fixed commit": "119113d8b7606fc0adc0b4dfd97f524ffc752a89", "Url": "https://api.github.com/repos/mathdu07/VisualShop", "Date": "2013-10-29T22:56:22Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((task) != null) task.cancel();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/82/buggy-version/src.fr.mathdu07.visualshop.VisualShop.java", "BodyUseAPI": [], "Fixed commit": "119113d8b7606fc0adc0b4dfd97f524ffc752a89", "Url": "https://api.github.com/repos/mathdu07/VisualShop", "Date": "2013-10-29T22:56:22Z"},
{"Line": "=>351", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (file.exists()) { currentMtl.kdMap = parent.loadImage(texname); }else { java.lang.System.err.println(((((((((\"The texture map \\\"\" + texname) + \"\\\" \") + \"in the materials definition file \\\"\") + mtlfn) + \"\\\" \") + \"is missing or inaccessible, make sure \") + \"the URL is valid or that the file has been \") + \"added to your sketch and is readable.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/4149/buggy-version/core.src.processing.core.PShapeOBJ.java", "BodyUseAPI": [], "Fixed commit": "49a4c815557214fc1bf92e381ffaa398f262361a", "Url": "https://api.github.com/repos/GKFX/processing", "Date": "2016-05-11T10:24:09Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.tel.moccha.entities.course.Course.getGroupDates()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (groupDates == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/8020/buggy-version/Moccha-Android.src.de.tel.moccha.activities.fragments.course.CourseFragment.java", "BodyUseAPI": [], "Fixed commit": "5dd1d683b1501a7e30e7a6258bfd44c322697d33", "Url": "https://api.github.com/repos/QULab/MoCCha-Android", "Date": "2015-07-14T17:32:16Z"},
{"Line": "=>414", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (record != null) { if (!(usersInTransaction.contains(record.getId()))) { users.add(com.constellio.model.entities.records.wrappers.User.wrapNullable(record, types, roles)); } }else { com.constellio.model.services.records.RecordAutomaticMetadataServices.LOGGER.warn(\"Null record returned while getting all users\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/3440/buggy-version/model.src.com.constellio.model.services.records.RecordAutomaticMetadataServices.java", "BodyUseAPI": ["com.constellio.model.entities.records.wrappers.User.wrapNullable(com.constellio.model.entities.records.Record,com.constellio.model.entities.schemas.MetadataSchemaTypes,com.constellio.model.services.security.roles.Roles)", "com.constellio.model.entities.records.Record.getId()", "java.util.Set<java.lang.String>.contains(record.getId())", "java.util.List<com.constellio.model.entities.records.wrappers.User>.add(com.constellio.model.entities.records.wrappers.User.wrapNullable(record, types, roles))"], "Fixed commit": "ae4e2ed89c9ddb880e0506d61a642f2cc682e9c1", "Url": "https://api.github.com/repos/doculibre/constellio", "Date": "2017-11-21T17:35:27Z"},
{"Line": "=>404", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (record != null) { if (!(groupsInTransaction.contains(record.getId()))) { groups.add(com.constellio.model.entities.records.wrappers.Group.wrapNullable(record, types)); } }else { com.constellio.model.services.records.RecordAutomaticMetadataServices.LOGGER.warn(\"Null record returned while getting all groups\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/3440/buggy-version/model.src.com.constellio.model.services.records.RecordAutomaticMetadataServices.java", "BodyUseAPI": ["com.constellio.model.entities.records.Record.getId()", "java.util.Set<java.lang.String>.contains(record.getId())", "com.constellio.model.entities.records.wrappers.Group.wrapNullable(com.constellio.model.entities.records.Record,com.constellio.model.entities.schemas.MetadataSchemaTypes)", "java.util.List<com.constellio.model.entities.records.wrappers.Group>.add(com.constellio.model.entities.records.wrappers.Group.wrapNullable(record, types))"], "Fixed commit": "ae4e2ed89c9ddb880e0506d61a642f2cc682e9c1", "Url": "https://api.github.com/repos/doculibre/constellio", "Date": "2017-11-21T17:35:27Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["it.polito.mad.countonme.ExpensesListFragment.getArguments()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (args != null) setData(args.getString(AppConstants.SHARING_ACTIVITY_KEY));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/2320/buggy-version/app.src.main.java.it.polito.mad.countonme.ExpensesListFragment.java", "BodyUseAPI": ["android.os.Bundle.getString(AppConstants.SHARING_ACTIVITY_KEY)", "it.polito.mad.countonme.ExpensesListFragment.setData(args.getString(AppConstants.SHARING_ACTIVITY_KEY))"], "Fixed commit": "10dfd51840d00938b47e41ae6e0cc6a69d783394", "Url": "https://api.github.com/repos/madgroup17/countonme", "Date": "2017-05-11T19:33:38Z"},
{"Line": "=>348", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isPlaying && (!(artwork.sameAs(lastBitmap)))) { java.io.FileOutputStream fos = null; java.io.ByteArrayOutputStream stream = new java.io.ByteArrayOutputStream(); artwork.compress(Bitmap.CompressFormat.PNG, 100, stream); try { fos = new java.io.FileOutputStream(artworkFile); stream.writeTo(fos); } catch (java.io.IOException e) { e.printStackTrace(); } finally { try { if (fos != null) fos.close(); stream.close(); } catch (java.io.IOException e) { e.printStackTrace(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/5067/buggy-version/QuickLyric.src.main.java.com.geecko.QuickLyric.services.NotificationListenerService.java", "BodyUseAPI": ["android.graphics.Bitmap.compress(Bitmap.CompressFormat.PNG,int,java.io.ByteArrayOutputStream)"], "Fixed commit": "dc302e2a9ffafd781b1895b95beb31391289aba2", "Url": "https://api.github.com/repos/QuickLyric/QuickLyric", "Date": "2017-04-02T18:02:40Z"},
{"Line": "=>650", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((minCategory != (-1)) && (maxCategory != (-1))) { com.orange.groupbuy.manager.ProductManager.addCategoryRangeIntoQuery(query, minCategory, maxCategory); }else { com.orange.groupbuy.manager.ProductManager.addCategoryIntoQuery(query, categoryList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/1058/buggy-version/src.com.orange.groupbuy.manager.ProductManager.java", "BodyUseAPI": ["com.orange.groupbuy.manager.ProductManager.addCategoryRangeIntoQuery(com.mongodb.DBObject,int,int)"], "Fixed commit": "7f03b690c950b599761f957680ae84b7894c98dc", "Url": "https://api.github.com/repos/gckjdev/Common_Java_GroupBuy", "Date": "2011-11-18T13:15:53Z"},
{"Line": "=>560", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event.getProject()) == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/7108/buggy-version/src.org.jboss.errai.idea.plugin.util.Util.java", "BodyUseAPI": [], "Fixed commit": "25823aaf9dd438d76b6c8b5ca76343b7e90c149d", "Url": "https://api.github.com/repos/lukasherman/errai-intellij-idea-plugin", "Date": "2014-11-06T13:03:04Z"},
{"Line": "=>565", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.openapi.actionSystem.AnActionEvent.getData(DataKeys.IDE_VIEW)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (view == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/7108/buggy-version/src.org.jboss.errai.idea.plugin.util.Util.java", "BodyUseAPI": [], "Fixed commit": "25823aaf9dd438d76b6c8b5ca76343b7e90c149d", "Url": "https://api.github.com/repos/lukasherman/errai-intellij-idea-plugin", "Date": "2014-11-06T13:03:04Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["it.polimi.modaclouds.recedingHorizonScaling4Cloud.util.ConfigManager.getPathToFile(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (f.toString().equals(folder.toString())) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/2728/buggy-version/src.main.java.it.polimi.modaclouds.recedingHorizonScaling4Cloud.sshConnector.SshAdapter.java", "BodyUseAPI": [], "Fixed commit": "54f162c5d969e4d1b6781f269d9d56a3719ae38c", "Url": "https://api.github.com/repos/deib-polimi/modaclouds-autoscalingReasoner", "Date": "2015-09-24T00:23:57Z"},
{"Line": "=>487", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((accountNameList.size()) > 0) { accountPicker.setMaxValue(((accountNameList.size()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/8589/buggy-version/app.src.main.java.com.zhan.budget.Activity.TransactionInfoActivity.java", "BodyUseAPI": ["java.util.List<java.lang.String>.size()", "com.zhan.budget.View.ExtendedNumberPicker.setMaxValue(int)"], "Fixed commit": "0c9e2106d220547370d5ea34a82acf347c575637", "Url": "https://api.github.com/repos/zhanhui913/Budget", "Date": "2016-03-09T01:13:58Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getDbHandler()) != null) td.olap.computer.consist.XidManager.setSpoutSize(dbHandler, name, spoutNum);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/1395/buggy-version/src.main.java.td.olap.computer.mode.Topology.java", "BodyUseAPI": [], "Fixed commit": "9f05226ea71449217ffb16ee49ed1d371d65ea12", "Url": "https://api.github.com/repos/Yoruichi/stream-compute", "Date": "2016-08-19T05:05:34Z"},
{"Line": "=>382", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (e.getValueIsAdjusting()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/4599/buggy-version/src.main.java.net.joshuahughes.smokercontroller.controller.SwingController.java", "BodyUseAPI": [], "Fixed commit": "e40ed1048ce5b57eda0a29ca81bb43f08be767d7", "Url": "https://api.github.com/repos/zhughesjd/cookcontrol", "Date": "2016-02-28T09:57:06Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((content) == null) { content = ((org.cnx.android.beans.Content) (org.cnx.android.utils.ContentCache.getObject(getString(R.string.webcontent)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/2060/buggy-version/app.src.main.java.org.cnx.android.activity.WebViewActivity.java", "BodyUseAPI": [], "Fixed commit": "7552239494e88b66dc99666f4ae24856bcc882a8", "Url": "https://api.github.com/repos/Connexions/CNXAndroid", "Date": "2015-08-18T01:03:17Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class<? extends edu.duke.ra.core.RAConfig>.getResourceAsStream(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (propsFile == null) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/7774/buggy-version/ra-core.src.main.java.edu.duke.ra.core.RAConfig.java", "BodyUseAPI": [], "Fixed commit": "67f733d0f478aef5f933118807c98bfa4d35c3b7", "Url": "https://api.github.com/repos/bashism/RA-ng", "Date": "2014-12-08T15:16:27Z"},
{"Line": "=>713", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!isHeapLessThan32G) { if ((jvm.getUseCompressedOopsEnabled()) != null) { analysisKeys.add(Analysis.ERROR_COMP_OOPS_ENABLED_HEAP_GT_32G); } if ((jvm.getUseCompressedClassPointersEnabled()) != null) { analysisKeys.add(Analysis.WARN_COMP_CLS_SPC_ENBLD_HEAP_GT_32G); } if ((jvm.getCompressedClassSpaceSize()) != null) { analysisKeys.add(Analysis.WARN_COMP_CLS_SPC_SET_HEAP_GT_32G); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/6575/buggy-version/src.main.java.org.eclipselabs.garbagecat.domain.JvmRun.java", "BodyUseAPI": [], "Fixed commit": "a974e3417032e257b2357415414d73ebe742889f", "Url": "https://api.github.com/repos/mgm3746/garbagecat", "Date": "2017-01-17T17:29:46Z"},
{"Line": "=>341", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((model.getValueAt(((model.getRowCount()) - 1), 2)) != (model.getValueAt(0, 2))) { javax.swing.JOptionPane.showMessageDialog(thePanel, \"More than one player is present, please clear table\", \"Failure\", javax.swing.JOptionPane.ERROR_MESSAGE); }else { sb = new java.lang.StringBuilder(); playerName = model.getValueAt(0, 2).toString(); sb.append(((\"name: \" + playerName) + \"\\n\")); java.lang.System.out.println(sb); for (int j = 4; j < (model.getColumnCount()); j++) { columnValue = 0; columnName = model.getColumnName(j); for (int i = 0; i < (model.getRowCount()); i++) { columnValue += java.lang.Double.valueOf(model.getValueAt(i, j).toString()); } average = columnValue / (model.getRowCount()); sb.append((((columnName + \": \") + (df.format(average))) + \"\\n\")); } javax.swing.JOptionPane.showMessageDialog(thePanel, sb, ((\"Player \" + playerName) + \"'s Average Stats\"), javax.swing.JOptionPane.PLAIN_MESSAGE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/2266/buggy-version/src.UI.java", "BodyUseAPI": ["java.lang.Double.valueOf(java.lang.String)", "javax.swing.table.DefaultTableModel.getColumnCount()", "javax.swing.table.DefaultTableModel.getValueAt(int,int)", "java.lang.Object.toString()", "javax.swing.table.DefaultTableModel.getRowCount()", "javax.swing.table.DefaultTableModel.getColumnName(int)", "javax.swing.table.DefaultTableModel.getValueAt(int,int)", "java.lang.Object.toString()", "javax.swing.table.DefaultTableModel.getRowCount()"], "Fixed commit": "aab27fa8842f11276524daad9e94a961a1504ba7", "Url": "https://api.github.com/repos/biqiaoran629/NbaDb", "Date": "2016-01-20T10:54:03Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(student.getPhoneNumber()))) { android.telephony.SmsManager.getDefault().sendTextMessage(student.getPhoneNumber(), null, textMessage, null, null); }else { android.widget.Toast.makeText(context, context.getString(R.string.phone_number_invalid), Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/4689/buggy-version/mobile.src.main.java.com.smentkowski.apps.utilities.planager.receivers.TextMessageReceiver.java", "BodyUseAPI": ["android.telephony.SmsManager.getDefault().sendTextMessage(student.getPhoneNumber(),<nulltype>,java.lang.String,<nulltype>,<nulltype>)", "com.smentkowski.apps.utilities.planager.objects.Student.getPhoneNumber()"], "Fixed commit": "dcc0ac5b7991319e18aa6d635004334a88c73944", "Url": "https://api.github.com/repos/asmenter15/LessonOrganizer", "Date": "2015-11-24T02:59:16Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentSteps) < (halfWay)) { oneShotHalfWay = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/4620/buggy-version/app.src.main.java.hiteware.com.halfwaythere.StepService.java", "BodyUseAPI": [], "Fixed commit": "62ccfeca9aa38ca83db33e21c889b14e112f627f", "Url": "https://api.github.com/repos/hite77/HalfWayThere", "Date": "2015-06-25T17:03:53Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((foodID) != (-1)) TFC.Food.ItemFoodTFC.FoodList[foodID] = this.itemID;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/4946/buggy-version/TFC_Shared.src.TFC.Food.ItemFoodTFC.java", "BodyUseAPI": [], "Fixed commit": "d02671422da6a5880644ca4712808d7156c8c710", "Url": "https://api.github.com/repos/oldmanmike/TFCraft", "Date": "2014-02-11T23:27:23Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.laytonsmith.core.functions.Static.getServer().getWorld(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (w == null) { throw new com.laytonsmith.core.exceptions.ConfigRuntimeException(((\"The specified world \\\"\" + world) + \"\\\" is not a valid world.\"), com.laytonsmith.core.functions.Exceptions.ExceptionType.InvalidWorldException, t); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/4066/buggy-version/src.main.java.com.laytonsmith.core.functions.World.java", "BodyUseAPI": [], "Fixed commit": "a12b7795e90f1b82d41f246baeeb2e1c80f0a3e7", "Url": "https://api.github.com/repos/sk89q/commandhelper", "Date": "2012-09-06T04:35:29Z"},
{"Line": "=>698", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (persister.hasIndex()) { whereType = persister.getIndexType(); }else { whereType = persister.getElementType(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/5268/buggy-version/hibernate-core.src.main.java.org.hibernate.collection.internal.AbstractPersistentCollection.java", "BodyUseAPI": ["org.hibernate.persister.collection.CollectionPersister.getElementType()", "org.hibernate.persister.collection.CollectionPersister.getIndexType()"], "Fixed commit": "de3ce125bcdf60e9144e641409dc06494dbda4a6", "Url": "https://api.github.com/repos/hibernate/hibernate-orm", "Date": "2015-01-14T11:27:32Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["context.prepareSelect((\"select ar.id, ar.profile_id from active_rules ar \" + (\"left outer join active_rule_parameters arp on arp.active_rule_id=ar.id and arp.rules_parameter_id=? \" + \"where ar.rule_id=? and arp.id is null\"))).setLong(1, ruleParameter.id).setLong(2, ruleParameter.ruleId).list(org.sonar.server.db.migrations.Select.RowReader<org.sonar.server.db.migrations.v45.AddMissingRuleParameterDefaultValuesMigration.ActiveRule>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(activeRules.isEmpty())) { upsert.execute().commit().close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/3025/buggy-version/server.sonar-server.src.main.java.org.sonar.server.db.migrations.v45.AddMissingRuleParameterDefaultValuesMigration.java", "BodyUseAPI": [], "Fixed commit": "00226da4bc66a3d7be00f14dca98bb6d26e06189", "Url": "https://api.github.com/repos/SonarSource/sonarqube", "Date": "2014-07-22T08:30:08Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["context.prepareSelect((\"select ar.id, ar.profile_id from active_rules ar \" + (\"left outer join active_rule_parameters arp on arp.active_rule_id=ar.id and arp.rules_parameter_id=? \" + \"where ar.rule_id=? and arp.id is null\"))).setLong(1, ruleParameter.id).setLong(2, ruleParameter.ruleId).list(org.sonar.server.db.migrations.Select.RowReader<org.sonar.server.db.migrations.v45.AddMissingRuleParameterDefaultValuesMigration.ActiveRule>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(activeRules.isEmpty())) { upsert.execute().commit().close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/3025/buggy-version/server.sonar-server.src.main.java.org.sonar.server.db.migrations.v45.AddMissingRuleParameterDefaultValuesMigration.java", "BodyUseAPI": [], "Fixed commit": "00226da4bc66a3d7be00f14dca98bb6d26e06189", "Url": "https://api.github.com/repos/SonarSource/sonarqube", "Date": "2014-07-22T08:30:08Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getFrom().distance(e.getTo())) > 0) { if ((e.getPlayer().getItemInHand().getType()) == (org.bukkit.Material.TORCH)) { org.bukkit.block.Block block = e.getPlayer().getLocation().getBlock().getRelative(BlockFace.DOWN); if (((((((((block.getType()) == (org.bukkit.Material.AIR)) || ((block.getType()) == (org.bukkit.Material.WATER))) || ((block.getType()) == (org.bukkit.Material.STATIONARY_WATER))) || ((block.getType()) == (org.bukkit.Material.LAVA))) || ((block.getType()) == (org.bukkit.Material.STATIONARY_LAVA))) || ((block.getType()) == (org.bukkit.Material.LONG_GRASS))) || ((block.getType()) == (org.bukkit.Material.RED_ROSE))) || (block.getType().isTransparent())) { return; } e.getPlayer().sendBlockChange(block.getLocation(), Material.GLOWSTONE, block.getData()); tv.mineinthebox.torch.torchEvent.getTrailList(e.getPlayer()).add(block.getState()); tv.mineinthebox.torch.torchEvent.removeGlow(e.getPlayer()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/3548/buggy-version/torch.src.tv.mineinthebox.torch.torchEvent.java", "BodyUseAPI": ["e.getPlayer().getLocation().getBlock()", "org.bukkit.event.player.PlayerMoveEvent.getPlayer()", "e.getPlayer().getLocation().getBlock().getRelative(BlockFace.DOWN)", "e.getPlayer().getLocation()", "tv.mineinthebox.torch.torchEvent.getTrailList(e.getPlayer())", "org.bukkit.event.player.PlayerMoveEvent.getPlayer()", "e.getPlayer().sendBlockChange(block.getLocation(),Material.GLOWSTONE,block.getData())", "org.bukkit.event.player.PlayerMoveEvent.getPlayer()", "java.util.LinkedList<org.bukkit.block.BlockState>.add(block.getState())", "org.bukkit.event.player.PlayerMoveEvent.getPlayer()", "tv.mineinthebox.torch.torchEvent.removeGlow(e.getPlayer())", "e.getPlayer().getItemInHand().getType()", "e.getPlayer().getItemInHand()", "org.bukkit.event.player.PlayerMoveEvent.getPlayer()"], "Fixed commit": "f843e865bd7b4f66627869ea4e5688b74d391447", "Url": "https://api.github.com/repos/xize/torch", "Date": "2013-12-04T16:05:52Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.operamdo.lockscreennotification.StatusBarNotificationCache.getStatusBarNotification()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (statusBarNotifications == null) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/1416/buggy-version/app.src.main.java.com.operamdo.lockscreennotification.NotificationWidgetService.java", "BodyUseAPI": [], "Fixed commit": "79e80c806ddf9ac3c34423ce9c72ef1c14c9f96a", "Url": "https://api.github.com/repos/operando/LockScreenNotification", "Date": "2014-10-13T05:28:43Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((character.getSprite()) != null) { character.getSprite().draw(batch); character.getSprite().setPosition(((character.getCurrentTerrain().getX()) * (gameState.getMap().getTileWidth())), ((character.getCurrentTerrain().getY()) * (gameState.getMap().getTileHeight()))); }else { updatePlayers(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/1063/buggy-version/PTS3-Game.core.src.com.game.pts3.ScreenGame.java", "BodyUseAPI": ["character.getSprite().draw(com.badlogic.gdx.graphics.g2d.SpriteBatch)", "character.getCurrentTerrain().getY()", "java.lang.Character.getCurrentTerrain()", "java.lang.Character.getCurrentTerrain()", "java.lang.Character.getSprite()", "character.getCurrentTerrain().getX()", "java.lang.Character.getSprite()", "character.getSprite().setPosition(((character.getCurrentTerrain().getX()) * (gameState.getMap().getTileWidth())),((character.getCurrentTerrain().getY()) * (gameState.getMap().getTileHeight())))"], "Fixed commit": "73db6bf9bff0587e85d6c8d308dd39a5b84fe1a7", "Url": "https://api.github.com/repos/Red-mar/PTS3Game", "Date": "2017-10-05T16:54:56Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.jface.viewers.SelectionChangedEvent.getSelection()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (treeSelection.isEmpty()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/2477/buggy-version/org.strategoxt.imp.runtime.src.org.strategoxt.imp.runtime.services.outline.SpoofaxOutlinePage.java", "BodyUseAPI": [], "Fixed commit": "ad7a2391b526dbd2548e0a4e1c0036d1594710ac", "Url": "https://api.github.com/repos/metaborg/spoofax", "Date": "2013-06-29T06:41:42Z"},
{"Line": "=>315", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.sqlite.SQLiteDatabase.query(SongData.TABLE_NAME,java.lang.String[],<nulltype>,<nulltype>,<nulltype>,<nulltype>,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((cursor.getInt(1)) == 0) { return \"None\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/6018/buggy-version/src.com.wsiia.database.GameDatabaseHelper.java", "BodyUseAPI": [], "Fixed commit": "f4d7aacfc820732e066d3829c7200c2d087c24b9", "Url": "https://api.github.com/repos/Bandits789/WhatSongIsItAnyway", "Date": "2014-06-19T02:23:16Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (parent == null) { root = successor; }else { if (isLeft) { parent.setLeftChild(successor); }else { parent.setRightChild(successor); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/1340/buggy-version/src.main.java.com.paoying.tree.BinarySearchTree.java", "BodyUseAPI": ["com.paoying.tree.BinaryTreeNode.setRightChild(com.paoying.tree.BinaryTreeNode)", "com.paoying.tree.BinaryTreeNode.setLeftChild(com.paoying.tree.BinaryTreeNode)"], "Fixed commit": "a737dba6de3053da5be5b9ac9bda03ea86ef9d10", "Url": "https://api.github.com/repos/JanTemp/core", "Date": "2015-10-19T15:06:40Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (parent == null) { root = ((current.getLeftChild()) == null) ? current.getRightChild() : current.getLeftChild(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/1340/buggy-version/src.main.java.com.paoying.tree.BinarySearchTree.java", "BodyUseAPI": [], "Fixed commit": "a737dba6de3053da5be5b9ac9bda03ea86ef9d10", "Url": "https://api.github.com/repos/JanTemp/core", "Date": "2015-10-19T15:06:40Z"},
{"Line": "=>1785", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jitsi.videobridge.IceUdpTransportManager.getStreamTarget()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (target != null) { try { rtpConnector.addTarget(new org.jitsi.videobridge.SessionAddress(target.getDataAddress().getAddress(), target.getDataAddress().getPort())); } catch (java.io.IOException ioe) { org.jitsi.videobridge.IceUdpTransportManager.logger.warn((\"Failed to add target to DTLS connector: \" + ioe)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/8095/buggy-version/src.org.jitsi.videobridge.IceUdpTransportManager.java", "BodyUseAPI": ["org.jitsi.videobridge.MediaStreamTarget.getDataAddress()", "target.getDataAddress().getAddress()", "org.jitsi.videobridge.AbstractRTPConnector.addTarget(org.jitsi.videobridge.SessionAddress)", "org.jitsi.videobridge.MediaStreamTarget.getDataAddress()", "target.getDataAddress().getPort()"], "Fixed commit": "2f142453e3b11b109b0c73e8664f2072aea8ae60", "Url": "https://api.github.com/repos/jitsi/jitsi-videobridge", "Date": "2014-09-09T17:25:49Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["daoFactory.getSavedQueryDao().getQuery(req.getPayload())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (savedQuery == null) { return com.krishagni.catissueplus.core.common.events.ResponseEvent.userError(SavedQueryErrorCode.NOT_FOUND); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/3307/buggy-version/WEB-INF.src.com.krishagni.catissueplus.core.de.services.impl.QueryServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "f9c8eab0bf58d92f8b2463456713576e5e997068", "Url": "https://api.github.com/repos/krishagni/openspecimen", "Date": "2015-02-27T06:47:39Z"},
{"Line": "=>319", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((((op) == (ConvOp.MAX_POOLING_BACKWARD)) || ((op) == (ConvOp.DIRECT_CONV2D))) || ((op) == (ConvOp.DIRECT_CONV2D_BACKWARD_FILTER))) || ((op) == (ConvOp.DIRECT_CONV2D_BACKWARD_DATA))) { params = new org.apache.sysml.runtime.matrix.data.LibMatrixDNN.ConvolutionParameters(extractValue(getInput().get(6)), extractValue(getInput().get(7)), extractValue(getInput().get(8)), extractValue(getInput().get(9)), extractValue(getInput().get(10)), extractValue(getInput().get(12)), extractValue(getInput().get(13)), extractValue(getInput().get(2)), extractValue(getInput().get(3)), extractValue(getInput().get(4)), extractValue(getInput().get(5)), _maxNumThreads); }else { params = new org.apache.sysml.runtime.matrix.data.LibMatrixDNN.ConvolutionParameters(extractValue(getInput().get(5)), extractValue(getInput().get(6)), extractValue(getInput().get(7)), extractValue(getInput().get(8)), extractValue(getInput().get(9)), extractValue(getInput().get(11)), extractValue(getInput().get(12)), extractValue(getInput().get(1)), extractValue(getInput().get(2)), extractValue(getInput().get(3)), extractValue(getInput().get(4)), _maxNumThreads); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/2474/buggy-version/src.main.java.org.apache.sysml.hops.ConvolutionOp.java", "BodyUseAPI": [], "Fixed commit": "55c8ee7d6e3c1fcdf5c2583eee3f0a287d4baac9", "Url": "https://api.github.com/repos/niketanpansare/systemml", "Date": "2016-06-15T23:17:05Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((log) == null) { checkpointPeriod = config.getCheckpointPeriod(); byte[] state = getSnapshot(); if ((config.isToLog()) && (config.logToDisk())) { int replicaId = config.getProcessId(); boolean isToLog = config.isToLog(); boolean syncLog = config.isToWriteSyncLog(); boolean syncCkp = config.isToWriteSyncCkp(); log = new bftsmart.tom.server.defaultservices.DiskStateLog(replicaId, state, computeHash(state), isToLog, syncLog, syncCkp); bftsmart.statemanagement.ApplicationState storedState = ((bftsmart.tom.server.defaultservices.DiskStateLog) (log)).loadDurableState(); if ((storedState.getLastEid()) > 0) { setState(storedState); getStateManager().setLastEID(storedState.getLastEid()); } }else { log = new bftsmart.tom.server.defaultservices.StateLog(checkpointPeriod, state, computeHash(state)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/7096/buggy-version/src.bftsmart.tom.server.defaultservices.DefaultSingleRecoverable.java", "BodyUseAPI": [], "Fixed commit": "f920dea42c8ae19b37155d829e8a89c6b434a293", "Url": "https://api.github.com/repos/bft-smart/library", "Date": "2015-06-16T19:00:39Z"},
{"Line": "=>334", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.arin.rdap_bootstrap.service.Statistics.UrlHits.getEntrySet()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((entrySet.size()) != 0) { for (java.util.Map.Entry<java.lang.String, java.util.concurrent.atomic.AtomicLong> entry : entrySet) { description.add(java.lang.String.format(\"%-5d = %25s\", entry.getValue().get(), entry.getKey())); } }else { description.add(\"Zero queries.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/1066/buggy-version/src.main.java.net.arin.rdap_bootstrap.service.RedirectServlet.java", "BodyUseAPI": [], "Fixed commit": "d06640cff2182dc40ee116a4f71a68582912add0", "Url": "https://api.github.com/repos/arineng/rdap_bootstrap_server", "Date": "2015-05-27T17:07:05Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(currentList.isEmpty())) map.put(currentHero, new java.util.Vector<de.jakobkarolus.dotabuttons.model.HeroResponse>(currentList));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/7452/buggy-version/app.src.main.java.de.jakobkarolus.dotabuttons.io.HeroResponseParser.java", "BodyUseAPI": ["java.util.Map<de.jakobkarolus.dotabuttons.model.Heroes, java.util.List<de.jakobkarolus.dotabuttons.model.HeroResponse>>.put(de.jakobkarolus.dotabuttons.model.Heroes,java.util.Vector<de.jakobkarolus.dotabuttons.model.HeroResponse>)"], "Fixed commit": "c0a4f6a095042b4fae34cf6dbb9f8aa75660c906", "Url": "https://api.github.com/repos/jkarolus/DotaButtons-AS", "Date": "2015-02-23T16:52:21Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(msg))) { msg = msg.trim(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/3691/buggy-version/app.src.main.java.my.home.lehome.helper.MessageHelper.java", "BodyUseAPI": ["java.lang.String.trim()"], "Fixed commit": "41c13b95b1ac47e299843291723aa894b51ce69d", "Url": "https://api.github.com/repos/legendmohe/LEHomeMobile_android", "Date": "2015-06-10T13:53:42Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (selectedMenuItem == (engine.ScreenType.EndGame)) { return engine.ScreenType.HighScoreScreen; }else if (selectedMenuItem == (engine.ScreenType.HighScoreScreen)) { return engine.ScreenType.GameScreen; }else { return engine.ScreenType.EndGame; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/6754/buggy-version/src.screen.TitleScreen.java", "BodyUseAPI": [], "Fixed commit": "95cb12310e2e92fe06cac603caa354cf34b54a76", "Url": "https://api.github.com/repos/DJsage/Invaders", "Date": "2015-08-06T19:38:53Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (selectedMenuItem == (engine.ScreenType.GameScreen)) { return engine.ScreenType.HighScoreScreen; }else if (selectedMenuItem == (engine.ScreenType.HighScoreScreen)) { return engine.ScreenType.EndGame; }else { return engine.ScreenType.GameScreen; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/6754/buggy-version/src.screen.TitleScreen.java", "BodyUseAPI": [], "Fixed commit": "95cb12310e2e92fe06cac603caa354cf34b54a76", "Url": "https://api.github.com/repos/DJsage/Invaders", "Date": "2015-08-06T19:38:53Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (time >= 24) time = time - 24;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/4820/buggy-version/src.main.java.org.tal.sensorlibrary.daytime.java", "BodyUseAPI": [], "Fixed commit": "79021392f76e42a2cd32c7a7c044cf0502b65791", "Url": "https://api.github.com/repos/eisental/SensorLibrary", "Date": "2012-08-16T17:58:06Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (time >= 24) time = time - 24;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/4820/buggy-version/src.main.java.org.tal.sensorlibrary.daytime.java", "BodyUseAPI": [], "Fixed commit": "79021392f76e42a2cd32c7a7c044cf0502b65791", "Url": "https://api.github.com/repos/eisental/SensorLibrary", "Date": "2012-08-16T17:58:06Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (time >= 24) time = time - 24;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/4820/buggy-version/src.main.java.org.tal.sensorlibrary.daytime.java", "BodyUseAPI": [], "Fixed commit": "79021392f76e42a2cd32c7a7c044cf0502b65791", "Url": "https://api.github.com/repos/eisental/SensorLibrary", "Date": "2012-08-16T17:58:06Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((timeField) == (org.tal.sensorlibrary.daytime.TimeField.HOUR10)) { time = ((int) ((w.getTime()) / (org.tal.sensorlibrary.daytime.ticksPerHour))) + (hoursOffset); if (time >= 24) time = time - 24; time = time / 10; }else if ((timeField) == (org.tal.sensorlibrary.daytime.TimeField.MINUTE1)) { time = ((int) (java.lang.Math.round((((w.getTime()) % 1000) / (org.tal.sensorlibrary.daytime.ticksPerMinute))))) % 10; }else if ((timeField) == (org.tal.sensorlibrary.daytime.TimeField.MINUTE10)) { time = ((int) (java.lang.Math.round((((w.getTime()) % 1000) / (org.tal.sensorlibrary.daytime.ticksPerMinute))))) / 10; }else time = -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/4820/buggy-version/src.main.java.org.tal.sensorlibrary.daytime.java", "BodyUseAPI": [], "Fixed commit": "79021392f76e42a2cd32c7a7c044cf0502b65791", "Url": "https://api.github.com/repos/eisental/SensorLibrary", "Date": "2012-08-16T17:58:06Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (time >= 24) time = time - 24;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/4820/buggy-version/src.main.java.org.tal.sensorlibrary.daytime.java", "BodyUseAPI": [], "Fixed commit": "79021392f76e42a2cd32c7a7c044cf0502b65791", "Url": "https://api.github.com/repos/eisental/SensorLibrary", "Date": "2012-08-16T17:58:06Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (time >= 24) time = time - 24;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/4820/buggy-version/src.main.java.org.tal.sensorlibrary.daytime.java", "BodyUseAPI": [], "Fixed commit": "79021392f76e42a2cd32c7a7c044cf0502b65791", "Url": "https://api.github.com/repos/eisental/SensorLibrary", "Date": "2012-08-16T17:58:06Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["editorPage.getServer().getOriginal().loadAdapter(java.lang.Class,org.eclipse.core.runtime.IProgressMonitor)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (cloudServer != null) { if (cloudServer.getBehaviour().existCloudApplicationModule(moduleName)) { org.eclipse.swt.widgets.Display.getDefault().asyncExec(new java.lang.Runnable() { public void run() { org.eclipse.jface.dialogs.MessageDialog.openWarning(editorPage.getSite().getShell(), \"Failed to deploy application\", org.eclipse.osgi.util.NLS.bind(\"Can't deploy the project {0} because a cloud application with the same name already exits. {1}\", moduleName, \" Please either rename the project or delete the cloud application, and then try again.\")); } }); return org.eclipse.core.runtime.Status.CANCEL_STATUS; } org.cloudfoundry.ide.eclipse.server.ui.internal.editor.ApplicationMasterPart.ApplicationViewersDropAdapter.super.performDrop(data); org.eclipse.core.runtime.jobs.Job job = new org.eclipse.core.runtime.jobs.Job(jobName) { @java.lang.Override protected org.eclipse.core.runtime.IStatus run(org.eclipse.core.runtime.IProgressMonitor monitor) { cloudServer.getBehaviour().publishAdd(project.getName(), monitor); return org.eclipse.core.runtime.Status.OK_STATUS; } }; job.setPriority(Job.INTERACTIVE); job.schedule(); return org.eclipse.core.runtime.Status.OK_STATUS; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/8371/buggy-version/org.cloudfoundry.ide.eclipse.server.ui.src.org.cloudfoundry.ide.eclipse.server.ui.internal.editor.ApplicationMasterPart.java", "BodyUseAPI": ["cloudServer.getBehaviour().existCloudApplicationModule(org.cloudfoundry.ide.eclipse.server.ui.internal.editor.ApplicationMasterPart.ApplicationViewersDropAdapter.1)", "org.cloudfoundry.ide.eclipse.server.core.internal.CloudFoundryServer.getBehaviour()", "cloudServer.getBehaviour().publishAdd(project.getName(),org.eclipse.core.runtime.IProgressMonitor)", "org.cloudfoundry.ide.eclipse.server.core.internal.CloudFoundryServer.getBehaviour()"], "Fixed commit": "a0de762238315b05a447265c869ac0672940b67e", "Url": "https://api.github.com/repos/HuaweiTech/eclipse-integration-cloudfoundry", "Date": "2014-08-21T21:11:37Z"},
{"Line": "=>437", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nExp == 0) { nTerm = \"\" + (coefficients[i]); newTerms.add(nTerm); }else if (nExp == 1) { nTerm = (\"\" + nCoeff) + \"x\"; newTerms.add(nTerm); }else { nTerm = ((\"\" + nCoeff) + \"x^\") + nExp; newTerms.add(nTerm); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/8298/buggy-version/GraphingCalculator2.src.gc2.main.Polynomial.java", "BodyUseAPI": [], "Fixed commit": "a55a58a6b9741234392745816c44add469c492ad", "Url": "https://api.github.com/repos/Authman2/GraphingCalculator2", "Date": "2016-10-18T12:31:47Z"},
{"Line": "=>473", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (poly.startsWith(\"+\")) { poly = poly.substring(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/8298/buggy-version/GraphingCalculator2.src.gc2.main.Polynomial.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "a55a58a6b9741234392745816c44add469c492ad", "Url": "https://api.github.com/repos/Authman2/GraphingCalculator2", "Date": "2016-10-18T12:31:47Z"},
{"Line": "=>493", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jetbrains.jetpad.vclang.parser.BuildVisitor.findId(java.lang.String,boolean,Concrete.Position,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (((constructorCall != null) && (constructorCall instanceof com.jetbrains.jetpad.vclang.term.Concrete.DefCallExpression)) && ((((com.jetbrains.jetpad.vclang.term.Concrete.DefCallExpression) (constructorCall)).getDefinition()) instanceof com.jetbrains.jetpad.vclang.parser.Constructor)) { com.jetbrains.jetpad.vclang.parser.Constructor constructor = ((com.jetbrains.jetpad.vclang.parser.Constructor) (((com.jetbrains.jetpad.vclang.term.Concrete.DefCallExpression) (constructorCall)).getDefinition())); boolean hasExplicit = false; for (com.jetbrains.jetpad.vclang.term.expr.arg.TypeArgument arg : constructor.getArguments()) { if (arg.getExplicit()) hasExplicit = true; } if (!hasExplicit) return new com.jetbrains.jetpad.vclang.term.Concrete.ConstructorPattern(pos, new com.jetbrains.jetpad.vclang.parser.BuildVisitor.Name(name), new java.util.ArrayList<com.jetbrains.jetpad.vclang.term.Concrete.Pattern>()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/8960/buggy-version/src.main.java.com.jetbrains.jetpad.vclang.parser.BuildVisitor.java", "BodyUseAPI": ["Concrete.Expression.getDefinition()"], "Fixed commit": "b7565ebcebee2a460d8f062472b83d60ee50d1e8", "Url": "https://api.github.com/repos/valis/vclang", "Date": "2015-09-01T11:05:03Z"},
{"Line": "=>799", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (reportError) { if (member != null) { myErrorReporter.report(new com.jetbrains.jetpad.vclang.parser.ParserError(myNamespace, position, ((\"Cannot find '\" + name) + \"'\"))); }else { myErrorReporter.report(new com.jetbrains.jetpad.vclang.parser.ParserError(myNamespace, position, (\"Not in scope: \" + name))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/8960/buggy-version/src.main.java.com.jetbrains.jetpad.vclang.parser.BuildVisitor.java", "BodyUseAPI": [], "Fixed commit": "b7565ebcebee2a460d8f062472b83d60ee50d1e8", "Url": "https://api.github.com/repos/valis/vclang", "Date": "2015-09-01T11:05:03Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (tool instanceof tconstruct.library.tools.ToolCore) { net.minecraft.nbt.NBTTagCompound tags = tool.getTagCompound().getCompoundTag(\"InfiTool\"); if (((tags.getInteger(\"Modifiers\")) > 0) && (!(tags.getBoolean(key)))) { return false; } if (java.util.Arrays.asList(((tconstruct.library.tools.ToolCore) (tool.getItem())).getTraits()).contains(\"ammo\")) { return false; } return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/1663/buggy-version/src.main.java.flaxbeard.steamcraft.integration.tinkers.ModiferSteam.java", "BodyUseAPI": ["tool.getTagCompound().getCompoundTag(java.lang.String)", "((tconstruct.library.tools.ToolCore) (tool.getItem())).getTraits()", "net.minecraft.item.ItemStack.getTagCompound()", "net.minecraft.item.ItemStack.getItem()", "java.util.List.contains(java.lang.String)", "java.util.Arrays.asList(((tconstruct.library.tools.ToolCore) (tool.getItem())).getTraits())"], "Fixed commit": "fb3b262c7e1493766ee6c6ba0f56d0ff293272f9", "Url": "https://api.github.com/repos/Esteemed-Innovation/Esteemed-Innovation", "Date": "2016-05-21T02:39:09Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (db.getTransaction().isActive()) db.commit();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/961/buggy-version/core.src.main.java.com.orientechnologies.orient.core.command.script.OCommandExecutorScript.java", "BodyUseAPI": ["com.orientechnologies.orient.core.db.document.ODatabaseDocument.commit()"], "Fixed commit": "c68a3b3bb453a70d0954df829c25e0775d0ed78a", "Url": "https://api.github.com/repos/mcculls/orientdb", "Date": "2015-01-26T14:42:40Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(productMap.keySet().contains(new java.lang.Integer(id)))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/9125/buggy-version/src.com.company.controllers.FileController.java", "BodyUseAPI": [], "Fixed commit": "0b52536258df73acf860ffa00fabfa42ad550688", "Url": "https://api.github.com/repos/noavarice/j2", "Date": "2017-05-30T17:20:09Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((f != null) && (type.equals(\"UNKNOWN\"))) { type = f.typeName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/3325/buggy-version/src.sorbet.StepEventHandler.java", "BodyUseAPI": ["com.sun.jdi.Field.typeName()"], "Fixed commit": "2cb2f78c9a5884d413f485378da18065086c26c5", "Url": "https://api.github.com/repos/Sorbet/Sorbet", "Date": "2011-12-13T22:17:49Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSelected0) != null) { if ((mSelected0.getCard().getAlpha()) <= 0) { ((android.view.ViewGroup) (mSelected0.getParent())).removeView(mSelected0); }else { mSelected0.getCard().active(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/5882/buggy-version/app.src.main.java.com.matthias.android.amginori.BoardFragment.java", "BodyUseAPI": [], "Fixed commit": "543f59b738f7856c93248099fcbabd7d7018107e", "Url": "https://api.github.com/repos/mattstraehl/AmgiNori", "Date": "2016-03-16T21:40:09Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (dimValues != null) { java.util.Map<java.lang.String, java.lang.String> dimsMap = new java.util.HashMap<>(); for (int i = 0; i < (dimValues.length); i++) { dimsMap.put((\"dim.\" + i), dimValues[i]); } return addAll(dimsMap); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/1278/buggy-version/core.src.main.java.org.openstack4j.openstack.cloudeye.internal.MetricFilterOptions.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)"], "Fixed commit": "661103433a23f901045d13d9935a06fd6217e71e", "Url": "https://api.github.com/repos/Huawei/openstack4j", "Date": "2017-06-30T10:20:52Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((example.getName().startsWith(\"MDRT_\")) || (example.getName().startsWith(\"MDRS_\"))) && (example.getName().endsWith(\"$\"))) { return true; }else if (example.getName().startsWith(\"MLOG$_\")) { return true; }else if (example.getName().startsWith(\"RUPD$_\")) { return true; }else if (example.getName().startsWith(\"WM$_\")) { return true; }else if (example.getName().equals(\"CREATE$JAVA$LOB$TABLE\")) { return true; }else if (example.getName().equals(\"JAVA$CLASS$MD5$TABLE\")) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/8643/buggy-version/liquibase-core.src.main.java.liquibase.database.core.OracleDatabase.java", "BodyUseAPI": ["example.getName().startsWith(java.lang.String)", "liquibase.structure.DatabaseObject.getName()", "liquibase.structure.DatabaseObject.getName()", "example.getName().startsWith(java.lang.String)", "example.getName().startsWith(java.lang.String)", "example.getName().equals(java.lang.String)", "liquibase.structure.DatabaseObject.getName()", "example.getName().equals(java.lang.String)", "liquibase.structure.DatabaseObject.getName()", "liquibase.structure.DatabaseObject.getName()"], "Fixed commit": "0a81a7ec6414bcbdcc0ae71d6b7955ee59048a6a", "Url": "https://api.github.com/repos/NSIT/liquibase", "Date": "2015-04-11T20:54:58Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dna.profiler.datatypes.ComparableEntryMap.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((java.lang.Math.abs((otherValue - (this.aggregatedValue)))) < 0.01) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/680/buggy-version/src.dna.profiler.datatypes.benchmarkresults.BenchmarkingResultsMap.java", "BodyUseAPI": [], "Fixed commit": "1890e0c27ef4b677d26b7185ca8ab8327f25a5fb", "Url": "https://api.github.com/repos/BJahn/DNA", "Date": "2014-03-19T17:07:19Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(resultSet.next())) { statement.execute(insertSql); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/3382/buggy-version/src.com.echo.pinterest.process.DBHandler.java", "BodyUseAPI": [], "Fixed commit": "6de2fe7818f18050d16008634022a2949cb44d53", "Url": "https://api.github.com/repos/jiangecho/pinterest-crawler", "Date": "2016-03-16T06:41:50Z"},
{"Line": "=>385", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.neo4j.graphdb.index.IndexHits<T>.getSingle()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (single == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/5174/buggy-version/src.main.java.org.neo4j.wrap.WrappedIndex.java", "BodyUseAPI": [], "Fixed commit": "2a8df18ec2381e7329658757060f65c9cf9a3894", "Url": "https://api.github.com/repos/thobe/neo4j-wrapper", "Date": "2011-08-18T17:44:38Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((_config.isUseCustomPropertyForOutbound()) && ((_config.getOutboundRoutingPropertyName()) != null)) { if ((m.body().containsField(\"properties\")) && (m.body().getObject(\"properties\").containsField(_config.getOutboundRoutingPropertyName()))) { routingKey = m.body().getObject(\"properties\").getString(_config.getOutboundRoutingPropertyName()); }else if ((m.body().containsField(\"application-properties\")) && (m.body().getObject(\"application-properties\").containsField(_config.getOutboundRoutingPropertyName()))) { routingKey = m.body().getObject(\"application-properties\").getString(_config.getOutboundRoutingPropertyName()); } if (_logger.isInfoEnabled()) { _logger.info(\"\\n============= Custom Routing Property ============\"); _logger.info((\"Custom routing property name : \" + (_config.getOutboundRoutingPropertyName()))); _logger.info((\"Routing property value : \" + routingKey)); _logger.info(\"============= /Custom Routing Property ============\\n\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/3866/buggy-version/src.main.java.com.tworlabs.vertx.mod.amqp.Router.java", "BodyUseAPI": ["com.tworlabs.vertx.mod.amqp.RouterConfig.getOutboundRoutingPropertyName()", "org.vertx.java.core.logging.Logger.info((\"Custom routing property name : \" + (_config.getOutboundRoutingPropertyName())))", "com.tworlabs.vertx.mod.amqp.RouterConfig.getOutboundRoutingPropertyName()", "m.body().getObject(\"application-properties\").getString(_config.getOutboundRoutingPropertyName())", "m.body().getObject(\"properties\").containsField(_config.getOutboundRoutingPropertyName())", "m.body().getObject(\"application-properties\").containsField(_config.getOutboundRoutingPropertyName())", "com.tworlabs.vertx.mod.amqp.RouterConfig.getOutboundRoutingPropertyName()", "m.body().getObject(\"properties\").getString(_config.getOutboundRoutingPropertyName())", "com.tworlabs.vertx.mod.amqp.RouterConfig.getOutboundRoutingPropertyName()", "com.tworlabs.vertx.mod.amqp.RouterConfig.getOutboundRoutingPropertyName()"], "Fixed commit": "45a0d286350b21b43e5c7a7d77d0761319ce2570", "Url": "https://api.github.com/repos/rajith77/mod-amqp", "Date": "2014-11-27T16:26:50Z"},
{"Line": "=>298", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (_logger.isInfoEnabled()) { _logger.info(\"\\n============= Outbound Route ============\"); _logger.info(java.lang.String.format(\"Adding a mapping for {%s : %s}\", address, url)); _logger.info(\"============= /Outbound Route) ============\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/3866/buggy-version/src.main.java.com.tworlabs.vertx.mod.amqp.Router.java", "BodyUseAPI": ["org.vertx.java.core.logging.Logger.info(java.lang.String)", "org.vertx.java.core.logging.Logger.info(java.lang.String)", "org.vertx.java.core.logging.Logger.info(java.lang.String)"], "Fixed commit": "45a0d286350b21b43e5c7a7d77d0761319ce2570", "Url": "https://api.github.com/repos/rajith77/mod-amqp", "Date": "2014-11-27T16:26:50Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JOptionPane.showInputDialog(gui.ResearchPanel,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(name.equalsIgnoreCase(\"\"))) { releaseButton.setEnabled(false); gui.GuiManager.sharedInstance().getApi().release(name); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/8048/buggy-version/workspace.Avalon.src.gui.ResearchPanel.java", "BodyUseAPI": ["gui.GuiManager.sharedInstance().getApi().release(java.lang.String)"], "Fixed commit": "88a1f537cacdd1711363e74acf94c2ecf607369a", "Url": "https://api.github.com/repos/Jobs92/Avalon", "Date": "2014-02-03T13:01:09Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((gameRoom.getCreatedBy()) == null) gameRoom.setCreatedBy(loggedUser.getUserId());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/4989/buggy-version/backgammon-game-web.src.main.java.org.moshe.arad.repositories.LobbyRepository.java", "BodyUseAPI": ["org.moshe.arad.repositories.entities.GameRoom.setCreatedBy(loggedUser.getUserId())"], "Fixed commit": "5310fb279f08bf74206cfe62007b2905cfb4165c", "Url": "https://api.github.com/repos/moshe-arad/Backgammon", "Date": "2016-10-09T05:34:06Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((gameRoom.getLastUpdatedBy()) == null) gameRoom.setLastUpdatedBy(loggedUser.getUserId());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/4989/buggy-version/backgammon-game-web.src.main.java.org.moshe.arad.repositories.LobbyRepository.java", "BodyUseAPI": ["org.moshe.arad.repositories.entities.GameRoom.setLastUpdatedBy(loggedUser.getUserId())"], "Fixed commit": "5310fb279f08bf74206cfe62007b2905cfb4165c", "Url": "https://api.github.com/repos/moshe-arad/Backgammon", "Date": "2016-10-09T05:34:06Z"},
{"Line": "=>339", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((outer.nimg.getNSlices()) > 1) { showAvgIntensityImage(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/5440/buggy-version/src.main.java.fntd.workflow.ProcessDialog.java", "BodyUseAPI": [], "Fixed commit": "aa8b50bbd9f5d181162a7e7d36afa0aad23e9a87", "Url": "https://api.github.com/repos/FNTD/Java-library", "Date": "2017-06-19T13:51:29Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.awt.SplashScreen.getSplashScreen()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (splashScreen != null) splashScreen.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/4510/buggy-version/src.main.java.alexiil.mods.load.render.MinecraftDisplayer.java", "BodyUseAPI": ["java.awt.SplashScreen.close()"], "Fixed commit": "78ed3e3cab32ced7c60f31926851e1abfa046c85", "Url": "https://api.github.com/repos/AlexIIL/CustomLoadingScreen", "Date": "2015-07-15T14:02:59Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((messageSMIME.getUserVS()) != null) signedContentMap.put(\"fromUserIBAN\", messageSMIME.getUserVS().getIBAN());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/3230/buggy-version/CurrencyServer.src.main.java.org.votingsystem.web.currency.jaxrs.MessageSMIMEResource.java", "BodyUseAPI": ["java.util.Map.put(java.lang.String,messageSMIME.getUserVS().getIBAN())", "messageSMIME.getUserVS().getIBAN()", "org.votingsystem.model.MessageSMIME.getUserVS()"], "Fixed commit": "cd8bffc0f7c1d5474298b303d2c142747989f153", "Url": "https://api.github.com/repos/votingsystem/votingsystem", "Date": "2016-01-22T09:56:13Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((current) != null) { current.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/7516/buggy-version/core-project.asakusa-runtime.src.main.java.com.asakusafw.runtime.stage.input.StageInputRecordReader.java", "BodyUseAPI": [], "Fixed commit": "b64251586969f87693d89ddb885fd5aac9c223fb", "Url": "https://api.github.com/repos/asakusafw/asakusafw", "Date": "2013-11-12T02:42:51Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(e instanceof bgibbons.game.level.Player)) { bgibbons.game.level.Entity e1 = getTouching(e); if ((e1 instanceof bgibbons.game.level.Orc) && (!(e1 instanceof bgibbons.game.level.Player))) { java.util.Random rand = new java.util.Random(); winner = rand.nextInt(1); if (winner == 0) { eWinner = e1; }else if (winner == 1) { eWinner = e; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/1796/buggy-version/src.bgibbons.game.level.Level.java", "BodyUseAPI": ["bgibbons.game.level.Level.getTouching(bgibbons.game.level.Entity)"], "Fixed commit": "031d7b756d42db09c2fe705c6ffbe7c302121e57", "Url": "https://api.github.com/repos/bgibbons0531/eecs448-project4", "Date": "2016-11-13T06:49:48Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((org.seadva.model.SeadFile) (dcsFile)).getMetadataUpdateDate()) != null) file.setEntityLastUpdatedTime(simpleDateFormat.parse(((org.seadva.model.SeadFile) (dcsFile)).getMetadataUpdateDate())); else file.setEntityLastUpdatedTime(new java.util.Date());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/2839/buggy-version/SEAD-VA-extensions.sead-registry.sead-registry-mapper.src.main.java.org.seadva.registry.mapper.DcsDBMapper.java", "BodyUseAPI": ["java.text.SimpleDateFormat.parse(((org.seadva.model.SeadFile) (dcsFile)).getMetadataUpdateDate())", "org.seadva.registry.mapper.File.setEntityLastUpdatedTime(java.util.Date)", "org.seadva.registry.mapper.DcsFile.getMetadataUpdateDate()"], "Fixed commit": "1af00c7c31175b075faace08649e592133b76ecc", "Url": "https://api.github.com/repos/Data2Insight/sead-virtual-archive", "Date": "2014-04-29T14:50:48Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((file.getSizeBytes()) < 0) seadFile.setSizeBytes(0); else seadFile.setSizeBytes(file.getSizeBytes());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/2839/buggy-version/SEAD-VA-extensions.sead-registry.sead-registry-mapper.src.main.java.org.seadva.registry.mapper.DcsDBMapper.java", "BodyUseAPI": ["org.seadva.registry.mapper.File.getSizeBytes()", "org.seadva.model.SeadFile.setSizeBytes(file.getSizeBytes())"], "Fixed commit": "1af00c7c31175b075faace08649e592133b76ecc", "Url": "https://api.github.com/repos/Data2Insight/sead-virtual-archive", "Date": "2014-04-29T14:50:48Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((org.seadva.model.SeadFile) (dcsFile)).getDepositDate()) != null) file.setEntityCreatedTime(simpleDateFormat.parse(((org.seadva.model.SeadFile) (dcsFile)).getDepositDate())); else file.setEntityCreatedTime(new java.util.Date());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/2839/buggy-version/SEAD-VA-extensions.sead-registry.sead-registry-mapper.src.main.java.org.seadva.registry.mapper.DcsDBMapper.java", "BodyUseAPI": ["org.seadva.registry.mapper.DcsFile.getDepositDate()", "org.seadva.registry.mapper.File.setEntityCreatedTime(java.util.Date)", "java.text.SimpleDateFormat.parse(((org.seadva.model.SeadFile) (dcsFile)).getDepositDate())"], "Fixed commit": "1af00c7c31175b075faace08649e592133b76ecc", "Url": "https://api.github.com/repos/Data2Insight/sead-virtual-archive", "Date": "2014-04-29T14:50:48Z"},
{"Line": "=>928", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((object.getID()) == (player.getID())) { x = centreX; y = centreY; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/5749/buggy-version/Source.Client.ClientWorld.java", "BodyUseAPI": [], "Fixed commit": "e1e49538fc308a685f64d05fb1c69ecc0c88ba78", "Url": "https://api.github.com/repos/Williamxu98/WorldQuestOnline", "Date": "2017-01-15T08:19:55Z"},
{"Line": "=>574", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isSearching) { resetSearchBar(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/5101/buggy-version/app.src.main.java.com.jeremy.schooltool.GradePage.java", "BodyUseAPI": [], "Fixed commit": "7de861f5efa4ca53736d3d3e7630f288c9c5c5ae", "Url": "https://api.github.com/repos/Nokama14/SchoolTool", "Date": "2016-01-28T18:07:57Z"},
{"Line": "=>582", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isSearching) { resetSearchBar(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/5101/buggy-version/app.src.main.java.com.jeremy.schooltool.GradePage.java", "BodyUseAPI": [], "Fixed commit": "7de861f5efa4ca53736d3d3e7630f288c9c5c5ae", "Url": "https://api.github.com/repos/Nokama14/SchoolTool", "Date": "2016-01-28T18:07:57Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.MotionEvent.getAction()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (action == (android.view.MotionEvent.ACTION_DOWN)) { buffer.setSpan(new android.text.style.BackgroundColorSpan(android.graphics.Color.GRAY), buffer.getSpanStart(link[0]), buffer.getSpanEnd(link[0]), Spanned.SPAN_EXCLUSIVE_EXCLUSIVE); android.text.Selection.setSelection(buffer, buffer.getSpanStart(link[0]), buffer.getSpanEnd(link[0])); }else if (action == (android.view.MotionEvent.ACTION_MOVE)) { buffer.setSpan(new android.text.style.BackgroundColorSpan(android.graphics.Color.TRANSPARENT), buffer.getSpanStart(link[0]), buffer.getSpanEnd(link[0]), Spanned.SPAN_EXCLUSIVE_EXCLUSIVE); android.text.Selection.removeSelection(buffer); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/9134/buggy-version/app.src.main.java.me.pkhope.jianwei.widget.emojitextview.MyLinkMovementMethod.java", "BodyUseAPI": [], "Fixed commit": "4695f9a39772c5cdf5d2f65a5216d64e7a33164e", "Url": "https://api.github.com/repos/pkhope/weibo", "Date": "2016-06-23T06:18:13Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["utils.Vector2f.length()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (length != 0.0F) { vector.set(((float) (java.lang.Math.cos(angle))), ((float) (java.lang.Math.sin(angle)))); vector.scale(length); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/6763/buggy-version/project.HowDoIFlyThisThing.src.main.java.utils.VecmathUtils.java", "BodyUseAPI": ["utils.Vector2f.scale(float)"], "Fixed commit": "3d7b3a9eb3920426b53dbf1c8989e7c3edc0f0f8", "Url": "https://api.github.com/repos/Kuxe/oopprojekt", "Date": "2014-04-04T12:52:53Z"},
{"Line": "=>1143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ctx.prefix) != null) { address = batfish.grammar.cisco.controlplane.CiscoControlPlaneExtractor.getPrefixIp(ctx.prefix); int prefixLength = batfish.grammar.cisco.controlplane.CiscoControlPlaneExtractor.getPrefixLength(ctx.prefix); long maskLong = batfish.util.Util.numSubnetBitsToSubnetLong(prefixLength); mask = new batfish.representation.Ip(maskLong); }else { address = batfish.grammar.cisco.controlplane.CiscoControlPlaneExtractor.toIp(ctx.ip); mask = ((ctx.mask) != null) ? batfish.grammar.cisco.controlplane.CiscoControlPlaneExtractor.toIp(ctx.mask) : address.getClassMask(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/8517/buggy-version/projects.batfish.src.batfish.grammar.cisco.controlplane.CiscoControlPlaneExtractor.java", "BodyUseAPI": ["batfish.grammar.cisco.controlplane.CiscoControlPlaneExtractor.getPrefixIp(ctx.prefix)", "batfish.grammar.cisco.controlplane.CiscoControlPlaneExtractor.getPrefixLength(ctx.prefix)", "batfish.grammar.cisco.controlplane.CiscoControlPlaneExtractor.toIp(ctx.ip)", "batfish.grammar.cisco.controlplane.CiscoControlPlaneExtractor.toIp(ctx.mask)"], "Fixed commit": "253d4e5b8d66279d270d09eeef8b418dfcba334b", "Url": "https://api.github.com/repos/arifogel/batfish", "Date": "2014-08-08T22:44:05Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (disposed) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/3887/buggy-version/src.main.java.jkanvas.animation.AbstractAnimator.java", "BodyUseAPI": [], "Fixed commit": "8efee70766314a99d3a37d24873e8d65f7fe8e22", "Url": "https://api.github.com/repos/enplotz/Kanvas", "Date": "2013-02-25T14:50:29Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tokenFile.getParentFile().exists()) && (!(tokenFile.exists()))) { tokenFile.createNewFile(); }else if (!(tokenFile.canWrite())) { java.lang.System.err.println(\"no writing permissions for saving token\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/1904/buggy-version/src.app.auth.AuthApi.java", "BodyUseAPI": ["java.io.File.createNewFile()", "java.io.File.canWrite()"], "Fixed commit": "9ab44a2ab223ad5157bede8b755210559c79703e", "Url": "https://api.github.com/repos/CrunchyFlakes/SpotLock", "Date": "2017-10-24T20:41:48Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["app.Main.getOS()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (os.equals(\"windows\")) { tokenFile = new java.io.File(((java.lang.System.getenv(\"APPDATA\")) + \"/SpotLock/token\")); }else if (os.equals(\"linux\")) { tokenFile = new java.io.File(java.lang.System.getProperty(\"user.home\"), \".spotlock/token\"); }else { tokenFile = new java.io.File(\"not existing directory\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/1904/buggy-version/src.app.auth.AuthApi.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "9ab44a2ab223ad5157bede8b755210559c79703e", "Url": "https://api.github.com/repos/CrunchyFlakes/SpotLock", "Date": "2017-10-24T20:41:48Z"},
{"Line": "=>361", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JOptionPane.showConfirmDialog(javax.swing.JFrame,java.lang.String,java.lang.String,int)", "javax.swing.JTabbedPane.indexOfTab(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((index >= 0) && (n == 0)) { mainTabbedPane.remove(newOrder); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/1054/buggy-version/src.main.java.FoodLink.gui.SupermarketSys.java", "BodyUseAPI": [], "Fixed commit": "296ce35288b1f629382e4e80ed94ad732d05d3f6", "Url": "https://api.github.com/repos/truly-auto/SENG403", "Date": "2014-03-16T02:15:32Z"},
{"Line": "=>1955", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<com.ge.research.sadl.sADL.SadlPropertyRestriction>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (spr1 instanceof com.ge.research.sadl.sADL.SadlTypeAssociation) { com.ge.research.sadl.sADL.SadlTypeReference domain = ((com.ge.research.sadl.sADL.SadlTypeAssociation) (spr1)).getDomain(); com.hp.hpl.jena.ontology.OntResource domainrsrc = sadlTypeReferenceToOntResource(domain); com.hp.hpl.jena.ontology.ObjectProperty prop = getOrCreateObjectProperty(propUri); addPropertyDomain(prop, domainrsrc); }else { throw new com.ge.research.sadl.jena.JenaProcessorException(\"Unhandled SadlProperty expression\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/5801/buggy-version/sadl3.com.ge.research.sadl.parent.com.ge.research.sadl.jena.src.com.ge.research.sadl.jena.JenaBasedSadlModelProcessor.java", "BodyUseAPI": [], "Fixed commit": "2dfed76d9958f487a9f4e9cff6495a0b28868eda", "Url": "https://api.github.com/repos/crapo/sadlos2", "Date": "2016-05-03T18:17:32Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (manifestVersion != null) { fileName = org.pentaho.platform.plugin.services.importexport.ExportFileNameEncoder.decodeZipFileName(fileName); actualFilePath = org.pentaho.platform.plugin.services.importexport.ExportFileNameEncoder.decodeZipFileName(actualFilePath); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/2972/buggy-version/extensions.src.org.pentaho.platform.plugin.services.importer.SolutionImportHandler.java", "BodyUseAPI": [], "Fixed commit": "23534bef4e4b2b1a84cb8688096d66ca9a9ca4f1", "Url": "https://api.github.com/repos/wseyler/pentaho-platform", "Date": "2015-09-18T14:23:23Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (manifestVersion != null) { decodedFile = new org.pentaho.platform.api.repository2.unified.RepositoryFile.Builder(decodedFile).path(decodedFilePath).name(fileName).title(fileName).build(); decodedFilePath = org.pentaho.platform.plugin.services.importexport.ExportFileNameEncoder.decodeZipFileName(file.getPath()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/2972/buggy-version/extensions.src.org.pentaho.platform.plugin.services.importer.SolutionImportHandler.java", "BodyUseAPI": [], "Fixed commit": "23534bef4e4b2b1a84cb8688096d66ca9a9ca4f1", "Url": "https://api.github.com/repos/wseyler/pentaho-platform", "Date": "2015-09-18T14:23:23Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.withManifest) { zipEntryName = org.pentaho.platform.plugin.services.importexport.ExportFileNameEncoder.encodeZipPathName(zipEntryName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/2972/buggy-version/extensions.src.org.pentaho.platform.plugin.services.importexport.ZipExportProcessor.java", "BodyUseAPI": [], "Fixed commit": "23534bef4e4b2b1a84cb8688096d66ca9a9ca4f1", "Url": "https://api.github.com/repos/wseyler/pentaho-platform", "Date": "2015-09-18T14:23:23Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.withManifest) { zipEntryName = org.pentaho.platform.plugin.services.importexport.ExportFileNameEncoder.encodeZipPathName(zipEntryName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/2972/buggy-version/extensions.src.org.pentaho.platform.plugin.services.importexport.ZipExportProcessor.java", "BodyUseAPI": [], "Fixed commit": "23534bef4e4b2b1a84cb8688096d66ca9a9ca4f1", "Url": "https://api.github.com/repos/wseyler/pentaho-platform", "Date": "2015-09-18T14:23:23Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((granularity) != null) { long expectedBreak = granularity.next(currentDateTime).getMillis(); if ((nextRotation) > expectedBreak) { nextRotation = expectedBreak; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/9135/buggy-version/suro-localfile.src.main.java.com.netflix.suro.sink.localfile.LocalFileSink.java", "BodyUseAPI": [], "Fixed commit": "8533762c17f086eedaa187e3f9949c6d7159ffe6", "Url": "https://api.github.com/repos/zhenchuan/suro", "Date": "2014-10-07T07:12:21Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((projetToDisplay.getIllustration()) != 0) { m_illustration.setImageResource(adullact.publicrowdfunding.model.local.utilities.Utility.getDrawable(projetToDisplay.getIllustration())); }else { m_illustration.setImageResource(R.drawable.ic_launcher); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/7046/buggy-version/PublicrowdFunding.src.adullact.publicrowdfunding.controller.project.details.InfoProjectFragment.java", "BodyUseAPI": ["adullact.publicrowdfunding.model.local.ressource.Project.getIllustration()", "android.widget.ImageView.setImageResource(adullact.publicrowdfunding.model.local.utilities.Utility.getDrawable(projetToDisplay.getIllustration()))", "adullact.publicrowdfunding.model.local.utilities.Utility.getDrawable(projetToDisplay.getIllustration())"], "Fixed commit": "63ef17dbf03fff63659ea70c38f26dc021d83600", "Url": "https://api.github.com/repos/Crikka/appli-libre", "Date": "2014-09-11T18:09:06Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["moze_intel.projecte.gameObjs.items.GemEternalDensity.getTarget(net.minecraft.item.ItemStack)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(moze_intel.projecte.utils.EMCHelper.doesItemHaveEmc(target))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/1086/buggy-version/src.main.java.moze_intel.projecte.gameObjs.items.GemEternalDensity.java", "BodyUseAPI": [], "Fixed commit": "fb919f857935b24f87bf45c911d420d28c09493b", "Url": "https://api.github.com/repos/williewillus/ProjectE", "Date": "2015-06-02T17:13:58Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, javafx.scene.media.MediaPlayer>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (mp == null) { mp = createMediaPlayer(folder, filename); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/5480/buggy-version/Utilities.src.AudioPlayer.java", "BodyUseAPI": [], "Fixed commit": "0240cf128b43bef34dddf45683a1dd70e3bc1cc8", "Url": "https://api.github.com/repos/onzfonz/custom-utils", "Date": "2017-05-02T16:48:22Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["rogueone.quizfight.SavedGamesActivity.getApplication()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (((application != null) && ((application.getClient()) != null)) && (application.getClient().isConnected())) { getLoaderManager().initLoader(rogueone.quizfight.SavedGamesActivity.SAVED_GAMES_LOADER, null, this); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/1308/buggy-version/QuizFight.app.src.main.java.rogueone.quizfight.SavedGamesActivity.java", "BodyUseAPI": [], "Fixed commit": "5e99a6a2123dc4246748c2d1da20f5d1ace59003", "Url": "https://api.github.com/repos/RogueOneQF/quiz-fight-android", "Date": "2017-07-01T12:45:30Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uk.ac.rdg.resc.edal.feature.MapFeature.getParameter(featureAndMemberName.getMember())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (parameter != null) { extractedUnits.put(layerId, parameter.getUnits()); }else { extractedUnits.put(layerId, \"unknown\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/2286/buggy-version/graphics.src.main.java.uk.ac.rdg.resc.edal.graphics.style.GriddedImageLayer.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,parameter.getUnits())", "uk.ac.rdg.resc.edal.metadata.Parameter.getUnits()"], "Fixed commit": "405295931153db953a055a9a5021d6565672f194", "Url": "https://api.github.com/repos/Reading-eScience-Centre/edal-java", "Date": "2016-09-20T09:07:57Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (tmp.equals(\",\")) { line.append((last + \"\u3001\")); last = \"\"; }else if (tmp.equals(\"?\")) { line.append((last + \"\uff1f\")); last = \"\"; }else if (tmp.equals(\"!\")) { line.append((last + \"\uff01\")); last = \"\"; }else if (tmp.equals(\"[\")) { line.append((last + \"\u300c\")); last = \"\"; }else if (tmp.equals(\"]\")) { line.append((last + \"\u300d\")); last = \"\"; }else { line.append((last + tmp)); last = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/6267/buggy-version/src.main.java.com.github.ucchyocean.lc.japanize.KanaConverter.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "2610367f894296a21f49abc07da6dea2e1787f3e", "Url": "https://api.github.com/repos/ucchyocean/LunaChat", "Date": "2014-01-13T05:51:59Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((toRender.numDimensions()) == 1) && ((toRender.dimension(0)) < 3)) { toRender = tmpImg.factory().create(toRender, tmpImg.firstElement().createVariable()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/5811/buggy-version/org.knime.knip.base.src.org.knime.knip.base.data.img.ImgPlusCell.java", "BodyUseAPI": ["tmpImg.factory().create(net.imglib2.RandomAccessibleInterval<T>,tmpImg.firstElement().createVariable())"], "Fixed commit": "0f80ba3472c50d3ea5d69fa12a3f414b28c94d74", "Url": "https://api.github.com/repos/knime-ip/knip", "Date": "2016-03-17T22:35:07Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fromPath) { uniqueValue = unique.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/2730/buggy-version/src.main.java.eu.delving.x3ml.engine.EntityResolver.java", "BodyUseAPI": [], "Fixed commit": "df2daf85808423e0aedfefb29d83b9ed0767d157", "Url": "https://api.github.com/repos/isl/x3ml", "Date": "2015-11-26T10:13:59Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (accounts.isEmpty()) { javax.swing.JOptionPane.showMessageDialog(null, \"No accounts have saved! \"); }else javax.swing.JOptionPane.showMessageDialog(null, sb.toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/4782/buggy-version/src.banking.gui.MainFrame.java", "BodyUseAPI": [], "Fixed commit": "82b90e1b15a7f2dd5d9dfbcd46eb0f8843f9465c", "Url": "https://api.github.com/repos/rsofiov/cst316labcr", "Date": "2016-02-23T02:50:37Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (enPassantMade) { listOfMoves.add(new board.FullGameState(temp, possiblePieceMoveBitboard, myGamestate.getWhiteRooks(), myGamestate.getWhiteKnights(), myGamestate.getWhiteBishops(), myGamestate.getWhiteQueens(), myGamestate.getWhiteKing(), (((operations.BitboardOperations.getPositionBitboard(myGamestate.getEnPassantSquare())) >>> 8) ^ ((myGamestate.getBlackPawns()) & (myGamestate.getBlackPawns()))), (((myGamestate.getBlackRooks()) ^ possiblePieceMoveBitboard) & (myGamestate.getBlackRooks())), (((myGamestate.getBlackKnights()) ^ possiblePieceMoveBitboard) & (myGamestate.getBlackKnights())), (((myGamestate.getBlackBishops()) ^ possiblePieceMoveBitboard) & (myGamestate.getBlackBishops())), (((myGamestate.getBlackQueens()) ^ possiblePieceMoveBitboard) & (myGamestate.getBlackQueens())), myGamestate.getBlackKing(), false, myGamestate.getWhiteCastleKing(), myGamestate.getWhiteCastleQueen(), myGamestate.getBlackCastleKing(), myGamestate.getBlackCastleQueen(), enPassantSquare, myGamestate.getNumberOfFullMoves(), myGamestate.getNumberOfHalfMoves(), fromCoord, toCoord)); }else if (toCoord >= 56) { temp[(toCoord % 8)][(toCoord / 8)] = 'Q'; listOfMoves.add(new board.FullGameState(operations.MoveGenerator.copyCurrentBoard(temp), (possiblePieceMoveBitboard & (operations.BitboardOperations.clearRank(8))), myGamestate.getWhiteRooks(), myGamestate.getWhiteKnights(), myGamestate.getWhiteBishops(), ((myGamestate.getWhiteQueens()) | ((java.lang.Long.parseLong(\"1\", 2)) << toCoord)), myGamestate.getWhiteKing(), (((myGamestate.getBlackPawns()) ^ possiblePieceMoveBitboard) & (myGamestate.getBlackPawns())), (((myGamestate.getBlackRooks()) ^ possiblePieceMoveBitboard) & (myGamestate.getBlackRooks())), (((myGamestate.getBlackKnights()) ^ possiblePieceMoveBitboard) & (myGamestate.getBlackKnights())), (((myGamestate.getBlackBishops()) ^ possiblePieceMoveBitboard) & (myGamestate.getBlackBishops())), (((myGamestate.getBlackQueens()) ^ possiblePieceMoveBitboard) & (myGamestate.getBlackQueens())), myGamestate.getBlackKing(), false, myGamestate.getWhiteCastleKing(), myGamestate.getWhiteCastleQueen(), myGamestate.getBlackCastleKing(), myGamestate.getBlackCastleQueen(), enPassantSquare, myGamestate.getNumberOfFullMoves(), myGamestate.getNumberOfHalfMoves(), fromCoord, toCoord)); temp[(toCoord % 8)][(toCoord / 8)] = 'N'; listOfMoves.add(new board.FullGameState(operations.MoveGenerator.copyCurrentBoard(temp), (possiblePieceMoveBitboard & (operations.BitboardOperations.clearRank(8))), myGamestate.getWhiteRooks(), ((myGamestate.getWhiteKnights()) | ((java.lang.Long.parseLong(\"1\", 2)) << toCoord)), myGamestate.getWhiteBishops(), myGamestate.getWhiteQueens(), myGamestate.getWhiteKing(), (((myGamestate.getBlackPawns()) ^ possiblePieceMoveBitboard) & (myGamestate.getBlackPawns())), (((myGamestate.getBlackRooks()) ^ possiblePieceMoveBitboard) & (myGamestate.getBlackRooks())), (((myGamestate.getBlackKnights()) ^ possiblePieceMoveBitboard) & (myGamestate.getBlackKnights())), (((myGamestate.getBlackBishops()) ^ possiblePieceMoveBitboard) & (myGamestate.getBlackBishops())), (((myGamestate.getBlackQueens()) ^ possiblePieceMoveBitboard) & (myGamestate.getBlackQueens())), myGamestate.getBlackKing(), false, myGamestate.getWhiteCastleKing(), myGamestate.getWhiteCastleQueen(), myGamestate.getBlackCastleKing(), myGamestate.getBlackCastleQueen(), enPassantSquare, myGamestate.getNumberOfFullMoves(), myGamestate.getNumberOfHalfMoves(), fromCoord, toCoord)); temp[(toCoord % 8)][(toCoord / 8)] = 'B'; listOfMoves.add(new board.FullGameState(operations.MoveGenerator.copyCurrentBoard(temp), (possiblePieceMoveBitboard & (operations.BitboardOperations.clearRank(8))), myGamestate.getWhiteRooks(), myGamestate.getWhiteKnights(), ((myGamestate.getWhiteBishops()) | ((java.lang.Long.parseLong(\"1\", 2)) << toCoord)), myGamestate.getWhiteQueens(), myGamestate.getWhiteKing(), (((myGamestate.getBlackPawns()) ^ possiblePieceMoveBitboard) & (myGamestate.getBlackPawns())), (((myGamestate.getBlackRooks()) ^ possiblePieceMoveBitboard) & (myGamestate.getBlackRooks())), (((myGamestate.getBlackKnights()) ^ possiblePieceMoveBitboard) & (myGamestate.getBlackKnights())), (((myGamestate.getBlackBishops()) ^ possiblePieceMoveBitboard) & (myGamestate.getBlackBishops())), (((myGamestate.getBlackQueens()) ^ possiblePieceMoveBitboard) & (myGamestate.getBlackQueens())), myGamestate.getBlackKing(), false, myGamestate.getWhiteCastleKing(), myGamestate.getWhiteCastleQueen(), myGamestate.getBlackCastleKing(), myGamestate.getBlackCastleQueen(), enPassantSquare, myGamestate.getNumberOfFullMoves(), myGamestate.getNumberOfHalfMoves(), fromCoord, toCoord)); temp[(toCoord % 8)][(toCoord / 8)] = 'R'; listOfMoves.add(new board.FullGameState(temp, (possiblePieceMoveBitboard & (operations.BitboardOperations.clearRank(8))), ((myGamestate.getWhiteRooks()) | ((java.lang.Long.parseLong(\"1\", 2)) << toCoord)), myGamestate.getWhiteKnights(), myGamestate.getWhiteBishops(), myGamestate.getWhiteQueens(), myGamestate.getWhiteKing(), (((myGamestate.getBlackPawns()) ^ possiblePieceMoveBitboard) & (myGamestate.getBlackPawns())), (((myGamestate.getBlackRooks()) ^ possiblePieceMoveBitboard) & (myGamestate.getBlackRooks())), (((myGamestate.getBlackKnights()) ^ possiblePieceMoveBitboard) & (myGamestate.getBlackKnights())), (((myGamestate.getBlackBishops()) ^ possiblePieceMoveBitboard) & (myGamestate.getBlackBishops())), (((myGamestate.getBlackQueens()) ^ possiblePieceMoveBitboard) & (myGamestate.getBlackQueens())), myGamestate.getBlackKing(), false, myGamestate.getWhiteCastleKing(), myGamestate.getWhiteCastleQueen(), myGamestate.getBlackCastleKing(), myGamestate.getBlackCastleQueen(), enPassantSquare, myGamestate.getNumberOfFullMoves(), myGamestate.getNumberOfHalfMoves(), fromCoord, toCoord)); }else { listOfMoves.add(new board.FullGameState(temp, possiblePieceMoveBitboard, myGamestate.getWhiteRooks(), myGamestate.getWhiteKnights(), myGamestate.getWhiteBishops(), myGamestate.getWhiteQueens(), myGamestate.getWhiteKing(), (((myGamestate.getBlackPawns()) ^ possiblePieceMoveBitboard) & (myGamestate.getBlackPawns())), (((myGamestate.getBlackRooks()) ^ possiblePieceMoveBitboard) & (myGamestate.getBlackRooks())), (((myGamestate.getBlackKnights()) ^ possiblePieceMoveBitboard) & (myGamestate.getBlackKnights())), (((myGamestate.getBlackBishops()) ^ possiblePieceMoveBitboard) & (myGamestate.getBlackBishops())), (((myGamestate.getBlackQueens()) ^ possiblePieceMoveBitboard) & (myGamestate.getBlackQueens())), myGamestate.getBlackKing(), false, myGamestate.getWhiteCastleKing(), myGamestate.getWhiteCastleQueen(), myGamestate.getBlackCastleKing(), myGamestate.getBlackCastleQueen(), enPassantSquare, myGamestate.getNumberOfFullMoves(), myGamestate.getNumberOfHalfMoves(), fromCoord, toCoord)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/1128/buggy-version/src.operations.MoveGenerator.java", "BodyUseAPI": [], "Fixed commit": "e044696b28f79f10c2f14b7cfd17d30c09283922", "Url": "https://api.github.com/repos/philmosquera/My-Chess-Engine", "Date": "2015-03-03T19:17:16Z"},
{"Line": "=>1043", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (enPassantMade) { listOfMoves.add(new board.FullGameState(temp, (((operations.BitboardOperations.getPositionBitboard(myGamestate.getEnPassantSquare())) << 8) ^ (myGamestate.getWhitePawns())), (((myGamestate.getWhiteRooks()) ^ possiblePieceMoveBitboard) & (myGamestate.getWhiteRooks())), (((myGamestate.getWhiteKnights()) ^ possiblePieceMoveBitboard) & (myGamestate.getWhiteKnights())), (((myGamestate.getWhiteBishops()) ^ possiblePieceMoveBitboard) & (myGamestate.getWhiteBishops())), (((myGamestate.getWhiteQueens()) ^ possiblePieceMoveBitboard) & (myGamestate.getWhiteQueens())), myGamestate.getWhiteKing(), possiblePieceMoveBitboard, myGamestate.getBlackRooks(), myGamestate.getBlackKnights(), myGamestate.getBlackBishops(), myGamestate.getBlackQueens(), myGamestate.getBlackKing(), true, myGamestate.getWhiteCastleKing(), myGamestate.getWhiteCastleQueen(), myGamestate.getBlackCastleKing(), myGamestate.getBlackCastleQueen(), enPassantSquare, myGamestate.getNumberOfFullMoves(), myGamestate.getNumberOfHalfMoves(), fromCoord, toCoord)); }else if (toCoord <= 7) { temp[(toCoord % 8)][(toCoord / 8)] = 'q'; listOfMoves.add(new board.FullGameState(operations.MoveGenerator.copyCurrentBoard(temp), (((myGamestate.getWhitePawns()) ^ possiblePieceMoveBitboard) & (myGamestate.getWhitePawns())), (((myGamestate.getWhiteRooks()) ^ possiblePieceMoveBitboard) & (myGamestate.getWhiteRooks())), (((myGamestate.getWhiteKnights()) ^ possiblePieceMoveBitboard) & (myGamestate.getWhiteKnights())), (((myGamestate.getWhiteBishops()) ^ possiblePieceMoveBitboard) & (myGamestate.getWhiteBishops())), (((myGamestate.getWhiteQueens()) ^ possiblePieceMoveBitboard) & (myGamestate.getWhiteQueens())), myGamestate.getWhiteKing(), (possiblePieceMoveBitboard & (operations.BitboardOperations.clearRank(8))), myGamestate.getBlackRooks(), myGamestate.getBlackKnights(), myGamestate.getBlackBishops(), ((myGamestate.getBlackQueens()) | ((java.lang.Long.parseLong(\"1\", 2)) << toCoord)), myGamestate.getBlackKing(), true, myGamestate.getWhiteCastleKing(), myGamestate.getWhiteCastleQueen(), myGamestate.getBlackCastleKing(), myGamestate.getBlackCastleQueen(), enPassantSquare, myGamestate.getNumberOfFullMoves(), myGamestate.getNumberOfHalfMoves(), fromCoord, toCoord)); temp[(toCoord % 8)][(toCoord / 8)] = 'n'; listOfMoves.add(new board.FullGameState(operations.MoveGenerator.copyCurrentBoard(temp), (((myGamestate.getWhitePawns()) ^ possiblePieceMoveBitboard) & (myGamestate.getWhitePawns())), (((myGamestate.getWhiteRooks()) ^ possiblePieceMoveBitboard) & (myGamestate.getWhiteRooks())), (((myGamestate.getWhiteKnights()) ^ possiblePieceMoveBitboard) & (myGamestate.getWhiteKnights())), (((myGamestate.getWhiteBishops()) ^ possiblePieceMoveBitboard) & (myGamestate.getWhiteBishops())), (((myGamestate.getWhiteQueens()) ^ possiblePieceMoveBitboard) & (myGamestate.getWhiteQueens())), myGamestate.getWhiteKing(), (possiblePieceMoveBitboard & (operations.BitboardOperations.clearRank(8))), myGamestate.getBlackRooks(), ((myGamestate.getBlackKnights()) | ((java.lang.Long.parseLong(\"1\", 2)) << toCoord)), myGamestate.getBlackBishops(), myGamestate.getBlackQueens(), myGamestate.getBlackKing(), true, myGamestate.getWhiteCastleKing(), myGamestate.getWhiteCastleQueen(), myGamestate.getBlackCastleKing(), myGamestate.getBlackCastleQueen(), enPassantSquare, myGamestate.getNumberOfFullMoves(), myGamestate.getNumberOfHalfMoves(), fromCoord, toCoord)); temp[(toCoord % 8)][(toCoord / 8)] = 'b'; listOfMoves.add(new board.FullGameState(operations.MoveGenerator.copyCurrentBoard(temp), (((myGamestate.getWhitePawns()) ^ possiblePieceMoveBitboard) & (myGamestate.getWhitePawns())), (((myGamestate.getWhiteRooks()) ^ possiblePieceMoveBitboard) & (myGamestate.getWhiteRooks())), (((myGamestate.getWhiteKnights()) ^ possiblePieceMoveBitboard) & (myGamestate.getWhiteKnights())), (((myGamestate.getWhiteBishops()) ^ possiblePieceMoveBitboard) & (myGamestate.getWhiteBishops())), (((myGamestate.getWhiteQueens()) ^ possiblePieceMoveBitboard) & (myGamestate.getWhiteQueens())), myGamestate.getWhiteKing(), (possiblePieceMoveBitboard & (operations.BitboardOperations.clearRank(8))), myGamestate.getBlackRooks(), myGamestate.getBlackKnights(), ((myGamestate.getBlackBishops()) | ((java.lang.Long.parseLong(\"1\", 2)) << toCoord)), myGamestate.getBlackQueens(), myGamestate.getBlackKing(), true, myGamestate.getWhiteCastleKing(), myGamestate.getWhiteCastleQueen(), myGamestate.getBlackCastleKing(), myGamestate.getBlackCastleQueen(), enPassantSquare, myGamestate.getNumberOfFullMoves(), myGamestate.getNumberOfHalfMoves(), fromCoord, toCoord)); temp[(toCoord % 8)][(toCoord / 8)] = 'r'; listOfMoves.add(new board.FullGameState(operations.MoveGenerator.copyCurrentBoard(temp), (((myGamestate.getWhitePawns()) ^ possiblePieceMoveBitboard) & (myGamestate.getWhitePawns())), (((myGamestate.getWhiteRooks()) ^ possiblePieceMoveBitboard) & (myGamestate.getWhiteRooks())), (((myGamestate.getWhiteKnights()) ^ possiblePieceMoveBitboard) & (myGamestate.getWhiteKnights())), (((myGamestate.getWhiteBishops()) ^ possiblePieceMoveBitboard) & (myGamestate.getWhiteBishops())), (((myGamestate.getWhiteQueens()) ^ possiblePieceMoveBitboard) & (myGamestate.getWhiteQueens())), myGamestate.getWhiteKing(), (possiblePieceMoveBitboard & (operations.BitboardOperations.clearRank(8))), ((myGamestate.getBlackRooks()) | ((java.lang.Long.parseLong(\"1\", 2)) << toCoord)), myGamestate.getBlackKnights(), myGamestate.getBlackBishops(), myGamestate.getBlackQueens(), myGamestate.getBlackKing(), true, myGamestate.getWhiteCastleKing(), myGamestate.getWhiteCastleQueen(), myGamestate.getBlackCastleKing(), myGamestate.getBlackCastleQueen(), enPassantSquare, myGamestate.getNumberOfFullMoves(), myGamestate.getNumberOfHalfMoves(), fromCoord, toCoord)); }else { listOfMoves.add(new board.FullGameState(temp, (((myGamestate.getWhitePawns()) ^ possiblePieceMoveBitboard) & (myGamestate.getWhitePawns())), (((myGamestate.getWhiteRooks()) ^ possiblePieceMoveBitboard) & (myGamestate.getWhiteRooks())), (((myGamestate.getWhiteKnights()) ^ possiblePieceMoveBitboard) & (myGamestate.getWhiteKnights())), (((myGamestate.getWhiteBishops()) ^ possiblePieceMoveBitboard) & (myGamestate.getWhiteBishops())), (((myGamestate.getWhiteQueens()) ^ possiblePieceMoveBitboard) & (myGamestate.getWhiteQueens())), myGamestate.getWhiteKing(), possiblePieceMoveBitboard, myGamestate.getBlackRooks(), myGamestate.getBlackKnights(), myGamestate.getBlackBishops(), myGamestate.getBlackQueens(), myGamestate.getBlackKing(), true, myGamestate.getWhiteCastleKing(), myGamestate.getWhiteCastleQueen(), myGamestate.getBlackCastleKing(), myGamestate.getBlackCastleQueen(), enPassantSquare, myGamestate.getNumberOfFullMoves(), myGamestate.getNumberOfHalfMoves(), fromCoord, toCoord)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/1128/buggy-version/src.operations.MoveGenerator.java", "BodyUseAPI": [], "Fixed commit": "e044696b28f79f10c2f14b7cfd17d30c09283922", "Url": "https://api.github.com/repos/philmosquera/My-Chess-Engine", "Date": "2015-03-03T19:17:16Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((e.getButton()) != (java.awt.event.MouseEvent.BUTTON1)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/7628/buggy-version/examples.src.sample1.SelectionAdapter.java", "BodyUseAPI": [], "Fixed commit": "d42a341fe84c3de3d83ad553fe21474a10ae6655", "Url": "https://api.github.com/repos/msteiger/jxmapviewer2", "Date": "2012-06-07T11:58:59Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Stuy.choose(java.lang.String[])"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((c1 == 1) || (c3 == 1)) { java.lang.System.out.println(\"\\nMr. Galano: Failure! Seems like you\\'re failing PE...\"); }else { java.lang.System.out.println(\"\\nNurse: No note, no treatment! Seems like you used this period to miss class. Failure!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/7751/buggy-version/P3.java", "BodyUseAPI": [], "Fixed commit": "bcbdbc591453d3471d05156c88aef0646249d603", "Url": "https://api.github.com/repos/jschluger/YEEZY", "Date": "2016-01-24T20:28:10Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (game.isPerfectMatch()) { if ((games.size()) >= 2) { java.lang.System.out.println(\"\"); } return games; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/7427/buggy-version/src.main.java.daaa.qdscrapper.services.api.impl.TheGamesDBApiService.java", "BodyUseAPI": [], "Fixed commit": "495af82e6c67e746926921244c354dda37c2c936", "Url": "https://api.github.com/repos/daaa57150/QDScraper", "Date": "2016-05-25T22:17:15Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang.StringUtils.isNotBlank(message)) response.getOutputStream().write(message.getBytes());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/8524/buggy-version/src.main.java.mvc.ErrorView.java", "BodyUseAPI": ["java.lang.String.getBytes()", "response.getOutputStream().write(byte[])"], "Fixed commit": "7665da8d3d7291460d431c350a071e99df46d4de", "Url": "https://api.github.com/repos/kulyadredd/AndroidServer", "Date": "2014-04-04T00:27:20Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((chapterDto.getQuiz()) != null) quizUpdater.update(newArrayList(chapterDto.getQuiz()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/8593/buggy-version/mtraining.src.main.java.org.motechproject.whp.mtraining.service.impl.ChapterUpdater.java", "BodyUseAPI": ["org.motechproject.whp.mtraining.service.impl.ChapterUpdater.newArrayList(chapterDto.getQuiz())", "org.motechproject.whp.mtraining.service.impl.QuizUpdater.update(newArrayList(chapterDto.getQuiz()))", "org.motechproject.mtraining.dto.ChapterDto.getQuiz()"], "Fixed commit": "6326d44fd42d8183b9db7f9dacdd3cf2cf211584", "Url": "https://api.github.com/repos/motech-implementations/whp-mTraining", "Date": "2014-03-28T04:32:44Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((customization.getSelectedTour()) != null) { getSupportActionBar().setTitle(customization.getSelectedTour().getName()); updateTourView(); }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/4771/buggy-version/OsmAnd.src.net.osmand.plus.sherpafy.TourViewActivity.java", "BodyUseAPI": ["getSupportActionBar().setTitle(customization.getSelectedTour().getName())", "customization.getSelectedTour().getName()", "net.osmand.plus.sherpafy.SherpafyCustomization.getSelectedTour()"], "Fixed commit": "3997d477922f777242e93881950508b03d141409", "Url": "https://api.github.com/repos/osmandapp/Osmand", "Date": "2014-06-03T21:00:37Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((st) == null) { st = con.createStatement(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/3362/buggy-version/src.main.java.org.kilnyy.feedreader.Adapter.java", "BodyUseAPI": [], "Fixed commit": "6b85428cd372a2bad846b4b14ccc605a3f965281", "Url": "https://api.github.com/repos/kilnyy/FeedReader", "Date": "2014-06-27T16:28:25Z"},
{"Line": "=>313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (n.getVariables().get(0).getInitializer().isPresent()) { com.github.javaparser.ast.expr.Expression value = n.getVariables().get(0).getInitializer().get(); com.github.javaparser.ast.expr.Expression target = new com.github.javaparser.ast.expr.NameExpr(n.getVariables().get(0).getName()); com.github.javaparser.ast.expr.AssignExpr a = new com.github.javaparser.ast.expr.AssignExpr(target, value, com.github.javaparser.ast.expr.AssignExpr.Operator.ASSIGN); super.visit(a, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/8874/buggy-version/core.main.src.mast.RequiresVisitor.java", "BodyUseAPI": ["n.getVariables().get(int)", "n.getVariables().get(0).getName()", "n.getVariables().get(0).getInitializer().get()", "n.getVariables().get(int)", "com.github.javaparser.ast.body.FieldDeclaration.getVariables()", "n.getVariables().get(0).getInitializer()", "com.github.javaparser.ast.body.FieldDeclaration.getVariables()"], "Fixed commit": "210d2194047dda75696e86f7f2d7efe26b370a8c", "Url": "https://api.github.com/repos/johncurcio/jRestrict", "Date": "2017-06-16T23:16:23Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!accept) { errors.add(((((((\"[jRestrict] \" + (this.filename)) + \" contains a non specified \") + (clause.type)) + \" (\") + decl) + \")\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/8874/buggy-version/core.main.src.mast.RequiresVisitor.java", "BodyUseAPI": [], "Fixed commit": "210d2194047dda75696e86f7f2d7efe26b370a8c", "Url": "https://api.github.com/repos/johncurcio/jRestrict", "Date": "2017-06-16T23:16:23Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (level != (currentLevel)) { setLevel(level); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/8419/buggy-version/src.tetris.model.Score.java", "BodyUseAPI": ["tetris.model.Score.setLevel(int)"], "Fixed commit": "78779a9d906a861a7a09f0f9468141ecbde6a3f5", "Url": "https://api.github.com/repos/tcarrill/Tetris", "Date": "2014-04-10T23:49:32Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fragmentControl) == 0) { transaction.addToBackStack(null); }else { fm.popBackStack(); transaction.addToBackStack(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/971/buggy-version/TssAndroid.app.src.main.java.com.example.tss.tssandroid.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "da3bd0b8ba10d9f75a277d2076bb032604cc8a9e", "Url": "https://api.github.com/repos/NjuFate/TSS2.0", "Date": "2016-07-25T08:28:29Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((c1 == null) ^ (c2 == null)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/2193/buggy-version/components.insight.SRC.org.openmicroscopy.shoola.util.ui.colourpicker.ColourPickerUtil.java", "BodyUseAPI": [], "Fixed commit": "06da762910ba8b59a4f7738fb5b32de2b5a69030", "Url": "https://api.github.com/repos/snoopycrimecop/openmicroscopy", "Date": "2017-07-03T09:11:34Z"},
{"Line": "=>395", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.openmicroscopy.shoola.util.CommonsLangUtils.isNotEmpty(model.getLUT())) fireChangeEvent(PaintPotUI.LUT_PROPERTY); else fireChangeEvent(PaintPotUI.COLOUR_CHANGED_PROPERTY);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/2193/buggy-version/components.insight.SRC.org.openmicroscopy.shoola.util.ui.colourpicker.RGBControl.java", "BodyUseAPI": [], "Fixed commit": "06da762910ba8b59a4f7738fb5b32de2b5a69030", "Url": "https://api.github.com/repos/snoopycrimecop/openmicroscopy", "Date": "2017-07-03T09:11:34Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.truward.polymer.domain.analysis.DomainField.findTrait(GetterTrait.KEY)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (getterTrait == null) { throw new java.lang.UnsupportedOperationException(((((\"Can't generate newBuilder for field that has no getters in the \" + \"origin interface: \") + (field.getClass())) + \": \") + (field.getFieldName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/2784/buggy-version/polymer-mods.polymer-domain-mod.polymer-domain-driver.src.main.java.com.truward.polymer.domain.driver.support.BuilderImplementer.java", "BodyUseAPI": [], "Fixed commit": "e9a0aa622478a81805ad701bcbc663986963d301", "Url": "https://api.github.com/repos/truward/polymer", "Date": "2014-01-28T03:35:56Z"},
{"Line": "=>701", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.preference.PreferenceManager.getDefaultSharedPreferences(eu.faircode.netguard.SinkholeService)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (prefs.getBoolean(\"resolved\", true)) new eu.faircode.netguard.DatabaseHelper(this).insertDns(rr).close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/5481/buggy-version/app.src.main.java.eu.faircode.netguard.SinkholeService.java", "BodyUseAPI": [], "Fixed commit": "18b780bfa459bd62a22a370eafd6cea28764d930", "Url": "https://api.github.com/repos/M66B/NetGuard", "Date": "2016-02-03T17:40:48Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mordrum.mfish.common.Fish.getFishForBiome(net.minecraft.world.biome.Biome)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (fishForBiome.isEmpty()) { return new net.minecraft.item.ItemStack(net.minecraft.init.Blocks.COBBLESTONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/7831/buggy-version/mfish.src.main.java.com.mordrum.mfish.server.FishingLootGenerator.java", "BodyUseAPI": [], "Fixed commit": "30ed72941edbf04b72d8c3f9bda38ffbc1898362", "Url": "https://api.github.com/repos/Mordrum/chocolate", "Date": "2017-01-13T21:48:06Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (choice < 5) { java.lang.System.out.println(\"Choose a password length (1 - 14)\"); length = in.nextInt(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/1102/buggy-version/Module05.mod05.Password.java", "BodyUseAPI": [], "Fixed commit": "f6151ddcdf6bc7f623001eb205f8718aaaa72844", "Url": "https://api.github.com/repos/IBeRamen/APCS", "Date": "2015-01-06T18:30:57Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (choice < 5) { java.lang.System.out.println((\"Password: \" + password)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/1102/buggy-version/Module05.mod05.Password.java", "BodyUseAPI": [], "Fixed commit": "f6151ddcdf6bc7f623001eb205f8718aaaa72844", "Url": "https://api.github.com/repos/IBeRamen/APCS", "Date": "2015-01-06T18:30:57Z"},
{"Line": "=>2030", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getRGBChannelCount()) == 1) || ((getRGBChannelCount()) == (getSizeC()))) { if (((getSizeC()) > 1) && ((getSizeT()) > 1)) { ms.dimensionOrder += \"C\"; } for (java.lang.Long nBytes : bytes) { java.lang.String axis = bytesPerAxis.get(nBytes); if ((ms.dimensionOrder.indexOf(axis)) == (-1)) { ms.dimensionOrder += axis; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/3167/buggy-version/components.formats-gpl.src.loci.formats.in.LIFReader.java", "BodyUseAPI": [], "Fixed commit": "02bffd9c8c761ee5a9db0489b736e5d53d9cca7d", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2016-04-06T03:01:14Z"},
{"Line": "=>1085", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dateAsString.size()) > 1) { return \"Wrong syntax for entering date with time\"; }else { specifiedHour = 23; specifiedMinutes = 59; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/7710/buggy-version/src.Parser.CommandController.java", "BodyUseAPI": [], "Fixed commit": "d0ab86f3ef59f196d0cf97c86dbb9bc90882a0c3", "Url": "https://api.github.com/repos/cs2103jan2015-w13-1j/main", "Date": "2015-04-06T15:41:20Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Context.getSystemService(Context.INPUT_METHOD_SERVICE)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (imm.isAcceptingText()) { imm.hideSoftInputFromWindow(v.getWindowToken(), 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/8018/buggy-version/app.src.main.java.com.google.samples.apps.topeka.widget.quiz.AbsQuizView.java", "BodyUseAPI": ["android.view.inputmethod.InputMethodManager.hideSoftInputFromWindow(v.getWindowToken(),int)"], "Fixed commit": "08fd7e5f46f40a181d4a64e770ae824bf88a79ad", "Url": "https://api.github.com/repos/ShreyashPromact/android-topeka", "Date": "2015-09-24T07:05:25Z"},
{"Line": "=>489", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.dreambot.api.methods.widget.Widgets.getWidget(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((w.getChild(13).getText().contains(\"QUEST COMPLETE\")) && (!(w.getChild(13).isHidden()))) { this.setQuestSolverState(org.silabsoft.dreambot.quest.impl.END); }else { this.currentStep = org.silabsoft.dreambot.quest.impl.CookAssistant.QuestStep.CHECK_ITEMS; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/8815/buggy-version/src.org.silabsoft.dreambot.quest.impl.CookAssistant.java", "BodyUseAPI": [], "Fixed commit": "0e8d9772c3f751bcee2df295fd3d922fa44bfbef", "Url": "https://api.github.com/repos/silabsoft/Quester", "Date": "2016-07-03T11:05:53Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eu.j0ntech.tenpair.save.Saver.getAvailableSaves(getActivity())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (saves != null) { java.lang.String[] saveNames = new java.lang.String[saves.length]; for (int i = 0; i < (saves.length); i++) saveNames[i] = saves[i].getName(); builder.setItems(saveNames, new android.content.DialogInterface.OnClickListener() { @java.lang.Override public void onClick(android.content.DialogInterface dialog, int which) { mListener.onLoad(saves[which].getPath()); } }); }else { builder.setTitle(getString(R.string.error_no_saves)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/8126/buggy-version/src.eu.j0ntech.tenpair.fragment.LoadDialog.java", "BodyUseAPI": ["saves[i].getName()", "AlertDialog.Builder.setItems(java.lang.String[],android.content.DialogInterface.OnClickListener)", "eu.j0ntech.tenpair.fragment.LoadDialog.LoadDialogListener.onLoad(saves[which].getPath())", "saves[which].getPath()"], "Fixed commit": "9f6044d40dbe6a0dc282b4bca4166a68be2c85a4", "Url": "https://api.github.com/repos/olivervaga/tenpair", "Date": "2013-04-22T14:54:55Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, com.sk89q.jnbt.Tag>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (posTag == null) { com.boydti.fawe.Fawe.debug((\"Missing pos tag: \" + (tag))); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/6310/buggy-version/core.src.main.java.com.boydti.fawe.object.change.MutableEntityChange.java", "BodyUseAPI": [], "Fixed commit": "de26c22f05106fe33faffb72f4f4cd21c6a4a474", "Url": "https://api.github.com/repos/DarkFort/FastAsyncWorldedit-rus-by-DarkFort", "Date": "2017-05-15T09:38:22Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (actualTempWord.equals(\"\")) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/3193/buggy-version/src.model.reader.Evaluator.java", "BodyUseAPI": [], "Fixed commit": "169b93ca9f628b8a8980f29aa94dc5356c70d002", "Url": "https://api.github.com/repos/oolawo09/TheWriter", "Date": "2014-05-03T22:24:17Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (player.isPlaying()) { progress_tv.setText(rd.dap.support.Time.toString(player.getCurrentProgress())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/5454/buggy-version/src.rd.dap.fragments.FragmentSeeker.java", "BodyUseAPI": ["rd.dap.PlayerService.getCurrentProgress()", "rd.dap.support.Time.toString(player.getCurrentProgress())", "android.widget.TextView.setText(rd.dap.support.Time.toString(player.getCurrentProgress()))"], "Fixed commit": "469588c583a85e79feda7c62635f0a6af3fd0065", "Url": "https://api.github.com/repos/ronnie-dalsgaard/DAP", "Date": "2014-10-10T11:44:36Z"},
{"Line": "=>353", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ontosoft.client.authentication.SessionStorage.getSession()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((isadmin) || ((isreguser) && (org.ontosoft.shared.utils.PermUtils.getAccessLevelForUser(summary.getPermission(), session.getUsername(), summary.getId()).equals(\"Write\")))) if (summary.getExternalRepositoryId().equals(SoftwareREST.LOCAL)) style = \"edit-cell\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/270/buggy-version/client.src.main.java.org.ontosoft.client.application.list.SoftwareListView.java", "BodyUseAPI": ["org.ontosoft.shared.classes.SoftwareSummary.getExternalRepositoryId()", "summary.getExternalRepositoryId().equals(SoftwareREST.LOCAL)"], "Fixed commit": "5e05213466a9ef3aaf4ba88a81c3fdff72535339", "Url": "https://api.github.com/repos/KnowledgeCaptureAndDiscovery/ontosoft", "Date": "2016-05-17T22:24:25Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cn.wisdom.common.utils.CollectionUtils.isEmpty(userIdList)) { userList = new java.util.ArrayList<cn.wisdom.dao.vo.User>(); return userList; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/4507/buggy-version/src.main.java.cn.wisdom.dao.UserDaoImpl.java", "BodyUseAPI": [], "Fixed commit": "cdf878ec4c8b77ae894253ebab0c706d1a9a0098", "Url": "https://api.github.com/repos/ooclrickliu/credit", "Date": "2016-07-28T13:22:39Z"},
{"Line": "=>270", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (new java.io.File(task.save_address, task.name).exists()) com.golshadi.majid.Utils.helper.FileUtils.delete(task.save_address, task.name);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/4848/buggy-version/src.main.java.com.golshadi.majid.core.chunkWorker.Moderator.java", "BodyUseAPI": ["com.golshadi.majid.Utils.helper.FileUtils.delete(task.save_address,task.name)"], "Fixed commit": "b2ae8afc62861aa39281f2e1501c23abc6acc65d", "Url": "https://api.github.com/repos/Khang-NT/Android-Download-Manager-Pro", "Date": "2017-02-20T04:51:20Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((marker) == null) || ((marker.getPosition()) == null)) { android.widget.Toast.makeText(this, this.getString(R.string.error_connection), Toast.LENGTH_SHORT).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/4732/buggy-version/app.src.main.java.com.rviannaoliveira.maps.MapsActivity.java", "BodyUseAPI": [], "Fixed commit": "4b4aa854a8f21c0ecf305237ffb5dd50b02cc5d2", "Url": "https://api.github.com/repos/rviannaoliveira/VMap", "Date": "2017-03-01T01:22:04Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((playerIndicator) != null) { playerIndicator.setPosition(bc.sprite.getX(), bc.sprite.getY()); playerIndicator.draw(batch); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/5648/buggy-version/HW4.core.src.edu.cs328.BuildingComponent.java", "BodyUseAPI": [], "Fixed commit": "c55abc7b18f4d3e6c952f577a71be0b2b4cf578d", "Url": "https://api.github.com/repos/KnightPickles/CS328", "Date": "2016-03-28T07:55:25Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (type == (edu.cs328.BuildingComponent.BuildingType.MainBase)) playerIndicator = atlas.createSprite(\"blue_indicator\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/5648/buggy-version/HW4.core.src.edu.cs328.BuildingComponent.java", "BodyUseAPI": [], "Fixed commit": "c55abc7b18f4d3e6c952f577a71be0b2b4cf578d", "Url": "https://api.github.com/repos/KnightPickles/CS328", "Date": "2016-03-28T07:55:25Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (type == (edu.cs328.BuildingComponent.BuildingType.MainBase)) playerIndicator = atlas.createSprite(\"red_indicator\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/5648/buggy-version/HW4.core.src.edu.cs328.BuildingComponent.java", "BodyUseAPI": [], "Fixed commit": "c55abc7b18f4d3e6c952f577a71be0b2b4cf578d", "Url": "https://api.github.com/repos/KnightPickles/CS328", "Date": "2016-03-28T07:55:25Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((singleSelected) != null) { edu.cs328.GhostComponent gc = singleSelected.getComponent(edu.cs328.GhostComponent.class); if (((gc.alive) && (!(targets.contains(gc.desiredMovePosition)))) && ((gc.desiredMovePosition) != null)) { targets.add(gc.desiredMovePosition); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/5648/buggy-version/HW4.core.src.edu.cs328.SelectionManager.java", "BodyUseAPI": [], "Fixed commit": "c55abc7b18f4d3e6c952f577a71be0b2b4cf578d", "Url": "https://api.github.com/repos/KnightPickles/CS328", "Date": "2016-03-28T07:55:25Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((singleSelected) != null) { edu.cs328.GhostComponent gc = singleSelected.getComponent(edu.cs328.GhostComponent.class); if (((gc.alive) && ((gc.position) != null)) && ((gc.desiredMovePosition) != null)) { edu.cs328.SelectionManager.drawDashedLine(sh, new com.badlogic.gdx.math.Vector2(2, 1), gc.position, gc.desiredMovePosition, 1); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/5648/buggy-version/HW4.core.src.edu.cs328.SelectionManager.java", "BodyUseAPI": [], "Fixed commit": "c55abc7b18f4d3e6c952f577a71be0b2b4cf578d", "Url": "https://api.github.com/repos/KnightPickles/CS328", "Date": "2016-03-28T07:55:25Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jtrfp.trcl.obj.Velocible.getVelocity()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((oldVelocity.getNorm()) == 0) oldVelocity = org.apache.commons.math3.geometry.euclidean.threed.Vector3D.PLUS_I;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/5341/buggy-version/src.main.java.org.jtrfp.trcl.beh.phy.BouncesOffSurfaces.java", "BodyUseAPI": [], "Fixed commit": "9393b992bde8e096fd40de88301b1ee25417ba85", "Url": "https://api.github.com/repos/jtrfp/terminal-recall", "Date": "2014-03-28T16:04:11Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.eucalyptus.util.Exceptions.findCause(java.lang.Throwable,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (existingException != null) { return existingException; }else { return new com.eucalyptus.simpleworkflow.SwfMetadataException(message, cause); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/594/buggy-version/clc.modules.simpleworkflow.src.main.java.com.eucalyptus.simpleworkflow.persist.SwfPersistenceSupport.java", "BodyUseAPI": [], "Fixed commit": "689ea9c4538505c56feb1d0d98f177bf01f1b57a", "Url": "https://api.github.com/repos/eucalyptus/eucalyptus", "Date": "2017-03-24T06:25:35Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.eucalyptus.util.Exceptions.findCause(java.lang.Throwable,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (existingException != null) { return existingException; }else { return new com.eucalyptus.simpleworkflow.SwfMetadataNotFoundException(message, cause); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/594/buggy-version/clc.modules.simpleworkflow.src.main.java.com.eucalyptus.simpleworkflow.persist.SwfPersistenceSupport.java", "BodyUseAPI": [], "Fixed commit": "689ea9c4538505c56feb1d0d98f177bf01f1b57a", "Url": "https://api.github.com/repos/eucalyptus/eucalyptus", "Date": "2017-03-24T06:25:35Z"},
{"Line": "=>528", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (status.equals(\"edge\")) { currentDTField.setVarcharValue(varchar); }else if (status.equals(\"xmk\")) { xmlCurrentDTField.setVarcharValue(varchar); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/6858/buggy-version/src.EdgeConvertGUI.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "802b9122469cf57278b35f512f2a0a85034cbf37", "Url": "https://api.github.com/repos/je6095/422-Project", "Date": "2017-04-23T18:02:04Z"},
{"Line": "=>486", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JList.getSelectedIndex()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (selIndex >= 0) { java.lang.String selText = EdgeConvertGUI.dlmDTFieldsTablesAll.getElementAt(selIndex).toString(); setCurrentDTField(selText); if (status.equals(\"edge\")) { currentDTField.setDefaultValue(EdgeConvertGUI.jtfDTDefaultValue.getText()); }else if (status.equals(\"xml\")) { xmlCurrentDTField.setDefaultValue(EdgeConvertGUI.jtfDTDefaultValue.getText()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/6858/buggy-version/src.EdgeConvertGUI.java", "BodyUseAPI": ["java.lang.Object.toString()", "javax.swing.DefaultListModel.getElementAt(int)"], "Fixed commit": "802b9122469cf57278b35f512f2a0a85034cbf37", "Url": "https://api.github.com/repos/je6095/422-Project", "Date": "2017-04-23T18:02:04Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (siddhiTemplate.getCmpAction().equals(\"=\")) { stringBuffer1.append(\"==\"); }else { stringBuffer1.append(siddhiTemplate.getCmpAction()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/6152/buggy-version/email-monitor.email-monitor-query.src.main.java.org.wso2.cep.email.monitor.query.compiler.internal.siddhi.SiddhiQueryWriter.java", "BodyUseAPI": ["java.lang.StringBuffer.append(siddhiTemplate.getCmpAction())", "org.wso2.cep.email.monitor.query.compiler.internal.siddhi.SiddhiTemplate.getCmpAction()"], "Fixed commit": "ab61e0f63f26e82c767ec273137f091631387113", "Url": "https://api.github.com/repos/sameerak/NewEmailMonitor", "Date": "2014-06-18T11:31:03Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((null != (first)) && (c == '.')) { java.lang.String fn = clearStringBuffer(); if (!(org.nutz.lang.Strings.isBlank(fn))) { addNode(new org.nutz.ioc.java.FieldNode(fn)); } }else if ((c == '\\'') || (c == '\"')) { clearStringBuffer(); for ((i)++; (i) < (cs.length); (i)++) { char n = cs[i]; if (n == c) break; sb.append(n); } addNode(new org.nutz.ioc.java.StringNode(clearStringBuffer())); }else if (c == '@') { java.lang.String name = readToDot().toUpperCase(); if (\"IOC\".equals(name)) { addNode(new org.nutz.ioc.java.IocSelfNode()); }else if (\"CONTEXT\".equals(name)) { addNode(new org.nutz.ioc.java.IocContextNode()); }else if (\"NAME\".equals(name)) { addNode(new org.nutz.ioc.java.IocObjectNameNode()); } continue; }else if (c == '$') { java.lang.String name = readToDot(); addNode(new org.nutz.ioc.java.IocObjectNode(name)); continue; }else if (c == '(') { java.lang.String funcName = org.nutz.lang.Strings.trim(clearStringBuffer()); argss.push(new org.nutz.lang.util.LinkedArray<org.nutz.ioc.java.ChainNode>(org.nutz.ioc.java.ChainNode.class, 5)); ends.push(')'); (i)++; parse(); ends.popLast(); org.nutz.ioc.java.ChainNode[] args = argss.popLast().toArray(); int pos = funcName.lastIndexOf('.'); if (pos > 0) { java.lang.String className = funcName.substring(0, pos); funcName = funcName.substring((pos + 1)); addNode(new org.nutz.ioc.java.StaticFunctionNode(className, funcName, args)); }else if (pos == 0) { addNode(new org.nutz.ioc.java.ObjectFunctionNode(funcName.substring(1), args)); }else { addNode(new org.nutz.ioc.java.ObjectFunctionNode(funcName, args)); } clearStringBuffer(); }else if (((ends.size()) > 0) && (c == (ends.last()))) { checkIfNeedAddNode(); return; }else { sb.append(c); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/5596/buggy-version/src.org.nutz.ioc.java.ChainParsing.java", "BodyUseAPI": ["java.lang.StringBuilder.append(char)"], "Fixed commit": "1fc1e9cc229e7b5b9195d369d3b478b55f3bc4bb", "Url": "https://api.github.com/repos/ansjsun/nutz", "Date": "2014-08-16T17:38:10Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.lastIndexOf(char)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (pos == 0) { addNode(new org.nutz.ioc.java.ObjectFunctionNode(funcName.substring(1), args)); }else { addNode(new org.nutz.ioc.java.ObjectFunctionNode(funcName, args)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/5596/buggy-version/src.org.nutz.ioc.java.ChainParsing.java", "BodyUseAPI": [], "Fixed commit": "1fc1e9cc229e7b5b9195d369d3b478b55f3bc4bb", "Url": "https://api.github.com/repos/ansjsun/nutz", "Date": "2014-08-16T17:38:10Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isInEditMode())) { ac.robinson.util.UIUtilities.setButtonColorFilters(this, defaultColor, touchedColor); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/2553/buggy-version/src.ac.robinson.view.CenteredImageTextButton.java", "BodyUseAPI": [], "Fixed commit": "bab85b1f3f9feb2a2c3dee48dfd6ed95d124c433", "Url": "https://api.github.com/repos/communitymedia/mediautilities", "Date": "2012-11-06T19:13:12Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isAdded())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/3111/buggy-version/package.reward.src.main.java.com.hongyu.reward.ui.fragment.startapp.RegisterFragment.java", "BodyUseAPI": [], "Fixed commit": "b4aa8c3cb4687b2942ece374377d7c94e42c2026", "Url": "https://api.github.com/repos/zhangyang3233/fw", "Date": "2016-10-17T08:12:42Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (toFile.startsWith(\"/\")) { toFile = toFile.substring(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/8672/buggy-version/src.ca.kanoa.installer.ftp.FTP.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "1bc7ff21137cc4b888d3f36f18e8e540af5f4aed", "Url": "https://api.github.com/repos/EvilKanoa/Installer", "Date": "2013-11-17T14:49:13Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (file.startsWith(\"/\")) { file = file.substring(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/8672/buggy-version/src.ca.kanoa.installer.ftp.FTP.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "1bc7ff21137cc4b888d3f36f18e8e540af5f4aed", "Url": "https://api.github.com/repos/EvilKanoa/Installer", "Date": "2013-11-17T14:49:13Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getSupportActionBar()) != null) { getSupportActionBar().setDisplayShowTitleEnabled(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/9064/buggy-version/app.src.main.java.com.nervousfish.nervousfish.service_locator.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "c247dfa191701b6ab50dbe8c5c58152bf941dd13", "Url": "https://api.github.com/repos/ericcornelissen/NervousFish", "Date": "2017-05-02T07:54:01Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentStack) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/6768/buggy-version/src.main.java.edu.nyu.physics.gershowlab.mmf.mmf_Reader.java", "BodyUseAPI": [], "Fixed commit": "b62a3bf51c8c626b53ce4b7d8f6967ff50d0262e", "Url": "https://api.github.com/repos/GershowLab/MMF-ImageJ-Plugin", "Date": "2013-12-12T03:10:26Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((frameNumber < 0) || (frameNumber > (raf.getNumFrames()))) { edu.nyu.physics.gershowlab.mmf.IJ.showMessage(\"mmfReader\", \"Frame Index Error; mmf_Reader\"); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/6768/buggy-version/src.main.java.edu.nyu.physics.gershowlab.mmf.mmf_Reader.java", "BodyUseAPI": [], "Fixed commit": "b62a3bf51c8c626b53ce4b7d8f6967ff50d0262e", "Url": "https://api.github.com/repos/GershowLab/MMF-ImageJ-Plugin", "Date": "2013-12-12T03:10:26Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(getIntent().getBooleanExtra(\"CameFromLogout\", false))) { com.google.firebase.database.FirebaseDatabase database = com.google.firebase.database.FirebaseDatabase.getInstance(); database.setPersistenceEnabled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/6860/buggy-version/app.src.main.java.com.example.aegis.budgpal.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "f8d38a7c7d33e7e8f56d8d20967dc8815f604d0a", "Url": "https://api.github.com/repos/Aegen/BudgetPal", "Date": "2017-04-22T15:25:39Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((mPoint) > 10) mPoint = 10;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/828/buggy-version/app.src.main.java.nguyengiale.android.v1.chart.ArcChart.java", "BodyUseAPI": [], "Fixed commit": "fcdc095d47151c92bdc0d132b2aec49f99b151d6", "Url": "https://api.github.com/repos/nguyengialeit/chart", "Date": "2017-01-04T06:55:03Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mPoint) > 10) this.mPoint = 10; else this.mPoint = pPoint;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/828/buggy-version/app.src.main.java.nguyengiale.android.v1.chart.ArcChart.java", "BodyUseAPI": [], "Fixed commit": "fcdc095d47151c92bdc0d132b2aec49f99b151d6", "Url": "https://api.github.com/repos/nguyengialeit/chart", "Date": "2017-01-04T06:55:03Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mMaxPoint) == 0) mMaxPoint = 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/828/buggy-version/app.src.main.java.nguyengiale.android.v1.chart.RadarChart.java", "BodyUseAPI": [], "Fixed commit": "fcdc095d47151c92bdc0d132b2aec49f99b151d6", "Url": "https://api.github.com/repos/nguyengialeit/chart", "Date": "2017-01-04T06:55:03Z"},
{"Line": "=>397", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((contentType) != null) { method.addHeader(\"Content-Type\", contentType); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/7335/buggy-version/src.main.java.org.dasein.cloud.aws.storage.S3Method.java", "BodyUseAPI": [], "Fixed commit": "b473535411edf510bd73fc70a9190c93ef6c6c8c", "Url": "https://api.github.com/repos/TranscendComputing/dasein-cloud-aws", "Date": "2012-12-05T15:52:55Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (statementName == null) { batchedStatementName = null; }else { query.setStatementName(statementName); if ((originalParentName) == null) { originalParentName = statementName; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/1920/buggy-version/org.postgresql.core.v3.BatchedQueryDecorator.java", "BodyUseAPI": ["org.postgresql.core.v3.SimpleQuery.setStatementName(java.lang.String)"], "Fixed commit": "893bb7bdf56e4e384f7b73376a035fe845cf36d7", "Url": "https://api.github.com/repos/whitingjr/pgjdbc", "Date": "2015-11-04T18:31:47Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((r.nextInt(2)) == 0) hvarID = -hvarID;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/5313/buggy-version/src.main.java.de.unihl.algo.three_sat_crititcal_number.CNFFormula.java", "BodyUseAPI": [], "Fixed commit": "32db1d3297e0106971ca49c135f679de7670b81e", "Url": "https://api.github.com/repos/master-lincoln/3-sat-crititcal-number", "Date": "2013-01-17T14:17:42Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((params) == null) { paramNum = 0; }else { paramNum = params.length; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/1749/buggy-version/src.main.java.com.jModule.def.Command.java", "BodyUseAPI": [], "Fixed commit": "433121961034362ebab0cb0b1bbc1844710da804", "Url": "https://api.github.com/repos/pkelaita/JModule", "Date": "2017-09-01T06:08:28Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (paramNum == (args.length)) { logic.runCommand(args); }else { java.lang.System.out.println(((getUsage()) + \"\\n\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/1749/buggy-version/src.main.java.com.jModule.def.Command.java", "BodyUseAPI": ["com.jModule.def.CommandLogic.runCommand(java.lang.String[])"], "Fixed commit": "433121961034362ebab0cb0b1bbc1844710da804", "Url": "https://api.github.com/repos/pkelaita/JModule", "Date": "2017-09-01T06:08:28Z"},
{"Line": "=>373", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.StringBuilder.toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (options.endsWith(\",\")) { options = options.substring(0, ((options.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/6371/buggy-version/src.main.java.net.bootsfaces.component.datePicker.DatePicker.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "72141642346dd609b0535889803c8e835ff275e7", "Url": "https://api.github.com/repos/TheCoder4eu/BootsFaces-OSP", "Date": "2016-10-07T21:15:53Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((sb.length()) > 0) && ((sb.charAt(((sb.length()) - 1))) != ',')) { sb.append(','); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/6371/buggy-version/src.main.java.net.bootsfaces.render.JQ.java", "BodyUseAPI": ["java.lang.StringBuilder.append(char)"], "Fixed commit": "72141642346dd609b0535889803c8e835ff275e7", "Url": "https://api.github.com/repos/TheCoder4eu/BootsFaces-OSP", "Date": "2016-10-07T21:15:53Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((temp[0].matches(\"^[A-Za-z]+$\")) && (temp[1].matches(\"^-?\\\\d+(\\\\.\\\\d+)?$\"))) { java.lang.Boolean flag = false; for (calculator.Calculator.Monomial monomial : exp) { if (monomial.vars.containsKey(temp[0])) flag = true; } if (!flag) { java.lang.System.out.println(\"No such variable(s) in the expression!!\"); return; } if (!(solves.containsKey(temp[0]))) solves.put(temp[0], java.lang.Double.valueOf(temp[1])); else { java.lang.System.out.println(\"Simplify parameter is repeated!\"); return; } }else { java.lang.System.out.println(\"Simplify parameter error format,should be x=3.3 or likely\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/7067/buggy-version/src.calculator.Calculator.java", "BodyUseAPI": ["java.lang.Double.valueOf(java.lang.String)", "java.util.HashMap<java.lang.String, java.lang.Integer>.containsKey(java.lang.String)", "java.util.HashMap<java.lang.String, java.lang.Double>.put(java.lang.String,java.lang.Double)", "java.util.HashMap<java.lang.String, java.lang.Double>.containsKey(java.lang.String)"], "Fixed commit": "93c92c8e86eb7a6ce754dc96ae0f6315655c12e5", "Url": "https://api.github.com/repos/DannieFly/Lab1", "Date": "2016-09-25T13:54:48Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (useDefault) { com.adobe.acs.commons.packaging.impl.PackageHelperImpl.log.debug(\"Using default ACS AEM Commons packager package icon.\"); resourceResolver = resourceResolverFactory.getAdministrativeResourceResolver(null); thumbnailResource = resourceResolver.getResource(com.adobe.acs.commons.packaging.impl.DEFAULT_PACKAGE_THUMBNAIL_RESOURCE_PATH); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/4422/buggy-version/bundle.src.main.java.com.adobe.acs.commons.packaging.impl.PackageHelperImpl.java", "BodyUseAPI": [], "Fixed commit": "de6ffd02cb12ec8f1a4153bb64f94f1bb7fe87f7", "Url": "https://api.github.com/repos/davidjgonzalez/acs-aem-commons", "Date": "2014-02-14T22:31:40Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((mValidationTextView.getAnimation()) == null) || (mValidationTextView.getAnimation().hasEnded())) || (!(mValidationTextView.getAnimation().hasStarted()))) { mValidationTextView.setAnimation(animation); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/3792/buggy-version/src.org.adaptlab.chpir.android.survey.QuestionFragment.java", "BodyUseAPI": ["android.widget.TextView.setAnimation(android.view.animation.Animation)"], "Fixed commit": "c9686776401dda5f5238db4502e6dafb71732410", "Url": "https://api.github.com/repos/mnipper/AndroidSurvey", "Date": "2013-12-27T19:03:40Z"},
{"Line": "=>1211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.dashbuilder.dataprovider.sql.SQLDataSetProvider.LookupProcessor.calculateDateInterval(org.dashbuilder.dataset.group.ColumnGroup)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (DateIntervalType.DAY_OF_WEEK.equals(intervalType)) { throw new java.lang.IllegalArgumentException(\"Group by DAY_OF_WEEK not supported in SQL data sets\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/4212/buggy-version/dashbuilder-backend.dashbuilder-dataset-sql.src.main.java.org.dashbuilder.dataprovider.sql.SQLDataSetProvider.java", "BodyUseAPI": [], "Fixed commit": "1b52019cbc184d83568302f71b6945588978ba4e", "Url": "https://api.github.com/repos/dgutierr/dashbuilder", "Date": "2017-04-26T14:02:52Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!init) return new com.mlieber.KanjiKing.Card[0];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/6983/buggy-version/src.com.mlieber.KanjiKing.Search.java", "BodyUseAPI": [], "Fixed commit": "aee73f8fa44b3684d4c5776b8b88f1eaec0ebf8e", "Url": "https://api.github.com/repos/denudge/KanjiKing-for-Android", "Date": "2012-05-25T16:41:30Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.hm.lip.pizza.driver.util.communication.HttpConnector.doGetRequest(java.lang.String,MediaType.APPLICATION_JSON)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((response.getEntity()) != null) { fetchedDrivers = edu.hm.lip.pizza.driver.util.communication.JsonMapper.fromJSONArray(response.getEntity().getContent(), edu.hm.lip.pizza.driver.objects.resources.Driver.class); }else { java.lang.String localizedMsg = getString(R.string.service_no_driver_available); notifyTransactionDone(false, localizedMsg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/7762/buggy-version/PizzaAppDriver.src.edu.hm.lip.pizza.driver.services.DriverInfoService.java", "BodyUseAPI": ["response.getEntity().getContent()", "org.apache.http.HttpResponse.getEntity()", "edu.hm.lip.pizza.driver.util.communication.JsonMapper.fromJSONArray(response.getEntity().getContent(),java.lang.Class)"], "Fixed commit": "2e54d69589e59aff3915038ff494aa7d7f587483", "Url": "https://api.github.com/repos/franzmathauser/pizzaapp", "Date": "2012-06-07T15:10:08Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (java.util.Objects.equals(gender, \"male\")) { imageView.setImageResource(R.drawable.man_fit); return; }else if (java.util.Objects.equals(gender, \"female\")) { imageView.setImageResource(R.drawable.women_fit); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/1594/buggy-version/app.src.main.java.su.dreamteam.lonja.trainingdiaryfinal.Bindings.java", "BodyUseAPI": ["java.util.Objects.equals(java.lang.String,java.lang.String)"], "Fixed commit": "b1ba30d4283d74ddccdfbad7e9c6ddffedd9fcb5", "Url": "https://api.github.com/repos/lonja/TrainingDiaryMVVMFinal", "Date": "2016-06-09T16:58:50Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(wordsList.isEmpty())) { field = wordsList.poll().toLowerCase(); }else { throw new java.lang.IllegalArgumentException(main.logic.UpdateParser.MESSAGE_INVALID_FIELD); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/7065/buggy-version/src.main.logic.UpdateParser.java", "BodyUseAPI": ["java.util.LinkedList<java.lang.String>.poll()", "java.lang.String.toLowerCase()"], "Fixed commit": "ecda1fffe96efd057bcde7a3d7063f8aaba295e6", "Url": "https://api.github.com/repos/cs2103aug2014-T13-2J/main", "Date": "2014-11-07T07:11:21Z"},
{"Line": "=>492", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(wordsList.isEmpty())) { currentWord = wordsList.poll(); }else { throw new java.lang.IllegalArgumentException(main.logic.CommandParser.MESSAGE_INVALID_DATE_FORMAT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/7065/buggy-version/src.main.logic.CommandParser.java", "BodyUseAPI": ["java.util.LinkedList<java.lang.String>.poll()"], "Fixed commit": "ecda1fffe96efd057bcde7a3d7063f8aaba295e6", "Url": "https://api.github.com/repos/cs2103aug2014-T13-2J/main", "Date": "2014-11-07T07:11:21Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.graphics.BitmapFactory.decodeStream(cacheFile.getInputStream())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (imageOrig == null) { org.quantumbadger.redreader.common.General.quickToast(this, \"Couldn't load the image. Trying internal browser.\"); revertToWeb(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/1381/buggy-version/src.main.java.org.quantumbadger.redreader.activities.ImageViewActivity.java", "BodyUseAPI": [], "Fixed commit": "de15b05493c14d496200f38de33c0f572f6006eb", "Url": "https://api.github.com/repos/QuantumBadger/RedReader", "Date": "2013-04-06T21:53:11Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["opendap.threddsHandler.Catalog.getCatalogDocument()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (catalogDoc == null) { _log.error(\"getServiceByName() - FAILED to locate catalog document for catalog with key '{}' RETURNING NULL\", _parentCatalog.getCatalogKey()); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/1001/buggy-version/src.opendap.threddsHandler.DatasetScan.java", "BodyUseAPI": [], "Fixed commit": "250df6af72b205c349dfe2b8542ed82e626a0782", "Url": "https://api.github.com/repos/OPENDAP/olfs", "Date": "2015-09-12T00:02:45Z"},
{"Line": "=>250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eu.spitfire_project.smart_service_proxy.core.Backend.getResources()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(resourceURIs.isEmpty())) { buf.append(((\"<h3> \" + (backend.getClass().getSimpleName())) + \"</h3>\\n\")); buf.append(\"<ul>\\n\"); for (java.net.URI resourceURI : resourceURIs) { buf.append(((((\"<li><a href=\\\"\" + (resourceURI.toString())) + \"\\\">\") + (resourceURI.toString())) + \"</a></li>\\n\")); } buf.append(\"</ul>\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/7502/buggy-version/src.main.java.eu.spitfire_project.smart_service_proxy.core.EntityManager.java", "BodyUseAPI": [], "Fixed commit": "615ebc476c3dc560d6b3eed2134b201ff9a776c6", "Url": "https://api.github.com/repos/ict-spitfire/smart-service-proxy", "Date": "2012-03-21T22:16:15Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (parent == null) { this.level = 0; }else { this.level = (parent.level) + 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/4635/buggy-version/src.M2.Element.java", "BodyUseAPI": [], "Fixed commit": "6a710eeb4b32be99d2ed1c357cd2e1d4ae6f9cc0", "Url": "https://api.github.com/repos/zelus/hadl", "Date": "2013-10-28T07:47:48Z"},
{"Line": "=>310", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((numTotalHits % 10) == 0) { noPages -= 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/5108/buggy-version/src.main.java.com.searchcode.app.service.CodeSearcher.java", "BodyUseAPI": [], "Fixed commit": "0da260d56083f77ffb26d700d75e359f9f644a3c", "Url": "https://api.github.com/repos/boyter/searchcode-server", "Date": "2016-10-20T21:23:10Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (externalFilesDir == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/5133/buggy-version/datakit.src.main.java.org.md2k.datakit.manager.FileManager.java", "BodyUseAPI": [], "Fixed commit": "7842e8bc529a44820e44e297521ff66f7690f387", "Url": "https://api.github.com/repos/MD2Korg/mCerebrum-DataKit", "Date": "2015-09-14T06:57:05Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<com.example.mohammedal.learnarabic.Word>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((current.getAudioResourceId()) != 0) { android.media.MediaPlayer mp = android.media.MediaPlayer.create(this, current.getAudioResourceId()); mp.start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/2734/buggy-version/app.src.main.java.com.example.mohammedal.learnarabic.ColloquialActivity.java", "BodyUseAPI": ["android.media.MediaPlayer.create(com.example.mohammedal.learnarabic.ColloquialActivity,current.getAudioResourceId())", "com.example.mohammedal.learnarabic.Word.getAudioResourceId()"], "Fixed commit": "f34287bea0b9a43ab738d9b6f2246f154e93eee7", "Url": "https://api.github.com/repos/brilliant-ember/Arabic-Teaching-app", "Date": "2017-12-14T01:14:08Z"},
{"Line": "=>965", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fixedParameters.containsKey(p)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/4552/buggy-version/src.edacc.parameterspace.graph.ParameterGraph.java", "BodyUseAPI": [], "Fixed commit": "e561371b92386b2a1e30299c6877b593aecb8939", "Url": "https://api.github.com/repos/ceari/edacc_api", "Date": "2012-11-19T12:30:29Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (toCompare instanceof clueGame.Card) { clueGame.Card tocompare = ((clueGame.Card) (toCompare)); equal = ((this.cardType) == (tocompare.cardType)) && (this.name.equalsIgnoreCase(tocompare.name)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/1187/buggy-version/clueGame.Card.java", "BodyUseAPI": [], "Fixed commit": "4972af05a8a1dff36150439614143e129f870e86", "Url": "https://api.github.com/repos/mstech/NewClueBoard", "Date": "2012-10-29T22:33:31Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((neighborIDs.length) == 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/7025/buggy-version/src.Logger.java", "BodyUseAPI": [], "Fixed commit": "d47041debdbcb6405e6273d6762ca4d877a7cc80", "Url": "https://api.github.com/repos/mistiansen/P2P", "Date": "2017-12-01T19:03:22Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (obj != null) { onGotObject(obj); }else { android.widget.Toast.makeText(this, \"Error getting object\", Toast.LENGTH_SHORT); finishActivity(eu.e43.impeller.RESULT_CANCELED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/7185/buggy-version/src.eu.e43.impeller.ObjectActivity.java", "BodyUseAPI": ["eu.e43.impeller.ObjectActivity.GetObjectTask.onGotObject(org.json.JSONObject)"], "Fixed commit": "47fdd00549c98ab2b3f747993a50464210703546", "Url": "https://api.github.com/repos/oshepherd/Impeller", "Date": "2013-06-12T23:58:09Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (speechRate < (org.buildmlearn.toolkit.learnspelling.SpellingActivity.MIN_SPEECH_RATE)) speechRate = org.buildmlearn.toolkit.learnspelling.SpellingActivity.MIN_SPEECH_RATE;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/6620/buggy-version/source-code.app.src.main.java.org.buildmlearn.toolkit.learnspelling.SpellingActivity.java", "BodyUseAPI": [], "Fixed commit": "b766aef580f161a8fcf40dd468819a1f06208bf0", "Url": "https://api.github.com/repos/thegenuinegourav/BuildmLearn-Toolkit-Android", "Date": "2016-03-17T19:03:30Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (this.preview.isVisibleInHierarchy()) { target.add(this.preview); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/4892/buggy-version/gradebookng.tool.src.java.org.sakaiproject.gradebookng.tool.panels.SettingsGradeReleasePanel.java", "BodyUseAPI": ["org.apache.wicket.ajax.AjaxRequestTarget.add(org.apache.wicket.markup.html.basic.Label)"], "Fixed commit": "0d79771107d9eb9b98dc67492ccf45228407f030", "Url": "https://api.github.com/repos/mateullas/sakai", "Date": "2017-12-12T00:30:31Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rec == null) { text = \"FUUUCKK\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/2558/buggy-version/app.src.main.java.edu.uw.tacoma.tcss450.team4.filmfridge.FilmListRecyclerViewAdapter.java", "BodyUseAPI": [], "Fixed commit": "e33e15d8d39248209c043cc0d7ae7eb6b2c4677c", "Url": "https://api.github.com/repos/simondemartini/filmfridge", "Date": "2017-03-09T02:21:34Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((f.getGenres()) != null) { for (java.lang.String fGenre : f.getGenres()) { if (mHiddenGenres.contains(fGenre)) { hasBannedGenre = true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/2558/buggy-version/app.src.main.java.edu.uw.tacoma.tcss450.team4.filmfridge.film.FilmFilter.java", "BodyUseAPI": ["edu.uw.tacoma.tcss450.team4.filmfridge.film.Film.getGenres()"], "Fixed commit": "e33e15d8d39248209c043cc0d7ae7eb6b2c4677c", "Url": "https://api.github.com/repos/simondemartini/filmfridge", "Date": "2017-03-09T02:21:34Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (center != null) { id = center.getId(); name = center.getName(); address = center.getAddress(); if ((center.getTownEntity()) != null) { idTown = center.getTownEntity().getId(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/1500/buggy-version/src.main.java.com.adiaz.forms.CenterForm.java", "BodyUseAPI": [], "Fixed commit": "632a042da4f31d26e73f5b4648b2362780f1d9e7", "Url": "https://api.github.com/repos/AntonioDiaz/LocalSportsWeb", "Date": "2017-10-23T14:09:53Z"},
{"Line": "=>513", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((page.getErrorCode()) != null) && (!(page.getErrorCode().isEmpty()))) { errorPage = new io.undertow.servlet.api.ErrorPage(page.getLocation(), java.lang.Integer.parseInt(page.getErrorCode())); }else { errorPage = new io.undertow.servlet.api.ErrorPage(page.getLocation()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/8169/buggy-version/undertow.src.main.java.org.wildfly.extension.undertow.deployment.UndertowDeploymentInfoService.java", "BodyUseAPI": ["java.lang.Integer.parseInt(page.getErrorCode())", "org.jboss.metadata.web.spec.ErrorPageMetaData.getLocation()", "org.jboss.metadata.web.spec.ErrorPageMetaData.getErrorCode()", "org.jboss.metadata.web.spec.ErrorPageMetaData.getLocation()"], "Fixed commit": "218e8542dd21f7e9fc7d730e562ef677827593b5", "Url": "https://api.github.com/repos/stuartwdouglas/jboss-as", "Date": "2013-05-29T03:14:28Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.jgit.lib.Repository.resolve(repository.getFullBranch())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (lastCommit == null) { return java.util.Optional.empty(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/7372/buggy-version/src.main.java.com.atomist.rug.git.RepositoryDetailsProvider.java", "BodyUseAPI": [], "Fixed commit": "c46535d0a24e9dbfa5c50e5a1b57eccb4adba848", "Url": "https://api.github.com/repos/atomist-attic/rug-resolver", "Date": "2016-12-22T09:51:15Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (f.isDirectory()) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/5610/buggy-version/src.edu.stanford.cfuller.imageanalysistools.frontend.DirUtils.java", "BodyUseAPI": [], "Fixed commit": "ab71d7966a4761cbfeaf98a4ecf8dd3b3266ffdc", "Url": "https://api.github.com/repos/cjfuller/imageanalysistools", "Date": "2012-06-29T02:33:04Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (f.isDirectory()) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/5610/buggy-version/src.edu.stanford.cfuller.imageanalysistools.frontend.DirUtils.java", "BodyUseAPI": [], "Fixed commit": "ab71d7966a4761cbfeaf98a4ecf8dd3b3266ffdc", "Url": "https://api.github.com/repos/cjfuller/imageanalysistools", "Date": "2012-06-29T02:33:04Z"},
{"Line": "=>403", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["it.cloud.amazon.ec2.VirtualMachine.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (filesToBeDeleted != null) deleteFiles(filesToBeDeleted.split(\";\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/8233/buggy-version/src.it.cloud.amazon.ec2.VirtualMachine.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)", "it.cloud.amazon.ec2.VirtualMachine.deleteFiles(java.lang.String[])"], "Fixed commit": "b5362ad979c2a7146bd4048edb2d383b8fb66464", "Url": "https://api.github.com/repos/rickdesantis/cloud-runner", "Date": "2015-05-20T03:38:44Z"},
{"Line": "=>373", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["it.cloud.amazon.ec2.VirtualMachine.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (filesToBeGet != null) retrieveFiles(filesToBeGet.split(\";\"), localPath, remotePath);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/8233/buggy-version/src.it.cloud.amazon.ec2.VirtualMachine.java", "BodyUseAPI": ["it.cloud.amazon.ec2.VirtualMachine.retrieveFiles(java.lang.String[],java.lang.String,java.lang.String)", "java.lang.String.split(java.lang.String)"], "Fixed commit": "b5362ad979c2a7146bd4048edb2d383b8fb66464", "Url": "https://api.github.com/repos/rickdesantis/cloud-runner", "Date": "2015-05-20T03:38:44Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["targetChannel.getChannel().pipeline()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((pipeline.get(Constants.IDLE_STATE_HANDLER)) == null) { pipeline.addBefore(Constants.TARGET_HANDLER, Constants.IDLE_STATE_HANDLER, new io.netty.handler.timeout.IdleStateHandler(socketIdleTimeout, socketIdleTimeout, 0, java.util.concurrent.TimeUnit.MILLISECONDS)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/2911/buggy-version/http.org.wso2.carbon.transport.http.netty.src.main.java.org.wso2.carbon.transport.http.netty.sender.channel.pool.ConnectionManager.java", "BodyUseAPI": ["io.netty.channel.ChannelPipeline.addBefore(Constants.TARGET_HANDLER,Constants.IDLE_STATE_HANDLER,io.netty.handler.timeout.IdleStateHandler)"], "Fixed commit": "e191a3c33efc7b8988a827488567b51fdbde336b", "Url": "https://api.github.com/repos/pubudu91/carbon-transports", "Date": "2017-08-03T06:51:43Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["targetChannel.getChannel().pipeline()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((pipeline.get(Constants.LOGGING_HANDLER)) == null) { pipeline.addBefore(Constants.IDLE_STATE_HANDLER, Constants.LOGGING_HANDLER, new org.wso2.carbon.transport.http.netty.listener.CarbonLoggingHandler(\"wirelog.http.upstream\", io.netty.handler.logging.LogLevel.DEBUG, sourceHandler.getInboundChannelContext().channel().id().asShortText())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/2911/buggy-version/http.org.wso2.carbon.transport.http.netty.src.main.java.org.wso2.carbon.transport.http.netty.sender.channel.pool.ConnectionManager.java", "BodyUseAPI": ["io.netty.channel.ChannelPipeline.addBefore(Constants.IDLE_STATE_HANDLER,Constants.LOGGING_HANDLER,org.wso2.carbon.transport.http.netty.listener.CarbonLoggingHandler)"], "Fixed commit": "e191a3c33efc7b8988a827488567b51fdbde336b", "Url": "https://api.github.com/repos/pubudu91/carbon-transports", "Date": "2017-08-03T06:51:43Z"},
{"Line": "=>386", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(ready)) { android.widget.Toast.makeText(getBaseContext(), getString(R.string.selectpic), Toast.LENGTH_SHORT).show(); }else { android.widget.Toast.makeText(getBaseContext(), getString(R.string.needopenauto), Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/784/buggy-version/hack.src.main.java.com.yivanus.hack.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "42222b690e2890ff3483940017f5e9fab36fc7a6", "Url": "https://api.github.com/repos/yivanus/ingress-GlyphAutoHacker", "Date": "2015-06-15T07:47:31Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pic.exists()) { ready = true; }else { ready = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/784/buggy-version/hack.src.main.java.com.yivanus.hack.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "42222b690e2890ff3483940017f5e9fab36fc7a6", "Url": "https://api.github.com/repos/yivanus/ingress-GlyphAutoHacker", "Date": "2015-06-15T07:47:31Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isDisconnected)) { mediator.endConversation(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/5571/buggy-version/app.src.main.java.igy.com.assistantchat.chat_ui.ChatActivity.java", "BodyUseAPI": [], "Fixed commit": "9b307c117a5408854c37f2b64bb079eda81c90fd", "Url": "https://api.github.com/repos/erez1atar/AssistantChat", "Date": "2016-06-07T08:57:58Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.kalei.activities.MainActivity.mLocation) != null) { longitude = MainActivity.mLocation.getLongitude(); lattitude = MainActivity.mLocation.getLatitude(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/4715/buggy-version/Deks.app.src.main.java.com.kalei.views.CameraPreview.java", "BodyUseAPI": [], "Fixed commit": "825053c211844fd671fc45984422220dead167fe", "Url": "https://api.github.com/repos/reidisaki/pholocation", "Date": "2016-04-17T17:23:08Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (poiService.checkPOIExists(poiId)) { rowsAffected = poiService.postPoi(poiId, body); }else { try { rowsAffected = poiService.createPoi(poiId, body); } catch (org.json.JSONException e) { return new org.springframework.http.ResponseEntity(\"Malformed POI data\", org.springframework.http.HttpStatus.BAD_REQUEST); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/3945/buggy-version/src.main.java.com.tourtle.web.controllers.PoisController.java", "BodyUseAPI": ["com.tourtle.web.services.PoiService.postPoi(java.lang.String,java.lang.String)", "com.tourtle.web.services.PoiService.createPoi(java.lang.String,java.lang.String)"], "Fixed commit": "89d4c194c4b55022d1bc1bab7736bab1e6b522a7", "Url": "https://api.github.com/repos/TheSchnoo/tourtleserver", "Date": "2017-04-04T23:29:37Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.roklib.urifragmentrouting.parameter.SingleDoubleUriParameter.consumeParameters(java.util.Map<java.lang.String, java.lang.String>)", "org.roklib.urifragmentrouting.parameter.SingleDoubleUriParameter.consumeParameters(java.util.Map<java.lang.String, java.lang.String>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((isOptional()) && ((xValue.getError()) == (UriParameterError.PARAMETER_NOT_FOUND))) && ((yValue.getError()) == (UriParameterError.PARAMETER_NOT_FOUND))) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/3978/buggy-version/src.main.java.org.roklib.urifragmentrouting.parameter.Point2DUriParameter.java", "BodyUseAPI": [], "Fixed commit": "3e14e113ab29e3a9d2b6e149789f01c6d7b407d5", "Url": "https://api.github.com/repos/rolandkrueger/uri-fragment-routing", "Date": "2016-03-11T07:44:35Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mInputMethodManager.isAcceptingText()) { mInputMethodManager.hideSoftInputFromWindow(v.getWindowToken(), 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/8895/buggy-version/app.src.main.java.com.google.samples.apps.topeka.widget.quiz.AbsQuizView.java", "BodyUseAPI": ["android.view.inputmethod.InputMethodManager.hideSoftInputFromWindow(v.getWindowToken(),int)"], "Fixed commit": "842e595a875bfdff7730e28bf22f472cfe15667c", "Url": "https://api.github.com/repos/zllbird/android-topeka", "Date": "2015-10-15T10:21:47Z"},
{"Line": "=>952", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.math.BigDecimal.subtract(java.math.BigDecimal)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.krishagni.catissueplus.core.common.util.NumUtil.lessThanZero(parentSpQty)) { throw com.krishagni.catissueplus.core.common.errors.OpenSpecimenException.userError(SpecimenErrorCode.PARENT_INIT_QTY_LT_ALIQUOT_QTY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/912/buggy-version/WEB-INF.src.com.krishagni.catissueplus.core.biospecimen.domain.Specimen.java", "BodyUseAPI": [], "Fixed commit": "ed73c474adc67b53616a9fc813ba2f4c0f8c7def", "Url": "https://api.github.com/repos/krishagni/openspecimen", "Date": "2015-08-05T19:37:54Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(violationsData.containsKey(\"violations\"))) { violationsData.put(\"violations\", new java.lang.String[]{ java.lang.String.valueOf(total), java.lang.String.valueOf(change) }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/8931/buggy-version/src.main.java.service.ProjectServiceImpl.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String[]>.put(java.lang.String,java.lang.String[])"], "Fixed commit": "e39abd9f026b57685542cfd82251b2f72cc37a84", "Url": "https://api.github.com/repos/GuardOfDawn/DevOps-environment", "Date": "2017-05-05T05:18:11Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((entropy.length) == 0) throw new com.google.bitcoin.crypto.MnemonicException.MnemonicLengthException(\"Entropy is empty.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/2976/buggy-version/core.src.main.java.com.google.bitcoin.crypto.MnemonicCode.java", "BodyUseAPI": [], "Fixed commit": "823a2a6d911789a92cef06ce8d7477ac95432040", "Url": "https://api.github.com/repos/Coinomi/bitcoinj", "Date": "2014-09-29T14:14:03Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((words.size()) == 0) throw new com.google.bitcoin.crypto.MnemonicException.MnemonicLengthException(\"Word list is empty.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/2976/buggy-version/core.src.main.java.com.google.bitcoin.crypto.MnemonicCode.java", "BodyUseAPI": [], "Fixed commit": "823a2a6d911789a92cef06ce8d7477ac95432040", "Url": "https://api.github.com/repos/Coinomi/bitcoinj", "Date": "2014-09-29T14:14:03Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["es.themin.empires.util.CoreWorld.getFriendlyCoresInGrid(myCore.getEmpire(),double,double)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (coreList == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/3309/buggy-version/src.main.java.es.themin.empires.util.CoreWorld.java", "BodyUseAPI": [], "Fixed commit": "501fa54e689a5089fc05723052f28c7f77aae19f", "Url": "https://api.github.com/repos/kraftman/Empires", "Date": "2014-01-26T22:02:58Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((myMatchingCores == null) || ((myMatchingCores.size()) < 1)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/3309/buggy-version/src.main.java.es.themin.empires.Listeners.PlayerListener.java", "BodyUseAPI": [], "Fixed commit": "501fa54e689a5089fc05723052f28c7f77aae19f", "Url": "https://api.github.com/repos/kraftman/Empires", "Date": "2014-01-26T22:02:58Z"},
{"Line": "=>1436", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (item.has(\"content\")) b.Description = com.lgq.rssreader.utils.HtmlHelper.unescape(item.getJSONObject(\"content\").getString(\"content\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/1103/buggy-version/RssReader.src.com.lgq.rssreader.parser.FeedlyParser.java", "BodyUseAPI": ["com.lgq.rssreader.utils.HtmlHelper.unescape(item.getJSONObject(\"content\").getString(\"content\"))", "item.getJSONObject(\"content\").getString(java.lang.String)", "org.json.JSONObject.getJSONObject(java.lang.String)"], "Fixed commit": "6f077cdecdb3e93fd7fcaaf39b72e5d23b73b9a8", "Url": "https://api.github.com/repos/redelva/Android_RssReader", "Date": "2014-05-30T05:33:08Z"},
{"Line": "=>678", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((e.length()) > 20) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/1228/buggy-version/src.SampleUI.java", "BodyUseAPI": [], "Fixed commit": "7d546d7396da142d839340f2d9ea66e6d6768314", "Url": "https://api.github.com/repos/anson-li/FlightBooker", "Date": "2015-10-25T17:29:52Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (sumMap.containsKey(i)) { for (int value : coinValues) { int foundSum = i + value; int numCoins = (sumMap.get(i)) + 1; if ((!(sumMap.containsKey(foundSum))) || ((sumMap.get(foundSum)) > numCoins)) { sumMap.put(foundSum, numCoins); } } }else { sumMap.put(i, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/618/buggy-version/simple_functions.src.main.java.com.jinloes.simple_functions.MinCoins.java", "BodyUseAPI": ["java.util.Map<java.lang.Integer, java.lang.Integer>.put(int,int)", "java.util.Map<java.lang.Integer, java.lang.Integer>.containsKey(int)", "java.util.Map<java.lang.Integer, java.lang.Integer>.get(int)", "java.util.Map<java.lang.Integer, java.lang.Integer>.put(int,int)", "java.util.Map<java.lang.Integer, java.lang.Integer>.get(int)"], "Fixed commit": "5761cd8d088066e64cc548f8ce8485d0da30f3f6", "Url": "https://api.github.com/repos/jinloes/coding_practice", "Date": "2015-10-05T18:38:18Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((grantResults.length) > 0) && ((grantResults[0]) == (android.content.pm.PackageManager.PERMISSION_GRANTED))) { android.widget.Toast.makeText(getApplicationContext(), \"GRANTED\", Toast.LENGTH_LONG).show(); }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/928/buggy-version/app.src.main.java.com.example.udeys.theindianroute.Splash.java", "BodyUseAPI": [], "Fixed commit": "83e7b288dfc1f5b08f693624aa5f54a4bfac65c1", "Url": "https://api.github.com/repos/udeysingh95/The_Indian_Route", "Date": "2016-07-04T08:32:49Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.support.v4.content.ContextCompat.checkSelfPermission(getApplicationContext(), Manifest.permission.READ_EXTERNAL_STORAGE)) != (android.content.pm.PackageManager.PERMISSION_GRANTED)) { if (android.support.v4.app.ActivityCompat.shouldShowRequestPermissionRationale(this, Manifest.permission.READ_EXTERNAL_STORAGE)) { }else { android.support.v4.app.ActivityCompat.requestPermissions(this, new java.lang.String[]{ Manifest.permission.READ_EXTERNAL_STORAGE }, MY_PERMISSIONS_REQUEST_EXTERNAL_STORAGE_READ); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/928/buggy-version/app.src.main.java.com.example.udeys.theindianroute.Splash.java", "BodyUseAPI": [], "Fixed commit": "83e7b288dfc1f5b08f693624aa5f54a4bfac65c1", "Url": "https://api.github.com/repos/udeysingh95/The_Indian_Route", "Date": "2016-07-04T08:32:49Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (resultCode != (RESULT_OK)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/2106/buggy-version/app.src.main.java.edu.rosehulman.androidproject.activities.RegisterActivity.java", "BodyUseAPI": [], "Fixed commit": "5adedb6c51461d26d28a72a3decb882ea1f9d22d", "Url": "https://api.github.com/repos/apals/Caffeine-Competition", "Date": "2015-02-18T22:58:23Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((iteration % (displayTopicsInterval)) == 0) { printNodes(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/4772/buggy-version/src.cc.mallet.topics.HierarchicalLDA.java", "BodyUseAPI": [], "Fixed commit": "b7a8a6cbd4332cf161d291963fc01e5a99096173", "Url": "https://api.github.com/repos/youwei-lv/Mallet", "Date": "2016-02-06T03:03:15Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (key.equals(PreferenceConsts.to_key)) { java.lang.String keyVal = sharedPreferences.getString(key, \"\"); if (keyVal.isEmpty()) { android.content.SharedPreferences.Editor editor = sharedPreferences.edit(); editor.putString(key, \"0\"); editor.apply(); } return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/6736/buggy-version/app.src.main.java.com.gobbledygook.theawless.eventlock.SettingsFragment.java", "BodyUseAPI": ["SharedPreferences.Editor.putString(java.lang.String,java.lang.String)", "android.content.SharedPreferences.getString(java.lang.String,java.lang.String)"], "Fixed commit": "e7991f5876c82b27fea7fb43746d8ccda590412e", "Url": "https://api.github.com/repos/theawless/EventLock", "Date": "2016-10-13T00:45:17Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["contact.getFixtureA().getUserData()", "contact.getFixtureB().getUserData()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((bodyA == null) || (bodyB == null)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/1915/buggy-version/src.main.java.ru.mail.park.mechanics.listeners.SensorListener.java", "BodyUseAPI": [], "Fixed commit": "999362274da7bb775ba5f3dc3e9dcbfef74160fa", "Url": "https://api.github.com/repos/java-park-mail-ru/42-09-2017", "Date": "2017-12-19T16:59:25Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (skip) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/4891/buggy-version/src.main.java.com.github.drochetti.javassist.maven.JavassistMojo.java", "BodyUseAPI": [], "Fixed commit": "14ecde245f9ca579e6515da9c73fa1b6e9bca5f0", "Url": "https://api.github.com/repos/icon-Systemhaus-GmbH/javassist-maven-plugin", "Date": "2014-05-20T09:31:48Z"},
{"Line": "=>275", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (sender instanceof org.bukkit.entity.Player) { p.disableSpectate(((org.bukkit.entity.Player) (sender)), sender); }else { sender.sendMessage(((p.prefix) + \"A name if needed from the console.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/5620/buggy-version/SpectatorPlus.src.com.pgcraft.spectatorplus.SpectateCommand.java", "BodyUseAPI": ["com.pgcraft.spectatorplus.SpectatorPlus.disableSpectate(org.bukkit.command.CommandSender,org.bukkit.command.CommandSender)", "org.bukkit.command.CommandSender.sendMessage(((p.prefix) + \"A name if needed from the console.\"))"], "Fixed commit": "56c51a2a00f7c4d24f98d33f4ef541bfa22b343e", "Url": "https://api.github.com/repos/pgmann/SpectatorPlus", "Date": "2014-08-13T10:00:11Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (sender instanceof org.bukkit.entity.Player) { p.enableSpectate(((org.bukkit.entity.Player) (sender)), sender); }else { sender.sendMessage(((p.prefix) + \"A name if needed from the console.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/5620/buggy-version/SpectatorPlus.src.com.pgcraft.spectatorplus.SpectateCommand.java", "BodyUseAPI": ["org.bukkit.command.CommandSender.sendMessage(((p.prefix) + \"A name if needed from the console.\"))", "com.pgcraft.spectatorplus.SpectatorPlus.enableSpectate(org.bukkit.command.CommandSender,org.bukkit.command.CommandSender)"], "Fixed commit": "56c51a2a00f7c4d24f98d33f4ef541bfa22b343e", "Url": "https://api.github.com/repos/pgmann/SpectatorPlus", "Date": "2014-08-13T10:00:11Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (startTime.isAfter(endTime)) { throw new java.lang.IllegalArgumentException(\"startTime must be less than endTime\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/1092/buggy-version/src.main.java.com.graphaware.module.timetree.TimeTreeBackedEvents.java", "BodyUseAPI": [], "Fixed commit": "d658eb94ed5c1845ca0d8dfe97a0ab1b86f00b5f", "Url": "https://api.github.com/repos/graphaware/neo4j-timetree", "Date": "2014-10-14T06:23:52Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(appdir.isDirectory())) { java.lang.System.err.println(((\"directory \" + (appdir.getAbsolutePath())) + \" does not exist\")); java.lang.System.exit(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/5151/buggy-version/src.netty.io.syncframework.netty.ServerImpl.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)", "java.io.File.getAbsolutePath()"], "Fixed commit": "a047e6ac75d5b7b159e22a2bcf561caf82921e1f", "Url": "https://api.github.com/repos/syncobjects/sync", "Date": "2016-06-21T19:57:43Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.KITKAT)) { alarmManager.setExact(AlarmManager.RTC_WAKEUP, triggerTimeInMillis, pendingIntent); }else { alarmManager.set(AlarmManager.RTC_WAKEUP, triggerTimeInMillis, pendingIntent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/1638/buggy-version/app.src.main.java.com.example.pravallika.multiplealarms.helpers.AlarmHelper.java", "BodyUseAPI": [], "Fixed commit": "99a9388847991efbb48d17f0273426ad420d590a", "Url": "https://api.github.com/repos/ritenvithalani/multiple-alarms", "Date": "2017-05-02T04:00:53Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(parser.hasMoreData())) { parser.setPos(possibleEndOfChallenge); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/1223/buggy-version/src.main.java.com.albroco.barebonesdigest.WwwAuthenticateHeader.java", "BodyUseAPI": ["com.albroco.barebonesdigest.Rfc2616AbnfParser.setPos(int)"], "Fixed commit": "878e54de8e254663dc2c9c2367f35eb5bda043fc", "Url": "https://api.github.com/repos/al-broco/bare-bones-digest", "Date": "2016-10-03T08:03:29Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.pratilipi.service.shared.SaveAuthorRequest.getAuthor()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (authorData.hasEmail()) { com.pratilipi.data.type.Author existingAuthor = dataAccessor.getAuthorByEmailId(authorData.getEmail()); isAuthorExist = existingAuthor != null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/5499/buggy-version/src.com.pratilipi.service.server.PratilipiServiceImpl.java", "BodyUseAPI": ["com.pratilipi.data.access.DataAccessor.getAuthorByEmailId(authorData.getEmail())", "com.pratilipi.service.shared.data.AuthorData.getEmail()"], "Fixed commit": "42beaec621492feda52a59b444b6bb702e1af578", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2016-02-02T06:42:53Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (gen > bound) { prob = 1; }else { prob = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/2174/buggy-version/src.SIM.java", "BodyUseAPI": [], "Fixed commit": "0ca78994e6488a59fbf3280701ed7efb535e80a4", "Url": "https://api.github.com/repos/nearsr/War_and_Trash", "Date": "2017-12-06T04:13:26Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.actelion.research.orbit.imageAnalysis.modules.OrbitImageAnalysis.getInstance().getIFrame()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (iFrame != null) { com.actelion.research.orbit.imageAnalysis.modules.AnnotationPanel aP = com.actelion.research.orbit.imageAnalysis.modules.OrbitImageAnalysis.getInstance().getMetaBar().getAnnotationPanel(); for (int i = 0; i < (list.getModel().getSize()); i++) { if (list.isSelectedIndex(i)) { com.actelion.research.orbit.imageAnalysis.modules.SpotAnnotation anno = ((com.actelion.research.orbit.imageAnalysis.modules.SpotAnnotation) (list.getModel().getElementAt(i))); com.actelion.research.orbit.imageAnalysis.modules.ImageAnnotation ia = anno.toImageAnnotation(); iFrame.recognitionFrame.getAnnotations().add(ia); iFrame.recognitionFrame.getAnnotations().remove(anno); ((com.actelion.research.orbit.imageAnalysis.modules.FilteredListModel) (aP.getList().getModel())).addElement(ia); } } ((com.actelion.research.orbit.imageAnalysis.modules.FilteredListModel) (aP.getList().getModel())).filter(); }else { com.actelion.research.orbit.imageAnalysis.modules.TMASpotModule.logger.warn(\"no image open\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/6842/buggy-version/src.main.java.com.actelion.research.orbit.imageAnalysis.modules.TMASpotModule.java", "BodyUseAPI": ["iFrame.recognitionFrame.getAnnotations()", "iFrame.recognitionFrame.getAnnotations().add(com.actelion.research.orbit.imageAnalysis.modules.ImageAnnotation)", "iFrame.recognitionFrame.getAnnotations().remove(com.actelion.research.orbit.imageAnalysis.modules.SpotAnnotation)", "iFrame.recognitionFrame.getAnnotations()"], "Fixed commit": "26918b56370f6e125047086a8dbbf1089554a129", "Url": "https://api.github.com/repos/mstritt/orbit-image-analysis", "Date": "2017-09-28T14:09:35Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (flag) { carTypeService.addCarType(carType); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/7370/buggy-version/RentCarM.src.main.java.org.liuxy.rentcar.sevrlet.CarInfoServlet.java", "BodyUseAPI": [], "Fixed commit": "c4f9fe9d0c339d8abf7233c911ec16f0e4b55117", "Url": "https://api.github.com/repos/Liuxyly/Java_Learning", "Date": "2017-07-27T09:20:27Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (element instanceof org.mustbe.consulo.csharp.lang.psi.CSharpTypeDeclaration) { return org.mustbe.consulo.csharp.lang.psi.CSharpContextUtil.ContextType.STATIC; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/720/buggy-version/csharp-psi-impl.src.org.mustbe.consulo.csharp.lang.psi.CSharpContextUtil.java", "BodyUseAPI": [], "Fixed commit": "3a26ac728a312820a29ed9b2b39b30c54d55f311", "Url": "https://api.github.com/repos/consulo/consulo-csharp", "Date": "2016-01-11T18:02:27Z"},
{"Line": "=>542", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!data) || (source == null)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/242/buggy-version/src.main.java.org.jitsi.videobridge.VideoChannel.java", "BodyUseAPI": [], "Fixed commit": "414b0260c508da349161611f53e6e7082442cffa", "Url": "https://api.github.com/repos/parlaylabs/upstream-jitsi-videobridge", "Date": "2016-06-30T00:17:11Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(getPluginManager().getPermissions().contains(current))) { getPluginManager().addPermission(current); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/2828/buggy-version/src.main.java.net.zetaeta.libraries.ZPUtil.java", "BodyUseAPI": ["getPluginManager().addPermission(org.bukkit.permissions.Permission)"], "Fixed commit": "a509735d09d284db33c40dfd933ace64336f3621", "Url": "https://api.github.com/repos/Zetaeta/PluginLibraries", "Date": "2012-05-06T23:17:44Z"},
{"Line": "=>379", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (esNegativo) { monto = monto.multiply(new java.math.BigDecimal((-1))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/422/buggy-version/pic-project.pic-web.src.main.java.pe.com.bbva.pic.ui.util.PicUtilUI.java", "BodyUseAPI": [], "Fixed commit": "1f9efdf3012ebfd41d7d7cc17b0522ea28f80103", "Url": "https://api.github.com/repos/stormenta/pic", "Date": "2016-05-06T16:43:59Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ServiceType.IDENTITY.equals(p.type)) { return p.access.getEndpoint(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/5564/buggy-version/core.src.main.java.org.openstack4j.openstack.identity.internal.DefaultEndpointURLResolver.java", "BodyUseAPI": ["p.access.getEndpoint()"], "Fixed commit": "1ae0e833dda794044b326cedeee8e653916be5e5", "Url": "https://api.github.com/repos/ContainX/openstack4j", "Date": "2016-07-20T21:47:19Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((token.getCatalog()) == null) { if (ServiceType.IDENTITY.equals(p.type)) { return token.getEndpoint(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/5564/buggy-version/core.src.main.java.org.openstack4j.openstack.identity.internal.DefaultEndpointURLResolver.java", "BodyUseAPI": ["org.openstack4j.model.identity.v3.Token.getEndpoint()"], "Fixed commit": "1ae0e833dda794044b326cedeee8e653916be5e5", "Url": "https://api.github.com/repos/ContainX/openstack4j", "Date": "2016-07-20T21:47:19Z"},
{"Line": "=>371", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mErrorView) != null) { mErrorView.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/2530/buggy-version/Manat.app.src.main.java.org.ogasimli.manat.fragment.DetailActivityFragment.java", "BodyUseAPI": [], "Fixed commit": "83ce3a0b59e53bf7be1f17ac6c387e1ed3c54e13", "Url": "https://api.github.com/repos/ogasimli/Capstone-Project", "Date": "2016-11-13T11:10:30Z"},
{"Line": "=>359", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mResultView) != null) { mResultView.setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/2530/buggy-version/Manat.app.src.main.java.org.ogasimli.manat.fragment.DetailActivityFragment.java", "BodyUseAPI": [], "Fixed commit": "83ce3a0b59e53bf7be1f17ac6c387e1ed3c54e13", "Url": "https://api.github.com/repos/ogasimli/Capstone-Project", "Date": "2016-11-13T11:10:30Z"},
{"Line": "=>390", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mResultView) != null) { mResultView.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/2530/buggy-version/Manat.app.src.main.java.org.ogasimli.manat.fragment.DetailActivityFragment.java", "BodyUseAPI": [], "Fixed commit": "83ce3a0b59e53bf7be1f17ac6c387e1ed3c54e13", "Url": "https://api.github.com/repos/ogasimli/Capstone-Project", "Date": "2016-11-13T11:10:30Z"},
{"Line": "=>356", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mToolbar) != null) { mToolbar.setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/2530/buggy-version/Manat.app.src.main.java.org.ogasimli.manat.fragment.DetailActivityFragment.java", "BodyUseAPI": [], "Fixed commit": "83ce3a0b59e53bf7be1f17ac6c387e1ed3c54e13", "Url": "https://api.github.com/repos/ogasimli/Capstone-Project", "Date": "2016-11-13T11:10:30Z"},
{"Line": "=>396", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mErrorView) != null) { mErrorView.setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/2530/buggy-version/Manat.app.src.main.java.org.ogasimli.manat.fragment.DetailActivityFragment.java", "BodyUseAPI": [], "Fixed commit": "83ce3a0b59e53bf7be1f17ac6c387e1ed3c54e13", "Url": "https://api.github.com/repos/ogasimli/Capstone-Project", "Date": "2016-11-13T11:10:30Z"},
{"Line": "=>387", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mToolbar) != null) { mToolbar.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/2530/buggy-version/Manat.app.src.main.java.org.ogasimli.manat.fragment.DetailActivityFragment.java", "BodyUseAPI": [], "Fixed commit": "83ce3a0b59e53bf7be1f17ac6c387e1ed3c54e13", "Url": "https://api.github.com/repos/ogasimli/Capstone-Project", "Date": "2016-11-13T11:10:30Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.energy_home.jemma.javagal.layers.business.GalController.first) { scheduleResetTimerTask(); org.energy_home.jemma.javagal.layers.business.GalController.first = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/3235/buggy-version/src.main.java.org.energy_home.jemma.javagal.layers.business.GalController.java", "BodyUseAPI": [], "Fixed commit": "4c22bf3f999e58a90836df6eed6fbed4fb0e4ba8", "Url": "https://api.github.com/repos/ivangrimaldi/jemma.osgi.javagal", "Date": "2015-06-15T11:41:06Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mytorrent.peer.IndexServer.getQueryResult(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((results.length) == 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/8384/buggy-version/src.main.java.mytorrent.Peer.java", "BodyUseAPI": [], "Fixed commit": "92e5c2ded0a9301d2df7877e07c27a59debdfe42", "Url": "https://api.github.com/repos/bfeng/myTorrent", "Date": "2012-10-14T23:10:34Z"},
{"Line": "=>1570", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.util.Set<java.util.List<java.lang.String>>>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (attribset.isEmpty()) { attribs = null; }else { attribs = attribset.iterator().next(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/7411/buggy-version/src.us.kbase.workspace.database.Workspace.java", "BodyUseAPI": ["java.util.Iterator<java.util.List<java.lang.String>>.next()", "java.util.Set<java.util.List<java.lang.String>>.iterator()"], "Fixed commit": "75751d1e14976968846c38d1fae38a032a700024", "Url": "https://api.github.com/repos/olsonanl/workspace_deluxe", "Date": "2014-09-29T00:54:55Z"},
{"Line": "=>271", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((userAnswer != null) && (!(category.equals(CheckAllThatApply.CATEGORY)))) { if (correctAnswer.toLowerCase().equals(userAnswer.toLowerCase())) isAnswerCorrect = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/5970/buggy-version/app.src.main.java.com.example.quizletclone.FlashcardActivity.java", "BodyUseAPI": ["java.lang.String.toLowerCase()", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "d10cef39f88a5f891cd4baf56ff2de3ecfbfa151", "Url": "https://api.github.com/repos/zhl108/quizapp", "Date": "2015-11-23T20:39:09Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (MCDuel.devs.contains(playerSender.getName())) { eco.depositPlayer(playerSender, 50000); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/3527/buggy-version/src.com.kickass.MCDuel.Commands.CommandHandler.java", "BodyUseAPI": ["net.milkbowl.vault.economy.Economy.depositPlayer(org.bukkit.entity.Player,int)"], "Fixed commit": "d467cab598e37564d5216eb7002f2751d6f4e183", "Url": "https://api.github.com/repos/Rza1337/MCDuel", "Date": "2014-08-12T17:52:49Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.kickass.MCDuel.Utils.VaultUtils.getEconomy()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!((eco.getBalance(playerSender)) >= stakeValue)) { com.kickass.MCDuel.Utils.MessageUtils.sendMessage(playerSender, \"You cannot afford the duel. The duel request has not gone through.\"); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/3527/buggy-version/src.com.kickass.MCDuel.Commands.CommandHandler.java", "BodyUseAPI": ["com.kickass.MCDuel.Utils.MessageUtils.sendMessage(org.bukkit.entity.Player,java.lang.String)"], "Fixed commit": "d467cab598e37564d5216eb7002f2751d6f4e183", "Url": "https://api.github.com/repos/Rza1337/MCDuel", "Date": "2014-08-12T17:52:49Z"},
{"Line": "=>1197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.alibaba.fastjson.parser.ParserConfig.getFieldFromCache(java.lang.String,java.util.Map<java.lang.String, java.lang.reflect.Field>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((field == null) && ((propertyName.length()) > 1)) { char ch = propertyName.charAt(1); if ((ch >= 'A') && (ch <= 'Z')) { java.lang.String javaBeanCompatiblePropertyName = com.alibaba.fastjson.util.TypeUtils.decapitalize(methodName.substring(3)); field = com.alibaba.fastjson.parser.ParserConfig.getFieldFromCache(javaBeanCompatiblePropertyName, fieldCacheMap); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/9075/buggy-version/src.main.java.com.alibaba.fastjson.util.TypeUtils.java", "BodyUseAPI": ["java.lang.String.charAt(int)"], "Fixed commit": "22b16cfa8f7ff04dfe420f490d2bbd18f7b36763", "Url": "https://api.github.com/repos/VictorZeng/fastjson", "Date": "2016-08-02T02:13:17Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mcjty.rftools.blocks.teleporter.MatterTransmitterTileEntity.getTeleportId()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (teleportId == null) { mcjty.rftools.network.ReturnDestinationInfoHelper.id = null; }else { if (((java.lang.System.currentTimeMillis()) - (mcjty.rftools.blocks.teleporter.MatterTransmitterBlock.lastTime)) > 500) { mcjty.rftools.blocks.teleporter.MatterTransmitterBlock.lastTime = java.lang.System.currentTimeMillis(); RFToolsMessages.INSTANCE.sendToServer(new mcjty.rftools.network.PacketGetDestinationInfo(teleportId)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/8130/buggy-version/src.main.java.mcjty.rftools.blocks.teleporter.MatterTransmitterBlock.java", "BodyUseAPI": ["RFToolsMessages.INSTANCE.sendToServer(mcjty.rftools.network.PacketGetDestinationInfo)"], "Fixed commit": "f9505306c10d50502d9952ecbef185d56f2322f3", "Url": "https://api.github.com/repos/McJtyMods/RFTools", "Date": "2016-06-30T09:16:04Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.SecUpwN.AIMSICD.activities.DebugLogs.LogUpdaterThread.getLogs()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(logs.equals(logView.getText().toString()))) { runOnUiThread(new java.lang.Runnable() { @java.lang.Override public void run() { logView.setText(logs); final android.widget.ScrollView scroll = ((android.widget.ScrollView) (logView.getParent())); scroll.post(new java.lang.Runnable() { @java.lang.Override public void run() { scroll.fullScroll(View.FOCUS_DOWN); } }); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/7137/buggy-version/app.src.main.java.com.SecUpwN.AIMSICD.activities.DebugLogs.java", "BodyUseAPI": ["com.SecUpwN.AIMSICD.activities.DebugLogs.LogUpdaterThread.runOnUiThread(java.lang.Runnable)", "android.widget.TextView.setText(java.lang.String)", "android.widget.TextView.getParent()"], "Fixed commit": "f99fc6b0322013df4946a7c6043303777f667dd1", "Url": "https://api.github.com/repos/SecUpwN/Android-IMSI-Catcher-Detector", "Date": "2014-12-16T07:24:37Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((uop.op) == (UOp.NOT)) { environment = new java.util.HashMap<java.lang.String, wyone.core.Type>(environment); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/1442/buggy-version/src.ext.wyone.core.TypeChecker.java", "BodyUseAPI": [], "Fixed commit": "12cecd2e37fa66cf2cdb93293b29c7614407c48f", "Url": "https://api.github.com/repos/Whiley/WhileyCompiler", "Date": "2011-02-22T06:57:14Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.univocity.parsers.csv.CsvFormatDetector.max(java.util.Map<java.lang.Character, java.lang.Integer>,java.util.Map<java.lang.Character, java.lang.Integer>,char)", "com.univocity.parsers.csv.CsvFormatDetector.min(java.util.Map<java.lang.Character, java.lang.Integer>,java.util.Map<java.lang.Character, java.lang.Integer>,char)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>out : if (delimiterMax != delimiterMin) { if (((sums.get(delimiterMin)) == 0) && ((sums.get(delimiterMax)) != 0)) { delimiter = delimiterMin; break out; } if ((totals.get(delimiterMin)) > (totals.get(delimiterMax))) { delimiter = delimiterMin; break out; } delimiter = delimiterMax; }else { delimiter = delimiterMax; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/1165/buggy-version/src.main.java.com.univocity.parsers.csv.CsvFormatDetector.java", "BodyUseAPI": ["java.util.Map<java.lang.Character, java.lang.Integer>.get(char)", "java.util.Map<java.lang.Character, java.lang.Integer>.get(char)", "java.util.Map<java.lang.Character, java.lang.Integer>.get(char)", "java.util.Map<java.lang.Character, java.lang.Integer>.get(char)"], "Fixed commit": "bf3b8e608fd1a140ca295447c9025116db68a4cf", "Url": "https://api.github.com/repos/uniVocity/univocity-parsers", "Date": "2017-10-11T23:40:16Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.prince.NewErraClient.graphicInterface) != null) com.prince.NewErraClient.graphicInterface.update();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/779/buggy-version/Prince.src.com.prince.NewErraClient.java", "BodyUseAPI": [], "Fixed commit": "b5762fc7f406ef2014de9f2e09246b17faeacd9a", "Url": "https://api.github.com/repos/tommasomartini/Prince", "Date": "2014-02-08T14:26:52Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.entity.player.InventoryPlayer.getFirstEmptyStack()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (emptySlotID == (-1)) { remainingItems.appendTag(containedStack.serializeNBT()); }else { inventory.setInventorySlotContents(emptySlotID, containedStack); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/25/buggy-version/src.main.java.eiteam.esteemedinnovation.storage.item.ItemKitBag.java", "BodyUseAPI": ["net.minecraft.entity.player.InventoryPlayer.setInventorySlotContents(int,net.minecraft.item.ItemStack)"], "Fixed commit": "355eb69404183ee248b161bbca5cd8facc0a32b1", "Url": "https://api.github.com/repos/Esteemed-Innovation/Esteemed-Innovation", "Date": "2017-03-14T03:04:43Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getSession()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((java.lang.String) (session.getAttribute(\"lastURL\"))) != null) { lastURL = ((java.lang.String) (session.getAttribute(\"lastURL\"))); }else { lastURL = \"/index.jsp\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/2062/buggy-version/src.main.Tiezi.tieziReply.TieziReplyServlet.java", "BodyUseAPI": ["javax.servlet.http.HttpSession.getAttribute(java.lang.String)"], "Fixed commit": "241e5c85fb25b63c977dbebb0fdeb76c2a89e47c", "Url": "https://api.github.com/repos/mayijun6607/Temp", "Date": "2016-09-29T05:19:22Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["main.myLogin.login.HttpServletRequest.getSession()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((java.lang.String) (session.getAttribute(\"lastURL\"))) != null) { lastURL = ((java.lang.String) (session.getAttribute(\"lastURL\"))); }else { lastURL = \"/index.jsp\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/2062/buggy-version/src.main.myLogin.login.LoginServlet.java", "BodyUseAPI": ["main.myLogin.login.HttpSession.getAttribute(java.lang.String)"], "Fixed commit": "241e5c85fb25b63c977dbebb0fdeb76c2a89e47c", "Url": "https://api.github.com/repos/mayijun6607/Temp", "Date": "2016-09-29T05:19:22Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getSession()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((java.lang.String) (session.getAttribute(\"lastURL\"))) != null) { lastURL = ((java.lang.String) (session.getAttribute(\"lastURL\"))); }else { lastURL = \"/index.jsp\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/2062/buggy-version/src.main.myLogin.login.LoginIPServlet.java", "BodyUseAPI": ["javax.servlet.http.HttpSession.getAttribute(java.lang.String)"], "Fixed commit": "241e5c85fb25b63c977dbebb0fdeb76c2a89e47c", "Url": "https://api.github.com/repos/mayijun6607/Temp", "Date": "2016-09-29T05:19:22Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getSession()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((java.lang.String) (session.getAttribute(\"lastURL\"))) != null) { lastURL = ((java.lang.String) (session.getAttribute(\"lastURL\"))); }else { lastURL = \"/index.jsp\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/2062/buggy-version/src.main.myLogin.login.LoginOutServlet.java", "BodyUseAPI": ["javax.servlet.http.HttpSession.getAttribute(java.lang.String)"], "Fixed commit": "241e5c85fb25b63c977dbebb0fdeb76c2a89e47c", "Url": "https://api.github.com/repos/mayijun6607/Temp", "Date": "2016-09-29T05:19:22Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (origPath == null) { java.lang.System.out.println(((newDir.getPath()) + \" is not a Directory\")); }else { java.lang.System.out.println((origPath + \" is not a Directory\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/3518/buggy-version/src.ru.fizteh.fivt.students.Bulat_Galiev.shell.Shellfunc.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "fc894f18c9059b5faaf545f5facddff39e26e0d6", "Url": "https://api.github.com/repos/D3migod/fizteh-java-2014", "Date": "2014-10-03T17:28:17Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (model.isDirectory()) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/8388/buggy-version/rules-java.api.src.main.java.org.jboss.windup.rules.apps.java.scan.provider.DiscoverArchiveLicenseFilesRuleProvider.java", "BodyUseAPI": [], "Fixed commit": "18fa2def0152f174456252fada350578721375a1", "Url": "https://api.github.com/repos/mbriskar/windup", "Date": "2015-05-06T17:22:38Z"},
{"Line": "=>350", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["data.getEntries().iterator().next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (resource.containsKey(\"imageUrl\")) { try { resource.remove(\"imageUrl\"); } catch (java.lang.ClassCastException e) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/5856/buggy-version/dime-personalserver.dime-communications.src.main.java.eu.dime.ps.communications.requestbroker.controllers.infosphere.PSResourcesController.java", "BodyUseAPI": ["eu.dime.ps.dto.Resource.remove(java.lang.String)"], "Fixed commit": "4e58bfea7a637dd871c86aead0de6c47f83cbf4e", "Url": "https://api.github.com/repos/dime-project/dime-server", "Date": "2013-11-12T09:17:46Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (superConstructorFinished) { super.setSeedInternal(io.github.pr0methean.betterrandom.util.BinaryUtils.convertLongToBytes(seed)); underlying = new java.util.SplittableRandom(seed); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/3574/buggy-version/betterrandom.src.main.java.io.github.pr0methean.betterrandom.prng.adapter.DirectSplittableRandomAdapter.java", "BodyUseAPI": [], "Fixed commit": "708e80025bf0f48617dda97189e208fdc6938b9f", "Url": "https://api.github.com/repos/Pr0methean/BetterRandom", "Date": "2017-12-03T21:50:45Z"},
{"Line": "=>1310", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (placeGuess != null) { placeGuess = placeGuess.trim(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/4970/buggy-version/iNaturalist.src.main.java.org.inaturalist.android.ObservationEditor.java", "BodyUseAPI": ["java.lang.String.trim()"], "Fixed commit": "d20d2206a9deeeb10185062afc5ec7fa81230370", "Url": "https://api.github.com/repos/budowski/iNaturalistAndroid", "Date": "2016-03-27T23:41:33Z"},
{"Line": "=>396", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.glowstone.block.ItemTable.getBlock(org.bukkit.Material)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (type != null) type.onGoingToChange(this, oldType, oldData, newType, newData);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/4810/buggy-version/src.main.java.net.glowstone.block.GlowBlock.java", "BodyUseAPI": ["net.glowstone.block.blocktype.BlockType.onGoingToChange(net.glowstone.block.GlowBlock,org.bukkit.Material,byte,org.bukkit.Material,byte)"], "Fixed commit": "9df3b9f1de6485628f86a9ae2b8443c7e0bb5513", "Url": "https://api.github.com/repos/Tonodus/Glowstone", "Date": "2014-09-13T10:58:58Z"},
{"Line": "=>394", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (name != null) { for (int i = 0; i < (properties.size()); i++) { if (name.equals(((org.ksoap2.serialization.PropertyInfo) (properties.elementAt(i))).getName())) { return new java.lang.Integer(i); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/2609/buggy-version/ksoap2-base.src.main.java.org.ksoap2.serialization.SoapObject.java", "BodyUseAPI": ["java.lang.String.equals(((org.ksoap2.serialization.PropertyInfo) (properties.elementAt(i))).getName())"], "Fixed commit": "b087e2a664c364418223dd5cce7eacabbbaa5f1d", "Url": "https://api.github.com/repos/mosabua/ksoap2-android", "Date": "2012-04-10T18:08:41Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((backgroundType.getVideo().getLoopTimecode()) != null) videoLoopingPoint = java.lang.Double.parseDouble(backgroundType.getVideo().getLoopTimecode().getValue()); else videoLoopingPoint = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/2308/buggy-version/src.com.wb.nextgenlibrary.data.StyleData.java", "BodyUseAPI": [], "Fixed commit": "1e9d62cd98c63edb49883e06a1acc38541945f6f", "Url": "https://api.github.com/repos/warnerbros/cpe-manifest-android-experience", "Date": "2016-10-04T00:54:20Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((videoLoopPoint) > 500) buttonAnimationStartTime = (nodeBackground.getVideoLoopingPoint()) - 500;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/2308/buggy-version/src.com.wb.nextgenlibrary.activity.NextGenActivity.java", "BodyUseAPI": [], "Fixed commit": "1e9d62cd98c63edb49883e06a1acc38541945f6f", "Url": "https://api.github.com/repos/warnerbros/cpe-manifest-android-experience", "Date": "2016-10-04T00:54:20Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ab.demo.other.ActionRobot.getState()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (state != (GameStateExtractor.GameState.PLAYING)) { ab.demo.ReinforcementLearningAgentStandalone.logger.warn(\"Accidentally in solving method without being in PLAYINg state\"); return state; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/2235/buggy-version/src.ab.demo.ReinforcementLearningAgentStandalone.java", "BodyUseAPI": [], "Fixed commit": "0c1c194b576bcbabcffc74b98404dc83622de300", "Url": "https://api.github.com/repos/jgonsior/AngryProgrammers", "Date": "2016-12-15T18:09:22Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["monakhv.android.samlib.adapter.RecyclerAdapter<T, VH>.getSelectedPosition()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (pos < (mData.size())) { return mData.get(pos); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/5996/buggy-version/samlib-android.src.main.java.monakhv.android.samlib.adapter.RecyclerAdapter.java", "BodyUseAPI": ["java.util.List<T>.get(int)"], "Fixed commit": "6354d24ff8a7a1c79d19d46632cd3d670b66e317", "Url": "https://api.github.com/repos/monakhv/samlib-Info", "Date": "2015-12-25T15:11:44Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((request.getParameter(\"pagingSelect\")) != null) { try { pagingSelect = java.lang.Integer.parseInt(request.getParameter(\"pagingSelect\")); } catch (java.lang.Exception e) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/1564/buggy-version/hq-web.src.main.java.org.hyperic.hq.ui.action.resource.common.monitor.alerts.RemoveActionNG.java", "BodyUseAPI": ["java.lang.Integer.parseInt(request.getParameter(\"pagingSelect\"))", "org.hyperic.hq.ui.action.resource.common.monitor.alerts.RemoveActionNG.getParameter(java.lang.String)"], "Fixed commit": "7c269be99228e7e5351cbf76b1b489457b52019a", "Url": "https://api.github.com/repos/hyperic/hq", "Date": "2015-11-18T09:49:56Z"},
{"Line": "=>1080", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((aquery.getResultListener()) != null) { aquery.getResultListener().end(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/4214/buggy-version/client.src.main.java.com.orientechnologies.orient.client.remote.OStorageRemote.java", "BodyUseAPI": ["com.orientechnologies.orient.core.command.OCommandRequestText.getResultListener()", "aquery.getResultListener().end()"], "Fixed commit": "e46f3d926e21ce105a91c611575c8d2bfbc81321", "Url": "https://api.github.com/repos/svahn/orientdb", "Date": "2013-08-07T17:04:35Z"},
{"Line": "=>318", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (result != null) { if ((result.length) == 2) { java.lang.String lineno = result[1]; return (java.lang.Integer.parseInt(lineno)) - 1; } if ((result.length) == 3) { java.lang.String lineno = result[2]; return (java.lang.Integer.parseInt(lineno)) - 1; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/2033/buggy-version/src.com.iteye.weimingtom.luaprofiler.GUIMain.java", "BodyUseAPI": [], "Fixed commit": "936062565d5a3a2c45867318a166fda9cd096b28", "Url": "https://api.github.com/repos/weimingtom/SimpleLuaProfiler", "Date": "2011-11-19T00:33:00Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (currentElement == null) { return current; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/1284/buggy-version/graphdb.src.main.java.com.tinkerpop.blueprints.impls.orient.OrientDynaElementIterator.java", "BodyUseAPI": [], "Fixed commit": "65aaaf1cedd747b9bec2817cad718baaaa9b8e90", "Url": "https://api.github.com/repos/sonatype/orientdb", "Date": "2017-02-14T16:29:48Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (checkBack) { if (((scoreAndHits = backAcronymOverFlowMatch(reg)).score) == 0.0F) { scoreAndHits = backHeadlessParagraphMatch(reg); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/4951/buggy-version/src.com.example.quickid.model.Contact.java", "BodyUseAPI": [], "Fixed commit": "cdc2e8f0bbc24250aef10801277e87ec39bb83ad", "Url": "https://api.github.com/repos/NashLegend/QuicKid", "Date": "2014-10-20T14:03:15Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((scoreAndHits = foreAcronymOverFlowMatch(reg)).score) == 0.0F) { checkBack = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/4951/buggy-version/src.com.example.quickid.model.Contact.java", "BodyUseAPI": [], "Fixed commit": "cdc2e8f0bbc24250aef10801277e87ec39bb83ad", "Url": "https://api.github.com/repos/NashLegend/QuicKid", "Date": "2014-10-20T14:03:15Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!checkBack) { if (((scoreAndHits = completeMatch(reg)).score) == 0.0F) { if (((scoreAndHits = foreAcronymOverFlowMatch(reg)).score) == 0.0F) { checkBack = true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/4951/buggy-version/src.com.example.quickid.model.Contact.java", "BodyUseAPI": [], "Fixed commit": "cdc2e8f0bbc24250aef10801277e87ec39bb83ad", "Url": "https://api.github.com/repos/NashLegend/QuicKid", "Date": "2014-10-20T14:03:15Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["query.setLockMode(LockModeType.PESSIMISTIC_WRITE).getResultList()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((localStorageHostRefVOS.size()) > 0) { ref = localStorageHostRefVOS.get(0); }else { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/536/buggy-version/plugin.localstorage.src.main.java.org.zstack.storage.primary.local.LocalStorageCapacityRecalculator.java", "BodyUseAPI": ["java.util.List<org.zstack.storage.primary.local.LocalStorageHostRefVO>.get(int)"], "Fixed commit": "28a8d5f09c0569883911baebb852805831f9a824", "Url": "https://api.github.com/repos/liningone/zstack", "Date": "2017-03-15T04:13:06Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bitValue != 0) { plaintext[i] |= 1 << b; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/736/buggy-version/src.main.java.com.markgrand.cryptoShuffle.CryptoShuffle.java", "BodyUseAPI": [], "Fixed commit": "55f0227fda9c41c7a505c5770c45a28c9a6dfbff", "Url": "https://api.github.com/repos/mgrand/crypto-shuffle", "Date": "2017-03-26T14:59:59Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((node.getType()) != (AST_T_NOP)) { if ((node.getType()) != (AST_T_ARRAY)) { result.add(node); }else if (!(node.hasValue())) { result.addAll(((ru.histone.v2.parser.ExpAstNode) (node)).getNodes()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/1109/buggy-version/src.main.java.ru.histone.v2.parser.Parser.java", "BodyUseAPI": ["ru.histone.v2.parser.AstNode.hasValue()", "ru.histone.v2.parser.AstNode.getType()", "ru.histone.v2.parser.ExpAstNode.add(ru.histone.v2.parser.AstNode)"], "Fixed commit": "357ce23e2506a34cd12a38c1faac9c98384ff0a7", "Url": "https://api.github.com/repos/inver/histone-java", "Date": "2016-01-26T13:15:53Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasStudents) { groupsList.add(group); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/2520/buggy-version/src.dao.StudentDAO.java", "BodyUseAPI": [], "Fixed commit": "9907643f1019168bad2d202a81bcdfffe3451c71", "Url": "https://api.github.com/repos/mustafa1453/StudentsTestProject", "Date": "2015-11-18T20:07:52Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dao.UserDAO.getInstance().findById(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((user.getEmail()) != null) && (!(user.getEmail().isEmpty()))) { webAPP.SendMail.SendCongratulations(user, a); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/2245/buggy-version/src.webAPP.NewRecordServlet.java", "BodyUseAPI": ["webAPP.SendMail.SendCongratulations(entity.User,entity.Achievement)"], "Fixed commit": "9d5c7ef2e2c6c708abd6cd59c1fff486401e4c88", "Url": "https://api.github.com/repos/GoCheerJava/GoCheer_Server", "Date": "2016-12-22T03:40:17Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(com.iota.iri.service.tangle.Tangle.instance().maybeHas(analyzedTransactionHandle, flag.hash).get())) { com.iota.iri.service.tangle.Tangle.instance().save(analyzedTransactionHandle, flag).get(); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/3984/buggy-version/src.main.java.com.iota.iri.service.ScratchpadViewModel.java", "BodyUseAPI": ["com.iota.iri.service.tangle.Tangle.instance().save(analyzedTransactionHandle, flag).get()", "com.iota.iri.service.tangle.Tangle.instance().save(java.lang.Object,com.iota.iri.service.AnalyzedFlag)"], "Fixed commit": "8f21105f676aa1e1e709fe1c00d459bd678d8d5a", "Url": "https://api.github.com/repos/iotaledger/iri", "Date": "2017-03-17T20:51:41Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i18n) { engine.prepare(org.rythmengine.jfinal.LocaleManager.getLocale()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/6880/buggy-version/src.main.java.com.jfinal.core.RythmPlugin.java", "BodyUseAPI": [], "Fixed commit": "052d0591ce3f7c4f2dcd6a185180d74788c04239", "Url": "https://api.github.com/repos/greenlaw110/jfinal-rythm", "Date": "2013-06-03T14:07:37Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mRoot) == null) return points;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/3471/buggy-version/PA5.KdTree.java", "BodyUseAPI": [], "Fixed commit": "f3438d250f17ad78f1778a557f5b1d147c5f592a", "Url": "https://api.github.com/repos/peterpans01/AlgoClass", "Date": "2015-11-03T16:17:43Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((outAttributes.size()) > 0) { if (graph.getType().equals(\"trend\")) { java.util.List<com.fbr.Dao.Cache.CacheJdbcClient.StatisticResponse> list = cacheJdbcClient.getDailyEntries(companyId, mapOfArguments, startDate, endDate, outAttributes); out.addAll(processStatistics(list, outAttributes, true)); }else { java.util.List<com.fbr.Dao.Cache.CacheJdbcClient.StatisticResponse> list = cacheJdbcClient.getOverallEntry(companyId, mapOfArguments, startDate, endDate, outAttributes); out.addAll(processStatistics(list, outAttributes, false)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/913/buggy-version/src.main.java.com.fbr.services.StatisticsService.java", "BodyUseAPI": ["com.fbr.services.StatisticsService.processStatistics(java.util.List<CacheJdbcClient.StatisticResponse>,java.util.List<java.lang.Integer>,boolean)", "java.util.List<com.fbr.domain.Statistic.AttributeLevelStatistics>.addAll(java.util.List<com.fbr.domain.Statistic.AttributeLevelStatistics>)", "com.fbr.services.StatisticsService.processStatistics(java.util.List<CacheJdbcClient.StatisticResponse>,java.util.List<java.lang.Integer>,boolean)", "java.util.List<com.fbr.domain.Statistic.AttributeLevelStatistics>.addAll(java.util.List<com.fbr.domain.Statistic.AttributeLevelStatistics>)", "com.fbr.Dao.Cache.CacheJdbcClient.getDailyEntries(int,java.util.Map<java.lang.String, java.lang.Integer>,int,int,java.util.List<java.lang.Integer>)", "com.fbr.Dao.Cache.CacheJdbcClient.getOverallEntry(int,java.util.Map<java.lang.String, java.lang.Integer>,int,int,java.util.List<java.lang.Integer>)"], "Fixed commit": "858074f7e9eb39b59bfe11a2ae7662a00ead4403", "Url": "https://api.github.com/repos/psudheer21/Rest-Sample", "Date": "2015-01-13T16:11:13Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((subIdList.size()) > 0) removeSubTasks(subIdList);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/1154/buggy-version/src.net.sf.memoranda.TaskJson.java", "BodyUseAPI": ["net.sf.memoranda.TaskJson.removeSubTasks(java.util.ArrayList<java.lang.Integer>)"], "Fixed commit": "20f007e1b9c9fff81c4bf2552adf0a3b732d804b", "Url": "https://api.github.com/repos/cst316/spring16project-Lisp", "Date": "2016-03-30T01:39:19Z"},
{"Line": "=>356", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cont) { classCode = java.lang.Integer.parseInt(result.getString(1)); n = schedulepro.Utilfunctions.executeUpdate(((((((((((((\"INSERT INTO `schedulepro`.`exam` (`examCode`, `subCode`, `examDate`, `pconfigId`, `classCode`, `examName`, roomId) VALUES (NULL, '\" + (schedulepro.Utilfunctions.getWithinBrackets(subjectComboBox.getSelectedItem().toString()))) + \"', '\") + (dateTextField.getText())) + \"', \") + (PeriodConfigViewForm.pConfigId)) + \", \") + classCode) + \", '\") + (jTextField1.getText())) + \"', '\") + (r.getString(1))) + \"')\")); if (n >= 1) javax.swing.JOptionPane.showMessageDialog(null, \"Exam added successfully\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/3990/buggy-version/src.schedulepro.CreateExamscheduleForm.java", "BodyUseAPI": [], "Fixed commit": "59ed0520c34c0741b94199ac51ec3f963d0d91e7", "Url": "https://api.github.com/repos/srivathsapv/schedulepro", "Date": "2012-09-16T13:01:37Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((state.isWin()) || (state.isLose())) { this.draw(state); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/7296/buggy-version/cs188.1x-java.src.pacman.PacmanGraphicsText.java", "BodyUseAPI": ["pacman.PacmanGraphicsText.draw(pacman.GameState1)"], "Fixed commit": "32f7663d22751ad3d7985ec7ea721d49bd76ce26", "Url": "https://api.github.com/repos/hiacre/cs188.1x-java", "Date": "2013-09-02T19:24:14Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (useAdditionalSources) associationCache.clear();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/8626/buggy-version/BDELocationExtraction.src.main.java.gr.demokritos.iit.location.extraction.provider.EnhancedOpenNLPTokenProvider.java", "BodyUseAPI": [], "Fixed commit": "a945f82bfb45b98252cdbd263eecb24051da1b3f", "Url": "https://api.github.com/repos/npit/bde-event-detection-sc7", "Date": "2016-12-08T19:16:38Z"},
{"Line": "=>250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(child.isDestroyed())) child.destroy();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/66/buggy-version/src.main.java.com.shc.silenceengine.scene.SceneNode.java", "BodyUseAPI": ["com.shc.silenceengine.scene.SceneNode.destroy()"], "Fixed commit": "130b0d231142043524cf2a9b904d8dc39caf37f6", "Url": "https://api.github.com/repos/sriharshachilakapati/SilenceEngine", "Date": "2015-03-27T05:55:00Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (values.containsKey(question.getId())) { values.addValue(question.getId(), values.getValue(question.getId())); }else { values.addValue(question.getId(), question.getType().getDefaultValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/6733/buggy-version/JeffSebastian.playground.src.main.java.nl.uva.se.ql.evaluation.Evaluator.java", "BodyUseAPI": ["question.getType().getDefaultValue()", "nl.uva.se.ql.evaluation.ValueTable.getValue(question.getId())", "nl.uva.se.ql.evaluation.ValueTable.addValue(question.getId(),question.getType().getDefaultValue())", "nl.uva.se.ql.ast.statement.Question.getType()", "nl.uva.se.ql.evaluation.ValueTable.addValue(question.getId(),values.getValue(question.getId()))", "nl.uva.se.ql.ast.statement.Question.getId()", "nl.uva.se.ql.ast.statement.Question.getId()", "nl.uva.se.ql.ast.statement.Question.getId()"], "Fixed commit": "9599f80d82631ce6c92805d791e23df7c5704d01", "Url": "https://api.github.com/repos/software-engineering-amsterdam/many-ql", "Date": "2015-03-20T14:05:11Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.jstampfli.dierolegame.DGame.picked) >= (com.jstampfli.dierolegame.DGame.rolled)) { com.jstampfli.dierolegame.DGame.picked = (com.jstampfli.dierolegame.DGame.rolled) - 1; dNumPick.setText(java.lang.String.valueOf(com.jstampfli.dierolegame.DGame.picked)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/1827/buggy-version/app.src.main.java.com.jstampfli.dierolegame.DGame.java", "BodyUseAPI": [], "Fixed commit": "63bbf6409aa6076b37c290960ed75f719b19f020", "Url": "https://api.github.com/repos/jstampfli/DieRoleGame", "Date": "2017-10-10T21:47:00Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["appeng.block.storage.BlockChest.getTileEntity(net.minecraft.world.World,int,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (GuiBridge.GUI_CHEST.hasPermissions(tg, x, y, z, net.minecraftforge.common.util.ForgeDirection.values()[side], p)) { tg.openGui(p, ch, cell, side); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/6482/buggy-version/src.main.java.appeng.block.storage.BlockChest.java", "BodyUseAPI": ["appeng.tile.storage.TileChest.openGui(net.minecraft.entity.player.EntityPlayer,appeng.api.storage.ICellHandler,net.minecraft.item.ItemStack,int)"], "Fixed commit": "e8acaec6e60922e44c1d9488133e2fc41e9c1edd", "Url": "https://api.github.com/repos/thepaperpilot/Applied-Energistics-2", "Date": "2014-09-25T22:25:31Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["controllers.ExtraCommander.queryActivityDetail(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!(userId.equals(activityDetail.getHost().getId()))) && ((activityDetail.getStatus()) != (Activity.ACCEPTED))) return badRequest();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/7219/buggy-version/app.controllers.ActivityController.java", "BodyUseAPI": [], "Fixed commit": "1219a987f495d004f0a86b5c11f4b96cbf8fe74e", "Url": "https://api.github.com/repos/genxium/PlayHongKongResort", "Date": "2015-01-16T04:32:26Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isAfk()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/4704/buggy-version/src.main.java.net.eithon.plugin.stats.logic.PlayerStatistics.java", "BodyUseAPI": [], "Fixed commit": "cabd28e4e87f2792be4194dc4327f84e2448cc5d", "Url": "https://api.github.com/repos/EithonNetwork/EithonStats", "Date": "2015-07-08T10:31:42Z"},
{"Line": "=>348", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (modEndOffset != (getActiveComponent().getCaretPosition())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/1074/buggy-version/editor.completion.src.org.netbeans.modules.editor.completion.CompletionImpl.java", "BodyUseAPI": [], "Fixed commit": "5c20e0d7dfe58605be2ef3ad8d3c644a2e3a2312", "Url": "https://api.github.com/repos/apache/incubator-netbeans", "Date": "2017-05-05T08:18:03Z"},
{"Line": "=>1081", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.openhft.lang.model.DataValueModel.nestedModel(java.lang.Class)", "java.util.Map.Entry<java.lang.String, ? extends net.openhft.lang.model.FieldModel>.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (dvmodel2.isScalar(model2.type())) { add = net.openhft.lang.model.DataValueGenerator.fieldSize(model2); }else { add = net.openhft.lang.model.DataValueGenerator.computeNonScalarOffset(dvmodel2, model2.type()); if (model2.isArray()) add *= model2.indexSize().value(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/2824/buggy-version/lang.src.main.java.net.openhft.lang.model.DataValueGenerator.java", "BodyUseAPI": ["net.openhft.lang.model.FieldModel.indexSize()", "net.openhft.lang.model.DataValueGenerator.computeNonScalarOffset(net.openhft.lang.model.DataValueModel,model2.type())", "net.openhft.lang.model.FieldModel.type()", "model2.indexSize().value()", "net.openhft.lang.model.FieldModel.isArray()", "net.openhft.lang.model.DataValueGenerator.fieldSize(net.openhft.lang.model.FieldModel)"], "Fixed commit": "58f9c71fc880a3b61e5e4930592a1c86470d91d8", "Url": "https://api.github.com/repos/OpenHFT/Java-Lang", "Date": "2014-12-20T10:52:31Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (responseCode == 413) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/6276/buggy-version/src.main.java.com.bia.monitor.service.JobCheck.java", "BodyUseAPI": [], "Fixed commit": "6d1fa85aabcdeeabee3ad520cb47e3f57131e01f", "Url": "https://api.github.com/repos/intesar/MonitorApp", "Date": "2012-05-24T06:19:04Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (evaluator.equals(\"cfs\")) { CfsSubsetEval eval = new CfsSubsetEval(); BestFirst search = new BestFirst(); selector.setEvaluator(eval); selector.setSearch(search); }else if (evaluator.equals(\"corr\")) { CorrelationAttributeEval eval = new CorrelationAttributeEval(); Ranker search = new Ranker(); selector.setEvaluator(eval); selector.setSearch(search); }else if (evaluator.equals(\"oner\")) { OneRAttributeEval eval = new OneRAttributeEval(); Ranker search = new Ranker(); selector.setEvaluator(eval); selector.setSearch(search); }else if (evaluator.equals(\"relief\")) { ReliefFAttributeEval eval = new ReliefFAttributeEval(); Ranker search = new Ranker(); selector.setEvaluator(eval); selector.setSearch(search); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/4326/buggy-version/WekaApplication.src.Driver.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "01c6612b2e9bc98a5cd87eba04f319fffae3e48c", "Url": "https://api.github.com/repos/LeaCollin0518/BioInformatics", "Date": "2017-10-19T02:06:04Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this) == (Settings.groupAdmin)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/7041/buggy-version/NetServer.src.core.Group.java", "BodyUseAPI": [], "Fixed commit": "3094ffd9a31cb1992496d9023c8c30c8da333055", "Url": "https://api.github.com/repos/fazo96/LionChat", "Date": "2013-09-14T12:18:52Z"},
{"Line": "=>1633", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (expr instanceof org.codehaus.groovy.ast.expr.ClosureExpression) { return new org.eclipse.jdt.internal.compiler.ast.ClassLiteralAccess(expr.getEnd(), new org.eclipse.jdt.internal.compiler.ast.SingleTypeReference(\"Closure\".toCharArray(), org.codehaus.jdt.groovy.internal.compiler.ast.GroovyCompilationUnitDeclaration.UnitPopulator.toPos(expr.getStart(), expr.getEnd()))); }else { org.eclipse.jdt.internal.core.util.Util.log(IStatus.WARNING, (\"Unhandled annotation value type: \" + (expr.getClass().getSimpleName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/2636/buggy-version/base.org.eclipse.jdt.groovy.core.src.org.codehaus.jdt.groovy.internal.compiler.ast.GroovyCompilationUnitDeclaration.java", "BodyUseAPI": ["org.codehaus.groovy.ast.expr.Expression.getEnd()", "expr.getClass().getSimpleName()", "org.codehaus.jdt.groovy.internal.compiler.ast.GroovyCompilationUnitDeclaration.UnitPopulator.toPos(expr.getStart(),expr.getEnd())", "org.codehaus.groovy.ast.expr.Expression.getEnd()", "org.codehaus.groovy.ast.expr.Expression.getClass()", "org.codehaus.groovy.ast.expr.Expression.getStart()", "org.eclipse.jdt.internal.core.util.Util.log(IStatus.WARNING,(\"Unhandled annotation value type: \" + (expr.getClass().getSimpleName())))"], "Fixed commit": "123447eb771f2aadcc17a89b3a4ed1817203fdf9", "Url": "https://api.github.com/repos/groovy/groovy-eclipse", "Date": "2016-11-11T18:59:03Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (data != null) { resultItemAdapter.addAll(data); }else { resultTextView.setText(\"Wrong Input\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/973/buggy-version/app.src.main.java.com.steven.moviesearch.ResultActivity.java", "BodyUseAPI": ["com.steven.moviesearch.ResultItemAdapter.addAll(java.util.ArrayList<com.steven.moviesearch.ResultItem>)"], "Fixed commit": "2317f842bf178431a5c6dc4176f1ff9c7d02734d", "Url": "https://api.github.com/repos/StevenMagdy/MovieSearch", "Date": "2017-05-11T11:36:08Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (message instanceof com.unocult.common.concurrent.ConcurrentSystem.Terminated) { unwatch(((com.unocult.common.concurrent.ConcurrentSystem.Terminated) (message)).actor); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/2073/buggy-version/src.main.java.com.unocult.common.concurrent.LWActorRef.java", "BodyUseAPI": [], "Fixed commit": "0afda34af136f79d665bd74e79dc6e60b957a5dd", "Url": "https://api.github.com/repos/neutrospec/concurrent", "Date": "2014-03-24T04:16:27Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (bet == (-1)) { java.lang.System.out.println(\"You already sat down, place your bet.\"); placeBet(); }else if (bet <= (player.getWallet())) { player.placeBet(bet); }else { java.lang.System.out.println(\"Your bet is greater than you balance\"); placeBet(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/6326/buggy-version/src.main.java.io.classwarfare.Blackjack.java", "BodyUseAPI": ["io.classwarfare.Player.placeBet(double)"], "Fixed commit": "fd078ff2b975f661bba790d40dbf879172faea9b", "Url": "https://api.github.com/repos/Zipcoder/Daves-Class-Warfare", "Date": "2016-05-15T17:57:17Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mc.theWorld.getBlockId(int,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!((Block.blocksList[blockId]) instanceof net.minecraft.src.BlockHalfSlab)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/3241/buggy-version/src.net.minecraft.src.PlayerControllerHooks.java", "BodyUseAPI": [], "Fixed commit": "286110f3de8213841c3f8ee73426b21b02e71d49", "Url": "https://api.github.com/repos/bencvt/BuildRegion", "Date": "2012-10-09T21:15:24Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.client.Minecraft.getMinecraft()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((mc.theWorld) == null) || ((mc.thePlayer) == null)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/3241/buggy-version/src.net.minecraft.src.PlayerControllerHooks.java", "BodyUseAPI": [], "Fixed commit": "286110f3de8213841c3f8ee73426b21b02e71d49", "Url": "https://api.github.com/repos/bencvt/BuildRegion", "Date": "2012-10-09T21:15:24Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.src.ItemStack.getItem()", "mc.theWorld.getBlockId(int,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (blockId != (net.minecraft.src.PlayerControllerHooks.getSlabBlockId(heldSlab))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/3241/buggy-version/src.net.minecraft.src.PlayerControllerHooks.java", "BodyUseAPI": [], "Fixed commit": "286110f3de8213841c3f8ee73426b21b02e71d49", "Url": "https://api.github.com/repos/bencvt/BuildRegion", "Date": "2012-10-09T21:15:24Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mc.thePlayer.inventory.getCurrentItem()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (slabSubtype != (heldItemStack.getItemDamage())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/3241/buggy-version/src.net.minecraft.src.PlayerControllerHooks.java", "BodyUseAPI": [], "Fixed commit": "286110f3de8213841c3f8ee73426b21b02e71d49", "Url": "https://api.github.com/repos/bencvt/BuildRegion", "Date": "2012-10-09T21:15:24Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(((direction == 0) && isUpsideDown) || ((direction == 1) && (!isUpsideDown)))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/3241/buggy-version/src.net.minecraft.src.PlayerControllerHooks.java", "BodyUseAPI": [], "Fixed commit": "286110f3de8213841c3f8ee73426b21b02e71d49", "Url": "https://api.github.com/repos/bencvt/BuildRegion", "Date": "2012-10-09T21:15:24Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((aepLevel.getModel().getObject()) == null) { aepLevel.getModel().setObject(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/1838/buggy-version/gui.admin-gui.src.main.java.com.evolveum.midpoint.web.page.admin.configuration.component.SystemConfigPanel.java", "BodyUseAPI": ["aepLevel.getModel().setObject(<nulltype>)", "org.apache.wicket.markup.html.form.DropDownChoice<com.evolveum.midpoint.web.page.admin.configuration.dto.AEPlevel>.getModel()"], "Fixed commit": "f8bd7c32e1f64024aa8abcf59dc090d44b32a981", "Url": "https://api.github.com/repos/Evolveum/midpoint", "Date": "2014-01-17T11:42:24Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (0 < (Board.checkMove(board, colour, row, column, true))) { return true; }else { if (save) moveStack.remove(((moveStack.size()) - 1)); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/8905/buggy-version/Board.java", "BodyUseAPI": [], "Fixed commit": "db8b9fd29f2b885aa57a0dd3e729498730c688dd", "Url": "https://api.github.com/repos/kphillips2/AIOthelloGame", "Date": "2017-04-18T00:02:09Z"},
{"Line": "=>334", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ml.shifu.shifu.util.CommonUtils.getBinNum(ml.shifu.shifu.container.obj.ColumnConfig,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (index == (-1)) { switch (categoryMissingNormType) { case POSRATE : value = config.getBinPosRate().get(((config.getBinPosRate().size()) - 1)); break; case MEAN : default : value = ml.shifu.shifu.core.Normalizer.defaultMissingValue(config); break; } }else { java.lang.Double binPosRate = config.getBinPosRate().get(index); if (binPosRate != null) { value = binPosRate.doubleValue(); }else { switch (categoryMissingNormType) { case POSRATE : value = config.getBinPosRate().get(((config.getBinPosRate().size()) - 1)); break; case MEAN : default : value = ml.shifu.shifu.core.Normalizer.defaultMissingValue(config); break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/7950/buggy-version/src.main.java.ml.shifu.shifu.core.Normalizer.java", "BodyUseAPI": ["config.getBinPosRate().get(int)"], "Fixed commit": "30b15ecb7338fb0b3cffc2ffdba8fb742ba90e29", "Url": "https://api.github.com/repos/huzza/shifu", "Date": "2017-06-27T06:50:21Z"},
{"Line": "=>372", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((button != null) && (button.equals(\"submitButton\"))) { return loginProcess(request, response); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/9053/buggy-version/src.il.ac.shenkar.javaee.controller.DaoController.java", "BodyUseAPI": [], "Fixed commit": "9cbf6f102214380451ce7df5216ce3df516d5a24", "Url": "https://api.github.com/repos/tomm1990/ToDo", "Date": "2017-03-12T12:57:43Z"},
{"Line": "=>375", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((button2 != null) && (button2.equals(\"submitSignUpButton\"))) { return signUpPageHandler(request, response); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/9053/buggy-version/src.il.ac.shenkar.javaee.controller.DaoController.java", "BodyUseAPI": [], "Fixed commit": "9cbf6f102214380451ce7df5216ce3df516d5a24", "Url": "https://api.github.com/repos/tomm1990/ToDo", "Date": "2017-03-12T12:57:43Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((currentScreen) == (fm.jiecao.jcvideoplayer_lib.JCVideoPlayer.SCREEN_WINDOW_FULLSCREEN)) || ((currentScreen) == (fm.jiecao.jcvideoplayer_lib.JCVideoPlayer.SCREEN_WINDOW_TINY))) { super.onMeasure(widthMeasureSpec, heightMeasureSpec); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/2130/buggy-version/jcvideoplayer-lib.src.main.java.fm.jiecao.jcvideoplayer_lib.JCVideoPlayer.java", "BodyUseAPI": [], "Fixed commit": "c9ace522c2f5abd2356537e57280cdbe0a7d0295", "Url": "https://api.github.com/repos/lipangit/JiaoZiVideoPlayer", "Date": "2016-12-26T15:16:05Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (newState != null) children.add(newState);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/1257/buggy-version/src.main.java.com.hearthsim.card.basic.spell.AnimalCompanion.java", "BodyUseAPI": ["java.util.ArrayList<com.hearthsim.util.tree.HearthTreeNode>.add(com.hearthsim.util.tree.HearthTreeNode)"], "Fixed commit": "d9485b3e86a4ccf342bdb8a6ad4c37df8d5c759d", "Url": "https://api.github.com/repos/slaymaker1907/HearthSim", "Date": "2015-06-24T21:09:24Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pipelinesIds == null) || (pipelinesIds.isEmpty())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/3169/buggy-version/commons-app.src.main.java.cz.cuni.mff.xrg.odcs.commons.app.pipeline.DbPipelineImpl.java", "BodyUseAPI": [], "Fixed commit": "8ab2780514f1aa39816f2deae464f96883de66a3", "Url": "https://api.github.com/repos/UnifiedViews/Core", "Date": "2014-08-07T12:49:53Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((inputStream.read()) == (-1)) { com.shyslav.controller.WorkThread.log.trace(\"socket is terminated\"); done = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/6594/buggy-version/src.main.java.com.shyslav.controller.WorkThread.java", "BodyUseAPI": [], "Fixed commit": "574c74cdc4cff35d9bbdeeca9949cf7127fd5b2d", "Url": "https://api.github.com/repos/shyslav/HappyCakeServer", "Date": "2017-05-17T21:10:56Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Context.getSystemService(Context.AUDIO_SERVICE)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((audioMgr.getRingerMode()) != (mPrevRingerMode)) { mIgnoreNextRingerChange = true; audioMgr.setRingerMode(mPrevRingerMode); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/4597/buggy-version/src.com.selagroup.schedu.AlarmSystem.java", "BodyUseAPI": ["android.media.AudioManager.setRingerMode(int)"], "Fixed commit": "c2b69f7f6eda671dbd30dfe2afc45b958a984860", "Url": "https://api.github.com/repos/marred01/SchedU", "Date": "2012-08-24T17:28:39Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sv2) == null) { sv2 = new org.apache.drill.exec.record.selection.SelectionVector2(this.allocator); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/208/buggy-version/exec.java-exec.src.main.java.org.apache.drill.exec.cache.VectorAccessibleSerializable.java", "BodyUseAPI": [], "Fixed commit": "c8ddcf9ae73e7bc009339cc40e344c76a95ce14d", "Url": "https://api.github.com/repos/jinfengni/incubator-drill", "Date": "2013-10-31T19:18:32Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((vars_new_order[k]) != null) { filter_variables.add(vars_new_order[k]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/6572/buggy-version/Constraint.java", "BodyUseAPI": ["java.util.ArrayList<killersudokusolver.Cell>.add(vars_new_order[k])"], "Fixed commit": "98d7cf451072765eaea71211e03aed545681f691", "Url": "https://api.github.com/repos/kristinpeterson/killersudokusolver", "Date": "2015-04-12T00:43:29Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (obs != null) projection.setOn(((int) (((obs[0]) * (size.y)) + (obs[1]))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/5827/buggy-version/rlpark.plugin.rltoys.jvsrc.rlpark.plugin.rltoys.problems.mazes.Maze.java", "BodyUseAPI": ["rlpark.plugin.rltoys.math.vector.implementations.BVector.setOn(double)"], "Fixed commit": "504b938d14b506e13ab1a3aee2cd1d7c6b063a70", "Url": "https://api.github.com/repos/rlpark/rlpark", "Date": "2013-01-16T15:27:56Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((_date) == null) || (_date.equalsIgnoreCase(\"null\"))) || (_date.isEmpty())) { int crawlid = this.getPID(); com.koepf.richey.metis.Crawl crawl = new com.koepf.richey.metis.Crawl(crawlid); crawl.read(); _date = crawl.getDate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/8312/buggy-version/src.com.koepf.richey.metis.CrawlURL.java", "BodyUseAPI": [], "Fixed commit": "ef6cbd8d20142ad7da2524c0674c3b2c0b3572d7", "Url": "https://api.github.com/repos/koepfw/metis", "Date": "2016-01-10T19:50:05Z"},
{"Line": "=>2302", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<pcgen.core.bonus.BonusObj, pcgen.core.BonusManager.TempBonusInfo>.getKey()", "java.util.Map.Entry<pcgen.core.bonus.BonusObj, pcgen.core.BonusManager.TempBonusInfo>.getKey()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(keyA.getBonusName().equals(keyB.getBonusName()))) { return keyA.getBonusName().compareTo(keyB.getBonusName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/6021/buggy-version/code.src.java.pcgen.io.PCGVer2Creator.java", "BodyUseAPI": ["pcgen.core.bonus.BonusObj.getBonusName()", "pcgen.core.bonus.BonusObj.getBonusName()", "keyA.getBonusName().compareTo(keyB.getBonusName())"], "Fixed commit": "3151a7404da97f8392edd99d9eed2509cf77389a", "Url": "https://api.github.com/repos/PCGen/pcgen", "Date": "2015-01-09T11:57:27Z"},
{"Line": "=>2306", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<pcgen.core.bonus.BonusObj, pcgen.core.BonusManager.TempBonusInfo>.getKey()", "java.util.Map.Entry<pcgen.core.bonus.BonusObj, pcgen.core.BonusManager.TempBonusInfo>.getKey()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(keyA.getBonusInfo().equals(keyB.getBonusInfo()))) { return keyA.getBonusInfo().compareTo(keyB.getBonusInfo()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/6021/buggy-version/code.src.java.pcgen.io.PCGVer2Creator.java", "BodyUseAPI": ["keyA.getBonusInfo().compareTo(keyB.getBonusInfo())", "pcgen.core.bonus.BonusObj.getBonusInfo()", "pcgen.core.bonus.BonusObj.getBonusInfo()"], "Fixed commit": "3151a7404da97f8392edd99d9eed2509cf77389a", "Url": "https://api.github.com/repos/PCGen/pcgen", "Date": "2015-01-09T11:57:27Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.os.Looper.myLooper()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (looper != null) { com.stardust.autojs.runtime.api.Timers.sLoopers.put(java.lang.Thread.currentThread(), looper); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/6528/buggy-version/autojs.src.main.java.com.stardust.autojs.runtime.api.Timers.java", "BodyUseAPI": ["java.util.concurrent.ConcurrentHashMap<java.lang.Thread, android.os.Looper>.put(java.lang.Thread,android.os.Looper)"], "Fixed commit": "11b87d9a5114597070d5387c5c1f3e0afe7be477", "Url": "https://api.github.com/repos/hyb1996/Auto.js", "Date": "2017-07-22T01:35:51Z"},
{"Line": "=>1089", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.alibaba.druid.pool.StringUtils.equals(this.jdbcUrl, jdbcUrl)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/298/buggy-version/src.main.java.com.alibaba.druid.pool.DruidAbstractDataSource.java", "BodyUseAPI": [], "Fixed commit": "1d400d9539a62e65c07019cfd1566a8aec34d851", "Url": "https://api.github.com/repos/wenshao/druid", "Date": "2016-12-12T09:00:41Z"},
{"Line": "=>1021", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.alibaba.druid.pool.StringUtils.equals(this.jdbcUrl, jdbcUrl)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/298/buggy-version/src.main.java.com.alibaba.druid.pool.DruidAbstractDataSource.java", "BodyUseAPI": [], "Fixed commit": "1d400d9539a62e65c07019cfd1566a8aec34d851", "Url": "https://api.github.com/repos/wenshao/druid", "Date": "2016-12-12T09:00:41Z"},
{"Line": "=>502", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((q.getContext()) == null) || ((q.getContext().getSession()) == null)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/2900/buggy-version/araqne-logdb.src.main.java.org.araqne.logdb.query.engine.QueryServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "c9ff6865e30b5e1e5e80b86ffa4cd611846e1994", "Url": "https://api.github.com/repos/araqne/logdb", "Date": "2014-09-16T07:07:43Z"},
{"Line": "=>270", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fMarkers.size()) == 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/6872/buggy-version/src.main.java.TraceViewModel.java", "BodyUseAPI": [], "Fixed commit": "f62661162a176ccd696d6db801858350e964e803", "Url": "https://api.github.com/repos/jbush001/WaveView", "Date": "2016-08-18T05:59:56Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getProperties().get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (currentProj == null) { zipentry = zipinputstream.getNextEntry(); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/4157/buggy-version/src.main.java.org.exoplatform.crowdin.mojo.UpdateSourcesMojo.java", "BodyUseAPI": [], "Fixed commit": "040a86c917be4943cbce0357b251e1463b3b758d", "Url": "https://api.github.com/repos/exoplatform/crowdin-maven-plugin", "Date": "2012-08-21T10:55:32Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.player.PlayerInteractEvent.getClickedBlock()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (p.getLocation().getWorld().equals(clickedBlock.getWorld())) { if ((p.getLocation().distance(clickedBlockLocation)) < ViewDist) { p.sendBlockChange(clickedBlockLocation, Material.AIR, ((byte) (0))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/5165/buggy-version/src.main.java.tw.mics.spigot.plugin.cupboard.listener.AirdropInteractListener.java", "BodyUseAPI": ["p.getLocation().distance(org.bukkit.Location)", "org.bukkit.entity.Player.getLocation()", "org.bukkit.entity.Player.sendBlockChange(org.bukkit.Location,Material.AIR,int)"], "Fixed commit": "e474a5556817dc0b364d14ff7b3ff44372953be8", "Url": "https://api.github.com/repos/MkIIServer/cupboard", "Date": "2016-06-30T08:36:56Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (root == null) { return new java.util.ArrayList<com.blazingkin.interpreter.variables.Value>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/2843/buggy-version/com.blazingkin.interpreter.expressionabstraction.ExpressionExecutor.java", "BodyUseAPI": [], "Fixed commit": "ae49d2bf2fc8f920951225165ea27d235c848c50", "Url": "https://api.github.com/repos/blazingkin/blz-ospl", "Date": "2017-10-06T20:04:08Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((operatorStack.peek()) == (Operator.arrayLiteral)) { operandStack.push(com.blazingkin.interpreter.expressionabstraction.OperatorASTNode.newNode(operatorStack.pop(), ((com.blazingkin.interpreter.expressionabstraction.ASTNode) (null)))); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/2843/buggy-version/com.blazingkin.interpreter.expressionabstraction.ExpressionParser.java", "BodyUseAPI": ["java.util.Stack<com.blazingkin.interpreter.expressionabstraction.ASTNode>.push(com.blazingkin.interpreter.expressionabstraction.OperatorASTNode.newNode(operatorStack.pop(), ((com.blazingkin.interpreter.expressionabstraction.ASTNode) (null))))", "java.util.Stack<com.blazingkin.interpreter.expressionabstraction.Operator>.pop()", "com.blazingkin.interpreter.expressionabstraction.OperatorASTNode.newNode(operatorStack.pop(),<nulltype>)"], "Fixed commit": "ae49d2bf2fc8f920951225165ea27d235c848c50", "Url": "https://api.github.com/repos/blazingkin/blz-ospl", "Date": "2017-10-06T20:04:08Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((adapter.getSelectedFiles().size()) > 0) { list = adapter.getSelectedFiles(); }else { if ((fileMode) == (com.example.legendutils.Dialogs.FileDialog.FILE_MODE_OPEN_FOLDER_SINGLE)) { list.add(adapter.getCurrentDirectory()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/5142/buggy-version/src.com.example.legendutils.BuildIn.FileDialogView.java", "BodyUseAPI": ["com.example.legendutils.BuildIn.FileListAdapter.getCurrentDirectory()", "com.example.legendutils.BuildIn.FileListAdapter.getSelectedFiles()", "java.util.ArrayList<java.io.File>.add(adapter.getCurrentDirectory())"], "Fixed commit": "244ec4e92ea64f37844d65bbd619c568d706813d", "Url": "https://api.github.com/repos/NashLegend/LegendUtils", "Date": "2014-07-03T10:15:48Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (category.startsWith(\"/\")) { return category.substring(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/4806/buggy-version/platform-api.che-core-api-project.src.main.java.org.eclipse.che.api.project.shared.EnvironmentId.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "2677b4eaf509ebf959e022585156fb85c98f6635", "Url": "https://api.github.com/repos/codenvy-legacy/che-core", "Date": "2015-05-07T12:04:04Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.math.BigInteger.subtract(java.math.BigInteger)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((absoluteMaximumToInsert.compareTo(java.math.BigInteger.valueOf(maxEdgesToAdd))) < 0) { maxEdgesToAdd = absoluteMaximumToInsert.intValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/4125/buggy-version/src.dna.updates.generators.random.RandomEdgeAdditions.java", "BodyUseAPI": ["java.math.BigInteger.intValue()"], "Fixed commit": "be44b3d200c53cf38d2d548cc693adaca76ef54a", "Url": "https://api.github.com/repos/NicoHaase/DNA", "Date": "2014-03-22T15:43:23Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((shopping_cart.size()) == 0) shopping_cart = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/6554/buggy-version/src.servlets.ProcessShoppingCart.java", "BodyUseAPI": [], "Fixed commit": "e627f77aae33f351765432291e7ddd59f307478a", "Url": "https://api.github.com/repos/Mushka/WebDevProj", "Date": "2016-04-22T04:22:51Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (socketFile != null) { this.socketFile = socketFile; this.socket = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/566/buggy-version/src.main.java.com.tresys.jalop.producer.Producer.java", "BodyUseAPI": [], "Fixed commit": "656d54baa7760ccd51a4b12f8765d03e99db9306", "Url": "https://api.github.com/repos/jalop-tresys/jJALoP", "Date": "2013-02-11T17:27:46Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (socketFile == null) { this.socketFile = com.tresys.jalop.producer.Producer.DEFAULT_SOCKET_FILE; }else { this.socketFile = socketFile; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/566/buggy-version/src.main.java.com.tresys.jalop.producer.Producer.java", "BodyUseAPI": [], "Fixed commit": "656d54baa7760ccd51a4b12f8765d03e99db9306", "Url": "https://api.github.com/repos/jalop-tresys/jJALoP", "Date": "2013-02-11T17:27:46Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(rc.chestSetQueue.contains(player))) { rc.chestSetQueue.add(player); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/677/buggy-version/src.se.xtralarge.remotechest.SetChestCommand.java", "BodyUseAPI": ["rc.chestSetQueue.add(org.bukkit.entity.Player)"], "Fixed commit": "ee0ed2c4f51ecc7e63081e5185d83d6ad7492275", "Url": "https://api.github.com/repos/getninjaN/RemoteChest", "Date": "2012-03-26T14:51:19Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dataAccessor.isTxActive()) return dataAccessor.getAppProperty(id);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/151/buggy-version/src.main.java.com.pratilipi.data.DataAccessorWithMemcache.java", "BodyUseAPI": ["com.pratilipi.data.DataAccessor.getAppProperty(java.lang.String)"], "Fixed commit": "86d189a6e0482b65d72e9d37490b8044a6fbcc6d", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2015-07-25T15:32:58Z"},
{"Line": "=>362", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<org.bukkit.Chunk, biz.princeps.landlord.util.OwnedLand>.get(p.getWorld().getChunkAt((xx + (p.getLocation().getChunk().getX())), (zz + (p.getLocation().getChunk().getZ()))))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (land == null) { java.lang.System.out.println((((\"Foudn null land:\" + (xx + (p.getLocation().getChunk().getX()))) + \":\") + (zz + (p.getLocation().getChunk().getZ())))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/3016/buggy-version/src.main.java.biz.princeps.landlord.manager.map.LandMap.java", "BodyUseAPI": [], "Fixed commit": "4ddee559a3321bc8a8a83a92f7a313caae02d7df", "Url": "https://api.github.com/repos/SpatiumPrinceps/LandLord", "Date": "2017-07-23T18:58:17Z"},
{"Line": "=>1138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.wb.nextgenlibrary.util.utils.StringHelper.isEmpty(retImgUrl))) return retImgUrl; else return getGoogleMapImageUrl(320, 180);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/4788/buggy-version/src.com.wb.nextgenlibrary.data.MovieMetaData.java", "BodyUseAPI": [], "Fixed commit": "70074d8f7215c22c943672f07634614568d9d125", "Url": "https://api.github.com/repos/warnerbros/cpe-manifest-android-experience", "Date": "2016-10-06T18:40:57Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getCause()) instanceof java.lang.IllegalStateException) { if (org.overlord.rtgov.internal.activity.server.jee.JEEActivityServer.LOG.isLoggable(java.util.logging.Level.FINEST)) { org.overlord.rtgov.internal.activity.server.jee.JEEActivityServer.LOG.log(java.util.logging.Level.FINEST, \"UserTransaction not available - probably due to container managed txn\", e); } }else { org.overlord.rtgov.internal.activity.server.jee.JEEActivityServer.LOG.log(java.util.logging.Level.SEVERE, \"Failed to get UserTransaction\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/8016/buggy-version/modules.activity-management.activity-server-jee.src.main.java.org.overlord.rtgov.internal.activity.server.jee.JEEActivityServer.java", "BodyUseAPI": ["java.util.logging.Logger.log(java.util.logging.Level,java.lang.String,javax.naming.NamingException)", "java.util.logging.Logger.log(java.util.logging.Level,java.lang.String,javax.naming.NamingException)"], "Fixed commit": "cdbd2540a69e13b09cf21c91dea19317937226c0", "Url": "https://api.github.com/repos/objectiser/rtgov", "Date": "2014-11-10T11:07:52Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(owner.isMining())) { owner.setBusy(false); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/7032/buggy-version/GameServer.src.org.moparscape.msc.gs.plugins.plugs.skills.Mining.java", "BodyUseAPI": ["org.moparscape.msc.gs.model.Player.setBusy(boolean)"], "Fixed commit": "4fcac6e6d41e91a918fb1f2886a4d67b687f2d61", "Url": "https://api.github.com/repos/Lothy/MoparClassic", "Date": "2012-01-07T22:09:36Z"},
{"Line": "=>657", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((correctSpeed) < finalSpeed) correctSpeed = finalSpeed;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/4444/buggy-version/speedviewlib.src.main.java.com.github.anastr.speedviewlib.base.Gauge.java", "BodyUseAPI": [], "Fixed commit": "e1e6606ac820f935449164da8c0e98bebfb7de7c", "Url": "https://api.github.com/repos/anastr/SpeedView", "Date": "2017-02-22T14:23:04Z"},
{"Line": "=>651", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((correctSpeed) > finalSpeed) correctSpeed = finalSpeed;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/4444/buggy-version/speedviewlib.src.main.java.com.github.anastr.speedviewlib.base.Gauge.java", "BodyUseAPI": [], "Fixed commit": "e1e6606ac820f935449164da8c0e98bebfb7de7c", "Url": "https://api.github.com/repos/anastr/SpeedView", "Date": "2017-02-22T14:23:04Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((o1._score) > (o2._score)) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/2935/buggy-version/src.edu.nyu.cs.cs2580.utils.ScoredDocumentComparator.java", "BodyUseAPI": [], "Fixed commit": "e9b6e423e23bdc2d7bddbbdb1a9485d6fa11514d", "Url": "https://api.github.com/repos/owwlo/web_search_engine_course", "Date": "2014-10-05T17:19:12Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.lmu.cs.networking.Game.getWantedIndex(int,edu.lmu.cs.networking.Game.Player)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((board[wantedIndex]) == (Block.E_BRICK)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/5674/buggy-version/app.src.main.java.edu.lmu.cs.networking.Game.java", "BodyUseAPI": [], "Fixed commit": "62480819fa26795161921abcb7c91a103cf69102", "Url": "https://api.github.com/repos/Khayrullin/labirynth23", "Date": "2016-12-23T17:14:21Z"},
{"Line": "=>399", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (totalValue > 1000) pts.put(date, totalValue);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/5026/buggy-version/src.harlequinmettle.financialsnet.DataPointGraphic.java", "BodyUseAPI": ["java.util.TreeMap<java.lang.Float, java.lang.Float>.put(float,float)"], "Fixed commit": "a53c67240b674530864ab18bbacba1198f08e5f0", "Url": "https://api.github.com/repos/AndrewsJava/finet", "Date": "2014-03-16T05:12:15Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((requested) == (java.lang.Long.MAX_VALUE)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/7366/buggy-version/rxjava-core.src.main.java.rx.internal.operators.OperatorTakeLast.java", "BodyUseAPI": [], "Fixed commit": "4279521219519e1bccf93ada708601980ab5c69d", "Url": "https://api.github.com/repos/zsxwing/RxJava", "Date": "2014-07-26T16:26:30Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.ThreadLocal<org.apache.atlas.RequestContext>.get()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (instance != null) { if ((instance.entityCache) != null) { instance.entityCache.clear(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/8104/buggy-version/server-api.src.main.java.org.apache.atlas.RequestContext.java", "BodyUseAPI": ["java.util.Map<java.lang.String, org.apache.atlas.typesystem.ITypedReferenceableInstance>.clear()"], "Fixed commit": "03684a0568f8569eca44573c791fc090d9a9a8b5", "Url": "https://api.github.com/repos/apoorvnaik/incubator-atlas", "Date": "2017-02-08T18:14:27Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.huixinpn.dionysus.domain.user.User.getRoles()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (userRoles != null) { for (com.huixinpn.dionysus.domain.user.Role role : userRoles) { if (role.getName().endsWith(\"ROLE_CONSULTANT\")) return null; org.springframework.security.core.authority.SimpleGrantedAuthority authority = new org.springframework.security.core.authority.SimpleGrantedAuthority(role.getName()); authorities.add(authority); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/221/buggy-version/dionysus-core.src.main.java.com.huixinpn.dionysus.domain.user.User.java", "BodyUseAPI": [], "Fixed commit": "05d9adab0818a0139647a68649dfef015c06c867", "Url": "https://api.github.com/repos/perrywang/dionysus", "Date": "2015-08-12T06:39:39Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["functionCall.getArguments().getObject(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(arg.getClass().getName().equals(messageClassName))) { throw new java.lang.IllegalArgumentException((((\"Expected argument of type \" + (messageClassName)) + \", found \") + (arg.getClass().getName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/2430/buggy-version/src.main.java.com.squareup.cascading2.function.ExpandProto.java", "BodyUseAPI": ["T.getClass()", "java.lang.Class<? extends com.google.protobuf.Message>.getName()"], "Fixed commit": "74c56a3c70686dbf0bfb2132906e0e39f6e2ac26", "Url": "https://api.github.com/repos/bryanduxbury/cascading2-protobufs", "Date": "2013-04-18T23:26:51Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(ent.getEntityAttribute(SharedMonsterAttributes.MOVEMENT_SPEED).hasModifier(speedBoostModifier))) { ent.getEntityAttribute(SharedMonsterAttributes.MOVEMENT_SPEED).applyModifier(speedBoostModifier); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/8036/buggy-version/src.main.java.ZombieAwareness.ZAUtil.java", "BodyUseAPI": ["ent.getEntityAttribute(SharedMonsterAttributes.MOVEMENT_SPEED).applyModifier(net.minecraft.entity.ai.attributes.AttributeModifier)", "net.minecraft.entity.EntityLiving.getEntityAttribute(SharedMonsterAttributes.MOVEMENT_SPEED)"], "Fixed commit": "adace9bb774cf27e2f78418f72b34bdd83b33f88", "Url": "https://api.github.com/repos/Corosauce/ZombieAwareness", "Date": "2017-01-02T18:17:43Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.LOLLIPOP)) { mStartDateLinearLayout.setBackground(getResources().getDrawable(R.drawable.ripple_date_text_view, null)); mEndDateLinearLayout.setBackground(getResources().getDrawable(R.drawable.ripple_date_text_view, null)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/8426/buggy-version/app.src.main.java.com.android.mig.simpletimeclock.view.fragments.EmployeeDetailsFragment.java", "BodyUseAPI": [], "Fixed commit": "9d898497a42f5de7816d390830572c5eefee9211", "Url": "https://api.github.com/repos/msaenz424/SimpleTimeClock", "Date": "2017-11-19T19:53:04Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (validPassword) usuarioDTO.setClave(\"\"); else usuarioDTO = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/5964/buggy-version/expoCR.src.main.java.com.kaoba.expo.web.rest.UsuarioResource.java", "BodyUseAPI": [], "Fixed commit": "57d93a856cd2796ca2876fa7cec49e643a2cd6a2", "Url": "https://api.github.com/repos/K-oba/ExpoWeb", "Date": "2017-06-30T05:08:01Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (\"/\".equals(jsonFilePath.substring(0, 1))) { path = jsonFilePath.substring(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/3708/buggy-version/src.main.java.ch.inagua.watchlion.service.WatchlionLoader.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "d35704e00b5c77787debd6dd22deadc91ac21101", "Url": "https://api.github.com/repos/Watchlion/watchlion-desktop", "Date": "2015-08-17T06:24:54Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Shared.type) == 4) { forms[5] = Shared.second; forms[5] = forms[5].replace(\"ire\", \"iu\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/2233/buggy-version/app.src.main.java.com.benscholer.latinverbconjugator.Results.java", "BodyUseAPI": [], "Fixed commit": "d96a5ab81c9a505decbecbe0da4fb976da2f7dfb", "Url": "https://api.github.com/repos/bscholer/Latin-Verb-Conjugator", "Date": "2015-03-09T18:03:30Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.util.LruCache<java.lang.Integer, android.graphics.Bitmap>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (bitmap != null) { int imageViewPosition = ((int) (imageView.getTag())); if (imageViewPosition == position) { imageView.setImageBitmap(bitmap); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/3499/buggy-version/src.com.kou.gettyimageviewer.listView.CustomListAdapter.java", "BodyUseAPI": ["android.widget.ImageView.setImageBitmap(android.graphics.Bitmap)"], "Fixed commit": "c2223b3ed76cfeae72b9683fd3591be883c78a7c", "Url": "https://api.github.com/repos/StanleyKou/GettyImageViewer", "Date": "2016-03-07T12:36:53Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (graph.isEmpty()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/7493/buggy-version/src.main.java.io.aif.associations.builder.ExperimentsConnectionsGraphReducer.java", "BodyUseAPI": [], "Fixed commit": "56b4d61f3c0c1181471c9572334e82bcbab2be50", "Url": "https://api.github.com/repos/b0noI/AIF-KERNEL", "Date": "2015-03-27T18:39:35Z"},
{"Line": "=>307", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((e.type) == (ccre.rconf.RConf.F_AUTO_REFRESH)) { field++; continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/5517/buggy-version/PoultryInspector.src.ccre.supercanvas.components.channels.RConfComponent.java", "BodyUseAPI": [], "Fixed commit": "95afed9ca0f82ce8117f5c5da48de466685c019f", "Url": "https://api.github.com/repos/flamingchickens1540/common-chicken-runtime-engine", "Date": "2015-05-01T00:07:33Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/6681/buggy-version/src.main.java.org.ayfaar.app.utils.ItemsCleaner.java", "BodyUseAPI": [], "Fixed commit": "57b2480a10007df9c7a71030f59afa81d0c3bfff", "Url": "https://api.github.com/repos/linya/ii", "Date": "2014-07-18T08:30:53Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (changeLogEntries != null) { for (com.cwctravel.hudson.plugins.script_scm.ScriptSCMChangeLogEntry changeLogEntry : changeLogEntries) { changeLogEntry.setParent(this); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/8685/buggy-version/src.main.java.com.cwctravel.hudson.plugins.script_scm.ScriptSCMChangeLogSet.java", "BodyUseAPI": [], "Fixed commit": "41f60c64c62c5555e0645f721db568f492e7689f", "Url": "https://api.github.com/repos/jenkinsci/script-scm-plugin", "Date": "2012-08-18T01:21:20Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["blocks.get(0).getSystem()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (system != null) { pages = system.getNbImages(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/4541/buggy-version/src.org.plantuml.idea.plantuml.PlantUml.java", "BodyUseAPI": ["net.sourceforge.plantuml.core.Diagram.getNbImages()"], "Fixed commit": "0d461221b27b827dfb8d375315953825c21d3162", "Url": "https://api.github.com/repos/esteinberg/plantuml4idea", "Date": "2013-07-08T03:22:52Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((net.aufdemrand.denizen.utilities.Depends.protocolManager) != null) { registerCoreMember(net.aufdemrand.denizen.scripts.commands.ChairCommand.class, \"Chair\", \"chair (sit|stand) [location:x,y,z,world]\", 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/4790/buggy-version/src.main.java.net.aufdemrand.denizen.scripts.commands.CommandRegistry.java", "BodyUseAPI": [], "Fixed commit": "2be74e2d16ee5105bed92d8f450ffbf1dfac2021", "Url": "https://api.github.com/repos/aufdemrand/Denizen", "Date": "2013-02-07T09:10:54Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ca.ualberta.ridr.AccountController.getUser()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (currentUser != null) { if (addAccount) { newRider.setRiderStatus(true); createAccount(); }else { android.util.Log.i(\"Get user\", (\"logging in user \" + (currentUser.getName()))); newRider = new ca.ualberta.ridr.Rider(currentUser); addUserInfoToField(currentUser); } }else { addAccount = false; updateUser = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/452/buggy-version/app.src.main.java.ca.ualberta.ridr.AddRiderView.java", "BodyUseAPI": ["android.util.Log.i(java.lang.String,(\"logging in user \" + (currentUser.getName())))", "ca.ualberta.ridr.User.getName()", "ca.ualberta.ridr.AddRiderView.addUserInfoToField(ca.ualberta.ridr.User)"], "Fixed commit": "cd3d658ac8b9c2cdaec46083e87ab21c634d51d9", "Url": "https://api.github.com/repos/CMPUT301F16T04/Ridr", "Date": "2016-11-27T20:55:34Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.time.LocalDateTime.now()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (dateTimeNow.isBefore(task.getEndDateTime())) { task.setOverdue(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/596/buggy-version/src.logic.Logic.java", "BodyUseAPI": ["shared.task.DeadlineTask.setOverdue(boolean)"], "Fixed commit": "1b94892c086c0ef5246cc8c212d99618e1af9572", "Url": "https://api.github.com/repos/cs2103aug2015-w14-2j/main", "Date": "2015-11-09T15:10:07Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (xmlConfig.isDebug()) { reconf.client.setup.LoggerHolder.getLog().error(reconf.client.setup.Environment.msg.format(\"error.xml\", reconf.client.setup.LineSeparator.value(), reconf.client.setup.StringUtils.join(errors, reconf.client.setup.LineSeparator.value()))); }else { throw new reconf.client.setup.ReConfInitializationError(reconf.client.setup.Environment.msg.format(\"error.xml\", reconf.client.setup.LineSeparator.value(), reconf.client.setup.StringUtils.join(errors, reconf.client.setup.LineSeparator.value()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/4869/buggy-version/reconf-client.src.main.java.reconf.client.setup.Environment.java", "BodyUseAPI": [], "Fixed commit": "5f5de059720101e4efb1d0c8ff6197c8dcb8d411", "Url": "https://api.github.com/repos/reconf/reconf-jvm", "Date": "2014-04-23T14:17:59Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((list != null) && (!(list.isEmpty()))) { key = list.get(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/4347/buggy-version/src.main.java.com.platform.mongo.s2.MongoDirver.java", "BodyUseAPI": ["java.util.List<java.lang.Integer>.get(int)"], "Fixed commit": "0c090696363e11083a3592cf227f4d912a91b00d", "Url": "https://api.github.com/repos/tooo8g/platform-mongo-dirver", "Date": "2016-04-20T08:09:27Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((list != null) && (!(list.isEmpty()))) { key = list.get(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/4347/buggy-version/src.main.java.com.platform.mongo.s2.MongoDirver.java", "BodyUseAPI": ["java.util.List<java.lang.Integer>.get(int)"], "Fixed commit": "0c090696363e11083a3592cf227f4d912a91b00d", "Url": "https://api.github.com/repos/tooo8g/platform-mongo-dirver", "Date": "2016-04-20T08:09:27Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((engine.getRating()) < (getEngineMin())) || ((engine.getRating()) > (getEngineMax()))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/9078/buggy-version/src.lisong_mechlab.model.chassi.ChassisStandard.java", "BodyUseAPI": [], "Fixed commit": "460efd3f9e28ae044e896446fbfa3f0a12a575cb", "Url": "https://api.github.com/repos/EmilyBjoerk/lsml", "Date": "2014-06-16T23:59:08Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["sanekp.seriesinformer.sources.brb_to.BrbToParser.getNext(series.getSeason(),series.getEpisode(),java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (url == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/6806/buggy-version/sources.brb_to.src.main.java.sanekp.seriesinformer.sources.brb_to.BrbToSource.java", "BodyUseAPI": [], "Fixed commit": "4359619df1cb5cbc2111cb00ee75ad0f833a8514", "Url": "https://api.github.com/repos/SanekP/SeriesInformer", "Date": "2015-10-14T18:38:37Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((current.stamp) == 1) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/6261/buggy-version/java.src.trees.lockbased.HandReadWriteConditionLock.java", "BodyUseAPI": [], "Fixed commit": "9b00b85bbb25aa174a53430ad799f4e73a630e8c", "Url": "https://api.github.com/repos/Aksenov239/synchrobench", "Date": "2016-09-22T19:53:39Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((stamp[0]) == 1) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/6261/buggy-version/java.src.trees.lockbased.ReadWriteConditionLock.java", "BodyUseAPI": [], "Fixed commit": "9b00b85bbb25aa174a53430ad799f4e73a630e8c", "Url": "https://api.github.com/repos/Aksenov239/synchrobench", "Date": "2016-09-22T19:53:39Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.autonomousCommand) != null) { this.autonomousCommand.start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/5939/buggy-version/src.org.usfirst.frc.team4611.robot.Robot.java", "BodyUseAPI": [], "Fixed commit": "a928175fd4770e7cb2660dd2db33c64d01629a6f", "Url": "https://api.github.com/repos/olentangyfrc/Stronghold2016", "Date": "2016-02-21T21:06:48Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (components.isEmpty()) return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/2143/buggy-version/common.src.java.com.strategicgains.repoexpress.domain.Identifier.java", "BodyUseAPI": [], "Fixed commit": "ae1f15a9bf2eda6ac39f2c5ab85cf6a62e1fa0f7", "Url": "https://api.github.com/repos/RestExpress/RepoExpress", "Date": "2014-01-16T03:32:09Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.os.Build.VERSION.SDK_INT) >= (android.os.Build.VERSION_CODES.LOLLIPOP)) { circle = new android.widget.ImageView(getContext(), null, 0, R.style.PinPad_Circle_Style); }else { circle = new android.support.v7.widget.AppCompatImageView(getContext(), null, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/1481/buggy-version/src.main.java.net.offbeatpioneer.android.components.pinpad.PinPadFragment.java", "BodyUseAPI": [], "Fixed commit": "144c7622b9a96e917fd492d731c25df620d1ecae", "Url": "https://api.github.com/repos/PioBeat/offbeat-commons", "Date": "2017-06-19T17:54:47Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((io.github.data4all.util.Tagging.getKeys(type)) == null) { final java.lang.String[] list = new java.lang.String[0]; return list; }else { java.util.List<io.github.data4all.model.data.Tag> tags = io.github.data4all.util.Tagging.getKeys(type); final java.lang.String[] array = new java.lang.String[tags.size()]; for (int i = 0; i < (tags.size()); i++) { array[i] = res.getString(tags.get(i).getNameRessource()); } return array; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/6096/buggy-version/src.main.java.io.github.data4all.util.Tagging.java", "BodyUseAPI": ["io.github.data4all.util.Tagging.getKeys(int)"], "Fixed commit": "cf41603b38709b63cd744779e1a775e8a2e30558", "Url": "https://api.github.com/repos/Data4All/Data4All", "Date": "2015-03-20T10:48:00Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ss) == null) { java.lang.String sv = getValue(); if (sv == null) { ss = new java.lang.String[0]; }else ss = sv.split(\"\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/7105/buggy-version/src.com.rcgreed.yaml.node.ScalarNode.java", "BodyUseAPI": [], "Fixed commit": "de0a536a72d88fa4ba1563bc829df74346309a02", "Url": "https://api.github.com/repos/liangx8/jyaml", "Date": "2016-11-29T07:18:19Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toCharArray()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((charArr.length) == 1) { number = \" \u043d\u043e\u043b\u044c\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/7013/buggy-version/src.com.softserve.edu.task5.ZeroToTen.java", "BodyUseAPI": [], "Fixed commit": "1b3a9dd5894124c61245a1bf39c060e2307a41f8", "Url": "https://api.github.com/repos/AnastasiaBlack/ElementaryTasks", "Date": "2017-05-29T20:06:26Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.sacredlabyrinth.Phaed.PreciousStones.entries.BlockEntry.getLocation()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((!(loc.equals(player.getLocation()))) && (!(loc.equals(player.getLocation().add(0, 1, 0))))) { if (!(revert)) { player.sendBlockChange(loc, bd.getTypeId(), bd.getData()); }else { org.bukkit.block.Block block = bd.getBlock(); player.sendBlockChange(loc, block.getType(), block.getData()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/2162/buggy-version/src.main.java.net.sacredlabyrinth.Phaed.PreciousStones.Visualize.java", "BodyUseAPI": ["org.bukkit.entity.Player.sendBlockChange(org.bukkit.Location,bd.getTypeId(),bd.getData())", "org.bukkit.entity.Player.sendBlockChange(org.bukkit.Location,block.getType(),block.getData())"], "Fixed commit": "5964406a6bc4d85e85c2c073714b28acc136c456", "Url": "https://api.github.com/repos/SacredCoding/PreciousStones", "Date": "2013-01-27T21:19:31Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<tiy.Timeline.Failable>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (currentEvent.endDate.isBefore(dateHolder.endDate)) { timeblock.startDate = dateHolder.endDate; }else { timeblock.startDate = currentEvent.endDate; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/488/buggy-version/src.main.java.tiy.Timeline.TimeBlocker.java", "BodyUseAPI": [], "Fixed commit": "f2a420d8aa0e05f335f3a400c0e9bd0fabcec916", "Url": "https://api.github.com/repos/bgmcmichael/FinalProjectDiscovery", "Date": "2016-10-25T15:40:42Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((erasmus.getArrival_date()) != null) { holder.value.setText(erasmus.getArrival_date().toString()); }else { holder.value.setText(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/730/buggy-version/app.src.main.java.org.aegee_zaragoza.buddypair.activity.StudentInfoActivity.java", "BodyUseAPI": ["android.widget.TextView.setText(erasmus.getArrival_date().toString())", "org.aegee_zaragoza.buddypair.data.Erasmus.getArrival_date()", "erasmus.getArrival_date().toString()"], "Fixed commit": "230ab4d6d92c9fcf186c9c81a40bdd4ccb799595", "Url": "https://api.github.com/repos/dbarelop/BuddyPair-android", "Date": "2016-01-04T22:57:21Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (obfuscation) contentToSend = translate.getObfuscateContent(); else contentToSend = translate.getInitialContent();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/8574/buggy-version/mytransl.src.main.java.com.github.stom79.mytransl.async.TransAsync.java", "BodyUseAPI": [], "Fixed commit": "a4abe8c2d5e8a7c822c2f391230ad5c753425a4d", "Url": "https://api.github.com/repos/stom79/mytransl", "Date": "2017-12-03T12:32:35Z"},
{"Line": "=>16062", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (self instanceof groovy.util.BufferedIterator) { return ((groovy.util.BufferedIterator<T>) (self)); }else { return new org.codehaus.groovy.util.IteratorBufferedIterator<T>(self); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/8323/buggy-version/src.main.org.codehaus.groovy.runtime.DefaultGroovyMethods.java", "BodyUseAPI": [], "Fixed commit": "2f53ba006cd62fd8b6b0278eac1264b8299faeb6", "Url": "https://api.github.com/repos/ataylor284/groovy", "Date": "2016-01-31T21:49:56Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.getPlace().getLetter()) > (cell.getLetter())) fourth : { for (int i = (Board.B.indexOf(this.getPlace())) - 1; i > (Board.B.indexOf(cell)); i--) { if ((Board.B.get(i).getNumber()) == (this.getPlace().getNumber())) { if (Board.B.get(i).getBusy()) { break fourth; } } } if (!(cell.getBusy())) { java.lang.System.out.println(\"Move\"); this.getPlace().setFigure(null); this.getPlace().setBusy(false); this.setPlace(cell); cell.setFigure(this); cell.setBusy(true); }else if ((((cell.getBusy()) && (this.getColor())) && (!(cell.getFigure().getColor()))) || (((cell.getBusy()) && (!(this.getColor()))) && (cell.getFigure().getColor()))) { java.lang.System.out.println(\"Eat\"); this.getPlace().setFigure(null); cell.getFigure().setPlace(new chess.NotAvailableCell(10, 10)); this.getPlace().setBusy(false); cell.setFigure(this); this.setPlace(cell); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/1060/buggy-version/src.chess.Queen.java", "BodyUseAPI": ["chess.Cell.getBusy()", "chess.Cell.getBusy()", "chess.Cell.setFigure(chess.Queen)", "chess.Cell.setFigure(chess.Queen)", "chess.Cell.getFigure()", "chess.Cell.getFigure()", "Board.B.indexOf(chess.Cell)", "chess.Queen.setPlace(chess.Cell)", "chess.Cell.setBusy(boolean)", "cell.getFigure().getColor()", "chess.Cell.getBusy()", "cell.getFigure().setPlace(chess.NotAvailableCell)", "chess.Queen.setPlace(chess.Cell)", "chess.Cell.getFigure()", "cell.getFigure().getColor()"], "Fixed commit": "e784fa02bbe37a902f5dc9311aa95af6c2dedf58", "Url": "https://api.github.com/repos/mesogear/MyChess", "Date": "2017-08-30T14:27:15Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((cell.getBusy()) && (this.getColor())) && (!(cell.getFigure().getColor()))) || (((cell.getBusy()) && (!(this.getColor()))) && (cell.getFigure().getColor()))) { java.lang.System.out.println(\"Eat\"); this.getPlace().setFigure(null); cell.getFigure().setPlace(new chess.NotAvailableCell(10, 10)); this.getPlace().setBusy(false); cell.setFigure(this); this.setPlace(cell); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/1060/buggy-version/src.chess.Queen.java", "BodyUseAPI": ["chess.Cell.getFigure()", "chess.Queen.setPlace(chess.Cell)", "cell.getFigure().setPlace(chess.NotAvailableCell)", "chess.Cell.setFigure(chess.Queen)"], "Fixed commit": "e784fa02bbe37a902f5dc9311aa95af6c2dedf58", "Url": "https://api.github.com/repos/mesogear/MyChess", "Date": "2017-08-30T14:27:15Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(cell.getBusy())) { java.lang.System.out.println(\"Move\"); this.getPlace().setFigure(null); this.getPlace().setBusy(false); this.setPlace(cell); cell.setFigure(this); cell.setBusy(true); }else if ((((cell.getBusy()) && (this.getColor())) && (!(cell.getFigure().getColor()))) || (((cell.getBusy()) && (!(this.getColor()))) && (cell.getFigure().getColor()))) { java.lang.System.out.println(\"Eat\"); this.getPlace().setFigure(null); cell.getFigure().setPlace(new chess.NotAvailableCell(10, 10)); this.getPlace().setBusy(false); cell.setFigure(this); this.setPlace(cell); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/1060/buggy-version/src.chess.Queen.java", "BodyUseAPI": ["chess.Queen.setPlace(chess.Cell)", "chess.Cell.setBusy(boolean)", "chess.Cell.setFigure(chess.Queen)", "chess.Cell.getBusy()", "cell.getFigure().getColor()", "chess.Queen.setPlace(chess.Cell)", "chess.Cell.setFigure(chess.Queen)", "chess.Cell.getFigure()", "cell.getFigure().getColor()", "chess.Cell.getFigure()", "chess.Cell.getBusy()", "cell.getFigure().setPlace(chess.NotAvailableCell)", "chess.Cell.getFigure()"], "Fixed commit": "e784fa02bbe37a902f5dc9311aa95af6c2dedf58", "Url": "https://api.github.com/repos/mesogear/MyChess", "Date": "2017-08-30T14:27:15Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(cell.getBusy())) { java.lang.System.out.println(\"Move\"); this.getPlace().setFigure(null); this.getPlace().setBusy(false); this.setPlace(cell); cell.setFigure(this); cell.setBusy(true); }else if ((((cell.getBusy()) && (this.getColor())) && (!(cell.getFigure().getColor()))) || (((cell.getBusy()) && (!(this.getColor()))) && (cell.getFigure().getColor()))) { java.lang.System.out.println(\"Eat\"); this.getPlace().setFigure(null); cell.getFigure().setPlace(new chess.NotAvailableCell(10, 10)); this.getPlace().setBusy(false); cell.setFigure(this); this.setPlace(cell); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/1060/buggy-version/src.chess.Queen.java", "BodyUseAPI": ["chess.Cell.getFigure()", "chess.Cell.setFigure(chess.Queen)", "chess.Cell.getFigure()", "cell.getFigure().getColor()", "cell.getFigure().setPlace(chess.NotAvailableCell)", "chess.Cell.setBusy(boolean)", "chess.Cell.getBusy()", "chess.Cell.getBusy()", "chess.Queen.setPlace(chess.Cell)", "chess.Cell.setFigure(chess.Queen)", "chess.Cell.getFigure()", "cell.getFigure().getColor()", "chess.Queen.setPlace(chess.Cell)"], "Fixed commit": "e784fa02bbe37a902f5dc9311aa95af6c2dedf58", "Url": "https://api.github.com/repos/mesogear/MyChess", "Date": "2017-08-30T14:27:15Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((cell.getBusy()) && (this.getColor())) && (!(cell.getFigure().getColor()))) || (((cell.getBusy()) && (!(this.getColor()))) && (cell.getFigure().getColor()))) { java.lang.System.out.println(\"Eat\"); this.getPlace().setFigure(null); cell.getFigure().setPlace(new chess.NotAvailableCell(10, 10)); this.getPlace().setBusy(false); cell.setFigure(this); this.setPlace(cell); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/1060/buggy-version/src.chess.Rook.java", "BodyUseAPI": ["chess.Rook.setPlace(chess.Cell)", "cell.getFigure().setPlace(chess.NotAvailableCell)", "chess.Cell.setFigure(chess.Rook)", "chess.Cell.getFigure()"], "Fixed commit": "e784fa02bbe37a902f5dc9311aa95af6c2dedf58", "Url": "https://api.github.com/repos/mesogear/MyChess", "Date": "2017-08-30T14:27:15Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.getPlace().getLetter()) > (cell.getLetter())) fourth : { for (int i = (Board.B.indexOf(this.getPlace())) - 1; i > (Board.B.indexOf(cell)); i--) { if ((Board.B.get(i).getNumber()) == (this.getPlace().getNumber())) { if (Board.B.get(i).getBusy()) { break fourth; } } } if (!(cell.getBusy())) { java.lang.System.out.println(\"Move\"); this.getPlace().setFigure(null); this.getPlace().setBusy(false); this.setPlace(cell); cell.setFigure(this); cell.setBusy(true); }else if ((((cell.getBusy()) && (this.getColor())) && (!(cell.getFigure().getColor()))) || (((cell.getBusy()) && (!(this.getColor()))) && (cell.getFigure().getColor()))) { java.lang.System.out.println(\"Eat\"); this.getPlace().setFigure(null); cell.getFigure().setPlace(new chess.NotAvailableCell(10, 10)); this.getPlace().setBusy(false); cell.setFigure(this); this.setPlace(cell); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/1060/buggy-version/src.chess.Rook.java", "BodyUseAPI": ["chess.Cell.getFigure()", "chess.Cell.getFigure()", "chess.Cell.setBusy(boolean)", "chess.Rook.setPlace(chess.Cell)", "chess.Rook.setPlace(chess.Cell)", "chess.Cell.getBusy()", "cell.getFigure().setPlace(chess.NotAvailableCell)", "chess.Cell.setFigure(chess.Rook)", "chess.Cell.getBusy()", "cell.getFigure().getColor()", "chess.Cell.getFigure()", "cell.getFigure().getColor()", "chess.Cell.setFigure(chess.Rook)", "Board.B.indexOf(chess.Cell)", "chess.Cell.getBusy()"], "Fixed commit": "e784fa02bbe37a902f5dc9311aa95af6c2dedf58", "Url": "https://api.github.com/repos/mesogear/MyChess", "Date": "2017-08-30T14:27:15Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(cell.getBusy())) { java.lang.System.out.println(\"Move\"); this.getPlace().setFigure(null); this.getPlace().setBusy(false); this.setPlace(cell); cell.setFigure(this); cell.setBusy(true); }else if ((((cell.getBusy()) && (this.getColor())) && (!(cell.getFigure().getColor()))) || (((cell.getBusy()) && (!(this.getColor()))) && (cell.getFigure().getColor()))) { java.lang.System.out.println(\"Eat\"); this.getPlace().setFigure(null); cell.getFigure().setPlace(new chess.NotAvailableCell(10, 10)); this.getPlace().setBusy(false); cell.setFigure(this); this.setPlace(cell); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/1060/buggy-version/src.chess.Rook.java", "BodyUseAPI": ["chess.Cell.setFigure(chess.Rook)", "cell.getFigure().setPlace(chess.NotAvailableCell)", "chess.Rook.setPlace(chess.Cell)", "cell.getFigure().getColor()", "chess.Cell.getFigure()", "chess.Cell.setBusy(boolean)", "chess.Cell.getBusy()", "cell.getFigure().getColor()", "chess.Cell.setFigure(chess.Rook)", "chess.Rook.setPlace(chess.Cell)", "chess.Cell.getBusy()", "chess.Cell.getFigure()", "chess.Cell.getFigure()"], "Fixed commit": "e784fa02bbe37a902f5dc9311aa95af6c2dedf58", "Url": "https://api.github.com/repos/mesogear/MyChess", "Date": "2017-08-30T14:27:15Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(cell.getBusy())) { java.lang.System.out.println(\"Move\"); this.getPlace().setFigure(null); this.getPlace().setBusy(false); this.setPlace(cell); cell.setFigure(this); cell.setBusy(true); }else if ((((cell.getBusy()) && (this.getColor())) && (!(cell.getFigure().getColor()))) || (((cell.getBusy()) && (!(this.getColor()))) && (cell.getFigure().getColor()))) { java.lang.System.out.println(\"Eat\"); this.getPlace().setFigure(null); cell.getFigure().setPlace(new chess.NotAvailableCell(10, 10)); this.getPlace().setBusy(false); cell.setFigure(this); this.setPlace(cell); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/1060/buggy-version/src.chess.Rook.java", "BodyUseAPI": ["chess.Cell.getBusy()", "chess.Cell.setFigure(chess.Rook)", "cell.getFigure().getColor()", "chess.Cell.setBusy(boolean)", "cell.getFigure().setPlace(chess.NotAvailableCell)", "cell.getFigure().getColor()", "chess.Cell.setFigure(chess.Rook)", "chess.Rook.setPlace(chess.Cell)", "chess.Cell.getFigure()", "chess.Cell.getBusy()", "chess.Rook.setPlace(chess.Cell)", "chess.Cell.getFigure()", "chess.Cell.getFigure()"], "Fixed commit": "e784fa02bbe37a902f5dc9311aa95af6c2dedf58", "Url": "https://api.github.com/repos/mesogear/MyChess", "Date": "2017-08-30T14:27:15Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (n == (Data.MAP_DATA.length)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/1980/buggy-version/grounded-java.src.org.alejolp.grounded.Map.java", "BodyUseAPI": [], "Fixed commit": "03bccc22c3a44157cddc92312ddcd054d4ab6ee1", "Url": "https://api.github.com/repos/alejolp/grounded", "Date": "2014-01-24T06:20:50Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (o == null) { handleException(((\"No bean named '\" + (beanName)) + \"' is defined\"), synCtx); }else { handleException((\"Error in \" + (o.getClass().getName())), synCtx); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/2283/buggy-version/modules.extensions.src.main.java.org.apache.synapse.mediators.spring.SpringMediator.java", "BodyUseAPI": ["java.lang.Class<? extends java.lang.Object>.getName()", "java.lang.Object.getClass()", "org.apache.synapse.mediators.spring.SpringMediator.handleException(java.lang.String,org.apache.synapse.MessageContext)"], "Fixed commit": "36e59130fdad1043b77174099f6d0eac4279b010", "Url": "https://api.github.com/repos/Buddhima/wso2-synapse", "Date": "2014-10-06T06:39:52Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((instances.size()) != (weights.size())) throw new java.lang.IllegalArgumentException();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/8434/buggy-version/src.main.java.com.github.TKnudsen.ComplexDataObject.model.tools.WekaConversion.java", "BodyUseAPI": [], "Fixed commit": "9a00331c68c809b22264e052fdba0e42db530dfd", "Url": "https://api.github.com/repos/TKnudsen/ComplexDataObject", "Date": "2016-12-15T13:02:00Z"},
{"Line": "=>324", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (loc == (ours.Archon.UNDEFINED_LOCATION)) { broadcastLocationToScout(rc.getLocation()); }else { broadcastLocationToScout(loc); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/6670/buggy-version/src.ours.Archon.java", "BodyUseAPI": ["ours.Archon.broadcastLocationToScout(ours.MapLocation)"], "Fixed commit": "b51c10f620a6370373f07717e56710bc0883dcc0", "Url": "https://api.github.com/repos/arahusky/BattleCode2016", "Date": "2016-03-09T14:32:59Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (rc.canMove(dirToGo)) { rc.move(dirToGo); }else { rc.disintegrate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/6670/buggy-version/src.ours.Scout.java", "BodyUseAPI": ["ours.Scout.disintegrate()", "ours.Scout.move(battlecode.common.Direction)"], "Fixed commit": "b51c10f620a6370373f07717e56710bc0883dcc0", "Url": "https://api.github.com/repos/arahusky/BattleCode2016", "Date": "2016-03-09T14:32:59Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (toughness == (-1)) java.lang.System.exit(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/4292/buggy-version/src.minesweeper.Minesweeper.java", "BodyUseAPI": [], "Fixed commit": "433d313c29de87082906a3ec9eaf7b93d6740eea", "Url": "https://api.github.com/repos/ritz301/Minesweeper", "Date": "2016-01-07T16:01:31Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (matches == null) { java.lang.System.out.println(\"command is not correct\"); return state; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/3120/buggy-version/src.main.java.ru.spbau.mit.command.grep.Grep.java", "BodyUseAPI": [], "Fixed commit": "631b61af82c00380a5cbe4f333ceb38d6dc7a20d", "Url": "https://api.github.com/repos/ekaterinaMaljutina/Software-Design", "Date": "2017-03-11T11:45:32Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(getSessionController().getCurrentInd().getIsManager())) { getSessionController().initCurrentInd(individu.getIndividu().getNumDossierOpi(), individu.getIndividu().getDateNaissance(), false, false); getCurrentInd(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/1486/buggy-version/esup-opi-web-jsf-servlet.src.main.java.org.esupportail.opi.web.controllers.AccueilController.java", "BodyUseAPI": [], "Fixed commit": "fe824adb82181979ceef0e6df712d9ab52f07c41", "Url": "https://api.github.com/repos/hajaUR1/esup-opi", "Date": "2013-11-19T09:42:50Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.app.Activity.getDatabasePath(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(path.exists())) { if ((!(path.mkdirs())) && (!(path.exists()))) return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/6839/buggy-version/src.de.measite.contactmerger.ui.MergeListAdapter.java", "BodyUseAPI": ["java.io.File.mkdirs()", "java.io.File.exists()"], "Fixed commit": "aa8837c10ae06a0dfec89ef3bc9afc235526304f", "Url": "https://api.github.com/repos/rtreffer/ContactMerger", "Date": "2014-06-25T22:35:44Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.measite.contactmerger.MergeActivity.findViewById(R.id.switcher)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((switcher.getCurrentView().getId()) == (R.id.contact_merge_list)) { switcher.showPrevious(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/6839/buggy-version/src.de.measite.contactmerger.MergeActivity.java", "BodyUseAPI": ["android.widget.ViewSwitcher.showPrevious()"], "Fixed commit": "aa8837c10ae06a0dfec89ef3bc9afc235526304f", "Url": "https://api.github.com/repos/rtreffer/ContactMerger", "Date": "2014-06-25T22:35:44Z"},
{"Line": "=>678", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (sdkName != null) { searchRepoTypeAttributes.put(\"sdkName\", (sdkName + \".\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/8450/buggy-version/Libs.CodeGen.CodeGenLib.src.main.java.com.incapture.rapgen.AbstractTTree.java", "BodyUseAPI": ["com.incapture.rapgen.AbstractTTree.STAttrMap.put(java.lang.String,java.lang.String)"], "Fixed commit": "25729566b094014ab2c862152fe498911a737217", "Url": "https://api.github.com/repos/RapturePlatform/Rapture", "Date": "2016-10-12T22:41:05Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.redhat.ceylon.compiler.typechecker.tree.Tree.QualifiedMemberExpression.getDeclaration()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.redhat.ceylon.compiler.java.codegen.CodegenUtil.isRaw(decl)) com.redhat.ceylon.compiler.java.codegen.CodegenUtil.markRaw(that);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/7459/buggy-version/src.com.redhat.ceylon.compiler.java.codegen.BoxingVisitor.java", "BodyUseAPI": [], "Fixed commit": "696d586ffac33cfad44d6e50315b9451942a53bd", "Url": "https://api.github.com/repos/ceylon/ceylon-compiler", "Date": "2014-11-13T16:56:50Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.redhat.ceylon.compiler.typechecker.tree.Tree.QualifiedMemberExpression.getDeclaration()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((com.redhat.ceylon.compiler.java.codegen.CodegenUtil.hasUntrustedType(decl)) || (hasTypeParameterWithConstraintsOutsideScope(decl.getType(), that.getScope()))) com.redhat.ceylon.compiler.java.codegen.CodegenUtil.markUntrustedType(that);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/7459/buggy-version/src.com.redhat.ceylon.compiler.java.codegen.BoxingVisitor.java", "BodyUseAPI": ["com.redhat.ceylon.compiler.java.codegen.CodegenUtil.markUntrustedType(com.redhat.ceylon.compiler.typechecker.tree.Tree.QualifiedMemberExpression)"], "Fixed commit": "696d586ffac33cfad44d6e50315b9451942a53bd", "Url": "https://api.github.com/repos/ceylon/ceylon-compiler", "Date": "2014-11-13T16:56:50Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.System.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (osName.endsWith(\"Windows\")) { java.lang.Runtime.getRuntime().exec((\"script/alert.bat \" + fileName)); }else { java.lang.Runtime.getRuntime().exec((\"sh script/alert.sh \" + fileName)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/2187/buggy-version/src.ffw.alertsystem.AlertSystem.java", "BodyUseAPI": [], "Fixed commit": "c24fe7ac319603fdb367269890311e8a47612bbb", "Url": "https://api.github.com/repos/DirtyDan88/ffw-alertsystem", "Date": "2015-01-24T16:31:33Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getCurrentReqNumber()) != remRequestNum) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/2693/buggy-version/app.src.main.java.com.stayfprod.github.presenter.MainPresenter.java", "BodyUseAPI": [], "Fixed commit": "c4913db2fb3a584a44f97889e98c805d75d0875b", "Url": "https://api.github.com/repos/stayf/githubTest", "Date": "2016-12-05T05:55:00Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((assignment3.Main.start) == null) && ((assignment3.Main.end) == null)) { java.lang.System.out.println(\"no word ladder can be found because no words have been typed and parse wasn't called.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/6231/buggy-version/src.assignment3.Main.java", "BodyUseAPI": [], "Fixed commit": "34849f0036870b0ed8d321072da7db4076c317a0", "Url": "https://api.github.com/repos/synacktic/assignment3", "Date": "2016-10-01T02:50:40Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.darurats.baking.services.BakingService.processStock) != null) { return BakingService.processStock.size(); }else { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/6792/buggy-version/app.src.main.java.com.darurats.baking.widget.BakingWidgetFactory.java", "BodyUseAPI": [], "Fixed commit": "758b8b0b06aec122007c864e6478fe379673897d", "Url": "https://api.github.com/repos/darurats/BakingApp", "Date": "2017-09-05T10:48:43Z"},
{"Line": "=>270", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (nodesMap.containsKey(sb.toString())) { java.util.Map<java.lang.String, java.lang.String> existingPairs = nodesMap.get(sb.toString()); existingPairs.putAll(pairs); }else { nodesMap.put(sb.toString(), pairs); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/3408/buggy-version/modules.runtime.src.main.java.org.shaolin.bmdp.runtime.Registry.java", "BodyUseAPI": ["java.util.concurrent.ConcurrentHashMap<java.lang.String, java.util.Map<java.lang.String, java.lang.String>>.get(java.lang.String)", "java.lang.StringBuffer.toString()", "java.util.concurrent.ConcurrentHashMap<java.lang.String, java.util.Map<java.lang.String, java.lang.String>>.put(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)", "java.lang.StringBuffer.toString()"], "Fixed commit": "3ce5def924df104531305af79b15f7c7f55a2768", "Url": "https://api.github.com/repos/shaolinwu/uimaster", "Date": "2015-11-20T02:23:39Z"},
{"Line": "=>476", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.Integer.MAX_VALUE) == endCommentMarkIndex) { return sql; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/4947/buggy-version/src.main.java.com.microsoft.sqlserver.jdbc.SQLServerParameterMetaData.java", "BodyUseAPI": [], "Fixed commit": "f21d1db189a814d37d9690caa917aa098b4974e5", "Url": "https://api.github.com/repos/v-PATHngs/mssql-jdbc-PATHngs", "Date": "2017-06-21T21:20:18Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((holder.avatarLetter) == null) { holder.avatarLetter = ((android.widget.TextView) (convertView.findViewById(R.id.navigation_drawer_list_item_avatar_letter))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/7201/buggy-version/app.src.main.java.com.johnsimon.payback.adapter.NavigationDrawerAdapter.java", "BodyUseAPI": [], "Fixed commit": "d1d369bec62d883c3dbd3f95dda7dcbb30f65c09", "Url": "https://api.github.com/repos/JohnSimonCo/PayBack", "Date": "2015-01-16T13:05:09Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (multiURIMapping.isPrefix(prefix)) { rURI = rURI.substring((splitIdx + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/7232/buggy-version/src.de.fuberlin.wiwiss.pubby.Dataset.java", "BodyUseAPI": [], "Fixed commit": "d5064f5b3740321e62dec3fe4875bf2246f3f1fc", "Url": "https://api.github.com/repos/american-art/pubby", "Date": "2016-11-08T22:49:39Z"},
{"Line": "=>338", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (childResource != null) { resources.add(childResource); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/6955/buggy-version/core.src.main.java.com.strategicgains.hyperexpress.HyperExpress.java", "BodyUseAPI": ["java.util.List<com.strategicgains.hyperexpress.domain.Resource>.add(com.strategicgains.hyperexpress.domain.Resource)"], "Fixed commit": "83975c9820414727c3bd8bf32769448101e4e84a", "Url": "https://api.github.com/repos/RestExpress/HyperExpress", "Date": "2016-07-01T18:52:18Z"},
{"Line": "=>328", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(childResource.hasLinks())) { _assignResourceLinks(childResource, component, componentType); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/6955/buggy-version/core.src.main.java.com.strategicgains.hyperexpress.HyperExpress.java", "BodyUseAPI": ["com.strategicgains.hyperexpress.HyperExpress._assignResourceLinks(com.strategicgains.hyperexpress.domain.Resource,java.lang.Object,java.lang.Class<?>)"], "Fixed commit": "83975c9820414727c3bd8bf32769448101e4e84a", "Url": "https://api.github.com/repos/RestExpress/HyperExpress", "Date": "2016-07-01T18:52:18Z"},
{"Line": "=>297", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (topic.contains(\"/\")) topicExpressionType.setDialect(ConcreteEvaluator.dialectURI); else topicExpressionType.setDialect(SimpleEvaluator.dialectURI);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/7325/buggy-version/src.main.java.no.ntnu.okse.protocol.wsn.WSNTools.java", "BodyUseAPI": [], "Fixed commit": "9d19e37bea74907a5d03112e6509690d2f3c7faa", "Url": "https://api.github.com/repos/kradalby/okse", "Date": "2015-05-11T12:09:31Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.widget.ListView.getCheckedItemPositions()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (size.valueAt(i)) { org.qii.weiciyuan.bean.MessageBean msg = ((org.qii.weiciyuan.bean.MessageBean) (adapter.getItem((position - 1)))); if (!(msg.getUser().getId().equals(currentUserId))) return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/2909/buggy-version/src.org.qii.weiciyuan.ui.actionmenu.StatusMultiChoiceModeListener.java", "BodyUseAPI": [], "Fixed commit": "6accd82e6b2f401043af9a6427cf4b99684f7e8a", "Url": "https://api.github.com/repos/qii/weiciyuan", "Date": "2012-09-09T08:22:49Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (lend != null) { android.content.Intent intent = new android.content.Intent(this, org.bbt.kiakoa.LendDetailsActivity.class); intent.putExtra(LendDetailsActivity.EXTRA_LEND, lend); startActivity(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/874/buggy-version/app.src.main.java.org.bbt.kiakoa.MainActivity.java", "BodyUseAPI": ["android.content.Intent.putExtra(LendDetailsActivity.EXTRA_LEND,org.bbt.kiakoa.model.Lend)"], "Fixed commit": "487290a3b83ab84dd3605695674729997f633dbf", "Url": "https://api.github.com/repos/benoit-development/KiaKoa", "Date": "2017-08-07T12:56:57Z"},
{"Line": "=>311", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (codigo_res == 400) { android.widget.Toast.makeText(getApplicationContext(), R.string.solicitud_ya_enviada, Toast.LENGTH_LONG).show(); }else { android.widget.Toast.makeText(getApplicationContext(), R.string.connection_error, Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/9009/buggy-version/src.com.whereismyfriend.Amigos.java", "BodyUseAPI": [], "Fixed commit": "53cf00049aac62d2afa60cc6bd94721b998330bd", "Url": "https://api.github.com/repos/gabrielfagundez/wmf_android", "Date": "2013-11-14T18:45:47Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.nu.art.cyborg.core.CyborgController.getStack()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (stack == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/4171/buggy-version/src.main.java.com.nu.art.cyborg.core.CyborgView.java", "BodyUseAPI": [], "Fixed commit": "79c8b302036723ae7c3afba3efed8f9b5c9695e5", "Url": "https://api.github.com/repos/nu-art/cyborg-core", "Date": "2017-06-11T20:18:17Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.View.getParent()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(parent instanceof android.view.View)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/4171/buggy-version/src.main.java.com.nu.art.cyborg.core.CyborgController.java", "BodyUseAPI": [], "Fixed commit": "79c8b302036723ae7c3afba3efed8f9b5c9695e5", "Url": "https://api.github.com/repos/nu-art/cyborg-core", "Date": "2017-06-11T20:18:17Z"},
{"Line": "=>747", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(params.mediaRenderer.isTranscodeToMPEGPS())) { videoBitrateOptions.add(\"40M\"); }else if (params.mediaRenderer.isTranscodeToMPEGPS()) { videoBitrateOptions.add(\"9800k\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/1483/buggy-version/src.main.java.net.pms.encoders.FFMpegVideo.java", "BodyUseAPI": ["params.mediaRenderer.isTranscodeToMPEGPS()"], "Fixed commit": "716f4ea39c10d07547dfd35e875b24f85e63f3bd", "Url": "https://api.github.com/repos/Sami32/UniversalMediaServer", "Date": "2017-12-01T18:58:26Z"},
{"Line": "=>743", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.pms.configuration.RendererConfiguration.getCustomFFmpegOptions()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!(customFFmpegOptions.contains(\"-maxrate\"))) && (bufSize > 0)) { videoBitrateOptions.add(\"-maxrate\"); if (((defaultMaxBitrates[0]) > 0) && (!(params.mediaRenderer.isTranscodeToMPEGPS()))) { videoBitrateOptions.add(((java.lang.String.valueOf(defaultMaxBitrates[0])) + \"k\")); }else if (!(params.mediaRenderer.isTranscodeToMPEGPS())) { videoBitrateOptions.add(\"40M\"); }else if (params.mediaRenderer.isTranscodeToMPEGPS()) { videoBitrateOptions.add(\"9800k\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/1483/buggy-version/src.main.java.net.pms.encoders.FFMpegVideo.java", "BodyUseAPI": [], "Fixed commit": "716f4ea39c10d07547dfd35e875b24f85e63f3bd", "Url": "https://api.github.com/repos/Sami32/UniversalMediaServer", "Date": "2017-12-01T18:58:26Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((contentToRemove.getVersionKey()) == (net.tomp2p.peers.Number160.ZERO)) dataManager.remove(locationKey, contentKey, this); else dataManager.remove(locationKey, contentKey, contentToRemove.getVersionKey(), this);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/6988/buggy-version/org.hive2hive.core.src.org.hive2hive.core.process.common.remove.BaseRemoveProcessStep.java", "BodyUseAPI": ["org.hive2hive.core.network.data.NetworkContent.getVersionKey()", "org.hive2hive.core.network.data.DataManager.remove(java.lang.String,java.lang.String,contentToRemove.getVersionKey(),org.hive2hive.core.process.common.remove.BaseRemoveProcessStep)"], "Fixed commit": "2e0c784764d73f4bc2bd038c6d077fffc192b16f", "Url": "https://api.github.com/repos/ippes/Hive2Hive", "Date": "2013-12-20T00:49:02Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentIndex) > index) (currentIndex)--;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/2683/buggy-version/src.kernel.util.LoopList.java", "BodyUseAPI": [], "Fixed commit": "08022dc5753adc1d4f16f312d279680591fae426", "Url": "https://api.github.com/repos/maliut/console_monopoly", "Date": "2016-04-29T17:10:51Z"},
{"Line": "=>886", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Object.toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((data.indexOf(\"Remote Transmission Request\")) >= 0) { chckbxRtr.setSelected(true); return; }else { chckbxRtr.setSelected(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/4692/buggy-version/src.me.jarviswang.canomega.frames.MainFrame.java", "BodyUseAPI": [], "Fixed commit": "508d31ef5dfcb487032a7cf7c8d14845dccf546a", "Url": "https://api.github.com/repos/zjlywjh001/CAN_OMEGA_Tools", "Date": "2017-01-20T02:20:29Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.table.TableModel.getValueAt(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (value == null) { value = 0.0; getModel().setValueAt(value, row, column); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/6631/buggy-version/src.com.projects.gui.SelectionPropertyPanel.java", "BodyUseAPI": [], "Fixed commit": "aa5433dfeda571c322bd346bcb4f9fa4342e26c0", "Url": "https://api.github.com/repos/funIntentions/flow", "Date": "2015-06-04T22:17:41Z"},
{"Line": "=>2372", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (service instanceof org.apache.camel.CamelContextAware) { org.apache.camel.CamelContextAware aware = ((org.apache.camel.CamelContextAware) (service)); aware.setCamelContext(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/8673/buggy-version/camel-core.src.main.java.org.apache.camel.impl.DefaultCamelContext.java", "BodyUseAPI": [], "Fixed commit": "e3821ca28605d856b6bbc3b4f95c3a7b04430876", "Url": "https://api.github.com/repos/jcordes73/camel", "Date": "2014-12-02T07:47:14Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(datagramChannel.isConnected())) return ((java.net.InetSocketAddress) (datagramChannel.receive(readBuffer)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/1013/buggy-version/src.com.esotericsoftware.kryonet.UdpConnection.java", "BodyUseAPI": ["java.nio.channels.DatagramChannel.receive(java.nio.ByteBuffer)"], "Fixed commit": "e48111329a07a11efad79fddc8ac5cd11d999919", "Url": "https://api.github.com/repos/pedja1/kryonet", "Date": "2015-10-25T15:11:07Z"},
{"Line": "=>2433", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dto.Validator.getObject()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((electionInDb.getStatus()) == (ElectionStatus.NEW.getCode())) { dto.Validator vUpdateElection = editElectionWithNewlyAddedEmails(electionInDb, addedEmails); valid &= vUpdateElection.isVerified(); status += (vUpdateElection.getStatus()) + (database.DatabaseConnector.newLine); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/4058/buggy-version/src.database.DatabaseConnector.java", "BodyUseAPI": ["database.DatabaseConnector.editElectionWithNewlyAddedEmails(dto.ElectionDto,java.lang.String)"], "Fixed commit": "5c9226b81c1b004a0eb2a68ac5155be7946fa303", "Url": "https://api.github.com/repos/sfrink/CERTUS-Server", "Date": "2014-04-23T19:49:21Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((result.size()) > 10) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/8219/buggy-version/src.main.java.gadget.component.api.CitySearch.java", "BodyUseAPI": [], "Fixed commit": "467d52b70f0ae0b770281ebe196ed401119b9200", "Url": "https://api.github.com/repos/DustHoff/weatherbox", "Date": "2015-12-27T13:15:08Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.stratelia.webactiv.organization.DomainTable.truncate(row.theTimeStamp,int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((valueTimeStamp == null) || ((valueTimeStamp.length()) == 0)) { valueTimeStamp = \"0\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/21/buggy-version/lib-core.src.main.java.com.stratelia.webactiv.organization.DomainTable.java", "BodyUseAPI": [], "Fixed commit": "b40c23a7b9219722720707e8bfb75de4ecb75005", "Url": "https://api.github.com/repos/SilverTeamWork/Silverpeas-Core", "Date": "2015-03-25T10:41:03Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.stratelia.webactiv.organization.DomainTable.truncate(row.theTimeStamp,int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((valueTimeStamp == null) || ((valueTimeStamp.length()) == 0)) { valueTimeStamp = \"0\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/21/buggy-version/lib-core.src.main.java.com.stratelia.webactiv.organization.DomainTable.java", "BodyUseAPI": [], "Fixed commit": "b40c23a7b9219722720707e8bfb75de4ecb75005", "Url": "https://api.github.com/repos/SilverTeamWork/Silverpeas-Core", "Date": "2015-03-25T10:41:03Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (n > 2) { lib.model.Case[][] newArray = new lib.model.Case[n][n]; for (int i = 0; i < n; i++) { for (int j = 0; j < n2; j++) { if (r == (lib.model.enumerations.Rotation.DROITE)) { newArray[i][j] = forme[((n - j) - 1)][i]; }else { newArray[i][j] = forme[j][((n2 - i) - 1)]; } } } referenceGrille.tryMove(newArray, this.posX, this.posY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/2347/buggy-version/src.lib.model.Piece.java", "BodyUseAPI": [], "Fixed commit": "4154fd8d240dd3605c3c88be6eafa2cc231e5476", "Url": "https://api.github.com/repos/anthonyferreol/javapoo", "Date": "2017-05-17T20:16:59Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((data.getCount()) > 0) { mMergeAdapter.setActive(mVertretungenHeader, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/5128/buggy-version/app.src.main.java.de.itgdah.vertretungsplan.ui.BaseDayListFragment.java", "BodyUseAPI": [], "Fixed commit": "743bf267696409fc17d3bbf7c9358bb0ff2f98a6", "Url": "https://api.github.com/repos/moritzf/vertretungsplan-itg-android", "Date": "2015-06-06T21:47:15Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.biegajmy.location.LocationResolver.getCity(double,double)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (city != null) localStorage.updateCurrentCity(city);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/2202/buggy-version/app.src.main.java.com.biegajmy.location.LocationService.java", "BodyUseAPI": ["com.biegajmy.LocalStorage.updateCurrentCity(java.lang.String)"], "Fixed commit": "62a290add3f556fe7d0bc59b39cec453b79747da", "Url": "https://api.github.com/repos/mkorszun/biegajmy", "Date": "2015-10-25T13:28:22Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (javax.media.opengl.GLContext.isValidGLVersion(altMajor, altMinor)) { val[0] = altMajor; val[1] = altMinor; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/6475/buggy-version/src.jogl.classes.jogamp.opengl.GLVersionNumber.java", "BodyUseAPI": [], "Fixed commit": "24fe89e6d7cc551aaffb6c95624271eef027b275", "Url": "https://api.github.com/repos/JogAmp/jogl", "Date": "2013-02-21T08:26:19Z"},
{"Line": "=>710", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(org.orcid.pojo.ajaxForm.PojoUtil.isEmpty(extId.getUrl()))) && (org.orcid.pojo.ajaxForm.PojoUtil.isEmpty(extId.getValue()))) { setError(extId.getValue(), \"NotBlank.fundings.ext_id.value\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/775/buggy-version/orcid-web.src.main.java.org.orcid.frontend.web.controllers.FundingsController.java", "BodyUseAPI": ["org.orcid.pojo.ajaxForm.FundingExternalIdentifierForm.getValue()", "org.orcid.frontend.web.controllers.FundingsController.setError(extId.getValue(),java.lang.String)"], "Fixed commit": "5c6b6f3e3069cd9bff7468059f8afda1af7b17f1", "Url": "https://api.github.com/repos/ORCID/ORCID-Source", "Date": "2016-09-16T16:48:36Z"},
{"Line": "=>701", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((extId.getValue()) != null) extId.getValue().setErrors(new java.util.ArrayList<java.lang.String>());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/775/buggy-version/orcid-web.src.main.java.org.orcid.frontend.web.controllers.FundingsController.java", "BodyUseAPI": ["extId.getValue().setErrors(java.util.ArrayList<java.lang.String>)", "org.orcid.pojo.ajaxForm.FundingExternalIdentifierForm.getValue()"], "Fixed commit": "5c6b6f3e3069cd9bff7468059f8afda1af7b17f1", "Url": "https://api.github.com/repos/ORCID/ORCID-Source", "Date": "2016-09-16T16:48:36Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (moveTo < 0) moveTo = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/7142/buggy-version/src.smp.components.buttons.MoveButton.java", "BodyUseAPI": [], "Fixed commit": "ef61fc30734d65f4e1ff98184d21975733961619", "Url": "https://api.github.com/repos/DC37/Super-Mario-Paint", "Date": "2015-01-02T05:27:29Z"},
{"Line": "=>382", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (range == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/6894/buggy-version/tds.src.main.java.thredds.server.radarServer2.RadarDataInventory.java", "BodyUseAPI": [], "Fixed commit": "9a1466f9b927f06b2f404c165e46fb9be19af047", "Url": "https://api.github.com/repos/Unidata/thredds", "Date": "2015-05-22T18:55:47Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(name.equals(generatedClassName))) { return parentLoader.loadClass(name); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/6487/buggy-version/main.src.mockit.internal.classGeneration.ImplementationClass.java", "BodyUseAPI": ["java.lang.ClassLoader.loadClass(java.lang.String)"], "Fixed commit": "82cd64f58bba7e1e28a82c603f72989084700237", "Url": "https://api.github.com/repos/maddingo/jmockit1", "Date": "2015-11-02T13:58:16Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (b < (mMinValue)) { b = ((byte) (mMinValue)); }else if (b > (mMaxValue)) { b = ((byte) (mMaxValue)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/306/buggy-version/widget.src.main.java.com.nulldreams.widget.WaveformView.java", "BodyUseAPI": [], "Fixed commit": "0bdd2ecc9e7f20baf2e8637ea849ca5c05fba09e", "Url": "https://api.github.com/repos/boybeak/Widgets", "Date": "2017-05-05T08:21:07Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.getName().equals(\"Deep Sleep\")) { android.util.Log.d(com.asksven.android.common.privateapiproxies.Misc.TAG, (((((((\"Substracting \" + (myRef.getName())) + \" \") + (myRef.getData())) + \" from \") + (this.getName())) + \" \") + (this.getData()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/1995/buggy-version/src.com.asksven.android.common.privateapiproxies.Misc.java", "BodyUseAPI": [], "Fixed commit": "818238c36d228b2b019cfef90426bd5b618bc72c", "Url": "https://api.github.com/repos/asksven/AndroidCommon", "Date": "2012-04-13T17:28:36Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.photon.phresco.framework.pom.AndroidTestPOMUpdater.updatePOM(java.io.File)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (java.lang.Boolean.TRUE.equals(status)) { getLog().info(\" Test project pom updated successfully \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/5086/buggy-version/plugins.android-maven-plugin.src.main.java.com.photon.maven.plugins.android.standalonemojos.UpdateBuildInfoMojo.java", "BodyUseAPI": [], "Fixed commit": "9e320b8be3201de3158624c40637c44338b4d63b", "Url": "https://api.github.com/repos/phresco/phresco", "Date": "2012-10-17T16:13:52Z"},
{"Line": "=>1025", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.jstakun.gms.android.config.ConfigurationManager.getInstance().isOff(ConfigurationManager.FOLLOW_MY_POSITION)) { mapButtons.setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/791/buggy-version/GMSClientNew.src.com.jstakun.gms.android.ui.GMSClient2OSMMainActivity.java", "BodyUseAPI": [], "Fixed commit": "236fcfd861ca9002d283219b1244fd63e6943b91", "Url": "https://api.github.com/repos/jstakun/gms-world-client", "Date": "2016-10-07T18:00:06Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(((com.lowermainlandpharmacyservices.lmpsformulary.BrandFormularyDrug) (brandList.getBrandDrug(brandName))).containsGenericName(genericName))) ((com.lowermainlandpharmacyservices.lmpsformulary.BrandFormularyDrug) (brandList.getBrandDrug(brandName))).addGenericName(genericName);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/7587/buggy-version/LMPSFormulary.src.com.lowermainlandpharmacyservices.lmpsformulary.CSVparser.java", "BodyUseAPI": ["((com.lowermainlandpharmacyservices.lmpsformulary.BrandFormularyDrug) (brandList.getBrandDrug(brandName))).addGenericName(java.lang.String)", "com.lowermainlandpharmacyservices.lmpsformulary.BrandDrugList.getBrandDrug(java.lang.String)"], "Fixed commit": "934fdd753dd1f1652a3e18197dab76355962d61f", "Url": "https://api.github.com/repos/jtkyeung/lmps-formulary", "Date": "2014-12-01T22:07:12Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(isTopLevel(eachKey))) { if ((isReferencedByAltDirectlyOrIndirectly(eachKey)) || (isAlt(eachKey))) { b.addLevel(com.github.dakusui.jcunit.regex.RegexToFactorListTranslator.VOID); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/7782/buggy-version/src.main.java.com.github.dakusui.jcunit.regex.RegexToFactorListTranslator.java", "BodyUseAPI": ["com.github.dakusui.jcunit.regex.RegexToFactorListTranslator.isAlt(java.lang.String)", "com.github.dakusui.jcunit.regex.RegexToFactorListTranslator.isReferencedByAltDirectlyOrIndirectly(java.lang.String)"], "Fixed commit": "bb192d0c5346a0259bcb752c0edb3532939a1a09", "Url": "https://api.github.com/repos/dakusui/jcunit", "Date": "2017-03-05T09:36:22Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.tibco.bw.maven.plugin.osgi.helpers.VersionParser.calculateQualifier(version.getQualifier())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(calcQualifier.isEmpty())) { fullVersion += \".\" + calcQualifier; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/3831/buggy-version/Source.bw6-maven-plugin.src.main.java.com.tibco.bw.maven.plugin.osgi.helpers.VersionParser.java", "BodyUseAPI": [], "Fixed commit": "745a44a6d266134a715d45d8efa803986e05e037", "Url": "https://api.github.com/repos/Tantino/bw6-plugin-maven", "Date": "2016-11-11T10:36:00Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.jar.Attributes.getValue(Constants.BUNDLE_VERSION)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((qualifierVersion != null) && (qualifierVersion.endsWith(\".\"))) { qualifierVersion = qualifierVersion.substring(0, qualifierVersion.lastIndexOf(\".\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/3831/buggy-version/Source.bw6-maven-plugin.src.main.java.com.tibco.bw.maven.plugin.module.BWModulePackageMojo.java", "BodyUseAPI": ["java.lang.String.lastIndexOf(java.lang.String)", "java.lang.String.substring(int,int)"], "Fixed commit": "745a44a6d266134a715d45d8efa803986e05e037", "Url": "https://api.github.com/repos/Tantino/bw6-plugin-maven", "Date": "2016-11-11T10:36:00Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["th.in.nagi.fecs.service.UserService.findByEmail(tempUser.getEmail().toLowerCase())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (user == null) { return new org.springframework.http.ResponseEntity<th.in.nagi.fecs.message.Message>(new th.in.nagi.fecs.message.Message(\"This account doesn't exist\"), org.springframework.http.HttpStatus.BAD_REQUEST); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/6582/buggy-version/src.main.java.th.in.nagi.fecs.controller.AuthenticationController.java", "BodyUseAPI": [], "Fixed commit": "817f43b6db7591a8982dbf5f64e68d2d26a983b3", "Url": "https://api.github.com/repos/SixthFloor/FECS-API", "Date": "2015-12-18T07:30:51Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (fname != null) com.cisco.mscviewer.Main.mf.loadFile(fname);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/466/buggy-version/src.com.cisco.mscviewer.Main.java", "BodyUseAPI": ["com.cisco.mscviewer.gui.MainFrame.loadFile(java.lang.String)"], "Fixed commit": "cbe80e2f8a5346e5865938d7241fecb44d6019fb", "Url": "https://api.github.com/repos/rattias/mscviewer", "Date": "2015-06-16T17:08:36Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((word.length()) > 0) { if ((ret.isEmpty()) || (!(android.text.TextUtils.equals(ret.get(((ret.size()) - 1)), word.toString())))) { ret.add(word.toString()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/5829/buggy-version/ChainWord.Android.src.com.dream2reality.wordsmanager.WordsRepository.java", "BodyUseAPI": ["android.text.TextUtils.equals(java.lang.String,java.lang.String)", "java.lang.StringBuilder.toString()", "java.util.List<java.lang.String>.add(java.lang.String)", "java.lang.StringBuilder.toString()"], "Fixed commit": "600dc53e6dd2aa0ffc6b5e6d2451de072d7ffbb2", "Url": "https://api.github.com/repos/ramonqlee-lib/Github_ChainWords_Android", "Date": "2014-12-12T02:41:29Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.fbudassi.logger.util.StringUtils.isBlank(resource)) { throw new java.lang.IllegalArgumentException(\"Parameter resource can't be blank\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/640/buggy-version/src.main.java.com.fbudassi.logger.util.PropertiesUtils.java", "BodyUseAPI": [], "Fixed commit": "458d008af27b51bb2d2d672fbd58e968ed6a4486", "Url": "https://api.github.com/repos/fbudassi/joblogger", "Date": "2016-02-22T16:02:02Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (props == null) { throw new java.lang.IllegalArgumentException(\"Parameter props can't be null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/640/buggy-version/src.main.java.com.fbudassi.logger.util.PropertiesUtils.java", "BodyUseAPI": [], "Fixed commit": "458d008af27b51bb2d2d672fbd58e968ed6a4486", "Url": "https://api.github.com/repos/fbudassi/joblogger", "Date": "2016-02-22T16:02:02Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.fbudassi.logger.util.StringUtils.isBlank(key)) { throw new java.lang.IllegalArgumentException(\"Parameter key can't be blank\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/640/buggy-version/src.main.java.com.fbudassi.logger.util.PropertiesUtils.java", "BodyUseAPI": [], "Fixed commit": "458d008af27b51bb2d2d672fbd58e968ed6a4486", "Url": "https://api.github.com/repos/fbudassi/joblogger", "Date": "2016-02-22T16:02:02Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.content) == null) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/3908/buggy-version/src.main.java.org.mvnsearch.intellij.plugin.zookeeper.vfs.ZkNodeVirtualFile.java", "BodyUseAPI": [], "Fixed commit": "44283be17f09a16e363bf2eed69a59e86a386ff2", "Url": "https://api.github.com/repos/linux-china/zookeeper-intellij", "Date": "2013-12-31T02:32:56Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.content) == null) { return \"\".getBytes(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/3908/buggy-version/src.main.java.org.mvnsearch.intellij.plugin.zookeeper.vfs.ZkNodeVirtualFile.java", "BodyUseAPI": [], "Fixed commit": "44283be17f09a16e363bf2eed69a59e86a386ff2", "Url": "https://api.github.com/repos/linux-china/zookeeper-intellij", "Date": "2013-12-31T02:32:56Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (o != null) configSourceBuilder = configSourceBuilder.value(o.toString()); else configSourceBuilder = configSourceBuilder.value(\"\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/2869/buggy-version/common-config-core.src.main.java.com.diamondq.common.config.format.AbstractStdConfigParser.java", "BodyUseAPI": ["ConfigProp.Builder.value(java.lang.String)", "java.lang.Object.toString()"], "Fixed commit": "2a50d079ca186f192a29d49a4994b340d87310d2", "Url": "https://api.github.com/repos/diamondq/dq-common-config", "Date": "2017-07-11T01:39:14Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((rank) == 0) || ((suit) == 0)) return \"Empty\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/2327/buggy-version/app.src.main.java.com.example.ryan.cards.Card.java", "BodyUseAPI": [], "Fixed commit": "61e42782a03783f9e7855e18e7b7965372429914", "Url": "https://api.github.com/repos/ElkinsCS3/Cards", "Date": "2015-02-15T06:05:25Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.ObjectInputStream.readObject()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (msg == null) controller.errorAlert(\"Communication Error\", \"There was an issue talking to the server.\", \"The server passed an invalid or incomplete message.\"); else if ((msg.getMessageType()) == (networking.StringMessage.Type.ERROR_MESSAGE)) controller.errorAlert(\"Server Error\", msg.getMsgHeader(), msg.getMsgContent()); else if ((msg.getMessageType()) == (networking.StringMessage.Type.WARNING_MESSAGE)) controller.warningAlert(\"Server Warning\", msg.getMsgHeader(), msg.getMsgContent()); else controller.informationAlert(\"Server Message\", msg.getMsgHeader(), msg.getMsgContent());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/3287/buggy-version/Earth_Modeling_Parser.src-client.networking.NetworkListener.java", "BodyUseAPI": ["networking.StringMessage.getMessageType()", "framework.AbstractNetworkedScreenController.warningAlert(java.lang.String,msg.getMsgHeader(),msg.getMsgContent())", "networking.StringMessage.getMsgContent()", "networking.StringMessage.getMessageType()", "networking.StringMessage.getMsgHeader()", "networking.StringMessage.getMsgHeader()", "networking.StringMessage.getMsgHeader()", "networking.StringMessage.getMsgContent()", "framework.AbstractNetworkedScreenController.informationAlert(java.lang.String,msg.getMsgHeader(),msg.getMsgContent())", "networking.StringMessage.getMsgContent()", "framework.AbstractNetworkedScreenController.errorAlert(java.lang.String,msg.getMsgHeader(),msg.getMsgContent())"], "Fixed commit": "9cbcf16fa8fb571db1657210e3dcc99099e6f30a", "Url": "https://api.github.com/repos/kj20207/SD_may1701_EM", "Date": "2017-03-02T23:22:08Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(scratchDir.exists())) { scratchDir.mkdirs(); java.util.logging.Logger.getLogger(vsp.processing.StreamRecordingManager.class.getName()).info((\"Could not find scratch dir, created one at: \" + (scratchDir.getCanonicalPath()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/8926/buggy-version/src.vsp.processing.StreamRecordingManager.java", "BodyUseAPI": ["java.io.File.getCanonicalPath()", "java.util.logging.Logger.info(java.lang.String)", "java.io.File.mkdirs()"], "Fixed commit": "9d3a94e528bdfa9a381810e98d938e36d8f4cf40", "Url": "https://api.github.com/repos/KeithDeRuiter/VideoStreamProject", "Date": "2014-12-15T02:52:40Z"},
{"Line": "=>483", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (cellInMap != null) { connections.remove(cellInMap); graph.removeCells(new java.lang.Object[]{ cellInMap }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/6772/buggy-version/src.main.java.gui.graph.LinkGraph.java", "BodyUseAPI": ["java.util.Map<com.mxgraph.model.mxCell, gui.graph.LinkGraph.Connection>.remove(com.mxgraph.model.mxCell)", "com.mxgraph.view.mxGraph.removeCells(java.lang.Object[])"], "Fixed commit": "c4c83fe0ede27f2b681e203adc17decce5a2151c", "Url": "https://api.github.com/repos/simonduf/data.gui", "Date": "2016-12-16T23:33:40Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (inputStream != null) { inputStream.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V85/5024/buggy-version/src.chess.Player.java", "BodyUseAPI": ["java.io.ObjectInputStream.close()"], "Fixed commit": "f87ec106f4385d03ade5ee8152623e22d2ad5b68", "Url": "https://api.github.com/repos/ghufranahmad/Chess_DesignPatterns", "Date": "2017-11-03T13:29:33Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((vehicleSchedule.getRoute()) != null) && (((vehicleSchedule.getRoute().getCode()) == null) || (vehicleSchedule.getRoute().getCode().isEmpty()))) throw new org.egov.tracer.model.CustomException(\"Route\", (\"Given Route is invalid: \" + (vehicleSchedule.getRoute().getCode())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/1597/buggy-version/swm.swm-services.src.main.java.org.egov.swm.domain.service.VehicleScheduleService.java", "BodyUseAPI": ["vehicleSchedule.getRoute().getCode()", "org.egov.swm.domain.model.VehicleSchedule.getRoute()"], "Fixed commit": "eef4ef7d315c795ca8a83462762d568f1136f3b5", "Url": "https://api.github.com/repos/egovernments/egov-services", "Date": "2017-12-04T12:03:02Z"},
{"Line": "=>338", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.baoquan.sdk.AttestationPayload.getSigns()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (signs != null) { iSigns = signs.get(is); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/2467/buggy-version/src.main.java.com.baoquan.sdk.BaoquanClient.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<java.lang.String>>>>.get(java.lang.String)"], "Fixed commit": "8cd686c2e575ae6ef47e6c4eb0a3fbd6968e83b9", "Url": "https://api.github.com/repos/baoquan-hq/java-sdk", "Date": "2016-07-20T07:48:28Z"},
{"Line": "=>813", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (reduceActionCode == 0) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/8794/buggy-version/gen.name.martingeisse.mapag.input.MapagGeneratedMapagParser.java", "BodyUseAPI": [], "Fixed commit": "bfc036862ea9238f510822b5f53110b801222c4c", "Url": "https://api.github.com/repos/MartinGeisse/mapag", "Date": "2017-12-06T16:09:41Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.devland.esperandro.Esperandro.getPreferences(java.lang.Class,android.content.Context)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (defaultPrefs.defaultPasswordType().equals(\"\\\"GeneratedMaximum\\\"\")) { defaultPrefs.defaultPasswordType(MPElementType.GeneratedMaximum.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/7860/buggy-version/app.src.main.java.de.devland.masterpassword.util.UpgradeManager.java", "BodyUseAPI": ["de.devland.masterpassword.prefs.DefaultPrefs.defaultPasswordType(MPElementType.GeneratedMaximum.toString())"], "Fixed commit": "02858f9612425d859c44e8a911a57ee5af36873a", "Url": "https://api.github.com/repos/dkunzler/masterpassword", "Date": "2014-10-30T23:09:17Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (variable == (R.drawable.confeti2)) { android.media.MediaPlayer bang = android.media.MediaPlayer.create(this, R.raw.wilhelm); bang.start(); }else if (variable == (R.drawable.star_pink)) { android.media.MediaPlayer bang = android.media.MediaPlayer.create(this, R.raw.garand); bang.start(); }else if (variable == (R.drawable.confeti3)) { android.media.MediaPlayer bang = android.media.MediaPlayer.create(this, R.raw.shotgun); bang.start(); }else if (variable == (R.drawable.star_white)) { android.media.MediaPlayer bang = android.media.MediaPlayer.create(this, R.raw.bomb); bang.start(); }else { android.media.MediaPlayer bang = android.media.MediaPlayer.create(this, R.raw.tank); bang.start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/120/buggy-version/app.src.main.java.kamikaze.team.flakcannon.DisplayShowActivity.java", "BodyUseAPI": [], "Fixed commit": "20e1a673cd28ac6fe0871c8f60736e8aeb18804e", "Url": "https://api.github.com/repos/BBensch/Flak-Cannon", "Date": "2014-12-08T17:28:43Z"},
{"Line": "=>335", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["danielebaschieri.eu.cantiscout.SongToPdf.convertToPdf2(danielebaschieri.eu.cantiscout.Song,android.view.View,getApplicationContext())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((fileName.indexOf(\"/Documents/\")) != (-1)) { fileName = fileName.substring(fileName.indexOf(\"/Documents/\")); }else { if ((fileName.indexOf(\"/Music/\")) != (-1)) { fileName = fileName.substring(fileName.indexOf(\"/Music/\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/318/buggy-version/app.src.main.java.danielebaschieri.eu.cantiscout.CantiScout.java", "BodyUseAPI": ["java.lang.String.indexOf(java.lang.String)", "java.lang.String.indexOf(java.lang.String)", "java.lang.String.substring(int)", "java.lang.String.substring(int)", "java.lang.String.indexOf(java.lang.String)"], "Fixed commit": "34d4f9b96ca83e93e427cf38546f392cd8fe5f0b", "Url": "https://api.github.com/repos/DangerBlack/CantiScout", "Date": "2014-09-06T16:41:49Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.joshuad.hypnos.fxui.FormattedAlbumCell.getTableRow()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (row != null) item = row.getItem();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/6504/buggy-version/src.net.joshuad.hypnos.fxui.FormattedAlbumCell.java", "BodyUseAPI": ["javafx.scene.control.TableRow<net.joshuad.hypnos.AlbumInfoSource>.getItem()"], "Fixed commit": "8a39d68dbec88e835dac3bf032952b01a4b786e1", "Url": "https://api.github.com/repos/JoshuaD84/HypnosMusicPlayer", "Date": "2017-12-12T04:15:25Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<eu.h2020.symbiote.cloud.model.data.observation.ObservationValue>.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (l > 3) l = 3;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/35/buggy-version/src.main.java.eu.h2020.symbiote.cloud.model.data.observation.Observation.java", "BodyUseAPI": [], "Fixed commit": "e973e47bd736faeecf1c479b64f943ca444f41aa", "Url": "https://api.github.com/repos/symbiote-h2020/SymbIoTeLibraries", "Date": "2017-09-26T11:35:35Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getHeader(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (requestHeader != null) { java.lang.String[] acceptTypes = requestHeader.split(\",\"); for (java.lang.String type : acceptTypes) { if (type.contains(\"html\")) { double thisScore = com.sdl.webapp.common.api.formats.DefaultDataFormatter.getScoreFromAcceptString(type); if (thisScore > score) { score = thisScore; } if (score == 1) { break; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/8499/buggy-version/dxa-framework.dxa-common-api.src.main.java.com.sdl.webapp.common.api.formats.DefaultDataFormatter.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "447056b4bc81df1291bb64d51d3c98078de23b0a", "Url": "https://api.github.com/repos/ronnierap/dxa-web-application-java", "Date": "2016-01-19T08:00:25Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["query.setLockMode(LockModeType.PESSIMISTIC_WRITE).getResultList()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((localStorageHostRefVOS.size()) > 0) { ref = localStorageHostRefVOS.get(0); }else { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/4185/buggy-version/plugin.localstorage.src.main.java.org.zstack.storage.primary.local.LocalStorageCapacityRecalculator.java", "BodyUseAPI": ["java.util.List<org.zstack.storage.primary.local.LocalStorageHostRefVO>.get(int)"], "Fixed commit": "6b0b6a61fd5554401d8f77a2b9f80f7a5a823863", "Url": "https://api.github.com/repos/liningone/zstack", "Date": "2017-03-15T04:13:06Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((channel) == null) { setChannel(org.neo4j.driver.internal.net.ChannelFactory.create(address, securityPlan, timeoutMillis, logger)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/5171/buggy-version/driver.src.main.java.org.neo4j.driver.internal.net.SocketClient.java", "BodyUseAPI": [], "Fixed commit": "4b99a13e06e06200ba584e012adf37d9c094b5ad", "Url": "https://api.github.com/repos/zhenlineo/java-driver", "Date": "2017-01-18T09:57:03Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.codemacro.jcm.util.JsonUtil.fromString(java.lang.String,java.lang.Class)", "com.codemacro.jcm.model.ClusterManager.find(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((existed == null) || ((cluster.getVersion()) > (existed.getVersion()))) { clusterManager.update(cluster); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/3988/buggy-version/jcm.server.src.main.java.com.codemacro.jcm.storage.ClusterStorage.java", "BodyUseAPI": ["com.codemacro.jcm.model.ClusterManager.update(com.codemacro.jcm.model.Cluster)"], "Fixed commit": "90e33fbbd922b5257f67ad8238723430722d98f9", "Url": "https://api.github.com/repos/kevinlynx/jcm", "Date": "2015-07-04T08:11:02Z"},
{"Line": "=>331", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((java.lang.Math.abs(dx)) < (java.lang.Math.abs(dy))) && (dy != 0)) { if (dy > 0) { x = x1 << (16 + 32768); y = y1; dx = (dx << 16) / dy; end = (y2 < (bounds.height)) ? y2 : bounds.height; }else { x = x2 << (16 + 32768); y = y2; dx = (dx << 16) / dy; end = (y1 < (bounds.height)) ? y1 : bounds.height; } if (y < 0) { x -= dx * y; y = 0; } edge = (bounds.width) << 16; while (y < end) { if ((x >= 0) && (x < edge)) { index = (y * (bounds.width)) + (x >> 16); pixel[index] = col; } x += dx; y++; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/1120/buggy-version/ArtOfIllusion.src.artofillusion.view.SoftwareCanvasDrawer.java", "BodyUseAPI": [], "Fixed commit": "4efd387e943ba5a1982a9c31206b5874bfa15274", "Url": "https://api.github.com/repos/peteihis/ArtOfIllusion", "Date": "2017-06-23T22:25:21Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((lcis.lines.size()) >= lineno) { result.offsets.add(lcis.lines.get((lineno - 1))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/5146/buggy-version/src.ls.SearchThread.java", "BodyUseAPI": ["result.offsets.add(lcis.lines.get((lineno - 1)))", "lcis.lines.get(int)"], "Fixed commit": "c7bc7d951a22db21c578f1a30182fca6d8f46211", "Url": "https://api.github.com/repos/alexyz/logsearch", "Date": "2016-02-22T11:26:33Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (\"\".equals(contextPath)) { tmpURI = \"../..\" + tmpURI; }else { tmpURI = (org.wso2.carbon.ui.CarbonUILoginUtil.uRIContextBuilder(contextPath)) + tmpURI; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/4812/buggy-version/core.org.wso2.carbon.ui.src.main.java.org.wso2.carbon.ui.CarbonUILoginUtil.java", "BodyUseAPI": ["org.wso2.carbon.ui.CarbonUILoginUtil.uRIContextBuilder(java.lang.String)"], "Fixed commit": "7579437d9dba6e774cf1dbdc07705511e842c325", "Url": "https://api.github.com/repos/IsuraD/carbon4-kernel", "Date": "2014-08-17T16:30:23Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (read > 0) { out.append(new java.lang.String(buffer, 0, read)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/2917/buggy-version/app.src.main.java.com.ghostflying.locationreportenabler.PropUtil.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "51e4e5ef901a1352e982c73572f25ddd77d1bf8b", "Url": "https://api.github.com/repos/GhostFlying/LocationReportEnabler", "Date": "2017-03-09T02:24:33Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.view.MotionEvent.ACTION_UP) == (event.getAction())) { final com.mifos.mifosxdroid.uihelpers.MFDatePicker mfDatePicker = new com.mifos.mifosxdroid.uihelpers.MFDatePicker(); mfDatePicker.setOnDatePickListener(new com.mifos.mifosxdroid.uihelpers.MFDatePicker.OnDatePickListener() { @java.lang.Override public void onDatePicked(java.lang.String date) { setValue(date); mfDatePicker.dismiss(); } }); mfDatePicker.show(fragmentManager, MFDatePicker.TAG); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/7830/buggy-version/mifosng-android.src.main.java.com.mifos.mifosxdroid.formwidgets.FormEditText.java", "BodyUseAPI": [], "Fixed commit": "61540b786956d69c5ebe56a17956fbc325068df9", "Url": "https://api.github.com/repos/openMF/android-client", "Date": "2014-08-06T04:16:05Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(builder.toString().isEmpty())) channel.sendMessage(builder.toString()).queue();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/391/buggy-version/src.main.java.com.godson.kekbot.Games.Game.java", "BodyUseAPI": ["channel.sendMessage(builder.toString()).queue()", "net.dv8tion.jda.core.entities.TextChannel.sendMessage(java.lang.String)", "java.lang.StringBuilder.toString()"], "Fixed commit": "a1c16c5a6a67a1a5bf10f73b2c6efda33b02e07d", "Url": "https://api.github.com/repos/Godson777/KekBot", "Date": "2017-11-29T12:18:43Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.shopbilling.services.AppLicenseServices.getAppSecurityData()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (lastRun != null) { java.util.Date prevDate = com.shopbilling.services.AppLicenseServices.sdf.parse(lastRun); if ((currentTime.compareTo(prevDate)) < 0) { isSystemDateChanged = true; } }else { com.shopbilling.services.AppLicenseServices.logger.error(\"## Configuration Missing ## :: Database Entry Missing for APP_SECURITY_DATA\"); isSystemDateChanged = true; return isSystemDateChanged; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/3621/buggy-version/src.com.shopbilling.services.AppLicenseServices.java", "BodyUseAPI": ["java.text.SimpleDateFormat.parse(java.lang.String)"], "Fixed commit": "906a602a73b052a9e9459d0a5a01f7fdc8f6ef12", "Url": "https://api.github.com/repos/kumbharvish/JavaFx_My_Store", "Date": "2017-12-21T17:16:32Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((user.getAvatar()) != null) { m_image = new org.eclipse.swt.widgets.Label(this, org.eclipse.swt.SWT.NONE); org.eclipse.swt.graphics.Image image = new org.eclipse.swt.graphics.Image(getDisplay(), (((\"files/\" + (user.getUsername())) + \"/\") + (user.getAvatar()))); m_image.setImage(image); m_image.addListener(SWT.MouseDown, new org.eclipse.swt.widgets.Listener() { @java.lang.Override public void handleEvent(org.eclipse.swt.widgets.Event event) { m_messages.setChannel(m_channel); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/632/buggy-version/src.oz.modules.messages.ChannelWidget.java", "BodyUseAPI": [], "Fixed commit": "c04b731223ec09fd664ba91a3fdd6989707a6dad", "Url": "https://api.github.com/repos/eolhing/Oz", "Date": "2012-11-24T20:34:05Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((fichePoste.getNiveauManagement()) != null) { this.idNiveauManagement = fichePoste.getNiveauManagement().getIdNiveauManagement(); this.niveauManagement = fichePoste.getNiveauManagement().getLibNiveauManagement(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/1852/buggy-version/src.main.java.nc.noumea.mairie.web.dto.FichePosteDto.java", "BodyUseAPI": [], "Fixed commit": "0657025087dd47e13e2d617383db3cf4ffb3b5d5", "Url": "https://api.github.com/repos/DSI-Ville-Noumea/sirh-ws", "Date": "2017-08-18T04:29:34Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.apache.commons.lang3.math.NumberUtils.toInt(this.select, 0)) > _size) { this.select = _size + \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/288/buggy-version/core-lib.src.org.qifu.base.model.PageOf.java", "BodyUseAPI": [], "Fixed commit": "2565932ce60b4f52e81c7ca5096726c5c809ec99", "Url": "https://api.github.com/repos/billchen198318/qifu", "Date": "2017-06-03T14:51:53Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (canvas != null) { canvas.drawColor(Color.BLACK); note.update(canvas); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/6676/buggy-version/app.src.main.java.com.example.xavier.viaproject.GameView.java", "BodyUseAPI": ["com.example.xavier.viaproject.Note.update(android.graphics.Canvas)", "android.graphics.Canvas.drawColor(Color.BLACK)"], "Fixed commit": "65e09ae2ad4ad610e639ca92d7db9702a5820517", "Url": "https://api.github.com/repos/xavdussieux/viaProjectSof", "Date": "2016-08-03T15:57:17Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.awesomeapp.messenger.util.SystemServices.getFileInfoFromURI(org.awesomeapp.messenger.ui.ConversationDetailActivity,android.net.Uri)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((info.type) == null) info.type = defaultType;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/246/buggy-version/awesomeAppCore.src.main.java.org.awesomeapp.messenger.ui.ConversationDetailActivity.java", "BodyUseAPI": [], "Fixed commit": "9bc0a7cfb122d13b54c2de18b4fdf8b19cc8e72b", "Url": "https://api.github.com/repos/n8fr8/ChatSecureAndroid", "Date": "2015-08-21T16:57:46Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.neelakshbhatia.roome.NotificationBuilderActivity.createCard(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((!(a.getTitle().equals(\"\"))) && (!(a.getMessage().equals(\"\")))) { android.util.Log.d(\"bad\", (\"ha:\" + (a.getTitle()))); mRef.child(m_TextTitle).setValue(a); adapter.notifyDataSetChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/4932/buggy-version/app.src.main.java.com.neelakshbhatia.roome.NotificationBuilderActivity.java", "BodyUseAPI": ["android.util.Log.d(java.lang.String,(\"ha:\" + (a.getTitle())))", "com.neelakshbhatia.roome.Card.getTitle()", "mRef.child(m_TextTitle).setValue(com.neelakshbhatia.roome.Card)"], "Fixed commit": "843870eab90024e89575a261e7470e906cf946c5", "Url": "https://api.github.com/repos/vrMars/Roome-Android", "Date": "2017-06-27T22:53:12Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (database == null) { database = parts[1]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/3737/buggy-version/src.main.java.com.jajja.jorm.Database.java", "BodyUseAPI": [], "Fixed commit": "509ab3d4c7bb573deff9e36e94724a8212a9d435", "Url": "https://api.github.com/repos/jajja/jorm", "Date": "2013-11-14T09:00:11Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.app.getUser().getGame()) != null) { score = this.app.getUser().getGame().getScore(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/3608/buggy-version/app.src.main.java.ferdi.david.tim.pme16_crafting_game.GameActivity.java", "BodyUseAPI": ["ferdi.david.tim.pme16_crafting_game.ApplicationController.getUser()", "this.app.getUser().getGame()", "this.app.getUser().getGame().getScore()"], "Fixed commit": "38fb8d8a671a2da836b472779ad1c7117efa59f0", "Url": "https://api.github.com/repos/ti7215fi/PME16_crafting_game", "Date": "2016-08-07T13:27:11Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((attemptedCharacters.indexOf(character)) == (-1)) { highest = character; highest_count = counter.get(character); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/4667/buggy-version/src.main.java.com.hangman.players.YourPlayer.java", "BodyUseAPI": ["java.util.Map<java.lang.Character, java.lang.Integer>.get(java.lang.Character)"], "Fixed commit": "c3b819937c70c8ac4175a7d155acf6afa6a09d0c", "Url": "https://api.github.com/repos/silver-lu/HangmanJava", "Date": "2014-11-12T23:49:35Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.InetAddress.hashCode()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (clientIpHash < 0) clientIpHash = -clientIpHash;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/4792/buggy-version/store.src.java.com.zimbra.cs.imap.ImapLoadBalancingMechanism.java", "BodyUseAPI": [], "Fixed commit": "07eb1d4154bc2bd5409ec9d25542b84051be588e", "Url": "https://api.github.com/repos/ilyusha/zm-mailbox", "Date": "2017-06-14T18:55:56Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pos == 0) && (neg == 0)) { status = info.iconmaster.who2comm.user.User.Status.UNKNOWN; }else if (pos >= neg) { status = info.iconmaster.who2comm.user.User.Status.OPEN; }else { status = info.iconmaster.who2comm.user.User.Status.CLOSED; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/4567/buggy-version/src.main.java.info.iconmaster.who2comm.user.User.java", "BodyUseAPI": [], "Fixed commit": "e6804be97e69406c33432c9299d9dd7084fa4a03", "Url": "https://api.github.com/repos/ThatGreyDragon/who2comm", "Date": "2016-07-05T03:18:08Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (android.text.TextUtils.isEmpty(txtQuantity.getText().toString())) { quantity = 0; }else { quantity = java.lang.Integer.valueOf(txtQuantity.getText().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/7790/buggy-version/InventoryApp.app.src.main.java.datnguyen.com.inventoryapp.NewProductActivity.java", "BodyUseAPI": ["txtQuantity.getText().toString()", "android.widget.EditText.getText()", "java.lang.Integer.valueOf(txtQuantity.getText().toString())"], "Fixed commit": "7f9b065ac6d9ede48d1fdd9955fc4c152dd4a92a", "Url": "https://api.github.com/repos/dathealint/InventoryApp", "Date": "2016-12-28T09:38:09Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (android.text.TextUtils.isEmpty(txtPrice.getText().toString())) { price = 0; }else { price = java.lang.Integer.valueOf(txtPrice.getText().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/7790/buggy-version/InventoryApp.app.src.main.java.datnguyen.com.inventoryapp.NewProductActivity.java", "BodyUseAPI": ["java.lang.Integer.valueOf(txtPrice.getText().toString())", "android.widget.EditText.getText()", "txtPrice.getText().toString()"], "Fixed commit": "7f9b065ac6d9ede48d1fdd9955fc4c152dd4a92a", "Url": "https://api.github.com/repos/dathealint/InventoryApp", "Date": "2016-12-28T09:38:09Z"},
{"Line": "=>444", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.util.Collection.class.isAssignableFrom(aTargetType)) { tempCollectionType = java.util.ArrayList.class; }else { tempTargetType = aTargetType; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/4933/buggy-version/de.gebit.integrity.dsl.src.de.gebit.integrity.parameter.conversion.AbstractModularValueConverter.java", "BodyUseAPI": [], "Fixed commit": "a819cc69a4ccaa9b2f2734f4b46b3c24d319908e", "Url": "https://api.github.com/repos/integrity-tf/integrity", "Date": "2013-05-09T17:37:55Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.lolin1.data.DataUpdater.isUpdating())) { switch (imageType) { case org.lolin1.control.Controller.IMAGE_TYPE_BUST : return this.BUST_HASHES.get(name); case org.lolin1.control.Controller.IMAGE_TYPE_PASSIVE : return this.PASSIVE_HASHES.get(name); case org.lolin1.control.Controller.IMAGE_TYPE_SPELL : return this.SPELL_HASHES.get(name); default : return org.lolin1.data.DataAccessObject.getResponseError(); } }else { return org.lolin1.data.DataAccessObject.getResponseError(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/6837/buggy-version/src.main.java.org.lolin1.control.Controller.java", "BodyUseAPI": [], "Fixed commit": "2eb265a1ffe2616f88a8fa85fb15d37bce0ed12f", "Url": "https://api.github.com/repos/Stoyicker/lolin1-data-provider", "Date": "2014-02-27T14:45:34Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.lolin1.data.DataUpdater.isUpdating())) { return org.lolin1.utils.Utils.getFile(realm, imageType, name); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/6837/buggy-version/src.main.java.org.lolin1.control.Controller.java", "BodyUseAPI": [], "Fixed commit": "2eb265a1ffe2616f88a8fa85fb15d37bce0ed12f", "Url": "https://api.github.com/repos/Stoyicker/lolin1-data-provider", "Date": "2014-02-27T14:45:34Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (java.lang.Double.isInfinite(avgSpeed)) { rideData.setAvgSpeed(0); update.updateAverage(rideData.getAvgSpeed()); }else { rideData.setAvgSpeed(avgSpeed); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/1409/buggy-version/SpeedoMeter.app.src.main.java.com.example.suneet.speedometer.LocationDataService.java", "BodyUseAPI": ["com.example.suneet.speedometer.RideData.setAvgSpeed(double)"], "Fixed commit": "7837cf6bce0ac580e0f4cf48b0d79091bd631bf0", "Url": "https://api.github.com/repos/codedsun/SpeedoMeter", "Date": "2017-07-27T00:59:41Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((manager.getExecutionContent().getHybridSimTime().getJumps()) < (manager.getSettings().getExecutionParameters().maximumJumps)) { manager.getSystemControl().applyDynamics(true); manager.getDataManager().performDataActions(t, y, JumpStatus.JUMP_OCCURRED); }else { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/3543/buggy-version/src.main.java.edu.ucsc.cross.hse.core.monitor.EventMonitor.java", "BodyUseAPI": ["manager.getDataManager().performDataActions(double,double[],JumpStatus.JUMP_OCCURRED)", "edu.ucsc.cross.hse.core.operator.ExecutionOperator.getDataManager()", "manager.getSystemControl().applyDynamics(boolean)", "edu.ucsc.cross.hse.core.operator.ExecutionOperator.getSystemControl()"], "Fixed commit": "5e0848bbd9d5c135ce7bdbf18d06bf80e6ca3616", "Url": "https://api.github.com/repos/be3short/HybridSystemsEnvironment", "Date": "2017-11-13T20:01:06Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((headers == null) || (headers.isEmpty())) { return csvLines; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/6161/buggy-version/src.main.java.org.elasticsearch.plugin.nlpcn.executors.CSVResultsExtractor.java", "BodyUseAPI": [], "Fixed commit": "4d529bc4a4e9c01468067458cb55c2704bae6001", "Url": "https://api.github.com/repos/NLPchina/elasticsearch-sql", "Date": "2016-08-26T03:37:06Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(param.isVRMode())) { camera.rotateByEulerAngle(((float) (param.getCameraRoll())), ((float) (param.getCameraYaw())), ((float) (param.getCameraPitch()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/564/buggy-version/dConnectDevicePlugin.dConnectDeviceTheta.app.src.main.java.org.deviceconnect.android.deviceplugin.theta.core.SphericalViewApi.java", "BodyUseAPI": ["SphericalViewRenderer.CameraBuilder.rotateByEulerAngle(((float) (param.getCameraRoll())),((float) (param.getCameraYaw())),((float) (param.getCameraPitch())))", "org.deviceconnect.android.deviceplugin.theta.core.SphericalViewParam.getCameraRoll()", "org.deviceconnect.android.deviceplugin.theta.core.SphericalViewParam.getCameraYaw()", "org.deviceconnect.android.deviceplugin.theta.core.SphericalViewParam.getCameraPitch()"], "Fixed commit": "01d2d970687ae65f4830a2d8c5c57d71ad0626b2", "Url": "https://api.github.com/repos/TakayukiHoshi1984/DeviceConnect-Android", "Date": "2015-12-09T10:00:16Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((printItem) instanceof com.hp.mss.hpprint.model.ImagePrintItem) { builder.setPageCount(totalPages); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/3161/buggy-version/mobileprintsdk.src.main.java.com.hp.mss.hpprint.adapter.HPPrintDocumentAdapter.java", "BodyUseAPI": [], "Fixed commit": "6737bc23a07c5a41aae5fe91c2d5017685989e49", "Url": "https://api.github.com/repos/mobileprint/android-print-sdk", "Date": "2017-06-12T18:35:29Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (field instanceof com.v5analytics.simpleorm.ModelMetadata.BooleanField) { stmt.setBoolean((i++), ((com.v5analytics.simpleorm.ModelMetadata.BooleanField) (field)).getRaw(obj)); }else if (field instanceof com.v5analytics.simpleorm.ModelMetadata.LongField) { stmt.setLong((i++), ((com.v5analytics.simpleorm.ModelMetadata.LongField) (field)).getRaw(obj)); }else if (field instanceof com.v5analytics.simpleorm.ModelMetadata.DateField) { java.util.Date raw = ((com.v5analytics.simpleorm.ModelMetadata.DateField) (field)).getRaw(obj); stmt.setDate((i++), (raw == null ? null : new java.sql.Date(raw.getTime()))); }else if ((field instanceof com.v5analytics.simpleorm.ModelMetadata.ObjectField) || (field instanceof com.v5analytics.simpleorm.ModelMetadata.ByteArrayField)) { byte[] raw = field.get(obj); java.io.InputStream blobData = new java.io.ByteArrayInputStream(raw); stmt.setBinaryStream((i++), blobData, raw.length); }else { throw new com.v5analytics.simpleorm.SimpleOrmException((\"Could not store field: \" + (field.getClass().getName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/6764/buggy-version/sql.src.main.java.com.v5analytics.simpleorm.SqlSimpleOrmSession.java", "BodyUseAPI": ["ModelMetadata.Field.getClass()", "ModelMetadata.Field.get(T)", "field.getClass().getName()"], "Fixed commit": "18c64d91102a4a52d97772ed8f261dca7b89d03b", "Url": "https://api.github.com/repos/visallo/simple-orm", "Date": "2015-09-23T17:54:40Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((parts.length) == 3) { if (!(parts[1].startsWith(\"walkmod-\"))) { parts[1] = \"walkmod-\" + (parts[1]); } if (!(parts[1].endsWith(\"-plugin\"))) { parts[1] = (parts[1]) + \"-plugin\"; } plugins.add((((parts[0]) + \":\") + (parts[1]))); }else if ((parts.length) <= 2) { java.lang.String aux = parts[0].trim(); if ((aux.length()) > 0) { plugins.add(((\"org.walkmod:walkmod-\" + aux) + \"-plugin\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/1337/buggy-version/src.main.java.org.walkmod.conf.providers.AbstractChainConfigurationProvider.java", "BodyUseAPI": ["java.lang.String.startsWith(java.lang.String)", "java.lang.String.endsWith(java.lang.String)", "java.util.HashSet<java.lang.String>.add(java.lang.String)", "java.lang.String.trim()"], "Fixed commit": "25ca94d67d4cc1e2f85dd91f99ce24db35e76334", "Url": "https://api.github.com/repos/walkmod/walkmod-core", "Date": "2016-02-21T18:42:44Z"},
{"Line": "=>531", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.lgallardo.youtorrentcontroller.MainActivity.getFragmentManager()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((fragmentManager.findFragmentByTag(\"firstFragment\")) == null) { fragmentTransaction.add(R.id.one_frame, secondFragment, \"firstFragment\"); }else { fragmentTransaction.replace(R.id.one_frame, secondFragment, \"firstFragment\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/6067/buggy-version/app.src.main.java.com.lgallardo.youtorrentcontroller.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "0e7d50cef05e17a60a3e4465b5494ba9eef5683d", "Url": "https://api.github.com/repos/lgallard/youTorrent-Controller", "Date": "2015-09-30T03:01:59Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!favorited) { holder.favButton.setImageResource(R.drawable.ic_unfavorited_star); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/809/buggy-version/app.src.main.java.club.sigapp.purduecorecmonitor.Adapters.CoRecAdapter.java", "BodyUseAPI": [], "Fixed commit": "e9896beda80fd87f8ac4b9c85b0e9b665627c9aa", "Url": "https://api.github.com/repos/Purdue-ACM-SIGApp/Purdue-CoRec-Monitor", "Date": "2017-11-17T00:21:18Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (time2.equals(\"TBA\")) { start2 = -1; end2 = -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/7197/buggy-version/app.src.main.java.uhmanoa.droid_sch.Parser.java", "BodyUseAPI": [], "Fixed commit": "171a7b9c703a5c093861fb612cf0841258e6fec7", "Url": "https://api.github.com/repos/1andyn/droid_sch", "Date": "2015-04-01T06:52:28Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (time.equals(\"TBA\")) { start1 = -1; end1 = -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/7197/buggy-version/app.src.main.java.uhmanoa.droid_sch.Parser.java", "BodyUseAPI": [], "Fixed commit": "171a7b9c703a5c093861fb612cf0841258e6fec7", "Url": "https://api.github.com/repos/1andyn/droid_sch", "Date": "2015-04-01T06:52:28Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((crs.getStart1()) == (-1)) { tvStart2.setText(ModifySpacingString(java.lang.String.valueOf(crs.getStartString(true)), ViewStringCat.time)); tvEnd2.setText(ModifySpacingString(java.lang.String.valueOf(crs.getEndString(true)), ViewStringCat.time)); }else { tvStart2.setText(ModifySpacingString(\"TBA\", ViewStringCat.time)); tvEnd2.setText(ModifySpacingString(\"TBA\", ViewStringCat.time)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/7197/buggy-version/app.src.main.java.uhmanoa.droid_sch.CourseView.java", "BodyUseAPI": ["uhmanoa.droid_sch.CourseView.ModifySpacingString(java.lang.String,ViewStringCat.time)", "uhmanoa.droid_sch.Course.getStartString(boolean)", "android.widget.TextView.setText(java.lang.String)", "uhmanoa.droid_sch.Course.getEndString(boolean)", "android.widget.TextView.setText(java.lang.String)", "java.lang.String.valueOf(crs.getStartString(true))", "uhmanoa.droid_sch.CourseView.ModifySpacingString(java.lang.String,ViewStringCat.time)", "java.lang.String.valueOf(crs.getEndString(true))"], "Fixed commit": "171a7b9c703a5c093861fb612cf0841258e6fec7", "Url": "https://api.github.com/repos/1andyn/droid_sch", "Date": "2015-04-01T06:52:28Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.agentgui.bundle.classSelection.JListClassSearcher.getProjectPackages()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (projectPackages != null) { for (java.lang.String projectPackage : this.getProjectPackages()) { if (className.startsWith(projectPackage)) { this.getListModel().addElement(ce2d); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/1098/buggy-version/eclipseProjects.AgentGui.src.org.agentgui.bundle.classSelection.JListClassSearcher.java", "BodyUseAPI": [], "Fixed commit": "c44a3d310be1b554e9b6518dac0dba5cdc822003", "Url": "https://api.github.com/repos/EnFlexIT/AgentWorkbench", "Date": "2017-07-06T07:44:43Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newText.equals(\"\")) { presentedText = getString(R.string.empty_loading_text); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/9201/buggy-version/src.com.alfa.HebrewSongDownloaderApp.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "09f79791c5232b70d1b903bb5a4a5cab75f7a02f", "Url": "https://api.github.com/repos/tamirg/HebrewSongDownloaderApp", "Date": "2014-02-22T20:26:01Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.chin.ygodb.CardStore.initializedOffline)) { addOfflineCardsToCardList(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/6219/buggy-version/ygodb-module.src.main.java.com.chin.ygodb.CardStore.java", "BodyUseAPI": [], "Fixed commit": "625ebf697dd558b372e83d6952d548356fae0d23", "Url": "https://api.github.com/repos/chinhodado/ygodb", "Date": "2016-06-05T03:26:52Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (gob == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/463/buggy-version/src.haven.Following.java", "BodyUseAPI": [], "Fixed commit": "56e504259cf764fb5d34bfa086cc30e99fe99214", "Url": "https://api.github.com/repos/EnderWiggin/Custom-Salem", "Date": "2012-09-25T07:16:18Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.ref.WeakReference<com.stardust.scriptdroid.ui.floating.CircularMenu>.get()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (menu != null) menu.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/8039/buggy-version/app.src.main.java.com.stardust.scriptdroid.ui.floating.FloatyWindowManger.java", "BodyUseAPI": ["com.stardust.scriptdroid.ui.floating.CircularMenu.close()"], "Fixed commit": "2f01f2ab10b9e961d2c611f9b3e0731cb16b762b", "Url": "https://api.github.com/repos/hyb1996/Auto.js", "Date": "2017-12-30T09:35:43Z"},
{"Line": "=>765", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (o2 == null) { throw new java.lang.RuntimeException(\"Error in I/O (innerInitialsToInfo is null). Rebuilding internal info.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/1660/buggy-version/plugins.com.python.pydev.analysis.src.com.python.pydev.analysis.additionalinfo.AbstractAdditionalTokensInfo.java", "BodyUseAPI": [], "Fixed commit": "6eac0ce3be40cf914cdfde18a6d229cc1749c378", "Url": "https://api.github.com/repos/fabioz/Pydev", "Date": "2014-05-17T00:32:57Z"},
{"Line": "=>762", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (o1 == null) { throw new java.lang.RuntimeException(\"Error in I/O (topLevelInitialsToInfo is null). Rebuilding internal info.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/1660/buggy-version/plugins.com.python.pydev.analysis.src.com.python.pydev.analysis.additionalinfo.AbstractAdditionalTokensInfo.java", "BodyUseAPI": [], "Fixed commit": "6eac0ce3be40cf914cdfde18a6d229cc1749c378", "Url": "https://api.github.com/repos/fabioz/Pydev", "Date": "2014-05-17T00:32:57Z"},
{"Line": "=>1577", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.persistence.jpa.jpql.parser.NumericLiteral.getText()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((type[0]) == (java.lang.Long.class)) && ((text.endsWith(\"L\")) || (text.endsWith(\"l\")))) { text = text.substring(0, ((text.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/839/buggy-version/foundation.org.eclipse.persistence.core.src.org.eclipse.persistence.internal.jpa.jpql.ExpressionBuilderVisitor.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "e0af65a93c75e2d73145de7d1ed7db5ca665ba22", "Url": "https://api.github.com/repos/sabineheider/eclipselink.runtime", "Date": "2013-05-03T11:59:30Z"},
{"Line": "=>1113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.persistence.jpa.jpql.parser.NumericLiteral.getText()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((text.endsWith(\"L\")) || (text.endsWith(\"l\"))) { type = java.lang.Long.class; }else { java.lang.Long value = java.lang.Long.parseLong(text); if (value <= (java.lang.Integer.MAX_VALUE)) { type = java.lang.Integer.class; }else { type = java.lang.Long.class; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/839/buggy-version/foundation.org.eclipse.persistence.core.src.org.eclipse.persistence.internal.jpa.jpql.TypeResolver.java", "BodyUseAPI": ["java.lang.Long.parseLong(java.lang.String)"], "Fixed commit": "e0af65a93c75e2d73145de7d1ed7db5ca665ba22", "Url": "https://api.github.com/repos/sabineheider/eclipselink.runtime", "Date": "2013-05-03T11:59:30Z"},
{"Line": "=>546", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (player != null) { nz.co.lolnet.james137137.FactionChat.ChatMode.setChatMode(player, args[0]); }else { sender.sendMessage(\"You are not a player, you can still run /fc update and /fc reload\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/5280/buggy-version/src.main.java.nz.co.lolnet.james137137.FactionChat.FactionChat.java", "BodyUseAPI": ["nz.co.lolnet.james137137.FactionChat.ChatMode.setChatMode(org.bukkit.entity.Player,java.lang.String)"], "Fixed commit": "f98d341d0cf329dbea55b768471dd2779f0a6067", "Url": "https://api.github.com/repos/James137137/FactionChat", "Date": "2014-08-03T02:58:03Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((live.getSize()) > 0) && ((history.getSize()) > 0)) { if ((live.getSample(0).getTime().compareTo(history.getSample(((history.getSize()) - 1)).getTime())) < 0) { live.clear(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/4338/buggy-version/applications.plugins.org.csstudio.trends.databrowser2.src.org.csstudio.trends.databrowser2.model.PVSamples.java", "BodyUseAPI": ["live.getSample(0).getTime().compareTo(history.getSample(((history.getSize()) - 1)).getTime())", "live.getSample(0).getTime()", "history.getSample(((history.getSize()) - 1)).getTime()", "org.csstudio.trends.databrowser2.model.LiveSamples.getSample(int)", "org.csstudio.trends.databrowser2.model.HistoricSamples.getSize()", "org.csstudio.trends.databrowser2.model.LiveSamples.clear()", "org.csstudio.trends.databrowser2.model.HistoricSamples.getSample(((history.getSize()) - 1))"], "Fixed commit": "357c0755a5181671ac953db1f8ad30653fc5a95f", "Url": "https://api.github.com/repos/jbobnar/cs-studio", "Date": "2014-02-25T13:32:45Z"},
{"Line": "=>1052", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (filtered) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/6875/buggy-version/liquibase-core.src.main.java.liquibase.Liquibase.java", "BodyUseAPI": [], "Fixed commit": "0fe49948ea2d2384dd9791c6e3c8a9651ebcd1ee", "Url": "https://api.github.com/repos/ptilin/liquibase", "Date": "2015-04-21T15:07:00Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((input.length) == 1) { lineColumns[0] = new org.jgll.util.Input.LineColumn(lineNumber, columnNumber); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/5739/buggy-version/src.org.jgll.util.Input.java", "BodyUseAPI": [], "Fixed commit": "30d5ddce6a249e2bc4104eaf93d8a7908d4392c0", "Url": "https://api.github.com/repos/cwi-swat/jigll", "Date": "2013-04-12T22:00:24Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (externalCacheAvailable && ((com.felipecsl.android.Utils.getExternalCacheDir(context)) != null)) { cachePath = com.felipecsl.android.Utils.getExternalCacheDir(context).getPath(); }else { cachePath = context.getCacheDir().getPath(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/6402/buggy-version/library.src.com.felipecsl.android.Utils.java", "BodyUseAPI": ["java.io.File.getPath()", "android.content.Context.getCacheDir()", "com.felipecsl.android.Utils.getExternalCacheDir(android.content.Context)", "context.getCacheDir().getPath()"], "Fixed commit": "c6a62a77263f774620264b6f6d2b8f9a7f06b259", "Url": "https://api.github.com/repos/felipecsl/Android-ImageManager", "Date": "2013-06-12T05:02:22Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((flag) == 1) { android.widget.Toast toast = android.widget.Toast.makeText(this, \"Incorrect username/password\", Toast.LENGTH_LONG); toast.show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/788/buggy-version/app.src.main.java.com.hprotcennoc.frostic3.connectorph.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "410760c9797087e02b7bb7d334ae8dd92d0b1f2e", "Url": "https://api.github.com/repos/frostic3/ConnectOrph", "Date": "2015-03-07T16:58:33Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (worldObj.isRemote) { if ((worldObj.getChunkFromBlockCoords(xCoord, zCoord)) instanceof net.minecraft.world.chunk.EmptyChunk) { return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/3076/buggy-version/src.main.java.moze_intel.projecte.gameObjs.tiles.DMPedestalTile.java", "BodyUseAPI": [], "Fixed commit": "ff2f9b423e9e6fb7101d81c57ea55c584d63c404", "Url": "https://api.github.com/repos/williewillus/ProjectE", "Date": "2015-07-22T02:24:52Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (user == null) { com.nostra13.universalimageloader.core.ImageLoader.getInstance().displayImage(\"\", profile_img, apollo.edus.collageweibo.utils.FillContent.mAvatorOptions); }else { com.nostra13.universalimageloader.core.ImageLoader.getInstance().displayImage(user.getAvatorUrl(), profile_img, apollo.edus.collageweibo.utils.FillContent.mAvatorOptions); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/4748/buggy-version/app.src.main.java.apollo.edus.collageweibo.utils.FillContent.java", "BodyUseAPI": ["com.nostra13.universalimageloader.core.ImageLoader.getInstance().displayImage(user.getAvatorUrl(),android.widget.ImageView,com.nostra13.universalimageloader.core.DisplayImageOptions)", "apollo.edus.collageweibo.biz.user.EsUserProfile.getAvatorUrl()"], "Fixed commit": "4c48993d4a8130223af80190ee10b4a41f082184", "Url": "https://api.github.com/repos/yqpan1991/CollageWeibo", "Date": "2016-05-24T02:15:21Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(checkIfInterfaceMethodWasImplemented(methodBuilder))) { builder.addMethod(methodBuilder); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/1520/buggy-version/addon-javabean.src.main.java.org.springframework.roo.addon.javabean.JavaBeanMetadata.java", "BodyUseAPI": [], "Fixed commit": "ad701ca3842a8c4a98ad2d85028a67daee4b3661", "Url": "https://api.github.com/repos/spring-projects/spring-roo", "Date": "2015-01-14T16:05:41Z"},
{"Line": "=>445", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (query.isEmpty()) { android.widget.Toast.makeText(this, \"Enter a search keyword first\", Toast.LENGTH_LONG).show(); }else { mMessageService.sendMessage(com.gmail.markdevw.wetube.WeTubeApplication.getSharedDataSource().getCurrentRecipient().getId(), ((\"Started search for \" + (query.toUpperCase())) + \"...\")); com.gmail.markdevw.wetube.WeTubeApplication.getSharedDataSource().searchForVideos(query, new com.gmail.markdevw.wetube.api.DataSource.VideoResponseListener() { @java.lang.Override public void onSuccess() { android.app.Fragment f = getFragmentManager().findFragmentByTag(\"Video\"); com.gmail.markdevw.wetube.fragments.VideoListFragment vlf = ((com.gmail.markdevw.wetube.fragments.VideoListFragment) (f)); vlf.getVideoItemAdapter().notifyDataSetChanged(); vlf.getRecyclerView().scrollToPosition(0); } @java.lang.Override public void onError(java.lang.String search) { } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/3264/buggy-version/app.src.main.java.com.gmail.markdevw.wetube.activities.MainActivity.java", "BodyUseAPI": ["java.lang.String.toUpperCase()", "MessageService.MessageServiceInterface.sendMessage(com.gmail.markdevw.wetube.WeTubeApplication.getSharedDataSource().getCurrentRecipient().getId(),java.lang.String)", "com.gmail.markdevw.wetube.WeTubeApplication.getSharedDataSource().searchForVideos(java.lang.String,com.gmail.markdevw.wetube.api.DataSource.VideoResponseListener)"], "Fixed commit": "11fa7f4062151a70556f1ba50ea048ceda59b518", "Url": "https://api.github.com/repos/MkWf/WeTube", "Date": "2015-12-12T01:15:09Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jssc.SerialPortList.getPortNames()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((portNames.length) == 0) { SerialPortReader.sdmodel.setData(\"ERROR, NO SERIAL PORTS FOUND.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/2551/buggy-version/SerialPortReader.java", "BodyUseAPI": [], "Fixed commit": "dcd18e1da760c13c1560471d06850896ad2cd795", "Url": "https://api.github.com/repos/FMock/SerialPortTxRx", "Date": "2017-01-31T18:21:31Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jssc.SerialPortList.getPortNames()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((portNames.length) != 0) { SerialPortReader.spi.setCommPort(SerialPortReader.listPortNames.get(SerialPortReader.comPortComboBox.getSelectedIndex())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/2551/buggy-version/SerialPortReader.java", "BodyUseAPI": [], "Fixed commit": "dcd18e1da760c13c1560471d06850896ad2cd795", "Url": "https://api.github.com/repos/FMock/SerialPortTxRx", "Date": "2017-01-31T18:21:31Z"},
{"Line": "=>452", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((configuration.getDomain().getLoggingAttributes()) != null) && (!(configuration.getDomain().getLoggingAttributes().isEmpty()))) { return com.lotaris.maven.plugin.glassfish.command.CommandFactory.create(com.lotaris.maven.plugin.glassfish.command.SET_LOG_ATTRIBUTES, configuration).addArgument(buildPropertyWithoutNameArgument(configuration.getDomain().getLoggingAttributes())).setFriendlyErrorMessage(\"Unable to set one or more logging attributes to the domain.\"); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/3699/buggy-version/src.main.java.com.lotaris.maven.plugin.glassfish.command.CommandFactory.java", "BodyUseAPI": ["com.lotaris.maven.plugin.glassfish.model.Configuration.getDomain()", "com.lotaris.maven.plugin.glassfish.command.CommandBuilder.addArgument(buildPropertyWithoutNameArgument(configuration.getDomain().getLoggingAttributes()))", "com.lotaris.maven.plugin.glassfish.command.CommandFactory.create(com.lotaris.maven.plugin.glassfish.command.SET_LOG_ATTRIBUTES,com.lotaris.maven.plugin.glassfish.model.Configuration)", "configuration.getDomain().getLoggingAttributes()", "com.lotaris.maven.plugin.glassfish.command.CommandFactory.buildPropertyWithoutNameArgument(configuration.getDomain().getLoggingAttributes())", "com.lotaris.maven.plugin.glassfish.command.CommandFactory.create(com.lotaris.maven.plugin.glassfish.command.SET_LOG_ATTRIBUTES, configuration).addArgument(buildPropertyWithoutNameArgument(configuration.getDomain().getLoggingAttributes())).setFriendlyErrorMessage(java.lang.String)"], "Fixed commit": "6fae4b16a07dceb14e37c7a588b5a8672e70723a", "Url": "https://api.github.com/repos/lotaris/lotaris-glassfish-maven-plugin", "Date": "2015-04-10T13:38:47Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (macroCommand != null) { commands.add(macroCommand); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/3699/buggy-version/src.main.java.com.lotaris.maven.plugin.glassfish.macro.AbstractMacro.java", "BodyUseAPI": ["java.util.List<com.lotaris.maven.plugin.glassfish.macro.IMacroCommand>.add(com.lotaris.maven.plugin.glassfish.macro.IMacroCommand)"], "Fixed commit": "6fae4b16a07dceb14e37c7a588b5a8672e70723a", "Url": "https://api.github.com/repos/lotaris/lotaris-glassfish-maven-plugin", "Date": "2015-04-10T13:38:47Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mEmptyView) != null) { loadData(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/7302/buggy-version/app.src.main.java.com.windhike.tuto.fragment.AnnotationListFragment.java", "BodyUseAPI": [], "Fixed commit": "36826db600b8a0e4d0b768cf3c679df26e8698de", "Url": "https://api.github.com/repos/zyongjun/Tuto", "Date": "2017-09-20T00:36:03Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fr.inria.wimmics.explanation.evaluation.DCGMeasure.computeIDCG(java.util.List<fr.inria.wimmics.explanation.evaluation.RankEntry>,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (idcg == 0.0) return 0.0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/3947/buggy-version/OntologySummarization.src.fr.inria.wimmics.explanation.evaluation.DCGMeasure.java", "BodyUseAPI": [], "Fixed commit": "4a9ce038f471f78c43ef968c27ed2b2e19bbb24a", "Url": "https://api.github.com/repos/rhasan/OntologySummarization", "Date": "2013-02-24T13:20:18Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.dopelives.dopestreamer.streams.services.StreamServiceManager.getStreamServices()", "com.dopelives.dopestreamer.streams.services.StreamServiceManager.getStreamServiceByKey(Pref.LAST_STREAM_SERVICE.getString())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (streamServices.contains(selectedService)) { streamServiceSelection.getSelectionModel().select(selectedService); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/5690/buggy-version/Dopestreamer.src.com.dopelives.dopestreamer.gui.controllers.Streams.java", "BodyUseAPI": ["streamServiceSelection.getSelectionModel().select(com.dopelives.dopestreamer.streams.services.StreamService)"], "Fixed commit": "2feefc24bc85ba511d98d6fab1096c2137ab964f", "Url": "https://api.github.com/repos/tvkanters/Dopestreamer", "Date": "2014-12-29T18:58:26Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.dopelives.dopestreamer.streams.services.StreamServiceManager.sAutoswitch.getKey().equals(key)) { return com.dopelives.dopestreamer.streams.services.StreamServiceManager.sAutoswitch; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/5690/buggy-version/Dopestreamer.src.com.dopelives.dopestreamer.streams.services.StreamServiceManager.java", "BodyUseAPI": [], "Fixed commit": "2feefc24bc85ba511d98d6fab1096c2137ab964f", "Url": "https://api.github.com/repos/tvkanters/Dopestreamer", "Date": "2014-12-29T18:58:26Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (data != null) { for (int i = 0; i < (data.size()); i++) { android.util.Log.d(\"onPostExecute\", data.get(i).toString()); } android.widget.TextView view = findViewById(R.id.txtResults); view.setText(((\"There were \" + (data.size())) + \" results.\")); }else { android.widget.TextView view = findViewById(R.id.txtResults); view.setText(\"No results found.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/4823/buggy-version/app.src.main.java.com.example.android.booklisting.MainActivity.java", "BodyUseAPI": ["data.get(i).toString()", "android.widget.TextView.setText(((\"There were \" + (data.size())) + \" results.\"))", "android.util.Log.d(java.lang.String,data.get(i).toString())", "java.util.List<com.example.android.booklisting.BookResult>.size()", "java.util.List<com.example.android.booklisting.BookResult>.get(int)", "java.util.List<com.example.android.booklisting.BookResult>.size()"], "Fixed commit": "31eb01d61e859cff34b6aa4021c0975cba5ffea5", "Url": "https://api.github.com/repos/trevinp/BookListing", "Date": "2017-10-31T06:53:43Z"},
{"Line": "=>362", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["util.JsonFormUtils.getFieldValue(org.json.JSONArray,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (Received_Stock_From.equalsIgnoreCase(\"Other\")) { Received_Stock_From = util.JsonFormUtils.getFieldValue(fields, \"adjusted_Stock_TO_Other\"); }else { Received_Stock_From = util.JsonFormUtils.getFieldValue(fields, \"Reason_for_adjustment\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/2384/buggy-version/opensrp-path.src.main.java.org.ei.opensrp.path.tabfragments.Current_Stock.java", "BodyUseAPI": [], "Fixed commit": "967fc65f41ef054cfd9ffbc7a718c0cf92875b82", "Url": "https://api.github.com/repos/OpenSRP/opensrp-client", "Date": "2017-06-23T10:45:36Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hintUsed) { hintButton.addAction(com.badlogic.gdx.scenes.scene2d.actions.Actions.moveBy(hintButtonAnimMovement, 0, 0.5F, Interpolation.pow2)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/2639/buggy-version/core.src.fi.tamk.tiko.kivimiesgaming.RoomView.java", "BodyUseAPI": [], "Fixed commit": "bb4c198483ffacbdc8469c5bb24a6799cbcd1922", "Url": "https://api.github.com/repos/Infinitz/VapriikkiEscape", "Date": "2017-04-05T11:55:05Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((meta < 0) || (meta >= (blockIcon.length))) meta = 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/1452/buggy-version/common.biomesoplenty.blocks.BlockBOPGrass.java", "BodyUseAPI": [], "Fixed commit": "28ac09bf2ec42bdfbb752ebea99738de359b5900", "Url": "https://api.github.com/repos/Glitchfiend/BiomesOPlenty", "Date": "2013-11-07T23:31:53Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (action != null) { this.action = action; updateAppearance(); if (isHovered) mouseEntered(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/6318/buggy-version/src.org.windom.story.ui.impl.ActionButton.java", "BodyUseAPI": [], "Fixed commit": "be10c5fff6cdedfe9793d623239985c2a2c8ec04", "Url": "https://api.github.com/repos/windom/story-rpg", "Date": "2012-04-15T14:04:08Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["controller.SettingsController.selectFolder()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (newPath.isEmpty()) { newPath = oldPath; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/5875/buggy-version/src.controller.SettingsController.java", "BodyUseAPI": [], "Fixed commit": "7180f105acd234ecc967721e395043371e794643", "Url": "https://api.github.com/repos/Valkryst/Schillsaver", "Date": "2017-12-20T16:49:03Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["controller.SettingsController.selectFolder()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (newPath.isEmpty()) { newPath = oldPath; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/5875/buggy-version/src.controller.SettingsController.java", "BodyUseAPI": [], "Fixed commit": "7180f105acd234ecc967721e395043371e794643", "Url": "https://api.github.com/repos/Valkryst/Schillsaver", "Date": "2017-12-20T16:49:03Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["controller.SettingsController.selectFfmpegExecutablePath()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (newPath.isEmpty()) { newPath = oldPath; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/5875/buggy-version/src.controller.SettingsController.java", "BodyUseAPI": [], "Fixed commit": "7180f105acd234ecc967721e395043371e794643", "Url": "https://api.github.com/repos/Valkryst/Schillsaver", "Date": "2017-12-20T16:49:03Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (substring.endsWith(\"-\")) { end--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/6653/buggy-version/library.src.main.java.me.solidev.library.Utils.java", "BodyUseAPI": [], "Fixed commit": "037650ce29c6fd70669f5a955b5c961d21cbf4e6", "Url": "https://api.github.com/repos/caizhili/GetWordTextView", "Date": "2017-04-21T11:34:57Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.project.pinksingers.Member.getPhoto()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (photoKey == null) { blobKey = new com.google.appengine.api.blobstore.BlobKey(\"ag5zfnBpbmstc2luZ2Vyc3ITCxIGTWVtYmVyGICAgID4woQKDA\"); }else { blobKey = new com.google.appengine.api.blobstore.BlobKey(photoKey); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/4346/buggy-version/M470.pinksingers.src.main.java.com.project.pinksingers.LoadMemberServlet.java", "BodyUseAPI": [], "Fixed commit": "6f6b513b73b3a6395ef7a4b9fa573fc1be453b3d", "Url": "https://api.github.com/repos/Christovee/pinksingers", "Date": "2016-07-17T12:48:58Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(st.hasNextToken())) { throw new java.lang.IllegalArgumentException(\"Attempt to scan invalid header\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/2203/buggy-version/src.com.meterware.httpunit.HttpUnitUtils.java", "BodyUseAPI": [], "Fixed commit": "dd601d044ce94f9308657a7d72648e8e6f5284ea", "Url": "https://api.github.com/repos/emopers/httpunit", "Date": "2015-10-21T18:30:45Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.fenixedu.academic.domain.Person.getSocialSecurityNumber()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (socialSecurityNumber != null) { searchMemberOutputData.setFiscalCode(java.lang.Long.valueOf(socialSecurityNumber)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/4474/buggy-version/src.main.java.com.qubit.solution.fenixedu.integration.cgd.webservices.messages.member.SearchMemberOutputData.java", "BodyUseAPI": ["com.qubit.solution.fenixedu.integration.cgd.webservices.messages.member.SearchMemberOutputData.setFiscalCode(java.lang.Long)", "java.lang.Long.valueOf(java.lang.String)"], "Fixed commit": "b544a65889ed87999d49103d3fe9d4358ad7680c", "Url": "https://api.github.com/repos/qub-it/fenixedu-ulisboa-cgd-integration", "Date": "2015-04-30T16:54:21Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (\"?\".equals(cond.getExpression())) { return java.lang.Boolean.valueOf(cond.getValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/2025/buggy-version/src.main.java.org.toilelibre.libe.prime.PrimeWhereMatcher.java", "BodyUseAPI": ["java.lang.Boolean.valueOf(cond.getValue())", "org.toilelibre.libe.prime.PrimeWhere.getValue()"], "Fixed commit": "d4d6b7b964084f589dc3096da0adc31ad6578435", "Url": "https://api.github.com/repos/libetl/prime", "Date": "2016-02-17T12:06:42Z"},
{"Line": "=>469", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(game.IsPaused())) { PauseAndUnpause(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/5712/buggy-version/wsl.src.main.java.com.mischivous.wormysharpyloggy.wsl.GameScreen.java", "BodyUseAPI": [], "Fixed commit": "cc2c3431a07c17935c120d0602be963a71bfdbc0", "Url": "https://api.github.com/repos/WormySharpyLoggy/WormySharpyLoggy", "Date": "2015-07-30T05:37:29Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((osm.offlineMapFile) == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/6422/buggy-version/OSMap.src.cat.app.map.poi.LoadPOITask.java", "BodyUseAPI": [], "Fixed commit": "8dafcdf2b6d1c09dabcf460167a9bb727e9ba52c", "Url": "https://api.github.com/repos/weixingsun/android", "Date": "2015-03-13T08:53:15Z"},
{"Line": "=>416", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cloudletScheduler == null) cloudletScheduler = org.cloudbus.cloudsim.schedulers.CloudletScheduler.NULL;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/470/buggy-version/cloudsim-plus.src.main.java.org.cloudbus.cloudsim.VmSimple.java", "BodyUseAPI": [], "Fixed commit": "646c1e5e3ee9e4fb3c1c5fb314cb79a9757cd803", "Url": "https://api.github.com/repos/manoelcampos/cloudsim-plus", "Date": "2016-06-10T20:47:57Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((songlist) == null) { songlist = new net.getatraci.atraci.activities.SongListFragment(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/3731/buggy-version/src.net.getatraci.atraci.activities.SearchFragment.java", "BodyUseAPI": [], "Fixed commit": "c0b13b49a5f8072419823d22396093a765be493c", "Url": "https://api.github.com/repos/SyNtheticNightmar3/Atraci-Android", "Date": "2014-10-26T00:47:06Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (evt instanceof com.whizzosoftware.wzwave.channel.TransactionTimeoutEvent) { com.whizzosoftware.wzwave.channel.TransactionTimeoutEvent tte = ((com.whizzosoftware.wzwave.channel.TransactionTimeoutEvent) (evt)); if (tte.getId().equals(currentDataFrameTransaction.getId())) { com.whizzosoftware.wzwave.channel.TransactionInboundHandler.logger.trace(\"Detected transaction timeout\"); timeoutFuture = null; com.whizzosoftware.wzwave.channel.TransactionInboundHandler.NettyZWaveChannelContext zctx = new com.whizzosoftware.wzwave.channel.TransactionInboundHandler.NettyZWaveChannelContext(); currentDataFrameTransaction.timeout(zctx); zctx.process(ctx); }else { com.whizzosoftware.wzwave.channel.TransactionInboundHandler.logger.error(\"Received timeout event for unknown transaction: {}\", tte.getId()); } }else if (evt instanceof com.whizzosoftware.wzwave.channel.TransactionFailedEvent) { com.whizzosoftware.wzwave.channel.TransactionFailedEvent tfe = ((com.whizzosoftware.wzwave.channel.TransactionFailedEvent) (evt)); if (tfe.getId().equals(currentDataFrameTransaction.getId())) { com.whizzosoftware.wzwave.channel.TransactionInboundHandler.logger.trace(\"Aborting failed transaction: {}\", tfe.getId()); currentDataFrameTransaction = null; }else { com.whizzosoftware.wzwave.channel.TransactionInboundHandler.logger.error(\"Received transaction failure for unknown transaction: {}\", tfe.getId()); } }else { ctx.fireUserEventTriggered(evt); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/6748/buggy-version/src.main.java.com.whizzosoftware.wzwave.channel.TransactionInboundHandler.java", "BodyUseAPI": ["io.netty.channel.ChannelHandlerContext.fireUserEventTriggered(java.lang.Object)"], "Fixed commit": "cacce2132e8d8c0d166fe0d12662fc4eb7deaf6a", "Url": "https://api.github.com/repos/whizzosoftware/WZWave", "Date": "2017-12-28T23:58:09Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["player.getHand().size()", "mage.abilities.dynamicvalue.DynamicValue.calculate(mage.game.Game,mage.abilities.Ability,mage.abilities.effects.common.discard.DiscardTargetEffect)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (targetAmount > cardsInHand) { finalAmount = cardsInHand; }else { finalAmount = targetAmount; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/6553/buggy-version/Mage.src.mage.abilities.effects.common.discard.DiscardTargetEffect.java", "BodyUseAPI": [], "Fixed commit": "51a6212383fcea210c3be784940962be47ee4d83", "Url": "https://api.github.com/repos/wanderer120/mage", "Date": "2015-06-16T15:18:30Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i >= (matrix.length)) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/6104/buggy-version/src._4DivideConquer.Practice4_2_3.java", "BodyUseAPI": [], "Fixed commit": "9617f053c0e61f7d0b558968185134492e45d0b6", "Url": "https://api.github.com/repos/lemmal/CLRS", "Date": "2016-09-28T06:27:27Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isDisposed()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/4727/buggy-version/src.engine.state.MainMenu.java", "BodyUseAPI": [], "Fixed commit": "7bfdcc3a5785d8c3120eca63cb4cb313e9f35b00", "Url": "https://api.github.com/repos/DrFair/Game", "Date": "2017-09-21T16:14:23Z"},
{"Line": "=>585", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (blobEntry != null) { blobEntry.setName(fileName); blobAccessor.createOrUpdateBlob(blobEntry); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/7948/buggy-version/src.main.java.com.pratilipi.data.util.PratilipiDocUtil.java", "BodyUseAPI": ["com.pratilipi.data.type.BlobEntry.setName(java.lang.String)", "com.pratilipi.data.BlobAccessor.createOrUpdateBlob(com.pratilipi.data.type.BlobEntry)"], "Fixed commit": "5cb34798b2a2f613b83dcfedacbdf00e8debb239", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2016-10-20T06:37:11Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.wishRepository.exists(wish.getId()))) { return new org.springframework.http.ResponseEntity(ConstantMessages.RESOURCE_DOES_NOT_EXIST, org.springframework.http.HttpStatus.OK); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/362/buggy-version/src.main.java.com.wishlist.serverside.web.WishListController.java", "BodyUseAPI": [], "Fixed commit": "2969401909617f15f7c30f64fbcc36d0183d63d7", "Url": "https://api.github.com/repos/ArtemYankovets/wishlist_serverside", "Date": "2017-11-07T09:08:51Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((org.openhab.action.telegram.internal.Telegram.groupTokens.get(group)) == null) { org.openhab.action.telegram.internal.Telegram.logger.error(java.lang.String.format(\"Bot '%s' not defined, action skipped\", group)); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/4718/buggy-version/bundles.action.org.openhab.action.telegram.src.main.java.org.openhab.action.telegram.internal.Telegram.java", "BodyUseAPI": ["org.slf4j.Logger.error(java.lang.String)", "java.lang.String.format(java.lang.String,java.lang.String)"], "Fixed commit": "75410840bdc7b2a73d58a44b58f2eb24a046423b", "Url": "https://api.github.com/repos/paolodenti/openhab", "Date": "2015-10-18T21:47:18Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.vertx.up.web.ZeroAnno.getWorkers()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (workers.isEmpty()) { workers.add(io.vertx.up.micro.ZeroHttpWorker.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/4865/buggy-version/vertx-up.src.main.java.io.vertx.up.web.anima.WorkerScatter.java", "BodyUseAPI": ["java.util.Set<java.lang.Class<?>>.add(java.lang.Class)"], "Fixed commit": "ad57fd5f22a977d3e39e5c9854f5b5724c8f00b0", "Url": "https://api.github.com/repos/silentbalanceyh/vertx-zero", "Date": "2017-12-05T09:52:10Z"},
{"Line": "=>295", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((isBeingEdited) == false) { edu.wpi.cs.wpisuitetng.modules.taskmanager.model.task.TaskModel taskModel = new edu.wpi.cs.wpisuitetng.modules.taskmanager.model.task.TaskModel(); taskModel.setID(this.taskModel.getID()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/3999/buggy-version/TaskManager.src.main.java.edu.wpi.cs.wpisuitetng.modules.taskmanager.view.tab.NewTaskTab.java", "BodyUseAPI": [], "Fixed commit": "e7e8e869a88323207e1865ab0ff3bca750175b1f", "Url": "https://api.github.com/repos/dcpounds/wpi-suite", "Date": "2014-12-08T05:09:20Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (message.contains(\" \")) { return message.replaceFirst((prefix + \" \"), \"\"); }else { return message.replaceFirst(prefix, \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/6688/buggy-version/src.main.java.com.jet.edu.project03.clients.write.WriteMessager.java", "BodyUseAPI": ["java.lang.String.replaceFirst(java.lang.String,java.lang.String)", "java.lang.String.replaceFirst(java.lang.String,java.lang.String)"], "Fixed commit": "1db584da63ebe2422cb4616efb8b809906511dc9", "Url": "https://api.github.com/repos/JetProjectASD/project03", "Date": "2015-11-14T11:28:36Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((processor) == null) { processor = new com.github.obase.webc.support.BaseInvokerServiceProcessor(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/60/buggy-version/obase-webc.src.main.java.com.github.obase.webc.InvokerServiceDispatcherFilter.java", "BodyUseAPI": [], "Fixed commit": "9300265cd229503120a59abc51c14a9474d32590", "Url": "https://api.github.com/repos/obase/java", "Date": "2016-12-23T08:09:48Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((processor) == null) { processor = new com.github.obase.webc.support.BaseServletMethodProcessor(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/60/buggy-version/obase-webc.src.main.java.com.github.obase.webc.ServletMethodDispatcherFilter.java", "BodyUseAPI": [], "Fixed commit": "9300265cd229503120a59abc51c14a9474d32590", "Url": "https://api.github.com/repos/obase/java", "Date": "2016-12-23T08:09:48Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (a.equals(\"-i\")) interpreting = true; else if (a.equals(\"-qq\")) verb = io.github.scyptnex.lcalc.Application.Verbosity.SILENT; else if (a.equals(\"-q\")) verb = io.github.scyptnex.lcalc.Application.Verbosity.QUIET; else if (a.equals(\"-v\")) verb = io.github.scyptnex.lcalc.Application.Verbosity.LOUD; else if (a.equals(\"-vv\")) verb = io.github.scyptnex.lcalc.Application.Verbosity.DEAFENING; else if (java.nio.file.Files.exists(java.nio.file.Paths.get(a))) { interpreting = false; getScriptParser().parse(java.nio.file.Paths.get(a)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/2164/buggy-version/src.main.java.io.github.scyptnex.lcalc.Application.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.nio.file.Paths.get(java.lang.String)", "io.github.scyptnex.lcalc.parser.ScriptParser.parse(java.nio.file.Path)", "java.lang.String.equals(java.lang.String)", "java.nio.file.Paths.get(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.nio.file.Files.exists(java.nio.file.Path)"], "Fixed commit": "5f23cf44ae498ebb63e79b8c229fe239d4a9e5c9", "Url": "https://api.github.com/repos/scyptnex/lambda-calculator", "Date": "2016-10-24T09:26:46Z"},
{"Line": "=>1009", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (indel.isInsertion()) { for (byte b : indelStr) sb.append(((char) (b))); cigar.add(new org.broadinstitute.sting.gatk.walkers.indels.CigarElement(indelStr.length, CigarOperator.I)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/8257/buggy-version/public.java.src.org.broadinstitute.sting.gatk.walkers.indels.IndelRealigner.java", "BodyUseAPI": [], "Fixed commit": "1f19afe1d9e8724ea998ac62c481e2ebdc4af7a5", "Url": "https://api.github.com/repos/broadgsa/gatk", "Date": "2011-06-29T19:54:09Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((matches.size()) > 0) { java.io.File[] searchedCoincedenses = matches.toArray(new java.io.File[matches.size()]); currentDirAllFiles = searchedCoincedenses; playListInitalization(searchedCoincedenses); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/5632/buggy-version/app.src.main.java.nikborisov.com.github.play_simple.MainActivity.java", "BodyUseAPI": ["java.util.ArrayList<java.io.File>.toArray(java.io.File[])", "java.util.ArrayList<java.io.File>.size()"], "Fixed commit": "84b5df73e6eb6f24348bc2c47271748928c57c55", "Url": "https://api.github.com/repos/NikBorisov/Play_Simple", "Date": "2016-04-20T20:32:51Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javafx.scene.control.Button.getText()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (buttonLabel.equals(\"Fold\")) { currentPlayer.fold(); (numOfFoldedPlayers)++; if (currentPlayer.getName().equals(highestBettersName)) { highestBettersName = \"\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/6652/buggy-version/src.Poker.Controller.java", "BodyUseAPI": [], "Fixed commit": "636aa13ad09b7fec350fa430ae76ed1fd74ee7a6", "Url": "https://api.github.com/repos/tnewman16/Texas-Hold-em", "Date": "2015-12-14T17:25:17Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (highestBettersName.equals(\"\")) { highestBettersName = currentPlayer.getName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/6652/buggy-version/src.Poker.Controller.java", "BodyUseAPI": [], "Fixed commit": "636aa13ad09b7fec350fa430ae76ed1fd74ee7a6", "Url": "https://api.github.com/repos/tnewman16/Texas-Hold-em", "Date": "2015-12-14T17:25:17Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (store.isUndirected()) { return store.viewStore.getUndirectedGraph(view); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/3566/buggy-version/store.src.main.java.org.gephi.graph.store.GraphModelImpl.java", "BodyUseAPI": ["store.viewStore.getUndirectedGraph(org.gephi.graph.api.GraphView)"], "Fixed commit": "0ec38de1bb311e6bfdf9d795ac31ff0dfdd5d55f", "Url": "https://api.github.com/repos/mbastian/graphstore", "Date": "2013-04-21T06:15:37Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["playground.agarwalamit.analysis.legMode.distributions.LegModeBeelineDistanceDistributionHandler.getMode2DistanceClass2LegCounts()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((simCounts.containsKey(mode)) && (simCounts.get(mode).containsKey(distClass))) simValue = simCounts.get(mode).get(distClass); else simValue = 0.0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/6222/buggy-version/playgrounds.agarwalamit.src.main.java.playground.agarwalamit.opdyts.patna.PatnaObjectiveFunctionValueWriter.java", "BodyUseAPI": ["java.util.SortedMap<java.lang.Double, java.lang.Integer>.get(double)", "java.util.SortedMap<java.lang.String, java.util.SortedMap<java.lang.Double, java.lang.Integer>>.get(java.lang.String)"], "Fixed commit": "82abcd80a9d46e70ee61cf1a83f9228c14651a3a", "Url": "https://api.github.com/repos/matsim-org/matsim", "Date": "2016-11-22T10:01:26Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((e.getFrom().getWorld()) != (com.WildAmazing.marinating.Demigods.DUtil.toLocation(center).getWorld())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/2069/buggy-version/src.com.WildAmazing.marinating.Demigods.Listeners.DShrines.java", "BodyUseAPI": [], "Fixed commit": "4ee0f4bef1cab1046ae1157576c0ff83399b09b7", "Url": "https://api.github.com/repos/Clashnia/Demigods", "Date": "2012-12-19T03:42:56Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((varCtx.variableInitializer()) != null) { this.identifiedTokens.addToken(ClassAnalyzer.IDENTIFIER_VALUE_KEY, varCtx.variableInitializer().getText()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/4935/buggy-version/src.model.javarice.semantics.analyzers.FieldAnalyzer.java", "BodyUseAPI": ["model.javarice.semantics.utils.IdentifiedTokens.addToken(ClassAnalyzer.IDENTIFIER_VALUE_KEY,varCtx.variableInitializer().getText())", "varCtx.variableInitializer().getText()", "model.javarice.generatedexp.JavaRiceParser.VariableDeclaratorContext.variableInitializer()"], "Fixed commit": "7abad71e252454a025531efca618509bf759321f", "Url": "https://api.github.com/repos/fuouo/JavaRice", "Date": "2017-11-17T16:23:20Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (data != null) { for (DomainModel.Lager_Reihe lr : data) { this.warehouse_rows.add(lr); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/2457/buggy-version/PSWarenwirtschaftssystem.src.view.WarehouseRowsTableModel.java", "BodyUseAPI": [], "Fixed commit": "aa4769f5dd07f120ac9e27a8f5f42af1c42e33ff", "Url": "https://api.github.com/repos/elenahollen/PSWarenwirtschaftssystem", "Date": "2016-09-05T21:17:08Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((path.length()) == 0) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/1232/buggy-version/src.cc.rainwave.android.Rainwave.java", "BodyUseAPI": [], "Fixed commit": "3d17b3a2311b09d81219bbd6c295929981078e18", "Url": "https://api.github.com/repos/OEP/rainwave-android", "Date": "2011-11-09T18:36:48Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(result.title.equalsIgnoreCase(\"Torrent Supprim\u00e9\"))) result.dlLocation = column.child(0).text();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/7485/buggy-version/Gks-Git.src.com.gks2.api.scrapper.GetSnatchedTask.java", "BodyUseAPI": [], "Fixed commit": "52e193c7675904e2871bb5b888aa847211b93df1", "Url": "https://api.github.com/repos/doodz/gks", "Date": "2014-05-10T16:13:52Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<org.jsoup.nodes.Element>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(column.text().equalsIgnoreCase(\"Torrent Supprim\u00e9\"))) { result.prezLocaion = column.child(0).attr(\"href\"); result.title = column.child(0).text(); }else { result.title = \"Torrent Supprim\u00e9\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/7485/buggy-version/Gks-Git.src.com.gks2.api.scrapper.GetSnatchedTask.java", "BodyUseAPI": ["column.child(0).text()", "org.jsoup.nodes.Element.child(int)", "org.jsoup.nodes.Element.child(int)", "column.child(0).attr(java.lang.String)"], "Fixed commit": "52e193c7675904e2871bb5b888aa847211b93df1", "Url": "https://api.github.com/repos/doodz/gks", "Date": "2014-05-10T16:13:52Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (candidateTerms.isEmpty()) { return new org.modelcatalogue.letter.annotator.TextWithOccurrences(letter, org.modelcatalogue.letter.annotator.TermOccurrence.collect().getOccurrences()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/7597/buggy-version/letter-annotator-api.src.main.java.org.modelcatalogue.letter.annotator.AbstractHighlighter.java", "BodyUseAPI": [], "Fixed commit": "216af124a18e3660c95549f16a24697348f09d52", "Url": "https://api.github.com/repos/MetadataConsulting/letter-annotator", "Date": "2015-10-27T13:40:37Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.jClipCorn.database.databaseElement.CCDatabaseElement.getCover()", "de.jClipCorn.util.helper.ImageUtilities.resizeCoverImageForFullSizeUI(java.awt.image.BufferedImage)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (bi == biorig) bi = de.jClipCorn.util.helper.ImageUtilities.deepCopyImage(bi);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/4490/buggy-version/src.main.de.jClipCorn.gui.guiComponents.DatabaseElementPreviewLabel.java", "BodyUseAPI": ["de.jClipCorn.util.helper.ImageUtilities.deepCopyImage(java.awt.image.BufferedImage)"], "Fixed commit": "a6978e921c62edbf757c3853e886acdec31a8378", "Url": "https://api.github.com/repos/Mikescher/jClipCorn", "Date": "2017-11-26T15:33:15Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((path) != null) { return cascading.hcatalog.CascadingHCatUtil.setDataStorageLocation(db, table, filter, path, conf); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/773/buggy-version/src.main.java.cascading.hcatalog.HCatTap.java", "BodyUseAPI": [], "Fixed commit": "7b1f69682da9b85a3d623f91c94ef157ecbaa572", "Url": "https://api.github.com/repos/VisualDNA/cascading.hive", "Date": "2014-04-10T07:23:10Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(ctx.isAsync())) { ctx.async(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/8423/buggy-version/rapidoid-http-fast.src.main.java.org.rapidoid.http.handler.AbstractDecoratingHttpHandler.java", "BodyUseAPI": ["org.rapidoid.net.abstracts.Channel.async()"], "Fixed commit": "751d1fe4ba9482f6828c5f7515d96cfedb19cff9", "Url": "https://api.github.com/repos/rapidoid/rapidoid", "Date": "2017-03-01T13:31:07Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.sqlite.SQLiteDatabase.query(ReportTable.NAME,java.lang.String[],com.moqod.android.shaker.data.db.ReportTable.queryById(id),<nulltype>,<nulltype>,<nulltype>,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (cursor != null) { cursor.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/3726/buggy-version/library.src.main.java.com.moqod.android.shaker.data.DbReportsRepository.java", "BodyUseAPI": ["android.database.Cursor.close()"], "Fixed commit": "f369c5eca3be09500e97e0435131851d1cef4400", "Url": "https://api.github.com/repos/moqod/catcher-android", "Date": "2017-08-15T14:07:30Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((backupRecord) != null) { return new com.hazelcast.cache.impl.operation.CachePutBackupOperation(name, key, backupRecord); }else { return new com.hazelcast.cache.impl.operation.CacheRemoveBackupOperation(name, key); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/7962/buggy-version/hazelcast.src.main.java.com.hazelcast.cache.impl.operation.CacheEntryProcessorOperation.java", "BodyUseAPI": [], "Fixed commit": "fe421b79a227d7e65a19b4ca23ca7705ecf73d40", "Url": "https://api.github.com/repos/hazelcast/hazelcast", "Date": "2015-05-05T11:34:23Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dataSnapshot.getKey().contentEquals(\"active_question\")) { lectureQuestion.setText(dataSnapshot.getValue().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/4919/buggy-version/app.src.main.java.com.example.instantify.instantify.QuestionFragment.java", "BodyUseAPI": ["com.firebase.client.DataSnapshot.getValue()", "android.widget.TextView.setText(dataSnapshot.getValue().toString())", "dataSnapshot.getValue().toString()"], "Fixed commit": "69e52ad0972b71f937e23233e871891966a92766", "Url": "https://api.github.com/repos/Notika/Instantify", "Date": "2015-10-31T13:33:37Z"},
{"Line": "=>364", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((layer.getStyles().get(0)) != null) { style = layer.getStyles().get(0).getStyleString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/4957/buggy-version/geoplatform-gui.plugin.geoplatform-print.src.main.java.org.geosdi.geoplatform.gui.client.form.GPPrintWidget.java", "BodyUseAPI": ["layer.getStyles().get(int)", "org.geosdi.geoplatform.gui.model.GPLayerBean.getStyles()", "layer.getStyles().get(0).getStyleString()"], "Fixed commit": "43de7adf54b4a2d4d87c9f052baad181e84d2a72", "Url": "https://api.github.com/repos/glascaleia/geo-platform", "Date": "2014-02-13T15:50:33Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((x1 == x2) && (y1 == y2)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/1768/buggy-version/workspace.WATisRain.src.com.lucky.watisrain.map.MapDraw.java", "BodyUseAPI": [], "Fixed commit": "21c3c9c1bd915e72a3b98d58ecb11aa19ec49433", "Url": "https://api.github.com/repos/luckytoilet/WATisRain", "Date": "2014-08-02T21:04:01Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((node.getContainedFeatures().size()) == 1) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/6407/buggy-version/plugins.de.ovgu.featureide.fm.core.src.de.ovgu.featureide.fm.core.conversion.ComplexConstraintConverter.java", "BodyUseAPI": [], "Fixed commit": "d813a838191f17681ef772d294dc0da6a10fd297", "Url": "https://api.github.com/repos/FeatureIDE/FeatureIDE", "Date": "2016-06-10T10:32:09Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(prepare())) return fm;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/6407/buggy-version/plugins.de.ovgu.featureide.fm.core.src.de.ovgu.featureide.fm.core.conversion.ComplexConstraintConverter.java", "BodyUseAPI": [], "Fixed commit": "d813a838191f17681ef772d294dc0da6a10fd297", "Url": "https://api.github.com/repos/FeatureIDE/FeatureIDE", "Date": "2016-06-10T10:32:09Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (img.getUrl().contains(\"jenna-jameson_15af8357\")) log.info(((((((((((((((\"AQUI!!!!!!!!!!!!!!!! create thumbnail mime[\" + (img.getMime())) + \"] \") + \"[\") + thumbWidth) + \"*\") + thumbHeight) + \"]\") + \" original size [\") + width) + \"*\") + height) + \"] img[\") + (img.getUrl())) + \"]\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/9089/buggy-version/src.main.java.pt.archive.utils.ImageParse.java", "BodyUseAPI": ["pt.archive.model.ImageSearchResult.getMime()", "org.slf4j.Logger.info(((((((((((((((\"AQUI!!!!!!!!!!!!!!!! create thumbnail mime[\" + (img.getMime())) + \"] \") + \"[\") + thumbWidth) + \"*\") + thumbHeight) + \"]\") + \" original size [\") + width) + \"*\") + height) + \"] img[\") + (img.getUrl())) + \"]\"))", "pt.archive.model.ImageSearchResult.getUrl()"], "Fixed commit": "e5156251ccec9a7cb6e6d0b74eb46681e4ee927c", "Url": "https://api.github.com/repos/arquivo/getimagesWS", "Date": "2017-01-10T23:22:17Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ae.getId()) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/1056/buggy-version/server.src.main.java.org.apache.kylin.rest.service.AccessService.java", "BodyUseAPI": [], "Fixed commit": "203f63baa0fa0e4cae3a5cabe1dfedbd8e3c0d8d", "Url": "https://api.github.com/repos/apache/kylin", "Date": "2016-01-19T02:29:22Z"},
{"Line": "=>304", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.redSandstone) { this.iconMap.put(\"refined_slab_side\", iconRegister.registerIcon((textureName + \"_refined\"))); }else { this.iconMap.put(\"refined_slab_top\", iconRegister.registerIcon((textureName + \"_refined\"))); this.iconMap.put(\"refined_slab_side\", iconRegister.registerIcon((textureName + \"_refined_slab_side\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/4113/buggy-version/src.main.java.minestrapteam.mcore.block.MCBlockCustom2.java", "BodyUseAPI": [], "Fixed commit": "342b02fd2ea200d83760a182adbbfbc3bbf45605", "Url": "https://api.github.com/repos/MinestrapTeam/Minestrappolation-2", "Date": "2014-07-18T21:20:53Z"},
{"Line": "=>381", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.redSandstone) { return (side == 0) || (side == 1) ? this.iconMap.get(\"top\") : this.iconMap.get(\"refined_slab_side\"); }else if (side > 1) { return this.iconMap.get(\"refined_slab_side\"); }else { return this.iconMap.get(\"refined_slab_top\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/4113/buggy-version/src.main.java.minestrapteam.mcore.block.MCBlockCustom2.java", "BodyUseAPI": [], "Fixed commit": "342b02fd2ea200d83760a182adbbfbc3bbf45605", "Url": "https://api.github.com/repos/MinestrapTeam/Minestrappolation-2", "Date": "2014-07-18T21:20:53Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(uSkyBlock.getInstance().isRequirementsMet(sender, false))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/4862/buggy-version/src.main.java.us.talabrek.ultimateskyblock.command.common.CompositeUSBCommand.java", "BodyUseAPI": [], "Fixed commit": "2958de031c22d3c6927566d69ebe0f4d7e5c934c", "Url": "https://api.github.com/repos/rlf/uSkyBlock", "Date": "2015-01-02T09:47:39Z"},
{"Line": "=>1932", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(fixedFiles.isEmpty())) com.orientechnologies.common.log.OLogManager.instance().warn(this, ((\"Removed files \" + fixedFiles) + \" had duplicated ids. Problem is fixed automatically.\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/2791/buggy-version/core.src.main.java.com.orientechnologies.orient.core.storage.cache.local.OWOWCache.java", "BodyUseAPI": ["com.orientechnologies.common.log.OLogManager.instance().warn(com.orientechnologies.orient.core.storage.cache.local.OWOWCache,java.lang.String)"], "Fixed commit": "5516e1ebea52f58be09fcb2b56b86e0092239107", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2017-07-19T09:02:34Z"},
{"Line": "=>330", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((timer) != null) timer.cancel();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/4576/buggy-version/src.se.mah.kirby.controller.Controller.java", "BodyUseAPI": [], "Fixed commit": "3464ede5ab01e734a12dee4067b19b1ebd0d01a7", "Url": "https://api.github.com/repos/sebhero/p6Android", "Date": "2016-01-07T14:01:58Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (first.isPaired()) { result = java.lang.Integer.compare(org.broadinstitute.hellbender.utils.read.ReadUtils.getMateReferenceIndex(first, header), org.broadinstitute.hellbender.utils.read.ReadUtils.getMateReferenceIndex(second, header)); if (result != 0) { return result; } result = java.lang.Integer.compare(first.getMateStart(), second.getMateStart()); if (result != 0) { return result; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/3678/buggy-version/src.main.java.org.broadinstitute.hellbender.utils.read.ReadCoordinateComparator.java", "BodyUseAPI": ["org.broadinstitute.hellbender.utils.read.GATKRead.getMateStart()", "java.lang.Integer.compare(first.getMateStart(),second.getMateStart())", "java.lang.Integer.compare(org.broadinstitute.hellbender.utils.read.ReadUtils.getMateReferenceIndex(first, header),org.broadinstitute.hellbender.utils.read.ReadUtils.getMateReferenceIndex(second, header))", "org.broadinstitute.hellbender.utils.read.ReadUtils.getMateReferenceIndex(org.broadinstitute.hellbender.utils.read.GATKRead,htsjdk.samtools.SAMFileHeader)"], "Fixed commit": "d72293bce46b8042839a5340e1b73824c8d9d047", "Url": "https://api.github.com/repos/broadinstitute/gatk", "Date": "2015-09-17T09:08:17Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((net.polybugger.apollot.db.ApolloDbAdapter.sOpenCounter) > 0) (net.polybugger.apollot.db.ApolloDbAdapter.sOpenCounter)--;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/3635/buggy-version/app.src.main.java.net.polybugger.apollot.db.ApolloDbAdapter.java", "BodyUseAPI": [], "Fixed commit": "fc231667e09156bbae966bc3eb269eabca8b27e3", "Url": "https://api.github.com/repos/polybugger/ApolloV3", "Date": "2016-04-05T07:09:48Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (type != null) { return org.structr.api.util.Iterables.map(mapper, tx.getNodes(((\"MATCH (n:\" + type) + \") RETURN n\"), java.util.Collections.emptyMap())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/1064/buggy-version/structr-neo4j-bolt-driver.src.main.java.org.structr.bolt.BoltDatabaseService.java", "BodyUseAPI": ["org.structr.api.util.Iterables.map(org.structr.bolt.mapper.NodeNodeMapper,tx.getNodes(((\"MATCH (n:\" + type) + \") RETURN n\"), java.util.Collections.emptyMap()))", "org.structr.bolt.SessionTransaction.getNodes(java.lang.String,java.util.Map<java.lang.Object, java.lang.Object>)"], "Fixed commit": "fbcf14d317ce5f2ef20dea6e224b0e9587fe63d8", "Url": "https://api.github.com/repos/structr/structr", "Date": "2017-07-06T19:00:10Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (type != null) { final java.util.Map<java.lang.String, java.lang.Object> map = new java.util.LinkedHashMap<>(); map.put(\"type\", type); return org.structr.api.util.Iterables.map(mapper, tx.getNodes(\"MATCH (n) WHERE n.type = {type} RETURN n\", map)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/1064/buggy-version/structr-neo4j-bolt-driver.src.main.java.org.structr.bolt.BoltDatabaseService.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,java.lang.String)"], "Fixed commit": "fbcf14d317ce5f2ef20dea6e224b0e9587fe63d8", "Url": "https://api.github.com/repos/structr/structr", "Date": "2017-07-06T19:00:10Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(name.equals(DEFAULT_MODULE_NAME))) name.append(\"-\").append(version);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/2744/buggy-version/src.com.redhat.ceylon.compiler.typechecker.io.VFSArtifactProvider.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "4b4a118fc4ea6c37c9aab5579809fac8ff5bf28d", "Url": "https://api.github.com/repos/FroMage/ceylon-spec", "Date": "2012-01-13T09:10:18Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((m_currentProject) != null) { m_projectLocation = m_currentProject.getLocation().toOSString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/7526/buggy-version/rhogen-wizard.src.rhogenwizard.wizards.RhogenModelWizard.java", "BodyUseAPI": [], "Fixed commit": "41e126cc29ceefff2cddf278a4be254d7a25a34d", "Url": "https://api.github.com/repos/rhomobile/rhostudio", "Date": "2011-04-25T14:12:27Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fragmentedChannel) == null) { return java.util.Collections.emptyList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/1936/buggy-version/core.src.main.java.io.undertow.websockets.core.WebSocketChannel.java", "BodyUseAPI": [], "Fixed commit": "62edd1b2fcda8ffa2f8b148f6aee38cfd2cec583", "Url": "https://api.github.com/repos/spaletta/undertow", "Date": "2017-09-05T22:52:35Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((source) == null) { return java.util.Collections.emptyList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/1936/buggy-version/core.src.main.java.io.undertow.protocols.ajp.AjpClientChannel.java", "BodyUseAPI": [], "Fixed commit": "62edd1b2fcda8ffa2f8b148f6aee38cfd2cec583", "Url": "https://api.github.com/repos/spaletta/undertow", "Date": "2017-09-05T22:52:35Z"},
{"Line": "=>1431", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.emc.storageos.vnxe.models.VNXeHostInitiator.getPortWWN()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((portwwn == null) || (portwwn.isEmpty())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/1966/buggy-version/controllersvc.src.main.java.com.emc.storageos.volumecontroller.impl.vnxunity.VNXUnityUnManagedObjectDiscoverer.java", "BodyUseAPI": [], "Fixed commit": "be546d6960aafb1e3a8d3c056ad31dd60e895654", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-05-11T18:29:09Z"},
{"Line": "=>1416", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.emc.storageos.vnxe.models.VNXeHostInitiator.getPortWWN()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((portwwn == null) || (portwwn.isEmpty())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/1966/buggy-version/controllersvc.src.main.java.com.emc.storageos.volumecontroller.impl.vnxunity.VNXUnityUnManagedObjectDiscoverer.java", "BodyUseAPI": [], "Fixed commit": "be546d6960aafb1e3a8d3c056ad31dd60e895654", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-05-11T18:29:09Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (minion.getDivineShield()) opScore += ((minion.getAttack()) + (minion.getHealth())) * (enemy_wDivineShield_);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/8529/buggy-version/src.com.hearthsim.player.playercontroller.ArtificialPlayer.java", "BodyUseAPI": ["com.hearthsim.card.minion.Minion.getAttack()", "com.hearthsim.card.minion.Minion.getHealth()"], "Fixed commit": "a441ce90262867d5747aae3e892c98a197b6c60c", "Url": "https://api.github.com/repos/oyachai/HearthSim", "Date": "2014-07-14T03:52:46Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (minion.getDivineShield()) myScore += ((minion.getAttack()) + (minion.getHealth())) * (my_wDivineShield_);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/8529/buggy-version/src.com.hearthsim.player.playercontroller.ArtificialPlayer.java", "BodyUseAPI": ["com.hearthsim.card.minion.Minion.getAttack()", "com.hearthsim.card.minion.Minion.getHealth()"], "Fixed commit": "a441ce90262867d5747aae3e892c98a197b6c60c", "Url": "https://api.github.com/repos/oyachai/HearthSim", "Date": "2014-07-14T03:52:46Z"},
{"Line": "=>342", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["VersionControlDb.findRepo(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (tempRepo.getAdmin().equals(logInUser)) { if ((VersionControlDb.findUser(userName)) != null) { VersionControlDb.findUser(userName).subscribeRepo(currRepo); java.lang.System.out.println(\"SUCCESS\"); break; }else { java.lang.System.out.println(\"USER_NOT_FOUND\"); break; } }else { java.lang.System.out.println(\"ACCESS_DENIED\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/8705/buggy-version/src.VersionControlApp.java", "BodyUseAPI": [], "Fixed commit": "a0a63d1b43d1df5be2dd33ba22c41fe3f5e4c9bf", "Url": "https://api.github.com/repos/twhitburn/Version-Control-App", "Date": "2015-03-22T17:53:53Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["plugin.getChannelManager().getChannel(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (channel == null) { sender.sendMessage(com.gmail.favorlock.bungeechatplus.utils.FontFormat.translateString(((\"&eThe channel &2\" + (args[0])) + \"&e does not exist\"))); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/961/buggy-version/src.main.java.com.gmail.favorlock.bungeechatplus.cmd.commands.Join.java", "BodyUseAPI": [], "Fixed commit": "ae6fa0806c9b7dbe889a8bcbbbbe7a70bddfd91d", "Url": "https://api.github.com/repos/Favorlock/BungeeChatPlus", "Date": "2013-03-18T20:27:16Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["plugin.getChannelManager().getChannel(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (channel == null) { sender.sendMessage(com.gmail.favorlock.bungeechatplus.utils.FontFormat.translateString(((\"&eThe channel &2\" + (args[0])) + \"&e does not exist\"))); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/961/buggy-version/src.main.java.com.gmail.favorlock.bungeechatplus.cmd.commands.Focus.java", "BodyUseAPI": [], "Fixed commit": "ae6fa0806c9b7dbe889a8bcbbbbe7a70bddfd91d", "Url": "https://api.github.com/repos/Favorlock/BungeeChatPlus", "Date": "2013-03-18T20:27:16Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getJSONArray(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((nors.length()) != 0) { for (int i = 0; i < (nors.length()); i++) norList.add(new data.Normal(nors.getJSONObject(i))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/1952/buggy-version/src.com.example.aroundu_client.FeedsActivity.java", "BodyUseAPI": ["java.util.List<data.Normal>.add(data.Normal)", "org.json.JSONArray.length()", "org.json.JSONArray.getJSONObject(int)"], "Fixed commit": "b3ba36a866ff0f8463a1e9be419ff5104f5ba392", "Url": "https://api.github.com/repos/GoMADAO/AroundU_Client", "Date": "2015-05-21T01:07:54Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getJSONArray(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((emes.length()) != 0) { for (int i = 0; i < (emes.length()); i++) emrList.add(new data.Emergency(emes.getJSONObject(i))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/1952/buggy-version/src.com.example.aroundu_client.FeedsActivity.java", "BodyUseAPI": ["org.json.JSONArray.getJSONObject(int)", "java.util.List<data.Emergency>.add(data.Emergency)", "org.json.JSONArray.length()"], "Fixed commit": "b3ba36a866ff0f8463a1e9be419ff5104f5ba392", "Url": "https://api.github.com/repos/GoMADAO/AroundU_Client", "Date": "2015-05-21T01:07:54Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getJSONArray(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((imps.length()) != 0) { for (int i = 0; i < (imps.length()); i++) impList.add(new data.Importance(imps.getJSONObject(i))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/1952/buggy-version/src.com.example.aroundu_client.FeedsActivity.java", "BodyUseAPI": ["org.json.JSONArray.getJSONObject(int)", "org.json.JSONArray.length()", "java.util.List<data.Importance>.add(data.Importance)"], "Fixed commit": "b3ba36a866ff0f8463a1e9be419ff5104f5ba392", "Url": "https://api.github.com/repos/GoMADAO/AroundU_Client", "Date": "2015-05-21T01:07:54Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getJSONArray(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((tops.length()) != 0) { for (int i = 0; i < (tops.length()); i++) { java.lang.System.out.println((\"gmf:\" + (tops.getString(i).toString()))); dropdownList.add(tops.getString(i).toString()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/1952/buggy-version/src.com.example.aroundu_client.FeedsActivity.java", "BodyUseAPI": ["java.io.PrintStream.println((\"gmf:\" + (tops.getString(i).toString())))", "org.json.JSONArray.length()", "tops.getString(i).toString()", "org.json.JSONArray.getString(int)", "tops.getString(i).toString()", "org.json.JSONArray.getString(int)", "java.util.List<java.lang.String>.add(tops.getString(i).toString())"], "Fixed commit": "b3ba36a866ff0f8463a1e9be419ff5104f5ba392", "Url": "https://api.github.com/repos/GoMADAO/AroundU_Client", "Date": "2015-05-21T01:07:54Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((table.getSelectedRow()) != (-1)) new cz.mgn.mediservice.GUI.panels.DescripionDialog(drugs.get(table.getSelectedRow()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/5765/buggy-version/src.cz.mgn.mediservice.GUI.panels.MedicamentsInStoragePanel.java", "BodyUseAPI": ["javax.swing.JTable.getSelectedRow()", "java.util.ArrayList<cz.mgn.mediservice.model.Drug>.get(int)"], "Fixed commit": "f7349f1f78464bc29c03ae036bff7a787d5854d8", "Url": "https://api.github.com/repos/CrazyMuffin/mediservice-java-client", "Date": "2014-11-30T20:34:13Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i != sum) { sum = sum + (num / i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/5532/buggy-version/projecteuler.src.projecteuler.Problem21.java", "BodyUseAPI": [], "Fixed commit": "6d2f397d03ec851f06c6473837f6d8de540ff4f1", "Url": "https://api.github.com/repos/JacquesBotha90/projectEuler", "Date": "2017-02-14T15:40:33Z"},
{"Line": "=>2042", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["variationDBList.get(0).get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (freqsDBList != null) { org.opencb.cellbase.mongodb.db.variation.BasicDBObject freqDBObject; for (int j = 0; j < (freqsDBList.size()); j++) { freqDBObject = ((org.opencb.cellbase.mongodb.db.variation.BasicDBObject) (freqsDBList.get(j))); variantAnnotation.addPopulationFrequency(new org.opencb.biodata.models.variation.PopulationFrequency(freqDBObject.get(\"study\").toString(), freqDBObject.get(\"pop\").toString(), freqDBObject.get(\"superPop\").toString(), freqDBObject.get(\"refAllele\").toString(), freqDBObject.get(\"altAllele\").toString(), java.lang.Float.valueOf(freqDBObject.get(\"refAlleleFreq\").toString()), java.lang.Float.valueOf(freqDBObject.get(\"altAlleleFreq\").toString()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/4976/buggy-version/cellbase-mongodb.src.main.java.org.opencb.cellbase.mongodb.db.variation.VariantAnnotationMongoDBAdaptor.java", "BodyUseAPI": ["org.opencb.cellbase.mongodb.db.variation.BasicDBList.get(int)", "org.opencb.cellbase.mongodb.db.variation.BasicDBList.size()"], "Fixed commit": "54483b4da886a7f5c1d689be861f6cfbd994373a", "Url": "https://api.github.com/repos/opencb/cellbase", "Date": "2015-05-21T10:48:33Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (string.equals(\"float\")) { string = \"FLOAT\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/4842/buggy-version/org.eclipse.titan.codegenerator.src.org.eclipse.titan.codegenerator.myASTVisitor.java", "BodyUseAPI": [], "Fixed commit": "e235180bbdecefd17734b01075cec283f4a91cbd", "Url": "https://api.github.com/repos/mrmeszaros/titan.EclipsePlug-ins", "Date": "2016-08-08T15:38:50Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.jface.preference.PreferenceStore.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (fontspec.startsWith(\".\")) fontspec = fontspec.substring(1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/9120/buggy-version/RelUI.src.org.reldb.relui.dbui.Preferences.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "c30318e6a4deef6e5a563552c6ad09ea16a32083", "Url": "https://api.github.com/repos/DaveVoorhis/Rel", "Date": "2015-04-07T22:32:12Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (event.isCancelled()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/5340/buggy-version/src.PPPlayerListener.PortalPlayerListener.java", "BodyUseAPI": [], "Fixed commit": "37acfefec7f226fd8efceede0e26e3755bc782c4", "Url": "https://api.github.com/repos/dotblank/PortalMod", "Date": "2011-02-18T08:26:36Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.sqrt(double)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (travelledDistance >= routeDistance) return destCoord;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/1802/buggy-version/src.Utils.LinearCoordCalculator.java", "BodyUseAPI": [], "Fixed commit": "e42d2757d85d0f316a151bcbc9985b3a5880961d", "Url": "https://api.github.com/repos/barto90/DSS", "Date": "2013-11-22T12:53:30Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mReminderTime) != (-1)) { java.util.Calendar c = java.util.Calendar.getInstance(); c.setTime(mDueDate); int reminderMinutes = todo.javier.mera.todolist.fragments.dialogs.DialogTask.reminderOptions.get(mReminderTime); c.add(java.util.Calendar.MINUTE, reminderMinutes); reminderDate = c.getTime(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/2438/buggy-version/app.src.main.java.todo.javier.mera.todolist.fragments.dialogs.DialogTask.java", "BodyUseAPI": [], "Fixed commit": "0fe162da37531ddd94467978cda3f7ec4ddb8c0b", "Url": "https://api.github.com/repos/JaviMera/TodoList", "Date": "2017-01-31T17:00:14Z"},
{"Line": "=>434", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((discoverForm) != null) { discoverForm.refreshSearch(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/7516/buggy-version/dbproject.src.my.triviagame.gui.AddUpdate.java", "BodyUseAPI": [], "Fixed commit": "1b53a8c5cebea2f7ae05aea9a7c699c49b3906a1", "Url": "https://api.github.com/repos/grzn/dbc", "Date": "2012-06-16T21:08:17Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(receiver.canConnectEnergy(side.getOpposite()))) { sides.remove(side); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/8843/buggy-version/src.main.java.tbsc.techy.tile.pipe.TilePipeEnergy.java", "BodyUseAPI": ["java.util.List<net.minecraft.util.EnumFacing>.remove(net.minecraft.util.EnumFacing)"], "Fixed commit": "72747c106cca4634ecbb20cb175ce55888152e20", "Url": "https://api.github.com/repos/Tbsc/Techy", "Date": "2016-06-22T08:39:59Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (receiver.canConnectEnergy(side.getOpposite())) { receiver.receiveEnergy(side.getOpposite(), extractEnergy(side, forEach, false), false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/8843/buggy-version/src.main.java.tbsc.techy.tile.pipe.TilePipeEnergy.java", "BodyUseAPI": ["net.minecraft.util.EnumFacing.getOpposite()", "tbsc.techy.tile.pipe.TilePipeEnergy.extractEnergy(net.minecraft.util.EnumFacing,int,boolean)", "cofh.api.energy.IEnergyReceiver.receiveEnergy(side.getOpposite(),int,boolean)"], "Fixed commit": "72747c106cca4634ecbb20cb175ce55888152e20", "Url": "https://api.github.com/repos/Tbsc/Techy", "Date": "2016-06-22T08:39:59Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((java.lang.Math.abs((preObj - (objective)))) < (PRECISENESS)) || (preObj < (objective))) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/2049/buggy-version/src.lkhj.LKHJ.java", "BodyUseAPI": [], "Fixed commit": "cf56cc772fb3132a38858c2d7911fbd76294ac2d", "Url": "https://api.github.com/repos/xavierwoo/LKHJ", "Date": "2017-09-27T21:58:59Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pairFirstHalf.equals(\"action\")) || (pairFirstHalf.equals(\"contentId\"))) { if (!(uniquePathsWithResources.contains(((path + \" \") + extraQueryParts)))) { uniquePathsWithResources.add(((path + \" \") + extraQueryParts)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/9134/buggy-version/src.proov.java", "BodyUseAPI": [], "Fixed commit": "6f6a073d26cb9fe9f83709146aff5a306d89f24a", "Url": "https://api.github.com/repos/kkadalip/Java-proov", "Date": "2016-01-12T14:40:58Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getCause()) instanceof java.lang.IllegalStateException) { if (org.overlord.rtgov.internal.activity.server.jee.JEEActivityServer.LOG.isLoggable(java.util.logging.Level.FINEST)) { org.overlord.rtgov.internal.activity.server.jee.JEEActivityServer.LOG.log(java.util.logging.Level.FINEST, \"UserTransaction not available - probably due to container managed txn\", e); } }else { org.overlord.rtgov.internal.activity.server.jee.JEEActivityServer.LOG.log(java.util.logging.Level.SEVERE, \"Failed to get UserTransaction\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/7857/buggy-version/modules.activity-management.activity-server-jee.src.main.java.org.overlord.rtgov.internal.activity.server.jee.JEEActivityServer.java", "BodyUseAPI": ["java.util.logging.Logger.log(java.util.logging.Level,java.lang.String,javax.naming.NamingException)", "java.util.logging.Logger.log(java.util.logging.Level,java.lang.String,javax.naming.NamingException)"], "Fixed commit": "065275fe93e6edcaab328b08d27e56c0fedd1654", "Url": "https://api.github.com/repos/objectiser/rtgov", "Date": "2014-11-07T20:08:08Z"},
{"Line": "=>354", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.telerik.dts.ClassRepo.findClass(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (clazz1 != null) { java.lang.String className = clazz1.getClassName(); if ((((className.equals(\"java.util.Iterator\")) || (className.equals(\"android.animation.TypeEvaluator\"))) || (className.equals(\"java.lang.Comparable\"))) || (className.startsWith(\"java.util.function\"))) { continue; } interfaces.add(clazz1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/5738/buggy-version/dts-generator.src.main.java.com.telerik.dts.DtsApi.java", "BodyUseAPI": ["java.util.List<org.apache.bcel.classfile.JavaClass>.add(org.apache.bcel.classfile.JavaClass)", "org.apache.bcel.classfile.JavaClass.getClassName()"], "Fixed commit": "1dae5329050ca198977102400cd2a14588f840af", "Url": "https://api.github.com/repos/roblav96/android-dts-generator", "Date": "2016-11-11T03:08:59Z"},
{"Line": "=>406", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(net.wequick.small.ApkBundleLauncher.sLoadedActivities.containsKey(tempActivityName))) { throw new android.content.ActivityNotFoundException(((((\"Unable to find explicit activity class { \" + activityName) + \"or\") + tempActivityName) + \"}\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/1241/buggy-version/Android.DevSample.small.src.main.java.net.wequick.small.ApkBundleLauncher.java", "BodyUseAPI": [], "Fixed commit": "287fa2088f527aae7bea1e3bd1c0d66dff7ff97a", "Url": "https://api.github.com/repos/wequick/Small", "Date": "2016-03-29T08:37:38Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Throwable.getStackTrace()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((existingStack.length) >= (stack.length)) { boolean foundDifference = false; for (int i = 0; i < (stack.length); i++) { if (!(existingStack[(((existingStack.length) - i) + 1)].equals(stack[(((stack.length) - i) + 1)]))) { foundDifference = true; break; } } if (foundDifference) { return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/2522/buggy-version/hystrix-core.src.main.java.com.netflix.hystrix.util.ExceptionThreadingUtility.java", "BodyUseAPI": ["java.lang.StackTraceElement.equals(java.lang.StackTraceElement)"], "Fixed commit": "61320cd69bcca8b1e9250e5997a65be5466b0b55", "Url": "https://api.github.com/repos/wpongra/Hystrix", "Date": "2013-11-05T14:18:23Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Pattern.matcher(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (integerParser.group().trim().equals(\"\")) { integerParser = java.util.regex.Pattern.compile(\"\\\\d*\").matcher(newNotificationPeriod); assert integerParser.find(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/2757/buggy-version/src.main.java.teamthree.twodo.commons.core.Config.java", "BodyUseAPI": [], "Fixed commit": "dcb6fa3c4e219d8cbfa1658dca71dba38c395fc1", "Url": "https://api.github.com/repos/yogamurti/main", "Date": "2017-07-22T08:36:00Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Param.Subghz_Tab_Enb) == true) { SettingFrame.setSelectedIndex(java.lang.Integer.parseInt(properties.getProperty(\"selectedTab\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/7148/buggy-version/src.com.lapis_semi.lazurite.LazuriteGraph.LazuriteGraph.java", "BodyUseAPI": [], "Fixed commit": "d4e216b623a3db3ae5693875fc3fa8f929ec32ab", "Url": "https://api.github.com/repos/LAPIS-Lazurite/LazuriteGraph", "Date": "2016-03-28T23:42:22Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.mybus.requirements.DeviceRequirementsChecker.isNetworkAvailable(this)) { com.mybus.model.BusRouteResult busRouteResult = mViewPagerAdapter.getItem(tab.getPosition()).getBusRouteResult(); performRoadSearch(busRouteResult); }else { android.widget.Toast.makeText(this, R.string.toast_no_internet, Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/1537/buggy-version/app.src.main.java.com.mybus.activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "77d4ca6b6643bedc7f8c1652bf1b18607979f8ab", "Url": "https://api.github.com/repos/sparkdigital/mybus-android", "Date": "2016-08-26T19:16:09Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((startDate) != null) && ((endDate) != null)) { result = java.lang.String.format(TO_STRING, content, venue, detail, taskType, isImportant, startDate.toString(), endDate.toString(), creationDate.toString()); }else { result = java.lang.String.format(TO_STRING, content, venue, detail, taskType, isImportant, null, null, creationDate.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/6474/buggy-version/src.common.Task.java", "BodyUseAPI": [], "Fixed commit": "edb013a080e4eda7e24c258212618cbfd3bedd9e", "Url": "https://api.github.com/repos/cs2103jan2016-t16-2j/main", "Date": "2016-04-06T04:58:58Z"},
{"Line": "=>1022", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (target instanceof org.springframework.integration.gateway.MessagingGatewaySupport) { outputChannel = ((org.springframework.integration.gateway.MessagingGatewaySupport) (target)).getRequestChannel(); }else { outputChannel = org.springframework.integration.monitor.IntegrationMBeanExporter.getField(target, \"outputChannel\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/5131/buggy-version/spring-integration-jmx.src.main.java.org.springframework.integration.monitor.IntegrationMBeanExporter.java", "BodyUseAPI": ["org.springframework.integration.monitor.IntegrationMBeanExporter.getField(java.lang.Object,java.lang.String)"], "Fixed commit": "148ca5c60a8d319ef34d3b030b9d567bf2015fa5", "Url": "https://api.github.com/repos/garyrussell/spring-integration", "Date": "2015-10-23T22:27:46Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (urlString == null) { return new de.herrlock.manga.util.configuration.Configuration.ProxyStorage(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/5248/buggy-version/MangaLib.src.main.java.de.herrlock.manga.util.configuration.Configuration.java", "BodyUseAPI": [], "Fixed commit": "e1ff9c445a8b176b36e14533a02ec0497c4f39fe", "Url": "https://api.github.com/repos/herrlock/Manga", "Date": "2016-06-18T21:53:13Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (_createFrame.randomize) { for (int i = 0; i < (vecs.length); ++i) vecs[i] = _v.makeZero(_domain[i]); }else { for (int i = 0; i < (vecs.length); ++i) vecs[i] = _v.makeCon(_createFrame.value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/8487/buggy-version/h2o-core.src.main.java.water.fvec.FrameCreator.java", "BodyUseAPI": ["water.fvec.Vec.makeCon(_createFrame.value)"], "Fixed commit": "87269501f68765451351b89dc2d732b5ac4580e1", "Url": "https://api.github.com/repos/h2oai/h2o-3", "Date": "2015-01-16T21:57:52Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (material == null) { plugin.getLoggerUtility().log(\"Adding: null \", LoggerUtility.Level.DEBUG); try { material = org.bukkit.Material.getMaterial(java.lang.Integer.parseInt(id[0])); } catch (java.lang.Exception e) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/8412/buggy-version/ItemLimit.src.de.ibhh.ItemLimit.listeners.ItemLimitListener.java", "BodyUseAPI": [], "Fixed commit": "5cc27f0011b8891ac518c3ba89d7f67d9acc5166", "Url": "https://api.github.com/repos/ibhh/ItemLimit", "Date": "2013-03-25T16:43:34Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (material == null) { plugin.getLoggerUtility().log(\"Adding: null \", LoggerUtility.Level.DEBUG); try { material = org.bukkit.Material.getMaterial(java.lang.Integer.parseInt(id[0])); } catch (java.lang.Exception e) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/8412/buggy-version/ItemLimit.src.de.ibhh.ItemLimit.listeners.ItemLimitListener.java", "BodyUseAPI": [], "Fixed commit": "5cc27f0011b8891ac518c3ba89d7f67d9acc5166", "Url": "https://api.github.com/repos/ibhh/ItemLimit", "Date": "2013-03-25T16:43:34Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (defaultProject) { org.geosdi.geoplatform.core.model.GPAccountProject oldDefault = accountProjectDao.findDefaultProjectByAccountID(account.getId()); if (oldDefault != null) { oldDefault.setDefaultProject(false); accountProjectDao.merge(oldDefault); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/7445/buggy-version/geoplatform-services.geoplatform-ws-core.geoplatform-ws-core-impl.src.main.java.org.geosdi.geoplatform.services.ProjectServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "87b07c107a7d0c5a17a0e2638b3b9630bbf2bd1f", "Url": "https://api.github.com/repos/glascaleia/geo-platform", "Date": "2012-09-28T18:24:45Z"},
{"Line": "=>357", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (videoP.exists()) { onShareVideo(); java.lang.System.out.println((\"IL VIDEO ESISTE: \" + (videoP.getAbsolutePath()))); }else { android.widget.Toast.makeText(this, \"Prima esporta in video lo sceneggiato\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/1547/buggy-version/app.src.main.java.starklabs.sivodim.Drama.View.ListChapterActivity.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)", "java.io.File.getAbsolutePath()"], "Fixed commit": "934001b832319bd1ac111736330bc7db5ab77aad", "Url": "https://api.github.com/repos/Stark-Labs/SiVoDiM-Libraries", "Date": "2016-07-07T20:31:36Z"},
{"Line": "=>482", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (specifiedRacks.isEmpty()) { groupRacks.setRacks(new java.lang.String[0]); }else { groupRacks.setRacks(IntersecRacks.toArray(new java.lang.String[IntersecRacks.size()])); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/98/buggy-version/server.serengeti.src.main.java.com.vmware.bdd.entity.NodeGroupEntity.java", "BodyUseAPI": [], "Fixed commit": "6d326c49abbfe4b6af571cde14c64603ee432090", "Url": "https://api.github.com/repos/vmware-serengeti/serengeti-ws", "Date": "2012-11-19T10:40:54Z"},
{"Line": "=>322", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (specifiedRacks.isEmpty()) { r.setRacks(new java.lang.String[0]); }else { r.setRacks(intersecRacks.toArray(new java.lang.String[intersecRacks.size()])); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/98/buggy-version/server.serengeti.src.main.java.com.vmware.bdd.manager.ClusterConfigManager.java", "BodyUseAPI": [], "Fixed commit": "6d326c49abbfe4b6af571cde14c64603ee432090", "Url": "https://api.github.com/repos/vmware-serengeti/serengeti-ws", "Date": "2012-11-19T10:40:54Z"},
{"Line": "=>2457", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (stakeholderDenominator == 0) { stakeholderDenominator = 1; }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/3578/buggy-version/src.mySTAT.STATUI.java", "BodyUseAPI": [], "Fixed commit": "dcef75b4e72e4d9d7107bae8f09f078d5ac15546", "Url": "https://api.github.com/repos/CS411Blue/STAT", "Date": "2013-12-12T14:01:19Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((1 + scaleS) - idx) < (dataS.length)) { dataS[((1 + scaleS) - idx)] = ((byte) (255 & (a % 10))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/2196/buggy-version/src.java.javay.math.BigNum.java", "BodyUseAPI": [], "Fixed commit": "a6168cf6ecd1ca1aaea90e11f894831764247e16", "Url": "https://api.github.com/repos/dubenju/javay", "Date": "2015-12-04T10:58:31Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((1 + scaleS) - idx) < (dataS.length)) { dataS[((1 + scaleS) - idx)] = ((byte) (255 & (a % 10))); carryS[((1 + scaleS) - idx)] = carry; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/2196/buggy-version/src.java.javay.math.BigNum.java", "BodyUseAPI": [], "Fixed commit": "a6168cf6ecd1ca1aaea90e11f894831764247e16", "Url": "https://api.github.com/repos/dubenju/javay", "Date": "2015-12-04T10:58:31Z"},
{"Line": "=>636", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.Math.abs(((v2.y) - (v1.y)))) > 1) dist--;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/6664/buggy-version/src.com.ahsgaming.valleyofbones.map.HexMap.java", "BodyUseAPI": [], "Fixed commit": "dc1877f4ba74f8a746f189812938424feb6a99c2", "Url": "https://api.github.com/repos/fbcouch/valley-of-bones", "Date": "2014-01-06T00:39:09Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((soundManager) != null) soundManager.dispose();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/6664/buggy-version/src.com.ahsgaming.valleyofbones.VOBGame.java", "BodyUseAPI": [], "Fixed commit": "dc1877f4ba74f8a746f189812938424feb6a99c2", "Url": "https://api.github.com/repos/fbcouch/valley-of-bones", "Date": "2014-01-06T00:39:09Z"},
{"Line": "=>353", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((parent.getKey(0)) != (current.getKey(0))) { current.shiftRecordsRight(parent.getNumKeys()); current.migrateEntry(0, parent, 0); current.increaseNumKeys(parent.getNumKeys()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/1296/buggy-version/src.org.zoodb.internal.server.index.btree.BTree.java", "BodyUseAPI": ["T.getNumKeys()", "T.increaseNumKeys(parent.getNumKeys())", "T.migrateEntry(int,T,int)", "T.getNumKeys()", "T.shiftRecordsRight(parent.getNumKeys())"], "Fixed commit": "b05562f3644068ec3155677b537bc32af0ebc69e", "Url": "https://api.github.com/repos/tzaeschke/zoodb", "Date": "2014-04-14T13:36:36Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSeconds) != null) { mSeconds.setVisibility((isSecondHandEnabled() ? android.view.View.VISIBLE : android.view.View.GONE)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/2150/buggy-version/clock-view.src.main.java.com.xlythe.view.clock.ClockView.java", "BodyUseAPI": [], "Fixed commit": "0513cde70b9992bbcc618761b3dde67ca01d204b", "Url": "https://api.github.com/repos/Xlythe/ClockView", "Date": "2016-11-13T22:09:16Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (players == null) { this.players = new java.util.LinkedList<model.player.IPlayer>(); }else { this.players = new java.util.LinkedList<model.player.IPlayer>(players); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/2110/buggy-version/ProjectDragon.src.model.game.Table.java", "BodyUseAPI": [], "Fixed commit": "e9583138c6bd377999e9fb5a1d28eee8940d71e9", "Url": "https://api.github.com/repos/Krobbe/Dragon", "Date": "2012-05-18T12:24:28Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mViewMode) != (com.example.android.emailtemplate.TemplateRecyclerFragment.NORMAL_VIEW)) { menuItem.setVisible(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/1877/buggy-version/EmailTemplate.app.src.main.java.com.example.android.emailtemplate.TemplateRecyclerFragment.java", "BodyUseAPI": [], "Fixed commit": "9885c2d2d31b41ae0cb5f09db3f5244a7ea7f200", "Url": "https://api.github.com/repos/huongnguyenthao/EmailTemplate", "Date": "2015-09-22T03:45:07Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.facebook.FacebookSdk.isInitialized())) { com.facebook.FacebookSdk.sdkInitialize(getApplicationContext()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/2547/buggy-version/app.src.main.java.de.querra.mobile.runlazydroid.activities.BaseNavigationActivity.java", "BodyUseAPI": [], "Fixed commit": "dbad5afc07f6426ef2b470c008d2dcd7e04ee2d2", "Url": "https://api.github.com/repos/Querra/run-lazy-droid", "Date": "2016-10-05T12:09:19Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.facebook.FacebookSdk.isInitialized())) { com.facebook.FacebookSdk.sdkInitialize(getApplicationContext()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/2547/buggy-version/app.src.main.java.de.querra.mobile.runlazydroid.activities.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "dbad5afc07f6426ef2b470c008d2dcd7e04ee2d2", "Url": "https://api.github.com/repos/Querra/run-lazy-droid", "Date": "2016-10-05T12:09:19Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.facebook.FacebookSdk.isInitialized())) { com.facebook.FacebookSdk.sdkInitialize(getApplicationContext()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/2547/buggy-version/app.src.main.java.de.querra.mobile.runlazydroid.activities.StartActivity.java", "BodyUseAPI": [], "Fixed commit": "dbad5afc07f6426ef2b470c008d2dcd7e04ee2d2", "Url": "https://api.github.com/repos/Querra/run-lazy-droid", "Date": "2016-10-05T12:09:19Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((latitude == 200) && (longitude == 200))) { params.put(\"coordinate\", coordinate); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/2078/buggy-version/app.src.main.java.com.example.kevin.mapapplication.model.ConnectionManager.java", "BodyUseAPI": [], "Fixed commit": "e8808f79bc3b1b5b55f8937d11ccb374fac4c343", "Url": "https://api.github.com/repos/jnhujnhu/InTime_Client", "Date": "2016-06-12T05:51:57Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((latitude == 200) && (longitude == 200))) { params.put(\"coordinate\", coordinate); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/2078/buggy-version/app.src.main.java.com.example.kevin.mapapplication.model.ConnectionManager.java", "BodyUseAPI": [], "Fixed commit": "e8808f79bc3b1b5b55f8937d11ccb374fac4c343", "Url": "https://api.github.com/repos/jnhujnhu/InTime_Client", "Date": "2016-06-12T05:51:57Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.activiti.engine.IdentityService.getUserPicture(org.activiti.app.security.SecurityUtils.getCurrentUserId())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (picture == null) { try { byte[] pictureBytes = org.activiti.engine.impl.util.IoUtil.readInputStream(this.getClass().getClassLoader().getResourceAsStream(\"../../images/activiti-logo.png\"), \"default-logo\"); picture = new org.activiti.engine.identity.Picture(pictureBytes, \"image/png\"); } catch (java.lang.Exception e) { throw new org.activiti.app.service.exception.InternalServerErrorException(\"Could not find default tenant logo\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/5638/buggy-version/modules.activiti-ui.activiti-app-rest.src.main.java.org.activiti.app.rest.idm.IdmProfileResource.java", "BodyUseAPI": [], "Fixed commit": "5e4cecf06175b6561eb884d611cfebef3fa57eb1", "Url": "https://api.github.com/repos/gotemkr/Activiti", "Date": "2017-03-17T09:31:28Z"},
{"Line": "=>987", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(displayed)) { statusDisplay.setText(\"Ephemeris Update Stopped\"); displayed = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/6702/buggy-version/src.Main.WWJApplet.java", "BodyUseAPI": [], "Fixed commit": "41b26d8c3dff933ea3c1a50c4e9461ec0cc01ea7", "Url": "https://api.github.com/repos/mdmzero0/WorldWind_Applet", "Date": "2011-07-22T17:46:33Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ask.getModel().getChoosenFiles()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((choosen.size()) == 0) java.lang.System.exit(0); else opt.setFiles(ask.getModel().getChoosenFiles());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/7764/buggy-version/druzy.jmita.JMita2.java", "BodyUseAPI": [], "Fixed commit": "e54b6ff7c5faead02df212a4db849c2bbe23f5d8", "Url": "https://api.github.com/repos/druzy/jmita2", "Date": "2015-10-17T08:51:04Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.myLocationOverlay) != null) this.myLocationOverlay.enableMyLocation(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/5292/buggy-version/src.main.java.org.mapsforge.applications.android.mapbg.LocationOverlayMapViewer.java", "BodyUseAPI": [], "Fixed commit": "6f5ce5e8e67374a2501d822704bfdf95fceae03f", "Url": "https://api.github.com/repos/sytolk/mapsforge-bg", "Date": "2014-03-21T12:16:23Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.newsapp.model.NewsManager.getPage(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (jsonText == null) { tagPageNum[tagInt] = 1; jsonText = getPage(getPage((((((com.example.newsapp.model.NewsManager.baseUrl) + \"/latest?pageNo=\") + (tagPageNum[tagInt])) + \"&pageSize=10&category=\") + tagInt))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/6119/buggy-version/app.src.main.java.com.example.newsapp.model.NewsManager.java", "BodyUseAPI": [], "Fixed commit": "9ea4b4ffa578cfaf3612b0b124b6bc2dea4f0b71", "Url": "https://api.github.com/repos/datawine/NewsApp", "Date": "2017-09-13T17:53:12Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.newsapp.model.NewsManager.getPage(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (jsonText == null) { tagPageNum[tagInt] = 1; jsonText = getPage(((((com.example.newsapp.model.NewsManager.baseUrl) + \"/latest?pageNo=\") + (tagPageNum[tagInt])) + \"&pageSize=10\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/6119/buggy-version/app.src.main.java.com.example.newsapp.model.NewsManager.java", "BodyUseAPI": [], "Fixed commit": "9ea4b4ffa578cfaf3612b0b124b6bc2dea4f0b71", "Url": "https://api.github.com/repos/datawine/NewsApp", "Date": "2017-09-13T17:53:12Z"},
{"Line": "=>489", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (rendererModel.hasParameter(org.openscience.cdk.renderer.generators.BasicSceneGenerator.UseAntiAliasing.class)) { if (((boolean) (rendererModel.getParameter(org.openscience.cdk.renderer.generators.BasicSceneGenerator.UseAntiAliasing.class).getValue()))) { g.setRenderingHint(java.awt.RenderingHints.KEY_ANTIALIASING, java.awt.RenderingHints.VALUE_ANTIALIAS_ON); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/4009/buggy-version/src.main.org.openscience.cdk.renderer.visitor.AWTDrawVisitor.java", "BodyUseAPI": ["org.openscience.cdk.renderer.RendererModel.getParameter(java.lang.Class)", "rendererModel.getParameter(org.openscience.cdk.renderer.generators.BasicSceneGenerator.UseAntiAliasing.class).getValue()"], "Fixed commit": "fb1063eed9830463657c29f1b2470ed4f4c1107a", "Url": "https://api.github.com/repos/cdk/cdk", "Date": "2011-06-16T21:29:47Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (showText) { info.blockchain.wallet.model.ItemAccount item = getItem(position); binding.text.setText(item.label); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/4447/buggy-version/app.src.main.java.info.blockchain.wallet.view.SendAddressAdapter.java", "BodyUseAPI": [], "Fixed commit": "999ee2649a0d1f0c59981e09f8034b72bdb680c7", "Url": "https://api.github.com/repos/blockchain/My-Wallet-V3-Android", "Date": "2016-08-12T15:59:23Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((edu.temple.tuhub.MainActivity.fraghold[2]) != null) { if (edu.temple.tuhub.MainActivity.fraghold[2].equals(fragment)) { if ((cf) != null) { getFragmentManager().beginTransaction().remove(cf).commit(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/6467/buggy-version/app.src.main.java.edu.temple.tuhub.MainActivity.java", "BodyUseAPI": ["edu.temple.tuhub.MainActivity.fraghold[2].equals(android.app.Fragment)"], "Fixed commit": "6050db4717757694e81ef7328a0e108b440766d2", "Url": "https://api.github.com/repos/tuhub/TUHub-Android", "Date": "2017-04-10T15:13:15Z"},
{"Line": "=>508", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, pl.betoncraft.betonquest.config.ConfigPackage>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (pack == null) { pack = pl.betoncraft.betonquest.config.Config.getPackages().get(\"default\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/5955/buggy-version/src.main.java.pl.betoncraft.betonquest.config.Config.java", "BodyUseAPI": [], "Fixed commit": "2de20dd185631bb055f434e2ff34d683ab50b8c5", "Url": "https://api.github.com/repos/Co0sh/BetonQuest", "Date": "2017-11-01T20:41:35Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<?>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (next instanceof java.lang.Iterable<?>) next = ((java.lang.Iterable) (next)).iterator();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/8362/buggy-version/commons.src.main.java.com.orientechnologies.common.collection.OMultiCollectionIterator.java", "BodyUseAPI": [], "Fixed commit": "9f659291b644645f6c7057b99374b2a7c3215d40", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2014-10-02T17:08:04Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["database.DBSet.getInstance().getBlogPostMap().get((blogOpt == null ? \"QORA\" : blogOpt))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (list != null) { for (byte[] blogArbTx : list) { qora.transaction.Transaction transaction = controller.Controller.getInstance().getTransaction(blogArbTx); if (transaction != null) { blogPostTX.add(((qora.transaction.ArbitraryTransaction) (transaction))); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/629/buggy-version/Qora.src.utils.BlogUtils.java", "BodyUseAPI": [], "Fixed commit": "f739a1142bddd710f47f09fdacadd896e0c58c8c", "Url": "https://api.github.com/repos/Qoracoin/Qora", "Date": "2015-07-16T22:04:59Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ldc.value()) instanceof java.lang.Integer) { int v = ((java.lang.Integer) (ldc.value())); if (((java.lang.Math.abs(v)) & 1048575) != (java.lang.Math.abs(v))) { flag.set(true); } }else { long v = ((java.lang.Long) (ldc.value())); if (((java.lang.Math.abs(v)) & -1) != (java.lang.Math.abs(v))) { flag.set(true); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/2604/buggy-version/src.alterrs.deob.trans.ControlFlowDeobfuscation.java", "BodyUseAPI": ["EDU.purdue.cs.bloat.tree.ConstantExpr.value()", "EDU.purdue.cs.bloat.tree.ConstantExpr.value()"], "Fixed commit": "288f971f0aecf21c9b044dfed50585dc721f45a7", "Url": "https://api.github.com/repos/AlterRS/Deobfuscator", "Date": "2013-02-23T00:08:01Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(xsdHeaders.contains(\"filename\"))) { xsdHeaders.add(\"filename\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/5910/buggy-version/src.project_tortoise.XSDParser.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "683ce1b0eeb35f51f241e5284df1e0b87c4ff503", "Url": "https://api.github.com/repos/vincetang/XMLParser", "Date": "2016-06-20T01:29:50Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(xsdHeaders.contains(\"element type\"))) { xsdHeaders.add(\"element type\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/5910/buggy-version/src.project_tortoise.XSDParser.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "683ce1b0eeb35f51f241e5284df1e0b87c4ff503", "Url": "https://api.github.com/repos/vincetang/XMLParser", "Date": "2016-06-20T01:29:50Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mProdcData) == null) || ((mProdcData.getCount()) == 0)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/2147/buggy-version/app.src.main.java.com.example.android.inventory.ProductLoader.java", "BodyUseAPI": [], "Fixed commit": "d93054fa58a9f1132646df19205a60607d1e5b0b", "Url": "https://api.github.com/repos/Ignisrex/Inventory", "Date": "2016-08-25T18:17:21Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.htmlcleaner.TagNode.getAllElements(boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((rowElements.length) > 0) { startsWithHeader = \"10\".equals(rowElements[0].getAttributeByName(\"rowspan\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/3252/buggy-version/src.main.java.edu.dnu.fpm.schedule.parser.ScheduleParser.java", "BodyUseAPI": ["rowElements[0].getAttributeByName(java.lang.String)", "java.lang.String.equals(rowElements[0].getAttributeByName(\"rowspan\"))"], "Fixed commit": "823e5328985f356ff026fbb2be4dd96eeb052f15", "Url": "https://api.github.com/repos/logart/fpm-schedule-parser", "Date": "2013-04-02T18:06:41Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((input.length()) < 8) { com.esotericsoftware.minlog.Log.error(\"Missing arguments\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/1699/buggy-version/src.zebradev.zebraviews.server.CommandInterpreter.java", "BodyUseAPI": [], "Fixed commit": "d7014f1aaebc9a841841f24517f93aab8355010f", "Url": "https://api.github.com/repos/AnimatedJuzz/ZebraViews-Server", "Date": "2014-06-21T17:57:04Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getStartElseEndDate()) == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/4342/buggy-version/src.main.java.jfdi.storage.apis.TaskAttributes.java", "BodyUseAPI": [], "Fixed commit": "4671b068a60226c7f08fac788254310133f5abe0", "Url": "https://api.github.com/repos/cs2103jan2016-w13-4j/main", "Date": "2016-03-24T17:53:27Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getStartElseEndDate()) == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/4342/buggy-version/src.main.java.jfdi.storage.apis.TaskAttributes.java", "BodyUseAPI": [], "Fixed commit": "4671b068a60226c7f08fac788254310133f5abe0", "Url": "https://api.github.com/repos/cs2103jan2016-w13-4j/main", "Date": "2016-03-24T17:53:27Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasChecked) { final android.app.AlertDialog.Builder adb = new android.app.AlertDialog.Builder(activity); adb.setTitle(\"Confirm?\"); adb.setMessage(\"Remove item(s)?\"); adb.setNegativeButton(\"Cancel\", null); adb.setPositiveButton(\"Ok\", new com.bbaf.mpos.inventory.ui.DialogOnClickListener(listView, activity)); adb.show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/4265/buggy-version/src.com.bbaf.mpos.inventory.ui.RemoveOnClickListener.java", "BodyUseAPI": [], "Fixed commit": "d76210280676e3351bf5fead97d61b43afeb5962", "Url": "https://api.github.com/repos/batmaster/MPOS", "Date": "2013-12-03T13:39:50Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!((((hallCoordinates.contains(new int[]{ x, y, 0 })) || (hallCoordinates.contains(new int[]{ x, y, 1 }))) || (hallCoordinates.contains(new int[]{ x, y, 2 }))) || (hallCoordinates.contains(new int[]{ x, y, 3 })))) { hallCoordinates.add(new int[]{ x, y, dir }); if (dir == 0) y--; if (dir == 1) y++; if (dir == 2) x--; if (dir == 3) x++; if (isTileInRoom(x, y)) { i = length; generateRoom = false; generateHall = true; }else { i = length; generateHall = false; generateRoom = false; } }else { i = length; generateHall = false; generateRoom = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/6684/buggy-version/dungeon-game-core.src.com.dungeon.game.generator.Rooms.java", "BodyUseAPI": ["java.util.ArrayList<int[]>.add(int[])"], "Fixed commit": "4d7b073691fe6995ecbf8c55caea6eaa9cb9dbc9", "Url": "https://api.github.com/repos/nxbt/dungeon-game", "Date": "2015-11-07T06:03:40Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<seedu.address.model.person.ReadOnlyPerson>.get(index.getZeroBased())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(groupMembers.contains(personToAdd))) { groupMembers.add(personToAdd); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/4507/buggy-version/src.main.java.seedu.address.logic.commands.CreateGroupCommand.java", "BodyUseAPI": ["java.util.List<seedu.address.model.person.ReadOnlyPerson>.add(seedu.address.model.person.ReadOnlyPerson)"], "Fixed commit": "65ea4904fcb7970bd04507037bbffb1d7ec8196c", "Url": "https://api.github.com/repos/eldonng/addressbook-level4", "Date": "2017-10-29T16:03:32Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.toIntExact(getPosition())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (position >= (content.length)) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/1271/buggy-version/core.src.main.java.org.mule.runtime.core.internal.streaming.bytes.ByteArrayCursorStream.java", "BodyUseAPI": [], "Fixed commit": "a8f102b7642bef17fef931ac3700c4a06aa3baf7", "Url": "https://api.github.com/repos/mulesoft/mule", "Date": "2017-10-10T03:36:29Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.os.Build.VERSION.SDK_INT) >= 19) { am.setExact(AlarmManager.RTC_WAKEUP, c.getTimeInMillis(), pi); }else { am.set(AlarmManager.RTC_WAKEUP, c.getTimeInMillis(), pi); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/3136/buggy-version/app.src.main.java.com.timekick.timekick.AlarmManagerBroadcastReceiver.java", "BodyUseAPI": [], "Fixed commit": "8c832929addb450af2baf26a5da2acff22ac1948", "Url": "https://api.github.com/repos/TimeKick/timekick-android", "Date": "2016-10-02T13:10:48Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.os.Build.VERSION.SDK_INT) >= 19) { am.setExact(AlarmManager.RTC_WAKEUP, ((java.lang.System.currentTimeMillis()) + (delay * 1000)), pi); }else { am.set(AlarmManager.RTC_WAKEUP, ((java.lang.System.currentTimeMillis()) + (delay * 1000)), pi); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/3136/buggy-version/app.src.main.java.com.timekick.timekick.AlarmManagerBroadcastReceiver.java", "BodyUseAPI": [], "Fixed commit": "8c832929addb450af2baf26a5da2acff22ac1948", "Url": "https://api.github.com/repos/TimeKick/timekick-android", "Date": "2016-10-02T13:10:48Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.os.Build.VERSION.SDK_INT) >= 19) { am.setExact(AlarmManager.RTC_WAKEUP, ((java.lang.System.currentTimeMillis()) + (repeatInterval * 1000)), pi); }else { am.set(AlarmManager.RTC_WAKEUP, ((java.lang.System.currentTimeMillis()) + (repeatInterval * 1000)), pi); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/3136/buggy-version/app.src.main.java.com.timekick.timekick.AlarmManagerBroadcastReceiver.java", "BodyUseAPI": [], "Fixed commit": "8c832929addb450af2baf26a5da2acff22ac1948", "Url": "https://api.github.com/repos/TimeKick/timekick-android", "Date": "2016-10-02T13:10:48Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.os.Build.VERSION.SDK_INT) >= 19) { am.setExact(AlarmManager.RTC_WAKEUP, (target - (10 * 1000)), pi); }else { am.set(AlarmManager.RTC_WAKEUP, (target - (10 * 1000)), pi); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/3136/buggy-version/app.src.main.java.com.timekick.timekick.AlarmManagerBroadcastReceiver.java", "BodyUseAPI": [], "Fixed commit": "8c832929addb450af2baf26a5da2acff22ac1948", "Url": "https://api.github.com/repos/TimeKick/timekick-android", "Date": "2016-10-02T13:10:48Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (create.getTableName().contains(xlinkStmt.getTableName())) { matchValue++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/8809/buggy-version/src.main.java.org.openengsb.xlinkSQLViewer.xlink.matching.MatchingLogic.java", "BodyUseAPI": [], "Fixed commit": "e8fff6bce7d889b2e6d15c3f77c3d9e7eb155918", "Url": "https://api.github.com/repos/ChristophPrybila/sample-xlink-java-client", "Date": "2013-03-18T11:45:58Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((adapter.size()) <= 0) || (android.text.TextUtils.isEmpty(adapter.get(0).getUrl()))) { party.danyang.nationalgeographic.utils.Utils.makeSnackBar(binding.getRoot(), R.string.exception_content_null, true); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/7697/buggy-version/app.src.main.java.party.danyang.nationalgeographic.ui.DetailActivity.java", "BodyUseAPI": [], "Fixed commit": "f411e6309bf16b698537506effe83fe318106ca4", "Url": "https://api.github.com/repos/dreamcontinue/Lavender", "Date": "2016-09-18T09:15:14Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(worker.isAlive())) worker.start();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/5950/buggy-version/mlv.src.ch.gapa.master.mlv.view.GraphView.java", "BodyUseAPI": ["ch.gapa.master.mlv.view.worker.GraphWorker.start()"], "Fixed commit": "7adfd6fe73bfec75c726159005682cf0daf8ebee", "Url": "https://api.github.com/repos/Perdjesk/magnificent-lastfm-visualizer", "Date": "2013-01-08T18:32:56Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ok) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/8124/buggy-version/src.database.ThresholdAlgorithm.java", "BodyUseAPI": [], "Fixed commit": "163c909e8852ddc49159bd0c6da9f39f23ac67ba", "Url": "https://api.github.com/repos/Soapfedan/HackatonEcapital", "Date": "2017-10-20T22:33:58Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.terasology.world.WorldProvider.getBlock(blockPos.x,blockPos.y,blockPos.z)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (block.getBlockFamily().equals(adjBlock.getBlockFamily())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/4940/buggy-version/engine.src.main.java.org.terasology.world.block.items.BlockItemSystem.java", "BodyUseAPI": [], "Fixed commit": "bb15485219dd79e4421bb89423788665949e2337", "Url": "https://api.github.com/repos/oniatus/Terasology", "Date": "2016-03-12T19:15:38Z"},
{"Line": "=>363", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["kr.ac.kaist.hrhrp.quiz.GetQuizImages.getQuizImages(int,java.lang.String,java.util.ArrayList<kr.ac.kaist.hrhrp.type.Image>,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (wrongIdx < (selectedImages.get(\"wrong\").size())) { kr.ac.kaist.hrhrp.type.Image image = selectedImages.get(\"wrong\").get((wrongIdx++)); selections[i] = image.getUrl(); if ((image.getPersons().size()) > 0) { selections_faces[i] = image.getPersons().get(0).getFaces().get(0).getFaceId(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/4985/buggy-version/HRHRP.src.kr.ac.kaist.hrhrp.quiz.QuizGen.java", "BodyUseAPI": ["selectedImages.get(\"wrong\").get(int)", "java.util.HashMap<java.lang.String, java.util.ArrayList<kr.ac.kaist.hrhrp.type.Image>>.get(java.lang.String)"], "Fixed commit": "1e46a8a80a1ce174567b511df86bccc29c9fc696", "Url": "https://api.github.com/repos/ghsdh3409/hrhrp-server", "Date": "2015-04-08T08:29:44Z"},
{"Line": "=>328", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["kr.ac.kaist.hrhrp.quiz.GetQuizImages.getQuizImages(int,java.lang.String,java.util.ArrayList<kr.ac.kaist.hrhrp.type.Image>,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (wrongIdx < (selectedImages.get(\"wrong\").size())) { kr.ac.kaist.hrhrp.type.Image image = selectedImages.get(\"wrong\").get((wrongIdx++)); selections[i] = image.getUrl(); if ((image.getPersons().size()) > 0) { selections_faces[i] = image.getPersons().get(0).getFaces().get(0).getFaceId(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/4985/buggy-version/HRHRP.src.kr.ac.kaist.hrhrp.quiz.QuizGen.java", "BodyUseAPI": ["selectedImages.get(\"wrong\").get(int)", "java.util.HashMap<java.lang.String, java.util.ArrayList<kr.ac.kaist.hrhrp.type.Image>>.get(java.lang.String)"], "Fixed commit": "1e46a8a80a1ce174567b511df86bccc29c9fc696", "Url": "https://api.github.com/repos/ghsdh3409/hrhrp-server", "Date": "2015-04-08T08:29:44Z"},
{"Line": "=>923", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isChangeVpool) { vplexVirtualVolume = changeVpoolVolume; }else { vplexVirtualVolume = this.getVPlexVirtualVolume(volumes); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/5584/buggy-version/apisvc.src.main.java.com.emc.storageos.api.service.impl.resource.RPBlockServiceApiImpl.java", "BodyUseAPI": [], "Fixed commit": "9b57573a53123236e22d3ba0f329629baa099739", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2015-09-02T19:18:27Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sFile.exists()) && (sFile.isFile())) { tryLoad = true; }else { sFile.getParentFile().mkdirs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/5502/buggy-version/src.main.java.edu.kennesaw.cs4850.docaudit.Main.java", "BodyUseAPI": ["java.io.File.getParentFile()", "java.io.File.mkdirs()"], "Fixed commit": "ed224cc89e99fab9e0a498fbd2623574eef51ef1", "Url": "https://api.github.com/repos/rwhitak3/DocAudit", "Date": "2017-11-25T02:23:58Z"},
{"Line": "=>424", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((java.lang.Double.isInfinite(minValue)) || (java.lang.Double.isNaN(minValue))) || (java.lang.Double.isInfinite(maxValue))) || (java.lang.Double.isNaN(maxValue))) { throw new java.lang.RuntimeException(\"Bad values in trace file, can't calibrate\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/2323/buggy-version/src.dr.gui.chart.Axis.java", "BodyUseAPI": [], "Fixed commit": "e31e119f7c731ad414825fa694998b0370df5272", "Url": "https://api.github.com/repos/beast-dev/beast-mcmc", "Date": "2009-04-18T04:12:37Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (email.isAnonymous()) identityConfig = configuration; else identityConfig = senderIdentity.getWrappedConfig(configuration);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/571/buggy-version/src.main.java.i2p.bote.service.OutboxProcessor.java", "BodyUseAPI": [], "Fixed commit": "c910e17f6c35f0d7bfef3fc4b7c41fbdccea7e85", "Url": "https://api.github.com/repos/i2p/i2p.i2p-bote", "Date": "2015-08-20T11:52:09Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Double.parseDouble(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (value >= 0) { jTable1.setValueAt(jTextField1.getText(), (++(tablePosition)), 0); jTable1.setValueAt(java.lang.String.format(\"%.2f\", value), tablePosition, 1); total += value; jLabel8.setText(java.lang.String.format(\"%.2f\", total)); if ((tablePosition) == ((jTable1.getRowCount()) - 1)) { javax.swing.table.DefaultTableModel model = ((javax.swing.table.DefaultTableModel) (jTable1.getModel())); model.addRow(new java.lang.Object[]{ null, null, null }); } jTextField1.setText(\"\"); jTextField2.setText(\"\"); }else { int result; result = javax.swing.JOptionPane.showConfirmDialog(this, \"Are you sure you need to add negative value?\", \"Billing\", javax.swing.JOptionPane.OK_CANCEL_OPTION); if (result == 0) { jTable1.setValueAt(jTextField1.getText(), (++(tablePosition)), 0); jTable1.setValueAt(java.lang.String.format(\"%.2f\", value), tablePosition, 1); total += value; jLabel8.setText(java.lang.String.format(\"%.2f\", total)); if ((tablePosition) == ((jTable1.getRowCount()) - 1)) { javax.swing.table.DefaultTableModel model = ((javax.swing.table.DefaultTableModel) (jTable1.getModel())); model.addRow(new java.lang.Object[]{ null, null, null }); } jTextField1.setText(\"\"); jTextField2.setText(\"\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/851/buggy-version/src.freemrs.BillingInterface.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,double)", "java.lang.String.format(java.lang.String,double)", "javax.swing.JTable.setValueAt(java.lang.String,int,int)", "javax.swing.JTable.setValueAt(java.lang.String,int,int)"], "Fixed commit": "13fd46109930f70669a9d58ed16ccf60bcdfb044", "Url": "https://api.github.com/repos/nuwanprabhath/freeMRS", "Date": "2014-09-18T03:24:52Z"},
{"Line": "=>296", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newClip.equals(topClipInStack)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/4324/buggy-version/app.src.main.java.com.catchingnow.tinyclipboardmanager.Storage.java", "BodyUseAPI": [], "Fixed commit": "d238d09c3724f376a043ccce17e7df93bbd2aecc", "Url": "https://api.github.com/repos/heruoxin/Clip-Stack", "Date": "2015-02-28T06:42:45Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (newClip.equals(oldClip)) { if (isImportant != 0) { java.util.List<com.catchingnow.tinyclipboardmanager.ClipObject> lookLikeClips = getClipHistory(oldClip); if ((lookLikeClips.size()) > 0) { for (com.catchingnow.tinyclipboardmanager.ClipObject clipObject : lookLikeClips) { if (clipObject.getText().equals(oldClip)) { clipObject.setStarred((isImportant == 1)); starredClip(clipObject); return; } } } } return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/4324/buggy-version/app.src.main.java.com.catchingnow.tinyclipboardmanager.Storage.java", "BodyUseAPI": ["com.catchingnow.tinyclipboardmanager.Storage.getClipHistory(java.lang.String)", "clipObject.getText().equals(java.lang.String)"], "Fixed commit": "d238d09c3724f376a043ccce17e7df93bbd2aecc", "Url": "https://api.github.com/repos/heruoxin/Clip-Stack", "Date": "2015-02-28T06:42:45Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mValueExtractor.isBundleNull()) { mRouter.openBuildPage(build, null); }else { java.lang.String buildTypeName = mValueExtractor.getName(); mRouter.openBuildPage(build, buildTypeName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/5905/buggy-version/app.src.main.java.com.github.vase4kin.teamcityapp.buildlist.presenter.BuildListPresenterImpl.java", "BodyUseAPI": ["com.github.vase4kin.teamcityapp.buildlist.presenter.BuildListPresenterImpl.getName()"], "Fixed commit": "e8061e897476b862bd9b2935877df135e159537f", "Url": "https://api.github.com/repos/vase4kin/TeamCityApp", "Date": "2017-02-20T09:53:53Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((previousCookingData) != null) { java.lang.String json = com.example.kerzak.cook4me.Serialization.GsonTon.getInstance().getGson().toJson(previousCookingData); myIntent.putExtra(\"json\", json); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/4083/buggy-version/app.src.main.java.com.example.kerzak.cook4me.Activities.CookingInfoActivity.java", "BodyUseAPI": [], "Fixed commit": "5725af91d29e91791b4c34c9355482c8a6aa775a", "Url": "https://api.github.com/repos/Kerzak1408/cook_for_me_client", "Date": "2017-06-24T21:06:33Z"},
{"Line": "=>1034", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.stratelia.webactiv.util.publication.model.PublicationDetail.getTargetValidatorIds()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (validatorIds != null) { for (java.lang.String validatorId : validatorIds) { if (com.silverpeas.util.StringUtil.isDefined(validatorNames)) { validatorNames += \", \"; } validatorNames += com.stratelia.webactiv.beans.admin.UserDetail.getById(validatorId).getDisplayedName(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/7849/buggy-version/ejb-core.publication.src.main.java.com.stratelia.webactiv.util.publication.model.PublicationDetail.java", "BodyUseAPI": [], "Fixed commit": "03279cf2e7069f2def801ec813869f99da1ba047", "Url": "https://api.github.com/repos/Silverpeas/Silverpeas-Core", "Date": "2016-07-11T09:57:07Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (alien4cloud.security.AuthorizationUtil.hasAuthorizationForEnvironment(env, alien4cloud.security.ApplicationEnvironmentRole.values())) { alien4cloud.paas.model.DeploymentStatus status = alien4cloud.paas.model.DeploymentStatus.UNKNOWN; try { status = applicationEnvironmentService.getStatus(env); } catch (alien4cloud.paas.exception.CloudDisabledException e) { log.debug(((((\"Getting status for the environment <\" + (env.getId())) + \"> failed because the associated cloud <\") + (env.getCloudId())) + \"> seems disabled. Returned status is UNKNOWN.\"), e); } environmentStatuses.put(env.getId(), new alien4cloud.rest.application.EnvironmentStatusDTO(env.getName(), status)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/121/buggy-version/alien4cloud-rest-api.src.main.java.alien4cloud.rest.application.ApplicationDeploymentController.java", "BodyUseAPI": ["alien4cloud.model.application.ApplicationEnvironment.getId()", "alien4cloud.model.application.ApplicationEnvironment.getId()", "alien4cloud.application.ApplicationEnvironmentService.getStatus(alien4cloud.model.application.ApplicationEnvironment)", "java.util.Map<java.lang.String, alien4cloud.rest.application.EnvironmentStatusDTO>.put(env.getId(),alien4cloud.rest.application.EnvironmentStatusDTO)", "alien4cloud.model.application.ApplicationEnvironment.getCloudId()", "alien4cloud.model.application.ApplicationEnvironment.getName()", "alien4cloud.rest.application.ApplicationDeploymentController.debug(((((\"Getting status for the environment <\" + (env.getId())) + \"> failed because the associated cloud <\") + (env.getCloudId())) + \"> seems disabled. Returned status is UNKNOWN.\"),alien4cloud.paas.exception.CloudDisabledException)"], "Fixed commit": "330a6212bcccd9b5b9f701f707ec2de3cdf72ef4", "Url": "https://api.github.com/repos/vuminhkh/alien4cloud", "Date": "2015-01-30T17:24:15Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((com.vanhal.progressiveautomation.ref.ToolHelper.tinkersType(tool.getItem())) == (com.vanhal.progressiveautomation.ref.ToolHelper.TYPE_HOE)) { tool.attemptDamageItem(1, com.vanhal.progressiveautomation.ref.ToolHelper.RND); }else { tool.getItem().onBlockDestroyed(tool, world, mineBlock, x, y, z, fakePlayer); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/8822/buggy-version/src.main.java.com.vanhal.progressiveautomation.ref.ToolHelper.java", "BodyUseAPI": ["tool.getItem().onBlockDestroyed(net.minecraft.item.ItemStack,net.minecraft.world.World,net.minecraft.block.Block,int,int,int,com.vanhal.progressiveautomation.util.PlayerFake)", "net.minecraft.item.ItemStack.getItem()", "net.minecraft.item.ItemStack.attemptDamageItem(int,java.util.Random)"], "Fixed commit": "0c12645f453cad6975e4792db4abd607dc8f7a4c", "Url": "https://api.github.com/repos/Vanhal/ProgressiveAutomation", "Date": "2015-03-27T13:21:55Z"},
{"Line": "=>416", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((IntExpr(p.right)) < 0) { debugger.abort(\"negative index choosen\", p); throw new java.lang.IllegalStateException((\"Kind\" + (p.kind))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/2619/buggy-version/src.at.jku.ssw.cmm.interpreter.Interpreter.java", "BodyUseAPI": ["at.jku.ssw.cmm.debugger.Debugger.abort(java.lang.String,at.jku.ssw.cmm.compiler.Node)"], "Fixed commit": "4b4b78d8c7a9f3444706909ea6b2a22454847c53", "Url": "https://api.github.com/repos/fabian1995/CMM", "Date": "2014-11-10T13:30:37Z"},
{"Line": "=>420", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["at.jku.ssw.cmm.compiler.Strings.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((IntExpr(p.right)) >= (s.length())) { debugger.abort(\"Too high index choosen\", p); throw new java.lang.IllegalStateException((\"Kind\" + (p.kind))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/2619/buggy-version/src.at.jku.ssw.cmm.interpreter.Interpreter.java", "BodyUseAPI": ["at.jku.ssw.cmm.debugger.Debugger.abort(java.lang.String,at.jku.ssw.cmm.compiler.Node)"], "Fixed commit": "4b4b78d8c7a9f3444706909ea6b2a22454847c53", "Url": "https://api.github.com/repos/fabian1995/CMM", "Date": "2014-11-10T13:30:37Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(ean.getText().toString().isEmpty())) { ean.setHint(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/8521/buggy-version/alexandria.app.src.main.java.it.jaschke.alexandria.AddBook.java", "BodyUseAPI": ["android.widget.EditText.setHint(java.lang.String)"], "Fixed commit": "1e64374c41ac08e3440db214a4f673cf7292a447", "Url": "https://api.github.com/repos/feludens/SuperDuo", "Date": "2015-10-04T23:02:53Z"},
{"Line": "=>836", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, org.wso2.andes.mqtt.MQTTAuthorizationSubject>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (authSubject == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/5577/buggy-version/modules.andes-core.broker.src.main.java.org.dna.mqtt.moquette.messaging.spi.impl.ProtocolProcessor.java", "BodyUseAPI": [], "Fixed commit": "a98e54934703870e7eb59b44e19da33a36104ae6", "Url": "https://api.github.com/repos/pumudu88/andes", "Date": "2016-08-15T10:18:19Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(java.util.logging.LogManager.getLogManager().getLoggerNames().hasMoreElements())) { org.apache.log4j.Logger.getRootLogger().addAppender(new org.apache.log4j.ConsoleAppender(new org.apache.log4j.PatternLayout(\"%r (%t) %p [%c{1}%x] %m%n\"))); org.apache.log4j.Logger.getRootLogger().setLevel(org.apache.log4j.Level.toLevel(logLevel)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/8489/buggy-version/jar.src.main.java.org.mobicents.tools.sip.balancer.BalancerRunner.java", "BodyUseAPI": [], "Fixed commit": "6b6fffb6584b96b41b54bb19916805c29e8e397e", "Url": "https://api.github.com/repos/RestComm/load-balancer", "Date": "2016-11-03T10:56:00Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ellpeck.actuallyadditions.util.FakePlayerUtil.theFakePlayer) == null) { ellpeck.actuallyadditions.util.FakePlayerUtil.theFakePlayer = new net.minecraftforge.common.util.FakePlayer(((net.minecraft.world.WorldServer) (world)), ellpeck.actuallyadditions.util.FakePlayerUtil.fakeProfile); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/2453/buggy-version/src.main.java.ellpeck.actuallyadditions.util.FakePlayerUtil.java", "BodyUseAPI": [], "Fixed commit": "c1eeebd50b752a76b651363be6807e97c27892fd", "Url": "https://api.github.com/repos/Ellpeck/ActuallyAdditions", "Date": "2015-07-06T21:41:10Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rowCount) > 0) { java.util.HashMap<java.lang.String, java.lang.String> rowData = resultList.get(rowNr); for (int i = 0; i < (nameList.size()); i++) { valuesList.add(rowData.get(nameList.get(i))); } return valuesList; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/8383/buggy-version/src.database.SearchResult.java", "BodyUseAPI": [], "Fixed commit": "cd65b2fba6e66ecd02a158d8c81f24b365e75ec2", "Url": "https://api.github.com/repos/genomizer/genomizer-server", "Date": "2014-04-29T17:32:28Z"},
{"Line": "=>538", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (original == null) { return \"\"; }else { try { return java.net.URLEncoder.encode(original, ApplicationConstants.CONTENT_ENCODING); } catch (java.io.UnsupportedEncodingException e) { return original; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/9085/buggy-version/core.src.main.java.com.github.api.v2.services.impl.GitHubApiGateway.java", "BodyUseAPI": ["java.net.URLEncoder.encode(java.lang.String,ApplicationConstants.CONTENT_ENCODING)"], "Fixed commit": "669a76e67945b8ce550acf1af4d231616f7450ef", "Url": "https://api.github.com/repos/nabeelmukhtar/github-java-sdk", "Date": "2011-04-15T07:12:50Z"},
{"Line": "=>435", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (source == null) { throw new java.lang.IllegalArgumentException(\"source must not be null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/6501/buggy-version/enough-polish-j2me.source.src.de.enough.polish.video.VideoContainer.java", "BodyUseAPI": [], "Fixed commit": "91b61d988d47654a79c8607320d5e7c47a746662", "Url": "https://api.github.com/repos/Enough-Software/j2mepolish", "Date": "2012-06-11T17:54:19Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((this.captureSource) == null) { throw new java.lang.IllegalStateException(\"capturing not supported\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/6501/buggy-version/enough-polish-j2me.source.src.de.enough.polish.ui.SnapshotScreen.java", "BodyUseAPI": [], "Fixed commit": "91b61d988d47654a79c8607320d5e7c47a746662", "Url": "https://api.github.com/repos/Enough-Software/j2mepolish", "Date": "2012-06-11T17:54:19Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.rubyeye.xmemcached.MemcachedClient.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (result instanceof java.lang.Long) return ((java.lang.Long) (result)); else return java.lang.Long.valueOf(((java.lang.String) (result)).trim());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/968/buggy-version/src.main.java.net.rubyeye.xmemcached.Counter.java", "BodyUseAPI": [], "Fixed commit": "979eb04d9fcc1a1fcbb2ff39782ea1581ca646c5", "Url": "https://api.github.com/repos/killme2008/xmemcached", "Date": "2011-09-05T13:23:47Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["chronoTimerItems.ChronoTimer.getChannels().get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((channel.getSensor()) == null) { chronoTimerItems.Printer.print(((\"No sensor connected to channel \" + (channelNum)) + \".\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/3348/buggy-version/src.commands.Command_Disc.java", "BodyUseAPI": [], "Fixed commit": "bc753f065ac4552b7f8d6222fa8a892b58802cff", "Url": "https://api.github.com/repos/TeamBolt/Sprint1", "Date": "2015-04-19T17:34:05Z"},
{"Line": "=>542", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["minecraft.theWorld.setBlockWithNotify(int,int,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((block != null) && flag) { block.onBlockDestroyedByPlayer(minecraft.theWorld, ((int) (position.x)), ((int) (position.y)), ((int) (position.z)), i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/1608/buggy-version/src.minecraft.net.minecraft.src.mod_TreeBreaker.java", "BodyUseAPI": ["net.minecraft.src.Block.onBlockDestroyedByPlayer(minecraft.theWorld,int,int,int,int)"], "Fixed commit": "5836ad7644435a6458f95dc2eaa73e91ebca9f35", "Url": "https://api.github.com/repos/dewfalse/mod_TreeBreaker", "Date": "2012-04-06T14:26:03Z"},
{"Line": "=>515", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.fasterxml.jackson.databind.ObjectMapper.readValue(mapper.writeValueAsString(options),java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((optionsMap.get(\"parent\")) == null) { optionsMap.put(\"resolver\", configuredGlobalResolver); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/8355/buggy-version/fabric.fabric-core.src.main.java.io.fabric8.service.FabricServiceImpl.java", "BodyUseAPI": ["java.util.Map.put(java.lang.String,java.lang.String)"], "Fixed commit": "c3e9e8e23b07d7ce2c0301dff047259355b2d043", "Url": "https://api.github.com/repos/jboss-fuse/fabric8", "Date": "2015-07-16T09:16:01Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.transactionsCompleted.size()) > 0) { java.lang.System.out.println(this.transactionsCompleted.get(((this.transactionsCompleted.size()) - 1))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/5108/buggy-version/src.playlist.Playlist.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.Integer>.size()", "java.util.ArrayList<java.lang.Integer>.get(int)", "java.io.PrintStream.println(java.lang.Integer)"], "Fixed commit": "d358587daaf0191898f037dc5564f30cd57e33ce", "Url": "https://api.github.com/repos/tylermcdonnell/3PC", "Date": "2015-10-08T23:14:15Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ch.abertschi.sct.arquillian.container.SctConfigurationEnricher.convertStreamToString(r.getAsset().openStream())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((content != null) && (!(content.isEmpty()))) { commandService.get().execute(new ch.abertschi.sct.arquillian.ResourceCommand(r.getName(), rOnClient.getPath(), content)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/1874/buggy-version/impl.src.main.java.ch.abertschi.sct.arquillian.container.SctConfigurationEnricher.java", "BodyUseAPI": ["commandService.get().execute(ch.abertschi.sct.arquillian.ResourceCommand)"], "Fixed commit": "83da06524881653d189e97cb064e28999f739ad3", "Url": "https://api.github.com/repos/abertschi/arquillian-service-call-tracker-extension", "Date": "2016-05-03T14:17:16Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.locations.containsKey(e.getClickedBlock().getLocation()))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/8997/buggy-version/src.me.PsionicTemplar.templarIndustries.Blocks.TemplarBlock.java", "BodyUseAPI": [], "Fixed commit": "dd92aec84322b2395d49c6f77c21f9a043957429", "Url": "https://api.github.com/repos/PsionicTemplar/Templar_Industries", "Date": "2017-12-19T08:55:31Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(message.equals(\"\"))) { mEntryList.expandGroup(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/7886/buggy-version/src.net.analogyc.wordiary.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "dd7a94b706b7f9c29056e28cbfec005c6d6a7969", "Url": "https://api.github.com/repos/analogyc/wordiary", "Date": "2013-07-07T20:05:12Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((this.getwAIE()) + (this.getdAIE())) + (this.getwAIE())) == 0) return this.getwAIE();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/739/buggy-version/src.Profile.java", "BodyUseAPI": [], "Fixed commit": "4fb8376ad8640a2d6bf6cd41c46843ed53820849", "Url": "https://api.github.com/repos/RogerTsang/comp2911Connect4", "Date": "2015-05-29T04:25:33Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((this.getlAIH()) + (this.getdAIH())) + (this.getwAIH())) == 0) return this.getwAIH();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/739/buggy-version/src.Profile.java", "BodyUseAPI": [], "Fixed commit": "4fb8376ad8640a2d6bf6cd41c46843ed53820849", "Url": "https://api.github.com/repos/RogerTsang/comp2911Connect4", "Date": "2015-05-29T04:25:33Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((this.getlP()) + (this.getdP())) + (this.getwP())) == 0) return this.getwP();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/739/buggy-version/src.Profile.java", "BodyUseAPI": [], "Fixed commit": "4fb8376ad8640a2d6bf6cd41c46843ed53820849", "Url": "https://api.github.com/repos/RogerTsang/comp2911Connect4", "Date": "2015-05-29T04:25:33Z"},
{"Line": "=>332", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.authorize.data.xml.Payment.getCreditCard()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(net.authorize.util.StringUtils.isEmpty(credit_card.getCardCode()))) { org.w3c.dom.Element card_code_el = document.createElement(AuthNetField.ELEMENT_CARD_CODE.getFieldName()); card_code_el.appendChild(document.getDocument().createTextNode(credit_card.getCardCode())); cc_el.appendChild(card_code_el); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/4147/buggy-version/src.main.java.net.authorize.cim.Transaction.java", "BodyUseAPI": ["org.w3c.dom.Element.appendChild(document.getDocument().createTextNode(credit_card.getCardCode()))", "net.authorize.data.creditcard.CreditCard.getCardCode()", "document.getDocument().createTextNode(credit_card.getCardCode())"], "Fixed commit": "975c2308a2f0731aa126a8d0cc81ea32ee67a5f2", "Url": "https://api.github.com/repos/Sapbasu15/sdk-java", "Date": "2015-08-06T00:07:43Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (oauthTokens == null) oauthTokens = new java.util.HashSet();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/777/buggy-version/model.src.main.java.com.kaliPATH.ha.model.User.java", "BodyUseAPI": [], "Fixed commit": "79c928fa831babaf393a838823fe394d992ada1b", "Url": "https://api.github.com/repos/kaliPATH/kha", "Date": "2014-06-12T09:22:09Z"},
{"Line": "=>1073", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (contentTypesStr.isEmpty()) typeToAdd = defaultType;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/8632/buggy-version/lib.solrmarc.src.org.solrmarc.index.GetFormatMixin.java", "BodyUseAPI": [], "Fixed commit": "a346ab18a841dfcb74b5d054b947724b38ca4d05", "Url": "https://api.github.com/repos/gemeinsamerverbuendeindex/gvi-solrmarc", "Date": "2017-06-12T12:35:20Z"},
{"Line": "=>1058", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jidesoft.swing.StyledLabel.getHorizontalAlignment()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((horizontalAlignment == (javax.swing.SwingConstants.TRAILING)) && (!(label.getComponentOrientation().isLeftToRight()))) || ((horizontalAlignment == (javax.swing.SwingConstants.LEADING)) && (label.getComponentOrientation().isLeftToRight()))) { horizontalAlignment = javax.swing.SwingConstants.LEFT; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/9060/buggy-version/src.com.jidesoft.plaf.basic.BasicStyledLabelUI.java", "BodyUseAPI": [], "Fixed commit": "2b82e2d65ed5f2afcce30a1d1cd42d3740618ade", "Url": "https://api.github.com/repos/jidesoft/jide-oss", "Date": "2012-06-08T20:08:09Z"},
{"Line": "=>1055", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((horizontalTextPosition == (javax.swing.SwingConstants.LEADING)) && (!(label.getComponentOrientation().isLeftToRight()))) || ((horizontalTextPosition == (javax.swing.SwingConstants.TRAILING)) && (label.getComponentOrientation().isLeftToRight()))) { horizontalTextPosition = javax.swing.SwingConstants.RIGHT; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/9060/buggy-version/src.com.jidesoft.plaf.basic.BasicStyledLabelUI.java", "BodyUseAPI": [], "Fixed commit": "2b82e2d65ed5f2afcce30a1d1cd42d3740618ade", "Url": "https://api.github.com/repos/jidesoft/jide-oss", "Date": "2012-06-08T20:08:09Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (offset < 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/4601/buggy-version/src.com.karateca.jstoolbox.toconstructor.GoToConstructorAction.java", "BodyUseAPI": [], "Fixed commit": "0e8f8109247a731a7711e468aea9c2fb98483833", "Url": "https://api.github.com/repos/andresdominguez/jsToolbox", "Date": "2013-11-25T17:23:58Z"},
{"Line": "=>448", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((coursesToDownload) == 0) { android.widget.Toast.makeText(getApplicationContext(), \"Please select some courses.\", Toast.LENGTH_LONG).show(); android.content.Intent i = new android.content.Intent(this, com.moodld.moodld.Preferences.class); startActivity(i); finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/3572/buggy-version/app.src.main.java.com.moodld.moodld.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "eef3181ceff86cb2ac758839a09022d8bc9241b4", "Url": "https://api.github.com/repos/nihal111/MooDLD-for-Android", "Date": "2016-08-10T14:58:53Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.getListView().getChildAt(position)) != null) { selected.remove(java.lang.Integer.valueOf(position)); this.getListView().getChildAt(position).setBackgroundColor(UNSELECTED_COLOR); question.getAnswers().get(position).setMarked(Marked.UNMARKED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/8308/buggy-version/src.agh.edu.pl.quiz.activities.QuestionActivity.java", "BodyUseAPI": ["this.getListView().getChildAt(position).setBackgroundColor(int)", "question.getAnswers().get(int)", "question.getAnswers().get(position).setMarked(Marked.UNMARKED)", "java.util.List<java.lang.Integer>.remove(java.lang.Integer)", "java.lang.Integer.valueOf(int)", "this.getListView().getChildAt(int)"], "Fixed commit": "79188f87478cda7bc6e13203d766599dcc290057", "Url": "https://api.github.com/repos/Netoperek/AndroidQuiz", "Date": "2014-11-12T10:04:39Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.getListView().getChildAt(position)) != null) { selected.add(position); this.getListView().getChildAt(position).setBackgroundColor(SELECTED_COLOR); question.getAnswers().get(position).setMarked(Marked.CORRECT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/8308/buggy-version/src.agh.edu.pl.quiz.activities.QuestionActivity.java", "BodyUseAPI": ["question.getAnswers().get(int)", "this.getListView().getChildAt(int)", "this.getListView().getChildAt(position).setBackgroundColor(int)", "java.util.List<java.lang.Integer>.add(int)", "question.getAnswers().get(position).setMarked(Marked.CORRECT)"], "Fixed commit": "79188f87478cda7bc6e13203d766599dcc290057", "Url": "https://api.github.com/repos/Netoperek/AndroidQuiz", "Date": "2014-11-12T10:04:39Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (user == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/7714/buggy-version/src.com.tiyuzazhi.app.UserCenterActivity.java", "BodyUseAPI": [], "Fixed commit": "a9202a33d95b2bd523c891232f2e98338f367207", "Url": "https://api.github.com/repos/chris6k/tiyuzazhi", "Date": "2014-11-29T02:35:26Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((response.isSuccessful()) && ((response.body()) != null)) && ((response.body().getQuery()) != null)) { pages.addAll(response.body().getQuery().getPages()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/8891/buggy-version/app.src.main.java.in.madscientist.wikipagesearch.ui.Fragment_WikiSearch.java", "BodyUseAPI": ["retrofit2.Response<in.madscientist.wikipagesearch.model.WikiSearch>.body()", "java.util.List<in.madscientist.wikipagesearch.model.Pages>.addAll(response.body().getQuery().getPages())", "response.body().getQuery().getPages()", "response.body().getQuery()"], "Fixed commit": "3ab8bc59f4541ac9ef22de3cecea8acbe7a7290f", "Url": "https://api.github.com/repos/shahsurajk/WikiPageSearch", "Date": "2017-08-08T05:31:57Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.isFulfilled(distribution)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/1566/buggy-version/src.main.org.deidentifier.arx.criteria.RiskBasedPrivacyCriterion.java", "BodyUseAPI": [], "Fixed commit": "5c719246e07599b967fe676ad16518f296bc6b3b", "Url": "https://api.github.com/repos/arx-deidentifier/arx", "Date": "2015-03-07T13:59:17Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mThreadPoolExecutor) != null) { mThreadPoolExecutor.shutdownNow(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/8797/buggy-version/farondroid.src.com.openfarmanager.android.dialogs.NetworkScanDialog.java", "BodyUseAPI": [], "Fixed commit": "e685310246dfdc1bd48d864b9a8445ef1fa10c70", "Url": "https://api.github.com/repos/nvv/Far-On-Droid", "Date": "2016-01-31T19:20:29Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((scheduler.getClusterResource().getGpuMemory()) != 0) { queueInfo.setCapacity((((float) (getResourceUsage().getGpuMemory())) / (scheduler.getClusterResource().getGpuMemory()))); }else { queueInfo.setCapacity(((float) (0))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/8472/buggy-version/hadoop-yarn-project.hadoop-yarn.hadoop-yarn-server.hadoop-yarn-server-resourcemanager.src.main.java.org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSQueue.java", "BodyUseAPI": ["org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FairScheduler.getClusterResource()", "org.apache.hadoop.yarn.api.records.QueueInfo.setCapacity((((float) (getResourceUsage().getGpuMemory())) / (scheduler.getClusterResource().getGpuMemory())))", "scheduler.getClusterResource().getGpuMemory()"], "Fixed commit": "28901358eac6e5b89acf33b3c735d5d650417834", "Url": "https://api.github.com/repos/messi49/hadoop", "Date": "2015-08-22T12:11:10Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (b == 0) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/8472/buggy-version/hadoop-yarn-project.hadoop-yarn.hadoop-yarn-common.src.main.java.org.apache.hadoop.yarn.util.resource.ResourceCalculator.java", "BodyUseAPI": [], "Fixed commit": "28901358eac6e5b89acf33b3c735d5d650417834", "Url": "https://api.github.com/repos/messi49/hadoop", "Date": "2015-08-22T12:11:10Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.kstenschke.referencer.referencers.goTo.GoToReferencerPatterns.hasPatternDefinitions()) { java.lang.String[] patternDefinitions = com.kstenschke.referencer.referencers.goTo.GoToReferencerPatterns.getPatternDefinitions(); for (java.lang.String curPatterDefinition : patternDefinitions) { java.lang.String[] curPatternItems = com.kstenschke.referencer.referencers.goTo.GoToReferencerPatterns.getItems(this.document, curPatterDefinition); if ((curPatternItems != null) && ((curPatternItems.length) > 1)) { refArr = org.apache.commons.lang.ArrayUtils.addAll(refArr, curPatternItems); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/8774/buggy-version/src.com.kstenschke.referencer.actions.GoToAction.java", "BodyUseAPI": [], "Fixed commit": "87850a72938bdd315301e46e0930ad811a9a378f", "Url": "https://api.github.com/repos/kstenschke/referencer-plugin", "Date": "2014-08-04T12:50:36Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["new com.google.gson.JsonParser().parse(content).getAsJsonObject()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (input.has(\"password\")) password = input.get(\"password\").getAsString();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/2257/buggy-version/src.main.java.com.databasserne.hackernews.resource.AuthenticationResource.java", "BodyUseAPI": ["input.get(\"password\").getAsString()", "com.google.gson.JsonObject.get(java.lang.String)"], "Fixed commit": "0413e6a00c635c9fa38d9fdaf979e17afdc70cd9", "Url": "https://api.github.com/repos/Databasserne/HackerNews-Backend", "Date": "2017-10-29T14:59:28Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["new com.google.gson.JsonParser().parse(content).getAsJsonObject()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (input.has(\"username\")) username = input.get(\"username\").getAsString();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/2257/buggy-version/src.main.java.com.databasserne.hackernews.resource.AuthenticationResource.java", "BodyUseAPI": ["input.get(\"username\").getAsString()", "com.google.gson.JsonObject.get(java.lang.String)"], "Fixed commit": "0413e6a00c635c9fa38d9fdaf979e17afdc70cd9", "Url": "https://api.github.com/repos/Databasserne/HackerNews-Backend", "Date": "2017-10-29T14:59:28Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["FlexScanner.NextToken()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (token.type.equals(\"idHEX\")) { CV = (java.lang.Integer.parseInt(CV.substring(2), 16)) + \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/4355/buggy-version/src.Scanner.java", "BodyUseAPI": [], "Fixed commit": "8862ebb139b1525a428c38f092e1ce920c1cbea7", "Url": "https://api.github.com/repos/arashyousefi/Blend", "Date": "2017-02-18T09:08:37Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((matrix[((i + (element.getPosX())) + 1)][((o + (element.getPosY())) + 1)]) < (element.getGridPoint(i, o))) matrix[((i + (element.getPosX())) + 1)][((o + (element.getPosY())) + 1)] = element.getGridPoint(i, o);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/7909/buggy-version/src.Matrix.java", "BodyUseAPI": ["WireElement.getGridPoint(int,int)", "WireElement.getPosY()", "WireElement.getPosX()"], "Fixed commit": "b63e61734139bc1962a857cc4563760ba0db5b1f", "Url": "https://api.github.com/repos/Kanister10l/WireWorld", "Date": "2017-05-01T18:22:41Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((rtrn * 1000.0) % 2) != 0) { rtrn = ((rtrn * 1000) - 1) / 1000.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/6179/buggy-version/webapp.src.main.java.ee.bmagrupp.aardejaht.server.service.imlp.RegistrationServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "ef07c891021752f99776a97cdf902001c801ad46", "Url": "https://api.github.com/repos/JaanJanno/Aardejaht", "Date": "2014-11-06T10:14:49Z"},
{"Line": "=>463", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mActivity) != null) { instance = mActivity; }else if ((mSupportFragment) != null) { instance = mSupportFragment; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/3945/buggy-version/src.com.mobsandgeeks.saripaar.Validator.java", "BodyUseAPI": [], "Fixed commit": "9be0f508a3b3de5eb57bb8ecadc63714382c7a95", "Url": "https://api.github.com/repos/ragunathjawahar/android-saripaar", "Date": "2012-11-24T10:08:46Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.folioreader.model.sqlite.DbAdapter.updateHighLight(com.folioreader.model.sqlite.HighLightTable.getHighlightContentValues(highlight), java.lang.String.valueOf(highlight.getId()))) { android.util.Log.d(com.folioreader.model.sqlite.HighLightTable.TAG, \"highlight updated sucessfully\"); }else { android.util.Log.d(com.folioreader.model.sqlite.HighLightTable.TAG, \"error while highlight updateing\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/5234/buggy-version/folioreader.src.main.java.com.folioreader.model.sqlite.HighLightTable.java", "BodyUseAPI": [], "Fixed commit": "78d18ed8a22158ff84114894bde849f8dd62317b", "Url": "https://api.github.com/repos/codetoart/FolioReader-Android", "Date": "2017-08-21T12:59:55Z"},
{"Line": "=>367", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (offset != 0) { android.util.Log.i(com.huanglongyu.ToDoList.view.ToDoListView.TAG, (\"ACTION_UP down!!!!!!!! startScroll 1, needToMovedY:\" + (mHeaderView.getBottom()))); mScroller.startScroll(0, height, 0, offset, com.huanglongyu.ToDoList.view.ToDoListView.SLID_ANIMATION_TIME); this.invalidate(); }else if (offset == 0) { if ((mOnToDoListViewTriggerListener) != null) { mOnToDoListViewTriggerListener.onDownTriggered(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/3389/buggy-version/app.src.main.java.com.huanglongyu.ToDoList.view.ToDoListView.java", "BodyUseAPI": ["android.widget.Scroller.startScroll(int,int,int,int,int)"], "Fixed commit": "012a7f7b9993584ba52502b10ca32951b64e6e89", "Url": "https://api.github.com/repos/huanglongyu/ToDoList", "Date": "2016-11-04T12:24:31Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(java.lang.Double.isNaN(pt.hdop))) { loc.setAccuracy(((float) (pt.hdop))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/2573/buggy-version/OsmAnd-java.src.net.osmand.plus.routing.RouteProvider.java", "BodyUseAPI": ["net.osmand.Location.setAccuracy(((float) (pt.hdop)))"], "Fixed commit": "366272ee30a30ae0c1544f7baa688e98a50654e3", "Url": "https://api.github.com/repos/osmandapp/OsmAnd-core", "Date": "2013-02-05T00:17:22Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(java.lang.Double.isNaN(pt.ele))) { loc.setAltitude(pt.ele); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/2573/buggy-version/OsmAnd-java.src.net.osmand.plus.routing.RouteProvider.java", "BodyUseAPI": ["net.osmand.Location.setAltitude(pt.ele)"], "Fixed commit": "366272ee30a30ae0c1544f7baa688e98a50654e3", "Url": "https://api.github.com/repos/osmandapp/OsmAnd-core", "Date": "2013-02-05T00:17:22Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (camelExchange.getPattern().isOutCapable()) { if (camelExchange.hasOut()) { response = camelExchange.getOut(); org.apache.camel.component.cxf.jaxrs.DefaultCxfRsBinding.LOG.trace(\"Get the response from the out message\"); }else { response = camelExchange.getIn(); org.apache.camel.component.cxf.jaxrs.DefaultCxfRsBinding.LOG.trace(\"Get the response from the in message as a fallback\"); } }else { response = camelExchange.getIn(); org.apache.camel.component.cxf.jaxrs.DefaultCxfRsBinding.LOG.trace(\"Get the response from the in message\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/1487/buggy-version/components.camel-cxf.src.main.java.org.apache.camel.component.cxf.jaxrs.DefaultCxfRsBinding.java", "BodyUseAPI": ["org.apache.camel.Exchange.getIn()", "org.apache.camel.Exchange.getOut()", "org.apache.camel.Exchange.hasOut()", "org.apache.camel.Exchange.getIn()"], "Fixed commit": "ee95af1c0157997b99846c53d651b754c34a100b", "Url": "https://api.github.com/repos/apache/camel", "Date": "2013-12-12T11:04:06Z"},
{"Line": "=>312", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.velocity.VelocityContext.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (isCreate(foc.outputFile(tableInfo))) { vmToFile(context, foc.getTemplatePath(), foc.outputFile(tableInfo)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/2622/buggy-version/src.main.java.com.baomidou.mybatisplus.generator.AutoGenerator.java", "BodyUseAPI": ["com.baomidou.mybatisplus.generator.config.FileOutConfig.outputFile(com.baomidou.mybatisplus.generator.config.po.TableInfo)", "com.baomidou.mybatisplus.generator.AutoGenerator.vmToFile(org.apache.velocity.VelocityContext,foc.getTemplatePath(),foc.outputFile(tableInfo))", "com.baomidou.mybatisplus.generator.config.FileOutConfig.getTemplatePath()"], "Fixed commit": "6d44c52063352aa6526e97486935816efdcaf5f5", "Url": "https://api.github.com/repos/baomidou/mybatis-plus", "Date": "2017-09-11T08:58:01Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.david.switcherapp.Model.getGameObject(com.example.david.switcherapp.CartPoint)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (obj1.isOrc()) ((com.example.david.switcherapp.Orc) (obj1)).pause();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/3156/buggy-version/app.src.main.java.com.example.david.switcherapp.Wizard.java", "BodyUseAPI": [], "Fixed commit": "03b7821d5a095a5fdbb6aaf4884ec09aa77d8aa7", "Url": "https://api.github.com/repos/dakirk/SwitcherApp", "Date": "2017-12-09T01:01:42Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.david.switcherapp.Model.getGameObject(com.example.david.switcherapp.CartPoint)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (obj2.isOrc()) ((com.example.david.switcherapp.Orc) (obj2)).pause();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/3156/buggy-version/app.src.main.java.com.example.david.switcherapp.Wizard.java", "BodyUseAPI": [], "Fixed commit": "03b7821d5a095a5fdbb6aaf4884ec09aa77d8aa7", "Url": "https://api.github.com/repos/dakirk/SwitcherApp", "Date": "2017-12-09T01:01:42Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (name.equalsIgnoreCase(prevName)) { prevName = names.peek(); name = ((name) + \" \") + ((java.lang.Math.random()) * 10); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/5425/buggy-version/src.Main.java", "BodyUseAPI": [], "Fixed commit": "352396215814ab5f6e5f73d36cb69e63cf352af9", "Url": "https://api.github.com/repos/XGiles2016/Excel-Copier", "Date": "2016-09-07T15:11:01Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (identificador == null) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/5347/buggy-version/src.main.java.trabalho1.AnalisadorSemantico.java", "BodyUseAPI": [], "Fixed commit": "074fb2ec2480fad7b9e89bcd78748d10efb251c3", "Url": "https://api.github.com/repos/falcaopetri/linguagem-la", "Date": "2016-11-18T14:39:37Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (index < (notes.size())) { note = notes.get(index); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/8994/buggy-version/src.gsingh.learnkirtan.ui.shabadeditor.tableeditor.TableShabadEditor.java", "BodyUseAPI": ["gsingh.learnkirtan.shabad.ShabadNotes.get(int)"], "Fixed commit": "abf9463abdd366497d02e291bb00601f4446bd0b", "Url": "https://api.github.com/repos/gsingh93/Learn-Kirtan", "Date": "2013-03-16T05:13:55Z"},
{"Line": "=>13", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value != null) { value = ((java.lang.String) (value)).trim(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/8994/buggy-version/src.gsingh.learnkirtan.ui.shabadeditor.tableeditor.UndoTableModel.java", "BodyUseAPI": [], "Fixed commit": "abf9463abdd366497d02e291bb00601f4446bd0b", "Url": "https://api.github.com/repos/gsingh93/Learn-Kirtan", "Date": "2013-03-16T05:13:55Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((world.getBlockState(pos.up()).getBlock()) == (this)) { world.setBlockToAir(pos.up()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/77/buggy-version/src.main.java.net.tropicraft.core.common.block.BlockTikiTorch.java", "BodyUseAPI": ["net.minecraft.util.math.BlockPos.up()", "net.minecraft.world.World.setBlockToAir(pos.up())"], "Fixed commit": "faf074c6cb0b8eee37fbaae5ea82e367e339d719", "Url": "https://api.github.com/repos/Tropicraft/Tropicraft", "Date": "2017-05-24T00:50:42Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((world.getBlockState(pos.down()).getBlock()) == (this)) { world.setBlockToAir(pos.down()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/77/buggy-version/src.main.java.net.tropicraft.core.common.block.BlockTikiTorch.java", "BodyUseAPI": ["net.minecraft.world.World.setBlockToAir(pos.down())", "net.minecraft.util.math.BlockPos.down()"], "Fixed commit": "faf074c6cb0b8eee37fbaae5ea82e367e339d719", "Url": "https://api.github.com/repos/Tropicraft/Tropicraft", "Date": "2017-05-24T00:50:42Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((world.getBlockState(pos.down(2)).getBlock()) == (this)) { world.setBlockToAir(pos.down(2)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/77/buggy-version/src.main.java.net.tropicraft.core.common.block.BlockTikiTorch.java", "BodyUseAPI": ["net.minecraft.world.World.setBlockToAir(pos.down(2))", "net.minecraft.util.math.BlockPos.down(int)"], "Fixed commit": "faf074c6cb0b8eee37fbaae5ea82e367e339d719", "Url": "https://api.github.com/repos/Tropicraft/Tropicraft", "Date": "2017-05-24T00:50:42Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.tinkerpop.gremlin.process.util.TraversalHelper.isLabeled(label)) temp.add(label);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/4640/buggy-version/gremlin-core.src.main.java.com.tinkerpop.gremlin.process.util.MutablePath.java", "BodyUseAPI": ["java.util.HashSet<java.lang.String>.add(java.lang.String)"], "Fixed commit": "d2c88602622d390d0c6f78ce9c57d91a30a625e6", "Url": "https://api.github.com/repos/tinkerpop/tinkerpop3", "Date": "2014-12-11T15:15:59Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (com.tinkerpop.gremlin.process.util.TraversalHelper.isLabeled(currentLabel)) this.currentLabels.add(currentLabel);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/4640/buggy-version/gremlin-core.src.main.java.com.tinkerpop.gremlin.process.util.ImmutablePath.java", "BodyUseAPI": [], "Fixed commit": "d2c88602622d390d0c6f78ce9c57d91a30a625e6", "Url": "https://api.github.com/repos/tinkerpop/tinkerpop3", "Date": "2014-12-11T15:15:59Z"},
{"Line": "=>525", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((items.size()) == 0) { result.setLastEvaluatedKey(new com.michelboudreau.alternator.Key(new com.michelboudreau.alternator.AttributeValue().withS(null))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/6039/buggy-version/src.main.java.com.michelboudreau.alternator.AlternatorDBHandler.java", "BodyUseAPI": [], "Fixed commit": "600cea79c486e7cffa27699124ef3aa14f1a9e16", "Url": "https://api.github.com/repos/tnbredillet/Alternator", "Date": "2012-08-23T20:39:11Z"},
{"Line": "=>546", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, com.michelboudreau.alternator.models.Table>.get(request.getTableName())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (table == null) { throw new com.michelboudreau.alternator.ResourceNotFoundException(((\"The table '\" + (request.getTableName())) + \"' doesn't exist.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/6039/buggy-version/src.main.java.com.michelboudreau.alternator.AlternatorDBHandler.java", "BodyUseAPI": [], "Fixed commit": "600cea79c486e7cffa27699124ef3aa14f1a9e16", "Url": "https://api.github.com/repos/tnbredillet/Alternator", "Date": "2012-08-23T20:39:11Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((temp < 1) || (temp > 1000)) { java.lang.System.out.println(\"Value for vacant seat is not within constraints. Please input 2 <= X[i] <= 1000\"); java.lang.System.exit(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/5499/buggy-version/Homework_3.src.ConcertTickets.java", "BodyUseAPI": [], "Fixed commit": "0272b773170e64ec941326f1d44fd293939fe4c8", "Url": "https://api.github.com/repos/Neil1114/CSE214-Homeworks", "Date": "2017-10-31T19:22:09Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["PriorityQueue.dequeue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (price > 0) { total += price; prices.enqueue((price - 1)); }else { prices.enqueue(price); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/5499/buggy-version/Homework_3.src.ConcertTickets.java", "BodyUseAPI": ["PriorityQueue.enqueue(int)", "PriorityQueue.enqueue(int)"], "Fixed commit": "0272b773170e64ec941326f1d44fd293939fe4c8", "Url": "https://api.github.com/repos/Neil1114/CSE214-Homeworks", "Date": "2017-10-31T19:22:09Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(commandLine.startsWith(\"/\"))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/735/buggy-version/src.ClientCommands.ClientCommandManager.java", "BodyUseAPI": [], "Fixed commit": "8f39496002e8e58315bc555f20d49a338c83aa97", "Url": "https://api.github.com/repos/totemo/watson", "Date": "2013-04-03T09:04:46Z"},
{"Line": "=>276", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((connected) == true) { frame.MainFrame.getInstance().SwitchPanel(\"playing\"); panel.PlayingPanel.getInstance().setDifficulty(diffy); panel.PlayingPanel.getInstance().getFocus(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/3490/buggy-version/src.panel.HostPanel.java", "BodyUseAPI": [], "Fixed commit": "52ec1209e552a95898ce5fd25459d9fe709cf773", "Url": "https://api.github.com/repos/bruce30262/LittleTyper", "Date": "2014-05-22T17:28:58Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (barcode.equals(\"Congrats!!! You found Haseeb's easter egg!!!\")) { android.net.Uri url2 = android.net.Uri.parse(eUrl); android.content.Intent browserIntent = new android.content.Intent(android.content.Intent.ACTION_VIEW, url2); startActivity(browserIntent); }else { if (!(barcode.equalsIgnoreCase(\"Nothing to read.\"))) { new edu.uco.retrocollect.retrocollect.BarcodeActivity.BarcodeApiTask().execute(barcode); }else if (barcode.equalsIgnoreCase(\"Nothing to read.\")) { android.widget.Toast.makeText(this, \"No barcode scanned! try again!\", Toast.LENGTH_SHORT).show(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/4179/buggy-version/app.src.main.java.edu.uco.retrocollect.retrocollect.BarcodeActivity.java", "BodyUseAPI": ["edu.uco.retrocollect.retrocollect.BarcodeActivity.BarcodeApiTask.execute(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)"], "Fixed commit": "d04f19fbe7426b47595a409865c7f9480ef41bb4", "Url": "https://api.github.com/repos/arlan40k/RetroCollect", "Date": "2016-11-19T10:04:17Z"},
{"Line": "=>250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (target == null) { throw new org.zkoss.zk.ui.ComponentNotFoundException((\"EL evaluated to null: \" + path)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/2406/buggy-version/zk.src.org.zkoss.zk.ui.sys.ComponentsCtrl.java", "BodyUseAPI": [], "Fixed commit": "b226a97c3c17e51910e7b512144a14449a0ec277", "Url": "https://api.github.com/repos/chunfuchang/zk", "Date": "2015-05-18T08:23:40Z"},
{"Line": "=>540", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (text != null) { return text.replace(\"\\\"\", \"&dblq;\"); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/889/buggy-version/src.main.java.com.referendum.tools.Tools.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "78a391dea9616e94fc0af7c86c61cbf812882b1c", "Url": "https://api.github.com/repos/dessalines/referendum", "Date": "2016-02-16T14:38:35Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.facebook.Session.getActiveSession()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (session.isOpened()) session.closeAndClearTokenInformation();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/547/buggy-version/src.com.zonesnap.activities.MapMenuActivity.java", "BodyUseAPI": ["com.facebook.Session.closeAndClearTokenInformation()"], "Fixed commit": "741e1da9017665f1018f5d34037366494ff1413a", "Url": "https://api.github.com/repos/gcs278/zonesnap", "Date": "2013-12-02T21:56:30Z"},
{"Line": "=>798", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.kuali.kra.award.web.struts.action.AwardAction.getLastFinalTandMDocument(java.util.List<org.kuali.kra.timeandmoney.document.TimeAndMoneyDocument>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (timeAndMoneyDocument == null) { generateDirectFandADistribution(currentAward); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/6436/buggy-version/src.main.java.org.kuali.kra.award.web.struts.action.AwardAction.java", "BodyUseAPI": [], "Fixed commit": "00fc038f405ca2440a00dab9669776cd2f054f82", "Url": "https://api.github.com/repos/dgodfre/kc", "Date": "2014-02-27T04:46:25Z"},
{"Line": "=>359", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((escapesCount % 2) == 0) { for (int j = 0; j < (escapesCount % 2); j++) { segmentBuffer = segmentBuffer.delete(escapeIndex, (escapeIndex + escapeLen)); escapeIndex += escapeLen; } }else { for (int j = 0; j < ((escapesCount - 1) % 2); j++) { segmentBuffer = segmentBuffer.delete(escapeIndex, (escapeIndex + escapeLen)); escapeIndex += escapeLen; } segmentBuffer = segmentBuffer.delete(escapeIndex, (escapeIndex + escapeLen)); reachedSegEnd = false; break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/2465/buggy-version/edi.edisax.src.main.java.org.milyn.edisax.BufferedSegmentReader.java", "BodyUseAPI": [], "Fixed commit": "64b91e4942bc854f4575bd1baec3b500bdbb1208", "Url": "https://api.github.com/repos/edigrid/smooks", "Date": "2016-10-07T08:30:03Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (alredyHit) { return; }else { alredyHit = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/2272/buggy-version/src.main.java.com.bymarcin.zettaindustries.mods.wiregun.EntityHookBullet.java", "BodyUseAPI": [], "Fixed commit": "bb6614660f2aa908e40f226063a2961fc416c8d0", "Url": "https://api.github.com/repos/Kubuxu/Zetta-Industries", "Date": "2015-07-17T11:44:59Z"},
{"Line": "=>734", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (pointer.equals(new org.forgerock.json.JsonPointer(\"*\"))) { readRequest.addField(\"\"); }else if (!(pointer.equals(SchemaField.FIELD_ALL_RELATIONSHIPS))) { readRequest.addField(pointer); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/5876/buggy-version/openidm-core.src.main.java.org.forgerock.openidm.managed.ManagedObjectSet.java", "BodyUseAPI": ["org.forgerock.json.JsonPointer.equals(SchemaField.FIELD_ALL_RELATIONSHIPS)", "org.forgerock.json.resource.ReadRequest.addField(org.forgerock.json.JsonPointer)"], "Fixed commit": "27e38ee50fa042f85c0f977e43e41986771deba4", "Url": "https://api.github.com/repos/OpenRock/OpenIDM", "Date": "2015-11-11T20:17:50Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (userCharts.equals(\"\")) { dashPrefs.setValue(Constants.USER_DASHBOARD_CHARTS, null); }else { dashPrefs.setValue(Constants.USER_DASHBOARD_CHARTS, userCharts); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/3313/buggy-version/hq-web.src.main.java.org.hyperic.hq.ui.action.portlet.savedqueries.ModifyActionNG.java", "BodyUseAPI": ["org.hyperic.util.config.ConfigResponse.setValue(Constants.USER_DASHBOARD_CHARTS,java.lang.String)"], "Fixed commit": "9911eb1bf942862727f10a436a23121aa489bbca", "Url": "https://api.github.com/repos/hyperic/hq", "Date": "2015-07-21T11:37:40Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((abr.mod.photoptics.processing.PossibleObservations.observations) != null) return abr.mod.photoptics.processing.PossibleObservations.observations; else return abr.mod.photoptics.processing.PossibleObservations.observations = new abr.mod.photoptics.processing.PossibleObservations();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/5565/buggy-version/src.main.java.abr.mod.photoptics.processing.PossibleObservations.java", "BodyUseAPI": [], "Fixed commit": "6f5ee5a7dade600885f9a532f0399bb6cb3a468a", "Url": "https://api.github.com/repos/Abastro/Photoptics", "Date": "2016-06-19T12:37:14Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (player.move()) { camera.position.set(((player.getPosition().getX()) * (Constants.TILE_SIZE)), ((player.getPosition().getY()) * (Constants.TILE_SIZE)), 0); processTurn(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/3335/buggy-version/Main.src.com.stuckinadrawer.dungeongame.screen.GameScreen.java", "BodyUseAPI": ["com.stuckinadrawer.dungeongame.actors.Player.getPosition()", "camera.position.set(((player.getPosition().getX()) * (Constants.TILE_SIZE)),((player.getPosition().getY()) * (Constants.TILE_SIZE)),int)", "player.getPosition().getY()", "player.getPosition().getX()", "com.stuckinadrawer.dungeongame.actors.Player.getPosition()"], "Fixed commit": "d77dc836eca1048180fd689edeee64014ff05571", "Url": "https://api.github.com/repos/Anoia/Dungeongame", "Date": "2014-02-03T21:06:55Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mMeteredStatsAdapter) != null) { mMeteredStatsAdapter.setAutoRefreshState(switchOn); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/1336/buggy-version/app.src.main.java.org.shapiro.doron.impswitch.BigSwitchActivity.java", "BodyUseAPI": [], "Fixed commit": "dca2ed07f7cbdbbd09f6fb1871ed1668cec542c8", "Url": "https://api.github.com/repos/DoronShapiro/switch-android", "Date": "2014-11-14T16:23:35Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["MediaStore.Images.Media.getBitmap(activity.getContentResolver(),android.net.Uri.fromFile(image))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (cameraBmp == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/3527/buggy-version/library.src.main.java.io.teamkona.konatools.file.ImageHelper.java", "BodyUseAPI": [], "Fixed commit": "78093ecfc7001f31ea25436cf68bffed5d58dc30", "Url": "https://api.github.com/repos/gonzalomelov/KonaTools", "Date": "2016-03-11T15:08:55Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (layer >= (notes.length)) resize(((short) (layer)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/2054/buggy-version/src.com.github.soniex2.nbx.api.NBSTick.java", "BodyUseAPI": [], "Fixed commit": "cdde68eed169d017a624c784ce2ed5de676ffaec", "Url": "https://api.github.com/repos/SoniEx2/NBX-API", "Date": "2013-07-22T01:53:00Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((net.minecraftforge.fml.common.FMLCommonHandler.instance().getSide()) != (net.minecraftforge.fml.relauncher.Side.CLIENT)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/7753/buggy-version/src.main.java.me.guichaguri.tickratechanger.api.TickrateAPI.java", "BodyUseAPI": [], "Fixed commit": "758bbc156026e1343399ad24cb63b8543bdc3029", "Url": "https://api.github.com/repos/Guichaguri/TickrateChanger", "Date": "2015-07-27T21:02:00Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getCookies()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (cookies != null) for (javax.servlet.http.Cookie c : cookies) if (c.getName().equals(com.example.myapp.main.filters.I18nFilter.COOKIE_NAME)) { lang = c.getValue(); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/7489/buggy-version/src.main.java.com.example.myapp.main.filters.I18nFilter.java", "BodyUseAPI": [], "Fixed commit": "a7e0ee867daa3bbc188f502947d65f5b01aaa564", "Url": "https://api.github.com/repos/luca-vercelli/java-web-template", "Date": "2017-09-10T12:53:41Z"},
{"Line": "=>313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["IC.AST.NewClass.getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(IC.Types.TypeTable.classTypeExists(className))) { throw new IC.SemanticChecks.SemanticError(newClass.getLine(), (\"Creating an instance of undeclared class: \" + className)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/6122/buggy-version/src.IC.SemanticChecks.SymbolTableChecker.java", "BodyUseAPI": [], "Fixed commit": "bc8cdea20ebb7a8d70696694c2787378e7393c3c", "Url": "https://api.github.com/repos/sharon-rozinsky/ICCompiler", "Date": "2014-12-18T23:01:44Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((pc.getDetails().get(\"FWWOMNID\").length()) > 0) { java.lang.String NIDSourcestring = ((\"NID: \" + \"<b>\") + ((pc.getDetails().get(\"FWWOMNID\")) != null ? pc.getDetails().get(\"FWWOMNID\") : \"\")) + \"</b> \"; nid.setText(android.text.Html.fromHtml(NIDSourcestring)); nid.setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/1885/buggy-version/opensrp-mcare.src.main.java.org.ei.opensrp.mcare.anc.mCareANCSmartClientsProvider.java", "BodyUseAPI": ["org.ei.opensrp.commonregistry.CommonPersonObjectClient.getDetails()", "org.ei.opensrp.commonregistry.CommonPersonObjectClient.getDetails()", "pc.getDetails().get(java.lang.String)", "pc.getDetails().get(java.lang.String)"], "Fixed commit": "49e036a3c4b97999750bcfc8c8b1068fe3b61ad9", "Url": "https://api.github.com/repos/sidthrive/opensrp-client", "Date": "2016-05-29T12:37:27Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (manufacturer.equals(planeType)) { planeInformationHashTable.put(key, manufacturer); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/817/buggy-version/BD-TP1.tp1.src.main.java.ar.edu.itba.it.bigdata.mapreduce.flightHours.FlightHoursMapper.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)"], "Fixed commit": "137d27f1b19a31bd0b3c5e8d62678c534ed5b14a", "Url": "https://api.github.com/repos/mdesanti/bigdata", "Date": "2013-09-28T20:44:07Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mAuthStateListener) != null) { mFirebaseAuth.removeAuthStateListener(mAuthStateListener); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/944/buggy-version/app.src.main.java.com.google.firebase.udacity.friendlychat.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "c1787a175badd1266c7751920f999da2b5ee1b9f", "Url": "https://api.github.com/repos/P1xelfehler/firebase-demo", "Date": "2017-07-06T09:55:38Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dataObj) == null) { dataObj = new com.fourway.ideaswire.templates.ServicesDataTemplate(templateType, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/4078/buggy-version/app.src.main.java.com.fourway.ideaswire.templates.ServicePage.java", "BodyUseAPI": [], "Fixed commit": "88fe84f51a527eaa1e8269876f8423f54fa35a95", "Url": "https://api.github.com/repos/vikassrivastava123/Ideaswire", "Date": "2016-11-25T10:30:44Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dataObj) == null) { dataObj = new com.fourway.ideaswire.templates.HomePageDataTemplate(templateType, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/4078/buggy-version/app.src.main.java.com.fourway.ideaswire.templates.HomePage.java", "BodyUseAPI": [], "Fixed commit": "88fe84f51a527eaa1e8269876f8423f54fa35a95", "Url": "https://api.github.com/repos/vikassrivastava123/Ideaswire", "Date": "2016-11-25T10:30:44Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((_index) < (_response.getResponseCount())) { return true; }else if ((_response.getType()) == (Response.ResponseType.SUCCESS_PARTIAL)) { try { _response = _connection.get_more(_response.getToken()); _index = 0; return (_index) < (_response.getResponseCount()); } catch (com.dkhenry.RethinkDB.errors.RqlDriverException e) { throw new java.util.NoSuchElementException(e.getMessage()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/7321/buggy-version/src.main.java.com.dkhenry.RethinkDB.RqlCursor.java", "BodyUseAPI": ["com.rethinkdb.Ql2.Response.getToken()", "com.dkhenry.RethinkDB.RqlConnection.get_more(_response.getToken())", "com.rethinkdb.Ql2.Response.getType()"], "Fixed commit": "9b419019eddd80a4464581c9a770b99126f0e24f", "Url": "https://api.github.com/repos/artichikin/rethinkjava", "Date": "2014-05-09T17:41:06Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((display) == null) { display = new logic.Read(indigoSrc.LogicFacade.taskList).resultString; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/2062/buggy-version/indigoSrc.LogicFacade.java", "BodyUseAPI": [], "Fixed commit": "47c9859ee6b12f0e7f5099c30c94d9bc45ac0559", "Url": "https://api.github.com/repos/cs2103aug2014-t11-4j/main", "Date": "2014-11-05T04:16:52Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tryDecode) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/3207/buggy-version/src.freenet.client.async.SplitFileFetcherCrossSegmentStorage.java", "BodyUseAPI": [], "Fixed commit": "fc7700e70fd843ad5f910d3685276d67eac0fe5c", "Url": "https://api.github.com/repos/toad/fred-staging", "Date": "2014-08-16T00:19:36Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (selectedDocument != null) { refreshLists(EventNames.FOLDERISHDOCUMENT_SELECTION_CHANGED, selectedDocument); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/8453/buggy-version/nuxeo-platform-webapp-base.src.main.java.org.nuxeo.ecm.webapp.documentsLists.ConversationDocumentsListsManager.java", "BodyUseAPI": ["org.nuxeo.ecm.webapp.documentsLists.ConversationDocumentsListsManager.refreshLists(EventNames.FOLDERISHDOCUMENT_SELECTION_CHANGED,org.nuxeo.ecm.core.api.DocumentModel)"], "Fixed commit": "f7555d76b8dcc0dfbe85880bcc36bc48a0b0bd80", "Url": "https://api.github.com/repos/nuxeo/nuxeo-jsf", "Date": "2012-03-30T14:34:29Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (selectedDocument != null) { refreshLists(EventNames.DOCUMENT_SELECTION_CHANGED, selectedDocument); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/8453/buggy-version/nuxeo-platform-webapp-base.src.main.java.org.nuxeo.ecm.webapp.documentsLists.ConversationDocumentsListsManager.java", "BodyUseAPI": ["org.nuxeo.ecm.webapp.documentsLists.ConversationDocumentsListsManager.refreshLists(EventNames.DOCUMENT_SELECTION_CHANGED,org.nuxeo.ecm.core.api.DocumentModel)"], "Fixed commit": "f7555d76b8dcc0dfbe85880bcc36bc48a0b0bd80", "Url": "https://api.github.com/repos/nuxeo/nuxeo-jsf", "Date": "2012-03-30T14:34:29Z"},
{"Line": "=>1013", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (rotMap.containsKey(ng)) v.addAll(rotMap.get(ng).getAllScripts(((short) (1))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/4017/buggy-version/Cascade.java", "BodyUseAPI": ["Cascade.Rotater.getAllScripts(int)", "java.util.Map<java.lang.String, Cascade.Rotater>.get(java.lang.String)", "java.util.Vector<java.lang.String>.addAll(java.util.Vector<java.lang.String>)"], "Fixed commit": "a87955089b549cc9dee495374eb896b8d8a0fb82", "Url": "https://api.github.com/repos/rkrambovitis/thergioni", "Date": "2014-11-06T09:41:29Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, com.innowhere.relproxy.impl.jproxy.core.clsmgr.ClassDescriptorSourceUnit>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (sourceDesc == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/3147/buggy-version/relproxy.src.main.java.com.innowhere.relproxy.impl.jproxy.core.clsmgr.ClassDescriptorSourceFileRegistry.java", "BodyUseAPI": [], "Fixed commit": "6d95391250f596e1554c7ba5b2ba8e8eb031a28b", "Url": "https://api.github.com/repos/jmarranz/relproxy", "Date": "2015-01-01T23:57:55Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.xtreemfs.osd.ec.ECReconstructionStage.StripeState.getReconstructor()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (reconstructor == null) { org.xtreemfs.foundation.logging.Logging.logMessage(Logging.LEVEL_DEBUG, Category.ec, this, \"Ignored already Event StripeReconstructed for file '%s' because it was already reconstructed.\", fileId); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/1539/buggy-version/java.servers.src.org.xtreemfs.osd.ec.ECReconstructionStage.java", "BodyUseAPI": [], "Fixed commit": "670ee74c4a940e69a29816cc83e068ccfa302403", "Url": "https://api.github.com/repos/kleingeist/xtreemfs", "Date": "2016-09-12T19:12:40Z"},
{"Line": "=>827", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Field.get(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (rid == null) { java.lang.reflect.Method method = clazz.getDeclaredMethod(getterName(field.getName())); rid = method.invoke(entity); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/3806/buggy-version/src.main.java.org.springframework.data.orient.core.OrientObjectTemplate.java", "BodyUseAPI": [], "Fixed commit": "f9a064ec4a94e5cb9a54671e6c0d397a985c3b4c", "Url": "https://api.github.com/repos/noskovd/spring-data-orient", "Date": "2014-10-18T07:01:14Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (adjective.endsWith(\"ci\")) { return (adjective.substring(0, ((adjective.length()) - 1))) + \"e\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/4885/buggy-version/src.main.java.scrabble.phrases.words.Adjective.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "5f22517e2eede7098e827c73653e07c8daf5746d", "Url": "https://api.github.com/repos/fabian20ro/propozitii-nostime", "Date": "2017-01-21T14:21:06Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((((summary.toLowerCase().contains(\"holiday\")) || (summary.toLowerCase().contains(\"no students\"))) || (summary.toLowerCase().contains(\"break\"))) && (!(summary.toLowerCase().contains(\"luncheon\")))) { if (startTime.contains(dateFormat.format(date))) { scheduleItems.clear(); scheduleItems.add(\"No School!\"); }else if (startTime.contains(dateFormat.format(tomorrow))) { tomorrowscheduleItems.clear(); tomorrowscheduleItems.add(\"No School!\"); } callback.run(); }else if (((summary.toLowerCase().contains(\"schedule\")) && (!(summary.toLowerCase().contains(\"back to school\")))) && ((startTime.contains(dateFormat.format(date))) || (startTime.contains(dateFormat.format(tomorrow))))) { if (startTime.contains(dateFormat.format(date))) { scheduleItems.clear(); for (java.lang.String s : scheduleArr.getString(\"description\").split(\"\\n\")) { scheduleItems.add(s); alternate = true; } }else if (startTime.contains(dateFormat.format(tomorrow))) { tomorrowscheduleItems.clear(); for (java.lang.String s : scheduleArr.getString(\"description\").split(\"\\n\")) { tomorrowscheduleItems.add(s); tomorrow_alternate = true; } } if (alternate) callback.run(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/4101/buggy-version/app.src.main.java.xyz.dchen.thegunnapp.GunnCalendar.java", "BodyUseAPI": ["java.lang.String.contains(java.lang.String)", "java.lang.String.toLowerCase()", "java.lang.String.toLowerCase()", "java.lang.String.contains(java.lang.String)"], "Fixed commit": "55361813e11dfe6f59686e140d2a28ee153eb11a", "Url": "https://api.github.com/repos/RiceCakess/TheGunnApp", "Date": "2016-09-01T06:53:34Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((scheduleItems.size()) == 0) motd.setText(((\"No School! (\" + (dateFormat.format(MainActivity.date))) + \")\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/4101/buggy-version/app.src.main.java.xyz.dchen.thegunnapp.Schedule.java", "BodyUseAPI": [], "Fixed commit": "55361813e11dfe6f59686e140d2a28ee153eb11a", "Url": "https://api.github.com/repos/RiceCakess/TheGunnApp", "Date": "2016-09-01T06:53:34Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (MainActivity.calendar.alternate) motd.setText(((\"Alternate Schedule (\" + (dateFormat.format(MainActivity.date))) + \")\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/4101/buggy-version/app.src.main.java.xyz.dchen.thegunnapp.Schedule.java", "BodyUseAPI": [], "Fixed commit": "55361813e11dfe6f59686e140d2a28ee153eb11a", "Url": "https://api.github.com/repos/RiceCakess/TheGunnApp", "Date": "2016-09-01T06:53:34Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (rootCause != null) { org.jrebirth.core.concurrent.JRebirthThreadPoolExecutor.LOGGER.error(\"JTP returned an error with rootCause =>\", rootCause); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/8297/buggy-version/org.jrebirth.core.src.main.java.org.jrebirth.core.concurrent.JRebirthThreadPoolExecutor.java", "BodyUseAPI": ["org.slf4j.Logger.error(java.lang.String,java.lang.Throwable)"], "Fixed commit": "3c9e4d10310cdaf70ef6c44bc1b494b1e1c15a40", "Url": "https://api.github.com/repos/amischler/JRebirth", "Date": "2013-08-26T16:43:57Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["context.getContentResolver().query(ScannedApplicationContract.CONTENT_URI,<nulltype>,<nulltype>,<nulltype>,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (cursor != null) { cursor.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/1111/buggy-version/app.src.main.java.org.satorysoft.cotton.di.mortar.ApplicationListPresenter.java", "BodyUseAPI": ["android.database.Cursor.close()"], "Fixed commit": "c9ba0af86b92b256868ea1d740111f92f435fd4c", "Url": "https://api.github.com/repos/viacheslavokolitiy/cotton", "Date": "2015-05-12T12:34:10Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.player.PlayerChatEvent.getPlayer()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(player.isOp())) { for (java.lang.String inputWord : me.russjr08.plugins.MyPlayerListener.keywords) { if (event.getMessage().toLowerCase().contains(inputWord)) { event.setCancelled(true); player.chat(((org.bukkit.ChatColor.DARK_RED) + \"I shouldn't say the word for doing something incorrectly!\")); player.kickPlayer(\"For failing!\"); break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/5342/buggy-version/iFail.src.me.russjr08.plugins.MyPlayerListener.java", "BodyUseAPI": ["org.bukkit.entity.Player.chat(((org.bukkit.ChatColor.DARK_RED) + \"I shouldn't say the word for doing something incorrectly!\"))", "org.bukkit.entity.Player.kickPlayer(java.lang.String)"], "Fixed commit": "a9eabe9be22b936c6e5e20b593a4475c7877b159", "Url": "https://api.github.com/repos/russjr08/NewBukkit", "Date": "2012-04-12T19:21:02Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (args[i].equals(\"-m\")) { crawler.main.Main.isMultiThread = true; }else { throw new java.lang.IllegalArgumentException((\"No config value after \" + (args[i]))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/796/buggy-version/src.main.java.crawler.main.Main.java", "BodyUseAPI": [], "Fixed commit": "bb3aabffec330747715253e9ebb5560bc309b9f2", "Url": "https://api.github.com/repos/g21589/PTTCrawler", "Date": "2016-03-04T07:26:51Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (\"Call Office\".equals(checkResult)) { factorableTV.setTextColor(getResources().getColor(R.color.red)); factorLoadButton.setText(\"Call Office\"); advanceLoadButton.setVisibility(View.INVISIBLE); }else if (\"Approved\".equals(checkResult)) { factorableTV.setTextColor(getResources().getColor(R.color.green)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/2242/buggy-version/app.src.main.java.com.mobile.otrcapitalllc.Activities.BrokerDetails.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "32b85fff423faa63f1e6b8d6c530cca78f7731d8", "Url": "https://api.github.com/repos/otrcapital/otrandroid", "Date": "2016-05-06T14:12:41Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((cvm.CreditCheckResult) == null) || (\"\".equals(cvm.CreditCheckResult))) { checkResult = \"Call Office\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/2242/buggy-version/app.src.main.java.com.mobile.otrcapitalllc.Activities.BrokerDetails.java", "BodyUseAPI": [], "Fixed commit": "32b85fff423faa63f1e6b8d6c530cca78f7731d8", "Url": "https://api.github.com/repos/otrcapital/otrandroid", "Date": "2016-05-06T14:12:41Z"},
{"Line": "=>306", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (copyFileDigests.containsKey(filename)) { reportConflict(filename, 0, commit.changedFiles.get(filename)); ifConflict = true; continue; }else continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/8939/buggy-version/src.LchClient.java", "BodyUseAPI": ["commit.changedFiles.get(java.lang.String)", "LchClient.reportConflict(java.lang.String,int,commit.changedFiles.get(filename))"], "Fixed commit": "f66c33d953d6d26bcfa1195b07df81a004baff30", "Url": "https://api.github.com/repos/kirakira/lch", "Date": "2014-12-10T03:26:37Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((myPose.getLocation().distance(goal.getLocation())) < TERMINAL_RANGE) { dir = myPose.angleTo(goal.getLocation()); }else { for (float f : canDir) { float cost = getPCDCost(f, myPose, lastPose, goal, angRes); if (cost < mincost) { mincost = cost; dir = f; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/4977/buggy-version/src.PathPlanner.java", "BodyUseAPI": ["lejos.robotics.navigation.Pose.angleTo(goal.getLocation())", "PathPlanner.getPCDCost(float,lejos.robotics.navigation.Pose,lejos.robotics.navigation.Pose,lejos.robotics.navigation.Pose,float)", "lejos.robotics.navigation.Pose.getLocation()"], "Fixed commit": "1c7e9a59560e9cf9814ecd297c728102ffc5c2ef", "Url": "https://api.github.com/repos/winstonliu/Robot-FinalProject", "Date": "2015-11-24T17:35:28Z"},
{"Line": "=>1325", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (c == '0') return -1L;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/3198/buggy-version/src.org.mozilla.javascript.ScriptRuntime.java", "BodyUseAPI": [], "Fixed commit": "3035416714058cb7943f6e4fe0019bf3ed064d05", "Url": "https://api.github.com/repos/nicks/rhino", "Date": "2012-01-10T11:03:14Z"},
{"Line": "=>407", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gwt.dom.client.Element.getNodeName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (\"BUTTON\".equals(nodeName)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/159/buggy-version/src.main.java.com.googlecode.mgwt.ui.client.widget.impl.ScrollPanelTouchImpl.java", "BodyUseAPI": [], "Fixed commit": "417c9780a78dfee7c28501286fcb5e209837f1ae", "Url": "https://api.github.com/repos/dankurka/mgwt", "Date": "2012-03-29T19:53:12Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((offset < 0) || (count < 0)) { throw new org.w3c.dom.DOMException(org.w3c.dom.DOMException.INDEX_SIZE_ERR, \"offset is out of bounds\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/7677/buggy-version/src.org.exist.dom.persistent.AbstractCharacterData.java", "BodyUseAPI": [], "Fixed commit": "b776adf2aee9c1c95821381403eb175d061843d2", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2017-08-02T21:14:34Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((offset < 0) || (count < 0)) { throw new org.w3c.dom.DOMException(org.w3c.dom.DOMException.INDEX_SIZE_ERR, \"offset is out of bounds\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/7677/buggy-version/src.org.exist.dom.memtree.AbstractCharacterData.java", "BodyUseAPI": [], "Fixed commit": "b776adf2aee9c1c95821381403eb175d061843d2", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2017-08-02T21:14:34Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.rapla.entities.configuration.RaplaConfiguration.find(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (pluginClassConfig == null) { pluginClassConfig = config; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/4161/buggy-version/src.org.rapla.gui.DefaultPluginOption.java", "BodyUseAPI": [], "Fixed commit": "a543764b27efb91584c16f1c28278b9c33aab8f9", "Url": "https://api.github.com/repos/rapla/rapla", "Date": "2015-02-01T03:17:19Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (is.peekToken(RegExpFunc.ESCAPE)) { token = is.peekToken(1); is.advancePointer(2); }else { token = is.peekToken(); is.advancePointer(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/1719/buggy-version/src.RegExpFunc.java", "BodyUseAPI": ["InputStream.peekToken()", "InputStream.advancePointer(int)", "InputStream.peekToken(int)", "InputStream.advancePointer()"], "Fixed commit": "063828e1839360705732c5d87a73c6acea61b4e9", "Url": "https://api.github.com/repos/nybblr/cs3240-compiler", "Date": "2013-03-28T21:23:58Z"},
{"Line": "=>1416", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.zstack.storage.ceph.backup.CephBackupStorageVO.getFsid()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((org.zstack.core.db.Q.New(org.zstack.storage.ceph.primary.CephPrimaryStorageVO.class).eq(CephPrimaryStorageVO_.fsid, fsid).find()) == null) { dbf.removeByPrimaryKey(fsid, org.zstack.storage.ceph.backup.CephCapacityVO.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/7649/buggy-version/plugin.ceph.src.main.java.org.zstack.storage.ceph.backup.CephBackupStorageBase.java", "BodyUseAPI": ["org.zstack.storage.ceph.backup.CephBackupStorageBase.removeByPrimaryKey(java.lang.String,java.lang.Class)"], "Fixed commit": "fc7e085fc7382d4884dd5c24a54807ccac83e2ec", "Url": "https://api.github.com/repos/MaJin1996/zstack", "Date": "2017-03-20T01:34:58Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((channel) == null) { setChannel(org.neo4j.driver.internal.net.ChannelFactory.create(address, securityPlan, timeoutMillis, logger)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/8008/buggy-version/driver.src.main.java.org.neo4j.driver.internal.net.SocketClient.java", "BodyUseAPI": [], "Fixed commit": "f3eb28c6effd6d0babc075d835621f2e37ca3be7", "Url": "https://api.github.com/repos/zhenlineo/java-driver", "Date": "2017-01-18T09:57:03Z"},
{"Line": "=>319", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((newTask) != null) && ((newTask.getStatus()) != (MyAsyncTask.Status.FINISHED))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/4991/buggy-version/src.org.qii.weiciyuan.ui.maintimeline.FriendsTimeLineFragment.java", "BodyUseAPI": [], "Fixed commit": "e6e9772c89708fa2eca1d776b438d2cbfd5d4fe8", "Url": "https://api.github.com/repos/qii/weiciyuan", "Date": "2012-10-10T12:04:45Z"},
{"Line": "=>327", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((middleTask) != null) && ((middleTask.getStatus()) != (MyAsyncTask.Status.FINISHED))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/4991/buggy-version/src.org.qii.weiciyuan.ui.maintimeline.FriendsTimeLineFragment.java", "BodyUseAPI": [], "Fixed commit": "e6e9772c89708fa2eca1d776b438d2cbfd5d4fe8", "Url": "https://api.github.com/repos/qii/weiciyuan", "Date": "2012-10-10T12:04:45Z"},
{"Line": "=>323", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((oldTask) != null) && ((oldTask.getStatus()) != (MyAsyncTask.Status.FINISHED))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/4991/buggy-version/src.org.qii.weiciyuan.ui.maintimeline.FriendsTimeLineFragment.java", "BodyUseAPI": [], "Fixed commit": "e6e9772c89708fa2eca1d776b438d2cbfd5d4fe8", "Url": "https://api.github.com/repos/qii/weiciyuan", "Date": "2012-10-10T12:04:45Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getGuild()) != null) { builder.append(((\" **Creator**: \" + (e.getGuild().getMemberById(Mage.commands.Mage.settings.getAuthor()).getEffectiveName())) + \"\\n\")); }else { builder.append(\" **Creator**: Violet\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/5472/buggy-version/src.main.java.Mage.commands.InfoCommand.java", "BodyUseAPI": ["net.dv8tion.jda.core.events.message.MessageReceivedEvent.getGuild()", "e.getGuild().getMemberById(Mage.commands.Mage.settings.getAuthor())", "net.dv8tion.jda.core.MessageBuilder.append(((\"    **Creator**:        \" + (e.getGuild().getMemberById(Mage.commands.Mage.settings.getAuthor()).getEffectiveName())) + \"\\n\"))", "e.getGuild().getMemberById(Mage.commands.Mage.settings.getAuthor()).getEffectiveName()"], "Fixed commit": "fa558aa69dc479437c46ef86107ed079d39d428b", "Url": "https://api.github.com/repos/drlau/Mage", "Date": "2017-01-24T03:03:42Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (jaypatel.co.in.bvmalumni.Info.isNetworkAvailable(this)) { android.content.Intent intent = new android.content.Intent(this, jaypatel.co.in.bvmalumni.Folder.FolderMainActivity.class); startActivity(intent); }else { jaypatel.co.in.bvmalumni.Info.showNetworkFailuireToast(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/468/buggy-version/app.src.main.java.jaypatel.co.in.bvmalumni.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "cb24fa43c438abe7d7e0104cf21bbb5d299f308b", "Url": "https://api.github.com/repos/jp9573/BVM-Alumni", "Date": "2017-12-25T05:20:27Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getString(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (maKv.equals(\"\")) { danhsachBanAn = new com.vietids.orderonline.orderonline.JsonModels.JsonAsyncTask.BanAnJsonAsyncTask(1, this).execute((\"DanhsachBanAnTheoKhuVucAPI/\" + (danhsachKhuVuc.get(0).getMAKV()))).get(); }else { danhsachBanAn = new com.vietids.orderonline.orderonline.JsonModels.JsonAsyncTask.BanAnJsonAsyncTask(1, this).execute((\"DanhsachBanAnTheoKhuVucAPI/\" + maKv)).get(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/4493/buggy-version/app.src.main.java.com.vietids.orderonline.orderonline.Activities.BanAnActivity.java", "BodyUseAPI": ["new com.vietids.orderonline.orderonline.JsonModels.JsonAsyncTask.BanAnJsonAsyncTask(1, this).execute((\"DanhsachBanAnTheoKhuVucAPI/\" + maKv)).get()", "com.vietids.orderonline.orderonline.JsonModels.JsonAsyncTask.BanAnJsonAsyncTask.execute(java.lang.String)"], "Fixed commit": "601e7ac348ade126449178314357a1856a86c69e", "Url": "https://api.github.com/repos/Kirito223/OrderOnLine", "Date": "2017-04-01T02:52:37Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((formData.getEmail()) != null) && (!(formData.getEmail().isEmpty()))) { com.tcts.datamodel.User potentialUser = database.getUserByEmail(formData.getEmail()); if (potentialUser != null) { if (((potentialUser.getSalt()) != null) && ((potentialUser.getHashedPassword()) != null)) { java.lang.String hashedPassword = com.tcts.util.SecurityUtil.getHashedPassword(formData.getPassword().trim(), potentialUser.getSalt()); if (hashedPassword.equals(potentialUser.getHashedPassword())) { com.tcts.common.SessionData sessionData = com.tcts.common.SessionData.beginNewSession(session); sessionData.setAuthenticated(true); sessionData.setUser(potentialUser); return \"redirect:\" + (potentialUser.getUserType().getHomepage()); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/3478/buggy-version/src.main.java.com.tcts.controller.LoginController.java", "BodyUseAPI": ["com.tcts.formdata.LoginFormData.getPassword()", "com.tcts.formdata.LoginFormData.getEmail()", "formData.getPassword().trim()", "com.tcts.database.DatabaseFacade.getUserByEmail(formData.getEmail())", "com.tcts.util.SecurityUtil.getHashedPassword(formData.getPassword().trim(),potentialUser.getSalt())"], "Fixed commit": "1a7e11dd5f75a5a525517bef1aa404fcf0d29af9", "Url": "https://api.github.com/repos/mcherm/TeachChildrenToSave", "Date": "2016-12-16T23:12:14Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(jsPath.endsWith(\"/\"))) { jsPath = jsPath + \"/\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/4897/buggy-version/maven-plugin.src.main.java.org.stjs.maven.MainSTJSMojo.java", "BodyUseAPI": [], "Fixed commit": "e8227d264977855f24372dafb3f5871f2cf2e2c4", "Url": "https://api.github.com/repos/st-js/st-js", "Date": "2015-07-20T16:44:57Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.file.Path.toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(jsPath.startsWith(\"/\"))) { jsPath = \"/\" + jsPath; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/4897/buggy-version/maven-plugin.src.main.java.org.stjs.maven.MainSTJSMojo.java", "BodyUseAPI": [], "Fixed commit": "e8227d264977855f24372dafb3f5871f2cf2e2c4", "Url": "https://api.github.com/repos/st-js/st-js", "Date": "2015-07-20T16:44:57Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (offset > 0) { offset_statement = (\" OFFSET \" + offset) + \" \"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/1109/buggy-version/src.CarSales.SQLdb.java", "BodyUseAPI": [], "Fixed commit": "9034ee341785d81dfb1a6dcc1211702e12e0c3f0", "Url": "https://api.github.com/repos/aayusharyan/sdl_project", "Date": "2017-10-25T18:01:23Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Queue<org.springframework.batch.item.ExecutionContext>.peek()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (contextList.contains(context)) { T[] items = this.delegate.batchRead(context); contextList.remove(context); synchronized(this) { for (T item : items) { this.localQueue.add(item); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/5868/buggy-version/batch-core.src.main.java.org.trpr.platform.batch.impl.spring.reader.CompositeItemStreamReader.java", "BodyUseAPI": ["java.util.Queue<org.springframework.batch.item.ExecutionContext>.remove(org.springframework.batch.item.ExecutionContext)", "org.trpr.platform.batch.spi.spring.reader.BatchItemStreamReader<T>.batchRead(org.springframework.batch.item.ExecutionContext)"], "Fixed commit": "3318b07b4ac49358b3bc5a9afe498c4c03a35b6f", "Url": "https://api.github.com/repos/regunathb/Trooper", "Date": "2012-11-15T14:49:22Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Queue<org.springframework.batch.item.ExecutionContext>.peek()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (context != null) { synchronized(context) { if (contextList.contains(context)) { T[] items = this.delegate.batchRead(context); contextList.remove(context); synchronized(this) { for (T item : items) { this.localQueue.add(item); } } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/5868/buggy-version/batch-core.src.main.java.org.trpr.platform.batch.impl.spring.reader.CompositeItemStreamReader.java", "BodyUseAPI": ["java.util.Queue<org.springframework.batch.item.ExecutionContext>.contains(org.springframework.batch.item.ExecutionContext)", "org.trpr.platform.batch.spi.spring.reader.BatchItemStreamReader<T>.batchRead(org.springframework.batch.item.ExecutionContext)", "java.util.Queue<org.springframework.batch.item.ExecutionContext>.remove(org.springframework.batch.item.ExecutionContext)"], "Fixed commit": "3318b07b4ac49358b3bc5a9afe498c4c03a35b6f", "Url": "https://api.github.com/repos/regunathb/Trooper", "Date": "2012-11-15T14:49:22Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((alloyFurnace.cookTime) == 0) l = 23;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/2520/buggy-version/src.main.java.com.elytradev.teckle.client.gui.GuiAlloyFurnace.java", "BodyUseAPI": [], "Fixed commit": "44a9bb952b52059bd7239fe0403be73a1565c08b", "Url": "https://api.github.com/repos/elytra/Teckle", "Date": "2017-04-24T06:00:54Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.heinrichreimer.inquiry.Inquiry.inquiry) != null) { throw new java.lang.IllegalStateException(\"Inquiry already initialized, deinit() first\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/6190/buggy-version/library.src.main.java.com.heinrichreimer.inquiry.Inquiry.java", "BodyUseAPI": [], "Fixed commit": "02374219baf49bf88b27f366cdea15e004a9ea8c", "Url": "https://api.github.com/repos/aitorvs/android-inquiry", "Date": "2016-09-18T10:46:06Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.hibernate.Session.get(java.lang.Class,int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (gig != null) { session.beginTransaction(); session.delete(gig); session.getTransaction().commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/6590/buggy-version/src.main.java.com.rh.gigs.GigDao.java", "BodyUseAPI": ["org.hibernate.Session.delete(com.rh.gigs.Gig)"], "Fixed commit": "95eff9be52ecc9f272c4efd46daaebb5dd2f0825", "Url": "https://api.github.com/repos/robertjamesharrison/PressAssociationChallenge", "Date": "2017-09-11T17:18:48Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (desc != null) { content = content.replaceAll(desc, \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/4240/buggy-version/src.application.Parser.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "28fd6476bfa41de8af188b986deac9dcd8f35aa7", "Url": "https://api.github.com/repos/cs2103aug2014-w14-2j/main", "Date": "2014-11-01T09:03:32Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (desc != null) { input = input.replaceAll(desc, \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/4240/buggy-version/src.application.Parser.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "28fd6476bfa41de8af188b986deac9dcd8f35aa7", "Url": "https://api.github.com/repos/cs2103aug2014-w14-2j/main", "Date": "2014-11-01T09:03:32Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((classesWithinGrades.get(grade)) == null) { java.util.ArrayList<java.lang.Class> newClassList = new java.util.ArrayList<java.lang.Class>(); newClassList.add(c); classesWithinGrades.put(grade, newClassList); }else { classesWithinGrades.get(grade).add(c); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/2064/buggy-version/src.main.Subject.java", "BodyUseAPI": ["classesWithinGrades.get(grade).add(java.lang.Class)", "java.util.HashMap<main.Grade, java.util.ArrayList<java.lang.Class>>.put(main.Grade,java.util.ArrayList<java.lang.Class>)", "java.util.HashMap<main.Grade, java.util.ArrayList<java.lang.Class>>.get(main.Grade)"], "Fixed commit": "a4e432a0ac32ed74d3d60d5d80862ae5b389b8b1", "Url": "https://api.github.com/repos/almookie/COMP4920-Major-Project", "Date": "2016-10-04T14:37:46Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getCallingActivity()) != null) { setResult(Activity.RESULT_OK); }else { android.content.Intent intent = new android.content.Intent(this, com.edu.thss.smartdental.MainActivity.class); startActivity(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/4894/buggy-version/src.com.edu.thss.smartdental.JoinCircleActivity.java", "BodyUseAPI": [], "Fixed commit": "c186db5760469a532b64e4048a48cf6db368f7ba", "Url": "https://api.github.com/repos/Ontree/Smart_Dental", "Date": "2014-12-11T09:10:33Z"},
{"Line": "=>345", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.restlet.engine.converter.DefaultConverter.VARIANT_OBJECT_XML_SUPPORTED) { updatePreferences(preferences, MediaType.APPLICATION_JAVA_OBJECT_XML, 1.0F); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/1421/buggy-version/modules.org.restlet.src.org.restlet.engine.converter.DefaultConverter.java", "BodyUseAPI": [], "Fixed commit": "b85c2ef182c69c5e2e21df008ccb249ccf80c7b9", "Url": "https://api.github.com/repos/restlet/restlet-framework-java", "Date": "2013-08-14T15:58:15Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.restlet.engine.converter.DefaultConverter.VARIANT_OBJECT_XML_SUPPORTED) { result = addVariant(result, org.restlet.engine.converter.DefaultConverter.VARIANT_OBJECT_XML); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/1421/buggy-version/modules.org.restlet.src.org.restlet.engine.converter.DefaultConverter.java", "BodyUseAPI": [], "Fixed commit": "b85c2ef182c69c5e2e21df008ccb249ccf80c7b9", "Url": "https://api.github.com/repos/restlet/restlet-framework-java", "Date": "2013-08-14T15:58:15Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (val instanceof java.lang.String) { return org.apache.commons.lang.math.NumberUtils.toLong(((java.lang.String) (val)), fallback); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/5150/buggy-version/lib.src.main.java.net.nunnerycode.bukkit.libraries.ivory.settings.IvorySettings.java", "BodyUseAPI": [], "Fixed commit": "54a5d7f12b5f8433a9138a3fde148d4f9239ecae", "Url": "https://api.github.com/repos/Nunnery/Ivory", "Date": "2014-03-19T02:49:44Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (val instanceof java.lang.Boolean) { return ((java.lang.Boolean) (val)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/5150/buggy-version/lib.src.main.java.net.nunnerycode.bukkit.libraries.ivory.settings.IvorySettings.java", "BodyUseAPI": [], "Fixed commit": "54a5d7f12b5f8433a9138a3fde148d4f9239ecae", "Url": "https://api.github.com/repos/Nunnery/Ivory", "Date": "2014-03-19T02:49:44Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (val instanceof java.lang.String) { return org.apache.commons.lang.math.NumberUtils.toInt(((java.lang.String) (val)), fallback); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/5150/buggy-version/lib.src.main.java.net.nunnerycode.bukkit.libraries.ivory.settings.IvorySettings.java", "BodyUseAPI": [], "Fixed commit": "54a5d7f12b5f8433a9138a3fde148d4f9239ecae", "Url": "https://api.github.com/repos/Nunnery/Ivory", "Date": "2014-03-19T02:49:44Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (val instanceof java.lang.String) { return ((java.lang.String) (val)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/5150/buggy-version/lib.src.main.java.net.nunnerycode.bukkit.libraries.ivory.settings.IvorySettings.java", "BodyUseAPI": [], "Fixed commit": "54a5d7f12b5f8433a9138a3fde148d4f9239ecae", "Url": "https://api.github.com/repos/Nunnery/Ivory", "Date": "2014-03-19T02:49:44Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (val instanceof java.lang.String) { return org.apache.commons.lang.math.NumberUtils.toDouble(((java.lang.String) (val)), fallback); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/5150/buggy-version/lib.src.main.java.net.nunnerycode.bukkit.libraries.ivory.settings.IvorySettings.java", "BodyUseAPI": [], "Fixed commit": "54a5d7f12b5f8433a9138a3fde148d4f9239ecae", "Url": "https://api.github.com/repos/Nunnery/Ivory", "Date": "2014-03-19T02:49:44Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.dataflow.common.utils.PropertyUtil.getString(java.util.Properties,ActivemqConfig.PASSWORD)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (password != null) { dataOutputMappingOptions.put(ActivemqConfig.PASSWORD, password); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/2376/buggy-version/data-flow-sender.data-flow-sender-activemq.src.main.java.com.github.dataflow.sender.activemq.handler.ActivemqDataSenderHandler.java", "BodyUseAPI": ["java.util.Properties.put(ActivemqConfig.PASSWORD,java.lang.String)"], "Fixed commit": "0d6339bca2b00ea15c2ad965f8969f494f3f5c59", "Url": "https://api.github.com/repos/kevinKaiF/data-flow", "Date": "2017-07-20T08:52:06Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.dataflow.common.utils.PropertyUtil.getString(java.util.Properties,ActivemqConfig.USERNAME)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (username != null) { dataOutputMappingOptions.put(ActivemqConfig.USERNAME, username); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/2376/buggy-version/data-flow-sender.data-flow-sender-activemq.src.main.java.com.github.dataflow.sender.activemq.handler.ActivemqDataSenderHandler.java", "BodyUseAPI": ["java.util.Properties.put(ActivemqConfig.USERNAME,java.lang.String)"], "Fixed commit": "0d6339bca2b00ea15c2ad965f8969f494f3f5c59", "Url": "https://api.github.com/repos/kevinKaiF/data-flow", "Date": "2017-07-20T08:52:06Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState == null) { onNavigationItemSelected(navigationView.getMenu().getItem(0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/9025/buggy-version/app.src.main.java.com.nhpatt.asde.mvp.activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "b54f08855e79aee9c88c5513ee0f89d1073ce668", "Url": "https://api.github.com/repos/nhpatt/Catalogo-de-Actividades-ASDE", "Date": "2016-05-15T16:49:16Z"},
{"Line": "=>806", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.infoglue.cms.util.CmsPropertyHandler.getDatabaseEngine().equalsIgnoreCase(\"mysql\")) { assetSQL = (((((\"CALL SQL SELECT distinct(da.digitalAssetId),da.assetFileName,da.assetKey,da.assetFilePath,da.assetContentType,da.assetFileSize FROM cmDigitalAsset da, cmContentVersionDigitalAsset cvda, cmContentVersion cv, cmContent c WHERE cvda.digitalAssetId = da.digitalAssetId AND cvda.contentVersionId = cv.contentVersionId AND cv.contentId = c.contentId \" + assetFilterTerm) + \" AND c.repositoryId IN (\") + repositoryIdBindingMarkers) + \") ORDER BY da.digitalAssetId desc LIMIT \") + maxRows) + \" AS org.infoglue.cms.entities.content.impl.simple.SmallDigitalAssetImpl\"; }else if (((org.infoglue.cms.util.CmsPropertyHandler.getUseShortTableNames()) != null) && (org.infoglue.cms.util.CmsPropertyHandler.getUseShortTableNames().equalsIgnoreCase(\"true\"))) assetSQL = (((((\"CALL SQL SELECT * from (select distinct(da.DigAssetId),da.assetFileName,da.assetKey,da.assetFilePath,da.assetContentType,da.assetFileSize FROM cmDigAsset da, cmContVerDigAsset cvda, cmContVer cv, cmCont c WHERE cvda.DigAssetId = da.DigAssetId AND cvda.contVerId = cv.contVerId AND cv.contId = c.contId \" + assetFilterTerm) + \" AND c.repositoryId IN (\") + repositoryIdBindingMarkers) + \") ORDER BY da.DigAssetId desc) where ROWNUM < \") + maxRows) + \" AS org.infoglue.cms.entities.content.impl.simple.SmallDigitalAssetImpl\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/5766/buggy-version/src.java.org.infoglue.cms.controllers.kernel.impl.simple.SearchController.java", "BodyUseAPI": [], "Fixed commit": "ed60c3a907d1e84c62efe0e2076d89f5f9e22a11", "Url": "https://api.github.com/repos/bogeblad/infoglue", "Date": "2013-09-12T21:50:18Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mSeed.getSpecie()) != null) { java.io.File file = new java.io.File((((mContext.getCacheDir()) + \"/\") + (mSeed.getSpecie().toLowerCase().replaceAll(\"\\\\s\", \"\")))); android.graphics.BitmapFactory.Options options = new android.graphics.BitmapFactory.Options(); options.inPreferredConfig = Bitmap.Config.ARGB_8888; android.graphics.Bitmap image = android.graphics.BitmapFactory.decodeFile(file.getPath(), options); seedView.setImageBitmap(image); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/293/buggy-version/src.org.gots.seed.view.SeedWidget.java", "BodyUseAPI": ["mSeed.getSpecie().toLowerCase()", "mSeed.getSpecie().toLowerCase().replaceAll(java.lang.String,java.lang.String)", "org.gots.seed.GrowingSeedInterface.getSpecie()"], "Fixed commit": "80faed41e3903f678e2f0deed264ce486b86a319", "Url": "https://api.github.com/repos/artmoni/gardening-manager-android", "Date": "2014-03-01T23:34:56Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(type.obstacles)) return obstacles;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/6089/buggy-version/src.game.map.gen.ObjectFactory.java", "BodyUseAPI": [], "Fixed commit": "b67b1f67d41b63c01cd446c8b22e7e49c213d819", "Url": "https://api.github.com/repos/anubiann00b/JourneyOfFear", "Date": "2014-05-26T23:02:20Z"},
{"Line": "=>311", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (segment.equals(\"!LPE\")) { continue; }else { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/134/buggy-version/src.org.nschmidt.ldparteditor.text.SyntaxFormatter.java", "BodyUseAPI": [], "Fixed commit": "c2facf463bda026131d149df97a3b6593c5171db", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2017-04-04T19:04:56Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((userText.getText().length()) == 0) { return; }else { if ((uniqueNick) == false) { sendNickname(userText.getText()); userText.setText(\"\"); }else { sendMessage(userText.getText()); userText.setText(\"\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/7913/buggy-version/src.Client.java", "BodyUseAPI": ["Client.1.sendMessage(java.lang.String)", "javax.swing.JTextField.setText(java.lang.String)", "javax.swing.JTextField.getText()", "Client.1.sendNickname(java.lang.String)", "javax.swing.JTextField.setText(java.lang.String)", "javax.swing.JTextField.getText()"], "Fixed commit": "51db1cc3ea68c4655945f0ffd90f1b372a1e88b8", "Url": "https://api.github.com/repos/Thyss/ChatClientv2", "Date": "2012-12-24T15:01:10Z"},
{"Line": "=>1286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((i > 1) && (i < 4)) { if (i == 2) { android.widget.EditText etv = addEditTextView(i); etv.setFocusable(true); etv.requestFocus(); row.addView(etv); }else { row.addView(addEditTextView(i)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/2577/buggy-version/VALDOC.app.src.main.java.com.project.valdoc.DynamicTableActivity.java", "BodyUseAPI": ["com.project.valdoc.DynamicTableActivity.addEditTextView(int)", "android.widget.TableRow.addView(android.widget.EditText)", "com.project.valdoc.DynamicTableActivity.addEditTextView(int)"], "Fixed commit": "8f32d6b674470a5044ad5f3fff98b88bec9b50e2", "Url": "https://api.github.com/repos/avinashtiwari87/HelloAcTest", "Date": "2016-08-06T22:45:44Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.apache.commons.lang3.StringUtils.isBlank(correction)) || ((correction.trim().length()) < 2)) { throw new java.lang.RuntimeException(((\"found invalid blank or single character conversion for [\" + original) + \"]\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/7460/buggy-version/eol-globi-data-tool.src.main.java.org.eol.globi.data.taxon.TaxonNameNormalizer.java", "BodyUseAPI": [], "Fixed commit": "49661050a18bcec699870e2d257c2e7e7c7bd5e4", "Url": "https://api.github.com/repos/jhpoelen/eol-globi-data", "Date": "2013-11-28T17:33:55Z"},
{"Line": "=>458", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((forest.getNode(cur.id)) == null) { treeNode = forest.addNode(cur.id, cur.object); }else { treeNode = forest.addNode((((cur.id) + \";dup\") + (forest.vars[0])), cur.object); (forest.vars[0])++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/3778/buggy-version/CazraGraphs.src.cazgraphs.graph.GraphSolver.java", "BodyUseAPI": ["cazgraphs.graph.GraphSprite.addNode(cur.id,cur.object)", "cazgraphs.graph.GraphSprite.addNode((((cur.id) + \";dup\") + (forest.vars[0])),cur.object)"], "Fixed commit": "0e32cec9686f778d78b13c7ef8ecfae75de864da", "Url": "https://api.github.com/repos/Cazra/CazraGraphs", "Date": "2013-07-30T19:41:56Z"},
{"Line": "=>1008", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Object.intValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (dashNum > 0) { dash = new float[dashNum]; for (int i = 0; i < dashNum; i++) { dash[i] = ((java.lang.Number) (cmd[(off++)])).floatValue(); } }else { dash = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/4898/buggy-version/src.main.java.de.sciss.swingosc.Pen.java", "BodyUseAPI": [], "Fixed commit": "67a4e647ab216894a14e9e6ab3d36751462e8dc9", "Url": "https://api.github.com/repos/Sciss/SwingOSC", "Date": "2012-03-16T13:17:57Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (payment <= 0.01) { java.lang.System.out.println(\"Invalid input. Must pay >= $0.01\"); }else { currentTransaction.addPayment(payment); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/3251/buggy-version/src.hw2.Register.java", "BodyUseAPI": ["hw2.Transaction.addPayment(double)"], "Fixed commit": "add0a419c1babb60a52d8c39dfe6c3fa68eb027e", "Url": "https://api.github.com/repos/palmerjoshua/COP4331", "Date": "2015-09-25T21:12:25Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<seedu.address.model.person.ReadOnlyPerson>.get(targetIndex.getZeroBased())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (personToFavourite.getFavourite().equals(true)) { throw new seedu.address.logic.commands.exceptions.CommandException(seedu.address.logic.commands.FavouriteCommand.MESSAGE_DUPLICATE_FAVOURITE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/4053/buggy-version/src.main.java.seedu.address.logic.commands.FavouriteCommand.java", "BodyUseAPI": [], "Fixed commit": "b217a2a7c3e4b971209fddbee3e8a4a354c755f3", "Url": "https://api.github.com/repos/Esilocke/addressbook-level4", "Date": "2017-11-13T12:46:55Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<seedu.address.model.person.ReadOnlyPerson>.get(targetIndex.getZeroBased())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (personToUnfavourite.getFavourite().equals(false)) { throw new seedu.address.logic.commands.exceptions.CommandException(seedu.address.logic.commands.UnfavouriteCommand.MESSAGE_NOTFAVOURITEYET_PERSON); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/4053/buggy-version/src.main.java.seedu.address.logic.commands.UnfavouriteCommand.java", "BodyUseAPI": [], "Fixed commit": "b217a2a7c3e4b971209fddbee3e8a4a354c755f3", "Url": "https://api.github.com/repos/Esilocke/addressbook-level4", "Date": "2017-11-13T12:46:55Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["m_textbox.getValue().trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.opencms.util.CmsStringUtil.isNotEmptyOrWhitespaceOnly(result)) { result += (\"?__\" + (org.opencms.ade.galleries.client.ui.CmsImageGalleryField.PARAMETER_SCALE)) + (m_scaleValue); if (m_configuration.isUseFormats()) { result += (\"&\" + (org.opencms.ade.galleries.client.ui.CmsImageGalleryField.PARAMETER_FORMAT)) + (m_formatSelection.getFormValueAsString()); m_selectedFormat = m_formatSelection.getFormValueAsString(); } result += (\"&\" + (org.opencms.ade.galleries.client.ui.CmsImageGalleryField.PARAMETER_DESC)) + (com.google.gwt.http.client.URL.encode(m_descriptionArea.getFormValueAsString())); m_description = m_descriptionArea.getFormValueAsString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/4926/buggy-version/src-gwt.org.opencms.ade.galleries.client.ui.CmsImageGalleryField.java", "BodyUseAPI": [], "Fixed commit": "5c7ae4f93883a5d006895d58659896fa6de845f0", "Url": "https://api.github.com/repos/alkacon/opencms-core", "Date": "2014-06-25T16:05:02Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (analysisList.isEmpty()) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/8853/buggy-version/Voikko.src.main.java.fi.nationallibrary.ndl.solrvoikko.VoikkoFilter.java", "BodyUseAPI": [], "Fixed commit": "312dc6febca15b0fa0dcdd4e7f2ca07afc5dc164", "Url": "https://api.github.com/repos/KDK-Alli/SolrPlugins", "Date": "2012-10-24T12:43:39Z"},
{"Line": "=>408", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pleaseWaitDialog) != null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/3626/buggy-version/PuzzlesSolver.src.gr.sullenart.games.puzzles.PuzzleActivity.java", "BodyUseAPI": [], "Fixed commit": "20e0b391b03421eb072f127563d4a28c64aa11e9", "Url": "https://api.github.com/repos/kgiannakakis/PuzzlesSolver", "Date": "2012-10-10T05:21:02Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((e instanceof com.github.yeriomin.playstoreapi.AuthException) && (null != (((com.github.yeriomin.playstoreapi.AuthException) (e)).getTwoFactorUrl()))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/7243/buggy-version/app.src.main.java.com.github.yeriomin.yalpstore.CredentialsDialogBuilder.java", "BodyUseAPI": [], "Fixed commit": "c190e70d26fa83295aef66a6bc3cf684037ac4c5", "Url": "https://api.github.com/repos/yeriomin/YalpStore", "Date": "2017-04-01T00:36:35Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sonar.api.component.ResourcePerspectives.as(java.lang.Class,org.sonar.api.resources.File)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (issuable != null) { issuable.addIssue(issuable.newIssueBuilder().ruleKey(ruleKey).message(settings.getString(org.sonar.xoo.rule.CustomMessageSensor.MESSAGE_PROPERTY)).build()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/8927/buggy-version/plugins.sonar-xoo-plugin.src.main.java.org.sonar.xoo.rule.CustomMessageSensor.java", "BodyUseAPI": ["issuable.newIssueBuilder().ruleKey(org.sonar.api.rule.RuleKey)", "issuable.newIssueBuilder().ruleKey(ruleKey).message(settings.getString(org.sonar.xoo.rule.CustomMessageSensor.MESSAGE_PROPERTY)).build()", "issuable.newIssueBuilder().ruleKey(ruleKey).message(settings.getString(org.sonar.xoo.rule.CustomMessageSensor.MESSAGE_PROPERTY))", "org.sonar.api.issue.Issuable.addIssue(issuable.newIssueBuilder().ruleKey(ruleKey).message(settings.getString(org.sonar.xoo.rule.CustomMessageSensor.MESSAGE_PROPERTY)).build())", "org.sonar.api.issue.Issuable.newIssueBuilder()"], "Fixed commit": "164d6d931c3b015877cbfa936f03ea4503349ddb", "Url": "https://api.github.com/repos/sulabh-msft/sonarqube", "Date": "2015-09-22T09:48:16Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (validateDetails()) signInPassword();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/7170/buggy-version/app.src.main.java.com.aman_arora.firebase.swf.ui.login.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "0fbb3d707697d57c603cf9a6e58a7de7f48037a5", "Url": "https://api.github.com/repos/arora-aman/Shop-with-Friends", "Date": "2016-12-31T23:52:00Z"},
{"Line": "=>398", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (openmodularturrets.handler.ConfigHandler.offlineModeSupport) { this.owner = par1.getString(\"owner\"); }else if ((getPlayerUIDUnstable(par1.getString(\"owner\"))) != null) { this.owner = getPlayerUIDUnstable(par1.getString(\"owner\")).toString(); }else if ((getPlayerUUID(par1.getString(\"owner\"))) != null) { this.owner = getPlayerUUID(par1.getString(\"owner\")).toString(); }else { java.util.logging.Logger.getGlobal().info(((((((((\"Found non existent owner: \" + (par1.getString(\"owner\"))) + \"at coordinates: \") + (this.xCoord)) + \",\") + (this.yCoord)) + \",\") + (this.zCoord)) + \". Dropping Turretbase\")); worldObj.func_147480_a(this.xCoord, this.yCoord, this.zCoord, true); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/2737/buggy-version/src.main.java.openmodularturrets.tileentity.turretbase.TurretBase.java", "BodyUseAPI": [], "Fixed commit": "88c8a91a849f19938769c7005f521522f767a202", "Url": "https://api.github.com/repos/OpenModularTurretsTeam/OpenModularTurrets", "Date": "2017-02-01T19:32:27Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((popupWindow) != null) { popupWindow.dismiss(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/3039/buggy-version/AndroidRally.src.se.chalmers.dryleafsoftware.androidrally.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "cc53dbe289e8691b6be9c2f0a575826bfbee305a", "Url": "https://api.github.com/repos/lucaspi/AndroidRally", "Date": "2013-10-18T12:28:16Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(donation)) { bar.setTitle(getPreferenceScreen().getTitle()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/1360/buggy-version/app.src.main.java.com.pokescanner.settings.SettingsFragment.java", "BodyUseAPI": [], "Fixed commit": "717cbdb17a19bd046868b4ec5b1f57f7ea3fc8a0", "Url": "https://api.github.com/repos/ecl1ps/PSC", "Date": "2016-09-07T18:20:06Z"},
{"Line": "=>352", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (v1 < 0) { v1 = v1 + 24; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/5132/buggy-version/GTFSOffline.src.com.wbrenna.gtfsoffline.ServiceCalendar.java", "BodyUseAPI": [], "Fixed commit": "4599ec0b6f58230d13321f36f4a214d6a7d5a05d", "Url": "https://api.github.com/repos/wbrenna/GTFSOffline", "Date": "2015-04-24T15:33:55Z"},
{"Line": "=>475", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (v1 < 0) { v1 = v1 + 24; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/5132/buggy-version/GTFSOffline.src.com.wbrenna.gtfsoffline.ServiceCalendar.java", "BodyUseAPI": [], "Fixed commit": "4599ec0b6f58230d13321f36f4a214d6a7d5a05d", "Url": "https://api.github.com/repos/wbrenna/GTFSOffline", "Date": "2015-04-24T15:33:55Z"},
{"Line": "=>355", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (v2 < 0) { v2 = v2 + 24; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/5132/buggy-version/GTFSOffline.src.com.wbrenna.gtfsoffline.ServiceCalendar.java", "BodyUseAPI": [], "Fixed commit": "4599ec0b6f58230d13321f36f4a214d6a7d5a05d", "Url": "https://api.github.com/repos/wbrenna/GTFSOffline", "Date": "2015-04-24T15:33:55Z"},
{"Line": "=>478", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (v2 < 0) { v2 = v2 + 24; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/5132/buggy-version/GTFSOffline.src.com.wbrenna.gtfsoffline.ServiceCalendar.java", "BodyUseAPI": [], "Fixed commit": "4599ec0b6f58230d13321f36f4a214d6a7d5a05d", "Url": "https://api.github.com/repos/wbrenna/GTFSOffline", "Date": "2015-04-24T15:33:55Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (profilePicture != null) { notif.setLargeIcon(profilePicture); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/7832/buggy-version/android.src.main.java.com.wix.reactnativenotifications.core.notification.PushNotification.java", "BodyUseAPI": ["Notification.Builder.setLargeIcon(android.graphics.Bitmap)"], "Fixed commit": "40d6050b7d2e4ac5866b229de35c37cbafd21afa", "Url": "https://api.github.com/repos/jbolter/react-native-notifications", "Date": "2017-09-20T01:52:27Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((newickFile.getValue()) != null) { node = new nl.tudelft.dnainator.parser.TreeParser(getNewickFile()).parse(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/1737/buggy-version/dnainator-javafx.src.main.java.nl.tudelft.dnainator.javafx.services.GraphLoadService.java", "BodyUseAPI": [], "Fixed commit": "3240569c94be44d003e6c881dc65f6b30a6319ac", "Url": "https://api.github.com/repos/ohuang12/dnainator", "Date": "2015-06-16T19:17:27Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (table.isEditing()) { table.getCellEditor().stopCellEditing(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/1136/buggy-version/praxis.live.pxr.src.net.neilcsmith.praxis.live.pxr.ImportRenameSupport.java", "BodyUseAPI": ["javax.swing.JTable.getCellEditor()", "javax.swing.table.TableCellEditor.stopCellEditing()"], "Fixed commit": "2a67dcee744382215c36c082f0153e59e91863eb", "Url": "https://api.github.com/repos/praxis-live/praxis-live", "Date": "2014-08-25T17:36:54Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((collectionPlayerPresenter) != null) { collectionPlayerPresenter.updateHeaderView(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/2085/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.play.collection.body.CollectionPlayerMetadataPresenter.java", "BodyUseAPI": [], "Fixed commit": "7ad68ea0384bae5d5ed9fae91349555c879502a8", "Url": "https://api.github.com/repos/nutan-gooru/Gooru-Web", "Date": "2014-08-20T13:55:09Z"},
{"Line": "=>832", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ut.dph.dao.impl.transactionInDAOImpl.getTransactionTarget(summary.getbatchId(),summary.gettransactionInId())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (targetDetails != null) { batchIdList.add(summary.getbatchId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/4238/buggy-version/src.main.java.com.ut.dph.dao.impl.transactionInDAOImpl.java", "BodyUseAPI": [], "Fixed commit": "aa830f96fd09b22af09c973cb01356f894f6c9fb", "Url": "https://api.github.com/repos/thenhkid/universalTranslator", "Date": "2016-05-16T14:10:54Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (container instanceof com.rockwellcollins.atc.agree.agree.NodeEq) { return new java.util.HashSet<>(); }else { while ((!(container instanceof org.osate.aadl2.ComponentClassifier)) && (!(container instanceof com.rockwellcollins.atc.agree.agree.AgreeContractLibrary))) { container = container.eContainer(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/4059/buggy-version/fm-workbench.agree.com.rockwellcollins.atc.agree.src.com.rockwellcollins.atc.agree.scoping.AgreeScopeProvider.java", "BodyUseAPI": ["org.eclipse.emf.ecore.EObject.eContainer()"], "Fixed commit": "b2cf5d7dc456d926d3c38a482bfb371a611d4a57", "Url": "https://api.github.com/repos/smaccm/smaccm", "Date": "2014-04-18T17:03:11Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.common.collect.Lists.newArrayList()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((resultFun.size()) > 0) { template = ((com.google.common.base.Joiner.on((\"+\" + (\"\\n\" + \"+\"))).join(resultFun)) + \";\\n\") + template; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/4144/buggy-version/src.main.java.org.nlpcn.es4sql.SQLFunctions.java", "BodyUseAPI": ["com.google.common.base.Joiner.on((\"+\" + (\"\\n\" + \"+\"))).join(java.util.List<java.lang.String>)"], "Fixed commit": "ae2419bf651958d635cc0f58d8ace438dd516f79", "Url": "https://api.github.com/repos/NLPchina/elasticsearch-sql", "Date": "2017-08-30T13:20:12Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ac.uk.susx.tag.utils.AnnotationUtils.annotationsToArray(java.util.List<? extends ac.uk.susx.tag.annotation.Annotation<java.lang.String>>,java.lang.String[])"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (strToks == null) { java.lang.System.out.println((\"Toks are null; \" + (sentence.getSentence().getAnnotation()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/1695/buggy-version/src.ac.uk.susx.tag.annotator.PoSTagAnnotator.java", "BodyUseAPI": [], "Fixed commit": "fdcc81b74a6dc1045c011b6c027ba948e71f3d4e", "Url": "https://api.github.com/repos/jackpay/DocumentParserToolkit", "Date": "2015-01-14T20:11:44Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (penSizeIdentifier != 0) { penSize = getResources().getDimension(penSizeIdentifier); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/5624/buggy-version/src.com.manichord.sketchnotes.SketchView.java", "BodyUseAPI": [], "Fixed commit": "ca1a0b8d57a41c651a75cf08a152035c54379e65", "Url": "https://api.github.com/repos/maks/Sketch-Notes", "Date": "2011-11-07T02:04:59Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (android.preference.PreferenceManager.getDefaultSharedPreferences(this.getApplicationContext()).getBoolean(\"night_mode\", false)) getDelegate().setLocalNightMode(AppCompatDelegate.MODE_NIGHT_YES); else getDelegate().setLocalNightMode(AppCompatDelegate.MODE_NIGHT_NO);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/7508/buggy-version/app.src.main.java.com.incitorrent.radyo.menemen.pro.show_image_comments.java", "BodyUseAPI": [], "Fixed commit": "05fb04d6a9b648eff853f9c5c79d9318285afe4a", "Url": "https://api.github.com/repos/LutfiTekin/RadyoMenemenPro", "Date": "2016-08-06T19:10:38Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isFirst) { if ((isTop) && ((adjacentTankYNeg) != null)) { setTank(adjacentTankYNeg.getTank()); } isFirst = false; }else if ((!((getTank().getCapacity()) == (2 * (this.TANK_CAPACITY)))) && (!(worldObj.isRemote))) { com.nik7.upgcraft.tileentities.UpgCtileentityTank tank; net.minecraftforge.fluids.FluidStack fluidStack = this.getFluid(); if (isTop) tank = adjacentTankYNeg; else tank = adjacentTankYPos; com.nik7.upgcraft.tank.UpgCTank cTank = tank.getTank(); if ((cTank.getCapacity()) == (this.TANK_CAPACITY)) { cTank = new com.nik7.upgcraft.tank.UpgCTank((2 * (TANK_CAPACITY))); }else if ((cTank.getCapacity()) != (2 * (this.TANK_CAPACITY))) com.nik7.upgcraft.util.LogHelper.error((\"Unknow tank capacity: \" + (cTank.getCapacity()))); this.setTank(cTank); this.tank.fill(fluidStack, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/92/buggy-version/src.main.java.com.nik7.upgcraft.tileentities.UpgCtileentityTank.java", "BodyUseAPI": [], "Fixed commit": "088f79f378edc1e213c93dc874485cc58a1d0833", "Url": "https://api.github.com/repos/nik7007/UpgradeCraft", "Date": "2015-05-05T18:04:19Z"},
{"Line": "=>432", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.beetle.bauhinia.db.IMessage.getTranslation()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(trans))) { java.lang.String text = java.lang.String.format(\"%s %s\", ((com.beetle.bauhinia.db.IMessage.Text) (im.content)).text, trans); clipboard.setText(text); }else { clipboard.setText(((com.beetle.bauhinia.db.IMessage.Text) (im.content)).text); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/298/buggy-version/imkit.src.main.java.com.beetle.bauhinia.MessageActivity.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,((com.beetle.bauhinia.db.IMessage.Text) (im.content)).text,java.lang.String)"], "Fixed commit": "980b8cbcd25ec079c380fd73a383ab0b47d1720c", "Url": "https://api.github.com/repos/GoBelieveIO/im_android", "Date": "2016-09-21T02:23:53Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (fieldValue != null) { if (allValues != null) { allValues.add(fieldValue.trim()); }else { segment = segmentToCheck; matchFound = true; return fieldValue.trim(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/4774/buggy-version/Product.Production.Software.src.main.java.org.cophm.validation.XmlParser.java", "BodyUseAPI": ["java.lang.String.trim()", "java.lang.String.trim()", "java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "e5b2701c3bbd54dbcf7b5c66481c28bb476b0fe4", "Url": "https://api.github.com/repos/SCHIEPPH/schiepph", "Date": "2012-10-03T21:56:43Z"},
{"Line": "=>801", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.BufferedReader.readLine()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (line == null) { previewTableModel.setDataVector(((java.util.Vector) (null)), null); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/8701/buggy-version/src.main.java.org.bridgedb.cytoscape.internal.ui.FileIDMappingClientConfigDialog.java", "BodyUseAPI": [], "Fixed commit": "e72881fa2640c0e004b324124aa0c81983d5ae38", "Url": "https://api.github.com/repos/jjgao/bridgedb.cytoscape", "Date": "2014-05-28T02:59:53Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((windows.size()) > 0) windows.get(((windows.size()) - 1)).draw(context);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/1031/buggy-version/compositor.Compositor.java", "BodyUseAPI": ["java.util.ArrayList<window.Window>.get(((windows.size()) - 1))", "windows.get(((windows.size()) - 1)).draw(java.awt.Graphics2D)", "java.util.ArrayList<window.Window>.size()"], "Fixed commit": "772932fa2a1fcf504c0cd82ec10d05c6c57fa7f2", "Url": "https://api.github.com/repos/deneb42/projetJava", "Date": "2011-06-01T11:59:40Z"},
{"Line": "=>349", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (newPosition <= (rawData.limit())) { rawData.position(newPosition); }else { header.status = com.bumptech.glide.gifdecoder.GifDecoder.STATUS_FORMAT_ERROR; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/4442/buggy-version/third_party.gif_decoder.src.main.java.com.bumptech.glide.gifdecoder.GifHeaderParser.java", "BodyUseAPI": ["java.nio.ByteBuffer.position(int)"], "Fixed commit": "2f692e86317976a0ee43e3727535fef75315191c", "Url": "https://api.github.com/repos/s1rius/glide", "Date": "2016-06-05T11:19:54Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["liquibase.servicelocator.ServiceLocator.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (sl.getPackages().remove(\"liquibase.core\")) { sl.addPackageToScan(\"liquibase.core.xml\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/4155/buggy-version/connections.jpa-liquibase.src.main.java.org.keycloak.connections.jpa.updater.liquibase.LiquibaseJpaUpdaterProvider.java", "BodyUseAPI": ["liquibase.servicelocator.ServiceLocator.addPackageToScan(java.lang.String)"], "Fixed commit": "bf7effc6f24216bf1ed502de894b4d687be8bf9f", "Url": "https://api.github.com/repos/mposolda/keycloak", "Date": "2014-10-14T11:04:18Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["liquibase.servicelocator.ServiceLocator.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (sl.getPackages().remove(\"liquibase.parser\")) { sl.addPackageToScan(\"liquibase.parser.core.xml\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/4155/buggy-version/connections.jpa-liquibase.src.main.java.org.keycloak.connections.jpa.updater.liquibase.LiquibaseJpaUpdaterProvider.java", "BodyUseAPI": ["liquibase.servicelocator.ServiceLocator.addPackageToScan(java.lang.String)"], "Fixed commit": "bf7effc6f24216bf1ed502de894b4d687be8bf9f", "Url": "https://api.github.com/repos/mposolda/keycloak", "Date": "2014-10-14T11:04:18Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["liquibase.servicelocator.ServiceLocator.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (sl.getPackages().remove(\"liquibase.serializer\")) { sl.addPackageToScan(\"liquibase.serializer.core.xml\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/4155/buggy-version/connections.jpa-liquibase.src.main.java.org.keycloak.connections.jpa.updater.liquibase.LiquibaseJpaUpdaterProvider.java", "BodyUseAPI": ["liquibase.servicelocator.ServiceLocator.addPackageToScan(java.lang.String)"], "Fixed commit": "bf7effc6f24216bf1ed502de894b4d687be8bf9f", "Url": "https://api.github.com/repos/mposolda/keycloak", "Date": "2014-10-14T11:04:18Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((this.datasource) == null) { throw new java.lang.Exception(\"No datasource in GrusDataSource\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/2258/buggy-version/server.com.dexels.navajo.adapters.resource.src.com.dexels.navajo.adapter.resource.provider.impl.GrusDataSource.java", "BodyUseAPI": [], "Fixed commit": "f47089b7e1db60a2c9a3ddef6501771b394f8047", "Url": "https://api.github.com/repos/Dexels/navajo", "Date": "2014-03-20T12:36:38Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.list()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (null == contents) throw new java.io.IOException((\"Can not read contents of non-existent directory: \" + root));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/8066/buggy-version/file-server.src.main.java.name.zemon.david.propwareide.server.file.util.FilesystemUtility.java", "BodyUseAPI": [], "Fixed commit": "36010bb5ad75a2df6efb91e5049ab7c3f52a21d4", "Url": "https://api.github.com/repos/DavidZemon/PropWareIDE-Server", "Date": "2015-09-26T22:46:38Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.LinkedHashMap<K, V>.remove(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (value != null) { this.evictionListener.onEviction(((K) (key)), value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/8236/buggy-version/src.main.java.com.cetsoft.imcache.heap.HeapCache.java", "BodyUseAPI": ["this.evictionListener.onEviction(java.lang.Object,V)"], "Fixed commit": "2bf02046dbf7ee06240eaf29cceac9fd645f7f18", "Url": "https://api.github.com/repos/Cetsoft/imcache", "Date": "2013-09-16T12:34:38Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (position == 3) { android.content.Intent browserIntent = new android.content.Intent(android.content.Intent.ACTION_VIEW, android.net.Uri.parse(\"https://github.com/lasse-it/SMART/wiki\")); startActivity(browserIntent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/4320/buggy-version/SMARTcontrol.app.src.main.java.dk.lasse_it.smartcontrol.Settings.java", "BodyUseAPI": [], "Fixed commit": "c0983e2fe7e0cc254048e84eba4728fe63e3c573", "Url": "https://api.github.com/repos/lasse-it/SMART", "Date": "2015-05-25T15:10:07Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tbl.get(k).select(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((tbl2.size()) == 6) { java.lang.System.out.println(tbl2.get(j).text()); }else { java.lang.System.out.println(\"size not six\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/8486/buggy-version/src.SVueAAG_main.java", "BodyUseAPI": ["java.io.PrintStream.println(tbl2.get(j).text())", "tbl2.get(j).text()", "org.jsoup.select.Elements.get(int)"], "Fixed commit": "6555a840a45ac73c6b9fc6676251f06d56efb9ec", "Url": "https://api.github.com/repos/dylanpdx/SVueAAG", "Date": "2015-06-11T23:03:53Z"},
{"Line": "=>1150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (!(markable == null)) { result.append(markable.getAttributeValue(\"tag\")); result.append(\" \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/6973/buggy-version/BART.src.elkfed.coref.mentions.Mention.java", "BodyUseAPI": ["elkfed.mmax.minidisc.Markable.getAttributeValue(java.lang.String)", "java.lang.StringBuffer.append(markable.getAttributeValue(\"tag\"))"], "Fixed commit": "c66daaf20ec29400b10bd58def25a5aad36f3524", "Url": "https://api.github.com/repos/sebastianruder/BART", "Date": "2014-08-06T19:31:47Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (text.equals(\"Sunny\")) { _image.setImageResource(R.drawable.sunny); }else if (text.equals(\"Showers\")) { _image.setImageResource(R.drawable.rain); }else if (text.equals(\"Mostly Cloudy\")) { _image.setImageResource(R.drawable.cloudy); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/7942/buggy-version/Java1.Wk3.TakeTwo.src.com.example.taketwo.MainActivity.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "945c69dccf5a393baef085a5aec7978b09b3a329", "Url": "https://api.github.com/repos/kelseym82/FSO", "Date": "2013-09-27T01:53:04Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.sCurrencySymbol) == null) this.sCurrencySymbol = java.util.Currency.getInstance(locale).getSymbol();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/6338/buggy-version/src.main.java.com.github.jferard.fastods.style.CurrencyStyleBuilder.java", "BodyUseAPI": [], "Fixed commit": "a8d5cf11985f72866ff51534f32a9ee6845eed81", "Url": "https://api.github.com/repos/jferard/fastods", "Date": "2016-06-03T19:11:42Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ch == '-') && ((pos) < ((text.length()) - 1))) { char next_char = text.charAt(((pos) + 1)); if (com.alibaba.druid.sql.dialect.mysql.parser.MySqlLexer.isIdentifierChar(next_char)) { continue; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/7472/buggy-version/src.main.java.com.alibaba.druid.sql.dialect.mysql.parser.MySqlLexer.java", "BodyUseAPI": ["com.alibaba.druid.sql.dialect.mysql.parser.MySqlLexer.charAt(((pos) + 1))"], "Fixed commit": "b40dda40252e82067f540cd9eb220e8f3d80a301", "Url": "https://api.github.com/repos/mosoft521/druid", "Date": "2016-08-10T08:07:45Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.google.firebase.FirebaseApp.getApps().size()) == 0) { com.google.firebase.FirebaseApp.initializeApp(options); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/1770/buggy-version/src.main.java.com.batjaa.coffeeshop.config.FirebaseConfig.java", "BodyUseAPI": [], "Fixed commit": "450a9d3444981a778f6f43aeed987aa86213f44b", "Url": "https://api.github.com/repos/batjaa/coffee-shop", "Date": "2017-05-24T15:52:29Z"},
{"Line": "=>797", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((currentToken.getType()) == (Token.END)) { Token errType = new Token(\"\", tokenType); error(currentToken, (\"Unexpected end of file, while looking for \" + (errType.toString()))); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/3204/buggy-version/CSE474Compiler.src.Parser.java", "BodyUseAPI": ["Parser.error(Token,(\"Unexpected end of file, while looking for \" + (errType.toString())))"], "Fixed commit": "d9d9670bc44ad37ba75361b2c4e0c068b42880a7", "Url": "https://api.github.com/repos/martian712/two-week-compiler", "Date": "2017-01-16T19:57:27Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jboss.wsf.spi.metadata.j2ee.serviceref.UnifiedHandlerChainsMetaDataParser.parse(java.io.InputStream)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (handlerChainsUMDM != null) { for (final org.jboss.wsf.spi.metadata.j2ee.serviceref.UnifiedHandlerChainMetaData handlerChainUMDM : handlerChainsUMDM.getHandlerChains()) { for (final org.jboss.wsf.spi.metadata.j2ee.serviceref.UnifiedHandlerMetaData handlerUMDM : handlerChainUMDM.getHandlers()) { retVal.add(handlerUMDM.getHandlerClass()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/9065/buggy-version/webservices.server-integration.src.main.java.org.jboss.as.webservices.injection.WSHandlerChainAnnotationProcessor.java", "BodyUseAPI": ["org.jboss.wsf.spi.metadata.j2ee.serviceref.UnifiedHandlerChainsMetaData.getHandlerChains()"], "Fixed commit": "a01f5bacea998855461e9982c25042952ee5b40a", "Url": "https://api.github.com/repos/bstansberry/wildfly", "Date": "2013-09-04T11:35:23Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((value == null) || ((value.trim().length()) < 1)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/6921/buggy-version/subsys.vertx.src.main.java.org.commonjava.aprox.bind.vertx.boot.BootOptions.java", "BodyUseAPI": [], "Fixed commit": "4874e6cab664110a9077cab2a931069b4485ac96", "Url": "https://api.github.com/repos/jdcasey/aprox", "Date": "2014-06-02T22:42:16Z"},
{"Line": "=>433", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ComponentMappers.playerMapper.has(params.attacker)) { damage *= params.options.getDifficulty().getPlayerDamageMultiplier(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/1581/buggy-version/core.src.com.miv.EntityActions.java", "BodyUseAPI": ["params.options.getDifficulty().getPlayerDamageMultiplier()", "com.miv.Options.getDifficulty()"], "Fixed commit": "e9cec2bf5e32cb9cabba73fa38892c0bed1628ba", "Url": "https://api.github.com/repos/Miv99/Rhythm-Dungeon", "Date": "2017-03-29T22:21:40Z"},
{"Line": "=>1210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((broadCastList) != null) && ((broadCastList.size()) > 0)) { for (com.biglynx.fulfiller.models.BroadCast broadCast : broadCastList) { if (broadCast.isClicked) broadCast.isClicked = false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/260/buggy-version/app.src.main.java.com.biglynx.fulfiller.ui.BroadCastFragment.java", "BodyUseAPI": [], "Fixed commit": "df737415102c5a2e42d4a9e796ee8515ed1774cd", "Url": "https://api.github.com/repos/JgdshSeerm/Fulfiller", "Date": "2017-04-18T10:32:15Z"},
{"Line": "=>334", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (showColorOverlay) updateResultOverlay();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/8623/buggy-version/src.main.java.inra.ijpb.plugins.MorphologicalSegmentation.java", "BodyUseAPI": [], "Fixed commit": "470b3d8ed1d5d5cb4c306e24deac92a5e2f48797", "Url": "https://api.github.com/repos/ijpb/ijpb-plugins", "Date": "2014-05-08T11:44:47Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.http.util.EntityUtils.toString(proxiedResponse.getEntity())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (entity != null) { builder.entity(entity); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/927/buggy-version/containers.jersey2-routing.src.main.java.com.yahoo.gondola.container.client.ApacheHttpComponentProxyClient.java", "BodyUseAPI": ["Response.ResponseBuilder.entity(java.lang.String)"], "Fixed commit": "d78510aca71e711499987f6915b34c5e9edb45f9", "Url": "https://api.github.com/repos/patc888/gondola", "Date": "2015-11-13T02:08:59Z"},
{"Line": "=>317", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sharePref.get_data(\"gender\").equalsIgnoreCase(\"female\")) { namajEnd = (prayerMale.size()) - 1; }else { namajEnd = (prayerFemale.size()) - 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/1584/buggy-version/app.src.main.java.com.nascenia.biyeta.activity.RegistrationChoiceSelectionThirdPage.java", "BodyUseAPI": [], "Fixed commit": "e64b4581356c74099df8fd6c1d14bf8ef6993867", "Url": "https://api.github.com/repos/Ovi-nascenia/b-ye", "Date": "2017-12-19T07:24:11Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((defaultBike.getList(\"access\")) != null) { for (java.lang.Object s : defaultBike.getList(\"access\")) { treadsetters.bikesmart.Application.sendPushNotification(((java.lang.String) (s)), \"Your bike is moving without your permission.\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/2233/buggy-version/bikesmart.app.src.main.java.treadsetters.bikesmart.LocationService.java", "BodyUseAPI": ["com.parse.ParseObject.getList(java.lang.String)"], "Fixed commit": "b552e7d4af9a864c073293d8c1b38654d192d4ab", "Url": "https://api.github.com/repos/sraje/CAPSTONE", "Date": "2015-06-02T23:55:31Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.pratilipi.data.util.UserPratilipiDataUtil.createUserPratilipiData(dataAccessor.getUserPratilipi(vote.getParentId()))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((userPratilipi.getRating()) != null) dataModel.put(\"rating\", userPratilipi.getRating());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/4562/buggy-version/src.main.java.com.pratilipi.data.util.EmailDataUtil.java", "BodyUseAPI": ["com.pratilipi.data.client.UserPratilipiData.getRating()", "java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,userPratilipi.getRating())"], "Fixed commit": "fe8c010aa6c8d166df0ac62f64c01c5911255723", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2016-12-09T08:07:32Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (category.isUnderstood()) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/2507/buggy-version/charles-github-ejb.src.main.java.com.amihaiemil.charles.github.Brain.java", "BodyUseAPI": [], "Fixed commit": "a403c21cabd58046bd30e0482bf4768812980c36", "Url": "https://api.github.com/repos/opencharles/charles-rest", "Date": "2016-06-27T17:33:32Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (pValue instanceof de.verpalnt.propertly.core.hierarchy.IPropertyPitProvider) { de.verpalnt.propertly.core.hierarchy.IPropertyPit pit = ((de.verpalnt.propertly.core.hierarchy.IPropertyPitProvider) (pValue)).getPit(); if (pit.isValid()) return addProperty(pit.getOwnProperty().getName(), pValue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/7580/buggy-version/propertly.core.src.main.java.de.verpalnt.propertly.core.hierarchy.MutablePropertyPit.java", "BodyUseAPI": ["de.verpalnt.propertly.core.hierarchy.MutablePropertyPit<S, T>.addProperty(pit.getOwnProperty().getName(),E)"], "Fixed commit": "ab838e61cab845188790c6c3d33ea921d60e1670", "Url": "https://api.github.com/repos/verpalnt/propertly", "Date": "2014-11-20T09:30:20Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.exoplatform.wiki.resolver.PageResolver.resolve(java.lang.String,org.exoplatform.portal.webui.util.Util.getUIPortal().getSelectedUserNode())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (org.apache.commons.lang.StringUtils.isEmpty(page.getURL())) { page.setURL(org.exoplatform.wiki.commons.Utils.getURLFromParams(new org.exoplatform.wiki.service.WikiPageParams(page.getWiki().getType(), page.getWiki().getOwner(), page.getName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/5484/buggy-version/wiki-webapp.src.main.java.org.exoplatform.wiki.webui.UIWikiPortlet.java", "BodyUseAPI": ["page.getWiki().getOwner()", "org.exoplatform.wiki.mow.api.Page.setURL(org.exoplatform.wiki.commons.Utils.getURLFromParams(new org.exoplatform.wiki.service.WikiPageParams(page.getWiki().getType(), page.getWiki().getOwner(), page.getName())))", "page.getWiki().getType()", "org.exoplatform.wiki.mow.api.Page.getWiki()", "org.exoplatform.wiki.mow.api.Page.getWiki()", "org.exoplatform.wiki.commons.Utils.getURLFromParams(org.exoplatform.wiki.service.WikiPageParams)", "org.exoplatform.wiki.mow.api.Page.getName()"], "Fixed commit": "ef3259cb9ab995c7583dde120e024b7637d75626", "Url": "https://api.github.com/repos/exoplatform/wiki", "Date": "2013-03-12T07:46:23Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.exoplatform.wiki.mow.core.api.wiki.PageImpl.getURL()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (url != null) { url = url.substring(url.indexOf(((\"/\" + portalContainerName) + \"/\"))); permalink.append(url); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/5484/buggy-version/wiki-service.src.main.java.org.exoplatform.wiki.service.impl.WikiSearchServiceConnector.java", "BodyUseAPI": ["java.lang.String.indexOf(java.lang.String)", "java.lang.String.substring(int)"], "Fixed commit": "ef3259cb9ab995c7583dde120e024b7637d75626", "Url": "https://api.github.com/repos/exoplatform/wiki", "Date": "2013-03-12T07:46:23Z"},
{"Line": "=>390", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Stack<java.lang.String>.peek()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (current_dir.equals(\"\")) { actionBar.setTitle(getString(R.string.default_display_name_for_root_folder)); }else { actionBar.setTitle(current_dir); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/709/buggy-version/src.com.owncloud.android.ui.activity.Uploader.java", "BodyUseAPI": ["android.support.v7.app.ActionBar.setTitle(java.lang.String)"], "Fixed commit": "499448062f4b83e6c1fe633eef2353dd9195f488", "Url": "https://api.github.com/repos/owncloud/android", "Date": "2016-03-23T15:17:14Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.uni_hamburg.informatik.swt.se2.mediathek.werkzeuge.subwerkzeuge.kundenauflister.KundenauflisterWerkzeug.getSelectedKunde()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (kunde == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/1953/buggy-version/src.de.uni_hamburg.informatik.swt.se2.mediathek.werkzeuge.vormerken.VormerkWerkzeug.java", "BodyUseAPI": [], "Fixed commit": "3dd7d96343c7f32d64d45a9120b088d632ca8b35", "Url": "https://api.github.com/repos/se2-dovo/mediathek", "Date": "2015-05-28T10:08:15Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.emf.common.util.EList<java.lang.String>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (this.partOfStringification(param)) { return paramCodeTemp; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/8798/buggy-version/workspace.at.jku.weiner.cpreprocess.src.at.jku.weiner.cpreprocess.utils.macros.DefinitionFunctionMacro.java", "BodyUseAPI": [], "Fixed commit": "98aa64ae908bafa44aa582e9065652942fa5a95d", "Url": "https://api.github.com/repos/timeraider4u/kefax", "Date": "2015-11-26T11:45:53Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (sign.getLine(2).substring(((sign.getLine(2).length()) - 1)).equals(\",\")) { signrules = (sign.getLine(2)) + (sign.getLine(3)); }else { signrules = ((sign.getLine(2)) + \",\") + (sign.getLine(3)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/7488/buggy-version/src.me.thommy101.TMinecart.TMRedstoneListener.java", "BodyUseAPI": ["org.bukkit.block.Sign.getLine(int)", "org.bukkit.block.Sign.getLine(int)", "org.bukkit.block.Sign.getLine(int)", "org.bukkit.block.Sign.getLine(int)"], "Fixed commit": "597f3b1d884822793ed5b6b3c620d773636e45d7", "Url": "https://api.github.com/repos/thommy101/Collect--n-Deposit", "Date": "2012-08-19T08:52:17Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(directory.exists())) { directory.mkdirs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/4541/buggy-version/app.src.main.java.das.songrecorder.SongsGetter.java", "BodyUseAPI": ["java.io.File.mkdirs()"], "Fixed commit": "d88b1b35fbd4027ab06021c904c6470d748ead1a", "Url": "https://api.github.com/repos/mtoshevska/SongRecorder", "Date": "2017-01-12T00:14:10Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (subFence != null) { awarenessFences.add(subFence.getAwarenessFence(ctx)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/6395/buggy-version/jcvd.src.main.java.com.sousoum.jcvd.StorableFence.java", "BodyUseAPI": ["java.util.List<com.google.android.gms.awareness.fence.AwarenessFence>.add(com.google.android.gms.awareness.fence.AwarenessFence)", "com.sousoum.jcvd.StorableFence.getAwarenessFence(android.content.Context)"], "Fixed commit": "7b612eddf1d42d1e3504e129c63bb8ea2376d024", "Url": "https://api.github.com/repos/djavan-bertrand/JCVD", "Date": "2017-08-13T13:06:19Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (subFence != null) { awarenessFences.add(subFence.getAwarenessFence(ctx)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/6395/buggy-version/jcvd.src.main.java.com.sousoum.jcvd.StorableFence.java", "BodyUseAPI": ["java.util.List<com.google.android.gms.awareness.fence.AwarenessFence>.add(com.google.android.gms.awareness.fence.AwarenessFence)", "com.sousoum.jcvd.StorableFence.getAwarenessFence(android.content.Context)"], "Fixed commit": "7b612eddf1d42d1e3504e129c63bb8ea2376d024", "Url": "https://api.github.com/repos/djavan-bertrand/JCVD", "Date": "2017-08-13T13:06:19Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((edtDailyLimitationAlarm.getText().length()) != 0) { value = com.zohaltech.app.sigma.classes.TrafficUnitsUtil.MbToByte(java.lang.Integer.valueOf(edtDailyLimitationAlarm.getText().toString())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/1006/buggy-version/app.src.main.java.com.zohaltech.app.sigma.activities.GlobalSettingsActivity.java", "BodyUseAPI": ["com.zohaltech.app.sigma.classes.TrafficUnitsUtil.MbToByte(java.lang.Integer)", "java.lang.Integer.valueOf(edtDailyLimitationAlarm.getText().toString())", "edtDailyLimitationAlarm.getText().toString()", "android.widget.EditText.getText()"], "Fixed commit": "c2833e4a93f3a848eb903d2cd53ee9b1d693d496", "Url": "https://api.github.com/repos/zohaltech/MobileDataMonitor", "Date": "2016-04-04T19:20:21Z"},
{"Line": "=>2806", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (tp != null) return tp;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/2890/buggy-version/src.main.java.org.basex.query.QueryParser.java", "BodyUseAPI": [], "Fixed commit": "ea2d28db0cd8c3d9cdef39af116d2bcb94825371", "Url": "https://api.github.com/repos/BaseXdb/basex", "Date": "2013-01-27T22:12:58Z"},
{"Line": "=>341", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(entry.getValue().isDirty())) { entry.getValue().setReload(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/2277/buggy-version/hazelcast-wm.src.main.java.com.hazelcast.web.HazelcastHttpSession.java", "BodyUseAPI": ["java.util.Map.Entry<java.lang.String, com.hazelcast.web.LocalCacheEntry>.getValue()", "entry.getValue().setReload(boolean)"], "Fixed commit": "108ed04c51b57d6dd0c0433e5454d109eb3745c9", "Url": "https://api.github.com/repos/mdogan/hazelcast", "Date": "2016-02-17T10:43:50Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((l.getWorld()) != (p.getBedSpawnLocation().getWorld())) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/6/buggy-version/src.main.java.tw.mics.spigot.plugin.cupboard.utils.SpawnLocationManager.java", "BodyUseAPI": [], "Fixed commit": "fdae69753aa4a9bc7878e9421ce8002f16b5f03e", "Url": "https://api.github.com/repos/MkIIServer/cupboard", "Date": "2016-07-25T06:21:30Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(icClass.hasSuperClass())) { enclosingScope.addChildren(c); }else { IC.AST.ICClass icSuper = program.getClassByName(icClass.getSuperClassName()); icSuper.getEnclosingScope().addChildren(c); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/5054/buggy-version/src.IC.Semantic.ScopeVisitor.java", "BodyUseAPI": ["IC.AST.ICClass.getSuperClassName()", "IC.AST.Program.getClassByName(icClass.getSuperClassName())"], "Fixed commit": "8f1dc1a35f91be7f9eba6748097f66bc9116be27", "Url": "https://api.github.com/repos/liricooli/Compi", "Date": "2014-12-13T17:12:55Z"},
{"Line": "=>356", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (in.andres.kandroid.BuildConfig.DEBUG) btnStartDate.setVisibility(View.VISIBLE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/4174/buggy-version/app.src.main.java.in.andres.kandroid.ui.TaskEditActivity.java", "BodyUseAPI": [], "Fixed commit": "fc38b3163161f492c079bf5cc72ded5b626e1c47", "Url": "https://api.github.com/repos/andresth/Kandroid", "Date": "2017-03-12T17:23:07Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (railo.commons.lang.StringUtil.isEmpty(object)) object = railo.runtime.op.Constants.DOUBLE_ZERO;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/2902/buggy-version/railo-java.railo-core.src.railo.runtime.functions.displayFormatting.DecimalFormat.java", "BodyUseAPI": [], "Fixed commit": "cd66631064318e8f7775f3fb04a56d5947b70b77", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2011-04-18T15:25:11Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (this.isDeclaredInCurrentScope(identifier)) { return this.aliasMap.get(identifier); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/6437/buggy-version/code.symbolTable.src.swp_compiler_ss13.fuc.symbolTable.SymbolTableImpl.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.String>.get(java.lang.String)"], "Fixed commit": "4df61f2a0e86b60db3b8d17979d0b35b83c4d2a5", "Url": "https://api.github.com/repos/swp-uebersetzerbau-ss13/fuc", "Date": "2013-05-18T17:28:17Z"},
{"Line": "=>511", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((stickyScrollListener) != null) { stickyScrollListener.onStickyVisibilityChanged(isStickyHidden); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/1149/buggy-version/library.src.com.emilsjolander.components.StickyScrollViewItems.StickyScrollView.java", "BodyUseAPI": [], "Fixed commit": "9e32fc5a659d2198a34851730588e21006a13a49", "Url": "https://api.github.com/repos/flysoft-team/StickyScrollViewItems", "Date": "2014-08-18T11:06:01Z"},
{"Line": "=>430", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((stickyScrollListener) != null) { stickyScrollListener.onStickyVisibilityChanged(isStickyHidden); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/1149/buggy-version/library.src.com.emilsjolander.components.StickyScrollViewItems.StickyScrollView.java", "BodyUseAPI": [], "Fixed commit": "9e32fc5a659d2198a34851730588e21006a13a49", "Url": "https://api.github.com/repos/flysoft-team/StickyScrollViewItems", "Date": "2014-08-18T11:06:01Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((user.getSmtpPort()) != null) { insert.usingColumns(UserFieldEnum.SMTP_PORT.getColumnName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/2686/buggy-version/SVNavigatoru-Maven.src.main.java.com.svnavigatoru600.repository.users.impl.direct.UserDaoImpl.java", "BodyUseAPI": [], "Fixed commit": "2847f3294f21695f0a8c1747035364c986b02fff", "Url": "https://api.github.com/repos/tomas-skalicky/Spring-SVNavigatoru600", "Date": "2017-09-05T19:44:38Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((result.length()) != 0) { org.eclipse.swt.dnd.Clipboard cb = new org.eclipse.swt.dnd.Clipboard(org.eclipse.swt.widgets.Display.getCurrent()); java.lang.String textData = result.toString(); org.eclipse.swt.dnd.TextTransfer transfer = org.eclipse.swt.dnd.TextTransfer.getInstance(); cb.setContents(new java.lang.Object[]{ textData }, new org.eclipse.swt.dnd.Transfer[]{ transfer }); cb.dispose(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/4100/buggy-version/main.plugins.org.talend.mdm.repository.src.main.java.org.talend.mdm.repository.ui.actions.CopyUrlAction.java", "BodyUseAPI": ["java.lang.StringBuilder.toString()"], "Fixed commit": "ee67ff765cf71463eae82542d0181ec5c3427650", "Url": "https://api.github.com/repos/Talend/tmdm-studio-se", "Date": "2015-05-19T03:57:40Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, org.atlasapi.persistence.lookup.entry.LookupEntry>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (entry != null) { java.util.Set<org.atlasapi.media.entity.LookupRef> allRefs = equivRefs(contents, entry, appConfig); for (org.atlasapi.media.entity.Content content : contents) { content.setEquivalentTo(allRefs); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/3694/buggy-version/src.main.java.org.atlasapi.persistence.content.DefaultEquivalentContentResolver.java", "BodyUseAPI": ["org.atlasapi.persistence.content.DefaultEquivalentContentResolver.equivRefs(java.lang.Iterable<org.atlasapi.media.entity.Content>,org.atlasapi.persistence.lookup.entry.LookupEntry,org.atlasapi.application.ApplicationConfiguration)"], "Fixed commit": "1385d4515c80614441b6a040444f5bebe9aaac58", "Url": "https://api.github.com/repos/atlasapi/atlas-persistence", "Date": "2013-11-07T16:47:10Z"},
{"Line": "=>320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.URLDecoder.decode(result.getContents().toString())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (string.split(\";\")[0].equals(\"\")) insertIntoDb(string.split(\";\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/3952/buggy-version/SchuldenApp.app.src.main.java.at.htlgkr.raiffeisenprojektteam.schuldenapp.MainActivity.java", "BodyUseAPI": ["at.htlgkr.raiffeisenprojektteam.schuldenapp.MainActivity.insertIntoDb(java.lang.String[])", "java.lang.String.split(java.lang.String)"], "Fixed commit": "5993f23e200bba9ed940b34207a9b2a61a8c6f09", "Url": "https://api.github.com/repos/mduschek/SchuldenApp", "Date": "2017-03-22T11:19:20Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((gridLayoutManager == null) || (spanSizeLookup == null)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/650/buggy-version/Library.src.main.java.com.ztiany.adapter.KeepFullSpanUtils.java", "BodyUseAPI": [], "Fixed commit": "3a4567d442f632d3b6b27832d6e9b5842fedc386", "Url": "https://api.github.com/repos/Ztiany/WrapperAdapter", "Date": "2017-02-21T12:07:18Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((level.getInnerTopic()) != null) { processTopic(level.getInnerTopic(), processingOptions); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/2538/buggy-version/src.main.java.org.jboss.pressgang.ccms.contentspec.processor.SnapshotProcessor.java", "BodyUseAPI": ["org.jboss.pressgang.ccms.contentspec.processor.SnapshotProcessor.processTopic(level.getInnerTopic(),org.jboss.pressgang.ccms.contentspec.processor.structures.SnapshotOptions)", "org.jboss.pressgang.ccms.contentspec.Level.getInnerTopic()"], "Fixed commit": "bc89a2c509fffdc4995f470a41efa7660bed4968", "Url": "https://api.github.com/repos/pressgang-ccms/PressGangCCMSContentSpecProcessor", "Date": "2013-09-06T05:20:29Z"},
{"Line": "=>301", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((msg.length()) > 0) this.sendMessage(msg.toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/5113/buggy-version/src.main.NoiseBot.java", "BodyUseAPI": ["main.NoiseBot.sendMessage(java.lang.String)", "java.lang.StringBuffer.toString()"], "Fixed commit": "c916ab2d4af8c347aa372088197dcec72d31033c", "Url": "https://api.github.com/repos/mrozekma/NoiseBot", "Date": "2012-05-06T02:44:28Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (valid) registeredUsers.remove(index);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/9210/buggy-version/src.InstantMessagingServer.java", "BodyUseAPI": [], "Fixed commit": "3c1280c978066682f8b3528c882f6953118510f5", "Url": "https://api.github.com/repos/adindabudi/InstantMessagingRabbitMQ", "Date": "2016-10-27T15:11:53Z"},
{"Line": "=>372", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (torrentFile.exists()) torrentFile.delete();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/732/buggy-version/src.main.java.com.torrenttunes.server.db.Actions.java", "BodyUseAPI": ["java.io.File.delete()"], "Fixed commit": "bd7900571f7ae60edde75c3e80580c9dad12a38d", "Url": "https://api.github.com/repos/dessalines/torrenttunes-server", "Date": "2015-09-20T15:28:31Z"},
{"Line": "=>307", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getServletContext().getResourcePaths(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (resourcePaths != null) { subPaths.addAll(resourcePaths); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/6555/buggy-version/util.src.main.java.com.psddev.dari.util.BuildDebugServlet.java", "BodyUseAPI": ["java.util.List<java.lang.String>.addAll(java.util.Set<java.lang.String>)"], "Fixed commit": "d56bf60f865c9a6058467d7c610333dba92f3ea2", "Url": "https://api.github.com/repos/perfectsense/dari", "Date": "2014-07-10T22:35:49Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((target == null) || (target.getClass().equals(java.lang.Object.class))) { return \"App\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/8458/buggy-version/rapidoid-pages.src.main.java.org.rapidoid.pages.Pages.java", "BodyUseAPI": [], "Fixed commit": "4396a060fbcc501f79c82c6437c3eaca7b3be7f3", "Url": "https://api.github.com/repos/rapidoid/rapidoid", "Date": "2015-07-06T10:09:08Z"},
{"Line": "=>299", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (tab == null) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/3673/buggy-version/Rujel.Sources.net.rujel.ui.LessonNoteEditor.java", "BodyUseAPI": [], "Fixed commit": "19046b41a40f7f645f38237a3e22621cbc8fa659", "Url": "https://api.github.com/repos/baywind/rujel", "Date": "2013-10-23T13:15:14Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!update) { validateHauptProbenNummer(p, warnings); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/2420/buggy-version/src.main.java.de.intevation.lada.validation.LProbeValidator.java", "BodyUseAPI": [], "Fixed commit": "92e9bfc4fc19947b839c344bca0196fac5d0c913", "Url": "https://api.github.com/repos/OpenBfS/lada-server", "Date": "2013-08-06T12:27:01Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((type.getCategory()) == (com.mysema.codegen.model.TypeCategory.ARRAY)) && (types == (pathTypes))) { return getQueryType(type.getComponentType(), model, exprType, raw, rawParameters, extend); }else { return getQueryType(type, model, exprType, raw, rawParameters, extend); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/3800/buggy-version/querydsl-core.src.main.java.com.mysema.query.codegen.TypeMappings.java", "BodyUseAPI": ["com.mysema.codegen.model.Type.getComponentType()", "com.mysema.query.codegen.TypeMappings.getQueryType(com.mysema.codegen.model.Type,com.mysema.query.codegen.EntityType,com.mysema.codegen.model.Type,boolean,boolean,boolean)", "com.mysema.query.codegen.TypeMappings.getQueryType(type.getComponentType(),com.mysema.query.codegen.EntityType,com.mysema.codegen.model.Type,boolean,boolean,boolean)"], "Fixed commit": "2de651eb282617b10061317b6cd95ed3a04af8cf", "Url": "https://api.github.com/repos/querydsl/querydsl", "Date": "2011-09-19T09:13:37Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (token.toString().startsWith(\"3\")) { java.lang.System.out.println(\"STOP!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/1931/buggy-version/src.main.java.org.aksw.simba.eaglet.error.ErraticEntityError.java", "BodyUseAPI": [], "Fixed commit": "7b5e7e533fbc3141679e575262b52ef18793c182", "Url": "https://api.github.com/repos/dice-group/Eaglet", "Date": "2016-04-26T14:08:12Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mFooterView) != null) { mFooterView.setOnClickListener(new com.being.base.ui.widget.ptr.loadmore.OnClickListener() { @java.lang.Override public void onClick(android.view.View view) { tryToPerformLoadMore(); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/3265/buggy-version/base.src.main.java.com.being.base.ui.widget.ptr.loadmore.LoadMoreContainerBase.java", "BodyUseAPI": [], "Fixed commit": "d1fc16dc87c1c0f34463beb8ecadb8e4ee03e125", "Url": "https://api.github.com/repos/pzhangleo/android-base", "Date": "2017-08-28T09:00:57Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mFooterView) != null) { if (hasMore) { mFooterView.setVisibility(com.being.base.ui.widget.ptr.loadmore.VISIBLE); }else { mFooterView.setVisibility(com.being.base.ui.widget.ptr.loadmore.GONE); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/3265/buggy-version/base.src.main.java.com.being.base.ui.widget.ptr.loadmore.LoadMoreContainerBase.java", "BodyUseAPI": [], "Fixed commit": "d1fc16dc87c1c0f34463beb8ecadb8e4ee03e125", "Url": "https://api.github.com/repos/pzhangleo/android-base", "Date": "2017-08-28T09:00:57Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (null != props) { this._properties.putAll(props); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/1980/buggy-version/src.main.java.org.jocean.android.BitmapBlocksDrawable.java", "BodyUseAPI": [], "Fixed commit": "d63b0f78bab7e266aa5c8acce9e012a4055b48e7", "Url": "https://api.github.com/repos/isdom/jocean-android", "Date": "2014-05-04T16:00:49Z"},
{"Line": "=>328", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((getTorchPlacementMode(ist)) != null) placingItem = xreliquary.util.RegistryHelper.getItemFromName(getTorchPlacementMode(ist));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/552/buggy-version/src.main.java.xreliquary.items.ItemSojournerStaff.java", "BodyUseAPI": ["xreliquary.util.RegistryHelper.getItemFromName(java.lang.String)", "xreliquary.items.ItemSojournerStaff.getTorchPlacementMode(net.minecraft.item.ItemStack)"], "Fixed commit": "76ab9f394eed7f63219167c0417685abc889fb25", "Url": "https://api.github.com/repos/P3pp3rF1y/Reliquary", "Date": "2016-07-09T23:54:28Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (o == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/8144/buggy-version/src.com.fsck.k9.activity.FolderInfoHolder.java", "BodyUseAPI": [], "Fixed commit": "f769d3c3da98270d6da7308ccb0fbdfa1698867e", "Url": "https://api.github.com/repos/k9mail/k-9", "Date": "2011-08-02T17:24:40Z"},
{"Line": "=>1082", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((puppetActionMode) == null) puppetActionMode = startActionMode(puppetActionModeCallback);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/189/buggy-version/app.src.main.java.com.nakedape.gopuppetyourself.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "cf5c13b6ca529e0eced665f4941ae3f98abbf954", "Url": "https://api.github.com/repos/boozey/GoPuppetYourself", "Date": "2015-07-16T00:07:21Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (b == null) return 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/2788/buggy-version/src.j.collections.OrderedPair.java", "BodyUseAPI": [], "Fixed commit": "1ae2b0025093eefc4dbf862157316dfe965db4e4", "Url": "https://api.github.com/repos/lucastan/libjava", "Date": "2013-01-02T14:23:40Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (other != null) { this.root = merge(this.root, other.root); other.root = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/1562/buggy-version/hw03_SkewHeap_java.src.SkewHeap.java", "BodyUseAPI": ["SkewHeap.merge(SkewHeap.Node,SkewHeap.Node)"], "Fixed commit": "361c6c80f22ee9eb8807bbeabd2f592e81ed6920", "Url": "https://api.github.com/repos/DChaushev/Advanced-Data-Structures", "Date": "2015-03-24T19:00:03Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.pau.busyalert.Activities.SettingsActivity.findPreference(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (pref instanceof android.preference.ListPreference) { if (s.equals(\"status\")) { android.preference.ListPreference listPreference = ((android.preference.ListPreference) (pref)); java.lang.String st = listPreference.getValue(); if (!(lastStatus.equals(st))) { this.lastStatus = st; listPreference.setSummary(st); android.widget.Toast.makeText(this, R.string.status_changed, Toast.LENGTH_SHORT).show(); setFirebase(\"status\", st); } }else if (s.equals(\"networkList\")) { setFirebase(\"network\", ((android.preference.ListPreference) (pref)).getValue()); android.widget.Toast.makeText(this, ((android.preference.ListPreference) (pref)).getValue(), Toast.LENGTH_SHORT).show(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/8280/buggy-version/app.src.main.java.com.example.pau.busyalert.Activities.SettingsActivity.java", "BodyUseAPI": [], "Fixed commit": "ff026b63dcc9ccfddaa7a5175e0275e59a0bfacd", "Url": "https://api.github.com/repos/pbalaguer19/BusyAlert", "Date": "2017-04-23T09:57:56Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.KITKAT)) { webView.setWebViewClient(new android.webkit.WebViewClient() { @android.support.annotation.RequiresApi(api = Build.VERSION_CODES.KITKAT) @java.lang.Override public void onPageFinished(android.webkit.WebView view, java.lang.String url) { super.onPageFinished(view, url); view.evaluateJavascript(js, new android.webkit.ValueCallback<java.lang.String>() { @java.lang.Override public void onReceiveValue(java.lang.String s) { dialog.cancel(); webView.setVisibility(View.VISIBLE); } }); } }); }else { dialog.cancel(); webView.setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/6670/buggy-version/app.src.main.java.com.onelio.myuacloud.Apps.WebView.WebViewActivity.java", "BodyUseAPI": [], "Fixed commit": "3d7f55f9c9599945d3b1a2396addc95673b46a24", "Url": "https://api.github.com/repos/Onelio/MyUACloud", "Date": "2017-02-18T21:24:41Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sb.toString().length()) < 10) { return java.lang.Integer.parseInt(sb.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/5272/buggy-version/CalculatorTheGame.java", "BodyUseAPI": ["java.lang.StringBuilder.toString()", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "b3b20d7e8d00eec72a6d67451552ffce4c3993b1", "Url": "https://api.github.com/repos/DavidKing4/CalculatorTheGame", "Date": "2017-10-26T11:38:56Z"},
{"Line": "=>548", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((location) != null) && (!(anonymousAddress.equals(location)))) { ei.setAddress(location); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/1144/buggy-version/rt.ws.security.src.main.java.org.apache.cxf.ws.security.trust.AbstractSTSClient.java", "BodyUseAPI": ["org.apache.cxf.service.model.EndpointInfo.setAddress(java.lang.String)"], "Fixed commit": "da25b2af7780b39df7953026a83194aefb15a647", "Url": "https://api.github.com/repos/apache/cxf", "Date": "2014-06-16T14:32:20Z"},
{"Line": "=>541", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.cxf.service.Service.getServiceInfos()", "org.apache.cxf.service.Service.getEndpointInfo(javax.xml.namespace.QName)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((((ei == null) && (anonymousAddress.equals(location))) && (!(services.isEmpty()))) && (!(services.get(0).getEndpoints().isEmpty()))) { serviceName = services.get(0).getName(); endpointName = services.get(0).getEndpoints().iterator().next().getName(); ei = service.getEndpointInfo(endpointName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/1144/buggy-version/rt.ws.security.src.main.java.org.apache.cxf.ws.security.trust.AbstractSTSClient.java", "BodyUseAPI": ["services.get(0).getEndpoints().iterator()", "services.get(0).getEndpoints().iterator().next()", "java.util.List<org.apache.cxf.service.model.ServiceInfo>.get(int)", "services.get(0).getEndpoints().iterator().next().getName()", "services.get(0).getEndpoints()", "java.util.List<org.apache.cxf.service.model.ServiceInfo>.get(int)", "services.get(0).getName()"], "Fixed commit": "da25b2af7780b39df7953026a83194aefb15a647", "Url": "https://api.github.com/repos/apache/cxf", "Date": "2014-06-16T14:32:20Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((newSwarmReport.getSize()) != null) | ((newSwarmReport.getAccessibility()) != null)) { if ((newSwarmReport.getReportId()) != null) { pushRef.setValue(newSwarmReport); } android.content.Intent intent = new android.content.Intent(this, com.example.guest.iamhere.activities.MainActivity.class); intent.putExtra(\"userName\", userName); startActivity(intent); }else { android.widget.Toast.makeText(this, \"Please select size and accessability\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/6274/buggy-version/app.src.main.java.com.example.guest.iamhere.activities.NewSwarmReportActivity.java", "BodyUseAPI": ["com.example.guest.iamhere.models.SwarmReport.getReportId()", "com.google.firebase.database.DatabaseReference.setValue(com.example.guest.iamhere.models.SwarmReport)"], "Fixed commit": "13c0116f1adea3b75eb519ff81ff0dbdc17d5e8b", "Url": "https://api.github.com/repos/Atticus29/swarmReporter", "Date": "2017-06-29T21:04:38Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((behavior.getIconUrl()) != null) { org.tndata.android.compass.util.ImageLoader.loadBitmap(behaviorView.getImageView(), behavior.getIconUrl(), false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/3054/buggy-version/src.main.java.org.tndata.android.compass.adapter.MyPrioritiesGoalAdapter.java", "BodyUseAPI": ["org.tndata.android.compass.model.Behavior.getIconUrl()", "org.tndata.android.compass.util.ImageLoader.loadBitmap(behaviorView.getImageView(),behavior.getIconUrl(),boolean)"], "Fixed commit": "8634e4ffc18a0b434238b4ad6b1465855afdb49a", "Url": "https://api.github.com/repos/tndatacommons/android-app", "Date": "2015-07-22T16:37:19Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((action.getIconUrl()) != null) { org.tndata.android.compass.util.ImageLoader.loadBitmap(actionView.getImageView(), action.getIconUrl(), false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/3054/buggy-version/src.main.java.org.tndata.android.compass.adapter.MyPrioritiesGoalAdapter.java", "BodyUseAPI": ["org.tndata.android.compass.model.Action.getIconUrl()", "org.tndata.android.compass.util.ImageLoader.loadBitmap(actionView.getImageView(),action.getIconUrl(),boolean)"], "Fixed commit": "8634e4ffc18a0b434238b4ad6b1465855afdb49a", "Url": "https://api.github.com/repos/tndatacommons/android-app", "Date": "2015-07-22T16:37:19Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.tndata.android.compass.model.Trigger.getFormattedTime()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(triggerDate.equals(\"\"))) { triggerText += \" \" + triggerDate; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/3054/buggy-version/src.main.java.org.tndata.android.compass.adapter.MyPrioritiesGoalAdapter.java", "BodyUseAPI": [], "Fixed commit": "8634e4ffc18a0b434238b4ad6b1465855afdb49a", "Url": "https://api.github.com/repos/tndatacommons/android-app", "Date": "2015-07-22T16:37:19Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Inventory.get(((Inventory.size()) - 1)).equals(bob.whisper)) { this.hindsight(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/5426/buggy-version/Woo.java", "BodyUseAPI": [], "Fixed commit": "bb063b23834683435c7cdcacc09a5afec8260e04", "Url": "https://api.github.com/repos/JonahZ314/Doe", "Date": "2017-01-18T15:29:33Z"},
{"Line": "=>1327", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.larvalabs.svgandroid.SVGParser.Properties.getFloat(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (alpha != null) { int alphaInt = java.lang.Math.round(((255 * alpha) * (currentLayerAttributes().opacity))); colour = (stopColour & 16777215) | (alphaInt << 24); }else { colour = stopColour; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/5951/buggy-version/src.main.java.com.larvalabs.svgandroid.SVGParser.java", "BodyUseAPI": ["java.lang.Math.round(float)"], "Fixed commit": "8688234691d6c7e292c61c234c4b44212cf78703", "Url": "https://api.github.com/repos/bigfishcat/svg-android", "Date": "2016-12-02T11:59:25Z"},
{"Line": "=>435", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (coupon != null) { this.couponKeyString = coupon.getIdString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/585/buggy-version/op-gae.src.com.oddprints.dao.Basket.java", "BodyUseAPI": ["com.oddprints.dao.Coupon.getIdString()"], "Fixed commit": "13655e4ddc6b01e14e12db510625a1464db70495", "Url": "https://api.github.com/repos/mattburns/OddPrints", "Date": "2013-12-16T08:52:42Z"},
{"Line": "=>598", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (flagID <= 0) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/5531/buggy-version/src.contagionJVM.System.StructureSystem.java", "BodyUseAPI": [], "Fixed commit": "2a1bfcedbeb2f667d7fd2a991e0bcfbd06252df1", "Url": "https://api.github.com/repos/zunath/Contagion_JVM", "Date": "2015-04-07T23:51:35Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["contagionJVM.Event.NWScript.getLastPCRested()", "contagionJVM.Event.NWScript.getLastRestEventType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((restType != (org.nwnx.nwnx2.jvm.constants.RestEventtype.REST_STARTED)) || (oPC.equals(NWObject.INVALID))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/5531/buggy-version/src.contagionJVM.Event.Module_OnPlayerRest.java", "BodyUseAPI": [], "Fixed commit": "2a1bfcedbeb2f667d7fd2a991e0bcfbd06252df1", "Url": "https://api.github.com/repos/zunath/Contagion_JVM", "Date": "2015-04-07T23:51:35Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (tryString.equals(\"4:30PM\")) java.lang.System.out.println(\"WOWOW\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/3272/buggy-version/src.parser.DateTimeParser.java", "BodyUseAPI": [], "Fixed commit": "da99433234d69ca0f2ee4a8ac79288adf5353cc2", "Url": "https://api.github.com/repos/cs2103jan2016-w09-4j/main", "Date": "2016-04-07T08:32:12Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (tryString.equals(\"4:30PM\")) java.lang.System.out.println(\"!!!\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/3272/buggy-version/src.parser.DateTimeParser.java", "BodyUseAPI": [], "Fixed commit": "da99433234d69ca0f2ee4a8ac79288adf5353cc2", "Url": "https://api.github.com/repos/cs2103jan2016-w09-4j/main", "Date": "2016-04-07T08:32:12Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((link.getPicture()) != null) map.set(\"picture\", link.getPicture());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/6731/buggy-version/spring-social-facebook.src.main.java.org.springframework.social.facebook.api.impl.FeedTemplate.java", "BodyUseAPI": ["org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>.set(java.lang.String,link.getPicture())", "org.springframework.social.facebook.api.FacebookLink.getPicture()"], "Fixed commit": "a5a946c9696e081466776aed8c6d3f6d089e256d", "Url": "https://api.github.com/repos/trwalzer/spring-social-facebook", "Date": "2016-10-01T03:43:17Z"},
{"Line": "=>485", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((instance.getDeploymentUnitId()) != null) { unit = objectManager.loadResource(io.cattle.platform.core.model.DeploymentUnit.class, instance.getDeploymentUnitId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/4210/buggy-version/code.iaas.service-discovery.api.src.main.java.io.cattle.platform.servicediscovery.api.service.impl.ServiceDataManagerImpl.java", "BodyUseAPI": ["io.cattle.platform.core.model.Instance.getDeploymentUnitId()", "io.cattle.platform.object.ObjectManager.loadResource(java.lang.Class,instance.getDeploymentUnitId())"], "Fixed commit": "4d36d96a8294e46567ace54b187187dc7a84e627", "Url": "https://api.github.com/repos/alena1108/cattle", "Date": "2017-03-14T21:25:18Z"},
{"Line": "=>685", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((children.size()) != (floorVertices.size())) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/5207/buggy-version/src.main.java.org.concord.energy3d.model.Foundation.java", "BodyUseAPI": [], "Fixed commit": "b33d5902065d195f133783e84181022bc3d911b1", "Url": "https://api.github.com/repos/concord-consortium/energy3d", "Date": "2014-02-24T19:53:00Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (sender instanceof org.bukkit.command.ConsoleCommandSender) { sender.sendMessage(org.bitbucket.ucchy.undine.Messages.get(\"InformationMultiAttachConfirmConsole\")); }else { org.bitbucket.ucchy.undine.command.UndineCommandUtil.showOKCancelButton(ms, ((org.bitbucket.ucchy.undine.command.UndineSendCommand.COMMAND) + \" send attachconfirm\"), ((org.bitbucket.ucchy.undine.command.UndineSendCommand.COMMAND) + \" write\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/1153/buggy-version/src.main.java.org.bitbucket.ucchy.undine.command.UndineSendCommand.java", "BodyUseAPI": ["org.bukkit.command.CommandSender.sendMessage(org.bitbucket.ucchy.undine.Messages.get(\"InformationMultiAttachConfirmConsole\"))"], "Fixed commit": "684414b822cc9b7d7ea887119c267033f8dbe376", "Url": "https://api.github.com/repos/ucchyocean/UndineMailer", "Date": "2015-02-10T05:12:24Z"},
{"Line": "=>599", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(createFeatures())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/1197/buggy-version/src.main.java.trainableSegmentation.unsupervised.Color_Clustering.java", "BodyUseAPI": [], "Fixed commit": "c05fbb0472648d03547a92dcc8d2ecad307a5cac", "Url": "https://api.github.com/repos/96jsalinas/Trainable_Segmentation", "Date": "2017-07-26T10:26:29Z"},
{"Line": "=>928", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fielList) != null) { for (java.io.File f : fileList) { if (f.isDirectory()) { org.openmrs.util.OpenmrsUtil.deleteDirectory(f); } boolean success = f.delete(); if (org.openmrs.util.OpenmrsUtil.log.isDebugEnabled()) { org.openmrs.util.OpenmrsUtil.log.debug((((\" deleting \" + (f.getName())) + \" : \") + (success ? \"ok\" : \"failed\"))); } if (!success) { f.deleteOnExit(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/943/buggy-version/api.src.main.java.org.openmrs.util.OpenmrsUtil.java", "BodyUseAPI": [], "Fixed commit": "2148392fdaa2169288bec9b6507c1fd425ab61ae", "Url": "https://api.github.com/repos/Breta01/openmrs-core", "Date": "2015-12-11T22:00:55Z"},
{"Line": "=>343", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (fileList == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/943/buggy-version/api.src.main.java.org.openmrs.util.OpenmrsUtil.java", "BodyUseAPI": [], "Fixed commit": "2148392fdaa2169288bec9b6507c1fd425ab61ae", "Url": "https://api.github.com/repos/Breta01/openmrs-core", "Date": "2015-12-11T22:00:55Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mListener) != null) mListener.onCityChange(mCity);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/4163/buggy-version/app.src.main.java.com.citisense.vidklopcic.citisense.util.LocationHelper.java", "BodyUseAPI": [], "Fixed commit": "6aa5acd41d132217d73a96953072c7ae162f5fd5", "Url": "https://api.github.com/repos/vidklopcic/AirSloveniaAirPollutionApp", "Date": "2016-04-14T15:18:30Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JOptionPane.showInputDialog(jaddon.controller.JFrameManager,java.lang.String,java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((host != null) && (!(host.isEmpty()))) { join(host); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/903/buggy-version/src.de.panzercraft.TicTacToe.java", "BodyUseAPI": ["de.panzercraft.TicTacToe.join(java.lang.String)"], "Fixed commit": "17d96d8f088373d6d2045e46d360e01d95eb2f94", "Url": "https://api.github.com/repos/Panzer1119/TicTacToe", "Date": "2017-01-17T12:24:52Z"},
{"Line": "=>1289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["msi.gama.util.matrix.GamaIntMatrix.get(msi.gama.runtime.IScope,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (next == (-1)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/7619/buggy-version/msi.gama.core.src.msi.gama.util.graph.GamaGraph.java", "BodyUseAPI": [], "Fixed commit": "ccaba2a217f4f3a17e25a8af30c7b7d279fdf227", "Url": "https://api.github.com/repos/gama-platform/gama", "Date": "2016-11-23T10:57:59Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.opennms.netmgt.poller.monitors.VmwareMonitor.getKeyedBoolean(java.util.Map<java.lang.String, java.lang.Object>,java.lang.String,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (ignoreStandBy && (\"standBy\".equals(powerState))) { serviceStatus = org.opennms.netmgt.poller.PollStatus.up(); }else { serviceStatus = org.opennms.netmgt.poller.PollStatus.unavailable(((\"The system's state is '\" + powerState) + \"'\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/6781/buggy-version/integrations.opennms-vmware.src.main.java.org.opennms.netmgt.poller.monitors.VmwareMonitor.java", "BodyUseAPI": ["org.opennms.netmgt.poller.PollStatus.unavailable(java.lang.String)"], "Fixed commit": "478d699be51c4f9f878540dfecd50575349da597", "Url": "https://api.github.com/repos/OpenNMS/opennms", "Date": "2015-03-17T14:27:30Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.opennms.netmgt.poller.monitors.VmwareCimMonitor.getKeyedBoolean(java.util.Map<java.lang.String, java.lang.Object>,java.lang.String,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (ignoreStandBy && (\"standBy\".equals(powerState))) { serviceStatus = org.opennms.netmgt.poller.PollStatus.up(); }else { serviceStatus = org.opennms.netmgt.poller.PollStatus.unresponsive(((\"Host system's power state is '\" + powerState) + \"'\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/6781/buggy-version/integrations.opennms-vmware.src.main.java.org.opennms.netmgt.poller.monitors.VmwareCimMonitor.java", "BodyUseAPI": ["org.opennms.netmgt.poller.PollStatus.unresponsive(java.lang.String)"], "Fixed commit": "478d699be51c4f9f878540dfecd50575349da597", "Url": "https://api.github.com/repos/OpenNMS/opennms", "Date": "2015-03-17T14:27:30Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((invoiceLine.getAnalyticDistributionLineList()) != null) { for (com.axelor.apps.account.db.AnalyticDistributionLine analyticDistributionLineIt : invoiceLine.getAnalyticDistributionLineList()) { com.axelor.apps.account.db.AnalyticDistributionLine analyticDistributionLine = com.axelor.inject.Beans.get(com.axelor.apps.account.db.repo.AnalyticDistributionLineRepository.class).copy(analyticDistributionLineIt, false); moveLine.addAnalyticDistributionLineListItem(analyticDistributionLine); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/6051/buggy-version/axelor-account.src.main.java.com.axelor.apps.account.service.move.MoveLineService.java", "BodyUseAPI": ["com.axelor.apps.account.db.InvoiceLine.getAnalyticDistributionLineList()"], "Fixed commit": "fdaa9f1c71aafa92627d32fbd4775a72aeff4f65", "Url": "https://api.github.com/repos/axelor/axelor-business-suite", "Date": "2016-05-19T13:35:00Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.maven.project.MavenProject.getProperties()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (properties == null) { throw new org.apache.maven.plugin.MojoExecutionException(\"Could not get properties for project, cannot set artifact version properties.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/6185/buggy-version/dependencyversion-maven-plugin.src.main.java.cain.josh.maven.dependencyVersion.DependencyVersionMojo.java", "BodyUseAPI": [], "Fixed commit": "d64c055c61d3b2b9a6417618dd5cf952a2fed620", "Url": "https://api.github.com/repos/cainj13/dependencyversion-maven-plugin", "Date": "2016-06-13T16:18:54Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.processmanagement.scheduling.FirstInFirstOut.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((curProcess.getIoTime()) == 0) { curProcess.setBurstSegment(curProcess.getRemainingBurst()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/2229/buggy-version/src.org.processmanagement.scheduling.FirstInFirstOut.java", "BodyUseAPI": ["java.lang.Process.setBurstSegment(curProcess.getRemainingBurst())", "java.lang.Process.getRemainingBurst()"], "Fixed commit": "2a890a338f5f3d997963eb6852eeba92cc363b7d", "Url": "https://api.github.com/repos/rsanzone/COSC439-Process-Management", "Date": "2012-04-26T23:06:09Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.processmanagement.scheduling.FirstInFirstOut.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((curProcess.getIoTime()) > 0) { sendToIO(curProcess, elapsedBurst); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/2229/buggy-version/src.org.processmanagement.scheduling.FirstInFirstOut.java", "BodyUseAPI": ["org.processmanagement.scheduling.FirstInFirstOut.sendToIO(java.lang.Process,int)"], "Fixed commit": "2a890a338f5f3d997963eb6852eeba92cc363b7d", "Url": "https://api.github.com/repos/rsanzone/COSC439-Process-Management", "Date": "2012-04-26T23:06:09Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<java.lang.Process>.get(int)", "java.lang.Process.getIoSegment()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((curProcess.getIoTime()) >= IOTime) { curProcess.setIoTime(((curProcess.getIoTime()) - IOTime)); }else { curProcess.setIoTime(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/2229/buggy-version/src.org.processmanagement.processes.IOQueue.java", "BodyUseAPI": ["java.lang.Process.setIoTime(int)", "java.lang.Process.getIoTime()", "java.lang.Process.setIoTime(((curProcess.getIoTime()) - IOTime))"], "Fixed commit": "2a890a338f5f3d997963eb6852eeba92cc363b7d", "Url": "https://api.github.com/repos/rsanzone/COSC439-Process-Management", "Date": "2012-04-26T23:06:09Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fo.getExt().equals(CakePhp.CTP)) { isView = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/1933/buggy-version/src.org.cakephp.netbeans.editor.CakePhpEditorExtender.java", "BodyUseAPI": [], "Fixed commit": "a1df392a9f0ca7d8337c587b42293dc31690f79d", "Url": "https://api.github.com/repos/junichi11/cakephp-netbeans", "Date": "2013-02-21T03:55:47Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getServerName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (serverName.contains(\"localhost\")) { http_prefix = \"http://\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/2223/buggy-version/src.main.java.edu.harvard.iq.dataverse.api.WorldMapRelatedData.java", "BodyUseAPI": [], "Fixed commit": "df7bdfcf3b6aa673629a6a7a1d84ce05bb293530", "Url": "https://api.github.com/repos/IQSS/dataverse", "Date": "2014-10-16T13:51:45Z"},
{"Line": "=>388", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (android.text.TextUtils.isEmpty(mPhone)) { mPhone = mPhoneEt.getText().toString().trim(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/6141/buggy-version/src.com.xgf.winecome.ui.activity.PersonInfoActivity.java", "BodyUseAPI": [], "Fixed commit": "37495be324c3ff347e6d724af1252d773c8b9d08", "Url": "https://api.github.com/repos/xiguofeng/WineCome", "Date": "2015-08-19T15:28:00Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (gpuChecked) { com.sheepit.client.hardware.gpu.GPUDevice config_gpu = config.getGPUDevice(); if ((config_gpu != null) && (config_gpu.getCudaName().equals(gpu.getCudaName()))) { gpuCheckBox.setSelected(gpuChecked); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/3646/buggy-version/src.com.sheepit.client.standalone.swing.activity.Settings.java", "BodyUseAPI": ["com.sheepit.client.standalone.swing.activity.Settings.JCheckBoxGPU.setSelected(boolean)"], "Fixed commit": "6196c84ef833fc9afb4f2fe62c42dcf599e9dbde", "Url": "https://api.github.com/repos/laurent-clouet/sheepit-client", "Date": "2015-01-29T14:30:53Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (name.equals(\"depth\")) return depthTexture;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/6224/buggy-version/GameEngine.src.de.nerogar.render.RenderTarget.java", "BodyUseAPI": [], "Fixed commit": "24d44e38f96b06a56a4009a6fdf9ee7eea08e773", "Url": "https://api.github.com/repos/Nerogar/GameEngine", "Date": "2015-02-11T18:37:15Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pHead.equals(pCherry)) { (miScore)++; (miSnakeLength)++; showSnake(); showCherry(); showScore(); if ((((miScore) % 7) == 0) && ((miSpeed) > 0)) { (miSpeed)--; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/6661/buggy-version/src.NibblesMain.java", "BodyUseAPI": [], "Fixed commit": "941925d054109d7524eb1795c82bc3388263f4d7", "Url": "https://api.github.com/repos/anirudhmenon89/SnakeGameJava", "Date": "2014-12-31T11:58:05Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((i == ((window.getWidth()) - 1)) && ((window.getWidth()) == 600)) { window.resize(800, 600); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/8917/buggy-version/example.src.Main.java", "BodyUseAPI": ["org.finomnis.common.DrawingWindow.resize(int,int)"], "Fixed commit": "9565ff2c1e41f37ec034d07f0b1489474db6bae9", "Url": "https://api.github.com/repos/Finomnis/DrawingWindow", "Date": "2017-05-07T11:07:44Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.os.Build.VERSION.SDK_INT) >= 21) circularRevealOnStart(v);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/4328/buggy-version/app.src.main.java.medilive.sudaapps.net.medilive.activity.AddMedicineSchedules.java", "BodyUseAPI": [], "Fixed commit": "e2419cdbc749e7bce3c8314793e47312cdbd49db", "Url": "https://api.github.com/repos/muawiabashir/Android_App", "Date": "2016-01-04T09:20:29Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wordpress.android.models.PostsListPostList.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (post.isUploading()) { pageHolder.disabledOverlay.setVisibility(View.VISIBLE); }else { pageHolder.disabledOverlay.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/8551/buggy-version/WordPress.src.main.java.org.wordpress.android.ui.posts.adapters.PostsListAdapter.java", "BodyUseAPI": [], "Fixed commit": "a112aad7c3e6367266a4751b0cd0d161b9590026", "Url": "https://api.github.com/repos/mzorz/WordPress-Android", "Date": "2016-06-22T17:24:58Z"},
{"Line": "=>541", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mIsPage) { notifyItemChanged(position); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/8551/buggy-version/WordPress.src.main.java.org.wordpress.android.ui.posts.adapters.PostsListAdapter.java", "BodyUseAPI": [], "Fixed commit": "a112aad7c3e6367266a4751b0cd0d161b9590026", "Url": "https://api.github.com/repos/mzorz/WordPress-Android", "Date": "2016-06-22T17:24:58Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((chatText.getText().length()) == 0) { btn_Send.setBackground(getDrawable(R.drawable.notactivesend2)); btn_Send.setEnabled(false); }else if ((chatText.getText().length()) > 0) { btn_Send.setBackground(getDrawable(R.drawable.send2)); btn_Send.setEnabled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/7503/buggy-version/app.src.main.java.com.misha.mor.letsteamapp.letsteamapp.ChatRoom.java", "BodyUseAPI": ["chatText.getText().length()", "android.widget.EditText.getText()"], "Fixed commit": "b8d389314156a4789582c11020ec27e2223711a2", "Url": "https://api.github.com/repos/MishaLazar/LetsTeamApp", "Date": "2016-12-10T10:23:33Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (jsonObject.has(\"id\")) { com.parse.ParseUser.getCurrentUser().put(\"facebookId\", jsonObject.optString(\"id\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/5278/buggy-version/app.src.main.java.com.parseapp.vthokiefinder.LoginActivity.java", "BodyUseAPI": ["com.parse.ParseUser.getCurrentUser().put(java.lang.String,jsonObject.optString(\"id\"))", "org.json.JSONObject.optString(java.lang.String)"], "Fixed commit": "8bd7383236d4ee23e2429d741694f61c74818d26", "Url": "https://api.github.com/repos/Broar/vt-hokie-finder-android", "Date": "2015-12-03T20:59:10Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((balance) >= amount) { balance = (balance) - amount; }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/5504/buggy-version/src.banking.primitive.core.Savings.java", "BodyUseAPI": [], "Fixed commit": "a868712fa0f8d4b1fc6931f0b3de4b1da4233510", "Url": "https://api.github.com/repos/dchoffma/cst316labcr", "Date": "2015-02-25T22:29:55Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (status == null) { status = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/8990/buggy-version/Phuture-war.src.java.OrderManagement.OrderManagementController.java", "BodyUseAPI": [], "Fixed commit": "a5743e274b99702e8a0d6ee3f3da2281c2cff9cb", "Url": "https://api.github.com/repos/phuture-cloud/secret-octo-ninja", "Date": "2015-06-11T07:36:05Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mNoteAdapter.getDeleteState()) == true) { mNoteAdapter.setDeleteState(false); startShowNoamralTitle(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/6165/buggy-version/BirdNote.src.com.bird.note.ui.ShowNotesActivity.java", "BodyUseAPI": ["com.bird.note.model.ShowNoteAdapter.setDeleteState(boolean)"], "Fixed commit": "bf02594715f4de30445b6b2423687c0bf80dab94", "Url": "https://api.github.com/repos/whisper92/BirdNote", "Date": "2014-12-13T11:25:40Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (obj instanceof java.lang.String) { element = element.replaceAll(\"\\\\\\'\", \"\\\\\\\\\\'\"); sb.append(\"'\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/5431/buggy-version/NHBCommonPredicate.src.main.java.com.nhb.common.predicate.array.In.java", "BodyUseAPI": [], "Fixed commit": "5e0b87a2b26b6513a4f4578892a5ff9549a6046f", "Url": "https://api.github.com/repos/bachden/nhb-common", "Date": "2017-04-27T10:10:59Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (obj instanceof java.lang.String) { sb.append(\"'\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/5431/buggy-version/NHBCommonPredicate.src.main.java.com.nhb.common.predicate.array.In.java", "BodyUseAPI": [], "Fixed commit": "5e0b87a2b26b6513a4f4578892a5ff9549a6046f", "Url": "https://api.github.com/repos/bachden/nhb-common", "Date": "2017-04-27T10:10:59Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (obj instanceof java.lang.String) { sb.append(\"'\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/5431/buggy-version/NHBCommonPredicate.src.main.java.com.nhb.common.predicate.array.NotIn.java", "BodyUseAPI": [], "Fixed commit": "5e0b87a2b26b6513a4f4578892a5ff9549a6046f", "Url": "https://api.github.com/repos/bachden/nhb-common", "Date": "2017-04-27T10:10:59Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (obj instanceof java.lang.String) { element = element.replaceAll(\"\\\\\\'\", \"\\\\\\\\\\'\"); sb.append(\"'\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/5431/buggy-version/NHBCommonPredicate.src.main.java.com.nhb.common.predicate.array.NotIn.java", "BodyUseAPI": [], "Fixed commit": "5e0b87a2b26b6513a4f4578892a5ff9549a6046f", "Url": "https://api.github.com/repos/bachden/nhb-common", "Date": "2017-04-27T10:10:59Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (boat.getLocation().toString().equals(travelList.getSelectedItem().toString())) { confirmButton.setEnabled(false); }else { confirmButton.setEnabled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/4002/buggy-version/app.src.main.java.wybren_erik.hanzespel.fragments.MapFragment.java", "BodyUseAPI": [], "Fixed commit": "c7ac444bf2427079e180524d6857159b1ad80281", "Url": "https://api.github.com/repos/wybrenoppedijk/Hanzespel", "Date": "2017-08-21T14:12:07Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((markerMap.get(marker)) != (-1)) showCustomerInformation(markerMap.get(marker));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/8761/buggy-version/app.src.main.java.com.samstudio.temanusahapartner.ShowMapActivity.java", "BodyUseAPI": ["java.util.HashMap<com.google.android.gms.maps.model.Marker, java.lang.Integer>.get(com.google.android.gms.maps.model.Marker)", "com.samstudio.temanusahapartner.ShowMapActivity.1.showCustomerInformation(markerMap.get(marker))"], "Fixed commit": "de38e888b88c76fa4c20ec77aa995107f4f6ee3d", "Url": "https://api.github.com/repos/satryaway/TemanUsahaPartner", "Date": "2015-11-20T20:32:29Z"},
{"Line": "=>356", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (omitLast) { len--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/1588/buggy-version/core.src.main.java.net.sf.mmm.util.scanner.base.CharSequenceScanner.java", "BodyUseAPI": [], "Fixed commit": "3faab3716e1634738d23cee6fc6a610cd70e1bde", "Url": "https://api.github.com/repos/m-m-m/util", "Date": "2016-08-04T06:28:18Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((response.getLabelAnnotations()) != null) results.addAll(processEntityAnnotationList(response.getLabelAnnotations()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/8900/buggy-version/nuxeo-vision-core.src.main.java.org.nuxeo.vision.core.google.GoogleVisionResponse.java", "BodyUseAPI": ["java.util.List<org.nuxeo.vision.core.image.TextEntity>.addAll(java.util.List<org.nuxeo.vision.core.image.TextEntity>)", "com.google.api.services.vision.v1.model.AnnotateImageResponse.getLabelAnnotations()", "org.nuxeo.vision.core.google.GoogleVisionResponse.processEntityAnnotationList(response.getLabelAnnotations())"], "Fixed commit": "32bae727688b6b84ea46e108c0fff5ea7665a7ba", "Url": "https://api.github.com/repos/nuxeo/nuxeo-vision", "Date": "2016-03-15T22:47:05Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((response.getLandmarkAnnotations()) != null) results.addAll(processEntityAnnotationList(response.getLandmarkAnnotations()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/8900/buggy-version/nuxeo-vision-core.src.main.java.org.nuxeo.vision.core.google.GoogleVisionResponse.java", "BodyUseAPI": ["java.util.List<org.nuxeo.vision.core.image.TextEntity>.addAll(java.util.List<org.nuxeo.vision.core.image.TextEntity>)", "org.nuxeo.vision.core.google.GoogleVisionResponse.processEntityAnnotationList(response.getLandmarkAnnotations())", "com.google.api.services.vision.v1.model.AnnotateImageResponse.getLandmarkAnnotations()"], "Fixed commit": "32bae727688b6b84ea46e108c0fff5ea7665a7ba", "Url": "https://api.github.com/repos/nuxeo/nuxeo-vision", "Date": "2016-03-15T22:47:05Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((response.getLogoAnnotations()) != null) results.addAll(processEntityAnnotationList(response.getLogoAnnotations()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/8900/buggy-version/nuxeo-vision-core.src.main.java.org.nuxeo.vision.core.google.GoogleVisionResponse.java", "BodyUseAPI": ["org.nuxeo.vision.core.google.GoogleVisionResponse.processEntityAnnotationList(response.getLogoAnnotations())", "com.google.api.services.vision.v1.model.AnnotateImageResponse.getLogoAnnotations()", "java.util.List<org.nuxeo.vision.core.image.TextEntity>.addAll(java.util.List<org.nuxeo.vision.core.image.TextEntity>)"], "Fixed commit": "32bae727688b6b84ea46e108c0fff5ea7665a7ba", "Url": "https://api.github.com/repos/nuxeo/nuxeo-vision", "Date": "2016-03-15T22:47:05Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (iid != 0) { wang.huaichao.web.model.Image img = new wang.huaichao.web.model.Image(); img.setId(iid); article.setImage(img); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/18/buggy-version/src.main.java.wang.huaichao.web.dao.ArticleDao.java", "BodyUseAPI": ["wang.huaichao.web.model.Image.setId(int)"], "Fixed commit": "98203ccf6c0a23ee16e8717f9e56741ad153d4b6", "Url": "https://api.github.com/repos/doodlecoge/website", "Date": "2015-04-19T14:00:53Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((\"Incorrect password\".equals(ox.getMessage())) == false) { throw ox; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/2389/buggy-version/src.ovation.odata.service.JerseyAuthenticator.java", "BodyUseAPI": [], "Fixed commit": "7d61c237a44d7653e64fce213c2f7639c78b2d63", "Url": "https://api.github.com/repos/barrywark/ovation-odata", "Date": "2012-02-06T05:01:44Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraftforge.fml.common.FMLCommonHandler.instance().getMinecraftServerInstance()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (server.getCommandManager().getPossibleCommands(event.getEntityLiving()).contains(server.getCommandManager().getCommands().get(\"tpx\"))) { posText.setStyle(new net.minecraft.util.text.Style().setItalic(true).setHoverEvent(new net.minecraft.util.text.event.HoverEvent(HoverEvent.Action.SHOW_TEXT, new net.minecraft.util.text.TextComponentString(\"Click to teleport!\"))).setClickEvent(new net.minecraft.util.text.event.ClickEvent(ClickEvent.Action.RUN_COMMAND, (((((((\"/tpx \" + (((net.minecraft.entity.player.EntityPlayer) (event.getEntityLiving())).dimension)) + \" \") + (net.minecraft.util.math.MathHelper.floor(event.getEntityLiving().posX))) + \" \") + (net.minecraft.util.math.MathHelper.floor(((event.getEntityLiving().posY) + 0.5)))) + \" \") + (net.minecraft.util.math.MathHelper.floor(event.getEntityLiving().posZ)))))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/3324/buggy-version/src.main.java.net.doubledoordev.d3core.util.EventHandler.java", "BodyUseAPI": ["net.minecraftforge.event.entity.living.LivingDeathEvent.getEntityLiving()", "new net.minecraft.util.text.Style().setItalic(true).setHoverEvent(new net.minecraft.util.text.event.HoverEvent(HoverEvent.Action.SHOW_TEXT, new net.minecraft.util.text.TextComponentString(\"Click to teleport!\"))).setClickEvent(net.minecraft.util.text.event.ClickEvent)", "net.minecraftforge.event.entity.living.LivingDeathEvent.getEntityLiving()", "net.minecraftforge.event.entity.living.LivingDeathEvent.getEntityLiving()", "net.minecraft.util.text.TextComponentString.setStyle(new net.minecraft.util.text.Style().setItalic(true).setHoverEvent(new net.minecraft.util.text.event.HoverEvent(HoverEvent.Action.SHOW_TEXT, new net.minecraft.util.text.TextComponentString(\"Click to teleport!\"))).setClickEvent(new net.minecraft.util.text.event.ClickEvent(ClickEvent.Action.RUN_COMMAND, (((((((\"/tpx \" + (((net.minecraft.entity.player.EntityPlayer) (event.getEntityLiving())).dimension)) + \" \") + (net.minecraft.util.math.MathHelper.floor(event.getEntityLiving().posX))) + \" \") + (net.minecraft.util.math.MathHelper.floor(((event.getEntityLiving().posY) + 0.5)))) + \" \") + (net.minecraft.util.math.MathHelper.floor(event.getEntityLiving().posZ))))))", "net.minecraft.util.math.MathHelper.floor(((event.getEntityLiving().posY) + 0.5))", "net.minecraftforge.event.entity.living.LivingDeathEvent.getEntityLiving()", "net.minecraft.util.math.MathHelper.floor(event.getEntityLiving().posZ)", "net.minecraft.util.math.MathHelper.floor(event.getEntityLiving().posX)"], "Fixed commit": "5f21889fcbf7db5805ee6d1a4b965b4c3ea8957d", "Url": "https://api.github.com/repos/DoubleDoorDevelopment/D3Core", "Date": "2017-08-01T20:29:40Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (representationId != null) { uri = org.roda.wui.common.client.tools.RestUtils.createRepresentationDescriptiveMetadataDownloadUri(representationId, descId, versionKey); }else { uri = org.roda.wui.common.client.tools.RestUtils.createDescriptiveMetadataDownloadUri(aipId, descId, versionKey); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/8819/buggy-version/roda-ui.roda-wui.src.main.java.org.roda.wui.client.browse.DescriptiveMetadataHistory.java", "BodyUseAPI": ["org.roda.wui.common.client.tools.RestUtils.createRepresentationDescriptiveMetadataDownloadUri(java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "d7efafb06c4fde464945c6578f67fc3f5443668a", "Url": "https://api.github.com/repos/keeps/roda", "Date": "2016-10-13T11:52:48Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (representationId != null) { uri = org.roda.wui.common.client.tools.RestUtils.createRepresentationDescriptiveMetadataHTMLUri(representationId, descId, versionKey); }else { uri = org.roda.wui.common.client.tools.RestUtils.createDescriptiveMetadataHTMLUri(aipId, descId, versionKey); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/8819/buggy-version/roda-ui.roda-wui.src.main.java.org.roda.wui.client.browse.DescriptiveMetadataHistory.java", "BodyUseAPI": ["org.roda.wui.common.client.tools.RestUtils.createRepresentationDescriptiveMetadataHTMLUri(java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "d7efafb06c4fde464945c6578f67fc3f5443668a", "Url": "https://api.github.com/repos/keeps/roda", "Date": "2016-10-13T11:52:48Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((request.getCookies()) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/3208/buggy-version/webapp.src.main.java.org.vaadin.tori.UserFromRememberMeFilter.java", "BodyUseAPI": [], "Fixed commit": "6024fae7774e630a783596fd87a4b9e368fa490a", "Url": "https://api.github.com/repos/paulroemer/tori", "Date": "2016-08-08T15:45:20Z"},
{"Line": "=>273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(com.photon.phresco.framework.rest.api.ENVIRONMENT_NAME)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.apache.commons.lang.StringUtils.isEmpty(environment)) { environment = reader.getDefaultEnvName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/1322/buggy-version/phresco-framework-web.src.main.java.com.photon.phresco.framework.rest.api.QualityService.java", "BodyUseAPI": [], "Fixed commit": "e1f66375080dcd9f03554b4043643abf522da9b3", "Url": "https://api.github.com/repos/photon-infotech/framework", "Date": "2014-05-23T06:36:23Z"},
{"Line": "=>496", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((source.getSourceClientId()) != null) && ((source.getSourceClientId().getPath()) != null)) { creatorName = source.getSourceClientId().getPath(); }else if (((source.getSourceOrcid()) != null) && ((source.getSourceOrcid().getPath()) != null)) { creatorName = source.getSourceOrcid().getPath(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/7691/buggy-version/orcid-core.src.main.java.org.orcid.core.manager.impl.NotificationManagerImpl.java", "BodyUseAPI": ["org.orcid.jaxb.model.message.Source.getSourceOrcid()", "org.orcid.jaxb.model.message.Source.getSourceOrcid()", "org.orcid.jaxb.model.message.Source.getSourceClientId()", "org.orcid.jaxb.model.message.Source.getSourceOrcid()", "source.getSourceOrcid().getPath()", "source.getSourceClientId().getPath()", "source.getSourceOrcid().getPath()"], "Fixed commit": "1ffbd2c067f98158f6aa4bab7af81cb1e494c20d", "Url": "https://api.github.com/repos/ORCID/ORCID-Source", "Date": "2014-12-15T16:46:02Z"},
{"Line": "=>295", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class<? extends java.lang.Object>.getInterfaces()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((interfaces.length) > 0) { handler = invocationHandlers.get(interfaces[0]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/4800/buggy-version/src.main.java.org.ijsberg.iglu.configuration.module.StandardComponent.java", "BodyUseAPI": ["java.util.HashMap<java.lang.Class<?>, java.lang.reflect.InvocationHandler>.get(java.lang.Class<?>)"], "Fixed commit": "480e082864a573e04dd84e1a75ff7ede4c5b03c3", "Url": "https://api.github.com/repos/jmeetsma/Iglu", "Date": "2014-11-27T20:15:49Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((reposDataEntry.getDescription()) != null) && (!(reposDataEntry.getDescription().equals(\"null\")))) { description.setText(reposDataEntry.getDescription()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/8449/buggy-version/app.src.main.java.com.oklab.githubjourney.adapters.ReposListAdapter.java", "BodyUseAPI": ["android.widget.TextView.setText(reposDataEntry.getDescription())", "com.oklab.githubjourney.data.ReposDataEntry.getDescription()"], "Fixed commit": "e5b17f73c373f40ddd257fad391399fc4133b0ea", "Url": "https://api.github.com/repos/OlgaKuklina/GitJourney", "Date": "2017-02-06T14:58:16Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((myData.size()) > 0) { for (int i = 0; i < (myData.size()); i++) { if ((myData.get(i).get(\"abstract\").toString().indexOf(seekContent)) != (-1)) { map = new java.util.HashMap<java.lang.String, java.lang.Object>(); map.put(\"abstract\", myData.get(i).get(\"abstract\")); map.put(\"msgid\", myData.get(i).get(\"msgid\")); list.add(map); } } myData = list; notifyDataSetChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/7787/buggy-version/app.src.main.java.com.example.wangyicheng.gotopaste.MyAdapter.java", "BodyUseAPI": ["java.util.List<java.util.Map<java.lang.String, java.lang.Object>>.size()", "java.util.List<java.util.Map<java.lang.String, java.lang.Object>>.get(int)", "java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,java.lang.Object)", "java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,java.lang.Object)", "java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)", "java.lang.Object.toString()", "java.util.List<java.util.Map<java.lang.String, java.lang.Object>>.get(int)", "java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)", "java.util.List<java.util.Map<java.lang.String, java.lang.Object>>.get(int)", "java.lang.String.indexOf(java.lang.String)", "java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Fixed commit": "375e4d12a7204f19929c9387e788ceac954b2905", "Url": "https://api.github.com/repos/GanbyWang/GoToPaste", "Date": "2017-06-04T13:42:34Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mage.game.Game.getPermanent(source.getSourceId())", "java.util.Map<java.util.UUID, java.util.UUID>.get(permanent.getId())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (permanent.changeControllerId(controllerId, game)) { ++countChangeControl; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/774/buggy-version/Mage.src.mage.abilities.effects.common.continious.ExchangeControlTargetEffect.java", "BodyUseAPI": [], "Fixed commit": "9481e44ae22733c9361e1ae6a8c6d76bde2ed950", "Url": "https://api.github.com/repos/magefree/mage", "Date": "2012-10-01T06:25:46Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.util.UUID, java.util.UUID>.get(permanent.getId())", "mage.game.Game.getPermanent(java.util.UUID)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (permanent.changeControllerId(controllerId, game)) { ++countChangeControl; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/774/buggy-version/Mage.src.mage.abilities.effects.common.continious.ExchangeControlTargetEffect.java", "BodyUseAPI": [], "Fixed commit": "9481e44ae22733c9361e1ae6a8c6d76bde2ed950", "Url": "https://api.github.com/repos/magefree/mage", "Date": "2012-10-01T06:25:46Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (countChangeControl == 2) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/774/buggy-version/Mage.src.mage.abilities.effects.common.continious.ExchangeControlTargetEffect.java", "BodyUseAPI": [], "Fixed commit": "9481e44ae22733c9361e1ae6a8c6d76bde2ed950", "Url": "https://api.github.com/repos/magefree/mage", "Date": "2012-10-01T06:25:46Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mage.game.Game.getPermanent(source.getSourceId())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (permanent != null) { java.util.UUID controllerId = this.lockedControllers.get(permanent.getId()); if (controllerId != null) { if (permanent.changeControllerId(controllerId, game)) { ++countChangeControl; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/774/buggy-version/Mage.src.mage.abilities.effects.common.continious.ExchangeControlTargetEffect.java", "BodyUseAPI": ["java.util.Map<java.util.UUID, java.util.UUID>.get(permanent.getId())", "mage.game.permanent.Permanent.getId()", "mage.game.permanent.Permanent.changeControllerId(java.util.UUID,mage.game.Game)"], "Fixed commit": "9481e44ae22733c9361e1ae6a8c6d76bde2ed950", "Url": "https://api.github.com/repos/magefree/mage", "Date": "2012-10-01T06:25:46Z"},
{"Line": "=>334", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((propertyList.size()) > 0) { org.apache.stratos.cloud.controller.stub.pojo.Property[] properties1 = new org.apache.stratos.cloud.controller.stub.pojo.Property[propertyList.size()]; properties.setProperties(propertyList.toArray(properties1)); this.addProperties(alias, properties); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/4385/buggy-version/components.org.apache.stratos.autoscaler.src.main.java.org.apache.stratos.autoscaler.applications.parser.DefaultApplicationParser.java", "BodyUseAPI": ["java.util.List<org.apache.stratos.cloud.controller.stub.pojo.Property>.size()", "java.util.List<org.apache.stratos.cloud.controller.stub.pojo.Property>.toArray(org.apache.stratos.cloud.controller.stub.pojo.Property[])", "java.util.Properties.setProperties(propertyList.toArray(properties1))"], "Fixed commit": "38ea793fc598dc7c674537e823db39b1d7bf0518", "Url": "https://api.github.com/repos/apache/stratos", "Date": "2014-11-05T05:53:10Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (first) { builder.append(\"*\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/6087/buggy-version/cyclist.src.edu.utah.sci.cyclist.core.util.QueryBuilder.java", "BodyUseAPI": [], "Fixed commit": "127912622bd282d6f83368ba248ad0a64be5b7ab", "Url": "https://api.github.com/repos/cyclus/cyclist2", "Date": "2014-02-26T00:08:48Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((handler) instanceof com.earth2me.essentials.perm.NullPermissionsHandler)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/841/buggy-version/Essentials.src.com.earth2me.essentials.perm.PermissionsHandler.java", "BodyUseAPI": [], "Fixed commit": "8f7126164644da887843e43a08b09356cca08af4", "Url": "https://api.github.com/repos/EssentialsX/Essentials", "Date": "2015-06-03T00:08:44Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(hasFinishedLoadingMoreData)) { requestDataForPage(page); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/6857/buggy-version/library.src.main.java.tech.anthonywilliams.infinitydataengine.InfinitySectionedDataEngine.java", "BodyUseAPI": [], "Fixed commit": "27ac18f748acc63ac3f472f15f645bc83a5d8a2a", "Url": "https://api.github.com/repos/92tonywills/infinity-data-engine", "Date": "2016-09-15T20:41:18Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((board.getTurn()) == 'B') flipBoard();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/8870/buggy-version/app.src.main.java.techiiesio.com.chessmess.ChessActivity.java", "BodyUseAPI": [], "Fixed commit": "fb9edb0e6acaeecccb47f16c5cb63836accdd99a", "Url": "https://api.github.com/repos/rjung00712/ChessMess", "Date": "2017-04-14T18:44:40Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (frequencyCounts.containsKey(1)) { smoothedCount = (frequencyCounts.get(1)) / (totalWordCount); }else smoothedCount = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/6271/buggy-version/assignment4.spellchecker.src.CorpusReader.java", "BodyUseAPI": ["java.util.HashMap<java.lang.Integer, java.lang.Integer>.get(int)"], "Fixed commit": "728c8a48231b3cc77fcba124ce0a45abd32b1760", "Url": "https://api.github.com/repos/Luttik/Spell_checker_group_57_2016", "Date": "2016-03-28T18:44:09Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["CorpusReader.getNGramCount(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (frequencyCounts.containsKey((c + 1))) { smoothedCount = ((c + 1) * (frequencyCounts.get((c + 1)))) / (frequencyCounts.get(c)); }else smoothedCount = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/6271/buggy-version/assignment4.spellchecker.src.CorpusReader.java", "BodyUseAPI": ["java.util.HashMap<java.lang.Integer, java.lang.Integer>.get(int)", "java.util.HashMap<java.lang.Integer, java.lang.Integer>.get(int)"], "Fixed commit": "728c8a48231b3cc77fcba124ce0a45abd32b1760", "Url": "https://api.github.com/repos/Luttik/Spell_checker_group_57_2016", "Date": "2016-03-28T18:44:09Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((t.getId()) != null) { t = em().merge(t); }else { em().persist(t); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/7670/buggy-version/src.main.java.com.github.caarlos0.dao.AbstractDao.java", "BodyUseAPI": ["javax.persistence.EntityManager.persist(T)", "javax.persistence.EntityManager.merge(T)"], "Fixed commit": "68f963989bac67b6fb9fb2f5812752b18dc6e082", "Url": "https://api.github.com/repos/caarlos0/persistence-base", "Date": "2012-06-26T15:59:18Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (skip) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/3588/buggy-version/src.main.java.com.github.drochetti.javassist.maven.JavassistMojo.java", "BodyUseAPI": [], "Fixed commit": "847b7d2b48dc211784ee7a83d77dff5fd806c248", "Url": "https://api.github.com/repos/stephanenicolas/javassist-maven-plugin", "Date": "2014-05-20T09:31:48Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (container != null) { context = container.getContext(); }else { context = inflater.getContext(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/1461/buggy-version/src.main.java.org.quantumbadger.redreader.fragments.MainMenuFragment.java", "BodyUseAPI": ["android.view.ViewGroup.getContext()"], "Fixed commit": "e6934452eb1bbe93ff681c83760ad6b3152ec060", "Url": "https://api.github.com/repos/QuantumBadger/RedReader", "Date": "2013-04-07T15:40:48Z"},
{"Line": "=>401", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (evt.getData().getAttributeValue(\"type\").equals(\"error\")) { com.voxbone.kelpie.Session.logger.debug(((\"[[\" + (internalCallId)) + \"]] got an MESSAGE error \")); }else if (evt.getData().getAttributeValue(\"type\").equals(\"chat\")) { com.voxbone.kelpie.Session.logger.debug(((\"[[\" + (internalCallId)) + \"]] Got an IM\")); org.jabberstudio.jso.StreamElement body = evt.getData().getFirstElement(\"body\"); if (body != null) { java.lang.String msg = body.normalizeText(); com.voxbone.kelpie.Session.logger.debug((((\"[[\" + (internalCallId)) + \"]] Body=\") + msg)); com.voxbone.kelpie.MessageMessage mm = new com.voxbone.kelpie.MessageMessage(evt.getData()); if (msg.equals(\"callback\")) { com.voxbone.kelpie.CallSession cs = new com.voxbone.kelpie.CallSession(); com.voxbone.kelpie.Session.logger.debug(((((\"[[\" + (internalCallId)) + \"]] created call session : [[\") + (cs.internalCallId)) + \"]]\")); cs.offerPayloads.add(CallSession.PAYLOAD_PCMU); cs.offerPayloads.add(CallSession.PAYLOAD_PCMA); com.voxbone.kelpie.Session sess = com.voxbone.kelpie.SessionManager.findCreateSession(cs.jabberLocal.getDomain(), cs.jabberRemote); sess.startCall(cs, evt.getData().getTo().getNode(), com.voxbone.kelpie.UriMappings.toSipId(evt.getData().getFrom())); }else if ((msg.startsWith(\"/dial:\")) || (msg.toLowerCase().startsWith(\"/dial:\"))) { com.voxbone.kelpie.Session.logger.debug(((\"[[\" + (internalCallId)) + \"]] DIAL command detected\")); com.voxbone.kelpie.CallSession cs = com.voxbone.kelpie.CallManager.getSession(evt.getData().getFrom(), evt.getData().getTo()); if (cs != null) { com.voxbone.kelpie.Session.logger.debug(((((\"[[\" + (internalCallId)) + \"]] got call session : [[\") + (cs.internalCallId)) + \"]]\")); com.voxbone.kelpie.Session.logger.debug(((\"[[\" + (internalCallId)) + \"]] Call found, sending dtmfs\")); for (int i = \"/dial:\".length(); i < (msg.length()); i++) { if (com.voxbone.kelpie.Session.dtmfmode) { com.voxbone.kelpie.SipService.sendDTMFinfo(cs, msg.charAt(i), com.voxbone.kelpie.Session.dtmfduration); }else { cs.relay.sendSipDTMF(msg.charAt(i)); } } } }else if (msg.startsWith(\"/dtmf:\")) { com.voxbone.kelpie.Session.logger.debug(((\"[[\" + (internalCallId)) + \"]] DTMF command detected\")); com.voxbone.kelpie.CallSession cs = com.voxbone.kelpie.CallManager.getSession(evt.getData().getFrom(), evt.getData().getTo()); if (cs != null) { com.voxbone.kelpie.Session.logger.debug(((((\"[[\" + (internalCallId)) + \"]] got call session : [[\") + (cs.internalCallId)) + \"]]\")); com.voxbone.kelpie.Session.logger.debug(((\"[[\" + (internalCallId)) + \"]] Call found, sending SIP-INFO DTMF\")); for (int i = \"/dtmf:\".length(); i < (msg.length()); i++) { com.voxbone.kelpie.SipService.sendDTMFinfo(cs, msg.charAt(i), com.voxbone.kelpie.Session.dtmfduration); } } }else if ((msg.equals(\"/echo\")) || (msg.startsWith(\"/echo\"))) { com.voxbone.kelpie.Session.logger.debug(((\"[[\" + (internalCallId)) + \"]] Got a STATUS request!\")); org.jabberstudio.jso.Packet p = conn.getDataFactory().createPacketNode(new org.jabberstudio.jso.NSI(\"message\", \"jabber:server\"), org.jabberstudio.jso.Packet.class); p.setFrom(evt.getData().getTo()); p.setTo(evt.getData().getFrom()); p.setID(evt.getData().getID()); p.addElement(\"body\"); java.lang.String echo = msg.substring(((msg.lastIndexOf('/')) + 5)); p.getFirstElement(\"body\").addText((\"You Said: \" + echo)); p.setAttributeValue(\"type\", \"chat\"); com.voxbone.kelpie.Session sess = com.voxbone.kelpie.SessionManager.findCreateSession(evt.getData().getTo().getDomain(), evt.getData().getFrom()); sess.sendPacket(p); }else { java.lang.String domain = host; com.voxbone.kelpie.SipSubscription sub = com.voxbone.kelpie.SipSubscriptionManager.getWatcher(mm.from, mm.to); if (sub != null) { domain = ((javax.sip.address.SipURI) (sub.remoteParty.getURI())).getHost(); } com.voxbone.kelpie.SipService.sendMessageMessage(mm, domain); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/2659/buggy-version/src.main.java.com.voxbone.kelpie.Session.java", "BodyUseAPI": ["org.jabberstudio.jso.event.PacketEvent.getData()", "org.jabberstudio.jso.event.PacketEvent.getData()", "evt.getData().getFrom()", "evt.getData().getFrom()", "evt.getData().getAttributeValue(java.lang.String)", "org.jabberstudio.jso.event.PacketEvent.getData()", "org.jabberstudio.jso.event.PacketEvent.getData()", "com.voxbone.kelpie.Session.startCall(com.voxbone.kelpie.CallSession,evt.getData().getTo().getNode(),com.voxbone.kelpie.UriMappings.toSipId(evt.getData().getFrom()))", "org.jabberstudio.jso.Packet.setID(evt.getData().getID())", "com.voxbone.kelpie.CallManager.getSession(evt.getData().getFrom(),evt.getData().getTo())", "org.jabberstudio.jso.Packet.setFrom(evt.getData().getTo())", "org.jabberstudio.jso.event.PacketEvent.getData()", "org.jabberstudio.jso.event.PacketEvent.getData()", "evt.getData().getTo()", "evt.getData().getTo()", "evt.getData().getFrom()", "evt.getData().getFirstElement(java.lang.String)", "evt.getData().getTo()", "evt.getData().getID()", "com.voxbone.kelpie.UriMappings.toSipId(evt.getData().getFrom())", "org.jabberstudio.jso.event.PacketEvent.getData()", "org.jabberstudio.jso.event.PacketEvent.getData()", "evt.getData().getAttributeValue(\"type\").equals(java.lang.String)", "org.jabberstudio.jso.event.PacketEvent.getData()", "evt.getData().getFrom()", "org.jabberstudio.jso.event.PacketEvent.getData()", "com.voxbone.kelpie.CallManager.getSession(evt.getData().getFrom(),evt.getData().getTo())", "evt.getData().getTo().getNode()", "evt.getData().getTo().getDomain()", "evt.getData().getTo()", "org.jabberstudio.jso.event.PacketEvent.getData()", "evt.getData().getFrom()", "com.voxbone.kelpie.SessionManager.findCreateSession(evt.getData().getTo().getDomain(),evt.getData().getFrom())", "evt.getData().getTo()", "org.jabberstudio.jso.event.PacketEvent.getData()", "org.jabberstudio.jso.Packet.setTo(evt.getData().getFrom())", "org.jabberstudio.jso.event.PacketEvent.getData()", "org.jabberstudio.jso.event.PacketEvent.getData()"], "Fixed commit": "6dae7e2a25990618a3173e0e17160afcc6239ca1", "Url": "https://api.github.com/repos/lmangani/kelpie", "Date": "2013-01-06T22:36:41Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getUserId()) == (net.dowish.common.utils.Constant.SUPER_ADMIN)) { menuList = sysMenuService.queryList(new java.util.HashMap()); }else { menuList = sysMenuService.queryUserList(getUserId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/6941/buggy-version/dowish-oa-server.src.main.java.net.dowish.modules.sys.controller.SysMenuController.java", "BodyUseAPI": [], "Fixed commit": "d42870127f04623638bbcd9a1c5093c09c429d02", "Url": "https://api.github.com/repos/yangqihua/dowish-oa", "Date": "2017-07-12T02:42:48Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(e.getMessage().contains(\"Canceled\"))) { e.printStackTrace(); listenerForLoadingData.onDataFailure(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/3338/buggy-version/app.src.main.java.ru.hookahlocator.hooklocator.data.DataProvider.java", "BodyUseAPI": ["java.io.IOException.printStackTrace()"], "Fixed commit": "a4c3c398711af1992c0fd938ae349e111ac65424", "Url": "https://api.github.com/repos/ivydrenkov/HookahLocator", "Date": "2016-03-01T10:47:00Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((refSpec) != null) { command.addRefSpec(refSpec); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V86/7086/buggy-version/src.web.api.src.main.java.org.geogit.web.api.commands.PushWebOp.java", "BodyUseAPI": [], "Fixed commit": "7250c5877c94b0aaccbd416e6e33f90cfce1c33a", "Url": "https://api.github.com/repos/ROGUE-JCTD/GeoGit", "Date": "2013-06-18T15:28:43Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (data.getString(\"name\", \"\").equals(\"\")) { data = getSharedPreferences(com.FCI.SWE.SocialNetwork.LoginActivity.prefsName, Context.MODE_PRIVATE); android.content.SharedPreferences.Editor editor = data.edit(); editor.putString(\"name\", userNameEditText.getText().toString()); editor.putString(\"password\", passwordEditText.getText().toString()); editor.commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/5956/buggy-version/src.com.FCI.SWE.SocialNetwork.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "84a42f56c8d4a0daca8ce792d6a441819aa1ffd5", "Url": "https://api.github.com/repos/a7medfahmy94/SocialNetwork-FrontEnd", "Date": "2015-03-14T15:04:46Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.bluetooth.BluetoothDevice.getName()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (name != null) { android.util.Log.i(\"ble\", device.getName()); mLeDeviceListAdapter.addDevice(device); mLeDeviceListAdapter.notifyDataSetChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/1304/buggy-version/app.src.main.java.com.example.bluetooth.le.DeviceScanActivity.java", "BodyUseAPI": [], "Fixed commit": "480035a3d8237ec967f5bd097b84420be07ffeaa", "Url": "https://api.github.com/repos/flyloong/Android_BLE_Control", "Date": "2016-07-27T10:36:50Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((values.size()) > i) { java.lang.Object o = values.get(i); if (o == null) { line.put(columnName, java.lang.Boolean.FALSE); }else { line.put(columnName, new java.lang.Boolean(o.toString())); } }else { line.put(columnName, java.lang.Boolean.FALSE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/1787/buggy-version/main.plugins.org.talend.designer.core.generic.src.main.java.org.talend.designer.core.generic.model.GenericTableUtils.java", "BodyUseAPI": ["java.util.List.get(int)"], "Fixed commit": "a62594c6430b5caba2c3ce5f9bacd4d4e9821f15", "Url": "https://api.github.com/repos/Talend/tdi-studio-se", "Date": "2016-10-21T06:42:13Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getAction()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (ConnectivityManager.CONNECTIVITY_ACTION.equals(action)) { android.net.ConnectivityManager connMgr = ((android.net.ConnectivityManager) (context.getSystemService(Context.CONNECTIVITY_SERVICE))); android.net.NetworkInfo wifi = connMgr.getNetworkInfo(ConnectivityManager.TYPE_WIFI); android.net.NetworkInfo mobile = connMgr.getNetworkInfo(ConnectivityManager.TYPE_MOBILE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/8112/buggy-version/app.src.main.java.com.carlocation.comm.MessageService.java", "BodyUseAPI": [], "Fixed commit": "cce32778ff963af56d2e4517b2d1d793654b98c2", "Url": "https://api.github.com/repos/JackyShen2014/CarLocation", "Date": "2015-04-23T12:45:56Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNotBlank(usernameInput)) { com.tuqi.domain.query.UserQuery userQuery = new com.tuqi.domain.query.UserQuery(); userQuery.createCriteria().andUserNickNameEqualTo(usernameInput); java.util.List<com.tuqi.domain.model.UserDO> userDOList = userManager.selectByQuery(userQuery); if ((userDOList.size()) == 0) { bizResult.setCode(\"2\"); bizResult.setMessage(\"the user is not exit\"); return bizResult; } java.lang.String dbpass = userDOList.get(0).getPassword(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/2967/buggy-version/src.main.java.com.tuqi.controller.UserBaseController.java", "BodyUseAPI": ["userQuery.createCriteria().andUserNickNameEqualTo(java.lang.String)"], "Fixed commit": "318d7e762edf5f3932a579c3b1832e667b87b84d", "Url": "https://api.github.com/repos/2017GraduateGroup/tuqi-all-boot", "Date": "2017-06-09T10:32:55Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((fileArray.length) == 0) { java.lang.System.err.println(((((((((\"Valid files found for processing: \" + (listOfImageFilesnames.size())) + \" of \") + (fileArray.length)) + \" (filtered by \") + minTime) + \" < t < \") + maxTime) + \")\")); java.lang.System.exit(1); }else { java.lang.System.out.println(((((((((\"Valid files found for processing: \" + (listOfImageFilesnames.size())) + \" of \") + (fileArray.length)) + \" (filtered by \") + minTime) + \" < t < \") + maxTime) + \")\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/2341/buggy-version/src.main.java.com.jug.mmpreprocess.MMDataSource.java", "BodyUseAPI": [], "Fixed commit": "89cd635c5e31521c6aa04debdc8cfdbc07054c95", "Url": "https://api.github.com/repos/fjug/mmpreprocess", "Date": "2017-05-05T16:48:30Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edtNewItem.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((newItemStr == null) || ((newItemStr.length()) == 0)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/3320/buggy-version/TodoList.src.il.ac.huji.todolist.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "d17d91c3273bc36e6a5847bd445d657ec5ddb362", "Url": "https://api.github.com/repos/astrut12/POST_PC_REPO_EX2", "Date": "2013-03-14T23:01:27Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["il.ac.huji.todolist.MainActivity.findViewById(R.id.lstTodoItems)", "android.widget.ListView.getSelectedItemPosition()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!(lstTodoItems.hasFocus())) || (selectedItemIndex == (android.widget.ListView.INVALID_POSITION))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/3320/buggy-version/TodoList.src.il.ac.huji.todolist.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "d17d91c3273bc36e6a5847bd445d657ec5ddb362", "Url": "https://api.github.com/repos/astrut12/POST_PC_REPO_EX2", "Date": "2013-03-14T23:01:27Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.ObjectInputStream.readLong()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (fileSize >= (buffer.length)) { bytesRead = inStream.read(buffer, 0, buffer.length); fileOutput.write(buffer, 0, bytesRead); fileSize -= bytesRead; }else { bytesRead = inStream.read(buffer, 0, fileSize.intValue()); fileOutput.write(buffer, 0, bytesRead); fileSize -= bytesRead; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/3384/buggy-version/project3.src.mapredCommon.ReduceTask.java", "BodyUseAPI": ["java.io.FileOutputStream.write(byte[],int,int)", "java.lang.Long.intValue()", "java.io.ObjectInputStream.read(byte[],int,int)", "java.io.FileOutputStream.write(byte[],int,int)", "java.io.ObjectInputStream.read(byte[],int,int)"], "Fixed commit": "e50b87af71f427514ee1869f7c675ecf9233b7e8", "Url": "https://api.github.com/repos/RomanCX/DS_projects", "Date": "2014-11-18T04:46:33Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (profile == null) throw new java.lang.IllegalArgumentException(((\"Profile '\" + profile) + \"' does not exist.\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/7216/buggy-version/src.main.java.jp.vmi.selenium.webdriver.FirefoxDriverFactory.java", "BodyUseAPI": [], "Fixed commit": "d9f20fe09e0529d92acb5b165dfbdc77f1715867", "Url": "https://api.github.com/repos/koichirok/selenese-runner-java", "Date": "2017-02-19T16:52:09Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (outgoingReferences != null) { this.outgoingReferences = outgoingReferences; }else { this.outgoingReferences = new java.util.HashSet(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/3924/buggy-version/whois-oneshot.src.main.java.net.ripe.db.rndreference.RevisionWithReferences.java", "BodyUseAPI": [], "Fixed commit": "126cd1f8cd2b81b087ac78d2615be8aa6f97a875", "Url": "https://api.github.com/repos/RIPE-NCC/whois", "Date": "2014-08-03T16:11:18Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((temp) != null) { FinancialOverview.debtList.add(temp); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/3659/buggy-version/app.src.main.java.lowercasewon.oneup.AddEvent.java", "BodyUseAPI": [], "Fixed commit": "521df1a0d2a748acb035e89d8d8bee0e7564aeda", "Url": "https://api.github.com/repos/BMARX123/OneUp", "Date": "2016-09-25T05:02:08Z"},
{"Line": "=>375", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (category == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/7518/buggy-version/app.src.main.java.de.grau.organizer.activities.EditorActivity.java", "BodyUseAPI": [], "Fixed commit": "e7fcc77912610111b0c224699bdbc6a8895c7a79", "Url": "https://api.github.com/repos/Vierheller/Organizer", "Date": "2016-10-18T22:18:21Z"},
{"Line": "=>1901", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((rowMap.get(cnt).size()) == 1)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/1458/buggy-version/src.simplealgebra.SquareMatrixElem.java", "BodyUseAPI": [], "Fixed commit": "5cc3e9900451baf418dfded424f17337eb8ec1b7", "Url": "https://api.github.com/repos/viridian1138/SimpleAlgebra_V2", "Date": "2016-04-17T02:35:27Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((helper) == null)) helper.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/5356/buggy-version/app.src.main.java.by.schedulebsuir.notes.AddNote.java", "BodyUseAPI": [], "Fixed commit": "c95de95a6dd26dc1904c23e767925d95d84d462a", "Url": "https://api.github.com/repos/Jesterjke/schedule.bsuir", "Date": "2016-10-12T20:41:27Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((action) != null) { action.act(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/2630/buggy-version/dragonLand.src.guiPractice.components.Button.java", "BodyUseAPI": [], "Fixed commit": "18112c1b3a3ddb8adb45344ba5f55408503c2748", "Url": "https://api.github.com/repos/katsemenova/dragonLand", "Date": "2017-02-10T17:56:57Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mb.placeBlocks())) (itemStack.stackSize)++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/3476/buggy-version/source.net.malisis.doors.block.RustyHatch.java", "BodyUseAPI": [], "Fixed commit": "3f184c61502910d6a75dde1c25e497ac5c18a881", "Url": "https://api.github.com/repos/Ordinastie/MalisisDoors", "Date": "2014-11-01T07:07:57Z"},
{"Line": "=>442", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (receivingPower) { if (this.isBeingRidden()) { this.removePassengers(); } if ((this.getRollingAmplitude()) == 0) { this.setRollingDirection((-(this.getRollingDirection()))); this.setRollingAmplitude(10); this.setDamage(50.0F); this.setBeenAttacked(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/1027/buggy-version/src.main.java.com.lime.terracart.EntityTerraCart.java", "BodyUseAPI": [], "Fixed commit": "b0288b3494f2d0431a2dbe188c75c5aa14bb3ae8", "Url": "https://api.github.com/repos/alfuken/terracart", "Date": "2017-05-10T15:43:40Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (melnorme.util.swt.SWTUtil.isOkToUse(getViewer().getControl())) { getViewer().refresh(dubProject); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/3821/buggy-version/plugin_ide.ui.src.mmrnmhrm.ui.navigator.DubNavigatorContentProvider.java", "BodyUseAPI": [], "Fixed commit": "7f436328e8e02a25aaeee794b1994711f0af4362", "Url": "https://api.github.com/repos/DDT-IDE/DDT", "Date": "2015-05-13T15:04:50Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasAttacked_) { hasAttacked_ = false; hasWindFuryAttacked_ = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/4250/buggy-version/src.main.java.com.hearthsim.card.minion.Minion.java", "BodyUseAPI": [], "Fixed commit": "6bb8e7aef848894b16166cb1894c09a18e3503c5", "Url": "https://api.github.com/repos/MrHen/HearthSim", "Date": "2014-12-03T06:02:23Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (fuse != null) { java.lang.StringBuilder str = new java.lang.StringBuilder(); for (int i = 0; i < (fuse[0].length); i++) { str.append(fuse[0][i]); if ((i + 1) < (fuse[0].length)) { str.append(\" + \"); } } return str.toString(); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/2194/buggy-version/src.heretic1.Demon.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "ed5a8cef369965943889742372298385e42478bb", "Url": "https://api.github.com/repos/Jared-Lim/HMansion1", "Date": "2016-11-19T14:12:22Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.text.Editable.getSpans(int,int,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((spans.length) == 0) return lastString;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/1946/buggy-version/app.src.main.java.com.mycardboarddreams.autocompletebubbletext.MultiSelectEditText.java", "BodyUseAPI": [], "Fixed commit": "5beb306f2f40c7db074fad5416e059fc45f57b24", "Url": "https://api.github.com/repos/FrederickRider/AutoCompleteBubbleText", "Date": "2015-01-30T04:02:51Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((commaDelineated.length) == 0) return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/1946/buggy-version/app.src.main.java.com.mycardboarddreams.autocompletebubbletext.MultiSelectEditText.java", "BodyUseAPI": [], "Fixed commit": "5beb306f2f40c7db074fad5416e059fc45f57b24", "Url": "https://api.github.com/repos/FrederickRider/AutoCompleteBubbleText", "Date": "2015-01-30T04:02:51Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.text.Editable.getSpanEnd(spans[((spans.length) - 1)])", "com.mycardboarddreams.autocompletebubbletext.MultiSelectEditText.getEditableText()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (spanEndPoint == ((spannedText.length()) - 1)) return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/1946/buggy-version/app.src.main.java.com.mycardboarddreams.autocompletebubbletext.MultiSelectEditText.java", "BodyUseAPI": [], "Fixed commit": "5beb306f2f40c7db074fad5416e059fc45f57b24", "Url": "https://api.github.com/repos/FrederickRider/AutoCompleteBubbleText", "Date": "2015-01-30T04:02:51Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((objArr.getClass()) == (java.lang.Object.class)) { java.lang.System.out.println(objArr.getClass().getSimpleName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/5543/buggy-version/UsefulTool.src.main.java.handy.main.ToolMain.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)", "java.lang.Class<? extends java.lang.Object>.getSimpleName()", "java.lang.Object.getClass()"], "Fixed commit": "1511daa9b4ad2257ce6c3db5a4cd78b53d9c29ae", "Url": "https://api.github.com/repos/wwgit/walterwhite", "Date": "2017-01-24T04:27:48Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (null != client) { client.release(); org.sanju.ml.ConnectionManager.clientMap.remove(org.sanju.ml.ConnectionManager.name(client)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/3419/buggy-version/src.main.java.org.sanju.ml.ConnectionManager.java", "BodyUseAPI": ["com.marklogic.client.DatabaseClient.release()", "java.util.Map<java.lang.String, com.marklogic.client.DatabaseClient>.remove(java.lang.String)", "org.sanju.ml.ConnectionManager.name(com.marklogic.client.DatabaseClient)"], "Fixed commit": "9aef376d64ccbf122fc2ef92fd31c988822eaf1e", "Url": "https://api.github.com/repos/sanjuthomas/marklogic-module-deployer", "Date": "2016-10-19T14:51:13Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((controller) != null) && ((controller.getPos()) != null)) { if ((this.worldObj.getBlockState(controller.getPos()).getBlock()) != (zairus.iskalliumreactors.block.IRBlocks.STEEL_CONTROLLER)) { this.capacity = 0; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/8693/buggy-version/src.main.java.zairus.iskalliumreactors.tileentity.TileEntityIRPowerTap.java", "BodyUseAPI": ["this.worldObj.getBlockState(controller.getPos())", "zairus.iskalliumreactors.tileentity.TileEntityIRController.getPos()", "this.worldObj.getBlockState(controller.getPos()).getBlock()"], "Fixed commit": "8c2f631ae68876f163c125db53f6d185bb687124", "Url": "https://api.github.com/repos/Zairus/IskalliumReactors", "Date": "2017-03-28T17:39:16Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bytes == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/3061/buggy-version/blelitelib.src.main.java.com.afunx.ble.blelitelib.utils.HexUtils.java", "BodyUseAPI": [], "Fixed commit": "547122b23680e9160f4299347db54f4cc76ed9a6", "Url": "https://api.github.com/repos/afunx/BleLiteLib4android", "Date": "2017-06-27T09:28:03Z"},
{"Line": "=>699", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((glmt._beta) != null) for (int i = 0; i < (newBeta.length); ++i) newBeta[i] = ((glmt._beta[i]) * (1 - (_lineSearchStep))) + ((_lineSearchStep) * (newBeta[i])); else for (int i = 0; i < (newBeta.length); ++i) newBeta[i] *= _lineSearchStep;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/4051/buggy-version/src.main.java.hex.glm.GLM2.java", "BodyUseAPI": [], "Fixed commit": "5be274f28b6d604e01e86d8553884fa3f99c8263", "Url": "https://api.github.com/repos/0xdata/h2o", "Date": "2014-08-22T22:18:05Z"},
{"Line": "=>372", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mOpenResourceTab[position]) == (com.door43.translationstudio.newui.translate.ReviewModeAdapter.TAB_NOTES)) { mOpenResourceTab[position] = com.door43.translationstudio.newui.translate.ReviewModeAdapter.TAB_WORDS; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/7845/buggy-version/app.src.main.java.com.door43.translationstudio.newui.translate.ReviewModeAdapter.java", "BodyUseAPI": [], "Fixed commit": "24ed068db0dc312c3471db3c45194e8ee57ab7ee", "Url": "https://api.github.com/repos/unfoldingWord-dev/ts-android", "Date": "2015-09-29T06:29:52Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getQueryString()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((queryString != null) && ((queryString.length()) > 0)) { receivingURL.append(\"?\").append(request.getQueryString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/302/buggy-version/src.main.java.com.hhpham.paths.subscription.OpenIdHandler.java", "BodyUseAPI": [], "Fixed commit": "4b5d8c24c601fdc6094f2078cf7a3fad64308765", "Url": "https://api.github.com/repos/hhpham/integrationChallenge", "Date": "2015-02-09T03:31:40Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((gameObject.rigidbody) != null) gameObject.rigidbody.velocity.y = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/7579/buggy-version/com.ezardlabs.dethsquare.Collider.java", "BodyUseAPI": [], "Fixed commit": "e3c4bb98c06cd0b022ba78a587e63790772f57d8", "Url": "https://api.github.com/repos/8-Bit-Warframe/Dethsquare-Engine-core", "Date": "2015-09-12T00:57:10Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((transform.position.x) != (lastBounds.left)) { gameObject.onCollision(c, new com.ezardlabs.dethsquare.Collider.Collision(com.ezardlabs.dethsquare.Collider.CollisionLocation.RIGHT, x)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/7579/buggy-version/com.ezardlabs.dethsquare.Collider.java", "BodyUseAPI": [], "Fixed commit": "e3c4bb98c06cd0b022ba78a587e63790772f57d8", "Url": "https://api.github.com/repos/8-Bit-Warframe/Dethsquare-Engine-core", "Date": "2015-09-12T00:57:10Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((transform.position.y) != (lastBounds.top)) { gameObject.onCollision(c, new com.ezardlabs.dethsquare.Collider.Collision(com.ezardlabs.dethsquare.Collider.CollisionLocation.TOP, y)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/7579/buggy-version/com.ezardlabs.dethsquare.Collider.java", "BodyUseAPI": [], "Fixed commit": "e3c4bb98c06cd0b022ba78a587e63790772f57d8", "Url": "https://api.github.com/repos/8-Bit-Warframe/Dethsquare-Engine-core", "Date": "2015-09-12T00:57:10Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((transform.position.y) != (lastBounds.top)) || (((gameObject.rigidbody) != null) && (y > (gameObject.rigidbody.gravity)))) { gameObject.onCollision(c, new com.ezardlabs.dethsquare.Collider.Collision(com.ezardlabs.dethsquare.Collider.CollisionLocation.BOTTOM, y)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/7579/buggy-version/com.ezardlabs.dethsquare.Collider.java", "BodyUseAPI": ["com.ezardlabs.dethsquare.Collider.onCollision(com.ezardlabs.dethsquare.Collider,com.ezardlabs.dethsquare.Collider.Collision)"], "Fixed commit": "e3c4bb98c06cd0b022ba78a587e63790772f57d8", "Url": "https://api.github.com/repos/8-Bit-Warframe/Dethsquare-Engine-core", "Date": "2015-09-12T00:57:10Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((transform.position.x) != (lastBounds.left)) { gameObject.onCollision(c, new com.ezardlabs.dethsquare.Collider.Collision(com.ezardlabs.dethsquare.Collider.CollisionLocation.LEFT, x)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/7579/buggy-version/com.ezardlabs.dethsquare.Collider.java", "BodyUseAPI": [], "Fixed commit": "e3c4bb98c06cd0b022ba78a587e63790772f57d8", "Url": "https://api.github.com/repos/8-Bit-Warframe/Dethsquare-Engine-core", "Date": "2015-09-12T00:57:10Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.nuxeo.ecm.user.center.profile.SimpleCache<java.lang.String>.getIfPresent(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (uid != null) { return session.getDocument(new org.nuxeo.ecm.core.api.IdRef(uid)); }else { org.nuxeo.ecm.core.api.DocumentModel profile = new org.nuxeo.ecm.user.center.profile.UserProfileServiceImpl.UserProfileDocumentGetter(session, userWorkspace).getOrCreate(); profileUidCache.put(userName, profile.getId()); return profile; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/5817/buggy-version/nuxeo-user-profile.src.main.java.org.nuxeo.ecm.user.center.profile.UserProfileServiceImpl.java", "BodyUseAPI": ["org.nuxeo.ecm.core.api.CoreSession.getDocument(org.nuxeo.ecm.core.api.IdRef)"], "Fixed commit": "d5875d85645967148dc563b8d6fc59ae0f7ae25e", "Url": "https://api.github.com/repos/nuxeo/nuxeo-user-center", "Date": "2013-12-02T11:43:12Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.nuxeo.ecm.user.center.profile.SimpleCache<java.lang.String>.getIfPresent(session.getPrincipal().getName())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (uid != null) { return session.getDocument(new org.nuxeo.ecm.core.api.IdRef(uid)); }else { org.nuxeo.ecm.core.api.DocumentModel profile = new org.nuxeo.ecm.user.center.profile.UserProfileServiceImpl.UserProfileDocumentGetter(session, userWorkspace).getOrCreate(); profileUidCache.put(session.getPrincipal().getName(), profile.getId()); return profile; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/5817/buggy-version/nuxeo-user-profile.src.main.java.org.nuxeo.ecm.user.center.profile.UserProfileServiceImpl.java", "BodyUseAPI": ["org.nuxeo.ecm.core.api.CoreSession.getDocument(org.nuxeo.ecm.core.api.IdRef)"], "Fixed commit": "d5875d85645967148dc563b8d6fc59ae0f7ae25e", "Url": "https://api.github.com/repos/nuxeo/nuxeo-user-center", "Date": "2013-12-02T11:43:12Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getString(java.lang.String,<nulltype>)", "android.content.SharedPreferences.getString(java.lang.String,<nulltype>)", "android.content.SharedPreferences.getString(java.lang.String,<nulltype>)", "android.content.SharedPreferences.getString(java.lang.String,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((((fuelType == null) || (carManufacturer == null)) || (carModel == null)) || (sensorId == null)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/5279/buggy-version/org.envirocar.app.src.org.envirocar.app.application.CarManager.java", "BodyUseAPI": [], "Fixed commit": "6e3ff1232ccda685a3ccaea8b5440328a7f87eb2", "Url": "https://api.github.com/repos/enviroCar/enviroCar-app", "Date": "2013-09-05T15:07:02Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.pms.configuration.RendererConfiguration.getRendererConfigurationByUUID(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (renderer != null) { player = ((net.pms.util.BasicPlayer.Logical) (renderer.getPlayer())); players.put(uuid, player); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/6965/buggy-version/src.main.java.net.pms.network.PlayerControlHandler.java", "BodyUseAPI": ["net.pms.configuration.RendererConfiguration.getPlayer()"], "Fixed commit": "15e812cabfed9d2aa8694942b6bd8888375a7f02", "Url": "https://api.github.com/repos/UniversalMediaServer/UniversalMediaServer", "Date": "2017-06-07T19:28:51Z"},
{"Line": "=>318", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((facing == null) || (capability == null)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/606/buggy-version/src.main.java.com.cjburkey.miningwells.tile.TileEntityMiningWell.java", "BodyUseAPI": [], "Fixed commit": "cbe2b7479b849b29adb96abfb723c03eae036f4a", "Url": "https://api.github.com/repos/cjburkey01/MiningWells", "Date": "2017-11-12T23:14:18Z"},
{"Line": "=>476", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Long, bamboo.trove.common.WarcProgressManager>.get(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (warc.finishedWithoutError()) { completedWarcs.add(key); dao.removeError(key); (warcsProcessed)++; if (key > (progressInBatchId)) { progressInBatchId = key; } }else { if (trackError(warc)) { completedWarcs.add(key); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/8772/buggy-version/trove.src.bamboo.trove.full.FullReindexWarcManager.java", "BodyUseAPI": ["bamboo.trove.full.FullReindexWarcManager.trackError(bamboo.trove.common.WarcProgressManager)"], "Fixed commit": "271c6f9d8b339908f38af78393ff04f465681ca8", "Url": "https://api.github.com/repos/greg-pendlebury/bamboo", "Date": "2016-11-06T23:23:07Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (option.equals(\"0\")) { java.lang.System.exit(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/4766/buggy-version/src.com.twu.biblioteca.Menu.java", "BodyUseAPI": [], "Fixed commit": "48c8bfa55a77c507d9ccc0a681929d3158b8c9ba", "Url": "https://api.github.com/repos/crgp01/twu-biblioteca-cristina", "Date": "2016-09-17T20:21:50Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cart.getItem()) == (net.minecraft.init.Items.furnace_minecart)) return mods.railcraft.common.carts.EnumCart.FURNACE;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/5399/buggy-version/src.main.java.mods.railcraft.common.carts.EnumCart.java", "BodyUseAPI": [], "Fixed commit": "cff133971a868ad7410b2594754841428667272e", "Url": "https://api.github.com/repos/Yopu/Railcraft", "Date": "2014-10-11T23:08:51Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.LineNumberReader.readLine()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (line != null) { readLine = new uk.ac.ebi.pride.gui.data.mztab.parser.readers.LineAndPositionAwareBufferedReader.PositionAwareLine(((int) (reader.getLineNumber())), offset, line); offset += (line.getBytes().length) + (ncrlf); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/4933/buggy-version/src.main.java.uk.ac.ebi.pride.gui.data.mztab.parser.readers.LineAndPositionAwareBufferedReader.java", "BodyUseAPI": ["java.lang.String.getBytes()"], "Fixed commit": "904e01d5a0940b7f633de2233a623703f62a1d5b", "Url": "https://api.github.com/repos/proteomexchange/px-submission-tool", "Date": "2016-06-13T14:56:17Z"},
{"Line": "=>369", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.berkeley.boinc.lite.RpcClient.getFileTransfers()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (transfers == null) { if (sk.boinc.androboinc.debug.Logging.INFO) android.util.Log.i(sk.boinc.androboinc.bridge.ClientBridgeWorkerHandler.TAG, \"RPC failed in updateTransfers()\"); rpcFailed(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/7136/buggy-version/src.sk.boinc.androboinc.bridge.ClientBridgeWorkerHandler.java", "BodyUseAPI": [], "Fixed commit": "82f21c1d99fcab70f59276e6cc9f8f96848ddf65", "Url": "https://api.github.com/repos/palo-m/androboinc", "Date": "2010-12-31T05:40:15Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.peeeq.wurstscript.types.WurstTypeClosure.getAbstractMethodSignature(ct.getDef().attrNameLinks())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (sig == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/8477/buggy-version/de.peeeq.wurstscript.src.de.peeeq.wurstscript.types.WurstTypeClosure.java", "BodyUseAPI": [], "Fixed commit": "4ae23260e7434675262f1aaeacde8e40e2512062", "Url": "https://api.github.com/repos/peq/WurstScript", "Date": "2013-10-06T16:19:24Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((local.getAction()) != null) { requireAction(local.getAction()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/2662/buggy-version/database.src.main.java.com.findwise.hydra.mongodb.MongoQuery.java", "BodyUseAPI": ["com.findwise.hydra.mongodb.MongoQuery.requireAction(local.getAction())", "com.findwise.hydra.local.LocalQuery.getAction()"], "Fixed commit": "25f10c27ed9652b4f7ba4d1d3ba5cb81c471e3cd", "Url": "https://api.github.com/repos/antonha/Hydra", "Date": "2012-07-08T09:53:17Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tk.wurst_client.ai.FlyPathProcessor.get(tk.wurst_client.ai.FlyPathProcessor)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((java.lang.Math.abs(((pos.getY()) - (nextPos.getY())))) <= 1) mc.player.motionY = net.minecraft.util.math.MathHelper.clamp(mc.player.motionY, (-0.25), 0.25);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/9172/buggy-version/src.tk.wurst_client.ai.FlyPathProcessor.java", "BodyUseAPI": [], "Fixed commit": "e5a35384f3af2765a073ad41dfb583ed5b3a51e9", "Url": "https://api.github.com/repos/Wurst-Imperium/Wurst-MC-1.11", "Date": "2016-12-27T18:31:52Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((org.mobicents.servlet.restcomm.http.keycloak.KeycloakClient.KEYCKLOAD_URL_ORIGIN) != null) && (!(org.mobicents.servlet.restcomm.http.keycloak.KeycloakClient.KEYCKLOAD_URL_ORIGIN.equals(\"\")))) return org.mobicents.servlet.restcomm.http.keycloak.KeycloakClient.KEYCKLOAD_URL_ORIGIN;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/2954/buggy-version/restcomm.restcomm.http.src.main.java.org.mobicents.servlet.restcomm.http.keycloak.KeycloakClient.java", "BodyUseAPI": [], "Fixed commit": "d5e1b2cace4aa41c90b1246b95211d63ea9ff4ea", "Url": "https://api.github.com/repos/RestComm/Restcomm-Connect", "Date": "2015-05-20T07:48:42Z"},
{"Line": "=>365", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((JoinedChannels.size()) != 0) { this.CurrentChannel = JoinedChannels.get(0); player.sendMessage((\"You are now in \" + (JoinedChannels.get(0)))); }else { this.CurrentChannel = \"\"; player.sendMessage(\"You have left all channels. Join one to talk.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/9096/buggy-version/src.main.java.uk.co.CyniCode.CyniChat.objects.UserDetails.java", "BodyUseAPI": ["java.util.List<java.lang.String>.get(int)", "org.bukkit.entity.Player.sendMessage(java.lang.String)", "java.util.List<java.lang.String>.get(int)"], "Fixed commit": "ca0b9154028270115710b9ccbd279abad49d2228", "Url": "https://api.github.com/repos/m477h3w1012/CyniChat", "Date": "2013-10-05T14:24:56Z"},
{"Line": "=>742", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(hasNext())) { throw new java.util.NoSuchElementException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/2263/buggy-version/server.sonar-server.src.main.java.org.sonar.server.issue.index.IssueIndex.java", "BodyUseAPI": [], "Fixed commit": "243ad4b43e977b51643933c42c97c00123d97e3d", "Url": "https://api.github.com/repos/SonarSource/sonarqube", "Date": "2015-02-25T14:09:08Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((fragmentHolder.getBucket()) == null) { si.dime.android.retainer.Bucket newBucket = new si.dime.android.retainer.Bucket(); fragmentHolder.setBucket(newBucket); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/5267/buggy-version/retainer.src.main.java.si.dime.android.retainer.managers.ActivityBucketManager.java", "BodyUseAPI": ["si.dime.android.retainer.FragmentHolder.setBucket(si.dime.android.retainer.Bucket)"], "Fixed commit": "ff20b29280bae011e43c59735e3a79d786242e08", "Url": "https://api.github.com/repos/dimitark/retainer", "Date": "2016-05-15T12:26:11Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((fragmentHolder.getBucket()) == null) { si.dime.android.retainer.Bucket newBucket = new si.dime.android.retainer.Bucket(); fragmentHolder.setBucket(newBucket); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/5267/buggy-version/retainer.src.main.java.si.dime.android.retainer.managers.FragActivityBucketManager.java", "BodyUseAPI": ["si.dime.android.retainer.SupportFragmentHolder.setBucket(si.dime.android.retainer.Bucket)"], "Fixed commit": "ff20b29280bae011e43c59735e3a79d786242e08", "Url": "https://api.github.com/repos/dimitark/retainer", "Date": "2016-05-15T12:26:11Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.block.Block.getHarvestTool(target.getDefaultState())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((\"shovel\".equals(toolType)) && ((target.getHarvestLevel(target.getDefaultState())) <= 0)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/2410/buggy-version/src.main.java.cyano.basemetals.items.ItemMetalCrackHammer.java", "BodyUseAPI": [], "Fixed commit": "7239da14f01df8c2547046075b813c4b75301503", "Url": "https://api.github.com/repos/cyanobacterium/BaseMetals", "Date": "2015-05-21T22:42:59Z"},
{"Line": "=>299", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dev.blunch.blunch.utils.Utils.getLocationFromAddress(java.lang.String,getApplicationContext())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (posicion == null) { android.widget.Toast.makeText(this, \"La direcci\u00f3n no es correcta\", Toast.LENGTH_LONG).show(); }else if (start.before(new java.util.Date())) { android.widget.Toast.makeText(this, \"Fecha de inicio anterior a fecha actual\", Toast.LENGTH_LONG).show(); }else if (finish.before(new java.util.Date())) { android.widget.Toast.makeText(this, \"Fecha de finalizaci\u00f3n anterior a fecha actual\", Toast.LENGTH_LONG).show(); }else if ((start.getTime()) >= (finish.getTime())) { android.widget.Toast.makeText(this, \"Hora de inicio m\u00e1s peque\u00f1a o igual que hora final\", Toast.LENGTH_LONG).show(); }else { java.util.List<dev.blunch.blunch.domain.Dish> dishes = new java.util.ArrayList<>(); if (incorrectDishes) android.widget.Toast.makeText(this, \"Platos incorrectos\", Toast.LENGTH_LONG).show(); else { for (dev.blunch.blunch.view.PaymentDishLayout d : myDishes) { if (!(d.getDishName().equals(\"\"))) { dev.blunch.blunch.domain.Dish dish = new dev.blunch.blunch.domain.Dish(d.getDishName(), d.getDishPrice()); dishes.add(dish); } } dev.blunch.blunch.domain.PaymentMenu paymentMenu = new dev.blunch.blunch.domain.PaymentMenu(menuNameString, dev.blunch.blunch.utils.Preferences.getCurrentUserEmail(), description, localization, start, finish); paymentMenuService.save(paymentMenu, dishes); paymentMenuService.resetMessageCountToActualUser(paymentMenu.getId()); android.widget.Toast.makeText(this, \"Menu de pago creado correctamente!\", Toast.LENGTH_LONG).show(); finish(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/1667/buggy-version/app.src.main.java.dev.blunch.blunch.activity.NewPaymentMenuActivity.java", "BodyUseAPI": [], "Fixed commit": "925dd8ca6b1a98e3643d38dd0f2e9e9d1025ed95", "Url": "https://api.github.com/repos/BlunchDev/blunch_android", "Date": "2016-05-15T17:12:03Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (start.before(new java.util.Date())) { android.widget.Toast.makeText(this, \"Fecha de inicio anterior a fecha actual\", Toast.LENGTH_LONG).show(); }else if (finish.before(new java.util.Date())) { android.widget.Toast.makeText(this, \"Fecha de finalizaci\u00f3n anterior a fecha actual\", Toast.LENGTH_LONG).show(); }else if ((start.getTime()) >= (finish.getTime())) { android.widget.Toast.makeText(this, \"Hora de inicio m\u00e1s peque\u00f1a o igual que hora final\", Toast.LENGTH_LONG).show(); }else if (posicion == null) { android.widget.Toast.makeText(this, \"La direcci\u00f3n no es correcta\", Toast.LENGTH_LONG).show(); }else { java.util.List<dev.blunch.blunch.domain.Dish> offeredDish = new java.util.ArrayList<>(); java.util.List<dev.blunch.blunch.domain.Dish> suggestedDish = new java.util.ArrayList<>(); for (dev.blunch.blunch.view.CollaborativeDishLayout dishLayout : myDishes) { if (!(dishLayout.getDishName().equals(\"\"))) { dev.blunch.blunch.domain.Dish dish = new dev.blunch.blunch.domain.Dish(dishLayout.getDishName()); offeredDish.add(dish); } } for (dev.blunch.blunch.view.CollaborativeDishLayout dishLayout : suggestedDishes) { if (!(dishLayout.getDishName().equals(\"\"))) { dev.blunch.blunch.domain.Dish dish = new dev.blunch.blunch.domain.Dish(dishLayout.getDishName()); suggestedDish.add(dish); } } if ((offeredDish.size()) == 0) { android.widget.Toast.makeText(getApplicationContext(), \"Debes ofrecer al menos un plato!\", Toast.LENGTH_SHORT).show(); }else { dev.blunch.blunch.domain.CollaborativeMenu collaborativeMenu = new dev.blunch.blunch.domain.CollaborativeMenu(menuNameString, dev.blunch.blunch.utils.Preferences.getCurrentUserEmail(), description, localization, start, finish); collaborativeMenuService.save(collaborativeMenu, offeredDish, suggestedDish); collaborativeMenuService.resetMessageCountToActualUser(collaborativeMenu.getId()); android.widget.Toast.makeText(this, \"Men\u00fa colaborativo creado correctamente!\", Toast.LENGTH_LONG).show(); finish(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/1667/buggy-version/app.src.main.java.dev.blunch.blunch.activity.NewCollaborativeMenuActivity.java", "BodyUseAPI": ["java.util.Date.getTime()"], "Fixed commit": "925dd8ca6b1a98e3643d38dd0f2e9e9d1025ed95", "Url": "https://api.github.com/repos/BlunchDev/blunch_android", "Date": "2016-05-15T17:12:03Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.fasterxml.jackson.core.ObjectCodec.readTree(com.fasterxml.jackson.core.JsonParser)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((root.get(PropertyPathValue_JSONSerializer.PROPERTY_Value)) != null) { throw new java.lang.RuntimeException((((\"No value type '\" + (PropertyPathValue_JSONSerializer.PROPERTY_ValueType)) + \"' found in \") + root)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/2864/buggy-version/metasfresh-webui-api.src.main.java.de.metas.ui.web.window.shared.datatype.PropertyPathValue_JSONDeserializer.java", "BodyUseAPI": [], "Fixed commit": "6f565703b7a54370ad963a83fabbc1bf41027f2b", "Url": "https://api.github.com/repos/metasfresh/metasfresh-webui-api", "Date": "2016-07-15T10:39:58Z"},
{"Line": "=>722", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((_requestBodySize) == 0) && (!(\"get\".equals(_request.method)))) { java.lang.String connection = _request.getHeader(\"connection\"); if ((connection != null) && (connection.toLowerCase().contains(\"close\"))) { _requestBodySize = java.lang.Integer.MAX_VALUE; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/4817/buggy-version/XulApp.src.com.starcor.xulapp.http.XulHttpServer.java", "BodyUseAPI": ["com.starcor.xulapp.http.XulHttpServer.XulHttpServerRequest.getHeader(java.lang.String)"], "Fixed commit": "87750ebf7cd5bb11eafe2532c9c0b2cfa51a1a85", "Url": "https://api.github.com/repos/JingBin4679/starcor.xul", "Date": "2017-10-13T02:25:57Z"},
{"Line": "=>368", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((author.getUserId()) != null) { com.pratilipi.data.type.User user = dataAccessor.getUser(author.getUserId()); if (!(author.getEmail().equals(user.getEmail()))) { com.pratilipi.api.impl.init.InitApi.logger.log(java.util.logging.Level.WARNING, (((\"Author email \" + (author.getEmail())) + \" doesn't match with the same in user table \") + (user.getEmail()))); count++; continue; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/1950/buggy-version/src.main.java.com.pratilipi.api.impl.init.InitApi.java", "BodyUseAPI": ["author.getEmail().equals(user.getEmail())", "com.pratilipi.data.type.Author.getEmail()", "java.util.logging.Logger.log(java.util.logging.Level,(((\"Author email \" + (author.getEmail())) + \" doesn't match with the same in user table \") + (user.getEmail())))", "com.pratilipi.data.type.Author.getUserId()", "com.pratilipi.data.type.Author.getEmail()", "com.pratilipi.data.DataAccessor.getUser(author.getUserId())"], "Fixed commit": "6428b2f9b6f1c19ae6352f1c7bcadbcec2e0e9fd", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2016-01-13T12:02:20Z"},
{"Line": "=>555", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((generateOptionsFor) == (teammates.common.datatransfer.FeedbackParticipantType.NONE)) { boolean isMaxSelectableChoicesEnabled = (maxSelectableChoices) != (java.lang.Integer.MIN_VALUE); boolean isMinSelectableChoicesEnabled = (minSelectableChoices) != (java.lang.Integer.MIN_VALUE); if (isMaxSelectableChoicesEnabled) { if ((msqChoices.size()) < (maxSelectableChoices)) { errors.add(Const.FeedbackQuestion.MSQ_ERROR_MAX_SELECTABLE_EXCEEDED_TOTAL); }else if ((maxSelectableChoices) < 2) { errors.add(Const.FeedbackQuestion.MSQ_ERROR_MIN_FOR_MAX_SELCTABLE_CHOICES); } } if (isMinSelectableChoicesEnabled && ((minSelectableChoices) < 1)) { errors.add(Const.FeedbackQuestion.MSQ_ERROR_MIN_FOR_MIN_SELCTABLE_CHOICES); } if ((isMaxSelectableChoicesEnabled && isMinSelectableChoicesEnabled) && ((minSelectableChoices) > (maxSelectableChoices))) { errors.add(Const.FeedbackQuestion.MSQ_ERROR_MIN_SELECTABLE_EXCEEDED_MAX_SELECTABLE); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/7934/buggy-version/src.main.java.teammates.common.datatransfer.questions.FeedbackMsqQuestionDetails.java", "BodyUseAPI": [], "Fixed commit": "ab626be24e85d7beed8afd6e48627ebc86b1b3fd", "Url": "https://api.github.com/repos/VamsiSangam/teammates", "Date": "2017-08-17T16:50:38Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (mod == null) mod = \"<empty>\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/7040/buggy-version/src.org.rascalmpl.interpreter.staticErrors.StaticError.java", "BodyUseAPI": [], "Fixed commit": "842b48b35d41321851c685a2a4be16c93b3f190e", "Url": "https://api.github.com/repos/cwi-swat/rascal", "Date": "2013-04-11T12:51:41Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((quiz.getQuestions().size()) == 1) { out.println(\"<form action=\\\"SolveServlet\\\" method=\\\"post\\\">\"); }else { out.println(\"<form action=\\\"MultiPageQuiz\\\" method=\\\"post\\\">\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/1662/buggy-version/src.Servlets.MultiPageQuiz.java", "BodyUseAPI": [], "Fixed commit": "273aa2f3b2060a1a4db2f47497b5d8b161a3cab8", "Url": "https://api.github.com/repos/Fchaubard/CS108FinalProject", "Date": "2013-03-08T18:14:49Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jfoenix.controls.JFXCheckBox.isSelected()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (checked) { java.lang.System.out.println(\"checkbox test\"); cp = models.ContactPerson.findFirst(\"email = ?\", contactEmail); m.set(\"contact_person_id\", cp.get(\"id\")); }else { cp = models.ContactPerson.findFirst(\"email = ?\", box.getSelectionModel().getSelectedItem().toString()); m.set(\"contact_person_id\", cp.get(\"id\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/6519/buggy-version/src.main.java.services.MemberService.java", "BodyUseAPI": [], "Fixed commit": "dda5b9591e0937140d017590cfadf9ee41749650", "Url": "https://api.github.com/repos/dat16bapp/badminton_app", "Date": "2017-05-24T08:06:53Z"},
{"Line": "=>893", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((subreddit.isNsfw()) && (!(me.ccrama.redditslide.Reddit.over18))) { new com.afollestad.materialdialogs.AlertDialogWrapper.Builder(this).setTitle(((\"/r/\" + (subreddit.getDisplayName())) + \" contains mature content.\")).setMessage(\"If you are over 18 and are willing to see adult content, you can enable this in Settings > Reddit Settings > Show NSFW content\").setOnDismissListener(new android.content.DialogInterface.OnDismissListener() { @java.lang.Override public void onDismiss(android.content.DialogInterface dialog) { finish(); } }).setPositiveButton(R.string.btn_ok, new android.content.DialogInterface.OnClickListener() { @java.lang.Override public void onClick(android.content.DialogInterface dialog, int which) { finish(); } }).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/6403/buggy-version/app.src.main.java.me.ccrama.redditslide.Activities.SubredditView.java", "BodyUseAPI": ["com.afollestad.materialdialogs.AlertDialogWrapper.Builder.setTitle(((\"/r/\" + (subreddit.getDisplayName())) + \" contains mature content.\"))", "new com.afollestad.materialdialogs.AlertDialogWrapper.Builder(this).setTitle(((\"/r/\" + (subreddit.getDisplayName())) + \" contains mature content.\")).setMessage(\"If you are over 18 and are willing to see adult content, you can enable this in Settings > Reddit Settings > Show NSFW content\").setOnDismissListener(android.content.DialogInterface.OnDismissListener)", "new com.afollestad.materialdialogs.AlertDialogWrapper.Builder(this).setTitle(((\"/r/\" + (subreddit.getDisplayName())) + \" contains mature content.\")).setMessage(java.lang.String)", "net.dean.jraw.models.Subreddit.getDisplayName()", "new com.afollestad.materialdialogs.AlertDialogWrapper.Builder(this).setTitle(((\"/r/\" + (subreddit.getDisplayName())) + \" contains mature content.\")).setMessage(\"If you are over 18 and are willing to see adult content, you can enable this in Settings > Reddit Settings > Show NSFW content\").setOnDismissListener(new android.content.DialogInterface.OnDismissListener() {\n    @java.lang.Override\n    public void onDismiss(android.content.DialogInterface dialog) {\n        finish();\n    }\n}).setPositiveButton(R.string.btn_ok,android.content.DialogInterface.OnClickListener)", "new com.afollestad.materialdialogs.AlertDialogWrapper.Builder(this).setTitle(((\"/r/\" + (subreddit.getDisplayName())) + \" contains mature content.\")).setMessage(\"If you are over 18 and are willing to see adult content, you can enable this in Settings > Reddit Settings > Show NSFW content\").setOnDismissListener(new android.content.DialogInterface.OnDismissListener() {\n    @java.lang.Override\n    public void onDismiss(android.content.DialogInterface dialog) {\n        finish();\n    }\n}).setPositiveButton(R.string.btn_ok, new android.content.DialogInterface.OnClickListener() {\n    @java.lang.Override\n    public void onClick(android.content.DialogInterface dialog, int which) {\n        finish();\n    }\n}).show()"], "Fixed commit": "713007ed09e5c5eabd3e61b2105d44d03e5a3636", "Url": "https://api.github.com/repos/Nxt3/Slide", "Date": "2016-04-04T04:28:14Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (index == (-1)) { index = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/6435/buggy-version/OlaPlay.app.src.main.java.rohksin.com.olaplay.Activities.MusicActivity.java", "BodyUseAPI": [], "Fixed commit": "41db61c586abc442b84eed2fbceecbb8259e41a3", "Url": "https://api.github.com/repos/rohitksingh/OLA_Play_Music_App", "Date": "2017-12-19T17:09:21Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(trailerKey.equals(\"\"))) { initialisePaging(trailerKey); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/8069/buggy-version/popularmovies.src.main.java.com.example.jose_gonzalez.popularmovies.ui.MovieDetailFragment.java", "BodyUseAPI": ["com.example.jose_gonzalez.popularmovies.ui.MovieDetailFragment.initialisePaging(java.lang.String)"], "Fixed commit": "060768e3aa4b65a5f09857bb64665c123df11941", "Url": "https://api.github.com/repos/josemg08/MyUdacityPortfolio", "Date": "2016-02-25T03:08:45Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (prezByTermString.equals(\"\")) { prezByTermString = \"1\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/5733/buggy-version/src.com.skilldistillery.web.PresidentsServlet.java", "BodyUseAPI": [], "Fixed commit": "27e6d035a62b9372cac27d6b4a2a5deb2d8619d7", "Url": "https://api.github.com/repos/andyWynyard/PresidentsProject", "Date": "2017-07-12T18:11:34Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["retrofit2.Response<java.util.List<com.bad_coders.moneyconverter.Model.Currency>>.body()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((rateList == null) || ((rateList.size()) == 0)) { onFailure(new java.lang.Exception(java.lang.String.valueOf(response.code()))); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/3219/buggy-version/app.src.main.java.com.bad_coders.moneyconverter.ViewModel.RateListViewModel.java", "BodyUseAPI": [], "Fixed commit": "26cca59495dbf30d880d929fd36ec3bab15a24cd", "Url": "https://api.github.com/repos/tarasbarabash/MoneyConverter", "Date": "2017-12-25T19:55:33Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mFragmentView) == null) { mFragmentView = inflater.inflate(getLayoutId(), container, false); butterknife.ButterKnife.bind(this, mFragmentView); initViews(mFragmentView); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/1012/buggy-version/app.src.main.java.com.cins.daily.mvp.ui.fragment.base.BaseFragment.java", "BodyUseAPI": [], "Fixed commit": "72bf30a48fa7dafb8b39f0c90464cc093f730ef4", "Url": "https://api.github.com/repos/iZeroer/Daily", "Date": "2017-01-19T14:52:13Z"},
{"Line": "=>395", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.optString(Constants.LAST_MODIFIED_DATE)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(android.text.TextUtils.isEmpty(lastModStr))) { try { lastModifiedDate = com.salesforce.androidsdk.smartsync.manager.SyncManager.TIMESTAMP_FORMAT.parse(lastModStr).getTime(); } catch (java.text.ParseException e) { android.util.Log.e(\"SmartSyncManager:syncUpOneRecord\", \"Error during date parsing\", e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/2395/buggy-version/libs.SmartSync.src.com.salesforce.androidsdk.smartsync.manager.SyncManager.java", "BodyUseAPI": ["java.util.Date.getTime()", "java.text.DateFormat.parse(java.lang.String)"], "Fixed commit": "1d850f7f73a7029726e11597f7fe8a691e14ba26", "Url": "https://api.github.com/repos/wmathurin/SalesforceMobileSDK-Android", "Date": "2015-02-04T00:34:36Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (KeybaseKeyserver.ORIGIN.equals(origin)) { existing.setExtraData(incoming.getExtraData()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/7417/buggy-version/OpenKeychain.src.main.java.org.sufficientlysecure.keychain.keyimport.ImportKeysList.java", "BodyUseAPI": [], "Fixed commit": "6d70e1bfd139c869c9a3eb929c7a9d3f16e7ae14", "Url": "https://api.github.com/repos/open-keychain/open-keychain", "Date": "2014-09-25T09:30:52Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((evt.type) == (net.minecraftforge.client.event.RenderGameOverlayEvent.ElementType.HELMET)) && (evt instanceof net.minecraftforge.client.event.RenderGameOverlayEvent.Post)) { for (openperipheral.common.terminal.IDrawable drawable : drawableList) { drawable.draw(evt.partialTicks, evt.mouseX, evt.mouseY); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/8392/buggy-version/src.openperipheral.common.terminal.DrawableManager.java", "BodyUseAPI": ["openperipheral.common.terminal.IDrawable.draw(evt.partialTicks,evt.mouseX,evt.mouseY)"], "Fixed commit": "376471539b50773ff3009dd038c14334bd3e9b63", "Url": "https://api.github.com/repos/SinZ163/OpenPeripheral", "Date": "2013-06-10T22:36:48Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (scoreMap.containsKey(id)) { return scoreMap.get(id); }else { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/2322/buggy-version/src.main.java.org.redhatchallenge.rhc2013.server.UserServiceImpl.java", "BodyUseAPI": ["org.infinispan.Cache<java.lang.String, java.lang.Integer>.get(java.lang.String)"], "Fixed commit": "09a7363f29b47c060acd6b1ad6197965b7ee0028", "Url": "https://api.github.com/repos/junnn/rhc2013_admin", "Date": "2013-10-17T02:45:24Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (datetime.endsWith(\"Z\")) return jp.redmine.redmineclient.entity.TypeConverter.parseDateTimeFormat(datetime, jp.redmine.redmineclient.entity.TypeConverter.FORMAT_DATETIMEZ); else return jp.redmine.redmineclient.entity.TypeConverter.parseDateTimeFormat(datetime, jp.redmine.redmineclient.entity.TypeConverter.FORMAT_DATETIME);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/1293/buggy-version/OpenRedmine.src.jp.redmine.redmineclient.entity.TypeConverter.java", "BodyUseAPI": ["jp.redmine.redmineclient.entity.TypeConverter.parseDateTimeFormat(java.lang.String,java.lang.String)", "jp.redmine.redmineclient.entity.TypeConverter.parseDateTimeFormat(java.lang.String,java.lang.String)"], "Fixed commit": "7dd1e5436fbe8f5200d7580e8a471e61b54b33d7", "Url": "https://api.github.com/repos/indication/OpenRedmine", "Date": "2012-11-29T17:29:17Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (android.text.TextUtils.isEmpty(datetime)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/1293/buggy-version/OpenRedmine.src.jp.redmine.redmineclient.entity.TypeConverter.java", "BodyUseAPI": [], "Fixed commit": "7dd1e5436fbe8f5200d7580e8a471e61b54b33d7", "Url": "https://api.github.com/repos/indication/OpenRedmine", "Date": "2012-11-29T17:29:17Z"},
{"Line": "=>441", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(request.getDocumentElement().getLocalName().startsWith(WFS2.GET_FEATURE))) { throw new java.lang.IllegalArgumentException((\"Expected a GetFeature(WithLock) request: \" + (request.getDocumentElement().getNodeName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/2500/buggy-version/src.main.java.org.opengis.cite.iso19142.util.WFSRequest.java", "BodyUseAPI": ["org.w3c.dom.Element.getNodeName()", "org.w3c.dom.Document.getDocumentElement()"], "Fixed commit": "d603943bae09fa9f1fd50d501d2b0cf23d5a3880", "Url": "https://api.github.com/repos/lat-lon/ets-wfs20", "Date": "2014-10-10T18:32:05Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((raven.getMoldId()) != null) { com.dynamicheart.raven.model.mold.Mold mold = moldService.getById(raven.getMoldId()); if ((raven.isMold()) && (mold != null)) { inRavenInfoFields.setMold(true); inRavenInfoFields.setMoldContent(mold.getContent()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/1090/buggy-version/src.main.java.com.dynamicheart.raven.controller.app.raven.populator.InRavenInfoFieldsPopulator.java", "BodyUseAPI": ["com.dynamicheart.raven.model.raven.Raven.isMold()", "com.dynamicheart.raven.model.raven.Raven.getMoldId()", "com.dynamicheart.raven.services.mold.MoldService.getById(raven.getMoldId())"], "Fixed commit": "37db0e4e3ed1607842040ba0dbd2c839dbcdaa13", "Url": "https://api.github.com/repos/dynamicheart/raven-web", "Date": "2017-09-13T01:42:17Z"},
{"Line": "=>337", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.box.isInitialized())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/6248/buggy-version/src.org.yogpstop.qp.TileQuarry.java", "BodyUseAPI": [], "Fixed commit": "f73c246093985733a65915c05bdd111eda8e07c6", "Url": "https://api.github.com/repos/yogpstop/QuarryPlus", "Date": "2013-08-06T17:07:49Z"},
{"Line": "=>772", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ast.getLastChild()) == null) throw new java.lang.RuntimeException((((\"Unexpected token \" + nextToken) + \" at line \") + (nextToken.lineNumber)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/1118/buggy-version/src.cat.uab.cephis.CPPParser.java", "BodyUseAPI": [], "Fixed commit": "36970d489165efff5c510876b3b6406240abf2ed", "Url": "https://api.github.com/repos/davidcastells/Transourcer", "Date": "2017-05-25T06:48:15Z"},
{"Line": "=>687", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (serializableConstraint != null) { if ((serializableConstraint.getConstraint()) instanceof gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.constraints.Predicate) { segmentPredicates.add(serializableConstraint); }else if ((serializableConstraint.getConstraint()) instanceof gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.constraints.ConformanceStatement) { segmentConformanceStatements.add(serializableConstraint); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/5653/buggy-version/igamt-lite-service.src.main.java.gov.nist.healthcare.tools.hl7.v2.igamt.lite.service.impl.SerializationServiceImpl.java", "BodyUseAPI": ["gov.nist.healthcare.tools.hl7.v2.igamt.lite.service.impl.SerializableConstraint.getConstraint()", "java.util.List<gov.nist.healthcare.tools.hl7.v2.igamt.lite.service.impl.SerializableConstraint>.add(gov.nist.healthcare.tools.hl7.v2.igamt.lite.service.impl.SerializableConstraint)", "java.util.List<gov.nist.healthcare.tools.hl7.v2.igamt.lite.service.impl.SerializableConstraint>.add(gov.nist.healthcare.tools.hl7.v2.igamt.lite.service.impl.SerializableConstraint)", "gov.nist.healthcare.tools.hl7.v2.igamt.lite.service.impl.SerializableConstraint.getConstraint()"], "Fixed commit": "ac962a583a3b5a5ff9746bb409875819f7202130", "Url": "https://api.github.com/repos/haffonist/igamt", "Date": "2017-03-29T23:50:20Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.serialization.SerializableSection.findTable(java.util.List<gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.serialization.Table>,valueSetOrSingleCodeBinding.getTableId())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (table != null) { bindingIdentifierList.add(table.getBindingIdentifier()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/5653/buggy-version/igamt-lite-domain.src.main.java.gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.serialization.SerializableDatatype.java", "BodyUseAPI": ["gov.nist.healthcare.tools.hl7.v2.igamt.lite.domain.serialization.Table.getBindingIdentifier()", "java.util.List<java.lang.String>.add(table.getBindingIdentifier())"], "Fixed commit": "ac962a583a3b5a5ff9746bb409875819f7202130", "Url": "https://api.github.com/repos/haffonist/igamt", "Date": "2017-03-29T23:50:20Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((exercise.getHeartRateList().size()) > 0) { averageHr = sumHr / (exercise.getHeartRateList().size()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/7298/buggy-version/mobile.src.main.java.com.alejandro_castilla.cloudfitforwear.activities.fragments.ExerciseCompletedFragment.java", "BodyUseAPI": ["exercise.getHeartRateList().size()", "com.alejandro_castilla.cloudfitforwear.data.exercises.Exercise.getHeartRateList()"], "Fixed commit": "8dd20bb206e402dc006498fde9204ba6f6af8219", "Url": "https://api.github.com/repos/alejandrocq/cloudfit-for-wear", "Date": "2016-08-03T01:22:43Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (repository == null) { logger.warn(\"repository is null, returning false\", new java.lang.NullPointerException(\"repository is null\")); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/9199/buggy-version/src.com.gitblit.GitFilter.java", "BodyUseAPI": [], "Fixed commit": "344b5e5fa40bf848594f2cadbb7aeeca0dc6877b", "Url": "https://api.github.com/repos/pdinc-oss/gitblit", "Date": "2012-08-19T22:42:47Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (action == null) { logger.warn(\"action is null, returning false\", new java.lang.NullPointerException(\"action is null\")); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/9199/buggy-version/src.com.gitblit.GitFilter.java", "BodyUseAPI": [], "Fixed commit": "344b5e5fa40bf848594f2cadbb7aeeca0dc6877b", "Url": "https://api.github.com/repos/pdinc-oss/gitblit", "Date": "2012-08-19T22:42:47Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (input.getText().toString().equals(\"\")) { inputNum = 0; }else { inputNum = java.lang.Integer.parseInt(input.getText().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/2704/buggy-version/app.src.main.java.com.cs410_hci.holgater.cs410finalproject.ProductEditMenu.java", "BodyUseAPI": ["java.lang.Integer.parseInt(input.getText().toString())", "input.getText().toString()", "android.widget.EditText.getText()"], "Fixed commit": "3726978621ed5f13f9d97bf05b156bf751069f8a", "Url": "https://api.github.com/repos/holgater/CS410HCIFinalProject", "Date": "2016-08-05T17:49:09Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (input.getText().toString().equals(\"\")) { inputNum = 0; }else { inputNum = java.lang.Integer.parseInt(input.getText().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/2704/buggy-version/app.src.main.java.com.cs410_hci.holgater.cs410finalproject.ProductEditMenu.java", "BodyUseAPI": ["java.lang.Integer.parseInt(input.getText().toString())", "input.getText().toString()", "android.widget.EditText.getText()"], "Fixed commit": "3726978621ed5f13f9d97bf05b156bf751069f8a", "Url": "https://api.github.com/repos/holgater/CS410HCIFinalProject", "Date": "2016-08-05T17:49:09Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (input.getText().toString().equals(\"\")) { addNum = 1; }else { addNum = java.lang.Integer.parseInt(input.getText().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/2704/buggy-version/app.src.main.java.com.cs410_hci.holgater.cs410finalproject.RecipeItemSelect.java", "BodyUseAPI": ["java.lang.Integer.parseInt(input.getText().toString())", "android.widget.EditText.getText()", "input.getText().toString()"], "Fixed commit": "3726978621ed5f13f9d97bf05b156bf751069f8a", "Url": "https://api.github.com/repos/holgater/CS410HCIFinalProject", "Date": "2016-08-05T17:49:09Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (jazmin.server.file.FileClient.logger.isDebugEnabled()) { jazmin.server.file.FileClient.logger.debug(\"move file {} to {}\", tempFile, file); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/9166/buggy-version/JazminServer.src.jazmin.server.file.FileClient.java", "BodyUseAPI": ["jazmin.log.Logger.debug(java.lang.String,java.io.File,java.io.File)"], "Fixed commit": "94e8fb87bb5394f318253bdb2ce9fce09f3da9ed", "Url": "https://api.github.com/repos/guooscar/JazminServer", "Date": "2016-04-09T12:35:05Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.genericdao.Transaction.isActive()) { org.genericdao.Transaction.rollback(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/5761/buggy-version/src.com.cfs.controller.TransitionDayAction.java", "BodyUseAPI": [], "Fixed commit": "b13365cbd23b1d64b481e765ee934c94a08df336", "Url": "https://api.github.com/repos/yuanhsh/cfsweb", "Date": "2015-01-27T23:37:50Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sender == null) throw new com.Spryng.SpryngJavaSDK.SpryngException(\"The Sender ID is required\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/4695/buggy-version/src.main.java.com.Spryng.SpryngJavaSDK.Spryng.java", "BodyUseAPI": [], "Fixed commit": "c7ea6c2275b73963265cf034970bb92f32daf74e", "Url": "https://api.github.com/repos/Tripolis-Dialogue/SpryngApiHttpJava", "Date": "2017-09-26T13:50:19Z"},
{"Line": "=>1148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isLocalCloud) { return !(org.cloudifysource.dsl.utils.ServiceUtils.isPortFree(OpenspacesConstants.DEFAULT_LOCALCLOUD_LUS_PORT)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/7424/buggy-version/CLI.src.main.java.org.cloudifysource.shell.installer.LocalhostGridAgentBootstrapper.java", "BodyUseAPI": [], "Fixed commit": "35d987fb8f5bb8fe1cf66b3783a1cf3ac4d09c7e", "Url": "https://api.github.com/repos/CloudifySource/cloudify", "Date": "2013-07-18T09:32:29Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isValidInput) { finalAttributes.putAll(((java.util.Map<java.lang.String, java.lang.Object>) (update.get(1)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/8206/buggy-version/storm-data-contracts.src.main.java.com.forter.contracts.BaseContractsBoltExecutor.java", "BodyUseAPI": [], "Fixed commit": "981f58d4926b8b1a3e2aef21756737aff82fd85e", "Url": "https://api.github.com/repos/forter/storm-data-contracts", "Date": "2015-11-02T09:17:22Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState == null) { getSupportFragmentManager().beginTransaction().add(R.id.fragment, new com.example.gautham.popularmovies.MainActivityFragment()).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/6919/buggy-version/app.src.main.java.com.example.gautham.popularmovies.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "0dc61b6e70597af660f4cd8187afb00a7086987f", "Url": "https://api.github.com/repos/OverratedGman/PopularMovies", "Date": "2015-09-13T09:51:43Z"},
{"Line": "=>335", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(field.getType().name().equals(\"calculation\"))) { if (field != null) { java.lang.Object data = field.getCreateData(); if (data != null) { createData.setValues(field.getExternalId(), data); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/135/buggy-version/sdk.src.main.java.com.podio.sdk.domain.Item.java", "BodyUseAPI": ["com.podio.sdk.domain.field.Field.getCreateData()", "com.podio.sdk.domain.field.Field.getExternalId()", "com.podio.sdk.domain.Item.CreateData.setValues(field.getExternalId(),java.lang.Object)"], "Fixed commit": "017fc59bcbd97c850f1578dc9577bec74e506963", "Url": "https://api.github.com/repos/thesalah/podio-android", "Date": "2017-08-01T20:34:18Z"},
{"Line": "=>581", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isSummation) { return new org.linqs.psl.model.rule.arithmetic.expression.SummationAtom(p, args); }else { org.linqs.psl.model.term.Term[] termArgs = new org.linqs.psl.model.term.Term[args.length]; for (int i = 0; i < (termArgs.length); i++) { termArgs[i] = ((org.linqs.psl.model.term.Term) (args[i])); } return new org.linqs.psl.model.atom.QueryAtom(p, termArgs); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/4390/buggy-version/psl-parser.src.main.java.org.linqs.psl.parser.ModelLoader.java", "BodyUseAPI": [], "Fixed commit": "f8a8446fb71e82c3383bbed1ead0e6b533da6aec", "Url": "https://api.github.com/repos/eriq-augustine/psl", "Date": "2017-11-08T03:01:22Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (al.isEmpty()) stop();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/696/buggy-version/src.Server.java", "BodyUseAPI": [], "Fixed commit": "7619cd5d75ca9cb9507129209166b75c6e3a173f", "Url": "https://api.github.com/repos/Rusho-RU/Groupify", "Date": "2017-12-09T21:55:20Z"},
{"Line": "=>694", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(params.mediaRenderer.isTranscodeToMPEGPS())) { videoBitrateOptions.add(\"40M\"); }else if (params.mediaRenderer.isTranscodeToMPEGPS()) { videoBitrateOptions.add(\"9800k\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/401/buggy-version/src.main.java.net.pms.encoders.FFMpegVideo.java", "BodyUseAPI": ["params.mediaRenderer.isTranscodeToMPEGPS()"], "Fixed commit": "c17c662b03999b16f7c293b8ec0d858828010b8d", "Url": "https://api.github.com/repos/Sami32/UniversalMediaServer", "Date": "2017-12-01T18:58:26Z"},
{"Line": "=>690", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.pms.configuration.RendererConfiguration.getCustomFFmpegOptions()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!(customFFmpegOptions.contains(\"-maxrate\"))) && (bufSize > 0)) { videoBitrateOptions.add(\"-maxrate\"); if (((defaultMaxBitrates[0]) > 0) && (!(params.mediaRenderer.isTranscodeToMPEGPS()))) { videoBitrateOptions.add(((java.lang.String.valueOf(defaultMaxBitrates[0])) + \"k\")); }else if (!(params.mediaRenderer.isTranscodeToMPEGPS())) { videoBitrateOptions.add(\"40M\"); }else if (params.mediaRenderer.isTranscodeToMPEGPS()) { videoBitrateOptions.add(\"9800k\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/401/buggy-version/src.main.java.net.pms.encoders.FFMpegVideo.java", "BodyUseAPI": [], "Fixed commit": "c17c662b03999b16f7c293b8ec0d858828010b8d", "Url": "https://api.github.com/repos/Sami32/UniversalMediaServer", "Date": "2017-12-01T18:58:26Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((size) == 0) { return 100; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/5191/buggy-version/core.src.main.java.org.cache2k.core.CacheBaseInfo.java", "BodyUseAPI": [], "Fixed commit": "efa9bc8fd7c906b2d36274bcc5f06926c840516b", "Url": "https://api.github.com/repos/cache2k/cache2k", "Date": "2016-09-01T16:51:06Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.Statement.executeQuery(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(rs.next())) { java.lang.System.out.println(\"The book copy does not exist:(\"); }else { stmt = connection.createStatement(); query = (((\"SELECT * FROM borrow WHERE callnum='\" + callnum) + \"' AND copynum=\") + copynum) + \" AND return IS NULL\"; rs = stmt.executeQuery(query); if (rs.next()) { java.lang.System.out.println(\"The book copy has not been returned yet:(\"); }else { java.lang.String today = Librarian.format.format(new java.util.Date()); java.lang.String update = (((((((\"INSERT INTO borrow VALUES ('\" + userid) + \"','\") + callnum) + \"',\") + copynum) + \",to_date('\") + today) + \"','dd/mm/yyyy'),NULL)\"; stmt.executeUpdate(update); java.lang.System.out.println(\"Book borrowing performed successfully!!!\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/8420/buggy-version/Librarian.java", "BodyUseAPI": [], "Fixed commit": "cdeea63cf2904ae493e011c2a7967644e2ea4c87", "Url": "https://api.github.com/repos/grayy921013/3170project", "Date": "2016-04-03T16:04:51Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.webdriverextensions.DriverVersionHandler.getVersionFile(com.github.webdriverextensions.Driver)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(versionFile.exists())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/4865/buggy-version/src.main.java.com.github.webdriverextensions.DriverVersionHandler.java", "BodyUseAPI": [], "Fixed commit": "b26432df37e525b4cc48051c424ab8b5b68e4e15", "Url": "https://api.github.com/repos/lkwg82/webdriverextensions-maven-plugin", "Date": "2015-09-16T12:41:04Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getController()) == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/9/buggy-version/clustering.jgroups.src.main.java.org.jboss.as.clustering.jgroups.subsystem.ChannelInstanceResource.java", "BodyUseAPI": [], "Fixed commit": "12f18b081251a75375598699c3ac2a77b498c5b5", "Url": "https://api.github.com/repos/onagano-rh/jboss-as", "Date": "2013-04-29T15:53:39Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lemans.cassian.wrapp.manager.SessionManager.getInstance().isConnected()) { mViewHolder.userName.setText(com.google.firebase.auth.FirebaseAuth.getInstance().getCurrentUser().getDisplayName()); if ((lemans.cassian.wrapp.manager.SessionManager.getInstance().getPhotoUrl()) != null) { com.squareup.picasso.Picasso.with(getContext()).load(lemans.cassian.wrapp.manager.SessionManager.getInstance().getPhotoUrl().toString()).placeholder(android.support.v4.content.ContextCompat.getDrawable(getContext(), R.drawable.ic_person_black_24dp)).fit().centerCrop().into(mViewHolder.profilePicture); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/3976/buggy-version/app.src.main.java.lemans.cassian.wrapp.fragment.NavigationMenuFragment.java", "BodyUseAPI": [], "Fixed commit": "8a8d7693f406fec44bbec2833396709f60999c4d", "Url": "https://api.github.com/repos/cassian237/wrapp", "Date": "2016-09-03T22:16:22Z"},
{"Line": "=>321", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.System.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(java.lang.Boolean.valueOf(ignoreIndexChecksum))) { final long checksumNow = input.getChecksum(); final long checksumThen = input.readLong(); if (checksumNow != checksumThen) { throw new org.apache.lucene.index.CorruptIndexException(((\"checksum mismatch in segments file (resource: \" + input) + \")\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/1247/buggy-version/lucene.core.src.java.org.apache.lucene.index.SegmentInfos.java", "BodyUseAPI": [], "Fixed commit": "cfb19f56854a0a70c64943b3aff06ed947926a42", "Url": "https://api.github.com/repos/polyspot/lucene-solr", "Date": "2013-02-25T16:23:24Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.github.hkust1516csefyp43.easymed.view.fragment.MedicationVariantListFragment.getContext()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (context != null) { dragScrollBar = new com.turingtechnologies.materialscrollbar.DragScrollBar(context, recyclerView, true); dragScrollBar.addIndicator(new com.turingtechnologies.materialscrollbar.AlphabetIndicator(getContext()), true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/3815/buggy-version/app.src.main.java.io.github.hkust1516csefyp43.easymed.view.fragment.MedicationVariantListFragment.java", "BodyUseAPI": [], "Fixed commit": "47557b114f9fac657dd10c16621883e37bf40c9b", "Url": "https://api.github.com/repos/hkust1516csefyp43/ehr-android", "Date": "2016-04-22T11:05:22Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (config.has(radlab.rain.workload.olio.OlioConfiguration.CFG_NUM_PRELOADED_TAGS_KEY)) { this._numPreloadTags = config.getInt(radlab.rain.workload.olio.OlioConfiguration.CFG_NUM_PRELOADED_TAGS_KEY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/660/buggy-version/src.radlab.rain.workload.olio.OlioConfiguration.java", "BodyUseAPI": ["org.json.JSONObject.getInt(java.lang.String)"], "Fixed commit": "44c5e28d2d11428f0e3241ded1c8d8dec204948f", "Url": "https://api.github.com/repos/sguazt/rain-workload-toolkit", "Date": "2013-10-14T10:16:44Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (config.has(radlab.rain.workload.olio.OlioConfiguration.CFG_NUM_PRELOADED_PERSONS_KEY)) { this._numPreloadPersons = config.getInt(radlab.rain.workload.olio.OlioConfiguration.CFG_NUM_PRELOADED_PERSONS_KEY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/660/buggy-version/src.radlab.rain.workload.olio.OlioConfiguration.java", "BodyUseAPI": ["org.json.JSONObject.getInt(java.lang.String)"], "Fixed commit": "44c5e28d2d11428f0e3241ded1c8d8dec204948f", "Url": "https://api.github.com/repos/sguazt/rain-workload-toolkit", "Date": "2013-10-14T10:16:44Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (config.has(radlab.rain.workload.olio.OlioConfiguration.CFG_NUM_PRELOADED_EVENTS_KEY)) { this._numPreloadEvents = config.getInt(radlab.rain.workload.olio.OlioConfiguration.CFG_NUM_PRELOADED_EVENTS_KEY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/660/buggy-version/src.radlab.rain.workload.olio.OlioConfiguration.java", "BodyUseAPI": ["org.json.JSONObject.getInt(java.lang.String)"], "Fixed commit": "44c5e28d2d11428f0e3241ded1c8d8dec204948f", "Url": "https://api.github.com/repos/sguazt/rain-workload-toolkit", "Date": "2013-10-14T10:16:44Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (packetSize < ((PacketHeader.SIZE) + 4)) { throw new saltchannel.BadPeer((\"packet too small, was \" + packetSize)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/1651/buggy-version/src.saltchannel.v2.packets.AppPacket.java", "BodyUseAPI": [], "Fixed commit": "3f9d957d903fc5d2ce844519b39f916523773c52", "Url": "https://api.github.com/repos/assaabloy-ppi/salt-channel", "Date": "2017-07-06T11:19:25Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((newElement.getParentNode()) == null) { rootElement.appendChild(newElement); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/8037/buggy-version/java.com.delcyon.capo.util.XMLSerializer.java", "BodyUseAPI": ["org.w3c.dom.Element.appendChild(org.w3c.dom.Element)"], "Fixed commit": "fc83f87c1210a56544cfb73edcc57eee821e689c", "Url": "https://api.github.com/repos/jahnje/delcyon-capo", "Date": "2012-10-26T21:16:32Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getFragmentManager().findFragmentById(R.id.placeholder)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (savedFragment == null) { sanakhateeb.smellslikebakin.ListFragment fragment = new sanakhateeb.smellslikebakin.ListFragment(); android.app.FragmentManager fragmentManager = getFragmentManager(); android.app.FragmentTransaction fragmentTransaction = fragmentManager.beginTransaction(); fragmentTransaction.add(R.id.placeholder, fragment); fragmentTransaction.commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/2487/buggy-version/app.src.main.java.sanakhateeb.smellslikebakin.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "1d80b47a3d4ba0692faf21da95c81b787e14e108", "Url": "https://api.github.com/repos/SanaKhateeb/SmellsLikeBakin", "Date": "2017-08-24T05:52:47Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((wsHandler) != null) { wsHandler.handle(match.ws); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/4122/buggy-version/vertx-core.src.main.java.org.vertx.java.core.sockjs.impl.DefaultSockJSServer.java", "BodyUseAPI": [], "Fixed commit": "70d44d5774ca58bf0830e6455dea7c797178e2c6", "Url": "https://api.github.com/repos/nonnenmacher/vert.x", "Date": "2012-10-09T17:45:02Z"},
{"Line": "=>392", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(next.equals(d.getId()))) { forward.add(next); forward.addAll(getForwardDeliveries(deliveryMap.get(next))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/1657/buggy-version/de.bund.bfr.knime.openkrise.src.de.bund.bfr.knime.openkrise.Tracing.java", "BodyUseAPI": ["java.util.Set<java.lang.String>.add(java.lang.String)", "java.util.Set<java.lang.String>.addAll(java.util.Set<java.lang.String>)", "de.bund.bfr.knime.openkrise.Tracing.getForwardDeliveries(deliveryMap.get(next))", "java.util.Map<java.lang.String, de.bund.bfr.knime.openkrise.common.Delivery>.get(java.lang.String)"], "Fixed commit": "15ab6c8e2d2360c6be4a74c4abdebcdc4b15e21d", "Url": "https://api.github.com/repos/SiLeBAT/BfROpenLab", "Date": "2015-09-18T11:55:15Z"},
{"Line": "=>371", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(prev.equals(d.getId()))) { backward.add(prev); backward.addAll(getBackwardDeliveries(deliveryMap.get(prev))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/1657/buggy-version/de.bund.bfr.knime.openkrise.src.de.bund.bfr.knime.openkrise.Tracing.java", "BodyUseAPI": ["de.bund.bfr.knime.openkrise.Tracing.getBackwardDeliveries(deliveryMap.get(prev))", "java.util.Map<java.lang.String, de.bund.bfr.knime.openkrise.common.Delivery>.get(java.lang.String)", "java.util.Set<java.lang.String>.add(java.lang.String)", "java.util.Set<java.lang.String>.addAll(java.util.Set<java.lang.String>)"], "Fixed commit": "15ab6c8e2d2360c6be4a74c4abdebcdc4b15e21d", "Url": "https://api.github.com/repos/SiLeBAT/BfROpenLab", "Date": "2015-09-18T11:55:15Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((l1.getDatatype()) != null) s1 = l1.getDatatype().toString();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/82/buggy-version/src.main.java.ch.tkuhn.hashuri.rdf.StatementComparator.java", "BodyUseAPI": ["org.openrdf.model.Literal.getDatatype()", "l1.getDatatype().toString()"], "Fixed commit": "35f12539219988efb0a9747c52eb2b0aa408735f", "Url": "https://api.github.com/repos/tkuhn/hashuri-java", "Date": "2013-09-16T08:57:55Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((l2.getDatatype()) != null) s2 = l2.getDatatype().toString();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/82/buggy-version/src.main.java.ch.tkuhn.hashuri.rdf.StatementComparator.java", "BodyUseAPI": ["org.openrdf.model.Literal.getDatatype()", "l2.getDatatype().toString()"], "Fixed commit": "35f12539219988efb0a9747c52eb2b0aa408735f", "Url": "https://api.github.com/repos/tkuhn/hashuri-java", "Date": "2013-09-16T08:57:55Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.e) != null) { android.widget.Toast.makeText(getActivity(), e.getError(), Toast.LENGTH_SHORT).show(); if ((e.getError_code()) == (org.qii.weiciyuan.support.error.ErrorCode.DELETED)) { setTextViewDeleted(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/1830/buggy-version/src.org.qii.weiciyuan.ui.browser.BrowserWeiboMsgFragment.java", "BodyUseAPI": [], "Fixed commit": "7e93b6659c09e7d7cf5fb2fa185ceb3499d159a6", "Url": "https://api.github.com/repos/qii/weiciyuan", "Date": "2012-09-05T01:46:33Z"},
{"Line": "=>694", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (curProb.isMultiChoice()) ((edu.umass.ckc.wo.tutor.pedModel.ProblemResponse) (r)).shuffleAnswers(smgr.getStudentState());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/6061/buggy-version/woServer.src.edu.umass.ckc.wo.tutor.pedModel.BasePedagogicalModel.java", "BodyUseAPI": [], "Fixed commit": "2bf346a2b139af15fb3c29b1774b3feb63832ded", "Url": "https://api.github.com/repos/marshall62/mathspring", "Date": "2014-12-16T19:52:38Z"},
{"Line": "=>726", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.umass.ckc.wo.tutor.pedModel.ProblemResponse.getProblem()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (p.isMultiChoice()) r.shuffleAnswers(smgr.getStudentState());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/6061/buggy-version/woServer.src.edu.umass.ckc.wo.tutor.pedModel.BasePedagogicalModel.java", "BodyUseAPI": [], "Fixed commit": "2bf346a2b139af15fb3c29b1774b3feb63832ded", "Url": "https://api.github.com/repos/marshall62/mathspring", "Date": "2014-12-16T19:52:38Z"},
{"Line": "=>433", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.umass.ckc.wo.cache.ProblemMgr.getProblem(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (p.isMultiChoice()) r.shuffleAnswers(smgr.getStudentState());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/6061/buggy-version/woServer.src.edu.umass.ckc.wo.tutor.pedModel.BasePedagogicalModel.java", "BodyUseAPI": [], "Fixed commit": "2bf346a2b139af15fb3c29b1774b3feb63832ded", "Url": "https://api.github.com/repos/marshall62/mathspring", "Date": "2014-12-16T19:52:38Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) <= (Build.VERSION_CODES.KITKAT)) { window.setType(WindowManager.LayoutParams.TYPE_APPLICATION_PANEL); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/2320/buggy-version/weex_analyzer.src.main.java.com.taobao.weex.analyzer.view.AbstractAlertView.java", "BodyUseAPI": [], "Fixed commit": "0f155e32d533dce24bbbb6f045660db2badb56e5", "Url": "https://api.github.com/repos/weexteam/weex-analyzer-android", "Date": "2016-10-31T11:10:37Z"},
{"Line": "=>762", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((message.getMethodName().equals(\"construct\")) || (((message.getProperty()) != null) && (message.getProperty().equals(\"priority\")))) { if (((((message.getProperty()) != null) && (message.getProperty().equals(\"priority\"))) && ((message.getPropertyParameters()) != null)) && (((java.lang.String) (message.getPropertyParameters()[0])).equals(\"highPriority\"))) { mailbox.insertElementAt(message, 0); }else { if ((mailbox.size()) != 0) { int i = 0; while ((i < (mailbox.size())) && (((((salsa.language.Message) (mailbox.get(i))).getProperty()) != null) && (((salsa.language.Message) (mailbox.get(i))).getProperty().equals(\"priority\")))) i++; mailbox.insertElementAt(message, i); }else mailbox.insertElementAt(message, 0); } }else { mailbox.addElement(message); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/6094/buggy-version/salsa.language.UniversalActor.java", "BodyUseAPI": ["java.util.Vector.insertElementAt(salsa.language.Message,int)", "salsa.language.Message.getPropertyParameters()", "java.util.Vector.insertElementAt(salsa.language.Message,int)", "java.util.Vector.insertElementAt(salsa.language.Message,int)", "salsa.language.Message.getPropertyParameters()", "((java.lang.String) (message.getPropertyParameters()[0])).equals(java.lang.String)", "salsa.language.Message.getProperty()", "salsa.language.Message.getProperty()", "message.getProperty().equals(java.lang.String)", "java.util.Vector.addElement(salsa.language.Message)"], "Fixed commit": "eb9302588eaf3f5738c04f8639330a8c65692fc4", "Url": "https://api.github.com/repos/kuangp/transactor", "Date": "2014-04-07T23:33:16Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((main.java.com.texasgamer.bedtime.idleChecker.lastActive.get(p)) == null) { main.java.com.texasgamer.bedtime.idleChecker.lastActive.put(p, ((double) (java.lang.System.currentTimeMillis()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/2714/buggy-version/src.main.java.com.texasgamer.bedtime.idleChecker.java", "BodyUseAPI": ["java.util.HashMap<org.bukkit.entity.Player, java.lang.Double>.put(org.bukkit.entity.Player,long)"], "Fixed commit": "5a2c8fe93fd384cde128a65da0d4918445f21484", "Url": "https://api.github.com/repos/ThomasGaubert/bedtime", "Date": "2011-07-22T03:32:49Z"},
{"Line": "=>378", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["openie.crf.UnitextCRF.likelihood(openie.text.Sequence)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((!(java.lang.Double.isInfinite(likeli))) && (!(java.lang.Double.isNaN(likeli)))) currentLoglikeli -= java.lang.Math.log(likeli);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/1758/buggy-version/src.openie.crf.UnitextCRF.java", "BodyUseAPI": ["java.lang.Math.log(double)"], "Fixed commit": "8eb18b9c5f038a08ac22f0c7ace0e97376d1ff08", "Url": "https://api.github.com/repos/minwoo/bitextOpenIE", "Date": "2011-03-23T07:23:48Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang.StringUtils.isNotBlank(centrum_id)) centrumFilter = (\" and centrumId=\" + centrum_id) + \" \";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/408/buggy-version/vadginger-alpha.app.controllers.Locationss.java", "BodyUseAPI": [], "Fixed commit": "6092efd9c21c5e7059d394895efbc4223cdd45e4", "Url": "https://api.github.com/repos/jaav/ginger", "Date": "2014-10-27T08:43:49Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["retrofit2.Call<java.lang.Void>.execute()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(response.isSuccess())) { throw new java.lang.RuntimeException((\"Failed to send token to server. \\n\" + (response.errorBody().string()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/9148/buggy-version/app.src.main.java.com.twilio.android.quickstart.RegistrationIntentService.java", "BodyUseAPI": ["response.errorBody().string()", "retrofit2.Response<java.lang.Void>.errorBody()"], "Fixed commit": "01d2842092d1122ef2fa3a3f814c8949ba2e3bba", "Url": "https://api.github.com/repos/viktormuller/notifications-quickstart-android", "Date": "2016-10-20T14:57:55Z"},
{"Line": "=>1374", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (null != currency) { numberFormat.setCurrency(currency); numberFormat.setMaximumFractionDigits(currency.getDefaultFractionDigits()); }else { java.text.DecimalFormatSymbols dfs = new java.text.DecimalFormatSymbols(); dfs.setCurrencySymbol(currencyCode); ((java.text.DecimalFormat) (numberFormat)).setDecimalFormatSymbols(dfs); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/230/buggy-version/src.main.java.org.rythmengine.utils.S.java", "BodyUseAPI": ["java.text.NumberFormat.setCurrency(java.util.Currency)", "java.text.NumberFormat.setMaximumFractionDigits(int)", "java.util.Currency.getDefaultFractionDigits()"], "Fixed commit": "1e2aee69b6489a09de3ac1dc9912fa9568855de8", "Url": "https://api.github.com/repos/DavidePastore/Rythm", "Date": "2014-04-28T21:29:30Z"},
{"Line": "=>1383", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (null != currency) s = s.replace(currency.getCurrencyCode(), currency.getSymbol(locale));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/230/buggy-version/src.main.java.org.rythmengine.utils.S.java", "BodyUseAPI": ["java.util.Currency.getCurrencyCode()", "java.util.Currency.getSymbol(java.util.Locale)", "java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "1e2aee69b6489a09de3ac1dc9912fa9568855de8", "Url": "https://api.github.com/repos/DavidePastore/Rythm", "Date": "2014-04-28T21:29:30Z"},
{"Line": "=>1340", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((null == (locale.getCountry())) || ((locale.getCountry().length()) != 2)) { java.lang.String lan = locale.getLanguage(); if (org.rythmengine.utils.S.eq(lan, \"en\")) { if (null != currencyCode) { if (org.rythmengine.utils.S.eq(\"AUD\", currencyCode)) { locale = new java.util.Locale(lan, \"AU\"); }else if (org.rythmengine.utils.S.eq(\"USD\", currencyCode)) { locale = java.util.Locale.US; }else if (org.rythmengine.utils.S.eq(\"GBP\", currencyCode)) { locale = java.util.Locale.UK; } } }else if (org.rythmengine.utils.S.eq(lan, \"zh\")) { locale = java.util.Locale.SIMPLIFIED_CHINESE; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/230/buggy-version/src.main.java.org.rythmengine.utils.S.java", "BodyUseAPI": ["java.util.Locale.getLanguage()"], "Fixed commit": "1e2aee69b6489a09de3ac1dc9912fa9568855de8", "Url": "https://api.github.com/repos/DavidePastore/Rythm", "Date": "2014-04-28T21:29:30Z"},
{"Line": "=>1359", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == currencyCode) { java.lang.String country = locale.getCountry(); if ((null != country) && ((country.length()) == 2)) { currency = java.util.Currency.getInstance(locale); } if (null == currency) currencyCode = \"$\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/230/buggy-version/src.main.java.org.rythmengine.utils.S.java", "BodyUseAPI": [], "Fixed commit": "1e2aee69b6489a09de3ac1dc9912fa9568855de8", "Url": "https://api.github.com/repos/DavidePastore/Rythm", "Date": "2014-04-28T21:29:30Z"},
{"Line": "=>1367", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (null == currency) { if ((currencyCode.length()) != 3) { }else { currency = java.util.Currency.getInstance(currencyCode); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/230/buggy-version/src.main.java.org.rythmengine.utils.S.java", "BodyUseAPI": [], "Fixed commit": "1e2aee69b6489a09de3ac1dc9912fa9568855de8", "Url": "https://api.github.com/repos/DavidePastore/Rythm", "Date": "2014-04-28T21:29:30Z"},
{"Line": "=>347", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ex instanceof org.jboss.resteasy.spi.UnauthorizedException) { throw ((org.jboss.resteasy.spi.UnauthorizedException) (ex)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/6840/buggy-version/src.main.java.org.jboss.pressgang.ccms.zanata.ZanataInterface.java", "BodyUseAPI": [], "Fixed commit": "ac86df7f2da028c332e0bd8e89a7ea9d781b76dd", "Url": "https://api.github.com/repos/pressgang-ccms/PressGangCCMSZanataInterface", "Date": "2014-03-24T00:15:57Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((sharedPref.getString(\"city\", null)) != null) && ((sharedPref.getString(\"city\", null)) != (CityTooked))) { removeCity(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/89/buggy-version/app.src.main.java.com.example.d7om7.wareed.ProfileActivity.java", "BodyUseAPI": [], "Fixed commit": "cb28cca1addd91f3283a75bcdd905109f29443b0", "Url": "https://api.github.com/repos/d7om7608/Wareed", "Date": "2017-08-18T01:37:58Z"},
{"Line": "=>1845", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((redirectedUrl != null) && (\"http://subsonic.org/pages/\".equals(redirectedUrl))) { throw new java.lang.Exception(\"Invalid url, redirects to http://subsonic.org/pages/\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/4839/buggy-version/src.github.daneren2005.dsub.service.RESTMusicService.java", "BodyUseAPI": [], "Fixed commit": "d3fe79923456e53a7c68360364c730b270759def", "Url": "https://api.github.com/repos/daneren2005/Subsonic", "Date": "2015-03-13T01:09:12Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Constants.DEBUG) { java.lang.System.out.println((\"Search time: \" + (((java.lang.System.currentTimeMillis()) - time) / 1000))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/4448/buggy-version/src.sse.Main.java", "BodyUseAPI": [], "Fixed commit": "422638ccabfbc135bd1240d619fb524f60c82d4a", "Url": "https://api.github.com/repos/jochenrill/sse", "Date": "2012-04-02T11:37:45Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.fenixedu.ulisboa.specifications.domain.student.EnrolmentPredicateInitializer.2.getExecutionSemester()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((enrolment.isAnual()) && (!(improvementSemester.isFirstOfYear()))) { throw new org.fenixedu.academic.domain.exceptions.DomainException(\"error.EnrolmentEvaluation.improvement.semester.must.be.first.of.year.for.anual.courses\", name); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/5785/buggy-version/src.main.java.org.fenixedu.ulisboa.specifications.domain.student.EnrolmentPredicateInitializer.java", "BodyUseAPI": [], "Fixed commit": "025abef91c4cd93fdf56341d055387fb81c0b554", "Url": "https://api.github.com/repos/legidio/fenixedu-ulisboa-specifications", "Date": "2017-02-02T18:24:28Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((socket) == null) { msg(\"Error opening network socket. Suspect network unavailable.\"); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/5386/buggy-version/src.com.gtosoft.libvoyager.net.NetDTCInfo.java", "BodyUseAPI": [], "Fixed commit": "feb3f6c5e68ebda58e958de3b3e6f6818a0af786", "Url": "https://api.github.com/repos/gtosoft/libvoyager", "Date": "2011-09-29T02:44:02Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (repository != null) { view.setCurrentBranch(repository.getCurrentBranch()); for (java.lang.String branch : repository.getBranches()) { if ((!(branch.equals(repository.getCurrentBranch()))) && (!(branch.equals(\"origin\")))) { view.addBranch(branch); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/7499/buggy-version/kie-wb-common-screens.kie-wb-common-project-explorer.kie-wb-common-project-explorer-client.src.main.java.org.kie.workbench.common.screens.explorer.client.widgets.BranchSelector.java", "BodyUseAPI": ["java.lang.String.equals(repository.getCurrentBranch())", "org.kie.workbench.common.screens.explorer.client.widgets.BranchSelectorView.setCurrentBranch(repository.getCurrentBranch())", "org.guvnor.structure.repositories.Repository.getCurrentBranch()", "org.guvnor.structure.repositories.Repository.getBranches()", "org.guvnor.structure.repositories.Repository.getCurrentBranch()"], "Fixed commit": "ab049ebd6a1fa4823fb6eeed98a4eea934e30c0c", "Url": "https://api.github.com/repos/droolsjbpm/kie-wb-common", "Date": "2014-09-19T16:06:54Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (text.startsWith(\"#\")) text = net.sekien.elesmyr.system.FontRenderer.resolveI18n(text.substring(1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/5443/buggy-version/Elesmyr.src.net.sekien.elesmyr.system.FontRenderer.java", "BodyUseAPI": ["java.lang.String.substring(int)", "net.sekien.elesmyr.system.FontRenderer.resolveI18n(java.lang.String)"], "Fixed commit": "56b55d3c1881a7ac682621da4d2130ca9b861cac", "Url": "https://api.github.com/repos/DeadlyFugu/Elesmyr", "Date": "2013-10-19T12:05:31Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!success) { try { this.result = fallback.apply(result, failure); } catch (java.lang.Throwable fallbackFailure) { this.failure = fallbackFailure; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/8191/buggy-version/src.main.java.net.jodah.failsafe.FailsafeFuture.java", "BodyUseAPI": [], "Fixed commit": "cfaae8416b156c8dac2a4a913bca0ced85561238", "Url": "https://api.github.com/repos/jhalterman/failsafe", "Date": "2016-09-08T16:37:45Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tMain.getGame().getLevel().getStoryLine()) == \"\") { tBackground = new application.controllers.Image((\"src/main/java/application/images/backgrounds/\" + (tMain.getGame().getLevel().getBackground()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/6154/buggy-version/src.main.java.application.controllers.StoryLine.java", "BodyUseAPI": ["application.Main.getGame()", "tMain.getGame().getLevel().getBackground()", "tMain.getGame().getLevel()"], "Fixed commit": "86131d19c9610ed63a68827f55937abd5c4f5750", "Url": "https://api.github.com/repos/nubcaker/SEM", "Date": "2015-10-27T10:50:08Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.redhat.ceylon.compiler.typechecker.tree.TreeUtil.hasAnnotation(decl.getAnnotationList(), \"static\", null)) { flags |= com.redhat.ceylon.langtools.tools.javac.code.Flags.STATIC; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/4674/buggy-version/compiler-java.src.com.redhat.ceylon.compiler.java.codegen.CeylonTransformer.java", "BodyUseAPI": [], "Fixed commit": "2c03321612d6a28ad40e18b5a097bba1f2c0521d", "Url": "https://api.github.com/repos/eclipse/ceylon", "Date": "2016-11-17T22:28:06Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<com.skynet.basketassistant.Modelo.Lanzamiento>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((lanz.getEfectivo()) == 1) { cont = cont + (lanz.getValor()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/4418/buggy-version/Basketassistant.src.main.java.com.skynet.basketassistant.Fragments.Frag_exp_jug_part.java", "BodyUseAPI": ["com.skynet.basketassistant.Modelo.Lanzamiento.getValor()"], "Fixed commit": "257aff5617707d6008defd62443ea366463bc546", "Url": "https://api.github.com/repos/JamalMarques/BsktAssistant", "Date": "2015-05-26T19:22:27Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (xrefIdentifiers.contains(identifier)) { throw new org.molgenis.omx.converters.ValueConverterException(((\"Duplicate identifier '\" + identifier) + \"'\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/7337/buggy-version/molgenis-omx-core.src.main.java.org.molgenis.omx.converters.EntityToMrefValueConverter.java", "BodyUseAPI": [], "Fixed commit": "1b8528e97564c36a8b4bf75f35f1a130c7a7b72d", "Url": "https://api.github.com/repos/molgenis/molgenis", "Date": "2014-03-12T08:24:44Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((taggedNodes.size()) > 0) { if (org.apache.helix.controller.rebalancer.AutoRebalancer.LOG.isInfoEnabled()) { org.apache.helix.controller.rebalancer.AutoRebalancer.LOG.info((((\"found the following instances with tag \" + (currentIdealState.getResourceName())) + \" \") + taggedLiveNodes)); } allNodes = new java.util.ArrayList<java.lang.String>(taggedNodes); liveNodes = new java.util.ArrayList<java.lang.String>(taggedLiveNodes); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/6354/buggy-version/helix-core.src.main.java.org.apache.helix.controller.rebalancer.AutoRebalancer.java", "BodyUseAPI": [], "Fixed commit": "610b28be9a16cc10dcd4f5daf8a1ef8127163fa5", "Url": "https://api.github.com/repos/jfim/helix", "Date": "2013-10-22T21:17:03Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((currentIdealState.getInstanceGroupTag()) != null) { for (java.lang.String instanceName : allNodes) { if (clusterData.getInstanceConfigMap().get(instanceName).containsTag(currentIdealState.getInstanceGroupTag())) { taggedNodes.add(instanceName); if (liveInstance.containsKey(instanceName)) { taggedLiveNodes.add(instanceName); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/6354/buggy-version/helix-core.src.main.java.org.apache.helix.controller.rebalancer.AutoRebalancer.java", "BodyUseAPI": ["clusterData.getInstanceConfigMap().get(instanceName).containsTag(currentIdealState.getInstanceGroupTag())", "org.apache.helix.model.IdealState.getInstanceGroupTag()"], "Fixed commit": "610b28be9a16cc10dcd4f5daf8a1ef8127163fa5", "Url": "https://api.github.com/repos/jfim/helix", "Date": "2013-10-22T21:17:03Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.entity.EntityDamageByEntityEvent.getDamager()", "org.bukkit.event.entity.PlayerDeathEvent.getEntity()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (damager == victim) com.minegusta.mgracesredone.util.ChatUtil.sendString(damager, \"No PerkPoints for you :(\"); else process(uuid, victimUUID, mgp, damager);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/4416/buggy-version/src.main.java.com.minegusta.mgracesredone.listeners.perkpoints.PerkPointListener.java", "BodyUseAPI": ["com.minegusta.mgracesredone.listeners.perkpoints.PerkPointListener.process(java.lang.String,java.lang.String,com.minegusta.mgracesredone.playerdata.MGPlayer,org.bukkit.entity.Player)", "com.minegusta.mgracesredone.util.ChatUtil.sendString(org.bukkit.entity.Player,java.lang.String)"], "Fixed commit": "9a365aa4dfe9d2497059b64153340ce41f0aa8f3", "Url": "https://api.github.com/repos/LFGSaito/MGRacesRedone", "Date": "2015-06-25T23:35:12Z"},
{"Line": "=>1043", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.crtb.tunnelmonitor.utils.AlertUtils.getLatestHandling(ai.getAlertId())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (ah != null) { ai.setChuliFangshi(((ah.getHandling()) < (com.crtb.tunnelmonitor.utils.AlertUtils.ALERT_HANDLING.length) ? com.crtb.tunnelmonitor.utils.AlertUtils.ALERT_HANDLING[ah.getHandling()] : \"\u81ea\u7531\u5904\u7406\")); }else { ai.setChuliFangshi((((ai.getAlertStatus()) == (com.crtb.tunnelmonitor.utils.AlertUtils.ALERT_STATUS_OPEN)) && ((ai.getCorrection()) == 0) ? \"\u672a\u4f5c\u4efb\u4f55\u5904\u7406\" : \"\u81ea\u7531\u5904\u7406\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/3227/buggy-version/CRTBTunnelMonitor.src.com.crtb.tunnelmonitor.utils.AlertUtils.java", "BodyUseAPI": ["com.crtb.tunnelmonitor.entity.AlertInfo.setChuliFangshi(((ah.getHandling()) < (com.crtb.tunnelmonitor.utils.AlertUtils.ALERT_HANDLING.length) ? com.crtb.tunnelmonitor.utils.AlertUtils.ALERT_HANDLING[ah.getHandling()] : \"\u81ea\u7531\u5904\u7406\"))", "com.crtb.tunnelmonitor.entity.AlertHandlingList.getHandling()", "com.crtb.tunnelmonitor.entity.AlertHandlingList.getHandling()"], "Fixed commit": "fe57de4f3bcdc50453c6bb59d5987b054e3febe1", "Url": "https://api.github.com/repos/2014-2/001", "Date": "2014-06-24T13:59:51Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((msg5.getImo()) > 0) { this.imoNo = ((int) (msg5.getImo())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/2192/buggy-version/core.src.main.java.dk.frv.ais.data.AisClassAStatic.java", "BodyUseAPI": ["dk.frv.ais.message.AisMessage5.getImo()"], "Fixed commit": "a12b8df22f0916f5c7853e3f0a2e3db532bc5453", "Url": "https://api.github.com/repos/DaMSA/AisLib", "Date": "2012-10-30T12:26:10Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((input.length()) > 140) { input = input.replaceAll(\"some\", \"per\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/8399/buggy-version/src.main.java.co.uk.jiveelection.campaign.utils.TextHelper.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "317e0299399413882b2c8df4a67dc81b3632f8c8", "Url": "https://api.github.com/repos/mezpahlan/jivecampaign", "Date": "2015-04-14T17:16:32Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.common.base.Splitter.fixedLength(16).split(entry.getValue()).iterator()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (split.hasNext()) { name = split.next(); }else { counter++; name = java.lang.String.join(\"\", java.util.Collections.nCopies(counter, \"\u00a7r\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/6922/buggy-version/src.main.java.net.redstoneore.legacyfactions.scoreboards.BufferedObjective.java", "BodyUseAPI": ["java.util.Iterator<java.lang.String>.next()"], "Fixed commit": "10721e4b7389c0666f9f2e3556dbaf6350bd05c1", "Url": "https://api.github.com/repos/redstone/LegacyFactions", "Date": "2017-07-13T07:31:02Z"},
{"Line": "=>346", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((versionData.isNotSet) != (this.isNotSet)) { return this.isNotSet; }else if ((versionData.majorNumber) > (this.majorNumber)) { return true; }else if ((versionData.majorNumber) == (this.majorNumber)) { if ((versionData.minorNumber) > (this.minorNumber)) { return true; }else if ((versionData.minorNumber) == (this.minorNumber)) { if ((versionData.pointNumber) > (this.pointNumber)) { return true; }else if ((versionData.pointNumber) == (this.pointNumber)) { return (versionData.subPointNumber) >= (this.subPointNumber); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/7747/buggy-version/modules.application.src.main.java.com.sldeditor.common.vendoroption.VersionData.java", "BodyUseAPI": [], "Fixed commit": "35d0f8aca26367b7a63043cce2f245996eca2298", "Url": "https://api.github.com/repos/robward-scisys/sldeditor", "Date": "2016-12-07T13:53:48Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.sldeditor.common.vendoroption.info.VendorOptionInfo.getVersionData()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((vendorOptionVersion.getClassType()) == (com.sldeditor.common.vendoroption.NoVendorOption.class)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/7747/buggy-version/modules.application.src.main.java.com.sldeditor.common.vendoroption.info.VendorOptionInfoModel.java", "BodyUseAPI": [], "Fixed commit": "35d0f8aca26367b7a63043cce2f245996eca2298", "Url": "https://api.github.com/repos/robward-scisys/sldeditor", "Date": "2016-12-07T13:53:48Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.sldeditor.common.vendoroption.info.VendorOptionInfo.getVersionData()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((vendorOptionVersion.getClassType()) != (selectedVersion.getVendorOptionType())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/7747/buggy-version/modules.application.src.main.java.com.sldeditor.common.vendoroption.info.VendorOptionInfoModel.java", "BodyUseAPI": [], "Fixed commit": "35d0f8aca26367b7a63043cce2f245996eca2298", "Url": "https://api.github.com/repos/robward-scisys/sldeditor", "Date": "2016-12-07T13:53:48Z"},
{"Line": "=>459", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((vif.getDeviceName()) != null) && (!(vif.getDeviceName().isEmpty()))) vifJson.put(\"device\", vif.getDeviceName());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/2416/buggy-version/AggregateWS.src.net.geni.aggregate.services.core.RspecHandler_GENIv3.java", "BodyUseAPI": ["org.json.simple.JSONObject.put(java.lang.String,vif.getDeviceName())", "net.geni.aggregate.services.core.AggregateNetworkInterface.getDeviceName()"], "Fixed commit": "8be25096a064e8de1b114b6d2a2fad12da6bab6a", "Url": "https://api.github.com/repos/xi-yang/GENI-DCN-AM", "Date": "2016-02-11T20:21:56Z"},
{"Line": "=>457", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((vif.getUrn()) != null) && (!(vif.getUrn().isEmpty()))) vifJson.put(\"urn\", vif.getUrn());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/2416/buggy-version/AggregateWS.src.net.geni.aggregate.services.core.RspecHandler_GENIv3.java", "BodyUseAPI": ["net.geni.aggregate.services.core.AggregateNetworkInterface.getUrn()", "org.json.simple.JSONObject.put(java.lang.String,vif.getUrn())"], "Fixed commit": "8be25096a064e8de1b114b6d2a2fad12da6bab6a", "Url": "https://api.github.com/repos/xi-yang/GENI-DCN-AM", "Date": "2016-02-11T20:21:56Z"},
{"Line": "=>463", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((vif.getCapacity()) != null) && (!(vif.getCapacity().isEmpty()))) vifJson.put(\"capacity\", vif.getCapacity());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/2416/buggy-version/AggregateWS.src.net.geni.aggregate.services.core.RspecHandler_GENIv3.java", "BodyUseAPI": ["org.json.simple.JSONObject.put(java.lang.String,vif.getCapacity())", "net.geni.aggregate.services.core.AggregateNetworkInterface.getCapacity()"], "Fixed commit": "8be25096a064e8de1b114b6d2a2fad12da6bab6a", "Url": "https://api.github.com/repos/xi-yang/GENI-DCN-AM", "Date": "2016-02-11T20:21:56Z"},
{"Line": "=>465", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((vif.getIpAddress()) != null) && (!(vif.getIpAddress().isEmpty()))) vifJson.put(\"address\", vif.getIpAddress());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/2416/buggy-version/AggregateWS.src.net.geni.aggregate.services.core.RspecHandler_GENIv3.java", "BodyUseAPI": ["net.geni.aggregate.services.core.AggregateNetworkInterface.getIpAddress()", "org.json.simple.JSONObject.put(java.lang.String,vif.getIpAddress())"], "Fixed commit": "8be25096a064e8de1b114b6d2a2fad12da6bab6a", "Url": "https://api.github.com/repos/xi-yang/GENI-DCN-AM", "Date": "2016-02-11T20:21:56Z"},
{"Line": "=>461", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((vif.getDeviceType()) != null) && (!(vif.getDeviceType().isEmpty()))) vifJson.put(\"type\", vif.getDeviceType());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/2416/buggy-version/AggregateWS.src.net.geni.aggregate.services.core.RspecHandler_GENIv3.java", "BodyUseAPI": ["net.geni.aggregate.services.core.AggregateNetworkInterface.getDeviceType()", "org.json.simple.JSONObject.put(java.lang.String,vif.getDeviceType())"], "Fixed commit": "8be25096a064e8de1b114b6d2a2fad12da6bab6a", "Url": "https://api.github.com/repos/xi-yang/GENI-DCN-AM", "Date": "2016-02-11T20:21:56Z"},
{"Line": "=>446", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((aggrNode.getUrn()) != null) && (!(aggrNode.getUrn().isEmpty()))) vmJson.put(\"urn\", aggrNode.getUrn());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/2416/buggy-version/AggregateWS.src.net.geni.aggregate.services.core.RspecHandler_GENIv3.java", "BodyUseAPI": ["net.geni.aggregate.services.core.AggregateNode.getUrn()", "org.json.simple.JSONObject.put(java.lang.String,aggrNode.getUrn())"], "Fixed commit": "8be25096a064e8de1b114b6d2a2fad12da6bab6a", "Url": "https://api.github.com/repos/xi-yang/GENI-DCN-AM", "Date": "2016-02-11T20:21:56Z"},
{"Line": "=>970", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["php.runtime.env.Environment.findConstant(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (constant == null) { if ((name.charAt(0)) != (php.runtime.Information.NAMESPACE_SEP_CHAR)) { int p = name.lastIndexOf(Information.NAMESPACE_SEP_CHAR); if (p > (-1)) constant = findConstant(name.substring((p + 1)), lowerName.substring((p + 1))); } if (constant == null) { error(trace, php.runtime.env.E_NOTICE, Messages.ERR_USE_UNDEFINED_CONSTANT, name, name); int p = name.lastIndexOf(Information.NAMESPACE_SEP_CHAR); if (p > (-1)) return php.runtime.memory.StringMemory.valueOf(name.substring((p + 1))); else return php.runtime.memory.StringMemory.valueOf(name); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/1626/buggy-version/jphp-core.src.php.runtime.env.Environment.java", "BodyUseAPI": [], "Fixed commit": "83cb0baa633123be2ed9afab466abf3c55d26680", "Url": "https://api.github.com/repos/jphp-compiler/jphp", "Date": "2014-07-04T05:36:47Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(methodAccess.method().getDeclaringClass().isInterface())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/2142/buggy-version/qbit.core.src.main.java.io.advantageous.qbit.service.ServiceBuilder.java", "BodyUseAPI": [], "Fixed commit": "6364e4fe308aab30aa533fa1328a3b67dd442b07", "Url": "https://api.github.com/repos/advantageous/qbit", "Date": "2015-09-09T21:06:29Z"},
{"Line": "=>313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value != null) { o = java.lang.Double.parseDouble(((java.lang.String) (value))); }else { o = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/7907/buggy-version/docdoku-server.docdoku-server-ejb.src.main.java.com.docdoku.server.dao.QueryDAO.java", "BodyUseAPI": [], "Fixed commit": "84df72499b1f7fa81578aa8dff8082255b4198e5", "Url": "https://api.github.com/repos/docdoku/docdoku-plm", "Date": "2015-04-24T12:03:03Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mTabNumber) == 1) { v = inflater.inflate(R.layout.fragment_map, container, false); mMapView = ((com.google.android.gms.maps.MapView) (v.findViewById(R.id.mapView))); }else { v = inflater.inflate(R.layout.fragment_map2, container, false); mMapView = ((com.google.android.gms.maps.MapView) (v.findViewById(R.id.mapView2))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/8481/buggy-version/app.src.main.java.parkinglocator.jeva.washington.edu.parkinglocator.MapFragment.java", "BodyUseAPI": [], "Fixed commit": "bb35474177282f7a940565599753dcf01a69ae90", "Url": "https://api.github.com/repos/Ethan-McGregor/ParkingLocator", "Date": "2017-03-06T05:01:16Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mTabNumber) == 1) fab = ((android.support.design.widget.FloatingActionButton) (getActivity().findViewById(R.id.myLocationButton))); else fab = ((android.support.design.widget.FloatingActionButton) (getActivity().findViewById(R.id.myLocationButton2)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/8481/buggy-version/app.src.main.java.parkinglocator.jeva.washington.edu.parkinglocator.MapFragment.java", "BodyUseAPI": [], "Fixed commit": "bb35474177282f7a940565599753dcf01a69ae90", "Url": "https://api.github.com/repos/Ethan-McGregor/ParkingLocator", "Date": "2017-03-06T05:01:16Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, org.solution.crawler.VisitHash>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (urls == null) { addUrl(url_string); urls = host2urls.get(host); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/4168/buggy-version/src.main.java.org.solution.crawler.URLStore.java", "BodyUseAPI": [], "Fixed commit": "19e77e2bde0258d043f6ff9094f719c64e4a6a66", "Url": "https://api.github.com/repos/wxlfrank/crawler", "Date": "2016-04-01T01:27:48Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang.StringUtils.isNotBlank(queryPara)) { map = com.cnnic.whois.util.WhoisUtil.processError(WhoisUtil.COMMENDRRORCODE, role, format); processRespone(request, response, map); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/7645/buggy-version/source.whois.src.com.cnnic.whois.controller.QueryServlet.java", "BodyUseAPI": [], "Fixed commit": "157dbdae890b49ef0e8a42dbb321bd9abab883b6", "Url": "https://api.github.com/repos/cnnic/restfulwhois", "Date": "2013-10-31T01:54:27Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mMovie.getVideos()) != null) && ((mMovie.getVideos().length) > 0)) { mVideosExpandable.setOnClickListener(mExpandableLayoutOnClickListener); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/1278/buggy-version/app.src.main.java.com.henriquenfaria.popularmovies.ui.DetailsFragment.java", "BodyUseAPI": [], "Fixed commit": "57312e9ff37e97f608f1b43ed359b5fca74ed101", "Url": "https://api.github.com/repos/henriquenfaria/popular-movies-stage-2", "Date": "2016-09-22T09:59:44Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mMovie.getReviews()) != null) && ((mMovie.getReviews().length) > 0)) { mReviewsExpandable.setOnClickListener(mExpandableLayoutOnClickListener); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/1278/buggy-version/app.src.main.java.com.henriquenfaria.popularmovies.ui.DetailsFragment.java", "BodyUseAPI": [], "Fixed commit": "57312e9ff37e97f608f1b43ed359b5fca74ed101", "Url": "https://api.github.com/repos/henriquenfaria/popular-movies-stage-2", "Date": "2016-09-22T09:59:44Z"},
{"Line": "=>368", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (obj instanceof java.math.BigDecimal) { return ((java.math.BigDecimal) (obj)).toBigInteger(); }else if (obj instanceof java.lang.Number) { return java.math.BigInteger.valueOf(((java.lang.Number) (obj)).longValue()); }else { try { return new java.math.BigDecimal(obj.toString()).toBigInteger(); } catch (java.lang.NumberFormatException excp) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/8720/buggy-version/intg.src.main.java.org.apache.atlas.type.AtlasBuiltInTypes.java", "BodyUseAPI": ["java.math.BigDecimal.toBigInteger()", "java.lang.Object.toString()"], "Fixed commit": "48b05f364201b01cf04fd6492a375cc154bd2536", "Url": "https://api.github.com/repos/apoorvnaik/incubator-atlas", "Date": "2017-03-02T03:30:57Z"},
{"Line": "=>405", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (opcode.matches(\"^convs$\")) { this.dataWidth = tigercat.instruction.Instruction.DataWidth.SINGLE_WORD; }else if (opcode.matches(\"^call$\")) { this.dataWidth = tigercat.instruction.Instruction.DataWidth.DOUBLE_WORD; }else { throw new tigercat.instruction.InvalidDataWidthException(opcode); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/7899/buggy-version/src.tigercat.instruction.Instruction.java", "BodyUseAPI": [], "Fixed commit": "01cbaec5137175523d0ee02fc240186b43744556", "Url": "https://api.github.com/repos/sredman/TigerCat-Assembler", "Date": "2017-11-19T18:58:16Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!storehouseInList) { model.planning.Livraison storeHousePoint = new model.planning.Livraison(null, storehouse, (-1), (-1)); livraisons.add(storeHousePoint); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/5174/buggy-version/titan-shippment.src.utils.DijkstraFinder.java", "BodyUseAPI": [], "Fixed commit": "9a81ff32d27f33a67bb9d2f531cb5ef5bb2f97c4", "Url": "https://api.github.com/repos/LeonardA-L/hm-devOO", "Date": "2014-11-11T10:36:43Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.ResultSet.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (com.rgi.geopackage.DatabaseUtility.tableOrViewExists(this.getSqliteConnection(), table_name)) { try (java.sql.Statement stmt2 = this.getSqliteConnection().createStatement();java.sql.ResultSet pragmaTableinfo = stmt2.executeQuery(java.lang.String.format(\"PRAGMA table_info(%s);\", table_name))) { while (pragmaTableinfo.next()) { final java.lang.String dataType = pragmaTableinfo.getString(\"type\"); final boolean correctDataType = com.rgi.geopackage.verification.Verifier.checkDataType(dataType); assertTrue(java.lang.String.format(\"Incorrect data type encountered: %s From table: %s\", dataType, table_name), correctDataType); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/6845/buggy-version/Tile2Gpkg.src.com.rgi.geopackage.core.CoreVerifier.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,java.lang.String,java.lang.String)", "java.sql.Statement.executeQuery(java.lang.String)", "java.lang.String.format(java.lang.String,java.lang.String)", "com.rgi.geopackage.core.CoreVerifier.assertTrue(java.lang.String,boolean)"], "Fixed commit": "c239f4e4b62a3bf84c60290c8fb8fd1eb0761325", "Url": "https://api.github.com/repos/GitHubRGI/swagd", "Date": "2015-01-21T15:01:12Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((imgRef.indexOf(locale)) != (-1)) { return imgRef; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/7324/buggy-version/OVWMigration.src.main.com.cisco.dse.global.migration.config.FrameworkUtils.java", "BodyUseAPI": [], "Fixed commit": "7ea94359b39e885549100360ebed77b3bc02d521", "Url": "https://api.github.com/repos/shreyabhatnagar/OVWMigration", "Date": "2016-01-28T08:57:09Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.gluu.site.ldap.persistence.AttributeData.getName()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (ldapOperationService.isCertificateAttribute(attributeName)) { byte[][] binaryValues = new byte[attributeValues.length][]; for (int i = 0; i < (attributeValues.length); i++) binaryValues[i] = org.apache.commons.codec.binary.Base64.decodeBase64(attributeValues[i]); ldapAttributes.add(new com.unboundid.ldap.sdk.Attribute((attributeName + \";binary\"), binaryValues)); }else ldapAttributes.add(new com.unboundid.ldap.sdk.Attribute(attributeName, attributeValues));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/8991/buggy-version/oxLdap.src.main.java.org.gluu.site.ldap.persistence.LdapEntryManager.java", "BodyUseAPI": ["java.util.List<com.unboundid.ldap.sdk.Attribute>.add(com.unboundid.ldap.sdk.Attribute)", "java.util.List<com.unboundid.ldap.sdk.Attribute>.add(com.unboundid.ldap.sdk.Attribute)"], "Fixed commit": "0f0e4f59eed1e535d8a513cb7e7339a0641def57", "Url": "https://api.github.com/repos/GluuFederation/oxCore", "Date": "2017-11-24T17:06:24Z"},
{"Line": "=>1497", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(label.isEmpty())) armyc2.c2sd.JavaTacticalRenderer.Modifier2.AddIntegralAreaModifier(tg, label, armyc2.c2sd.JavaTacticalRenderer.Modifier2.aboveMiddle, 0, pt0, pt1, true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/7634/buggy-version/Renderer.src.main.java.armyc2.c2sd.JavaTacticalRenderer.Modifier2.java", "BodyUseAPI": ["armyc2.c2sd.JavaTacticalRenderer.Modifier2.AddIntegralAreaModifier(armyc2.c2sd.JavaTacticalRenderer.TGLight,java.lang.String,int,int,armyc2.c2sd.JavaLineArray.POINT2,armyc2.c2sd.JavaLineArray.POINT2,boolean)"], "Fixed commit": "b56375babf6ade911a1219eae51c478820cd7a03", "Url": "https://api.github.com/repos/missioncommand/mil-sym-android", "Date": "2016-06-14T22:29:02Z"},
{"Line": "=>1490", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((label.isEmpty()) && (last.equalsIgnoreCase(eny))) last = label;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/7634/buggy-version/Renderer.src.main.java.armyc2.c2sd.JavaTacticalRenderer.Modifier2.java", "BodyUseAPI": [], "Fixed commit": "b56375babf6ade911a1219eae51c478820cd7a03", "Url": "https://api.github.com/repos/missioncommand/mil-sym-android", "Date": "2016-06-14T22:29:02Z"},
{"Line": "=>1464", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((label.isEmpty()) && (last.equalsIgnoreCase(eny))) last = label;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/7634/buggy-version/Renderer.src.main.java.armyc2.c2sd.JavaTacticalRenderer.Modifier2.java", "BodyUseAPI": [], "Fixed commit": "b56375babf6ade911a1219eae51c478820cd7a03", "Url": "https://api.github.com/repos/missioncommand/mil-sym-android", "Date": "2016-06-14T22:29:02Z"},
{"Line": "=>1502", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(eny.isEmpty())) armyc2.c2sd.JavaTacticalRenderer.Modifier2.AddIntegralAreaModifier(tg, eny, armyc2.c2sd.JavaTacticalRenderer.Modifier2.aboveMiddle, 0, pt0, pt1, true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/7634/buggy-version/Renderer.src.main.java.armyc2.c2sd.JavaTacticalRenderer.Modifier2.java", "BodyUseAPI": ["armyc2.c2sd.JavaTacticalRenderer.Modifier2.AddIntegralAreaModifier(armyc2.c2sd.JavaTacticalRenderer.TGLight,java.lang.String,int,int,armyc2.c2sd.JavaLineArray.POINT2,armyc2.c2sd.JavaLineArray.POINT2,boolean)"], "Fixed commit": "b56375babf6ade911a1219eae51c478820cd7a03", "Url": "https://api.github.com/repos/missioncommand/mil-sym-android", "Date": "2016-06-14T22:29:02Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (addToBackStack) { fragmentTransaction.addToBackStack(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/2525/buggy-version/app.src.main.java.nl.wiegman.timetracker.util.FragmentHelper.java", "BodyUseAPI": [], "Fixed commit": "58c9754ca02f271c6c169ff9c4a4a2f3eb720645", "Url": "https://api.github.com/repos/bassages/TimeTracker", "Date": "2015-03-01T20:34:11Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (length == 0) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/2443/buggy-version/modules.core.petra.petra-io.src.main.java.com.liferay.petra.io.unsync.UnsyncByteArrayInputStream.java", "BodyUseAPI": [], "Fixed commit": "a0b5a898a8b68fe12d917af0e6fbad2d04d40d9e", "Url": "https://api.github.com/repos/anthony-chu/liferay-portal", "Date": "2017-10-18T23:29:17Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((sid) * (token)) == 0) { sid = ((data[0]) * 256) + (data[1]); token = ((((data[2]) << 24) | ((data[3]) << 16)) | ((data[4]) << 8)) | (data[5]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/2679/buggy-version/core.src.ru.mitrakov.self.rush.net.Network.java", "BodyUseAPI": [], "Fixed commit": "846f60f2396a496275d0bd4657fcb1d849402474", "Url": "https://api.github.com/repos/mitrakov/winesaps", "Date": "2017-03-29T14:05:08Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((increment) > 0) { if ((newValue) <= (endValue)) { valueToSet = newValue; }else { valueToSet = endValue; } }else if ((increment) < 0) { if ((newValue) >= (endValue)) { valueToSet = newValue; }else { valueToSet = endValue; } }else { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/8370/buggy-version/TextCounter.src.main.java.com.github.premnirmal.textcounter.Counter.java", "BodyUseAPI": [], "Fixed commit": "c92efaad4c3eb1a60d3e6a5171eda2bf06ff46a1", "Url": "https://api.github.com/repos/premnirmal/TextCounter", "Date": "2015-03-14T17:37:48Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((increment) < 0) { return ((newValue) < (currentValue)) && ((newValue) > (endValue)); }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/8370/buggy-version/TextCounter.src.main.java.com.github.premnirmal.textcounter.Counter.java", "BodyUseAPI": [], "Fixed commit": "c92efaad4c3eb1a60d3e6a5171eda2bf06ff46a1", "Url": "https://api.github.com/repos/premnirmal/TextCounter", "Date": "2015-03-14T17:37:48Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pokers[i].getWeek()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (pokerWeek == (org.easyframework.pk.PokerCard.WEEK_ACE)) { pokerWeek = 14; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/7079/buggy-version/poker-texas.src.main.java.org.easyframework.pk.texas.TexasUtils.java", "BodyUseAPI": [], "Fixed commit": "d125c780c0dc68eb9dbc3513b13c2c3d0a199e85", "Url": "https://api.github.com/repos/artdi/poker", "Date": "2017-07-06T07:33:33Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["data.getExtras().getParcelable(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((show.getUnwatchedEpisodes()) == 0) { int tvShowIndex = tvShowArrayList.indexOf(show); tvShowArrayList.remove(tvShowIndex); showAdapter.notifyDataSetChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/4645/buggy-version/app.src.main.java.br.com.martinsdev.guiadeseries.view.NewEpisodeSeries.java", "BodyUseAPI": ["java.util.ArrayList<br.com.martinsdev.guiadeseries.model.TVShow>.indexOf(br.com.martinsdev.guiadeseries.model.TVShow)"], "Fixed commit": "ddd72b04466459fba1d9ad1bf282c7c67e0c34c1", "Url": "https://api.github.com/repos/gamartins/guiaseries", "Date": "2016-04-26T14:06:11Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["objets.recepteur.getXCenter()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((xImage1 >= (mur2.position)) && (x3 >= (mur2.position))) || ((xImage1 <= (mur2.position)) && (x3 <= (mur2.position)))) { if ((y2 >= (mur2.debut)) && (y2 <= (mur2.fin))) { this.intersectionMur1(x1, x2, x3, y1, y2, y3, mur1, xImage1, yImage1); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/5700/buggy-version/src.Antenne.java", "BodyUseAPI": ["Antenne.intersectionMur1(int,int,int,int,int,int,Mur,int,int)"], "Fixed commit": "71a266253150d2c8080534de3df33f283b07e0d7", "Url": "https://api.github.com/repos/medwil/RayTracing", "Date": "2017-05-09T13:49:08Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["objets.recepteur.getYCenter()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((yImage1 >= (mur2.position)) && (y3 >= (mur2.position))) || ((yImage1 <= (mur2.position)) && (y3 <= (mur2.position)))) { if ((x2 >= (mur2.debut)) && (x2 <= (mur2.fin))) { this.intersectionMur1(x1, x2, x3, y1, y2, y3, mur1, xImage1, yImage1); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/5700/buggy-version/src.Antenne.java", "BodyUseAPI": ["Antenne.intersectionMur1(int,int,int,int,int,int,Mur,int,int)"], "Fixed commit": "71a266253150d2c8080534de3df33f283b07e0d7", "Url": "https://api.github.com/repos/medwil/RayTracing", "Date": "2017-05-09T13:49:08Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((displaySymbol) == null) { return code; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/1433/buggy-version/app.src.main.java.org.mifos.mobilebanking.models.Currency.java", "BodyUseAPI": [], "Fixed commit": "3d8f7550525754647995ab228232b9ef6f3a83da", "Url": "https://api.github.com/repos/sashank27/mifos-mobile", "Date": "2017-12-08T06:07:29Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((reader.hasNext()) && (!(reader.hasNextInt()))) reader.nextLine();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/8412/buggy-version/Parser.java", "BodyUseAPI": ["java.util.Scanner.nextLine()"], "Fixed commit": "f999f9d2a6665340cb1ffdd867cc7691be38184c", "Url": "https://api.github.com/repos/ZookTheMagpie/Kiosk-", "Date": "2016-03-04T11:30:35Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (photoDir.exists()) { }else { photoDir.mkdir(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/5941/buggy-version/app.src.main.java.don.com.plumeria_demo.MyActivity.java", "BodyUseAPI": ["java.io.File.mkdir()"], "Fixed commit": "e9078881e000865ac93d47994b4388e78c9c74d8", "Url": "https://api.github.com/repos/DonLiangGit/Plumeria", "Date": "2014-09-04T00:39:46Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (ipaddr != null) log(edu.uchicago.proprio.draggr.transfer.DEBUG, (((((((((((((\"In handleTransfer: \" + filename) + \"\\n\") + deviceName) + \"\\nport:\") + port) + \"\\nip: \") + (ipaddr[0])) + \".\") + (ipaddr[1])) + \".\") + (ipaddr[2])) + \".\") + (ipaddr[3]))); else log(edu.uchicago.proprio.draggr.transfer.DEBUG, \"In handleTransfer: NO IP ADDR\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/2046/buggy-version/src.edu.uchicago.proprio.draggr.transfer.PassiveHandler.java", "BodyUseAPI": ["edu.uchicago.proprio.draggr.transfer.PassiveHandler.log(edu.uchicago.proprio.draggr.transfer.DEBUG,java.lang.String)"], "Fixed commit": "f61a529692f9d7e31e75eace663e49340bc36633", "Url": "https://api.github.com/repos/muleroid/draggr", "Date": "2014-03-11T05:59:39Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(bq.usesWindowURI(uri))) dataset.getDefaultModel().add(fm.loadModel(uri));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/3666/buggy-version/src.main.java.it.polimi.rsp.baselines.jena.JenaEngine.java", "BodyUseAPI": ["dataset.getDefaultModel().add(fm.loadModel(uri))", "org.apache.jena.util.FileManager.loadModel(java.lang.String)"], "Fixed commit": "89da980a40af1f1956b0aa4352f80196e3180266", "Url": "https://api.github.com/repos/riccardotommasini/yasper", "Date": "2017-02-08T10:39:48Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(bq.usesNamedWindowURI(uri))) dataset.addNamedModel(uri, fm.loadModel(uri));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/3666/buggy-version/src.main.java.it.polimi.rsp.baselines.jena.JenaEngine.java", "BodyUseAPI": ["org.apache.jena.util.FileManager.loadModel(java.lang.String)", "org.apache.jena.query.Dataset.addNamedModel(java.lang.String,fm.loadModel(uri))"], "Fixed commit": "89da980a40af1f1956b0aa4352f80196e3180266", "Url": "https://api.github.com/repos/riccardotommasini/yasper", "Date": "2017-02-08T10:39:48Z"},
{"Line": "=>593", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((omamt == null) || (omamt.equals(\"\"))) { org.agmip.functions.ExperimentHelper.LOG.debug(\"OM_TOT IS NOT AVAILABLE, USING OMAMT\"); omamt = ((java.lang.String) (omEvent.getCurrentEvent().get(\"omamt\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/6346/buggy-version/src.main.java.org.agmip.functions.ExperimentHelper.java", "BodyUseAPI": [], "Fixed commit": "4016e66560ebe7ed16916641bc6619edf1dd1f76", "Url": "https://api.github.com/repos/agmip/agmip-common-functions", "Date": "2013-04-10T18:33:07Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.patientview.utils.LegacySpringUtils.getUnitManager().get(userMapping.getUnitcode())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((unit != null) && (!(unit.getSourceType().equalsIgnoreCase(\"radargroup\")))) { if (!(UnitUtils.PATIENT_ENTERS_UNITCODE.equalsIgnoreCase(userMapping.getUnitcode()))) { org.patientview.model.Patient patient = org.patientview.patientview.PatientUtils.retrievePatient(userMapping.getNhsno(), userMapping.getUnitcode()); org.patientview.patientview.model.Contact contact = new org.patientview.patientview.model.Contact(patient, unit, userMapping); contacts.add(contact); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/5999/buggy-version/patientview-parent.patientview.src.main.java.org.patientview.patientview.ContactAction.java", "BodyUseAPI": [], "Fixed commit": "fecf2bd50ca9e2fa388e5c50f4a58b9d0aad15e4", "Url": "https://api.github.com/repos/robworth/patientview", "Date": "2013-12-12T16:35:15Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class.getModifiers()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(j.util.Modifiers.isPublic(mods))) throw new java.lang.Exception(((\"class \" + (cls.getName())) + \" must be public\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/7442/buggy-version/src.j.util.OptionParser.java", "BodyUseAPI": [], "Fixed commit": "c3e34b3ec18d6ebaf67454bbd1b84debf57008ed", "Url": "https://api.github.com/repos/lucastan/libjava", "Date": "2012-12-23T06:14:48Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["by.istin.android.xcore.gson.JsonElement.getAsString()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (string.contains(\"\\\"\")) { string = string.replace(\"\\\"\", \"&quot;\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/3368/buggy-version/xcore-library.xcore.src.main.java.by.istin.android.xcore.gson.ContentValuesAdapter.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "dda5f5beac0fade2384c631f74f0868229f6643a", "Url": "https://api.github.com/repos/IstiN/android_xcore", "Date": "2014-04-21T12:24:02Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(s.startsWith(\"http://\"))) && (!(s.startsWith(\"https://\")))) { s = \"http://\" + s; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/1301/buggy-version/src.craftoplugin.modules.chatnew.ChatListener.java", "BodyUseAPI": [], "Fixed commit": "b5d2c6860654419bbb7ef40b3694a086e1e73fea", "Url": "https://api.github.com/repos/Craftolution/CraftoPlugin", "Date": "2014-12-15T18:07:21Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Character.getStatus(Stsflag.fluidaddiction)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (st == null) { }else if (st.activated()) { if (self.human()) { c.write(self, nightgames.global.Global.capitalizeFirstLetter(nightgames.global.Global.format(((((\"As {other:name-possessive} \" + fluid) + \" flow down your throat, your entire mind fogs up. \") + \"You forget where you are, why you're here, and what you're doing. \") + \"The only thing left in you is an primal need to obtain more of {other:possessive} fluids.\"), self, opponent))); }else { c.write(self, nightgames.global.Global.capitalizeFirstLetter(nightgames.global.Global.format((((\"As your \" + fluid) + \" slides down {self:name-possessive} throat, you see a shadow pass over {self:possessive} face. \") + \"Whereas {self:name} was playfully teasing you just a few seconds ago, you can now only see a desperate need that {self:pronoun} did not possess before.\"), self, opponent))); } }else if (!(st.isActive())) { if (self.human()) { c.write(self, nightgames.global.Global.capitalizeFirstLetter(nightgames.global.Global.format(((\"You feel a strange desire to drink down more of {other:name-possessive} \" + fluid) + \".\"), self, opponent))); }else { c.write(self, nightgames.global.Global.capitalizeFirstLetter(nightgames.global.Global.format(((\"{self:name} drinks down your \" + fluid) + \" and seems to want more.\"), self, opponent))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/7981/buggy-version/NightgamesMod.nightgames.characters.body.MouthPart.java", "BodyUseAPI": ["nightgames.status.FluidAddiction.isActive()", "nightgames.status.FluidAddiction.activated()"], "Fixed commit": "8d97bb88245ac0a374a2659c8efec0890772de97", "Url": "https://api.github.com/repos/nergantre/nightgamesmod", "Date": "2016-11-23T03:29:46Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<java.lang.String>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (clause.contains(variable)) { k--; continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/8385/buggy-version/examples.ICMT15.edu.toronto.cs.se.modelepedia.icmt15.src.edu.toronto.cs.se.modelepedia.icmt15.operator.ICMT15.java", "BodyUseAPI": [], "Fixed commit": "559fe89ddc5a6556e24a9b9effa6a21de29689a6", "Url": "https://api.github.com/repos/adisandro/MMINT", "Date": "2015-02-19T21:02:04Z"},
{"Line": "=>459", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.amazonaws.AmazonClientException.getErrorCode()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((errorCode.equals(\"InvalidDigest\")) || (errorCode.equals(\"BadDigest\"))) { java.lang.String err = ((((\"Checksum mismatch detected attempting to add \" + \"content \") + contentId) + \" to S3 bucket \") + bucketName) + \". Content was not added.\"; throw new org.duracloud.storage.error.ChecksumMismatchException(err, e, NO_RETRY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/5815/buggy-version/s3storageprovider.src.main.java.org.duracloud.s3storage.S3StorageProvider.java", "BodyUseAPI": [], "Fixed commit": "8312ce223a6a4e69e6d200e0ee54d6a5244f059b", "Url": "https://api.github.com/repos/duracloud/duracloud", "Date": "2014-11-21T22:13:07Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (fontFiles != null) for (java.io.File fontFile : fontFiles) { renderer.getFontResolver().addFont(fontFile.getAbsolutePath(), true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/7339/buggy-version/src.org.futurepages.util.PDFUtil.java", "BodyUseAPI": [], "Fixed commit": "d4e70bf7ffdafd5653213ca38932bf146fbe29b5", "Url": "https://api.github.com/repos/futurepages/4", "Date": "2017-04-08T21:11:10Z"},
{"Line": "=>454", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.cxf.common.util.StringUtils.isEmpty(props.getProperty((\"pg1_sex\" + n)))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/7254/buggy-version/src.main.java.org.oscarehr.integration.born.ONAREnhancedFormToXML.java", "BodyUseAPI": [], "Fixed commit": "c88066c3ea35eb69f435800e3791c34913577329", "Url": "https://api.github.com/repos/scoophealth/oscar", "Date": "2015-04-20T17:50:30Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((var != query) && (!(Node.containsInList(var, observedValues)))) { newFactor = sumOut(var, factors); if (newFactor.hasComposingVariables()) { factors.add(newFactor); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/2240/buggy-version/BayesNet.java", "BodyUseAPI": ["BayesNet.sumOut(char,java.util.LinkedList<Factor>)"], "Fixed commit": "3790b2ea2564b933c2cd37388c859f19e3c314df", "Url": "https://api.github.com/repos/WiteHaze/AI_HW4", "Date": "2014-04-28T04:55:22Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dbHelper) != null) { dbHelper.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/7784/buggy-version/src.com.youdao.nanti.candy.yirisanxing.JavaScriptInterface.java", "BodyUseAPI": [], "Fixed commit": "2b97a165d99f7e457679cfecf4f953972911ca78", "Url": "https://api.github.com/repos/PATHoyong/yirisanxing", "Date": "2012-07-02T12:29:41Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (component.isEmpty()) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/546/buggy-version/extension.rsb.scope.src.main.java.org.openbase.jul.extension.rsb.scope.ScopeGenerator.java", "BodyUseAPI": [], "Fixed commit": "b9b55dd6cfb6f5d344f26c18dcf450d45c5c48ea", "Url": "https://api.github.com/repos/openbase/jul", "Date": "2016-07-04T11:42:17Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (translateNodes) { tree.setNodeHeight(node, ((tree.getNodeHeight(node)) + fixedDiff)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/6066/buggy-version/src.dr.evoxml.NewickParser.java", "BodyUseAPI": [], "Fixed commit": "3071ca363528aea0a0f699bf28711c120fe99d1d", "Url": "https://api.github.com/repos/beast-dev/beast-mcmc", "Date": "2017-07-14T10:17:03Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (translateNodes) { java.lang.System.out.println((\" Changing height of all nodes by \" + fixedDiff)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/6066/buggy-version/src.dr.evoxml.NewickParser.java", "BodyUseAPI": [], "Fixed commit": "3071ca363528aea0a0f699bf28711c120fe99d1d", "Url": "https://api.github.com/repos/beast-dev/beast-mcmc", "Date": "2017-07-14T10:17:03Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((java.lang.Math.abs(diff)) > 1.0E-8) && ((i == 0) || (!translateNodes))) { java.lang.System.out.println((((((\" Changing height of node \" + (tree.getTaxon(node.getNumber()))) + \" from \") + nodeHeight) + \" to \") + height)); tree.setNodeHeight(node, height); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/6066/buggy-version/src.dr.evoxml.NewickParser.java", "BodyUseAPI": [], "Fixed commit": "3071ca363528aea0a0f699bf28711c120fe99d1d", "Url": "https://api.github.com/repos/beast-dev/beast-mcmc", "Date": "2017-07-14T10:17:03Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == 0) { fixedDiff = diff; }else if ((java.lang.Math.abs((diff - fixedDiff))) > 1.0E-5) { translateNodes = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/6066/buggy-version/src.dr.evoxml.NewickParser.java", "BodyUseAPI": [], "Fixed commit": "3071ca363528aea0a0f699bf28711c120fe99d1d", "Url": "https://api.github.com/repos/beast-dev/beast-mcmc", "Date": "2017-07-14T10:17:03Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (option.getName().equals(\"--covered-region\")) { function.coverage.base.CoverageCommand.coveredRegionFile = utils.CommandManager.getValidPath(option); }else if (option.getName().equals(\"--gene-boundaries\")) { function.coverage.base.CoverageCommand.coveredRegionFile = utils.CommandManager.getValidPath(option); }else if (option.getName().equals(\"--site-max-percent-cov-difference\")) { utils.CommandManager.checkValueValid(1, 0, option); function.coverage.base.CoverageCommand.siteCleanCutoff = utils.CommandManager.getValidDouble(option); }else if (option.getName().equals(\"--percent-region-covered\")) { function.coverage.base.CoverageCommand.minPercentRegionCovered = utils.CommandManager.getValidDouble(option); }else if (option.getName().equals(\"--gene-max-percent-cov-difference\")) { utils.CommandManager.checkValueValid(1, 0, option); function.coverage.base.CoverageCommand.geneCleanCutoff = utils.CommandManager.getValidDouble(option); }else { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/4618/buggy-version/src.main.java.function.coverage.base.CoverageCommand.java", "BodyUseAPI": ["option.getName().equals(java.lang.String)", "utils.CommandManager.getValidDouble(utils.CommandOption)", "utils.CommandOption.getName()", "option.getName().equals(java.lang.String)", "option.getName().equals(java.lang.String)", "utils.CommandManager.getValidPath(utils.CommandOption)", "utils.CommandManager.checkValueValid(int,int,utils.CommandOption)", "utils.CommandOption.getName()", "utils.CommandOption.getName()", "utils.CommandOption.getName()", "utils.CommandManager.getValidDouble(utils.CommandOption)", "utils.CommandManager.checkValueValid(int,int,utils.CommandOption)", "utils.CommandManager.getValidPath(utils.CommandOption)", "utils.CommandManager.getValidDouble(utils.CommandOption)", "option.getName().equals(java.lang.String)"], "Fixed commit": "9c2ae392b8fd096b3f3979eadef5b374c115dc18", "Url": "https://api.github.com/repos/igm-team/atav", "Date": "2016-01-28T20:30:37Z"},
{"Line": "=>1023", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (joins != null) for (final SelectImpl.untyped.JOIN<?> join : joins) compilation.registerAlias(join.table);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/8813/buggy-version/jsql.src.main.java.org.libx4j.rdb.jsql.Compiler.java", "BodyUseAPI": [], "Fixed commit": "59e41bf9e1ae2640153b8df574c292cc236ede49", "Url": "https://api.github.com/repos/libx4j/rdb", "Date": "2017-10-03T03:25:28Z"},
{"Line": "=>426", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((weather2.ClientTickHandler.weatherManager) == null) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/3770/buggy-version/src.main.java.weather2.client.SceneEnhancer.java", "BodyUseAPI": [], "Fixed commit": "bdd9f93b4a5f193ad9bc1471ed4c4a30fd1a6577", "Url": "https://api.github.com/repos/Corosauce/weather2", "Date": "2017-04-13T10:21:54Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((locations) == null) { brooklyn.cli.Main.log.warn(\"Locations parameter not supplied. Assuming empty list.\"); locations = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/129/buggy-version/usage.cli.src.main.java.brooklyn.cli.Main.java", "BodyUseAPI": [], "Fixed commit": "8d87bb72228ec9346c361a57d6b7b677d5da9e5b", "Url": "https://api.github.com/repos/pveentjer/brooklyn", "Date": "2012-09-18T14:32:27Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (context.getInteractors().isInteractorResourceCached(currentResource)) { update(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/8786/buggy-version/src.main.java.org.reactome.web.diagram.legends.InteractorsControl.java", "BodyUseAPI": [], "Fixed commit": "a85369fe347892c1d3432d1fe18ab4a050173745", "Url": "https://api.github.com/repos/reactome-pwp/diagram", "Date": "2016-01-29T11:49:00Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((java.lang.Math.abs(targetAngle)) > (java.lang.Math.PI)) targetAngle = (java.lang.Math.PI) * (java.lang.Math.signum(targetAngle));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/8695/buggy-version/src.main.java.za.redbridge.simulator.phenotype.heuristics.Heuristic.java", "BodyUseAPI": ["java.lang.Math.signum(double)"], "Fixed commit": "f1c6b6e8ab57b0dc413ed5dab0ae140b32e94427", "Url": "https://api.github.com/repos/JayH5/hons-simulator", "Date": "2014-09-26T02:13:37Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jetbrains.mps.openapi.model.SModelReference.resolve(project.getRepository())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (model == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/8194/buggy-version/workbench.mps-platform.source.jetbrains.mps.workbench.goTo.GoToModelPlatformAction.java", "BodyUseAPI": [], "Fixed commit": "e3cc3999a538d103574582ac7f0abeb7ee857126", "Url": "https://api.github.com/repos/JetBrains/MPS", "Date": "2016-06-27T15:37:07Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.kumasuke.fetcher.Header.getLyricist()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if ((lr != null) && (!(lr.isEmpty()))) text.append(br).append(\"\\u4f5c\\u8a5e\\uff1a\").append(com.kumasuke.fetcher.util.Formatter.formatSet(lr, \", \"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/6446/buggy-version/src.main.java.com.kumasuke.fetcher.util.Formatter.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "com.kumasuke.fetcher.util.Formatter.formatSet(java.util.Set<java.lang.String>,java.lang.String)"], "Fixed commit": "a60eddaa2b67bff61b55a477a31c6528c8c14774", "Url": "https://api.github.com/repos/kumasuke120/lyrics-fetcher", "Date": "2015-08-25T18:37:28Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class<?>.getCanonicalName()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (canonName.equals(\"float\")) { return ((float) (0)); }else if (canonName.equals(\"double\")) { return ((double) (0)); }else if (canonName.equals(\"void\")) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/433/buggy-version/libraries.stumbler.src.main.java.org.mozilla.mozstumbler.svclocator.DynamicProxy.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "6250f7e763fffd46b4e2bcb5ed22bde880facf6c", "Url": "https://api.github.com/repos/petercpg/MozStumbler", "Date": "2015-02-02T19:05:46Z"},
{"Line": "=>1127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<org.bukkit.entity.Entity>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((l.getCustomName()) != null) && (l.getCustomName().equalsIgnoreCase(((org.bukkit.ChatColor.LIGHT_PURPLE) + \"Mythical Wither\")))) { if ((l.getMaxHealth()) > (((l.getHealth()) + 5) + (0.2 * ((l.getMaxHealth()) / (l.getHealth()))))) { java.text.DecimalFormat df = new java.text.DecimalFormat(\"#0.0\"); l.setHealth((((l.getHealth()) + 5) + (0.2 * ((l.getMaxHealth()) / (l.getHealth()))))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/4948/buggy-version/BankEconomyMod.src.me.kaZep.Base.Main.java", "BodyUseAPI": ["org.bukkit.entity.Wither.getHealth()", "org.bukkit.entity.Wither.getMaxHealth()", "org.bukkit.entity.Wither.getHealth()", "org.bukkit.entity.Wither.getMaxHealth()", "org.bukkit.entity.Wither.getMaxHealth()", "org.bukkit.entity.Wither.getHealth()", "org.bukkit.entity.Wither.getHealth()", "org.bukkit.entity.Wither.setHealth((((l.getHealth()) + 5) + (0.2 * ((l.getMaxHealth()) / (l.getHealth())))))"], "Fixed commit": "1d48d639e8261ce2213b09e6cf1293d73bc279b8", "Url": "https://api.github.com/repos/sigonasr2/SigMinecraft", "Date": "2013-11-23T11:11:29Z"},
{"Line": "=>6045", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.entity.EntityDeathEvent.getEntity()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (f.getCustomName().contains(\"Mythical Wither\")) { e.setDroppedExp(((e.getDroppedExp()) * 4000)); boolean dropMythical = false; for (int j = 0; j < 10; j++) { org.bukkit.Location dd = f.getLocation().add(((java.lang.Math.random()) * 4), ((java.lang.Math.random()) * 4), ((java.lang.Math.random()) * 4)); org.bukkit.Bukkit.getWorld(\"world\").getBlockAt(dd).setType(Material.CHEST); org.bukkit.block.Chest c = ((org.bukkit.block.Chest) (org.bukkit.Bukkit.getWorld(\"world\").getBlockAt(dd).getState())); for (int i = 0; i < 27; i++) { org.bukkit.inventory.ItemStack item = null; if (((java.lang.Math.random()) <= 0.05) && (!dropMythical)) { dropMythical = true; item = getGoodie(2); } if ((java.lang.Math.random()) <= 0.2) { item = getGoodie(); c.getBlockInventory().setItem(i, item); } } } org.bukkit.Bukkit.dispatchCommand(org.bukkit.Bukkit.getConsoleSender(), \"gamerule mobGriefing false\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/4948/buggy-version/BankEconomyMod.src.me.kaZep.Base.PlayerListener.java", "BodyUseAPI": ["f.getLocation().add(double,double,double)", "org.bukkit.entity.LivingEntity.getLocation()"], "Fixed commit": "1d48d639e8261ce2213b09e6cf1293d73bc279b8", "Url": "https://api.github.com/repos/sigonasr2/SigMinecraft", "Date": "2013-11-23T11:11:29Z"},
{"Line": "=>5284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rar == 1) { rarity = 3; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/4948/buggy-version/BankEconomyMod.src.me.kaZep.Base.PlayerListener.java", "BodyUseAPI": [], "Fixed commit": "1d48d639e8261ce2213b09e6cf1293d73bc279b8", "Url": "https://api.github.com/repos/sigonasr2/SigMinecraft", "Date": "2013-11-23T11:11:29Z"},
{"Line": "=>2249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getEntity()) instanceof org.bukkit.entity.Wither) { org.bukkit.entity.Wither w = ((org.bukkit.entity.Wither) (e.getEntity())); if ((java.lang.Math.random()) <= 0.05) { w.addPotionEffect(new org.bukkit.potion.PotionEffect(org.bukkit.potion.PotionEffectType.DAMAGE_RESISTANCE, 999999, 3)); w.addPotionEffect(new org.bukkit.potion.PotionEffect(org.bukkit.potion.PotionEffectType.FIRE_RESISTANCE, 999999, 3)); w.addPotionEffect(new org.bukkit.potion.PotionEffect(org.bukkit.potion.PotionEffectType.WATER_BREATHING, 999999, 3)); w.addPotionEffect(new org.bukkit.potion.PotionEffect(org.bukkit.potion.PotionEffectType.HEALTH_BOOST, 999999, 40)); w.addPotionEffect(new org.bukkit.potion.PotionEffect(org.bukkit.potion.PotionEffectType.INCREASE_DAMAGE, 999999, 2)); w.addPotionEffect(new org.bukkit.potion.PotionEffect(org.bukkit.potion.PotionEffectType.NIGHT_VISION, 999999, 1)); w.setCustomName(((((org.bukkit.ChatColor.GOLD) + \"\") + (org.bukkit.ChatColor.LIGHT_PURPLE)) + \"Mythical Wither\")); org.bukkit.Bukkit.dispatchCommand(org.bukkit.Bukkit.getConsoleSender(), \"gamerule mobGriefing true\"); }else { w.addPotionEffect(new org.bukkit.potion.PotionEffect(org.bukkit.potion.PotionEffectType.DAMAGE_RESISTANCE, 999999, 3)); w.addPotionEffect(new org.bukkit.potion.PotionEffect(org.bukkit.potion.PotionEffectType.FIRE_RESISTANCE, 999999, 3)); w.addPotionEffect(new org.bukkit.potion.PotionEffect(org.bukkit.potion.PotionEffectType.WATER_BREATHING, 999999, 3)); w.addPotionEffect(new org.bukkit.potion.PotionEffect(org.bukkit.potion.PotionEffectType.HEALTH_BOOST, 999999, 40)); w.addPotionEffect(new org.bukkit.potion.PotionEffect(org.bukkit.potion.PotionEffectType.INCREASE_DAMAGE, 999999, 2)); w.addPotionEffect(new org.bukkit.potion.PotionEffect(org.bukkit.potion.PotionEffectType.NIGHT_VISION, 999999, 1)); w.setCustomName(((((org.bukkit.ChatColor.GOLD) + \"\") + (org.bukkit.ChatColor.BOLD)) + \"Mega Wither\")); org.bukkit.Bukkit.dispatchCommand(org.bukkit.Bukkit.getConsoleSender(), \"gamerule mobGriefing true\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/4948/buggy-version/BankEconomyMod.src.me.kaZep.Base.PlayerListener.java", "BodyUseAPI": ["org.bukkit.event.entity.CreatureSpawnEvent.getEntity()"], "Fixed commit": "1d48d639e8261ce2213b09e6cf1293d73bc279b8", "Url": "https://api.github.com/repos/sigonasr2/SigMinecraft", "Date": "2013-11-23T11:11:29Z"},
{"Line": "=>6929", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getEntity()) instanceof org.bukkit.entity.Wither) { if (((l.getCustomName()) != null) && (l.getCustomName().equalsIgnoreCase(((org.bukkit.ChatColor.LIGHT_PURPLE) + \"Mythical Wither\")))) { e.setDamage(((e.getDamage()) * 0.045)); }else { e.setDamage(((e.getDamage()) * 0.065)); } try { java.util.Iterator<org.bukkit.potion.PotionEffect> effects = l.getActivePotionEffects().iterator(); while (effects.hasNext()) { org.bukkit.potion.PotionEffect nexteffect = effects.next(); if (((nexteffect.getType().getName().compareTo(PotionEffectType.NIGHT_VISION.getName())) == 0) && ((l.getHealth()) < ((l.getMaxHealth()) / 2))) { l.removePotionEffect(PotionEffectType.NIGHT_VISION); l.addPotionEffect(new org.bukkit.potion.PotionEffect(org.bukkit.potion.PotionEffectType.DAMAGE_RESISTANCE, 999999, 2)); org.bukkit.entity.LivingEntity zombie = ((org.bukkit.entity.LivingEntity) (org.bukkit.Bukkit.getWorld(\"world\").spawnEntity(e.getEntity().getLocation(), EntityType.ZOMBIE))); org.bukkit.entity.LivingEntity enderdragon = ((org.bukkit.entity.LivingEntity) (org.bukkit.Bukkit.getWorld(\"world\").spawnEntity(e.getEntity().getLocation(), EntityType.ENDER_DRAGON))); zombie.setCustomName(((org.bukkit.ChatColor.DARK_PURPLE) + \"Charge Zombie III\")); zombie.getEquipment().setBoots(new org.bukkit.inventory.ItemStack(org.bukkit.Material.IRON_BOOTS)); zombie.getEquipment().setChestplate(new org.bukkit.inventory.ItemStack(org.bukkit.Material.IRON_CHESTPLATE)); zombie.getEquipment().setLeggings(new org.bukkit.inventory.ItemStack(org.bukkit.Material.IRON_LEGGINGS)); zombie.addPotionEffect(new org.bukkit.potion.PotionEffect(org.bukkit.potion.PotionEffectType.REGENERATION, 999999, 3)); org.bukkit.inventory.ItemStack sword = new org.bukkit.inventory.ItemStack(org.bukkit.Material.IRON_SWORD); sword.addEnchantment(Enchantment.DAMAGE_ALL, 3); zombie.getEquipment().setItemInHand(sword); org.bukkit.inventory.ItemStack skull = new org.bukkit.inventory.ItemStack(397); skull.setDurability(((short) (3))); org.bukkit.inventory.meta.SkullMeta meta = ((org.bukkit.inventory.meta.SkullMeta) (skull.getItemMeta())); meta.setOwner(\"MHF_Enderman\"); skull.setItemMeta(meta); zombie.getEquipment().setHelmet(skull); enderdragon.setCustomName(((org.bukkit.ChatColor.DARK_PURPLE) + \"Charge Zombie III\")); enderdragon.setMaxHealth(200); enderdragon.setHealth(200); enderdragon.remove(); zombie.setRemoveWhenFarAway(false); zombie.setMaxHealth(300); zombie.setHealth(300); zombie.addPotionEffect(new org.bukkit.potion.PotionEffect(org.bukkit.potion.PotionEffectType.NIGHT_VISION, 999999, 0)); zombie.addPotionEffect(new org.bukkit.potion.PotionEffect(org.bukkit.potion.PotionEffectType.FIRE_RESISTANCE, 999999, 0)); zombie.addPotionEffect(new org.bukkit.potion.PotionEffect(org.bukkit.potion.PotionEffectType.WATER_BREATHING, 999999, 0)); zombie.setTicksLived(1); } effects.remove(); } } catch (java.util.ConcurrentModificationException ex_e) { org.bukkit.Bukkit.getLogger().warning(\"Potion Effect Collection not accessible while trying to hurt entity.\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/4948/buggy-version/BankEconomyMod.src.me.kaZep.Base.PlayerListener.java", "BodyUseAPI": ["org.bukkit.event.entity.EntityDamageByEntityEvent.setDamage(((e.getDamage()) * 0.065))", "e.getEntity().getLocation()", "org.bukkit.event.entity.EntityDamageByEntityEvent.setDamage(((e.getDamage()) * 0.045))", "org.bukkit.event.entity.EntityDamageByEntityEvent.getDamage()", "org.bukkit.event.entity.EntityDamageByEntityEvent.getDamage()", "org.bukkit.Bukkit.getWorld(\"world\").spawnEntity(e.getEntity().getLocation(),EntityType.ENDER_DRAGON)", "e.getEntity().getLocation()", "org.bukkit.event.entity.EntityDamageByEntityEvent.getEntity()", "org.bukkit.Bukkit.getWorld(\"world\").spawnEntity(e.getEntity().getLocation(),EntityType.ZOMBIE)", "org.bukkit.event.entity.EntityDamageByEntityEvent.getEntity()"], "Fixed commit": "1d48d639e8261ce2213b09e6cf1293d73bc279b8", "Url": "https://api.github.com/repos/sigonasr2/SigMinecraft", "Date": "2013-11-23T11:11:29Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((customerTable.getSelectedRow()) > (-1)) { customerIndex = customerTable.convertRowIndexToModel(customerTable.getSelectedRow()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/1972/buggy-version/src.main.java.pl.UserMasterPanel.java", "BodyUseAPI": ["javax.swing.JTable.convertRowIndexToModel(int)", "javax.swing.JTable.getSelectedRow()"], "Fixed commit": "0a1a063e2b0e9575d6a9adf9944cae56b80c6b3e", "Url": "https://api.github.com/repos/manuelroth/gadgetothek-desktop", "Date": "2014-11-26T21:37:48Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(percentageText.getText().toString().equals(\"\"))) && (!(numberText.getText().toString().equals(\"\")))) { float percentage = java.lang.Float.parseFloat(percentageText.getText().toString()); float decimal = percentage / 100; float total = decimal * (java.lang.Float.parseFloat(numberText.getText().toString())); totalTextView.setText(java.lang.Float.toString(total)); }else totalTextView.setText(java.lang.Integer.toString(0));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/4265/buggy-version/app.src.main.java.com.adam.percentagecalculator.MainActivity.java", "BodyUseAPI": ["numberText.getText().toString()", "java.lang.Float.parseFloat(numberText.getText().toString())", "percentageText.getText().toString()", "android.widget.EditText.getText()", "android.widget.EditText.getText()", "java.lang.Float.parseFloat(percentageText.getText().toString())"], "Fixed commit": "bb897457cba9a370cf2bcff8b48ccf359c5f4d59", "Url": "https://api.github.com/repos/adamjenkins1/Percentage-Calculator", "Date": "2016-02-25T22:55:22Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getActivity().getContentResolver().query(AlexandriaContract.BookEntry.buildFullBookUri(java.lang.Long.parseLong(ean)),<nulltype>,<nulltype>,<nulltype>,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (cursor.moveToFirst()) { bookTitle = cursor.getString(cursor.getColumnIndex(AlexandriaContract.BookEntry.TITLE)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/3636/buggy-version/app.src.main.java.it.jaschke.alexandria.BookDetail.java", "BodyUseAPI": ["android.database.Cursor.getString(cursor.getColumnIndex(AlexandriaContract.BookEntry.TITLE))", "android.database.Cursor.getColumnIndex(AlexandriaContract.BookEntry.TITLE)"], "Fixed commit": "30bf39cbb20e053c8d7e59a70dd831a8ec2bf663", "Url": "https://api.github.com/repos/luisfnicolau/alexandria", "Date": "2015-12-29T00:18:00Z"},
{"Line": "=>574", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isDateSelectable(date))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/2874/buggy-version/library.src.main.java.com.squareup.timessquare.CalendarPickerView.java", "BodyUseAPI": [], "Fixed commit": "9adff5625fb88e475238129e5f9302a6e29b5c54", "Url": "https://api.github.com/repos/niqo01/android-times-square", "Date": "2016-12-21T22:13:10Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mage.target.Targets.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (target.getFirstTarget().equals(source.getSourceId())) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/2968/buggy-version/Mage.src.main.java.mage.abilities.effects.common.ChangeATargetOfTargetSpellAbilityToSourceEffect.java", "BodyUseAPI": [], "Fixed commit": "4f2c21a146e9bfc801d239a03fbda80a588e196c", "Url": "https://api.github.com/repos/marthinwurer/mage", "Date": "2016-01-02T15:31:42Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (m_date.toString().equals(\"\")) return \"\"; else if (m_time.toString().equals(\"\")) return m_date.toString(); else return ((m_date.toString()) + \" \") + (m_time.toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/8452/buggy-version/src.main.java.seedu.dailyplanner.model.task.DateTime.java", "BodyUseAPI": ["seedu.dailyplanner.model.task.Date.toString()", "seedu.dailyplanner.model.task.Date.toString()"], "Fixed commit": "d8eda011f3842e8f77f4569a2b358c756d7ba6bf", "Url": "https://api.github.com/repos/CS2103AUG2016-F11-C4/main", "Date": "2016-11-07T07:30:02Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (authResult) mNetworkRequester.getAlbum(graphQlQuery, this, authCookie);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/7453/buggy-version/app.src.main.java.com.demos.henrique.waldophotos.UI.Fragments.PhotoFragment.java", "BodyUseAPI": [], "Fixed commit": "f40ba4f68b8e471445466f8078149ee40f3c2904", "Url": "https://api.github.com/repos/hcmsilva/WaldoPhotoAlbum", "Date": "2016-12-03T19:31:14Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (weight < (-10000)) { throw new java.security.InvalidParameterException(\"The voting weight can't be lower than -10000 which is equivalent to -100%.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/8300/buggy-version/core.src.main.java.eu.bittrade.libs.steemj.base.models.operations.VoteOperation.java", "BodyUseAPI": [], "Fixed commit": "7417d67e120005bd9ff89c3be1b416d4f204b3ea", "Url": "https://api.github.com/repos/marvin-we/steem-java-api-wrapper", "Date": "2017-09-23T17:49:51Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(_format.shouldAdjustToContextTimeZone(ctxt))) { return _format.createParser(ctxt).parseDateTime(str).withZone(tz); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/7376/buggy-version/src.main.java.com.fasterxml.jackson.datatype.joda.deser.DateTimeDeserializer.java", "BodyUseAPI": ["com.fasterxml.jackson.datatype.joda.deser.DateTimeDeserializer.createParser(com.fasterxml.jackson.databind.DeserializationContext)", "_format.createParser(ctxt).parseDateTime(str).withZone(org.joda.time.DateTimeZone)", "_format.createParser(ctxt).parseDateTime(java.lang.String)"], "Fixed commit": "4ff08876281db0b02e5427eaf4813644f1e2ea66", "Url": "https://api.github.com/repos/FasterXML/jackson-datatype-joda", "Date": "2017-07-20T06:32:25Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) != null) { getActivity().getFragmentManager().popBackStack(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/8005/buggy-version/app.src.main.java.ua.darkstar.reminder.SplashFragment.java", "BodyUseAPI": [], "Fixed commit": "bbae673b4a488b675b0023e875865bbfbfcdd767", "Url": "https://api.github.com/repos/DarkstarBSD/androidMaterialDesignTestApp", "Date": "2015-09-15T11:18:46Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((record.getThrown().getMessage()) != null) { if (record.getThrown().getMessage().contains(\"ProjectKorra\")) { return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/2710/buggy-version/src.com.projectkorra.ProjectKorra.Utilities.logging.ErrorLogFilter.java", "BodyUseAPI": ["java.util.logging.LogRecord.getThrown()", "java.lang.String.contains(java.lang.String)", "java.lang.Throwable.getMessage()"], "Fixed commit": "923cfaf439d16ca7489da206af0fc82b383ddda0", "Url": "https://api.github.com/repos/jacklin213/ProjectKorra", "Date": "2015-06-21T06:36:31Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((me.eddiep.minecraft.ls.game.Gamemode.physicsListener) != null) me.eddiep.minecraft.ls.game.Gamemode.physicsListener.cleanup();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/5671/buggy-version/Lavasurvival.src.main.java.me.eddiep.minecraft.ls.game.Gamemode.java", "BodyUseAPI": [], "Fixed commit": "0827b7148069faa304d56f3660f485e254bc61e5", "Url": "https://api.github.com/repos/pupnewfster/Lavasurvival", "Date": "2015-12-20T03:06:20Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((me.eddiep.minecraft.ls.game.Gamemode.listener) != null) me.eddiep.minecraft.ls.game.Gamemode.listener.cleanup();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/5671/buggy-version/Lavasurvival.src.main.java.me.eddiep.minecraft.ls.game.Gamemode.java", "BodyUseAPI": [], "Fixed commit": "0827b7148069faa304d56f3660f485e254bc61e5", "Url": "https://api.github.com/repos/pupnewfster/Lavasurvival", "Date": "2015-12-20T03:06:20Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["src.io.view.Viewport.getColorContents()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((colors[i][j]) != null) { colorChar(i, j, colors[i][j]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/3632/buggy-version/src.src.io.view.Display.java", "BodyUseAPI": ["src.io.view.Display.colorChar(int,int,java.awt.Color)"], "Fixed commit": "dfd6e14dcb67a1dba7d56be7c4a3473bc4f6299b", "Url": "https://api.github.com/repos/JohnReedLOL/Nineteen_Characters", "Date": "2015-03-05T01:32:05Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(e.isInParty())) { party.add(e); e.setParty(true, bgColor); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/8295/buggy-version/core.src.com.mygdx.dnd.Entity.java", "BodyUseAPI": ["com.mygdx.dnd.Entity.setParty(boolean,java.awt.Color)", "java.util.ArrayList<com.mygdx.dnd.Entity>.add(com.mygdx.dnd.Entity)"], "Fixed commit": "a66df60af3e141e99aabe25260616d891d025c46", "Url": "https://api.github.com/repos/daggad95/DND", "Date": "2016-11-16T03:03:38Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uk.ac.manchester.cs.owl.semspreadsheets.model.hssf.impl.PatchedPoi.1.getStringFromPtgTokens(f2.getTokens(),org.apache.poi.hssf.usermodel.HSSFWorkbook)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(formula2.isEmpty())) { int comparison = dvRecord.getConditionOperator(); org.apache.poi.hssf.usermodel.DVConstraint dvConstraint = org.apache.poi.hssf.usermodel.DVConstraint.createNumericConstraint(validationType, comparison, formula1, formula2); org.apache.poi.hssf.usermodel.HSSFDataValidation validation = new org.apache.poi.hssf.usermodel.HSSFDataValidation(cellRangeAddressList, dvConstraint); dataValidation.add(validation); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/6176/buggy-version/src.main.java.uk.ac.manchester.cs.owl.semspreadsheets.model.hssf.impl.PatchedPoi.java", "BodyUseAPI": ["org.apache.poi.hssf.usermodel.DVConstraint.createNumericConstraint(int,int,java.lang.String,java.lang.String)"], "Fixed commit": "de46849ee0acac1a1a67a8c17f9734f032a482a6", "Url": "https://api.github.com/repos/stuzart/RightField", "Date": "2013-02-19T16:12:08Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.cloudml.deployer2.workflow.util.Element.getTarget()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(delayedNodes.contains(target))) delayedNodes.add(target);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/5385/buggy-version/deployer2.src.main.java.org.cloudml.deployer2.workflow.util.ParallelBFS.java", "BodyUseAPI": ["java.util.List<org.cloudml.deployer2.workflow.util.Element>.add(org.cloudml.deployer2.workflow.util.ActivityNode)"], "Fixed commit": "f82c27179d9499f5c176d7b8d22a2553e9b594fb", "Url": "https://api.github.com/repos/SINTEF-9012/cloudml", "Date": "2015-05-20T22:12:13Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getJSONArray(C.HourlyForeCast)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((hourlyForecastArray.length()) == 0) { items.remove(object); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/289/buggy-version/app.src.main.java.com.yueyalan.weather.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "ebd26e5f5f2dd0f762247a7aefe3c203964e0e17", "Url": "https://api.github.com/repos/AndroidHot/weather", "Date": "2017-04-10T15:53:57Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event.getCurrentItem()) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/2705/buggy-version/src.bl4ckscor3.plugin.animalessentials.cmd.Spawn.java", "BodyUseAPI": [], "Fixed commit": "aecfb0efcb6918e43ade0fc0fcd44c3f7a2ba44b", "Url": "https://api.github.com/repos/Raqbit/AnimalEssentials", "Date": "2015-08-15T19:57:37Z"},
{"Line": "=>388", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.mkdirs()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!mkdir) { java.lang.System.err.println((\"Unable to mkdir \" + (destFile.getParentFile()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/613/buggy-version/matlabcontrol.src.matlabcontrol.link.InvocationInfo.java", "BodyUseAPI": [], "Fixed commit": "2e111c18e26c48a4bae64ecd615dfb66ce0cecf7", "Url": "https://api.github.com/repos/diffplug/matconsolectl", "Date": "2015-10-07T21:49:35Z"},
{"Line": "=>372", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.mkdirs()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!mkdir) { java.lang.System.err.println((\"Unable to mkdir \" + destDir)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/613/buggy-version/matlabcontrol.src.matlabcontrol.link.InvocationInfo.java", "BodyUseAPI": [], "Fixed commit": "2e111c18e26c48a4bae64ecd615dfb66ce0cecf7", "Url": "https://api.github.com/repos/diffplug/matconsolectl", "Date": "2015-10-07T21:49:35Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.delete()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!deleted) { java.lang.System.err.println((\"unable to delete \" + (sortedFiles.get(i)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/613/buggy-version/matlabcontrol.src.matlabcontrol.link.InvocationInfo.java", "BodyUseAPI": [], "Fixed commit": "2e111c18e26c48a4bae64ecd615dfb66ce0cecf7", "Url": "https://api.github.com/repos/diffplug/matconsolectl", "Date": "2015-10-07T21:49:35Z"},
{"Line": "=>601", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (permissionIds.contains(FrameworkConstants.PER_RELESE_REPO)) { permissions.setReleseRepo(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/6701/buggy-version/phresco-framework-web.src.main.java.com.photon.phresco.framework.commons.FrameworkUtil.java", "BodyUseAPI": [], "Fixed commit": "d53d86881ed5952612a69a87f040f7544fef15e8", "Url": "https://api.github.com/repos/photon-infotech/framework", "Date": "2014-04-21T14:37:03Z"},
{"Line": "=>597", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (permissionIds.contains(FrameworkConstants.PER_MANAGE_DASH)) { permissions.setManageDash(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/6701/buggy-version/phresco-framework-web.src.main.java.com.photon.phresco.framework.commons.FrameworkUtil.java", "BodyUseAPI": [], "Fixed commit": "d53d86881ed5952612a69a87f040f7544fef15e8", "Url": "https://api.github.com/repos/photon-infotech/framework", "Date": "2014-04-21T14:37:03Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["br.ufpe.cin.preprocessor.ContextManagerContribution.getMapClassesLineNumbers()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (mapClassesLineNumbers.isEmpty()) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/269/buggy-version/Salvum.src.br.ufpe.cin.analyses.Main.java", "BodyUseAPI": [], "Fixed commit": "433c42d79c8d10cec15f0728a12b1ef91fda88aa", "Url": "https://api.github.com/repos/rcaa/Salvum", "Date": "2015-12-07T18:37:32Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((noOptionsFactory.getSchemaIdResolver()) == null) { noOptionsFactory.setSchemaIdResolver(new com.siemens.ct.exi.helpers.DefaultSchemaIdResolver()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/247/buggy-version/src.main.java.com.siemens.ct.exi.api.sax.SAXDecoder.java", "BodyUseAPI": [], "Fixed commit": "7fbe2da2197d85b3948822ff320e7b9cf3790d65", "Url": "https://api.github.com/repos/EXIficient/exificient", "Date": "2016-02-29T14:54:01Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((noOptionsFactory.getSchemaIdResolver()) == null) { noOptionsFactory.setSchemaIdResolver(new com.siemens.ct.exi.helpers.DefaultSchemaIdResolver()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/247/buggy-version/src.main.java.com.siemens.ct.exi.api.stream.StAXDecoder.java", "BodyUseAPI": [], "Fixed commit": "7fbe2da2197d85b3948822ff320e7b9cf3790d65", "Url": "https://api.github.com/repos/EXIficient/exificient", "Date": "2016-02-29T14:54:01Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isPlaying()) { handler.postDelayed(this, 100); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/752/buggy-version/app.src.main.java.ch.hsr.challp.museum.ContentActivity.java", "BodyUseAPI": [], "Fixed commit": "f67515500f07c298ea02b381dbf184e8cada3c15", "Url": "https://api.github.com/repos/HSR-Challenge-Projekt-2014/AndroidApp", "Date": "2014-11-14T10:29:50Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((index) < (stringsToSpeech.size())) { tts.speak(stringsToSpeech.get(index), TextToSpeech.QUEUE_FLUSH, null); (index)++; }else { isPlaying = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/752/buggy-version/app.src.main.java.ch.hsr.challp.museum.ContentActivity.java", "BodyUseAPI": ["java.util.List<java.lang.String>.get(int)", "android.speech.tts.TextToSpeech.speak(java.lang.String,TextToSpeech.QUEUE_FLUSH,<nulltype>)"], "Fixed commit": "f67515500f07c298ea02b381dbf184e8cada3c15", "Url": "https://api.github.com/repos/HSR-Challenge-Projekt-2014/AndroidApp", "Date": "2014-11-14T10:29:50Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (gui) { new aphelion.client.ErrorDialog().setErrorText(ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/3250/buggy-version/src.main.java.aphelion.server.AphelionServerThread.java", "BodyUseAPI": [], "Fixed commit": "f062a6a78f0bddb0abd791b870081b7741aafd85", "Url": "https://api.github.com/repos/Periapsis/aphelion", "Date": "2013-10-05T18:06:04Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_mySock) != null) { msg.append(\" Socket.isClosed(): \").append(_mySock.isClosed()); }else { msg.append(\" _mySock is null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/554/buggy-version/src.opendap.ppt.NewPPTClient.java", "BodyUseAPI": [], "Fixed commit": "92e4f73a096bb8e5e5b24f159fadc22e1bc63aeb", "Url": "https://api.github.com/repos/OPENDAP/olfs", "Date": "2015-12-29T22:29:46Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(isResumed())) || ((getActivity()) == null)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/6768/buggy-version/src.main.java.com.anysoftkeyboard.ui.settings.setup.WizardPageBaseFragment.java", "BodyUseAPI": [], "Fixed commit": "942c4f028764869196b80c3573897a5fe6bd234a", "Url": "https://api.github.com/repos/AnySoftKeyboard/AnySoftKeyboard", "Date": "2016-04-05T15:52:02Z"},
{"Line": "=>535", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (name == null) { android.content.SharedPreferences pref = android.preference.PreferenceManager.getDefaultSharedPreferences(ctx); name = pref.getString(\"advancedWorkout\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/7885/buggy-version/src.org.runnerup.view.StartActivity.java", "BodyUseAPI": [], "Fixed commit": "d10b3e91d8f2406deabd75a2ddf7a16ecec9e9b3", "Url": "https://api.github.com/repos/jonasoreland/runnerup", "Date": "2013-05-16T17:49:45Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mGegenBuchung) != null) { mGegenBuchung.insert(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/2532/buggy-version/app.src.main.java.de.aw.gv.CashUmsatz.java", "BodyUseAPI": [], "Fixed commit": "51bb56578323006cf813a99ed82127859d381097", "Url": "https://api.github.com/repos/gitwalex/MonMa", "Date": "2015-07-14T09:56:15Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getContentResolver().query(tbd.getUri(),java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (c.moveToFirst()) { java.lang.String updateSelection = (tbd.columnName(R.string._id)) + \" = ? \"; android.content.ContentValues cv = new android.content.ContentValues(); java.lang.String columnSaldo = getString(R.string.column_saldo); int indexID = c.getColumnIndexOrThrow(getString(R.string._id)); int indexAmount = c.getColumnIndexOrThrow(getString(R.string.column_amount)); java.lang.String[] updateSelectionArgs; do { java.lang.Long id = c.getLong(indexID); saldo += c.getLong(indexAmount); cv.put(columnSaldo, saldo); updateSelectionArgs = new java.lang.String[]{ id.toString() }; getContentResolver().update(tbd.getUri(), cv, updateSelection, updateSelectionArgs); } while (c.moveToNext() ); tbd.notifyCursors(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/2532/buggy-version/app.src.main.java.de.aw.event.MonMaEventService.java", "BodyUseAPI": ["android.database.Cursor.getColumnIndexOrThrow(getString(R.string.column_amount))", "android.database.Cursor.getColumnIndexOrThrow(getString(R.string._id))", "android.database.Cursor.moveToNext()", "android.database.Cursor.getLong(int)", "android.database.Cursor.getLong(int)"], "Fixed commit": "51bb56578323006cf813a99ed82127859d381097", "Url": "https://api.github.com/repos/gitwalex/MonMa", "Date": "2015-07-14T09:56:15Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((i < (shapedRecipes.recipeWidth)) && (j < (shapedRecipes.recipeHeight))) { com.mcjty.gui.RenderHelper.renderObject(mc, ((26 + x) + (i * 18)), ((1 + y) + (j * 18)), shapedRecipes.recipeItems[(i + (j * 3))], false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/5732/buggy-version/src.main.java.com.mcjty.gui.widgets.TextPage.java", "BodyUseAPI": ["com.mcjty.gui.RenderHelper.renderObject(com.mcjty.gui.widgets.TextPage,int,int,shapedRecipes.recipeItems[(i + (j * 3))],boolean)"], "Fixed commit": "e1fd12052eebabbb46d0a008430ff35c6a27c57d", "Url": "https://api.github.com/repos/Gideonseymour/RFTools", "Date": "2015-02-26T19:44:43Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.cricketcraft.chisel.Configurations.featureEnabled(\"warningSign\")) { cpw.mods.fml.common.registry.GameRegistry.addRecipe(new net.minecraftforge.oredict.ShapedOreRecipe(new net.minecraft.item.ItemStack(com.cricketcraft.chisel.init.ModBlocks.sign, 4, 0), new java.lang.Object[]{ \"xxx\", \"xyx\", \"xxx\", 'x', \"stone\", 'y', net.minecraft.init.Items.sign })); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/644/buggy-version/src.main.java.com.cricketcraft.chisel.Crafting.java", "BodyUseAPI": [], "Fixed commit": "39e1c8ce7b5325920590263dcdcf403ee0acf003", "Url": "https://api.github.com/repos/TheCricket/Chisel-2", "Date": "2014-12-24T17:31:21Z"},
{"Line": "=>273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (metricOptions.contains(\"--all\")) { metrics = java.util.Arrays.asList(MetricCollection.AllMetrics); defaultMetrics = true; }else { metrics = metricOptions.getOptions(\"-metrics\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/3901/buggy-version/librec.src.main.java.librec.intf.Recommender.java", "BodyUseAPI": [], "Fixed commit": "a4e0ced345563bfa7eeba1b4bcf59ab707242191", "Url": "https://api.github.com/repos/guoguibing/librec", "Date": "2016-08-05T20:10:46Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (not) { inner.put(\"$not\", new com.mongodb.BasicDBObject(operator.val(), value)); }else { inner.put(operator.val(), value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/5161/buggy-version/morphia.src.main.java.org.mongodb.morphia.query.FieldCriteria.java", "BodyUseAPI": [], "Fixed commit": "c150e60c37b49bc73e7ff424e61de9ac299bc362", "Url": "https://api.github.com/repos/mongodb/morphia", "Date": "2014-06-10T18:55:29Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (not) { obj.put(field, new com.mongodb.BasicDBObject(\"$not\", value)); }else { obj.put(field, value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/5161/buggy-version/morphia.src.main.java.org.mongodb.morphia.query.FieldCriteria.java", "BodyUseAPI": [], "Fixed commit": "c150e60c37b49bc73e7ff424e61de9ac299bc362", "Url": "https://api.github.com/repos/mongodb/morphia", "Date": "2014-06-10T18:55:29Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((startPoint.y) < ((numberOfRects) * (rectSize))) { yIndex = (startPoint.y) / (rectSize); }else { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/8014/buggy-version/app.src.main.java.darena13.puzzlefactory.PlayActivityPresenter.java", "BodyUseAPI": [], "Fixed commit": "5aeff33b5b20817b8e267af0d36510eed731fc7d", "Url": "https://api.github.com/repos/darena13/PuzzleFactory", "Date": "2017-09-16T00:39:12Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentEpochNumber) != (epochNumber)) { throw new java.util.ConcurrentModificationException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/136/buggy-version/homework-g595-romanenko.src.main.java.ru.mipt.java2016.homework.g595.romanenko.task2.MyKeyValueStorage.java", "BodyUseAPI": [], "Fixed commit": "70719961807ec6b7160a588733c93dbfe78cd3f9", "Url": "https://api.github.com/repos/IlRomanenko/mipt-java-2016", "Date": "2016-10-26T18:20:13Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(value instanceof java.util.Collection<?>)) value = java.util.Arrays.asList(value);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/702/buggy-version/core.src.main.java.com.orientechnologies.orient.core.sql.functions.coll.OSQLFunctionIntersect.java", "BodyUseAPI": ["java.util.Arrays.asList(java.lang.Object)"], "Fixed commit": "bef2e74a27d9399efb167614c06466d06050f4d7", "Url": "https://api.github.com/repos/fabriziofortino/orientdb", "Date": "2013-01-08T16:28:21Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (world == null) { for (org.bukkit.World w : org.bukkit.Bukkit.getServer().getWorlds()) booleanCmd(com.nitnelave.CreeperHeal.config.CreeperConfig.getWorld(w), key, args, setting, sender); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/8451/buggy-version/src.main.java.com.nitnelave.CreeperHeal.command.CreeperCommandManager.java", "BodyUseAPI": [], "Fixed commit": "558a1634b9e925621bc65f814a54ecfbe8f02a10", "Url": "https://api.github.com/repos/nitnelave/CreeperHeal", "Date": "2013-06-12T17:07:14Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toLowerCase()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (osName.startsWith(\"win\")) { data.width = 100; data.height = 20; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/5345/buggy-version/xstampp.src.xstampp.usermanagement.ui.contribution.UserContribution.java", "BodyUseAPI": [], "Fixed commit": "dbfeb6f29df87193c8b52e9ac4b7d2a4206c1b3e", "Url": "https://api.github.com/repos/SE-Stuttgart/XSTAMPP", "Date": "2017-11-22T09:04:32Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.Cursor.getString(browserBookmarkCur.getColumnIndex(Browser.BookmarkColumns.URL))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (url == null) { browserBookmarkCur.moveToNext(); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/4324/buggy-version/src.com.parent.management.monitor.BrowserBookmarkMonitor.java", "BodyUseAPI": [], "Fixed commit": "e3eca118570d0b7ded1f218594c2fb6567f3f86c", "Url": "https://api.github.com/repos/GloriaGuo/Management", "Date": "2013-04-13T08:04:14Z"},
{"Line": "=>491", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((clerk.processReturn(receiptId, rupc, quantity)) == 0) { mvb.updateStatusBar(\"Database error\"); return ca.ubc.cs304.tables.ClerkController.OPERATIONFAILED; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/2919/buggy-version/db-2012-project.src.ca.ubc.cs304.tables.ClerkController.java", "BodyUseAPI": [], "Fixed commit": "e39dda5c1253250505a91d7b0f82d947612da43d", "Url": "https://api.github.com/repos/nothingherenow/db-2012-project", "Date": "2012-07-31T23:23:41Z"},
{"Line": "=>484", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((clerk.checkReturn(receiptId)) != true) { mvb.updateStatusBar(\"Invalid Receipt ID\"); return ca.ubc.cs304.tables.ClerkController.OPERATIONFAILED; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/2919/buggy-version/db-2012-project.src.ca.ubc.cs304.tables.ClerkController.java", "BodyUseAPI": [], "Fixed commit": "e39dda5c1253250505a91d7b0f82d947612da43d", "Url": "https://api.github.com/repos/nothingherenow/db-2012-project", "Date": "2012-07-31T23:23:41Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (split[0].equalsIgnoreCase(\"0\")) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/5864/buggy-version/src.net.arcanerealm.arcanelib.ItemSLAPI.java", "BodyUseAPI": [], "Fixed commit": "db7291a8cfcd20f1d42a6efe47211d197c2e42af", "Url": "https://api.github.com/repos/exload/ArcaneLib", "Date": "2013-11-09T07:24:28Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (io.bananalabs.dailyrandom.Utilities.isOnline(v.getContext())) { performSearch(); android.view.inputmethod.InputMethodManager imm = ((android.view.inputmethod.InputMethodManager) (getActivity().getSystemService(Context.INPUT_METHOD_SERVICE))); imm.hideSoftInputFromWindow(mRadiusText.getWindowToken(), 0); }else { android.widget.Toast.makeText(v.getContext(), R.string.no_network, Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/5358/buggy-version/app.src.main.java.io.bananalabs.dailyrandom.activity.HelpMeElementActivity.java", "BodyUseAPI": ["android.widget.Toast.makeText(v.getContext(),R.string.no_network,Toast.LENGTH_SHORT)", "android.widget.Toast.makeText(v.getContext(), R.string.no_network, Toast.LENGTH_SHORT).show()", "android.view.View.getContext()"], "Fixed commit": "ad5d48f0beca101c906e08865c342feec3bb5ba8", "Url": "https://api.github.com/repos/otsenreDC/daily-random", "Date": "2015-06-13T20:19:43Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (typeChosen.equals(\"request\")) { chosenPacket = 0; }else { java.lang.System.out.print(\"Choose an integer number for which packet to lose:\"); chosenPacket = scan.nextInt(); java.lang.System.out.print(\"Choose side to implement(client or server)\"); side = scan.next(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/432/buggy-version/ProjectMain.src.Intermediate.java", "BodyUseAPI": [], "Fixed commit": "e410afa7f77dca8de01e3f31fad3f7a0df9ef8f6", "Url": "https://api.github.com/repos/darshgrewal/ProjectMain", "Date": "2016-12-03T23:51:58Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (packetNo > 2500) { packetNo = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/432/buggy-version/ProjectMain.src.Intermediate.java", "BodyUseAPI": [], "Fixed commit": "e410afa7f77dca8de01e3f31fad3f7a0df9ef8f6", "Url": "https://api.github.com/repos/darshgrewal/ProjectMain", "Date": "2016-12-03T23:51:58Z"},
{"Line": "=>433", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (data != null) { curBundle = data.getExtras(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/529/buggy-version/src.com.buzzwords.TurnSummary.java", "BodyUseAPI": ["android.content.Intent.getExtras()"], "Fixed commit": "75c558cc6ded41da6914a53bc9c9a8e65bccde0a", "Url": "https://api.github.com/repos/siramix/buzzwords", "Date": "2011-08-11T01:16:16Z"},
{"Line": "=>360", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (copyRetentionRule.isIgnoreActivePeriod()) { niceTitle.append($(\"DetailsFieldGroup.ignoreActivePeriod\")); niceTitle.append(\":\"); niceTitle.append($((\"\" + (copyRetentionRule.isIgnoreActivePeriod())))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/3217/buggy-version/app.src.com.constellio.app.modules.rm.ui.components.retentionRule.FolderCopyRetentionRuleTable.java", "BodyUseAPI": ["java.lang.StringBuilder.append($((\"\" + (copyRetentionRule.isIgnoreActivePeriod()))))", "com.constellio.app.modules.rm.ui.components.retentionRule.FolderCopyRetentionRuleTable.$((\"\" + (copyRetentionRule.isIgnoreActivePeriod())))", "com.constellio.app.modules.rm.model.CopyRetentionRule.isIgnoreActivePeriod()"], "Fixed commit": "cf04dd59642c44332fb5ed9641bb415f1d8bf2d8", "Url": "https://api.github.com/repos/doculibre/constellio", "Date": "2017-03-31T15:39:45Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (receiver)) { unregisterReceiver(receiver); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/1152/buggy-version/PocketMarketing.src.net.jsiq.marketing.activity.BaseActivity.java", "BodyUseAPI": [], "Fixed commit": "992598546ba9ae3caf5858c8ab58f00f58df76bb", "Url": "https://api.github.com/repos/onecoders/ViewPageIndicator", "Date": "2013-11-13T07:51:12Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (receiver)) { registerReceiver(receiver, filter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/1152/buggy-version/PocketMarketing.src.net.jsiq.marketing.activity.BaseActivity.java", "BodyUseAPI": [], "Fixed commit": "992598546ba9ae3caf5858c8ab58f00f58df76bb", "Url": "https://api.github.com/repos/onecoders/ViewPageIndicator", "Date": "2013-11-13T07:51:12Z"},
{"Line": "=>1108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (success && doAdd) { forestry.core.inventory.InvTools.addStack(inventory, stack, startSlot, slots, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/3160/buggy-version/src.main.java.forestry.core.inventory.InvTools.java", "BodyUseAPI": [], "Fixed commit": "27b9b7bc57a727233e67994a4c515d42b7a15f3e", "Url": "https://api.github.com/repos/ForestryMC/ForestryMC", "Date": "2015-09-27T06:06:38Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (object instanceof java.lang.Short) { string = object.toString(); }else if (object instanceof java.lang.Double) { string = object.toString(); }else if (object instanceof java.util.Date) { java.util.Date date = ((java.util.Date) (object)); string = java.lang.Long.toString(date.getTime()); }else { string = this.toJson(object); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/9119/buggy-version/src.main.java.com.github.jeromerocheteau.JdbcServlet.java", "BodyUseAPI": ["java.lang.Object.toString()", "java.lang.Object.toString()", "com.github.jeromerocheteau.JdbcServlet.toJson(java.lang.Object)"], "Fixed commit": "5842f016aa81bc11c7d129a793ff20cfe91aed1c", "Url": "https://api.github.com/repos/JeromeRocheteau/jdbc-servlet-api", "Date": "2017-03-03T15:00:06Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((daoSession.getEspecimenColectorSecundarioDao().queryBuilder().where(EspecimenColectorSecundarioDao.Properties.EspecimenID.eq(especimenColectorSecundario.getEspecimenID())).where(EspecimenColectorSecundarioDao.Properties.ColectorSecundarioID.eq(especimenColectorSecundario.getColectorSecundarioID())).count()) == 0) { daoSession.getEspecimenColectorSecundarioDao().insert(especimenColectorSecundario); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/9085/buggy-version/Plantae.src.main.java.edu.udistrital.plantae.logicadominio.recoleccion.Viaje.java", "BodyUseAPI": ["daoSession.getEspecimenColectorSecundarioDao().insert(edu.udistrital.plantae.logicadominio.datosespecimen.EspecimenColectorSecundario)", "edu.udistrital.plantae.persistencia.DaoSession.getEspecimenColectorSecundarioDao()"], "Fixed commit": "a2023420e5895fe1de7632ffbfbb5985ff755d9f", "Url": "https://api.github.com/repos/gersonsosa/plantae", "Date": "2015-06-03T08:01:08Z"},
{"Line": "=>453", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.gridgain.grid.kernal.processors.cache.GridOffHeapProcessor.remove(java.lang.String,int,K,byte[])"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((entryBytes[0]) != 114) org.gridgain.grid.kernal.processors.cache.U.debug((\"readAndRemoveFailure: \" + (java.util.Arrays.toString(entryBytes))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/1569/buggy-version/modules.core.src.main.java.org.gridgain.grid.kernal.processors.cache.GridCacheSwapManager.java", "BodyUseAPI": ["org.gridgain.grid.kernal.processors.cache.U.debug(java.lang.String)", "java.util.Arrays.toString(byte[])"], "Fixed commit": "265ddbf698a3f75187b8e6f38123999d934dda52", "Url": "https://api.github.com/repos/gridgain/gridgain", "Date": "2014-04-17T06:25:51Z"},
{"Line": "=>1175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((valBytes != (org.gridgain.grid.util.offheap.unsafe.GridUnsafeMap.EMPTY_BYTES)) && ((valBytes[0]) != 114)) { int hash0 = mem.readInt(cur); int keySize0 = mem.readInt((cur + 4)); int valSize0 = mem.readInt((cur + 8)); byte[] keyBytes0 = mem.readBytes((cur + 28), keySize0); byte[] valBytes0 = mem.readBytes(((cur + 28) + keySize0), valSize0); java.lang.System.out.println(((((((((hash0 + \" \") + keySize0) + \" \") + valSize0) + \" \") + (java.util.Arrays.toString(keyBytes0))) + \" \") + (java.util.Arrays.toString(valBytes0)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/1569/buggy-version/modules.core.src.main.java.org.gridgain.grid.util.offheap.unsafe.GridUnsafeMap.java", "BodyUseAPI": [], "Fixed commit": "265ddbf698a3f75187b8e6f38123999d934dda52", "Url": "https://api.github.com/repos/gridgain/gridgain", "Date": "2014-04-17T06:25:51Z"},
{"Line": "=>1164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (retval) { int valLen = org.gridgain.grid.util.offheap.unsafe.GridUnsafeMap.Entry.valueLength(cur, mem); valBytes = mem.readBytes(((cur + (org.gridgain.grid.util.offheap.unsafe.GridUnsafeMap.Entry.HEADER)) + (keyBytes.length)), valLen); }else { valBytes = org.gridgain.grid.util.offheap.unsafe.GridUnsafeMap.EMPTY_BYTES; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/1569/buggy-version/modules.core.src.main.java.org.gridgain.grid.util.offheap.unsafe.GridUnsafeMap.java", "BodyUseAPI": [], "Fixed commit": "265ddbf698a3f75187b8e6f38123999d934dda52", "Url": "https://api.github.com/repos/gridgain/gridgain", "Date": "2014-04-17T06:25:51Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (BuildConfig.HAS_TRACKING) { io.fabric.sdk.android.Fabric.with(this, new com.crashlytics.android.Crashlytics()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/959/buggy-version/app.src.main.java.org.toulibre.cdl.CdlApplication.java", "BodyUseAPI": [], "Fixed commit": "c02a98bb3e28f9a7daa7c316029167b803ce460a", "Url": "https://api.github.com/repos/capitoledulibre/cdl-companion-android", "Date": "2016-10-26T06:51:09Z"},
{"Line": "=>347", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((errors) == null) errors = new java.util.ArrayList<java.lang.String>(1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/2591/buggy-version/bobo-browse.src.main.java.com.browseengine.bobo.api.BrowseResult.java", "BodyUseAPI": [], "Fixed commit": "ac7de85532bfd3e7922f7e3d6950b76cb2fddf1f", "Url": "https://api.github.com/repos/vzhabiuk/bobo", "Date": "2012-06-27T01:09:12Z"},
{"Line": "=>340", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((errors) == null) errors = new java.util.ArrayList<java.lang.String>(1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/2591/buggy-version/bobo-browse.src.main.java.com.browseengine.bobo.api.BrowseResult.java", "BodyUseAPI": [], "Fixed commit": "ac7de85532bfd3e7922f7e3d6950b76cb2fddf1f", "Url": "https://api.github.com/repos/vzhabiuk/bobo", "Date": "2012-06-27T01:09:12Z"},
{"Line": "=>409", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pt.ist.fenixframework.dml.Slot.getSlotType()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (vt.isEnum()) { print(out, \"JSONConverter.getEnumFromJSON(\"); print(out, vt.getFullname()); print(out, \".class, json);\"); }else if (vt.isBuiltin()) { print(out, ((\"JSONConverter.get\" + (capitalize(vt.getDomainName()))) + \"FromJSON(json);\")); }else { print(out, ValueTypeSerializationGenerator.SERIALIZER_CLASS_FULL_NAME); print(out, \".\"); print(out, ValueTypeSerializationGenerator.DESERIALIZATION_METHOD_PREFIX); print(out, vt.getDomainName()); print(out, \"(\"); print(out, ((\"JSONConverter.get\" + (capitalize(vt.getExternalizationElements().get(0).getType().getDomainName()))) + \"FromJSON(json));\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/4752/buggy-version/backend.jvstm-common.code-generator.src.main.java.pt.ist.fenixframework.backend.jvstm.JVSTMCodeGenerator.java", "BodyUseAPI": ["pt.ist.fenixframework.backend.jvstm.JVSTMCodeGenerator.capitalize(vt.getDomainName())", "pt.ist.fenixframework.backend.jvstm.JVSTMCodeGenerator.print(java.io.PrintWriter,vt.getDomainName())", "pt.ist.fenixframework.dml.ValueType.getDomainName()", "vt.getExternalizationElements().get(int)", "pt.ist.fenixframework.backend.jvstm.JVSTMCodeGenerator.print(java.io.PrintWriter,vt.getFullname())", "pt.ist.fenixframework.backend.jvstm.JVSTMCodeGenerator.capitalize(vt.getExternalizationElements().get(0).getType().getDomainName())", "vt.getExternalizationElements().get(0).getType()", "pt.ist.fenixframework.backend.jvstm.JVSTMCodeGenerator.print(java.io.PrintWriter,((\"JSONConverter.get\" + (capitalize(vt.getExternalizationElements().get(0).getType().getDomainName()))) + \"FromJSON(json));\"))", "pt.ist.fenixframework.backend.jvstm.JVSTMCodeGenerator.print(java.io.PrintWriter,((\"JSONConverter.get\" + (capitalize(vt.getDomainName()))) + \"FromJSON(json);\"))", "vt.getExternalizationElements().get(0).getType().getDomainName()", "pt.ist.fenixframework.dml.ValueType.getExternalizationElements()", "pt.ist.fenixframework.dml.ValueType.getFullname()", "pt.ist.fenixframework.dml.ValueType.getDomainName()", "pt.ist.fenixframework.dml.ValueType.isBuiltin()"], "Fixed commit": "c96a6a02dd37b2d80a0adbd2824d956df6822e78", "Url": "https://api.github.com/repos/jcarvalho/fenix-framework", "Date": "2013-06-17T14:14:19Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["data.idMap.subMap(long,boolean,long,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((map == null) || ((map.size()) == 0)) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/7461/buggy-version/src.MDS.java", "BodyUseAPI": [], "Fixed commit": "9c5bf3d5b00406490bd0c038fc08e3731576be95", "Url": "https://api.github.com/repos/mahesh-v/MultiDimensional-Search", "Date": "2016-04-13T01:56:45Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["data.descripMap.get(long)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (descList == null) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/7461/buggy-version/src.MDS.java", "BodyUseAPI": [], "Fixed commit": "9c5bf3d5b00406490bd0c038fc08e3731576be95", "Url": "https://api.github.com/repos/mahesh-v/MultiDimensional-Search", "Date": "2016-04-13T01:56:45Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(f.exists())) f = new java.io.File(((\"./Levels/\" + file) + \".txt\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/6937/buggy-version/src.LevelMenu.java", "BodyUseAPI": [], "Fixed commit": "9684d65a0cf7f8b569da0644f7907da53959404d", "Url": "https://api.github.com/repos/Whirligig231/boilermake2014", "Date": "2014-02-09T07:05:33Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (quantite <= 0) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/4601/buggy-version/webapp.src.main.java.io.resourcepool.hvsz.persistance.models.SafeZone.java", "BodyUseAPI": [], "Fixed commit": "cfae968195ff9acdbb0e0d7ba1da5faee5e25ce7", "Url": "https://api.github.com/repos/resourcepool/rlg-humans-vs-zombies", "Date": "2017-05-02T13:29:34Z"},
{"Line": "=>321", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentRoom) != null) { Games.RealTimeMultiplayer.leave(connectionManager.client, this, currentRoom.getRoomId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/1891/buggy-version/app.src.main.java.ch.hslu.mpbro15.team10.battleship.activities.MultiplayerActivity.java", "BodyUseAPI": [], "Fixed commit": "3ca9040ad619ea015f5773b9b7a87438b521f770", "Url": "https://api.github.com/repos/Floopy-Doo/MOBPRO_Battleship", "Date": "2015-05-09T22:29:19Z"},
{"Line": "=>416", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ctx.expression()) != null) visit(ctx.expression());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/979/buggy-version/src.progex.java.JavaICFGBuilder.java", "BodyUseAPI": ["progex.java.JavaICFGBuilder.ICFGVisitor.visit(ctx.expression())", "JavaParser.ReturnStatementContext.expression()"], "Fixed commit": "720ffce528e22d1b8c2412e258c90862584de26a", "Url": "https://api.github.com/repos/ghaffarian/progex", "Date": "2017-12-14T16:34:15Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((user.getType()) == 0) { throw new java.lang.RuntimeException(\"invalid type\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/7115/buggy-version/src.Users.java", "BodyUseAPI": [], "Fixed commit": "db00f599aa6de2669168fd9c0a3f5dff1bc29ba9", "Url": "https://api.github.com/repos/universestu/ProgrammingTest", "Date": "2016-11-15T07:55:54Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ws.l10n.client.http.HttpMessageBundleClient.openConnection(java.lang.String,java.lang.String,java.lang.String[])"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((conn.getResponseCode()) == 301) { java.lang.String location = conn.getHeaderField(\"Location\"); conn = openConnection(location); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/1718/buggy-version/l10n-client-http.src.main.java.ws.l10n.client.http.HttpMessageBundleClient.java", "BodyUseAPI": ["java.net.HttpURLConnection.getHeaderField(java.lang.String)"], "Fixed commit": "a7338b66ccdd30cecd2dba1b205ec266f5a3e8a9", "Url": "https://api.github.com/repos/mokshino/l10n-java", "Date": "2016-10-10T20:58:32Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (direction == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/2885/buggy-version/src.main.java.in.nikitapek.blocksaver.events.BlockSaverListener.java", "BodyUseAPI": [], "Fixed commit": "74466eea73cc58edff7430e9e95000b9f46317e5", "Url": "https://api.github.com/repos/Indiv0/block-saver", "Date": "2013-05-11T23:24:39Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["event.getBlock().getRelative(org.bukkit.block.BlockFace,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(configurationContext.isMaterialReinforceable(block.getType()))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/2885/buggy-version/src.main.java.in.nikitapek.blocksaver.events.BlockSaverListener.java", "BodyUseAPI": [], "Fixed commit": "74466eea73cc58edff7430e9e95000b9f46317e5", "Url": "https://api.github.com/repos/Indiv0/block-saver", "Date": "2013-05-11T23:24:39Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["event.getBlock().getRelative(org.bukkit.block.BlockFace,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((configurationContext.infoManager.getReinforcementValue(block.getLocation())) == (-1)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/2885/buggy-version/src.main.java.in.nikitapek.blocksaver.events.BlockSaverListener.java", "BodyUseAPI": [], "Fixed commit": "74466eea73cc58edff7430e9e95000b9f46317e5", "Url": "https://api.github.com/repos/Indiv0/block-saver", "Date": "2013-05-11T23:24:39Z"},
{"Line": "=>368", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mKeyboard) == null) onCreateInputView();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/7925/buggy-version/main.java.com.brentandjody.stenoime.StenoIME.java", "BodyUseAPI": [], "Fixed commit": "bf597506ce4dcd2632b6e5479577f37a7d692886", "Url": "https://api.github.com/repos/brentn/StenoIME", "Date": "2014-01-30T21:11:30Z"},
{"Line": "=>369", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((candidates_view) == null) onCreateCandidatesView();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/7925/buggy-version/main.java.com.brentandjody.stenoime.StenoIME.java", "BodyUseAPI": [], "Fixed commit": "bf597506ce4dcd2632b6e5479577f37a7d692886", "Url": "https://api.github.com/repos/brentn/StenoIME", "Date": "2014-01-30T21:11:30Z"},
{"Line": "=>529", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((child.path(\"mimes\")) instanceof com.fasterxml.jackson.databind.node.TextNode) { nativePart.img.mimes.add(child.get(\"mimes\").asText()); }else { array = ((com.fasterxml.jackson.databind.node.ArrayNode) (child.path(\"mimes\"))); for (com.fasterxml.jackson.databind.JsonNode nx : array) { nativePart.img.mimes.add(nx.textValue()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/4355/buggy-version/src.com.xrtb.pojo.BidRequest.java", "BodyUseAPI": ["com.fasterxml.jackson.databind.JsonNode.get(java.lang.String)", "nativePart.img.mimes.add(child.get(\"mimes\").asText())", "com.fasterxml.jackson.databind.JsonNode.path(java.lang.String)", "child.get(\"mimes\").asText()"], "Fixed commit": "5b2194d95528c631d85a58f898101860a4bd58dc", "Url": "https://api.github.com/repos/benmfaul/XRTB", "Date": "2016-10-08T05:34:28Z"},
{"Line": "=>971", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (store.getBoolean(PlottingConstants.SHOW_INTENSITY)) { getPlottingSystem().setShowIntensity((!(im instanceof uk.ac.diamond.scisoft.analysis.dataset.RGBDataset))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/6226/buggy-version/org.dawnsci.plotting.draw2d.src.org.dawnsci.plotting.draw2d.swtxy.ImageTrace.java", "BodyUseAPI": [], "Fixed commit": "d37d9d420a1d978f28e250e0c287ee2e809d0d46", "Url": "https://api.github.com/repos/DawnScience/dawn-ui", "Date": "2014-09-01T16:13:08Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(StringUtils.FROM)", "java.lang.String.indexOf(StringUtils.WHERE)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (idx2 > idx1) { subquery = query.substring((idx1 + (StringUtils.FROM.length())), idx2); }else { subquery = query.substring((idx1 + (StringUtils.FROM.length()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/7990/buggy-version/athento-nx-automation-extended.src.main.java.org.athento.nuxeo.operations.AthentoDocumentResultSetOperation.java", "BodyUseAPI": ["java.lang.String.substring((idx1 + (StringUtils.FROM.length())),int)", "java.lang.String.substring((idx1 + (StringUtils.FROM.length())))"], "Fixed commit": "7b697d0619e2451ddd9f09bde12aef81e2989e7c", "Url": "https://api.github.com/repos/athento/athento-nx-automation-extended", "Date": "2016-07-27T16:44:06Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((state) == (com.nonamehero2.blackjack.GameActivity.gameState.PLAYER_STAND)) { if ((user.getCardTotal()) < (dealer.getCardTotal())) { state = com.nonamehero2.blackjack.GameActivity.gameState.DEALER_WIN; }else { if ((dealer.getPosition()) >= 5) { if ((dealer.getCardTotal()) > (user.getCardTotal())) { state = com.nonamehero2.blackjack.GameActivity.gameState.DEALER_WIN; }else { state = com.nonamehero2.blackjack.GameActivity.gameState.PLAYER_WIN; } }else { dealCard(dealer); checkScores(false); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/563/buggy-version/app.src.main.java.com.nonamehero2.blackjack.GameActivity.java", "BodyUseAPI": [], "Fixed commit": "66b481244a5e9b56413748e090ec46cc98abc814", "Url": "https://api.github.com/repos/casualdragon/Blackjack", "Date": "2017-02-07T21:30:19Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (description != null) this.description = description;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/5175/buggy-version/EveryConvoAPI.src.main.java.fi.raka.everyconvo.api.entities.User.java", "BodyUseAPI": [], "Fixed commit": "6ff95516c17ce369bd6665a956305e89b335feb8", "Url": "https://api.github.com/repos/karrirasinmaki/EveryConvo", "Date": "2014-03-25T09:06:13Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (imageUrl != null) this.imageurl = imageUrl;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/5175/buggy-version/EveryConvoAPI.src.main.java.fi.raka.everyconvo.api.entities.User.java", "BodyUseAPI": [], "Fixed commit": "6ff95516c17ce369bd6665a956305e89b335feb8", "Url": "https://api.github.com/repos/karrirasinmaki/EveryConvo", "Date": "2014-03-25T09:06:13Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (websiteUrl != null) this.websiteurl = websiteUrl;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/5175/buggy-version/EveryConvoAPI.src.main.java.fi.raka.everyconvo.api.entities.User.java", "BodyUseAPI": [], "Fixed commit": "6ff95516c17ce369bd6665a956305e89b335feb8", "Url": "https://api.github.com/repos/karrirasinmaki/EveryConvo", "Date": "2014-03-25T09:06:13Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (location != null) this.location = location;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/5175/buggy-version/EveryConvoAPI.src.main.java.fi.raka.everyconvo.api.entities.User.java", "BodyUseAPI": [], "Fixed commit": "6ff95516c17ce369bd6665a956305e89b335feb8", "Url": "https://api.github.com/repos/karrirasinmaki/EveryConvo", "Date": "2014-03-25T09:06:13Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wso2.emm.agent.utils.Preference.getInt(android.content.Context,context.getResources().getString(R.string.shared_pref_frequency))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (interval == (org.wso2.emm.agent.services.DeviceStartupIntentReceiver.DEFAULT_INDEX)) { interval = org.wso2.emm.agent.services.DeviceStartupIntentReceiver.DEFAULT_INTERVAL; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/847/buggy-version/modules.mobile-agents.android.client.client.src.main.java.org.wso2.emm.agent.services.DeviceStartupIntentReceiver.java", "BodyUseAPI": [], "Fixed commit": "9e4d5eaac1e48e79c0fa14d5d4c26c921ad11a06", "Url": "https://api.github.com/repos/Kamidu/product-mdm", "Date": "2015-11-05T06:48:22Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<Quest.Quest>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (smashQuest(q, i)) { quests.remove(i); }else if (completedQuest(q, i)) { quests.remove(i); }else if (pickaxeQuest(q, i)) { quests.remove(i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/3569/buggy-version/src.Engine.EventEngine.java", "BodyUseAPI": ["Engine.EventEngine.pickaxeQuest(Quest.Quest,int)", "java.util.ArrayList<Quest.Quest>.remove(int)", "java.util.ArrayList<Quest.Quest>.remove(int)", "java.util.ArrayList<Quest.Quest>.remove(int)", "Engine.EventEngine.completedQuest(Quest.Quest,int)"], "Fixed commit": "a4a2b0dc8b3a4b39355c5ac631ed3d5b0db11ad5", "Url": "https://api.github.com/repos/Krill/red-elephant", "Date": "2013-03-06T08:45:14Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.month) > 12) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/4978/buggy-version/URI_Templates.src.java.org.tsds.TimeStruct.java", "BodyUseAPI": [], "Fixed commit": "43d6c247b4eb0c2946df5d6fa2cb3ef167e26127", "Url": "https://api.github.com/repos/jbfaden/dev", "Date": "2015-10-21T12:55:40Z"},
{"Line": "=>396", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((activity) == null) return new android.view.View(context);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/7988/buggy-version/app.src.main.java.com.aware.plugin.notificationdiary.MainTabs.java", "BodyUseAPI": [], "Fixed commit": "51f0b9aad4b896687b9ebdad5cf561ccecb3673b", "Url": "https://api.github.com/repos/akuvisur/notification_diary", "Date": "2017-01-24T13:35:10Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rule.equals(\"\")) { return new com.opsbears.webcomponents.routing.SimpleGroupedPattern(\"\\\\A.*\\\\z\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/6584/buggy-version/src.main.java.com.opsbears.webcomponents.routing.AnnotationParser.java", "BodyUseAPI": [], "Fixed commit": "bf7f848f9ed672fa784dd7f7fb2e2819e5ec6522", "Url": "https://api.github.com/repos/opsbears/owc-routing", "Date": "2017-02-19T17:27:20Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Method.invoke(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((constructor != null) && ((parameters.size()) == 0)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/9006/buggy-version/src.main.java.com.alibaba.fastjson.util.TypeUtils.java", "BodyUseAPI": [], "Fixed commit": "b3c1cfa23666e592f6db5d955ba736458a8ac335", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2017-11-10T15:58:45Z"},
{"Line": "=>755", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.sysml.runtime.instructions.gpu.context.GPUObject.getJcudaDenseMatrixPtr()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (p == null) throw new java.lang.RuntimeException(\"Pointer is null in clearTemporaryMemory\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/2012/buggy-version/src.main.java.org.apache.sysml.runtime.instructions.gpu.context.GPUContext.java", "BodyUseAPI": [], "Fixed commit": "6f26e131cd3343cbd85882921795e5adae45e234", "Url": "https://api.github.com/repos/nakul02/systemml", "Date": "2017-08-16T23:07:01Z"},
{"Line": "=>738", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (o.isDirty()) { if (o.isSparse()) { org.apache.sysml.runtime.instructions.gpu.context.CSRPointer p = o.getSparseMatrixCudaPointer(); if (p == null) throw new java.lang.RuntimeException(\"CSRPointer is null in clearTemporaryMemory\"); if (((p.rowPtr) != null) && (cudaBlockSizeMap.containsKey(p.rowPtr))) { tmpCudaBlockSizeMap.put(p.rowPtr, cudaBlockSizeMap.get(p.rowPtr)); } if (((p.colInd) != null) && (cudaBlockSizeMap.containsKey(p.colInd))) { tmpCudaBlockSizeMap.put(p.colInd, cudaBlockSizeMap.get(p.colInd)); } if (((p.val) != null) && (cudaBlockSizeMap.containsKey(p.val))) { tmpCudaBlockSizeMap.put(p.val, cudaBlockSizeMap.get(p.val)); } }else { jcuda.Pointer p = o.getJcudaDenseMatrixPtr(); if (p == null) throw new java.lang.RuntimeException(\"Pointer is null in clearTemporaryMemory\"); tmpCudaBlockSizeMap.put(p, cudaBlockSizeMap.get(p)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/2012/buggy-version/src.main.java.org.apache.sysml.runtime.instructions.gpu.context.GPUContext.java", "BodyUseAPI": ["org.apache.sysml.runtime.instructions.gpu.context.GPUObject.isSparse()", "org.apache.sysml.runtime.instructions.gpu.context.GPUObject.getJcudaDenseMatrixPtr()", "org.apache.sysml.runtime.instructions.gpu.context.GPUObject.getSparseMatrixCudaPointer()"], "Fixed commit": "6f26e131cd3343cbd85882921795e5adae45e234", "Url": "https://api.github.com/repos/nakul02/systemml", "Date": "2017-08-16T23:07:01Z"},
{"Line": "=>741", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.sysml.runtime.instructions.gpu.context.GPUObject.getSparseMatrixCudaPointer()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (p == null) throw new java.lang.RuntimeException(\"CSRPointer is null in clearTemporaryMemory\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/2012/buggy-version/src.main.java.org.apache.sysml.runtime.instructions.gpu.context.GPUContext.java", "BodyUseAPI": [], "Fixed commit": "6f26e131cd3343cbd85882921795e5adae45e234", "Url": "https://api.github.com/repos/nakul02/systemml", "Date": "2017-08-16T23:07:01Z"},
{"Line": "=>295", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (org.ofbiz.base.util.UtilValidate.isNotEmpty(inputFields.get(\"categoryName\"))) { categoryName = inputFields.get(\"categoryName\").toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/8060/buggy-version/hot-deploy.commoditymanagement.src.com.zuczug.commoditymanagement.CommodityManagementService.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)", "java.lang.Object.toString()"], "Fixed commit": "e75788ff302592d9cb355480c40b58548d301305", "Url": "https://api.github.com/repos/zuczug/bluemountain", "Date": "2016-09-26T02:20:41Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(currentSearch.equals(\"\"))) { textAreaNote.setText(\"\"); for (base.Folder f : noteBook.getFolders()) { if (f.getName().equals(currentFolder)) { matchedNotes = f.searchNotes(currentSearch); break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/5009/buggy-version/NoteBook.ui.NoteBookWindow.java", "BodyUseAPI": ["base.Folder.searchNotes(java.lang.String)"], "Fixed commit": "7d07f3d5e33d6571531532cf48bb3e0ea2f0ff7d", "Url": "https://api.github.com/repos/coeusguo/comp3021lab", "Date": "2016-10-19T04:36:11Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((monitor.isCanceled()) && (process.isAlive())) { process.destroy(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/7836/buggy-version/jkind-api.src.jkind.api.ApiUtil.java", "BodyUseAPI": ["java.lang.Process.destroy()"], "Fixed commit": "0d5faa581166c248ebee70f248ae61ee7d3d447f", "Url": "https://api.github.com/repos/agacek/jkind", "Date": "2015-05-20T20:06:12Z"},
{"Line": "=>353", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mListener) != null) mListener.onRefreshComplete();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/2950/buggy-version/fungamerefresh.src.main.java.com.hitomi.refresh.view.FunGameRefreshView.java", "BodyUseAPI": [], "Fixed commit": "67fe9a8a8c29f93d745eb8ec435d2895d4dcb5a9", "Url": "https://api.github.com/repos/Hitomis/FunGameRefresh", "Date": "2016-11-17T08:16:48Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((evt.getNewValue()) == null) { noViewMode(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/6736/buggy-version/src.main.java.org.jtrfp.trcl.ext.tr.ViewSelect.java", "BodyUseAPI": [], "Fixed commit": "5b3ec30980d50f746225ebad62213d6238f7bf82", "Url": "https://api.github.com/repos/jtrfp/terminal-recall", "Date": "2015-11-25T11:19:20Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (null != caches) { bitmap = caches.get(url); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/1092/buggy-version/src.com.dreamlink.communication.ui.AsyncImageLoader.java", "BodyUseAPI": ["java.util.Map<java.lang.String, android.graphics.Bitmap>.get(java.lang.String)"], "Fixed commit": "6a6a3d78c06fc07741f5b7a3747974d37eaef7f1", "Url": "https://api.github.com/repos/liangPATHofei1100/AndroidCommunication", "Date": "2013-09-18T06:52:00Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (collection == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/6039/buggy-version/src.main.java.com.thoughtworks.lean.sonar.aggreagtedreport.dao.base.AbstractDao.java", "BodyUseAPI": [], "Fixed commit": "3e28749efb6ff1562484438634815f73a4248f74", "Url": "https://api.github.com/repos/tw-leansw/sonar-aggregated-test-report-plugin", "Date": "2016-05-21T15:56:24Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dto == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/6039/buggy-version/src.main.java.com.thoughtworks.lean.sonar.aggreagtedreport.dao.base.AbstractDao.java", "BodyUseAPI": [], "Fixed commit": "3e28749efb6ff1562484438634815f73a4248f74", "Url": "https://api.github.com/repos/tw-leansw/sonar-aggregated-test-report-plugin", "Date": "2016-05-21T15:56:24Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dto == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/6039/buggy-version/src.main.java.com.thoughtworks.lean.sonar.aggreagtedreport.dao.base.AbstractDao.java", "BodyUseAPI": [], "Fixed commit": "3e28749efb6ff1562484438634815f73a4248f74", "Url": "https://api.github.com/repos/tw-leansw/sonar-aggregated-test-report-plugin", "Date": "2016-05-21T15:56:24Z"},
{"Line": "=>13", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.id) == (Constants.NUMBER)) out += \" : \" + (this.number);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/5151/buggy-version/src.Token.java", "BodyUseAPI": [], "Fixed commit": "502dd9d0d2df027c9450b2351dd9b8ebadcb45f9", "Url": "https://api.github.com/repos/cweber-wou/Compiler", "Date": "2012-11-03T18:35:59Z"},
{"Line": "=>7", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this) == (com.epam.training.domain.FieldType.EMPTY)) { return false; }else { return (field != (com.epam.training.domain.FieldType.EMPTY)) && (field != (this)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/7861/buggy-version/BestAmoba.src.main.java.com.epam.training.domain.FieldType.java", "BodyUseAPI": [], "Fixed commit": "a065bd4fb11c8fc9938e4cc81b94d3e62cd9b6bc", "Url": "https://api.github.com/repos/egyketted/amoba", "Date": "2016-04-28T09:45:24Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!accepted) for (int i = 0; i < ((anglesAttaquePossibles.length) / 2); i++) if (((robot.orientationReelle) >= (anglesAttaquePossibles[(2 * i)])) && ((robot.orientationReelle) <= (anglesAttaquePossibles[((2 * i) + 1)]))) { accepted = true; break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/5375/buggy-version/pc.src.pathfinding.astar.arcs.CercleArrivee.java", "BodyUseAPI": [], "Fixed commit": "5d2177b1a42f9a5e48ba99e117fda2e0c94bb815", "Url": "https://api.github.com/repos/INTechSenpai/moon-rover", "Date": "2017-05-22T04:54:44Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (game.isGameOver()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/4297/buggy-version/src.ca.claytonrogers.Client.GUIScene.GameScreen.java", "BodyUseAPI": [], "Fixed commit": "fc7b25ebc358a7d51c3988dc6b341ff4fbd6fde8", "Url": "https://api.github.com/repos/clayton-rogers/12Golf", "Date": "2015-08-16T23:55:13Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getHost()) != null) { getHost().markForUpdate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/3181/buggy-version/src.main.scala.extracells.part.fluid.PartFluidLevelEmitter.java", "BodyUseAPI": [], "Fixed commit": "9d9126acd9699c3c47c3181ada0e3b704a292856", "Url": "https://api.github.com/repos/ExtraCells/ExtraCells2", "Date": "2017-10-09T16:28:34Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (coords[i].contains(\"http\")) relatives[i] = coords[i]; else relatives[i] = sorcer.resolver.Resolver.resolveAbsolute(baseUrl, sorcer.util.ArtifactCoordinates.coords(coords[i]));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/2498/buggy-version/sos.sos-env.src.main.java.sorcer.resolver.Resolver.java", "BodyUseAPI": ["sorcer.resolver.Resolver.resolveAbsolute(java.net.URL,sorcer.util.ArtifactCoordinates.coords(coords[i]))", "sorcer.util.ArtifactCoordinates.coords(java.lang.String)"], "Fixed commit": "df7cbf2945b3f8dc678642ac68b1debe221fe787", "Url": "https://api.github.com/repos/sorcersoft/sorcer", "Date": "2013-07-10T19:07:25Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((e.getButton()) == (java.awt.event.MouseEvent.BUTTON1)) canDrag = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/7370/buggy-version/src.main.java.gui.GamePanel.java", "BodyUseAPI": [], "Fixed commit": "58f3472d5f19f2e8bcd1cade6b1d25ce27f94424", "Url": "https://api.github.com/repos/Ybalrid/GLPOO_ESIEA_1415_Eternity_Brainville", "Date": "2015-05-15T13:54:05Z"},
{"Line": "=>676", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Loggers.MSG.isTraceEnabled()) { Loggers.MSG.trace(\"{}: {} bytes written totally\", fileItem.getName(), countBytesDone); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/4478/buggy-version/storage.driver.nio.fs.src.main.java.com.emc.mongoose.storage.driver.nio.fs.BasicFileStorageDriver.java", "BodyUseAPI": [], "Fixed commit": "db7c71771f68a0861f831284f255ac9655ebbca2", "Url": "https://api.github.com/repos/emc-mongoose/mongoose", "Date": "2017-06-20T20:16:56Z"},
{"Line": "=>668", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Loggers.MSG.isTraceEnabled()) { Loggers.MSG.trace(\"{}: set the file position = {} + {}\", fileItem.getName(), com.emc.mongoose.storage.driver.nio.fs.BasicFileStorageDriver.getRangeOffset(currRangeIdx), countBytesDone); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/4478/buggy-version/storage.driver.nio.fs.src.main.java.com.emc.mongoose.storage.driver.nio.fs.BasicFileStorageDriver.java", "BodyUseAPI": [], "Fixed commit": "db7c71771f68a0861f831284f255ac9655ebbca2", "Url": "https://api.github.com/repos/emc-mongoose/mongoose", "Date": "2017-06-20T20:16:56Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((world.provider) instanceof micdoodle8.mods.galacticraft.core.dimension.WorldProviderOrbit) { worldData.dim = world.provider.dimensionId; worldData.datacompound = null; if ((worldData.alldata) != null) worldData.datacompound = worldData.alldata.getCompoundTag((\"\" + (worldData.dim))); if ((worldData.datacompound) == null) worldData.datacompound = new net.minecraft.nbt.NBTTagCompound(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/4716/buggy-version/src.main.java.micdoodle8.mods.galacticraft.core.dimension.OrbitSpinSaveData.java", "BodyUseAPI": [], "Fixed commit": "5587458e7f02a6ac0684cb7a7b9c42d430c31be2", "Url": "https://api.github.com/repos/micdoodle8/Galacticraft", "Date": "2014-07-29T17:00:13Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (price > 0) { if ((price < 2) && (price > 0)) { player.sendMessage((((((org.bukkit.ChatColor.AQUA) + (com.homespawnwarp.tool.MoneyMachine.getEconomy().format(price))) + \" \") + (com.homespawnwarp.tool.MoneyMachine.getEconomy().currencyNameSingular())) + (com.homespawnwarp.tool.Tools.getMessage(\"is-taken-from-account\")))); }else { player.sendMessage((((((org.bukkit.ChatColor.AQUA) + (com.homespawnwarp.tool.MoneyMachine.getEconomy().format(price))) + \" \") + (com.homespawnwarp.tool.MoneyMachine.getEconomy().currencyNamePlural())) + (com.homespawnwarp.tool.Tools.getMessage(\"is-taken-from-account\")))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/4843/buggy-version/src.com.homespawnwarp.tool.MoneyMachine.java", "BodyUseAPI": ["org.bukkit.entity.Player.sendMessage((((((org.bukkit.ChatColor.AQUA) + (com.homespawnwarp.tool.MoneyMachine.getEconomy().format(price))) + \" \") + (com.homespawnwarp.tool.MoneyMachine.getEconomy().currencyNameSingular())) + (com.homespawnwarp.tool.Tools.getMessage(\"is-taken-from-account\"))))", "org.bukkit.entity.Player.sendMessage((((((org.bukkit.ChatColor.AQUA) + (com.homespawnwarp.tool.MoneyMachine.getEconomy().format(price))) + \" \") + (com.homespawnwarp.tool.MoneyMachine.getEconomy().currencyNamePlural())) + (com.homespawnwarp.tool.Tools.getMessage(\"is-taken-from-account\"))))", "net.milkbowl.vault.economy.Economy.format(double)", "net.milkbowl.vault.economy.Economy.format(double)"], "Fixed commit": "3d5a2e99d55d34e8934efa6b5306fe5b13dac16f", "Url": "https://api.github.com/repos/pieter3457/HomeSpawnWarp", "Date": "2014-02-26T20:47:12Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.homespawnwarp.tool.MoneyMachine.canPassWithoutPaying(player, price)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/4843/buggy-version/src.com.homespawnwarp.tool.MoneyMachine.java", "BodyUseAPI": [], "Fixed commit": "3d5a2e99d55d34e8934efa6b5306fe5b13dac16f", "Url": "https://api.github.com/repos/pieter3457/HomeSpawnWarp", "Date": "2014-02-26T20:47:12Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mRemoteViews == null) { mRemoteViews = new android.widget.RemoteViews(mContext.getPackageName(), R.layout.neon_widget); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/219/buggy-version/app.src.main.java.com.byteshaft.neon.RemoteUpdateUiHelpers.java", "BodyUseAPI": [], "Fixed commit": "aa0f92969d4c329adf7b2a6e17e10e0b974f3412", "Url": "https://api.github.com/repos/om26er/neon", "Date": "2015-02-20T16:35:34Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (queue.isEmpty()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/7050/buggy-version/src.bank.Simulator.java", "BodyUseAPI": [], "Fixed commit": "b2665e005e8345eaf1a59e91cbd27fe214645b93", "Url": "https://api.github.com/repos/rodkulman/trabalho-final-alpro2", "Date": "2014-06-12T00:34:48Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (queue.isEmpty()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/7050/buggy-version/src.bank.Simulator.java", "BodyUseAPI": [], "Fixed commit": "b2665e005e8345eaf1a59e91cbd27fe214645b93", "Url": "https://api.github.com/repos/rodkulman/trabalho-final-alpro2", "Date": "2014-06-12T00:34:48Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(java.util.Arrays.asList().contains(ctx.family()))) acceptDefault(ctx, type);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/7083/buggy-version/jOOQ.src.main.java.org.jooq.impl.CreateTableImpl.java", "BodyUseAPI": ["org.jooq.impl.CreateTableImpl<R>.acceptDefault(org.jooq.Context<?>,org.jooq.DataType<?>)"], "Fixed commit": "88be6eb510f0e65f8e47f52f0920cd5d49d01159", "Url": "https://api.github.com/repos/jOOQ/jOOQ", "Date": "2016-03-24T13:32:03Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (java.util.Arrays.asList().contains(ctx.family())) acceptDefault(ctx, type);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/7083/buggy-version/jOOQ.src.main.java.org.jooq.impl.CreateTableImpl.java", "BodyUseAPI": ["org.jooq.impl.CreateTableImpl<R>.acceptDefault(org.jooq.Context<?>,org.jooq.DataType<?>)"], "Fixed commit": "88be6eb510f0e65f8e47f52f0920cd5d49d01159", "Url": "https://api.github.com/repos/jOOQ/jOOQ", "Date": "2016-03-24T13:32:03Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (task.isStoped()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/4756/buggy-version/MUtils.src.cn.mutils.app.queue.Queue.java", "BodyUseAPI": [], "Fixed commit": "7f394122ed2359d0c3aba3683909052564dcd691", "Url": "https://api.github.com/repos/wavinsun/MUtils", "Date": "2015-12-02T09:40:52Z"},
{"Line": "=>317", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (log.isInfoEnabled()) { log.info(\"Attempting to reconnect to {} after {}ms\", connectAddress, delay); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/1402/buggy-version/reactor-tcp.src.main.java.reactor.tcp.netty.NettyTcpClient.java", "BodyUseAPI": ["org.slf4j.Logger.info(java.lang.String,java.net.InetSocketAddress,long)"], "Fixed commit": "d7d471492e9298dd70d84e8b62706173d5c45e06", "Url": "https://api.github.com/repos/reactor/reactor", "Date": "2014-03-14T23:23:13Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isAdsFreeModeEnabled) { adsAlreadyRemovedPromp(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/963/buggy-version/app.src.main.java.com.pyrotemplar.kickballreferee.Settings.java", "BodyUseAPI": [], "Fixed commit": "07c576956e33179fd93c7e48813a470b59241e81", "Url": "https://api.github.com/repos/Pyrotemplar/KickballReferee", "Date": "2015-12-22T06:53:17Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.os.Build.VERSION.SDK_INT) > (android.os.Build.VERSION_CODES.KITKAT)) { android.util.Log.d(\"CallNumber\", \"New Android Version\"); intent.setPackage(\"com.android.server.telecom\"); }else { intent.setPackage(\"com.android.phone\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/2447/buggy-version/src.android.CallNumber.java", "BodyUseAPI": [], "Fixed commit": "77c827a79e0e62bfa5234847c6e428c0afd2add3", "Url": "https://api.github.com/repos/lylepratt/CordovaCallNumberPlugin", "Date": "2014-12-12T16:18:07Z"},
{"Line": "=>454", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.box.androidsdk.content.auth.OAuthActivity.dialog) != null) { if (com.box.androidsdk.content.auth.OAuthActivity.dialog.isShowing()) { return; } }else { com.box.androidsdk.content.auth.OAuthActivity.dialog = showDialogWhileWaitingForAuthenticationAPICall(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/5977/buggy-version/box-content-sdk.src.main.java.com.box.androidsdk.content.auth.OAuthActivity.java", "BodyUseAPI": [], "Fixed commit": "605ee3bf7933655d344f8c4cb6d8592a71aadc9e", "Url": "https://api.github.com/repos/box/box-android-sdk", "Date": "2017-03-13T20:26:34Z"},
{"Line": "=>478", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.box.androidsdk.content.auth.OAuthActivity.dialog) != null) { com.box.androidsdk.content.auth.OAuthActivity.dialog = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/5977/buggy-version/box-content-sdk.src.main.java.com.box.androidsdk.content.auth.OAuthActivity.java", "BodyUseAPI": [], "Fixed commit": "605ee3bf7933655d344f8c4cb6d8592a71aadc9e", "Url": "https://api.github.com/repos/box/box-android-sdk", "Date": "2017-03-13T20:26:34Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((moves) == 2) { javax.swing.JOptionPane.showMessageDialog(f, \"DO NOT CHEAT!!!!\", \"ALERT\", javax.swing.JOptionPane.WARNING_MESSAGE); moves = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/6291/buggy-version/src.Main.java", "BodyUseAPI": [], "Fixed commit": "2c44a316cb9f75741639af24997474a653f5f264", "Url": "https://api.github.com/repos/Somsubhra1/Number-Puzzle-JavaSwing", "Date": "2017-12-27T17:06:12Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(checkUserInput.tempString.equals(\" \"))) { checkUserInput.htmlString += (\"<span style='border-bottom: 1px solid #ff0000;'>\" + (checkUserInput.tempString)) + \"</span>\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/6325/buggy-version/Final_Project.MileStone_2.checkUserInput.java", "BodyUseAPI": [], "Fixed commit": "5b8c098ea2b19b750fa37caa647be2073c50e43e", "Url": "https://api.github.com/repos/ChristopherPiccirillo/Formal-Languages", "Date": "2016-04-26T18:14:17Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.alibaba.fastjson.JSON.parseObject(java.lang.String,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((null != (resourceModel.getStatus())) || (\"on\".equals(resourceModel.getStatus()))) { resourceModel.setStatus(\"Y\"); }else { resourceModel.setStatus(\"N\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/3927/buggy-version/src.main.java.com.ldps.controller.ResourceControl.java", "BodyUseAPI": ["com.ldps.model.ResourceModel.setStatus(java.lang.String)", "com.ldps.model.ResourceModel.setStatus(java.lang.String)"], "Fixed commit": "96fcca418ab50d9df177a91a440986ec3cf4b805", "Url": "https://api.github.com/repos/GaryYuNJ/LD-PermissionSystem", "Date": "2016-09-23T08:25:12Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.alibaba.fastjson.JSON.parseObject(java.lang.String,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((null != (resourceModel.getShareEnable())) || (\"on\".equals(resourceModel.getShareEnable()))) { resourceModel.setShareEnable(\"Y\"); }else { resourceModel.setShareEnable(\"N\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/3927/buggy-version/src.main.java.com.ldps.controller.ResourceControl.java", "BodyUseAPI": ["com.ldps.model.ResourceModel.setShareEnable(java.lang.String)", "com.ldps.model.ResourceModel.setShareEnable(java.lang.String)"], "Fixed commit": "96fcca418ab50d9df177a91a440986ec3cf4b805", "Url": "https://api.github.com/repos/GaryYuNJ/LD-PermissionSystem", "Date": "2016-09-23T08:25:12Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mDoRegistration) { registerPartnerApp(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/1885/buggy-version/app.src.main.java.org.akshara.activity.Splashscreeen.java", "BodyUseAPI": [], "Fixed commit": "ec8f6a299ef2884a3f675b0cd421fa870c64bc68", "Url": "https://api.github.com/repos/PartnerApps/Akshara", "Date": "2017-09-13T13:43:17Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(basePath.isEmpty())) basePath = basePath + \"/\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/8021/buggy-version/squall-core.src.main.java.ch.epfl.data.squall.utilities.FileReaderProvider.java", "BodyUseAPI": [], "Fixed commit": "e47eed08ac488b58406183bfa83e4d308c0e13e7", "Url": "https://api.github.com/repos/epfldata/squall", "Date": "2016-05-04T13:32:45Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.ResultSet.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (clstype == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/944/buggy-version/src.main.java.org.kesler.pvdstat.local.service.support.CauseServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "d18bd28d08ddd8348e3806a5a9d9fea4c897980e", "Url": "https://api.github.com/repos/alexkesler/pvdstat-local", "Date": "2015-02-15T16:40:45Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.backend.dao.BaseSqliteStore.getOneFileByHashID(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (f == null) { builder.status(404); return builder.build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/6900/buggy-version/photoweb.src.com.service.ObjectService.java", "BodyUseAPI": [], "Fixed commit": "98329ca68287b1e63fbcf7a95cdf5aac4e5c35b3", "Url": "https://api.github.com/repos/shentar/jAlbum", "Date": "2016-11-05T16:21:45Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.LinkedList<message.Message>.size()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (messageCount > 0) { mMessages.clear(); fireTableRowsDeleted(0, (messageCount - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/7209/buggy-version/src.module.decode.event.MessageActivityModel.java", "BodyUseAPI": ["module.decode.event.MessageActivityModel.1.fireTableRowsDeleted(int,int)"], "Fixed commit": "d1ea8656c4b139ce26ba597d584b6a380debf91d", "Url": "https://api.github.com/repos/DSheirer/sdrtrunk", "Date": "2016-03-01T00:16:41Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((total) == 0) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/8453/buggy-version/src.main.java.com.sharonhome.sudoku.model.Progress.java", "BodyUseAPI": [], "Fixed commit": "a9dad875639527179bf6f33601946a18028c6e44", "Url": "https://api.github.com/repos/sharonmei1219/SharonHome", "Date": "2014-07-04T00:10:50Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (sArgLine.contains(\" \")) { java.lang.String sType = sArgLine.substring(0, sArgLine.indexOf(\" \")); if (sType.equalsIgnoreCase(\"console\")) { type = AliasCommandTypes.CONSOLE; sArgLine = sArgLine.substring(((sArgLine.indexOf(\" \")) + 1)); }else if (sType.equalsIgnoreCase(\"reply\")) { type = AliasCommandTypes.REPLY_MESSAGE; sArgLine = sArgLine.substring(((sArgLine.indexOf(\" \")) + 1)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/7507/buggy-version/com.ne0nx3r0.betteralias.alias.AliasManager.java", "BodyUseAPI": ["java.lang.String.indexOf(java.lang.String)", "java.lang.String.substring(int)", "java.lang.String.indexOf(java.lang.String)", "java.lang.String.substring(int,int)"], "Fixed commit": "8c0b3ae9541e8ff2e39c8b8aa617b944b4d2f71e", "Url": "https://api.github.com/repos/Ne0nx3r0/BetterAlias", "Date": "2013-02-08T16:07:15Z"},
{"Line": "=>504", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getAttribute(\"query\").getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (val instanceof railo.transformer.bytecode.literal.LitString) adapter.invokeVirtual(Types.PAGE_CONTEXT, TagLoop.GET_QUERY_STRING); else adapter.invokeVirtual(Types.PAGE_CONTEXT, TagLoop.GET_QUERY_OBJ);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/4101/buggy-version/railo-java.railo-core.src.railo.transformer.bytecode.statement.tag.TagOutput.java", "BodyUseAPI": [], "Fixed commit": "f163b615fcd0ef8c778b06f5950219e7f2741795", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2012-04-12T08:18:51Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (this.hashedEnumValues2Count.containsKey(hashedEnumValue)) { hashcount = this.hashedEnumValues2Count.get(hashedEnumValue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/5342/buggy-version/blueflood-core.src.main.java.com.rackspacecloud.blueflood.types.BluefloodEnumRollup.java", "BodyUseAPI": ["java.util.Map<java.lang.Long, java.lang.Long>.get(java.lang.Long)"], "Fixed commit": "cc60196245f62d5dedd5f2b4aeab1c44f1135e3e", "Url": "https://api.github.com/repos/tilogaat/blueflood", "Date": "2015-09-10T22:34:01Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((sequence.size()) == 1) && (priorState == null)) && (sequence.get(0).equals(TokenUtils.START_TOKEN))) { assert (ngramIds.length) == 1; return new edu.stanford.nlp.mt.lm.KenLMState(0.0F, ngramIds, ngramIds.length); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/2466/buggy-version/src.edu.stanford.nlp.mt.lm.KenLanguageModel.java", "BodyUseAPI": [], "Fixed commit": "cdf7bf8307b6448047ae14a65dd0e68c567b993d", "Url": "https://api.github.com/repos/stanfordnlp/phrasal", "Date": "2015-09-28T00:33:34Z"},
{"Line": "=>284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCurrentPlayer) != null) { mCurrentPlayer = net.erickelly.scorekeeper.data.PlayerManager.getPlayer(getActivity(), mCurrentPlayer.getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/7387/buggy-version/src.net.erickelly.scorekeeper.PlayerListFragment.java", "BodyUseAPI": [], "Fixed commit": "e15842c17d908cac30abe1eacc8f268acb3a3a4e", "Url": "https://api.github.com/repos/ekelly/Scorekeeper2", "Date": "2014-03-19T05:01:14Z"},
{"Line": "=>711", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.lastIndexOf(char)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (delim < 0) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/988/buggy-version/src.edu.stanford.nlp.mt.tune.OnlineTuner.java", "BodyUseAPI": [], "Fixed commit": "e6a9e7bc2f28e524d77d47226e90619ed53b1970", "Url": "https://api.github.com/repos/stanfordnlp/phrasal", "Date": "2015-03-27T01:28:47Z"},
{"Line": "=>1290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((questionOption.getOption()) == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/942/buggy-version/app.src.main.java.org.eyeseetea.malariacare.data.database.model.Question.java", "BodyUseAPI": [], "Fixed commit": "32c6f1ea9b23129c5c02fa80aafe552c4c8b0b91", "Url": "https://api.github.com/repos/EyeSeeTea/EReferralsApp", "Date": "2017-03-06T10:32:13Z"},
{"Line": "=>1237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((questionOption.getOption()) == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/942/buggy-version/app.src.main.java.org.eyeseetea.malariacare.data.database.model.Question.java", "BodyUseAPI": [], "Fixed commit": "32c6f1ea9b23129c5c02fa80aafe552c4c8b0b91", "Url": "https://api.github.com/repos/EyeSeeTea/EReferralsApp", "Date": "2017-03-06T10:32:13Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(newPollName.equals(titleTextField.getText()))) { recipients.clear(); possibleTimes.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/9117/buggy-version/CalendarPoll.classic.UserInterface.java", "BodyUseAPI": [], "Fixed commit": "37eec3da5ef9a5741505cd148266181c24f91d2f", "Url": "https://api.github.com/repos/Everly-Okorji/middleware", "Date": "2013-11-26T22:25:43Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (scanning) { scanning = false; try { bluetoothAdapter.stopLeScan(this); } catch (java.lang.Throwable t) { t.printStackTrace(); } }else { scanning = true; bluetoothAdapter.startLeScan(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/4161/buggy-version/src.android.cyrus.BLELinks.java", "BodyUseAPI": [], "Fixed commit": "bd0ddc9cb3966d16e392ef0304d287cce41e30ba", "Url": "https://api.github.com/repos/DuncanCragg/NetMash", "Date": "2014-07-09T23:26:15Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.alibaba.druid.sql.ast.SQLExpr.toString()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (pName.startsWith(\"@\")) { procedure.getParamterMap().put(pName, parameter); }else { procedure.getParamterMap().put(java.lang.String.valueOf((i1 + 1)), parameter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/5666/buggy-version/src.main.java.org.opencloudb.route.handler.HintSQLHandler.java", "BodyUseAPI": ["procedure.getParamterMap().put(java.lang.String,org.opencloudb.route.handler.ProcedureParameter)"], "Fixed commit": "4ea0a6d94e0392151df7a319efcf2dcad3387737", "Url": "https://api.github.com/repos/HashZhang/Mycat-Server", "Date": "2016-04-01T12:22:58Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (intent != null) { java.lang.String action = intent.getAction(); if (action != null) { if (action.equals(edu.rit.se.trafficanalysis.tracking.TrackingService.ACTION_START_TRACKING)) { if (!(edu.rit.se.trafficanalysis.tracking.TrackingService.isTracking)) { startTracking(); } }else if (action.equals(edu.rit.se.trafficanalysis.tracking.TrackingService.ACTION_STOP_TRACKING)) { if (edu.rit.se.trafficanalysis.tracking.TrackingService.isTracking) { stopTracking(); } } } }else { if (!(edu.rit.se.trafficanalysis.tracking.TrackingService.isTracking)) { startTracking(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/1564/buggy-version/src.edu.rit.se.trafficanalysis.tracking.TrackingService.java", "BodyUseAPI": ["android.content.Intent.getAction()"], "Fixed commit": "c83514411fa9f5c2d8b7a3ec16a342a638af0644", "Url": "https://api.github.com/repos/tofferrosen/tourtrak-android-plugin", "Date": "2014-04-06T20:26:58Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((recorder) != null) { recorder.stop(); recorder.release(); recorder = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/8610/buggy-version/app.src.main.java.das.songrecorder.Recorder.java", "BodyUseAPI": [], "Fixed commit": "59dbba0de18c029fab7cfff8baa950ada5ae0c42", "Url": "https://api.github.com/repos/mtoshevska/SongRecorder", "Date": "2016-11-26T21:55:29Z"},
{"Line": "=>659", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jsweet.transpiler.util.Util.findMethodDeclarationInType(context.types,com.sun.tools.javac.code.Symbol.ClassSymbol,java.lang.String,com.sun.tools.javac.code.Type)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if ((s == null) || (s == (entry.getValue().sym))) { stack.push(entry.getKey()); printIndent().print(entry.getValue()).println(); stack.pop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/8100/buggy-version/src.main.java.org.jsweet.transpiler.typescript.Java2TypeScriptTranslator.java", "BodyUseAPI": ["java.util.Map.Entry<com.sun.tools.javac.tree.JCTree.JCClassDecl, com.sun.tools.javac.tree.JCTree.JCMethodDecl>.getKey()", "printIndent().print(entry.getValue()).println()", "org.jsweet.transpiler.typescript.Java2TypeScriptTranslator.push(com.sun.tools.javac.tree.JCTree.JCClassDecl)", "java.util.Map.Entry<com.sun.tools.javac.tree.JCTree.JCClassDecl, com.sun.tools.javac.tree.JCTree.JCMethodDecl>.getValue()", "printIndent().print(com.sun.tools.javac.tree.JCTree.JCMethodDecl)"], "Fixed commit": "a4d090cc64b53a6dbcf528b1d83c129260ffedc5", "Url": "https://api.github.com/repos/cincheo/jsweet", "Date": "2016-04-16T08:07:07Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.dswarm.xsd2jsonschema.model.JSElement.withName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(jsElements.getName().equals(simpleJsElement.getName()))) { jsElements.add(simpleJsElement); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/468/buggy-version/src.main.java.org.dswarm.xsd2jsonschema.JsonSchemaParser.java", "BodyUseAPI": ["org.dswarm.xsd2jsonschema.model.JSObject.add(org.dswarm.xsd2jsonschema.model.JSElement)"], "Fixed commit": "0b9152eac1cb75fae77499f46ab91d7695ef6474", "Url": "https://api.github.com/repos/zazi/dswarm-xsd2jsonschema", "Date": "2015-01-15T12:58:06Z"},
{"Line": "=>431", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((response.getElement(\"error\")) != null) { java.lang.String callId = response.getElement(\"ref\").getAttribute(\"id\"); try { gatewayDatastore.registerCall(callId, originalRequest.getFrom()); } catch (com.rayo.gateway.exception.GatewayException e) { com.rayo.gateway.GatewayServlet.log.error(\"Could not register call for dial\"); com.rayo.gateway.GatewayServlet.log.error(e.getMessage(), e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/6632/buggy-version/rayo-gateway.src.main.java.com.rayo.gateway.GatewayServlet.java", "BodyUseAPI": ["response.getElement(\"ref\").getAttribute(java.lang.String)", "com.voxeo.servlet.xmpp.XmppServletResponse.getElement(java.lang.String)"], "Fixed commit": "583dd44013d02e7350b11317d0a1e3a327e79960", "Url": "https://api.github.com/repos/rayo/rayo-server", "Date": "2011-11-15T14:42:20Z"},
{"Line": "=>351", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.salesforce.androidsdk.smartsync.util.SyncUpTarget.fetchLastModifiedDate(com.salesforce.androidsdk.smartsync.manager.SyncManager,java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (serverLastModStr == null) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/2173/buggy-version/libs.SmartSync.src.com.salesforce.androidsdk.smartsync.manager.SyncManager.java", "BodyUseAPI": [], "Fixed commit": "f0022d788f6a861ad2fcebc9f53abd8838d01174", "Url": "https://api.github.com/repos/bhariharan/SalesforceMobileSDK-Android", "Date": "2015-06-22T22:37:25Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((length % 4) != 0) { number = a[placement]; }else { number = sum / 2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/1872/buggy-version/Stats.java", "BodyUseAPI": [], "Fixed commit": "25c7ef87bc1d272feac8b810943b0358825460fc", "Url": "https://api.github.com/repos/patelkd/Stats", "Date": "2013-09-22T14:22:24Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (eventLastYear == 0) eventLastYear = -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/1319/buggy-version/FHRecorder.src.main.java.org.fhaes.FHRecorder.FHX2Sample.java", "BodyUseAPI": [], "Fixed commit": "9ca586a3616f2dd6deecccac3adf0e88a2b9fda1", "Url": "https://api.github.com/repos/purpleplatypus/FHAES", "Date": "2014-03-23T21:25:42Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (eventLastYear == 0) eventLastYear = -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/1319/buggy-version/FHRecorder.src.main.java.org.fhaes.FHRecorder.FHX2Sample.java", "BodyUseAPI": [], "Fixed commit": "9ca586a3616f2dd6deecccac3adf0e88a2b9fda1", "Url": "https://api.github.com/repos/purpleplatypus/FHAES", "Date": "2014-03-23T21:25:42Z"},
{"Line": "=>669", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (echo) { write(key.ch); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/6511/buggy-version/src.main.java.com.sangupta.consoles.ui.SwingTerminal.java", "BodyUseAPI": [], "Fixed commit": "b565e106ef365cc44876f11eadf4dac2d10b2bbe", "Url": "https://api.github.com/repos/sangupta/consoles", "Date": "2013-04-05T09:50:31Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == message) { if (hasToken) { semaphore.release(); } return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/6430/buggy-version/rocketmq-client.src.main.java.com.alibaba.rocketmq.client.producer.concurrent.MultiThreadMQProducer.java", "BodyUseAPI": [], "Fixed commit": "ee8825cf382ac5fc1d8b0fc3e5c476734d1162d7", "Url": "https://api.github.com/repos/lizhanhui/Alibaba_RocketMQ", "Date": "2015-07-22T09:04:40Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.myapp.repository.ContactRepository.findOneById(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (contact == null) throw new com.myapp.exception.SpringCacheException(org.springframework.http.HttpStatus.BAD_REQUEST, \"Error while getting contact\", ((\"Contact with id \" + id) + \" does not exist in db\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/108/buggy-version/src.main.java.com.myapp.service.impl.ContactServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "4149e9f501b5e889c0c60ab27ad7fe7df26f90fd", "Url": "https://api.github.com/repos/olantobi/SpringCaching", "Date": "2017-10-22T06:26:50Z"},
{"Line": "=>482", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (obstacle != null) { if ((!(gameModel.boxHit(cameraLoc, ninjaLoc, obstacle.getHitBox()).isEmpty())) && ((obstacle.getModel().getObj()) != (gameModel.getResource().getOBJs()[4]))) { obstacle.getModel().setIsTransparent(true); }else { obstacle.getModel().setIsTransparent(false); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/7729/buggy-version/src.scrollthief.view.View.java", "BodyUseAPI": ["scrollthief.model.Obstacle.getHitBox()", "scrollthief.model.Obstacle.getModel()", "obstacle.getModel().setIsTransparent(boolean)", "obstacle.getModel().getObj()", "scrollthief.model.Obstacle.getModel()", "obstacle.getModel().setIsTransparent(boolean)", "scrollthief.model.GameModel.boxHit(scrollthief.model.Point3D,scrollthief.model.Point3D,obstacle.getHitBox())", "gameModel.boxHit(cameraLoc, ninjaLoc, obstacle.getHitBox()).isEmpty()", "scrollthief.model.Obstacle.getModel()"], "Fixed commit": "4c1931ebd6970c68df190c54e7a793e1a8007fa8", "Url": "https://api.github.com/repos/MouaYing/ScrollThief", "Date": "2015-04-01T03:48:12Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (deletedCount != 0) { android.content.Context context = getContext(); if (context != null) { context.getContentResolver().notifyChange(PodcastContract.ChannelEntry.CONTENT_URI, null); context.getContentResolver().notifyChange(PodcastContract.EpisodeEntry.CONTENT_URI, null); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/1127/buggy-version/app.src.main.java.udacity.kevin.podcastmaster.data.PodcastProvider.java", "BodyUseAPI": [], "Fixed commit": "49a6422d230cf4828d196786535aa7b7337c6765", "Url": "https://api.github.com/repos/KevinTheGray/Capstone-Project", "Date": "2017-02-03T04:09:55Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.blogsiteloremipsum.gamingbets.activity.RegisterActivity.findViewById(R.id.password)", "de.blogsiteloremipsum.gamingbets.activity.RegisterActivity.findViewById(R.id.password2)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((PwEdit.getText().toString().compareTo(PwEdit2.getText().toString())) != 0) { android.widget.Toast.makeText(this, \"Passwords don\u00b4t match!\", Toast.LENGTH_SHORT).show(); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/9029/buggy-version/app.src.main.java.de.blogsiteloremipsum.gamingbets.activity.RegisterActivity.java", "BodyUseAPI": [], "Fixed commit": "9e0bde8a8cf5af07805097aaf585cce61c4cc174", "Url": "https://api.github.com/repos/GamingBets/GamingBets", "Date": "2015-12-22T13:54:08Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((predeccessor.pointerDepth) != (descendent.pointerDepth)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/3805/buggy-version/WINDOWS_COMMAND_LINE.FOLDER_3_src.SemanticAnalysis.SymbolTable.java", "BodyUseAPI": [], "Fixed commit": "5973e4100eb4718d2122df5e864ba7bd76f4c3e0", "Url": "https://api.github.com/repos/DanielleTab/Compilation", "Date": "2016-12-25T14:57:05Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((descendent.ICType) != (ICTypeInfo.IC_TYPE_INT)) && ((descendent.ICType) != (ICTypeInfo.IC_TYPE_STRING))) && ((SemanticAnalysis.SymbolTable.doesClassExist(descendent.ICType)) == false)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/3805/buggy-version/WINDOWS_COMMAND_LINE.FOLDER_3_src.SemanticAnalysis.SymbolTable.java", "BodyUseAPI": [], "Fixed commit": "5973e4100eb4718d2122df5e864ba7bd76f4c3e0", "Url": "https://api.github.com/repos/DanielleTab/Compilation", "Date": "2016-12-25T14:57:05Z"},
{"Line": "=>506", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.tracecompass.incubator.coherence.ui.views.CoherenceView.getCoherenceLinks()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(links.isEmpty())) { linkList.addAll(links); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/4893/buggy-version/src.coherence.ui.src.org.eclipse.tracecompass.incubator.coherence.ui.views.CoherenceView.java", "BodyUseAPI": ["java.util.List<org.eclipse.tracecompass.tmf.ui.widgets.timegraph.model.ILinkEvent>.addAll(java.util.List<org.eclipse.tracecompass.tmf.ui.widgets.timegraph.model.ILinkEvent>)"], "Fixed commit": "b0499b9a84cd5bf1d2fa1216bbdfa73a6e5285c4", "Url": "https://api.github.com/repos/MMartin5/events-analysis", "Date": "2017-10-31T21:15:33Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hiatus.hiatusapp.previews.PreviewPhotoFragment.getView()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (v != null) { ((android.widget.ImageView) (v.findViewById(R.id.photo))).setImageBitmap(image); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/7405/buggy-version/HiatusApp.app.src.main.java.hiatus.hiatusapp.previews.PreviewPhotoFragment.java", "BodyUseAPI": ["((android.widget.ImageView) (v.findViewById(R.id.photo))).setImageBitmap(android.graphics.Bitmap)", "android.view.View.findViewById(R.id.photo)"], "Fixed commit": "f8328a4d2dc9a4845d6480b0d2dda831c3cdf9bc", "Url": "https://api.github.com/repos/CecileSerene/hiatus-app", "Date": "2017-06-07T07:45:52Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.preference.ListPreference.findIndexOfValue(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (idxOfValue != (-1)) { debugHwOverdrawPref.setValueIndex(idxOfValue); debugHwOverdrawPref.setSummary(entries[idxOfValue]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/4894/buggy-version/app.src.main.java.io.github.xudaojie.developersettings.DevelopmentSettingsActivity.java", "BodyUseAPI": ["android.preference.ListPreference.setSummary(java.lang.CharSequence)", "android.preference.ListPreference.setValueIndex(int)"], "Fixed commit": "800636072c7a78bf27008c50a9f3c0b6717813e9", "Url": "https://api.github.com/repos/XuDaojie/DeveloperSettings", "Date": "2017-03-08T03:19:02Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.preference.ListPreference.findIndexOfValue(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (idxOfValue != (-1)) { debugHwOverdraw.setValueIndex(idxOfValue); debugHwOverdraw.setSummary(entries[idxOfValue]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/4894/buggy-version/app.src.main.java.io.github.xudaojie.developersettings.DevelopmentSettingsActivity.java", "BodyUseAPI": ["android.preference.ListPreference.setSummary(java.lang.CharSequence)", "android.preference.ListPreference.setValueIndex(int)"], "Fixed commit": "800636072c7a78bf27008c50a9f3c0b6717813e9", "Url": "https://api.github.com/repos/XuDaojie/DeveloperSettings", "Date": "2017-03-08T03:19:02Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (candidato.equals(\"\")) { candidato = equiposMap.values().toArray()[0].toString(); equipoGanador = candidato; for (int k = 0; k < (neightborArray.length); k++) { if (neightborArray[k].equals(equipoGanador)) { actualPos = k; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/3038/buggy-version/app.src.main.java.com.example.seba.funcionsuavizadora.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "84f3bd731ae6a8742dadb58d43cdb2da6b854d42", "Url": "https://api.github.com/repos/sevax88/funcionSuavizadora", "Date": "2016-10-03T13:40:02Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((operation.getId()) > 0) { operationResponses.add(operation); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/2495/buggy-version/modules.mobile-agents.android.client.client.src.main.java.org.wso2.emm.agent.services.BuildResultPayload.java", "BodyUseAPI": ["java.util.List<org.wso2.emm.agent.beans.Operation>.add(org.wso2.emm.agent.beans.Operation)"], "Fixed commit": "3b9f24963b858be3927364f47b469f23d02ab625", "Url": "https://api.github.com/repos/wso2-attic/product-emm", "Date": "2015-07-21T09:34:59Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Calendar.getInstance()", "java.util.Calendar.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((nowDatwTime.get(java.util.Calendar.MONTH)) == (startingDateTime.get(java.util.Calendar.MONTH))) { if ((nowDatwTime.get(java.util.Calendar.DAY_OF_MONTH)) == (startingDateTime.get(java.util.Calendar.DAY_OF_MONTH))) { if (((fli.get(i).getStatus()) != null) && (fli.get(i).getStatus().equals(\"Otkazan\"))) { found = true; }else { allFlights.add(fli.get(i)); found = true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/3182/buggy-version/src.java.controllers.GuestController.java", "BodyUseAPI": ["java.util.Calendar.get(int)", "java.util.Calendar.get(int)"], "Fixed commit": "e886ba206684d82bf588cd5f11e312a4bc79f184", "Url": "https://api.github.com/repos/JelicaC/JAirline", "Date": "2017-09-13T12:45:39Z"},
{"Line": "=>679", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (component == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/9184/buggy-version/webarchive-commons-uri.src.main.java.org.netpreserve.commons.uri.Rfc3986Parser.java", "BodyUseAPI": [], "Fixed commit": "c497e89c19e112291530e2de8c5e34d7194eae3b", "Url": "https://api.github.com/repos/iipc/webarchive-commons", "Date": "2016-08-23T09:57:02Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mAdapter.getCount()) == 0) { getMsg.execute(0L); }else { getMsg.execute(mAdapter.getItem(((mAdapter.getCount()) - 1)).getDate()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/3702/buggy-version/app.src.main.java.com.mnachiappan.graphmessage.ConversationFragment.java", "BodyUseAPI": ["com.mnachiappan.graphmessage.ConversationAdapter.getItem(((mAdapter.getCount()) - 1))", "com.mnachiappan.graphmessage.ConversationAdapter.getCount()", "com.mnachiappan.graphmessage.GetMessages.execute(mAdapter.getItem(((mAdapter.getCount()) - 1)).getDate())", "mAdapter.getItem(((mAdapter.getCount()) - 1)).getDate()"], "Fixed commit": "f174e1a263429b905f1df161607e0a355e164124", "Url": "https://api.github.com/repos/mnachiappan/GrapeVine", "Date": "2015-02-25T02:43:42Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mAdapter.getCount()) == 0) { getMsg.execute(0L); }else { getMsg.execute(mAdapter.getItem(((mAdapter.getCount()) - 1)).getDate()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/3702/buggy-version/app.src.main.java.com.mnachiappan.graphmessage.PostMessage.java", "BodyUseAPI": ["com.mnachiappan.graphmessage.ConversationAdapter.getItem(((mAdapter.getCount()) - 1))", "mAdapter.getItem(((mAdapter.getCount()) - 1)).getDate()", "com.mnachiappan.graphmessage.GetMessages.execute(mAdapter.getItem(((mAdapter.getCount()) - 1)).getDate())", "com.mnachiappan.graphmessage.ConversationAdapter.getCount()"], "Fixed commit": "f174e1a263429b905f1df161607e0a355e164124", "Url": "https://api.github.com/repos/mnachiappan/GrapeVine", "Date": "2015-02-25T02:43:42Z"},
{"Line": "=>451", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.gebit.integrity.parameter.resolving.ParameterResolver.resolveSingleParameterValue(de.gebit.integrity.dsl.ValueOrEnumValueOrOperation,aConversionContext.getUnresolvableVariableHandlingPolicy())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (tempResult instanceof de.gebit.integrity.dsl.ValueOrEnumValueOrOperationCollection) { return convertEncapsulatedValueCollectionToTargetType(aTargetType, aParameterizedType, ((de.gebit.integrity.dsl.ValueOrEnumValueOrOperationCollection) (tempResult)), aConversionContext, someVisitedValues); }else { return convertSingleValueToTargetType(aTargetType, aParameterizedType, tempResult, aConversionContext, someVisitedValues); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/9081/buggy-version/de.gebit.integrity.dsl.src.de.gebit.integrity.parameter.conversion.AbstractModularValueConverter.java", "BodyUseAPI": ["de.gebit.integrity.parameter.conversion.AbstractModularValueConverter.convertSingleValueToTargetType(java.lang.Class<?>,java.lang.Class<?>,java.lang.Object,de.gebit.integrity.parameter.conversion.ConversionContext,java.util.Set<java.lang.Object>)"], "Fixed commit": "aed3bb410a843e2394ec132d66ec5b2c2f4d11d1", "Url": "https://api.github.com/repos/integrity-tf/integrity", "Date": "2014-07-14T14:53:50Z"},
{"Line": "=>810", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (android.text.TextUtils.equals(packageName, mContext.getPackageName())) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/6936/buggy-version/project.Libraries.DroidPlugin.src.com.morgoo.droidplugin.pm.IPluginManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "b301fab0e753009ba7180a5b8ff4bf7073e04049", "Url": "https://api.github.com/repos/weimuhua/DroidPlugin", "Date": "2016-03-11T05:00:27Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((intNoYes) != false) { getActivity().recreate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/4226/buggy-version/app.src.main.java.com.example.mustngo.newsp.NewsListFragment.java", "BodyUseAPI": [], "Fixed commit": "5c55c254be537c1c6f3c4b9cd634a3b448701b47", "Url": "https://api.github.com/repos/gynaephora/NewsP", "Date": "2016-08-10T21:39:03Z"},
{"Line": "=>659", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (resumeRes != null) { resumeRes.player = player; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/7910/buggy-version/src.main.java.net.pms.dlna.DLNAResource.java", "BodyUseAPI": [], "Fixed commit": "23fa73ff9477e277adc0e97492aefa61f95e2efd", "Url": "https://api.github.com/repos/UniversalMediaServer/UniversalMediaServer", "Date": "2015-02-05T05:22:41Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.pentaho.di.trans.Trans.findRunThread(kettleOutput.getOutputStepName())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (step == null) { step = transformation.findRunThread(stepName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/1134/buggy-version/src.pt.webdetails.cpk.elements.impl.KettleElementType.java", "BodyUseAPI": [], "Fixed commit": "799021691b9bff419de5d0150b64e3f89a2fe2e0", "Url": "https://api.github.com/repos/webdetails/cpf", "Date": "2013-05-29T16:22:26Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (result == null) { result = transformation.getResult(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/1134/buggy-version/src.pt.webdetails.cpk.elements.impl.KettleElementType.java", "BodyUseAPI": [], "Fixed commit": "799021691b9bff419de5d0150b64e3f89a2fe2e0", "Url": "https://api.github.com/repos/webdetails/cpf", "Date": "2013-05-29T16:22:26Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (foundBefore) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/1813/buggy-version/projects.MUIS.src.main.java.org.muis.core.style.stateful.AbstractStatefulStyle.java", "BodyUseAPI": [], "Fixed commit": "d96e74700dc836dc14ded2cfdbb082ea6fdc3ef5", "Url": "https://api.github.com/repos/Updownquark/MUIS", "Date": "2012-11-05T23:14:52Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((theType) != null) { java.lang.Class<?> type = theType; while (!(type == (org.muis.core.MuisElement.class))) { ret += 100; type = type.getSuperclass(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/1813/buggy-version/projects.MUIS.src.main.java.org.muis.core.style.sheet.StateGroupTypeExpression.java", "BodyUseAPI": [], "Fixed commit": "d96e74700dc836dc14ded2cfdbb082ea6fdc3ef5", "Url": "https://api.github.com/repos/Updownquark/MUIS", "Date": "2012-11-05T23:14:52Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jpii.navalbattle.pavo.grid.EntityManager.getEntity(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (ent instanceof com.jpii.navalbattle.pavo.gui.PortEntity) g.setColor(java.awt.Color.green); else g.setColor(java.awt.Color.cyan);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/109/buggy-version/src.com.jpii.navalbattle.pavo.gui.OmniMap.java", "BodyUseAPI": [], "Fixed commit": "0a375e25e1460327dfae3f277f21b27f14d648e3", "Url": "https://api.github.com/repos/JPII/NavalBattle", "Date": "2013-04-15T19:04:27Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ss.isOrderInc()) { java.util.List<com.stratio.meta.core.structures.Ordering> orders = ss.getOrder(); for (com.stratio.meta.core.structures.Ordering order : orders) { columnsSet.add(order.getSelectorIdentifier().getField()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/4967/buggy-version/meta-core.src.main.java.com.stratio.meta.deep.utils.DeepUtils.java", "BodyUseAPI": ["com.stratio.meta.core.statements.SelectStatement.getOrder()"], "Fixed commit": "b9cc8f8695894797841fab7fa3a882f78e1d3cb9", "Url": "https://api.github.com/repos/Stratio/stratio-meta", "Date": "2014-07-01T10:31:21Z"},
{"Line": "=>275", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ss.isGroupInc()) { java.util.List<com.stratio.meta.core.structures.GroupBy> groups = ss.getGroup(); for (com.stratio.meta.core.structures.GroupBy group : groups) { columnsSet.add(group.getSelectorIdentifier().getField()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/4967/buggy-version/meta-core.src.main.java.com.stratio.meta.deep.utils.DeepUtils.java", "BodyUseAPI": ["com.stratio.meta.core.statements.SelectStatement.getGroup()"], "Fixed commit": "b9cc8f8695894797841fab7fa3a882f78e1d3cb9", "Url": "https://api.github.com/repos/Stratio/stratio-meta", "Date": "2014-07-01T10:31:21Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ndexbio.orientdb.migration.Migrator1_2to1_3.getProperties(com.orientechnologies.orient.core.record.impl.ODocument)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(props.isEmpty())) newDoc.field(NdexClasses.ndexProperties, props);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/1360/buggy-version/src.main.java.org.ndexbio.orientdb.migration.Migrator1_2to1_3.java", "BodyUseAPI": ["com.orientechnologies.orient.core.record.impl.ODocument.field(NdexClasses.ndexProperties,java.util.List<org.ndexbio.model.object.NdexPropertyValuePair>)"], "Fixed commit": "3bf9cc14f51282456582600a59c7c80099b09e7b", "Url": "https://api.github.com/repos/ndexbio/ndex-common", "Date": "2016-03-13T07:27:50Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((commandName.equals(\"Unfold\")) && (!(hn.hasNestedTable()))) && (!(hn.getId().equals(hNodeId)))) { org.json.JSONObject obj = new org.json.JSONObject(); obj.put(\"ColumnName\", hn.getColumnName()); obj.put(\"HNodeId\", hn.getId()); array.put(obj); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/7168/buggy-version/karma-commands.commands-worksheet.src.main.java.edu.isi.karma.controller.command.worksheet.GetHeadersCommand.java", "BodyUseAPI": ["org.json.JSONObject.put(java.lang.String,hn.getColumnName())", "org.json.JSONObject.put(java.lang.String,hn.getId())", "edu.isi.karma.rep.HNode.getId()", "edu.isi.karma.rep.HNode.getColumnName()"], "Fixed commit": "2913e3f4fee63e031fcb1e84205492a6e97fea51", "Url": "https://api.github.com/repos/InformationIntegrationGroup/Web-Karma", "Date": "2014-08-13T20:13:09Z"},
{"Line": "=>276", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.afollestad.assent.Assent.isPermissionGranted(Assent.ACCESS_COARSE_LOCATION)) { if (!(mIsScanning)) { startScan(); }else { stopScan(); } }else { requestLocationPermission(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/8810/buggy-version/app.src.main.java.com.hogervries.beaconscanner.fragment.BeaconListFragment.java", "BodyUseAPI": [], "Fixed commit": "73bad5b8d81f24e38d8c81ab0bbaef1db398e1c3", "Url": "https://api.github.com/repos/BoydHogerheijde/Beacon-Scanner-Android", "Date": "2016-03-14T13:20:27Z"},
{"Line": "=>347", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (ident != null) for (com.forgeessentials.api.permissions.Zone z : getZonesAt(ident)) if (!(z instanceof com.forgeessentials.api.permissions.ServerZone)) result.addAll(z.getStoredPlayerGroups(ident));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/1176/buggy-version/src.main.java.com.forgeessentials.api.permissions.ServerZone.java", "BodyUseAPI": ["java.util.SortedSet<com.forgeessentials.api.permissions.GroupEntry>.addAll(z.getStoredPlayerGroups(ident))", "com.forgeessentials.api.permissions.Zone.getStoredPlayerGroups(com.forgeessentials.util.UserIdent)", "com.forgeessentials.api.permissions.ServerZone.getZonesAt(com.forgeessentials.util.UserIdent)"], "Fixed commit": "a1ac8b0bdb9b881c0f2e344f77fcef4e216b0f6c", "Url": "https://api.github.com/repos/ForgeEssentials/ForgeEssentialsMain", "Date": "2014-12-27T22:01:21Z"},
{"Line": "=>414", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (ident == null) { return new java.util.ArrayList<>(); }else if (ident.hasPlayer()) { return getZonesAt(new com.forgeessentials.commons.selections.WorldPoint(ident.getPlayer())); }else { java.util.ArrayList<com.forgeessentials.api.permissions.Zone> result = new java.util.ArrayList<>(); result.add(this); return result; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/1176/buggy-version/src.main.java.com.forgeessentials.api.permissions.ServerZone.java", "BodyUseAPI": ["com.forgeessentials.api.permissions.ServerZone.getZonesAt(com.forgeessentials.commons.selections.WorldPoint)", "com.forgeessentials.util.UserIdent.hasPlayer()", "com.forgeessentials.util.UserIdent.getPlayer()"], "Fixed commit": "a1ac8b0bdb9b881c0f2e344f77fcef4e216b0f6c", "Url": "https://api.github.com/repos/ForgeEssentials/ForgeEssentialsMain", "Date": "2014-12-27T22:01:21Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (webApplicationException instanceof org.robbins.flashcards.webservices.exceptions.GenericWebServiceException) { exception = ((org.robbins.flashcards.webservices.exceptions.GenericWebServiceException) (webApplicationException)); }else { exception = new org.robbins.flashcards.webservices.exceptions.GenericWebServiceException(Response.Status.fromStatusCode(webApplicationException.getResponse().getStatus()), webApplicationException.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/798/buggy-version/FlashCards_WebServices.src.main.java.org.robbins.flashcards.providers.DefaultExceptionHandler.java", "BodyUseAPI": ["Response.Status.fromStatusCode(webApplicationException.getResponse().getStatus())", "webApplicationException.getResponse().getStatus()", "javax.ws.rs.WebApplicationException.getResponse()", "javax.ws.rs.WebApplicationException.getMessage()"], "Fixed commit": "140f4e312c2c50cf23a8101dcde0da64f7334922", "Url": "https://api.github.com/repos/justinhrobbins/FlashCards_App", "Date": "2013-10-13T00:23:01Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.System.getenv(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((org.eclipse.che.api.core.util.SystemInfo.isWindows()) && (m2HomeEnv.contains(\" \"))) { m2HomeEnv = (\"\\\"\" + m2HomeEnv) + \"\\\"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/7657/buggy-version/plugin-java.che-plugin-java-maven-tools.src.main.java.org.eclipse.che.ide.maven.tools.MavenUtils.java", "BodyUseAPI": [], "Fixed commit": "02b3731612ce0a5f1957895cd8f9828613267c43", "Url": "https://api.github.com/repos/codenvy-legacy/che-plugins", "Date": "2015-05-27T14:51:10Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!inserted) { previous.setNext(customEntry); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/5320/buggy-version/CustomMaps.src.practice.generic.util.CustomHashMap.java", "BodyUseAPI": [], "Fixed commit": "bcd7e36768d355218d538aca94bc202254b397bb", "Url": "https://api.github.com/repos/da5/Misc", "Date": "2016-05-11T10:06:40Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((chargePlug) == (android.os.BatteryManager.BATTERY_PLUGGED_AC)) { chargingDelta = com.mavedev.battery.BatteryMonitorService.DEFAULT_CHARGING_DELTA; }else { chargingDelta = com.mavedev.battery.BatteryMonitorService.DEFAULT_USB_CHARGING_DELTA; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/3169/buggy-version/battery-widget-master.src.com.mavedev.battery.BatteryMonitorService.java", "BodyUseAPI": [], "Fixed commit": "857360faa68caff7c61a184ae5db3e987a1291b5", "Url": "https://api.github.com/repos/sujeet100/batterywidget", "Date": "2014-03-22T17:27:11Z"},
{"Line": "=>1322", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((smsService) == null) smsService = new org.sharegov.cirm.legacy.SmsService();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/7623/buggy-version/src.java.org.sharegov.cirm.legacy.MessageManager.java", "BodyUseAPI": [], "Fixed commit": "38fc1c4fb27fa81a088907f8a042736dde6c230b", "Url": "https://api.github.com/repos/sharegov/opencirm", "Date": "2017-09-01T04:12:40Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sharegov.cirm.legacy.CirmSmsMessage.getPhone()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((phoneMult == null) || (phoneMult.isEmpty())) { org.sharegov.cirm.utils.ThreadLocalStopwatch.error(\"ERROR: SmsService: phone empty. Not sending message\"); org.sharegov.cirm.utils.ThreadLocalStopwatch.error(message.getExplanation()); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/7623/buggy-version/src.java.org.sharegov.cirm.legacy.SmsService.java", "BodyUseAPI": [], "Fixed commit": "38fc1c4fb27fa81a088907f8a042736dde6c230b", "Url": "https://api.github.com/repos/sharegov/opencirm", "Date": "2017-09-01T04:12:40Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sharegov.cirm.legacy.CirmSmsMessage.getTxt()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((text == null) || (text.isEmpty())) { org.sharegov.cirm.utils.ThreadLocalStopwatch.error(\"ERROR: SmsService: text empty. Not sending message\"); org.sharegov.cirm.utils.ThreadLocalStopwatch.error(message.getExplanation()); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/7623/buggy-version/src.java.org.sharegov.cirm.legacy.SmsService.java", "BodyUseAPI": [], "Fixed commit": "38fc1c4fb27fa81a088907f8a042736dde6c230b", "Url": "https://api.github.com/repos/sharegov/opencirm", "Date": "2017-09-01T04:12:40Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (success == 0) { org.sharegov.cirm.utils.ThreadLocalStopwatch.error(\"ERROR: SmsService: NO TEXT MESSAGE COULD BE SENT.\"); }else { org.sharegov.cirm.utils.ThreadLocalStopwatch.error(((\"DONE: SmsService: \" + success) + \" text messages were successfully sent.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/7623/buggy-version/src.java.org.sharegov.cirm.legacy.SmsService.java", "BodyUseAPI": ["org.sharegov.cirm.utils.ThreadLocalStopwatch.error(java.lang.String)"], "Fixed commit": "38fc1c4fb27fa81a088907f8a042736dde6c230b", "Url": "https://api.github.com/repos/sharegov/opencirm", "Date": "2017-09-01T04:12:40Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pl.edu.icm.cermine.structure.DocstrumSegmenter.segmentPage(pl.edu.icm.cermine.structure.BxPage)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((segmentedPage.getBounds()) != null) { output.addPage(segmentedPage); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/5763/buggy-version/cermine-impl.src.main.java.pl.edu.icm.cermine.structure.DocstrumSegmenter.java", "BodyUseAPI": ["pl.edu.icm.cermine.structure.BxDocument.addPage(pl.edu.icm.cermine.structure.BxPage)"], "Fixed commit": "a31635727f6fcddeeb6d58ef000b9c79619d5f90", "Url": "https://api.github.com/repos/CeON/CERMINE", "Date": "2012-10-30T09:44:05Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (element.hasAttribute(\"connection-factory\")) { listenerContainerDefinition.getPropertyValues().add(org.axonframework.contextsupport.spring.amqp.TerminalBeanDefinitionParser.BEAN_REFERENCE_PROPERTIES.get(\"connection-factory\"), new org.springframework.beans.factory.config.RuntimeBeanReference(element.getAttribute(\"connection-factory\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/8862/buggy-version/amqp.src.main.java.org.axonframework.contextsupport.spring.amqp.TerminalBeanDefinitionParser.java", "BodyUseAPI": ["listenerContainerDefinition.getPropertyValues().add(java.lang.String,org.springframework.beans.factory.config.RuntimeBeanReference)", "org.w3c.dom.Element.getAttribute(java.lang.String)"], "Fixed commit": "fb5ae3194b2553ab175ceac6adfc1bf287a80071", "Url": "https://api.github.com/repos/viadeo/AxonFramework", "Date": "2013-01-20T18:33:40Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (event.getModID().equals(Constants.MOD_ID)) updateConfig();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/6572/buggy-version/src.main.java.net.dries007.weatherconfig.WeatherConfig.java", "BodyUseAPI": [], "Fixed commit": "4bc71fb06fd8c4ef6e9bae8e323e7102ba519e95", "Url": "https://api.github.com/repos/dries007/WeatherConfig", "Date": "2017-07-30T12:35:45Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (opConfig.isBatch()) return \"int\"; else return middlegen.plugins.iwallet.util.DalUtil.getSimpleJavaType(getReturnType());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/4555/buggy-version/src.main.java.middlegen.plugins.iwallet.operation.IWalletInsert.java", "BodyUseAPI": [], "Fixed commit": "6a74e9dca9ed585638585a31b659617af86873b7", "Url": "https://api.github.com/repos/dongmj/ibatis-dalgen", "Date": "2016-08-23T08:44:35Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((file.getParentFile()) != null) file.getParentFile().mkdirs();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/170/buggy-version/src.main.java.edu.umd.cs.linqs.wiki.DataOutputter.java", "BodyUseAPI": ["java.io.File.mkdirs()", "java.io.File.getParentFile()"], "Fixed commit": "27709bbf4f2845e393bf8fc20c18d0cefad48190", "Url": "https://api.github.com/repos/berty38/pslWikipedia", "Date": "2013-02-19T18:24:44Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uk.me.candle.eve.pricing.Pricing.getNextUpdateTime(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((nextUpdateTemp >= 0) && (nextUpdateTemp > (nextUpdate))) { nextUpdate = nextUpdateTemp; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/6495/buggy-version/src.main.java.net.nikr.eve.jeveasset.io.online.PriceDataGetter.java", "BodyUseAPI": [], "Fixed commit": "b169a2c5879f3c253dfa61667d29589a99ca5ede", "Url": "https://api.github.com/repos/GoldenGnu/jeveassets", "Date": "2016-08-15T19:27:00Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.growing.pains.service.blog.BlogService.queryTagByContentId(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(org.springframework.util.CollectionUtils.isEmpty(entities))) { blogContentTagDao.delete(entities); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/9099/buggy-version/growing-pains-service.src.main.java.com.growing.pains.service.blog.BlogService.java", "BodyUseAPI": ["com.growing.pains.dao.blog.BlogContentTagDao.delete(java.util.List<com.growing.pains.model.entity.blog.BlogContentTagEntity>)"], "Fixed commit": "bd3469a72c3f666e46baf74bb0461b2f519dc45c", "Url": "https://api.github.com/repos/miaoxing-tech/growing-pains", "Date": "2016-09-30T06:43:03Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(getLobbySignMap().containsKey(location))) { if (!((block.getState()) instanceof org.bukkit.block.Sign)) { block.setType(Material.SIGN); } return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/4662/buggy-version/src.main.java.net.caseif.flint.steel.arena.SteelArena.java", "BodyUseAPI": [], "Fixed commit": "f489e61f5841dcbcdfc426354e06ea30417244b7", "Url": "https://api.github.com/repos/caseif/Steel", "Date": "2016-05-28T20:40:30Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.BufferedReader.readLine()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (null == buffer) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/4472/buggy-version/src.pf.message.NotifyCenter.java", "BodyUseAPI": [], "Fixed commit": "c24863895b8a4c5e1eb87c6f5d13bf456795f287", "Url": "https://api.github.com/repos/zyga501/QimPayment", "Date": "2016-09-30T15:51:11Z"},
{"Line": "=>273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getContext()) != null) com.ndhunju.dailyjournal.util.UtilsView.setMenuIconTint(menu, android.support.v4.content.ContextCompat.getColor(getContext(), R.color.icon_tint_menu));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/3229/buggy-version/app.src.main.java.com.ndhunju.dailyjournal.controller.party.PartyDetailFragment.java", "BodyUseAPI": [], "Fixed commit": "a707bc10792d7078c1be01bcd05477a946589f30", "Url": "https://api.github.com/repos/ndhunju/dailyJournal", "Date": "2017-09-04T00:21:41Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((java.lang.Integer.parseInt(paymentAmount.getText())) < sum) { javax.swing.JOptionPane.showMessageDialog(new javax.swing.JFrame(), \"Amount must exceed or equal the total amount\"); }else { input.delete(0, input.length()); input.append(paymentAmount.getText()); changeAmount.setText((\"Change amount: \" + ((java.lang.Float.parseFloat(input.toString())) - sum))); paymentConfirmationPanel.add(changeAmount); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/6567/buggy-version/POS.src.ee.ut.math.tvt.vapradjailusad.ui.tabs.PurchaseTab.java", "BodyUseAPI": ["javax.swing.JLabel.setText(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "javax.swing.JTextField.getText()"], "Fixed commit": "fe33848df63b66ab6baab4a53fdfccd0ba6853dc", "Url": "https://api.github.com/repos/AndreasGP/BestPOS", "Date": "2014-11-11T17:44:43Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((\".*\".equals(requestParamTemplate)) && (reqInfo.isEmpty())) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/7303/buggy-version/src.main.java.com.zf.mock.impl.GetRequestService.java", "BodyUseAPI": [], "Fixed commit": "944a58f0fd82026196a4b1173cac2286ed7ffe60", "Url": "https://api.github.com/repos/zhangfei19841004/zmock", "Date": "2017-09-11T06:04:46Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((thread) != null) { byte[] streamD = new byte[dataArray.size()]; for (int i = 0; i < (dataArray.size()); i++) { streamD[i] = dataArray.get(i); } thread.write(streamD); dataArray.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/1196/buggy-version/app.src.main.java.com.thm.sensors.activity.SlaveActivity.java", "BodyUseAPI": [], "Fixed commit": "949966d2cf38ff267c575327cabff7d4d7f0627c", "Url": "https://api.github.com/repos/Mordag/soundbox", "Date": "2016-04-25T14:14:41Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((filterMap) != null) { filterMap.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/939/buggy-version/ScriptCore.src.script.filter.JsonFilterFactory.java", "BodyUseAPI": [], "Fixed commit": "25935e575fbd55c3ff7f8ff9451dbb41f63e3186", "Url": "https://api.github.com/repos/dobybros/scriptcore", "Date": "2017-11-26T11:05:08Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newAccess != access) { modifiedStaticFields.add(name); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/566/buggy-version/runtime.src.main.java.org.evosuite.runtime.instrumentation.CreateClassResetClassAdapter.java", "BodyUseAPI": [], "Fixed commit": "903e286153d0c645f824076d508be8ffa0d2c6d5", "Url": "https://api.github.com/repos/EvoSuite/evosuite", "Date": "2016-06-16T16:22:35Z"},
{"Line": "=>501", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["me.legrange.panstamp.PanStamp.getRegister(StandardRegister.PRODUCT_CODE.getId())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (reg.hasValue()) { byte[] val = reg.getValue(); return ((((val[0]) << 24) | ((val[1]) << 16)) | ((val[2]) << 8)) | (val[3]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/2743/buggy-version/src.main.java.me.legrange.panstamp.PanStamp.java", "BodyUseAPI": ["me.legrange.panstamp.Register.getValue()"], "Fixed commit": "06c02876be1c8a1aec86a155b54b393d32a51da2", "Url": "https://api.github.com/repos/GideonLeGrange/panstamp-java", "Date": "2015-04-06T13:28:46Z"},
{"Line": "=>513", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["me.legrange.panstamp.PanStamp.getRegister(StandardRegister.PRODUCT_CODE.getId())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (reg.hasValue()) { byte[] val = reg.getValue(); return ((((val[4]) << 24) | ((val[5]) << 16)) | ((val[6]) << 8)) | (val[7]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/2743/buggy-version/src.main.java.me.legrange.panstamp.PanStamp.java", "BodyUseAPI": ["me.legrange.panstamp.Register.getValue()"], "Fixed commit": "06c02876be1c8a1aec86a155b54b393d32a51da2", "Url": "https://api.github.com/repos/GideonLeGrange/panstamp-java", "Date": "2015-04-06T13:28:46Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (keyword.contains(\"+\")) keyword = java.util.regex.Pattern.quote(\"+\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/2718/buggy-version/app.src.main.java.com.lwk.familycontact.utils.other.TextLightUtils.java", "BodyUseAPI": [], "Fixed commit": "a49e48231f82726d52348d1f0e2220106b54b818", "Url": "https://api.github.com/repos/Vanish136/FamilyChat", "Date": "2016-10-02T08:15:44Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ds.sudoku.server.GameMove.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (value == 0) { java.lang.String executingUser = gameMove.getExecutingPlayer().getUsername(); java.lang.String fieldOwner = game.getUser(row, column); return executingUser.equals(fieldOwner); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/7708/buggy-version/src.ds.sudoku.server.GameHandler.java", "BodyUseAPI": [], "Fixed commit": "474c9d2ed187cfc40c3c7fe5ef16b0dc894b69b8", "Url": "https://api.github.com/repos/WooDyDooKs/VS_Sudoku", "Date": "2012-12-14T11:58:24Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ds.sudoku.server.GameMove.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((value < 1) || (value > 9)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/7708/buggy-version/src.ds.sudoku.server.GameHandler.java", "BodyUseAPI": [], "Fixed commit": "474c9d2ed187cfc40c3c7fe5ef16b0dc894b69b8", "Url": "https://api.github.com/repos/WooDyDooKs/VS_Sudoku", "Date": "2012-12-14T11:58:24Z"},
{"Line": "=>362", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.tws.plugin.content.PluginDescriptor.getApplicationTheme()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isTwsActivity || (pluginAppTheme == 0)) { pluginAppTheme = com.tws.plugin.core.PluginLoader.getApplication().getApplicationInfo().theme; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/5276/buggy-version/TwsPluginCore.src.com.tws.plugin.core.PluginInjector.java", "BodyUseAPI": [], "Fixed commit": "5907947e83d4d7340da90a24484abb822d9ec566", "Url": "https://api.github.com/repos/dstmath/TwsPluginFramework", "Date": "2017-04-28T08:00:55Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((employee.getMainEmploymentContract()) == null) { throw new com.axelor.exception.AxelorException(java.lang.String.format(com.axelor.i18n.I18n.get(IExceptionMessage.EMPLOYEE_CONTRACT_OF_EMPLOYMENT), employee.getName()), com.axelor.exception.db.IException.CONFIGURATION_ERROR); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/8486/buggy-version/axelor-human-resource.src.main.java.com.axelor.apps.hr.service.KilometricService.java", "BodyUseAPI": ["java.lang.String.format(com.axelor.i18n.I18n.get(IExceptionMessage.EMPLOYEE_CONTRACT_OF_EMPLOYMENT),employee.getName())", "com.axelor.apps.hr.db.Employee.getName()"], "Fixed commit": "3527a9f2c2c589bafd01a94b1fd84a0f29d91d44", "Url": "https://api.github.com/repos/jph-axelor/axelor-business-suite", "Date": "2017-02-20T17:14:12Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (needsComma) { sql.append(\", \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/1374/buggy-version/squidb.src.com.yahoo.squidb.sql.Table.java", "BodyUseAPI": [], "Fixed commit": "4ba0912354c876942f3852b0a11204bdadd4b71c", "Url": "https://api.github.com/repos/sbosley/squidb", "Date": "2015-06-17T04:48:04Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.grasp.dao.UserRelationshipDao.findUserRelationshipByUserIdAndTutorId(newRelationship.getUserId(),newRelationship.getTutorId())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (relationship == null) { return userRelationshipDao.save(newRelationship); }else { return relationship; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/1518/buggy-version/src.main.java.com.grasp.service.UserRelationshipService.java", "BodyUseAPI": [], "Fixed commit": "47465fa3e6fc03c26d99547e347066b6a6b7ec6e", "Url": "https://api.github.com/repos/Grasp-Team/grasp", "Date": "2017-11-20T06:55:38Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(wijzigingenList.get(0).equals(\"Er was een verbindingsfout\"))) { android.widget.Toast.makeText(getApplicationContext(), \"Vernieuwd\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/6035/buggy-version/app.src.main.java.com.android.rickapps.roosterwijzigingchecker.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "35218c7e0cf067c609b16ed35cdccc75c07af46f", "Url": "https://api.github.com/repos/VriesDeRick/RoosterwijzigingChecker", "Date": "2015-04-28T17:08:40Z"},
{"Line": "=>333", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(wijzigingenList.get(0).equals(\"Er was een verbindingsfout\"))) { android.widget.Toast.makeText(getApplicationContext(), \"Vernieuwd\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/6035/buggy-version/app.src.main.java.com.android.rickapps.roosterwijzigingchecker.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "35218c7e0cf067c609b16ed35cdccc75c07af46f", "Url": "https://api.github.com/repos/VriesDeRick/RoosterwijzigingChecker", "Date": "2015-04-28T17:08:40Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(org.apache.commons.lang3.StringUtils.isEmpty(sessionKeyspace))) { this.sessionKeyspace = sessionKeyspace; statement.setSessionKeyspace(sessionKeyspace); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/8904/buggy-version/meta-core.src.main.java.com.stratio.meta.core.utils.MetaQuery.java", "BodyUseAPI": ["com.stratio.meta.core.statements.MetaStatement.setSessionKeyspace(java.lang.String)"], "Fixed commit": "a537695f588687239708e92cecaf0e308ed3fbdb", "Url": "https://api.github.com/repos/Stratio/stratio-meta", "Date": "2014-07-04T07:41:40Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.stratio.meta.core.metadata.MetadataManager.getKeyspaceMetadata(this.getEffectiveKeyspace())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if ((ksInfo == null) && ((this.getEffectiveKeyspace()) != null)) { result = com.stratio.meta.common.result.Result.createExecutionErrorResult(((\"KEYSPACE \" + (this.getEffectiveKeyspace())) + \" was not found\")); }else if ((this.getEffectiveKeyspace()) == null) { result = com.stratio.meta.common.result.Result.createExecutionErrorResult(\"KEYSPACE not defined\"); }else { result = com.stratio.meta.common.result.CommandResult.createCommandResult(ksInfo.exportAsString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/8904/buggy-version/meta-core.src.main.java.com.stratio.meta.core.statements.DescribeStatement.java", "BodyUseAPI": ["com.datastax.driver.core.KeyspaceMetadata.exportAsString()", "com.stratio.meta.common.result.CommandResult.createCommandResult(ksInfo.exportAsString())"], "Fixed commit": "a537695f588687239708e92cecaf0e308ed3fbdb", "Url": "https://api.github.com/repos/Stratio/stratio-meta", "Date": "2014-07-04T07:41:40Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.BufferedReader.readLine()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (((num < 2) && (null != line)) && (line.startsWith(\"200\"))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/3204/buggy-version/src.main.java.com.mychaelstyle.nlp.JumanClient.java", "BodyUseAPI": [], "Fixed commit": "d6702d090997ac3f3582f9a93e22675c33f0f6ba", "Url": "https://api.github.com/repos/mychaelstyle/java-juman-knp", "Date": "2016-05-12T05:23:42Z"},
{"Line": "=>6", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (number < ((java.lang.Math.pow(10, (size - 1))) - 1)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/3139/buggy-version/src.odometer.Odometer.java", "BodyUseAPI": [], "Fixed commit": "16d4c9ac7cdb6b3d7279411979cf8a3f61599f79", "Url": "https://api.github.com/repos/meghaaann/odometer", "Date": "2016-08-03T12:54:04Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(tableRegistry.exists(tableName.getTable()))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/6443/buggy-version/araqne-logdb.src.main.java.org.araqne.logdb.query.command.Table.java", "BodyUseAPI": [], "Fixed commit": "a729a7e2172712fbbb043374a8fff292edb31f14", "Url": "https://api.github.com/repos/araqne/logdb", "Date": "2015-05-20T10:26:47Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((countdown) != null) { countdown.cancel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/7580/buggy-version/app.src.main.java.cristianosoriobretti.powerhourwithfriends.PlayActivity.java", "BodyUseAPI": [], "Fixed commit": "e5fd6ba856b33360a8fc155829d6e10f3cb49e2e", "Url": "https://api.github.com/repos/cristianbretti/PowerHourWithFriends", "Date": "2016-06-29T18:30:13Z"},
{"Line": "=>1215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Tree.AttributeDeclaration.getDeclarationModel()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!(dec.isActual())) || (isTypeUnknown(dec.getType()))) { inferType(that, sie); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/3326/buggy-version/typechecker.src.com.redhat.ceylon.compiler.typechecker.analyzer.ExpressionVisitor.java", "BodyUseAPI": [], "Fixed commit": "7fde859ebf0ef6023785ef44234f8c85854d7339", "Url": "https://api.github.com/repos/eclipse/ceylon", "Date": "2016-08-27T22:24:13Z"},
{"Line": "=>1567", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((field.getValueWhenNull()) == null) { appendStartSetValueIfNotNull(result, field); requireEndSetValueIfNotNull = true; }else { result.append(getColumnName(field)); result.append(\" = \"); result.append(getParameterValue(field)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/2943/buggy-version/src.main.java.org.uaithne.generator.processors.database.sql.SqlQueryGenerator.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "org.uaithne.generator.processors.database.sql.SqlQueryGenerator.getColumnName(org.uaithne.generator.processors.database.sql.FieldInfo)", "org.uaithne.generator.processors.database.sql.SqlQueryGenerator.appendStartSetValueIfNotNull(java.lang.StringBuilder,org.uaithne.generator.processors.database.sql.FieldInfo)", "java.lang.StringBuilder.append(java.lang.String)", "org.uaithne.generator.processors.database.sql.SqlQueryGenerator.getParameterValue(org.uaithne.generator.processors.database.sql.FieldInfo)"], "Fixed commit": "3a3e10b86ff4f4ac926942b0037e9422b2b03801", "Url": "https://api.github.com/repos/uaithne/uaithne-generator", "Date": "2014-08-07T17:17:11Z"},
{"Line": "=>1697", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (field.isDeleteUserMark()) { if ((field.getValueWhenNull()) == null) { }else { if (requireComma) { result.append(\",\\n\"); } result.append(\" \"); result.append(getColumnName(field)); result.append(\" = \"); result.append(getParameterValue(field)); requireComma = true; } }else if (field.isVersionMark()) { if (!(handleVersionFieldOnDelete())) { continue; } if (requireComma) { result.append(\",\\n\"); } result.append(\" \"); result.append(getColumnName(field)); result.append(\" = \"); appendNextVersionValue(result, entity, field); requireComma = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/2943/buggy-version/src.main.java.org.uaithne.generator.processors.database.sql.SqlQueryGenerator.java", "BodyUseAPI": ["org.uaithne.generator.processors.database.sql.FieldInfo.isVersionMark()", "org.uaithne.generator.processors.database.sql.FieldInfo.getValueWhenNull()", "org.uaithne.generator.processors.database.sql.SqlQueryGenerator.getColumnName(org.uaithne.generator.processors.database.sql.FieldInfo)", "java.lang.StringBuilder.append(java.lang.String)", "org.uaithne.generator.processors.database.sql.SqlQueryGenerator.getParameterValue(org.uaithne.generator.processors.database.sql.FieldInfo)", "org.uaithne.generator.processors.database.sql.SqlQueryGenerator.getColumnName(org.uaithne.generator.processors.database.sql.FieldInfo)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "org.uaithne.generator.processors.database.sql.SqlQueryGenerator.appendNextVersionValue(java.lang.StringBuilder,org.uaithne.generator.processors.database.sql.EntityInfo,org.uaithne.generator.processors.database.sql.FieldInfo)"], "Fixed commit": "3a3e10b86ff4f4ac926942b0037e9422b2b03801", "Url": "https://api.github.com/repos/uaithne/uaithne-generator", "Date": "2014-08-07T17:17:11Z"},
{"Line": "=>534", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((mSelectedImage) != null) && (!(mSelectedImage.toString().isEmpty()))) { uploadPhotoFile(mSelectedImage); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/6835/buggy-version/app.src.main.java.com.softdesign.devintensive.ui.activities.MainActivity.java", "BodyUseAPI": ["com.softdesign.devintensive.ui.activities.MainActivity.uploadPhotoFile(android.net.Uri)"], "Fixed commit": "142035337fff7238d7b54e4dae223ddcefa30381", "Url": "https://api.github.com/repos/anray/DevIntensive", "Date": "2016-07-21T21:16:35Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.reopen) { java.lang.System.out.println(\"[ERROR] Can define type of rerun only if reopen is not permitted\"); throw new java.lang.IllegalArgumentException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/7921/buggy-version/src.main.java.org.cs4j.core.algorithms.BEES.java", "BodyUseAPI": [], "Fixed commit": "913cde97e3052ddce6143e0e2268b784669f2d6a", "Url": "https://api.github.com/repos/sepetnit/j-heuristic-search-framework", "Date": "2016-01-19T21:30:59Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((moves.size()) > 0) { funny.gobang.model.Point p = moves.remove(((moves.size()) - 1)); board[p.getX()][p.getY()] = EMPTY; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/8856/buggy-version/src.main.java.funny.gobang.controller.GobangController.java", "BodyUseAPI": ["java.util.List<funny.gobang.model.Point>.size()", "java.util.List<funny.gobang.model.Point>.remove(((moves.size()) - 1))"], "Fixed commit": "d7eb2296e5dd8223ce8ab214ce81f9ba3f2a07e2", "Url": "https://api.github.com/repos/Lahne/Gobang", "Date": "2016-09-30T17:00:43Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["funny.gobang.service.BoardService.isWin(int[][],funny.gobang.model.Point,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (win) { funny.gobang.model.AiResponse aiResponse = new funny.gobang.model.AiResponse(); aiResponse.setStone(board[x][y]); aiResponse.setWin(true); return aiResponse; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/8856/buggy-version/src.main.java.funny.gobang.controller.GobangController.java", "BodyUseAPI": [], "Fixed commit": "d7eb2296e5dd8223ce8ab214ce81f9ba3f2a07e2", "Url": "https://api.github.com/repos/Lahne/Gobang", "Date": "2016-09-30T17:00:43Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.TimeZone.getTimeZone(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((tz.useDaylightTime()) && (!(tz.inDaylightTime(calendar_.getTime())))) { return java.lang.String.valueOf((0 - (rawOffset / 60000))); }else { return java.lang.String.valueOf((0 - ((rawOffset / 60000) + ((tz.getDSTSavings()) / 60000)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/182/buggy-version/calendar-webapp.src.main.java.org.exoplatform.calendar.webui.popup.UIEventAttenderTab.java", "BodyUseAPI": ["java.util.TimeZone.getDSTSavings()", "java.lang.String.valueOf(int)"], "Fixed commit": "0c73691eb2cf1497d9a8d5bff8938d16c3e236c5", "Url": "https://api.github.com/repos/exodev/calendar", "Date": "2013-02-04T10:25:09Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((assignment.size()) != (setup.Parameters.getNumOfWeapons())) { assignment.add(i); }else { assignment.set(k, i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/3718/buggy-version/src.main.java.app.Solution.java", "BodyUseAPI": ["java.util.List<java.lang.Integer>.set(int,int)", "java.util.List<java.lang.Integer>.add(int)"], "Fixed commit": "e70331119a6539ba95409dcaf3a1302f1680a6a0", "Url": "https://api.github.com/repos/mtsznowak/WeaponTargetAssignment", "Date": "2017-04-24T21:27:00Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["st.redline.ProtoObject.javaValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (value instanceof st.redline.ProtoObject[]) try { int length = (((st.redline.ProtoObject[]) (value)).length) - 1; return st.redline.Primitives.createInteger(receiver, (length < 0 ? 0 : length)); } catch (java.lang.ClassNotFoundException e) { throw new st.redline.RedlineException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/7280/buggy-version/src.main.java.st.redline.Primitives.java", "BodyUseAPI": [], "Fixed commit": "1ae28eadc829a280c5f1e2822f5255e6afa055d9", "Url": "https://api.github.com/repos/LeeBreisacher/redline-smalltalk", "Date": "2011-12-24T03:27:16Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((q.getUrl()) != null) { this.url = q.getUrl().toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/8041/buggy-version/app.src.main.java.es.coru.andiag.myquotes.utils.db.QuoteDAO.java", "BodyUseAPI": [], "Fixed commit": "322d2b3d9a3b84865941eb423764b9f4478eacf4", "Url": "https://api.github.com/repos/AndIag/MyQuotes", "Date": "2016-02-16T16:56:38Z"},
{"Line": "=>340", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((i % 1000) == 0) { uk.ac.york.mondo.integration.hawk.servlet.HawkThriftServlet.Iface.LOGGER.info(\"Retrieved {}/{} model elements\", i, modelElements.size()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/2306/buggy-version/uk.ac.york.mondo.integration.hawk.servlet.src.uk.ac.york.mondo.integration.hawk.servlet.HawkThriftServlet.java", "BodyUseAPI": ["org.slf4j.Logger.info(java.lang.String,int,modelElements.size())"], "Fixed commit": "45e4d717868f5f845d2ff70a2bb48c65d7553331", "Url": "https://api.github.com/repos/mondo-project/mondo-integration", "Date": "2015-07-23T14:39:26Z"},
{"Line": "=>439", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(query.getIsXML())) { boolean hasMes = false; for (org.teiid.query.rewriter.Expression ex : query.getSelect().getSymbols()) { if (ex instanceof org.teiid.query.rewriter.MultipleElementSymbol) { hasMes = true; } } if (hasMes) { query.getSelect().setSymbols(query.getSelect().getProjectedSymbols()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/7001/buggy-version/engine.src.main.java.org.teiid.query.rewriter.QueryRewriter.java", "BodyUseAPI": ["org.teiid.query.rewriter.Query.getSelect()", "query.getSelect().getSymbols()", "org.teiid.query.rewriter.Query.getSelect()", "org.teiid.query.rewriter.Query.getSelect()", "query.getSelect().getProjectedSymbols()", "query.getSelect().setSymbols(query.getSelect().getProjectedSymbols())"], "Fixed commit": "ea573eace81c35c647bc62143bb223d56fbebb0d", "Url": "https://api.github.com/repos/teiid/teiid", "Date": "2014-02-17T19:04:03Z"},
{"Line": "=>470", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((toolDefine.getNodePluginList()) != null) { for (jp.co.tabocom.teratermstation.plugin.TeratermStationPlugin plugin : toolDefine.getNodePluginList()) { if ((plugin.getPreferencePage()) != null) { org.eclipse.jface.preference.PreferenceNode pluginNode = new org.eclipse.jface.preference.PreferenceNode(plugin.getClass().getName(), plugin.getPreferencePage()); mgr.addTo(pluginsNode.getId(), pluginNode); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/1610/buggy-version/src.main.java.jp.co.tabocom.teratermstation.Main.java", "BodyUseAPI": ["jp.co.tabocom.teratermstation.model.ToolDefinition.getNodePluginList()"], "Fixed commit": "d6530d56705034667ec05ceb81305570b01ced2f", "Url": "https://api.github.com/repos/turbou/TeratermStation", "Date": "2015-10-23T08:02:37Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (edge == null) { throw new java.lang.IllegalArgumentException(\"The edge may not be null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/3952/buggy-version/Sysc-Project.src.gameCore.Tile.java", "BodyUseAPI": [], "Fixed commit": "a2ab733def78d1ea48c94eed9783a55579cb5388", "Url": "https://api.github.com/repos/DPenner/SYSC-Project", "Date": "2012-11-05T18:55:44Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gameCore.Edge.getOtherTile(gameCore.Tile)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (nextTile == null) { throw new java.lang.IllegalArgumentException(\"No tile in that direction\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/3952/buggy-version/Sysc-Project.src.gameCore.Tile.java", "BodyUseAPI": [], "Fixed commit": "a2ab733def78d1ea48c94eed9783a55579cb5388", "Url": "https://api.github.com/repos/DPenner/SYSC-Project", "Date": "2012-11-05T18:55:44Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((getNumber(\"RSVPs\")) == null) { setRSVP(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/2538/buggy-version/app.src.main.java.trinityconnect.android.bignerdranch.com.trinityconnect.Event.java", "BodyUseAPI": [], "Fixed commit": "ced490d2d6bbf496f795fa0c49a1ab221aa34353", "Url": "https://api.github.com/repos/iweist/TrinityConnect", "Date": "2015-12-20T04:04:33Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"xyz\".equalsIgnoreCase(symbol)) throw new java.lang.RuntimeException(\"That isn't a valid name!!!\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/7938/buggy-version/springboottrades-web.src.main.java.io.pivotal.web.service.MarketService.java", "BodyUseAPI": [], "Fixed commit": "4ee4299acedf2d65a2afc803b53f50dc756e5873", "Url": "https://api.github.com/repos/azwickey-pivotal/SpringTrader", "Date": "2015-08-03T00:35:35Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(editTextAge.getText().toString().isEmpty())) { age = java.lang.String.valueOf(((java.lang.Integer.parseInt(editTextAge.getText().toString())) + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/4528/buggy-version/app.src.main.java.my.edu.tarc.myapplication.MainActivity.java", "BodyUseAPI": ["java.lang.String.valueOf(((java.lang.Integer.parseInt(editTextAge.getText().toString())) + 1))", "java.lang.Integer.parseInt(editTextAge.getText().toString())", "android.widget.EditText.getText()", "editTextAge.getText().toString()"], "Fixed commit": "80aea9bd1d16fc0cd11e9b9e5d8d2f918049e99c", "Url": "https://api.github.com/repos/skywing22/Lab1HelloWorld", "Date": "2017-10-25T16:23:41Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(editTextName.getText().toString().isEmpty())) name = editTextName.getText().toString();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/4528/buggy-version/app.src.main.java.my.edu.tarc.myapplication.MainActivity.java", "BodyUseAPI": ["android.widget.EditText.getText()", "editTextName.getText().toString()"], "Fixed commit": "80aea9bd1d16fc0cd11e9b9e5d8d2f918049e99c", "Url": "https://api.github.com/repos/skywing22/Lab1HelloWorld", "Date": "2017-10-25T16:23:41Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((owner) instanceof mca.entity.EntityPlayerChild) { owner.damageHeldItem(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/213/buggy-version/Forge.mcp.src.minecraft.mca.chore.ChoreFishing.java", "BodyUseAPI": [], "Fixed commit": "06ddf4004786a7c8b6600e73c3a8df8c4b175752", "Url": "https://api.github.com/repos/WildBamaBoy/minecraft-comes-alive", "Date": "2013-08-24T04:34:40Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((owner) instanceof mca.entity.EntityPlayerChild) { if ((owner.inventory.getQuantityOfItem(Item.fishingRod)) == 0) { if (!(owner.worldObj.isRemote)) { owner.say(mca.core.util.LanguageHelper.getString(\"notify.child.chore.interrupted.fishing.norod\")); } endChore(); return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/213/buggy-version/Forge.mcp.src.minecraft.mca.chore.ChoreFishing.java", "BodyUseAPI": [], "Fixed commit": "06ddf4004786a7c8b6600e73c3a8df8c4b175752", "Url": "https://api.github.com/repos/WildBamaBoy/minecraft-comes-alive", "Date": "2013-08-24T04:34:40Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(owner.worldObj.isRemote)) { owner.say(mca.core.util.LanguageHelper.getString(\"notify.child.chore.interrupted.fishing.nowater\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/213/buggy-version/Forge.mcp.src.minecraft.mca.chore.ChoreFishing.java", "BodyUseAPI": [], "Fixed commit": "06ddf4004786a7c8b6600e73c3a8df8c4b175752", "Url": "https://api.github.com/repos/WildBamaBoy/minecraft-comes-alive", "Date": "2013-08-24T04:34:40Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(owner.worldObj.isRemote)) { owner.say(mca.core.util.LanguageHelper.getString(\"notify.child.chore.interrupted.fishing.norod\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/213/buggy-version/Forge.mcp.src.minecraft.mca.chore.ChoreFishing.java", "BodyUseAPI": [], "Fixed commit": "06ddf4004786a7c8b6600e73c3a8df8c4b175752", "Url": "https://api.github.com/repos/WildBamaBoy/minecraft-comes-alive", "Date": "2013-08-24T04:34:40Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (files != null) for (java.io.File f : files) { checkFile(f, false); java.lang.String text = readFile(f); components.put(f.getName(), text); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/6904/buggy-version/de.prob2.kernel.src.main.java.de.prob.model.eventb.generate.ModelGenerator.java", "BodyUseAPI": [], "Fixed commit": "a27751a6e4f6a5d717bb85fc47b2c7e17e34f661", "Url": "https://api.github.com/repos/bendisposto/prob2", "Date": "2016-03-11T14:56:10Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (group.isNew(mGroupsList)) { mGroupsList.add(group); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/1679/buggy-version/src.com.allplayers.android.GroupsMap.java", "BodyUseAPI": [], "Fixed commit": "a1a7868b3615bb2e132c8e3f3c8e47c87c2d155d", "Url": "https://api.github.com/repos/jdarling91/allplayers-android", "Date": "2013-09-06T14:06:05Z"},
{"Line": "=>423", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((wsClientConnection) != null) { try { wsClientConnection.disconnect(); } catch (ch.loway.oss.ari4java.tools.RestException e) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/2499/buggy-version/classes.ch.loway.oss.ari4java.tools.http.NettyHttpClient.java", "BodyUseAPI": [], "Fixed commit": "f107b8e768a7fef012983df91f831ddbebc3d831", "Url": "https://api.github.com/repos/modrljin/ari4java", "Date": "2017-06-12T12:36:25Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (\"TRUE\".equals(identifier.name())) { return SymbolicValue.TRUE_LITERAL; }else if (\"FALSE\".equals(identifier.name())) { return SymbolicValue.FALSE_LITERAL; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/5321/buggy-version/java-squid.src.main.java.org.sonar.java.se.ConstraintManager.java", "BodyUseAPI": ["java.lang.String.equals(identifier.name())", "org.sonar.plugins.java.api.tree.IdentifierTree.name()"], "Fixed commit": "b867e89f3336631682ae77026d74a54c59ec2521", "Url": "https://api.github.com/repos/SonarSource/sonar-java", "Date": "2015-12-17T09:31:25Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!nonEmpty) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/6745/buggy-version/src.wyil.util.type.TypeAlgorithms.java", "BodyUseAPI": [], "Fixed commit": "1ecfb87fcb5f0d30957601dcbda7c45ecd99f260", "Url": "https://api.github.com/repos/Whiley/WhileyCompiler", "Date": "2011-12-04T01:47:01Z"},
{"Line": "=>362", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.w3c.dom.NodeList.item(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (item == null) { elItem = doc.createElement(\"VirtualNetworkSites\"); element.appendChild(elItem); }else { elItem = ((org.w3c.dom.Element) (item)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/2291/buggy-version/src.main.java.org.dasein.cloud.azure.network.AzureVlanSupport.java", "BodyUseAPI": [], "Fixed commit": "6a9b3be70f0eb4c98353c99e59f527eab00c1211", "Url": "https://api.github.com/repos/greese/dasein-cloud-azure", "Date": "2013-11-01T04:55:07Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.almondtools.util.map.HashFunction.hash(long[])"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (i >= (keys.length)) { return defaultValue; }else if (keys[i].equals(value)) { return values[i]; }else { return defaultValue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/4363/buggy-version/src.main.java.com.almondtools.util.map.BitSetObjectMap.java", "BodyUseAPI": ["java.util.BitSet.equals(java.util.BitSet)"], "Fixed commit": "954f0ef7a56e8c7f59678fba90651cb2e0523ad3", "Url": "https://api.github.com/repos/almondtools/stringsearchalgorithms", "Date": "2016-01-05T05:57:57Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.almondtools.util.map.HashFunction.hash(char)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (i >= (keys.length)) { return defaultValue; }else if ((keys[i]) == value) { return values[i]; }else { return defaultValue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/4363/buggy-version/src.main.java.com.almondtools.util.map.CharObjectMap.java", "BodyUseAPI": [], "Fixed commit": "954f0ef7a56e8c7f59678fba90651cb2e0523ad3", "Url": "https://api.github.com/repos/almondtools/stringsearchalgorithms", "Date": "2016-01-05T05:57:57Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.almondtools.util.map.HashFunction.hash(char)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (i >= (keys.length)) { return defaultValue; }else if ((keys[i]) == value) { return values[i]; }else { return defaultValue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/4363/buggy-version/src.main.java.com.almondtools.util.map.CharIntMap.java", "BodyUseAPI": [], "Fixed commit": "954f0ef7a56e8c7f59678fba90651cb2e0523ad3", "Url": "https://api.github.com/repos/almondtools/stringsearchalgorithms", "Date": "2016-01-05T05:57:57Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.almondtools.util.map.HashFunction.hash(char)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (i >= (keys.length)) { return defaultValue; }else if ((keys[i]) == value) { return values[i]; }else { return defaultValue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/4363/buggy-version/src.main.java.com.almondtools.util.map.CharLongMap.java", "BodyUseAPI": [], "Fixed commit": "954f0ef7a56e8c7f59678fba90651cb2e0523ad3", "Url": "https://api.github.com/repos/almondtools/stringsearchalgorithms", "Date": "2016-01-05T05:57:57Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((flags & (com.crossbowffs.nooverlaywarning.Hook.FLAG_WINDOW_IS_PARTIALLY_OBSCURED)) != 0) { flags &= ~(com.crossbowffs.nooverlaywarning.Hook.FLAG_WINDOW_IS_PARTIALLY_OBSCURED); android.util.Log.i(com.crossbowffs.nooverlaywarning.Hook.TAG, \"Cleared FLAG_WINDOW_IS_PARTIALLY_OBSCURED flag\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/1859/buggy-version/src.com.crossbowffs.nooverlaywarning.Hook.java", "BodyUseAPI": [], "Fixed commit": "09a8ef646eaf423478fff57d08c5a5ca1917ac4f", "Url": "https://api.github.com/repos/apsun/NoOverlayWarning", "Date": "2016-08-20T17:27:34Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portal.kernel.search.SearchContext.getStart()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (start == (com.liferay.portal.kernel.dao.orm.QueryUtil.ALL_POS)) { start = 0; }else if (start < 0) { throw new java.lang.IllegalArgumentException((\"Invalid start \" + start)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/1980/buggy-version/modules.apps.portal-search-solr.portal-search-solr.src.main.java.com.liferay.portal.search.solr.internal.SolrIndexSearcher.java", "BodyUseAPI": [], "Fixed commit": "59e4f8860494f1a6125791dd57869390c2096fe8", "Url": "https://api.github.com/repos/brianchandotcom/liferay-portal", "Date": "2017-04-26T19:07:19Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portal.kernel.search.SearchContext.getEnd()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (end == (com.liferay.portal.kernel.dao.orm.QueryUtil.ALL_POS)) { end = total; }else if (end < 0) { throw new java.lang.IllegalArgumentException((\"Invalid end \" + end)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/1980/buggy-version/modules.apps.foundation.portal-search.portal-search-elasticsearch.src.main.java.com.liferay.portal.search.elasticsearch.internal.ElasticsearchIndexSearcher.java", "BodyUseAPI": [], "Fixed commit": "59e4f8860494f1a6125791dd57869390c2096fe8", "Url": "https://api.github.com/repos/brianchandotcom/liferay-portal", "Date": "2017-04-26T19:07:19Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (this.videoControl.isRecording()) { this.videoControl.stopRecording(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/6135/buggy-version/editor.android.src.main.java.es.eucm.ead.android.camera.Video.java", "BodyUseAPI": ["es.eucm.ead.android.platform.DeviceVideoControl.stopRecording(es.eucm.ead.android.camera.Video)"], "Fixed commit": "24497f417459ebad2c16d8eba5e463a7691cca98", "Url": "https://api.github.com/repos/RotaruDan/ead", "Date": "2014-04-21T16:25:42Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((x < 0) || (y < 0)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/929/buggy-version/runelite-client.src.main.java.net.runelite.client.plugins.highlighter.HighlighterOverlay.java", "BodyUseAPI": [], "Fixed commit": "24969cb90833273ddd06ba73eb5c3f1aa49ef56b", "Url": "https://api.github.com/repos/tylerthardy/runelite", "Date": "2017-12-15T11:34:21Z"},
{"Line": "=>271", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isViewingArchives) archiveStr = \"unarchived\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/4619/buggy-version/CoinWallet.src.main.java.com.teambitcoin.coinwallet.AddressScreen.java", "BodyUseAPI": [], "Fixed commit": "664f54031d90b0b57b8b7b7b8be9a705466ab5f2", "Url": "https://api.github.com/repos/cwallet/coinwallet", "Date": "2014-02-28T23:31:44Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.teambitcoin.coinwallet.AddressScreen.3.generateNewBitcoinAddress(addrLabelText.getText())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isAddrCreated) android.widget.Toast.makeText(this, \"Created address\", Toast.LENGTH_SHORT).show();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/4619/buggy-version/CoinWallet.src.main.java.com.teambitcoin.coinwallet.AddressScreen.java", "BodyUseAPI": [], "Fixed commit": "664f54031d90b0b57b8b7b7b8be9a705466ab5f2", "Url": "https://api.github.com/repos/cwallet/coinwallet", "Date": "2014-02-28T23:31:44Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class<? extends io.katharsis.errorhandling.mapper.JsonApiExceptionMapper>.getGenericInterfaces()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((null == types) || (0 == (types.length))) { types = new java.lang.reflect.Type[]{ mapper.getGenericSuperclass() }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/8978/buggy-version/katharsis-core.src.main.java.io.katharsis.core.internal.exception.ExceptionMapperRegistryBuilder.java", "BodyUseAPI": [], "Fixed commit": "5d3d09da77f54f68b27806e326b2542b01f69456", "Url": "https://api.github.com/repos/yuvalbo/katharsis-framework", "Date": "2017-03-04T11:32:01Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isTaskRoot())) { finish(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/8438/buggy-version/headwaySharedLibrary.src.main.java.ie.headway.app.HeadwaySplashScreenActivity.java", "BodyUseAPI": [], "Fixed commit": "1b13724fff29fdc3c6c159ccd7fe057d6e33570c", "Url": "https://api.github.com/repos/HeadwayApp/HTDI-Companion", "Date": "2015-11-10T17:22:28Z"},
{"Line": "=>570", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.KITKAT)) { de.appplant.cordova.plugin.localnotification.LocalNotification.webView.sendJavascript(js); }else { de.appplant.cordova.plugin.localnotification.LocalNotification.webView.loadUrl((\"javascript:\" + js)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/6577/buggy-version/src.android.LocalNotification.java", "BodyUseAPI": [], "Fixed commit": "62a5f2fba23735c157fe2570beb3e548b15de661", "Url": "https://api.github.com/repos/antwerpes/cordova-plugin-local-notifications", "Date": "2015-06-22T12:27:00Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.made.neohabitat.mods.Paper.avatar(org.elkoserver.server.context.User)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (holding(avatar, this)) { if (inHands instanceof org.made.neohabitat.mods.Paper) { paperInHands = ((org.made.neohabitat.mods.Paper) (inHands)); success = paperInHands.send_mail_message(from); }else { success = false; } }else { success = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/7206/buggy-version/src.main.java.org.made.neohabitat.mods.Paper.java", "BodyUseAPI": [], "Fixed commit": "8baf84c0ae4548bb68644d3e748f8f8aacff8213", "Url": "https://api.github.com/repos/ssalevan/neohabitat", "Date": "2017-05-18T06:57:30Z"},
{"Line": "=>495", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rels == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/8280/buggy-version/src.main.java.org.lsstcorp.etravelerbackend.node.ProcessNodeDb.java", "BodyUseAPI": [], "Fixed commit": "5a67fc968df13bdc08df2f8e987e7c52aced75fb", "Url": "https://api.github.com/repos/lsst-camera-dh/eTraveler-travelerDefinition", "Date": "2015-08-10T23:43:14Z"},
{"Line": "=>1817", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((actualTypes[i]) instanceof java.lang.reflect.TypeVariable) { type = typeArgsMap.get(((java.lang.reflect.TypeVariable<?>) (actualTypes[i])).getName()); }else if ((actualTypes[i]) instanceof java.lang.Class) { type = actualTypes[i]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/8791/buggy-version/src.main.java.uk.co.jemos.podam.api.PodamFactoryImpl.java", "BodyUseAPI": ["java.lang.reflect.Type.getName()", "java.util.Map<java.lang.String, java.lang.reflect.Type>.get(java.lang.String)"], "Fixed commit": "6f3bbcbb4762dd2c333bf4cf4a9d70268d071f38", "Url": "https://api.github.com/repos/daivanov/joinmo", "Date": "2015-02-21T19:45:12Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"exit\".equals(theEquation)) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/2505/buggy-version/src.Main.java", "BodyUseAPI": [], "Fixed commit": "a78af522540c5a12ddc5e16bf522de9ab5d062f2", "Url": "https://api.github.com/repos/Eden33/quadratic-equation", "Date": "2013-03-04T14:48:52Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["entities.EntityFactory.getFactory()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((x) == (fac.getPlayer().getX())) && ((y) == (fac.getPlayer().getY()))) { destroyed = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/8319/buggy-version/src.entities.Portal.java", "BodyUseAPI": [], "Fixed commit": "f7ad4945ed1e3c6809ef9ce126880db40487a69f", "Url": "https://api.github.com/repos/GlassWispInteractive/fictional-spoon", "Date": "2016-04-04T12:52:08Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (destroyed) { tileFac.drawTile(gc, imgSourceDestroyed, ((x) - offsetX), ((y) - offsetY), size); }else { tileFac.drawTile(gc, imgSource, ((x) - offsetX), ((y) - offsetY), size); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/8319/buggy-version/src.entities.Portal.java", "BodyUseAPI": [], "Fixed commit": "f7ad4945ed1e3c6809ef9ce126880db40487a69f", "Url": "https://api.github.com/repos/GlassWispInteractive/fictional-spoon", "Date": "2016-04-04T12:52:08Z"},
{"Line": "=>374", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (madeMove) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/7675/buggy-version/src.com.wackadoodle.wackgammon.PlayGameActivity.java", "BodyUseAPI": [], "Fixed commit": "d54694f47bcc227fc122c14fabe27e3822250a2d", "Url": "https://api.github.com/repos/Zedzap/WackGammon", "Date": "2013-10-24T14:50:48Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.team3128.attendancescanner.PasswordDialog.lastPasswordHash) != null) { toSaveTo.putString(\"lastPassword\", android.util.Base64.encodeToString(org.team3128.attendancescanner.PasswordDialog.lastPasswordHash, Base64.NO_WRAP)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/6153/buggy-version/app.src.main.java.org.team3128.attendancescanner.PasswordDialog.java", "BodyUseAPI": [], "Fixed commit": "0e928d69220d7e1af6a85256f0ecf35e9527c45f", "Url": "https://api.github.com/repos/Team3128/AttendanceScanner", "Date": "2015-11-16T04:53:52Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (openingTagName.contentEquals(MzMLTags.TAG_PRODUCT)) { vars.product = new io.github.msdk.io.mzml.data.MzMLProduct(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/6524/buggy-version/msdk-io.msdk-io-mzml.src.main.java.io.github.msdk.io.mzml.data.MzMLParser.java", "BodyUseAPI": [], "Fixed commit": "c6f713463af2a603662dc2776282de2cb5745405", "Url": "https://api.github.com/repos/adhi1419/msdk", "Date": "2017-08-21T18:21:43Z"},
{"Line": "=>385", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tracker.inside(MzMLTags.TAG_PRODUCT)) { if ((vars.product) == null) java.lang.System.out.println(xmlStreamReader.getLocation().getLineNumber()); vars.product.setIsolationWindow(vars.isolationWindow); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/6524/buggy-version/msdk-io.msdk-io-mzml.src.main.java.io.github.msdk.io.mzml.data.MzMLParser.java", "BodyUseAPI": [], "Fixed commit": "c6f713463af2a603662dc2776282de2cb5745405", "Url": "https://api.github.com/repos/adhi1419/msdk", "Date": "2017-08-21T18:21:43Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((s.length) > 2) { int[] a = new int[s.length]; for (int i = 0; i < (a.length); ++i) { if (!(s[i].equals(\"\"))) { a[i] = java.lang.Integer.valueOf(s[i]); } } return a; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/8028/buggy-version/src.de.dhbw.sort.Main.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.Integer.valueOf(java.lang.String)"], "Fixed commit": "4b7c666dc4cf5a9bd501ca36abea34e66cdf45a2", "Url": "https://api.github.com/repos/Sinalcoco/SortingBenchmark", "Date": "2017-07-18T16:11:18Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(s[i].equals(\"\"))) { a[i] = java.lang.Integer.valueOf(s[i]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/8028/buggy-version/src.de.dhbw.sort.Main.java", "BodyUseAPI": ["java.lang.Integer.valueOf(java.lang.String)"], "Fixed commit": "4b7c666dc4cf5a9bd501ca36abea34e66cdf45a2", "Url": "https://api.github.com/repos/Sinalcoco/SortingBenchmark", "Date": "2017-07-18T16:11:18Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isBare) { localName = (localName) + (org.eclipse.jgit.lib.Constants.DOT_GIT_EXT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/2693/buggy-version/org.eclipse.jgit.pgm.src.org.eclipse.jgit.pgm.Clone.java", "BodyUseAPI": [], "Fixed commit": "40f40e496a9da2c41692c990a733be28e7bd819b", "Url": "https://api.github.com/repos/eclipse/jgit", "Date": "2017-08-26T00:57:52Z"},
{"Line": "=>1308", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.caseAllFiles) != null) { if (this.caseAllFiles.equalsIgnoreCase(\"upper\")) { file = file.toUpperCase(); }else if (this.caseAllFiles.equalsIgnoreCase(\"lower\")) { file = file.toLowerCase(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/2581/buggy-version/src.com.atlauncher.workers.InstanceInstaller.java", "BodyUseAPI": [], "Fixed commit": "d4ece2be05c2bf9a594e1007a93263a2fba48ad4", "Url": "https://api.github.com/repos/RyanTheAllmighty/ATLauncher", "Date": "2014-02-21T08:33:44Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(android.text.TextUtils.isEmpty(film.getPosterPath()))) && (!(android.text.TextUtils.isEmpty(film.getBackdropPath())))) { com.mysticwater.myfilms.utils.filmcontentprovider.FilmsDbHelper.insertFilm(getActivity(), upcomingFilmsUri, film); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/4435/buggy-version/app.src.main.java.com.mysticwater.myfilms.fragments.UpcomingFilmsFragment.java", "BodyUseAPI": ["com.mysticwater.myfilms.utils.filmcontentprovider.FilmsDbHelper.insertFilm(getActivity(),android.net.Uri,com.mysticwater.myfilms.model.Film)"], "Fixed commit": "70e5c0defdaf7edcc5d792338804fd3fd4da6ebc", "Url": "https://api.github.com/repos/MysticWater/my-films", "Date": "2016-10-15T16:33:13Z"},
{"Line": "=>410", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.arachb.arachadmin.TaxonBean.checkIRIString(org.arachb.arachadmin.IRIManager)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (usable == null) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/3278/buggy-version/src.main.java.org.arachb.owlbuilder.Owlbuilder.java", "BodyUseAPI": [], "Fixed commit": "ed66d1229910c7f102a34de6eca03e44fc7eb5cd", "Url": "https://api.github.com/repos/pmidford/owlbuilder", "Date": "2015-03-15T14:54:21Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (action != (currentAction)) currentAction = action;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/6464/buggy-version/src.gamePackage.Character.java", "BodyUseAPI": [], "Fixed commit": "b1ed0e8e955e4f035a764cfffc93ad92efcd08c1", "Url": "https://api.github.com/repos/MED4OOSEProj/OOSE2015Diablo", "Date": "2015-04-29T09:46:04Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (direction != (this.direction)) this.direction = direction;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/6464/buggy-version/src.gamePackage.Character.java", "BodyUseAPI": [], "Fixed commit": "b1ed0e8e955e4f035a764cfffc93ad92efcd08c1", "Url": "https://api.github.com/repos/MED4OOSEProj/OOSE2015Diablo", "Date": "2015-04-29T09:46:04Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mainLayout.getImagePreviewLabel().getIcon()) != null) { mainLayout.getImagePreviewLabel().setIcon(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/5930/buggy-version/src.Main.java", "BodyUseAPI": ["MainLayout.getImagePreviewLabel()", "mainLayout.getImagePreviewLabel().setIcon(<nulltype>)"], "Fixed commit": "cb02282cec5ed9388d0a76c011eac095be083609", "Url": "https://api.github.com/repos/david-serrano/AndroidAssetImporter", "Date": "2015-11-17T16:46:30Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (roles.isEmpty()) { return permissions; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/9062/buggy-version/src.com.jwl.integration.role.RoleDAO.java", "BodyUseAPI": [], "Fixed commit": "2f64a31926e3516f5bc5638b61a949ec7751e6a2", "Url": "https://api.github.com/repos/LukasRychtecky/jwl", "Date": "2011-05-05T19:36:26Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.View.getHeight()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((screenHeight * (ro.tsuku.roundedactivity.RoundHelper.KEYBOARD_THRESHOLD_RATIO)) < (screenHeight - (usableRect.bottom))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/7972/buggy-version/roundedactivity.src.main.java.ro.tsuku.roundedactivity.RoundHelper.java", "BodyUseAPI": [], "Fixed commit": "270e7a239483dcabac38e8c42736df16b010fbb5", "Url": "https://api.github.com/repos/gitusp/rounded-activity", "Date": "2015-06-17T06:30:39Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value instanceof java.time.LocalDate) { value = com.blade.kit.DateKit.toString(((java.time.LocalDate) (value)), temp.getDatePatten()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/442/buggy-version/src.main.java.com.blade.kit.json.BeanSerializer.java", "BodyUseAPI": [], "Fixed commit": "bf58619f4661d2819fb591c49ba85cf7397de5d1", "Url": "https://api.github.com/repos/lets-blade/blade", "Date": "2017-12-20T08:56:10Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value instanceof java.time.LocalDateTime) { value = com.blade.kit.DateKit.toString(((java.time.LocalDateTime) (value)), temp.getDatePatten()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/442/buggy-version/src.main.java.com.blade.kit.json.BeanSerializer.java", "BodyUseAPI": [], "Fixed commit": "bf58619f4661d2819fb591c49ba85cf7397de5d1", "Url": "https://api.github.com/repos/lets-blade/blade", "Date": "2017-12-20T08:56:10Z"},
{"Line": "=>370", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (swaggerOperation.getApi().getApiDeclaration().getBasePath().matches(\"^http\")) { opUri = new java.net.URI(new java.lang.StringBuilder().append(swaggerOperation.getApi().getApiDeclaration().getBasePath()).append(\"/\").append(swaggerOperation.getNickName()).toString()); }else { opUri = new java.net.URI(new java.lang.StringBuilder().append(baseUri).append(\"/\").append(swaggerOperation.getNickName()).toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/251/buggy-version/msm4j-swagger-transformer.src.main.java.uk.ac.open.kmi.msm4j.transformer.swagger.SwaggerTransformer.java", "BodyUseAPI": ["uk.ac.open.kmi.msm4j.transformer.swagger.Operation.getApi()", "java.lang.StringBuilder.toString()", "uk.ac.open.kmi.msm4j.transformer.swagger.Operation.getNickName()", "new java.lang.StringBuilder().append(swaggerOperation.getApi().getApiDeclaration().getBasePath()).append(\"/\").append(swaggerOperation.getNickName()).toString()", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(swaggerOperation.getNickName())", "swaggerOperation.getApi().getApiDeclaration()", "new java.lang.StringBuilder().append(swaggerOperation.getApi().getApiDeclaration().getBasePath()).append(\"/\").append(swaggerOperation.getNickName())", "java.lang.StringBuilder.append(swaggerOperation.getApi().getApiDeclaration().getBasePath())", "swaggerOperation.getApi().getApiDeclaration().getBasePath()", "uk.ac.open.kmi.msm4j.transformer.swagger.Operation.getNickName()"], "Fixed commit": "31e719f5c1862bc4d6e79e859ca9817bce2f8060", "Url": "https://api.github.com/repos/kmi/msm4j", "Date": "2014-10-08T17:42:02Z"},
{"Line": "=>658", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!peerNameFound) { ((org.jdiameter.client.api.controller.IRealm) (r)).addPeerName(peerURI.getFQDN()); org.jdiameter.server.impl.MutablePeerTableImpl.logger.debug(\"Adding peerName-{} to realm-{}\", peerURI.getFQDN(), realm); }else { org.jdiameter.server.impl.MutablePeerTableImpl.logger.debug(\"Skipped adding peerName-{} to realm-{}, because it already exists\", peerURI.getFQDN(), realm); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/6515/buggy-version/core.jdiameter.impl.src.main.java.org.jdiameter.server.impl.MutablePeerTableImpl.java", "BodyUseAPI": [], "Fixed commit": "ea47a91c620d319b3daa0b3e30099ec771a4d3f2", "Url": "https://api.github.com/repos/tomazas/jdiameter", "Date": "2015-09-02T09:10:50Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((null == brokerAddress) || (brokerAddress.isEmpty())) { java.lang.System.out.println((\"About to reset offset for broker: \" + brokerAddress)); }else { java.lang.System.out.println(\"About to reset offset for all online matched brokers.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/8744/buggy-version/rocketmq-tools.src.main.java.com.alibaba.rocketmq.tools.command.offset.ResetOffsetByTimeCommand.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "7f6530403c6e640de9322caad21f4b80d3347e02", "Url": "https://api.github.com/repos/masterasia/Alibaba_RocketMQ", "Date": "2015-06-18T14:34:55Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.cli.CommandLine.getOptionValue(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (null != brokerAddress) { brokerAddress = brokerAddress.trim(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/8744/buggy-version/rocketmq-tools.src.main.java.com.alibaba.rocketmq.tools.command.offset.ResetOffsetByTimeCommand.java", "BodyUseAPI": ["java.lang.String.trim()"], "Fixed commit": "7f6530403c6e640de9322caad21f4b80d3347e02", "Url": "https://api.github.com/repos/masterasia/Alibaba_RocketMQ", "Date": "2015-06-18T14:34:55Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (stops.isEmpty()) { ui.labelEmpty.setVisibility(View.VISIBLE); ui.list.setVisibility(View.GONE); disableEdit(); }else { ui.labelEmpty.setVisibility(View.GONE); ui.list.setVisibility(View.VISIBLE); adapter.setData(stops); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/6251/buggy-version/mobile.src.main.java.com.mauriciotogneri.tpgwear.ui.favorites.FavoriteStopsView.java", "BodyUseAPI": ["com.mauriciotogneri.tpgwear.adapters.FavoriteStopAdapter.setData(java.util.List<com.mauriciotogneri.common.api.tpg.json.Stop>)"], "Fixed commit": "1a3fbefc46180e989852f9441cec9a6722ccba50", "Url": "https://api.github.com/repos/mauriciotogneri/tpgwear", "Date": "2015-09-21T19:33:21Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((comments.size()) == 0) return comments;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/1446/buggy-version/src.main.java.ru.anglerhood.lj.client.sql.SQLiteReader.java", "BodyUseAPI": [], "Fixed commit": "be35a954fdde3e8838e4f9e9b8653c62e3ba55e1", "Url": "https://api.github.com/repos/tolyan/lj-java-api", "Date": "2012-10-20T20:25:01Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ImagePlayer.loadNextFrame()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (nFrame == (-1)) { return nFrame; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/8702/buggy-version/src.ImagePlayer.java", "BodyUseAPI": [], "Fixed commit": "5e2c7edc4ef4771c285f73cc325885dc02ff3fbb", "Url": "https://api.github.com/repos/databrary/datavyu", "Date": "2017-02-20T04:28:08Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (textView.getText().equals(previewText)) { textView.setText(android.text.Html.fromHtml(tweet, map::get, null)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/5204/buggy-version/app.src.main.java.com.github.moko256.twicalico.text.TwitterStringUtils.java", "BodyUseAPI": ["android.widget.TextView.setText(android.text.Html.fromHtml(tweet, map::get, null))"], "Fixed commit": "3c1cc3988ef8c6dbb0b819eee2f311e6b79e5c80", "Url": "https://api.github.com/repos/moko256/twitlatte", "Date": "2017-10-21T13:51:43Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (s.startsWith(\"0x\")) s = s.substring(2); else if (s.startsWith(\"#\")) s = s.substring(1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/6166/buggy-version/implementation.project.src.de.croggle.game.ColorController.java", "BodyUseAPI": ["java.lang.String.startsWith(java.lang.String)", "java.lang.String.substring(int)", "java.lang.String.substring(int)"], "Fixed commit": "c47f3f9781919310e76ebe0821e43ba624140288", "Url": "https://api.github.com/repos/vincent23/lambda-alligatoren", "Date": "2013-12-29T22:21:20Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.badlogic.gdx.utils.Array<com.esbjon.wrappers.TileExtract>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((extract.addlInfo) != null) && ((extract.addlInfo) != \"\")) weight = com.badlogic.gdx.math.MathUtils.clamp(java.lang.Integer.valueOf(extract.addlInfo), 1, 100);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/8085/buggy-version/core.src.com.esbjon.entities.Storm.java", "BodyUseAPI": ["com.badlogic.gdx.math.MathUtils.clamp(java.lang.Integer,int,int)", "java.lang.Integer.valueOf(extract.addlInfo)"], "Fixed commit": "055c19747647d8a3dd92ac88d380b13816395972", "Url": "https://api.github.com/repos/k-o-r-t-o/gdxDune", "Date": "2017-11-16T15:44:56Z"},
{"Line": "=>517", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((spawns.size) < (com.esbjon.entities.Fungus.MAX_SPAWNS)) { com.esbjon.mapobjects.BorderType spawnDirection = com.esbjon.mapobjects.BorderType.drawBorder(); return spreadOut(spawnDirection, false); }else return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/8085/buggy-version/core.src.com.esbjon.entities.Fungus.java", "BodyUseAPI": [], "Fixed commit": "055c19747647d8a3dd92ac88d380b13816395972", "Url": "https://api.github.com/repos/k-o-r-t-o/gdxDune", "Date": "2017-11-16T15:44:56Z"},
{"Line": "=>450", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(new_rlc)) { rlc_loss = 0; rlc_retx_delay = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/6185/buggy-version/app.src.main.java.com.limelight.Game.java", "BodyUseAPI": [], "Fixed commit": "71496edefb65cf5381375b92ca9ee3a25358e74f", "Url": "https://api.github.com/repos/ZhaoweiTan/moonlight-android", "Date": "2017-09-26T21:16:04Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((regions.size()) > 0) { org.imirp.imirp.mutation.region.MutationRegion mr = regions.get(((regions.size()) - 1)); if ((mr.getRegionStartIndex()) > (site.getStartIndex())) { throw new java.lang.IllegalArgumentException(((((\"The site [\" + site) + \"] is invalid because it extends past the previous region[\") + mr) + \"]'s start index.\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/3291/buggy-version/imirp_core.src.main.java.org.imirp.imirp.mutation.region.MutationRegionBuilder.java", "BodyUseAPI": ["java.util.ArrayList<org.imirp.imirp.mutation.region.MutationRegion>.get(((regions.size()) - 1))", "java.util.ArrayList<org.imirp.imirp.mutation.region.MutationRegion>.size()"], "Fixed commit": "926ecb0cafc7b1a92cb33814837255fbc19dcf42", "Url": "https://api.github.com/repos/imirp/imirp-app", "Date": "2014-08-28T03:52:09Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.net.Uri.getQueryParameter(AppConstant.IEXTRA_OAUTH_VERIFIER)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (verifier != null) { twitter4j.auth.AccessToken accessToken = org.fossasia.phimpme.share.twitter.LoginActivity.twitter.getOAuthAccessToken(org.fossasia.phimpme.share.twitter.LoginActivity.requestToken, verifier); bundle = new android.os.Bundle(); bundle.putString(getString(R.string.auth_token), accessToken.getToken()); bundle.putString(getString(R.string.auth_username), accessToken.getScreenName()); bundle.putString(getString(R.string.auth_secret), accessToken.getTokenSecret()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/1498/buggy-version/app.src.main.java.org.fossasia.phimpme.share.twitter.LoginActivity.java", "BodyUseAPI": ["twitter4j.Twitter.getOAuthAccessToken(twitter4j.auth.RequestToken,java.lang.String)"], "Fixed commit": "205ee856376fcb148bc133bd3e7f98f48103e2fb", "Url": "https://api.github.com/repos/pa1pal/phimpme-android", "Date": "2017-08-05T18:44:30Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mBitmapCache) != null) { if ((mBitmapCache.size()) > 0) { mBitmapCache.evictAll(); } mBitmapCache = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/6661/buggy-version/app.src.main.java.com.scauzx.movingstar.MovingStarView.java", "BodyUseAPI": [], "Fixed commit": "277c96040d5e7078821d4b9143a425cd35ed1c65", "Url": "https://api.github.com/repos/scauzx/SZMovingStarView", "Date": "2017-11-14T08:23:32Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mStarInfos) != null) { mStarInfos.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/6661/buggy-version/app.src.main.java.com.scauzx.movingstar.MovingStarView.java", "BodyUseAPI": [], "Fixed commit": "277c96040d5e7078821d4b9143a425cd35ed1c65", "Url": "https://api.github.com/repos/scauzx/SZMovingStarView", "Date": "2017-11-14T08:23:32Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.elasticsearch.index.fielddata.NumericDoubleValues.doubleValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (value == (java.lang.Double.NEGATIVE_INFINITY)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/7788/buggy-version/modules.aggs-matrix-stats.src.main.java.org.elasticsearch.search.aggregations.matrix.stats.MatrixStatsAggregator.java", "BodyUseAPI": [], "Fixed commit": "c93fb974c8690400b2cd16123a24de1bfc1d64b5", "Url": "https://api.github.com/repos/elastic/elasticsearch", "Date": "2017-04-13T07:10:42Z"},
{"Line": "=>857", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (automatedClient.Client.rm.commit(automatedClient.Client.transactionID)) { java.lang.System.out.println(((\"Transaction with id \" + (automatedClient.Client.transactionID)) + \" committed successfully.\")); }else { java.lang.System.out.println(((\"Transaction with id \" + (automatedClient.Client.transactionID)) + \" commit failed.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/5597/buggy-version/DS512.src.automatedClient.Client.java", "BodyUseAPI": [], "Fixed commit": "435f42400c692e9de6ed699cf9b0c46fd2b30252", "Url": "https://api.github.com/repos/AlexandreK88/DS512", "Date": "2013-11-08T03:02:52Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mcDataDir.endsWith(\"/\"))) mcDataDir += \"/\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/5455/buggy-version/API.src.main.java.obsidianAPI.file.FileHandler.java", "BodyUseAPI": [], "Fixed commit": "b5c1f6a4d76d5c80c35d9433cdc306169233f4b5", "Url": "https://api.github.com/repos/DaBigJoe/ObsidianSuite", "Date": "2017-05-02T15:50:36Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (queryPartsSplit[k].trim().equals(\"<>\")) { queryPartsSplit[k] = \"<font size=\\\"3\\\" face=\\\"verdana\\\" color=\\\"blue\\\">\" + ((\"&lt;\" + \"&gt;\") + \"</font>\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/4223/buggy-version/src.com.util.QueryColorUtil.java", "BodyUseAPI": [], "Fixed commit": "0a5bf2c371a8c3b3022c818bdc79048e212be43e", "Url": "https://api.github.com/repos/Gouravmoy/QueryGenerator", "Date": "2016-04-06T14:29:39Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (queryPartsSplit[k].trim().equals(\">\")) { queryPartsSplit[k] = \"<font size=\\\"3\\\" face=\\\"verdana\\\" color=\\\"blue\\\">\" + (\"&gt;\" + \"</font>\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/4223/buggy-version/src.com.util.QueryColorUtil.java", "BodyUseAPI": [], "Fixed commit": "0a5bf2c371a8c3b3022c818bdc79048e212be43e", "Url": "https://api.github.com/repos/Gouravmoy/QueryGenerator", "Date": "2016-04-06T14:29:39Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (queryPartsSplit[k].trim().equals(\"<\")) { queryPartsSplit[k] = \"<font size=\\\"3\\\" face=\\\"verdana\\\" color=\\\"blue\\\">\" + (\"&lt;\" + \"</font>\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/4223/buggy-version/src.com.util.QueryColorUtil.java", "BodyUseAPI": [], "Fixed commit": "0a5bf2c371a8c3b3022c818bdc79048e212be43e", "Url": "https://api.github.com/repos/Gouravmoy/QueryGenerator", "Date": "2016-04-06T14:29:39Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (queryPartsSplit[k].trim().equals(\"<=\")) { queryPartsSplit[k] = \"<font size=\\\"3\\\" face=\\\"verdana\\\" color=\\\"blue\\\">\" + ((\"&lt;\" + \"=\") + \"</font>\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/4223/buggy-version/src.com.util.QueryColorUtil.java", "BodyUseAPI": [], "Fixed commit": "0a5bf2c371a8c3b3022c818bdc79048e212be43e", "Url": "https://api.github.com/repos/Gouravmoy/QueryGenerator", "Date": "2016-04-06T14:29:39Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((!(socket.isConnected())) || (socket.isOutputShutdown())) || (!(socket.isBound()))) connect();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/7475/buggy-version/Roku.java", "BodyUseAPI": [], "Fixed commit": "3a56951478608eb90aebb7a6f12865b13a1aae4b", "Url": "https://api.github.com/repos/ep1cman/RokuECP", "Date": "2013-09-08T11:59:46Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((java.lang.System.currentTimeMillis()) - (lastSent)) > 2000) connect();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/7475/buggy-version/Roku.java", "BodyUseAPI": [], "Fixed commit": "3a56951478608eb90aebb7a6f12865b13a1aae4b", "Url": "https://api.github.com/repos/ep1cman/RokuECP", "Date": "2013-09-08T11:59:46Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (menu == null) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/5317/buggy-version/src.com.markchung.findexchange.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "5b9b235c25efa90623b7232ce7bae4e48f48d440", "Url": "https://api.github.com/repos/mark3049/FindExchange", "Date": "2014-07-07T07:53:40Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.View.findViewById(R.id.textView3)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (text != null) { text.setText((((user_name + \" (\") + user_mail) + \")\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/4261/buggy-version/app.src.main.java.beatprogramming.github.com.teacker_tracker.MainActivity.java", "BodyUseAPI": ["android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "0098d89bec9784cb3ed9efd293ab866760b4789b", "Url": "https://api.github.com/repos/BeatProgramming/teacher_tracker", "Date": "2016-01-10T13:07:38Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((depth) == 0) { closeExampleIfNeedeed(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/3208/buggy-version/src.main.java.org.concordion.markdown.ConcordionHtmlSerializer.java", "BodyUseAPI": [], "Fixed commit": "8f82550e51b4f26e22a62ea79496af34bc9acff1", "Url": "https://api.github.com/repos/concordion/concordion-markdown-extension", "Date": "2015-12-09T19:41:49Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"NORMAL\".equalsIgnoreCase(status)) { status = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/6487/buggy-version/src.java.com.smi.travel.datalayer.view.dao.impl.CreditNoteSummaryReportImpl.java", "BodyUseAPI": [], "Fixed commit": "80ae9de47643c09ebf1fcfdd2803448e48b7b6cc", "Url": "https://api.github.com/repos/iCONEXT/SMI_Travel", "Date": "2015-09-18T09:35:42Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"NORMAL\".equalsIgnoreCase(status)) { status = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/6487/buggy-version/src.java.com.smi.travel.datalayer.view.dao.impl.ReceiptImpl.java", "BodyUseAPI": [], "Fixed commit": "80ae9de47643c09ebf1fcfdd2803448e48b7b6cc", "Url": "https://api.github.com/repos/iCONEXT/SMI_Travel", "Date": "2015-09-18T09:35:42Z"},
{"Line": "=>322", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((proguardFile) != null) { commands.add((\"@\" + (proguardFile.getAbsolutePath()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/9133/buggy-version/src.main.java.com.jayway.maven.plugins.android.phase04processclasses.ProguardMojo.java", "BodyUseAPI": [], "Fixed commit": "8386d40f77f97a84531cc42a18c56b3492ae9cd8", "Url": "https://api.github.com/repos/tlbollwitt/maven-android-plugin", "Date": "2012-12-27T22:54:11Z"},
{"Line": "=>461", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((proguardFile) != null) { commands.add(\"-G\"); commands.add(proguardFile.getAbsolutePath()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/9133/buggy-version/src.main.java.com.jayway.maven.plugins.android.phase01generatesources.GenerateSourcesMojo.java", "BodyUseAPI": [], "Fixed commit": "8386d40f77f97a84531cc42a18c56b3492ae9cd8", "Url": "https://api.github.com/repos/tlbollwitt/maven-android-plugin", "Date": "2012-12-27T22:54:11Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((_userDao.getByEmail(email)) == null) { _userDao.save(user); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/8331/buggy-version/src.main.java.com.aol.spring.demo.MainController.java", "BodyUseAPI": ["com.aol.spring.demo.models.UserDao.save(com.aol.spring.demo.models.User)"], "Fixed commit": "30993ceb70279f8c9e12493c84342aeb0371626a", "Url": "https://api.github.com/repos/rampatra/springboot-hibernate", "Date": "2016-03-10T20:10:05Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((java.lang.Integer.parseInt(command.getArg(1))) == 0) { sendMessage(Protocol.NO_CHALLENGE); }else { player.setName(command.getArgs()[0]); name = \"Handler_\" + (player.getName()); player.setNumberOfPlayers(java.lang.Integer.parseInt(command.getArgs()[1])); server.addPlayer(player); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/1369/buggy-version/eindopdracht.server.network.PlayerHandler.java", "BodyUseAPI": ["eindopdracht.server.ServerPlayer.setNumberOfPlayers(int)", "java.lang.Integer.parseInt(command.getArgs()[1])", "eindopdracht.server.ServerPlayer.setName(command.getArgs()[0])", "eindopdracht.model.Command.getArgs()", "eindopdracht.model.Command.getArgs()"], "Fixed commit": "2daf07355e80118b6e49f4e0f3167bdab8b4b457", "Url": "https://api.github.com/repos/dolor/PracticumP2", "Date": "2012-04-03T12:33:23Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((crime.getTitle()) != null) values.put(CrimeTable.Columns.TITLE, crime.getTitle().toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/2159/buggy-version/app.src.main.java.geoquiz.book.criminalintent.model.CrimeLab.java", "BodyUseAPI": ["crime.getTitle().toString()", "android.content.ContentValues.put(CrimeTable.Columns.TITLE,crime.getTitle().toString())", "geoquiz.book.criminalintent.model.Crime.getTitle()"], "Fixed commit": "4bf7d9d79ad9c485962de21c38556e44bafaf3f0", "Url": "https://api.github.com/repos/jorgwel/CriminalIntent", "Date": "2015-09-29T23:05:20Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((crime.getDate()) != null) values.put(CrimeTable.Columns.DATE, crime.getDate().getTime());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/2159/buggy-version/app.src.main.java.geoquiz.book.criminalintent.model.CrimeLab.java", "BodyUseAPI": ["crime.getDate().getTime()", "android.content.ContentValues.put(CrimeTable.Columns.DATE,crime.getDate().getTime())", "geoquiz.book.criminalintent.model.Crime.getDate()"], "Fixed commit": "4bf7d9d79ad9c485962de21c38556e44bafaf3f0", "Url": "https://api.github.com/repos/jorgwel/CriminalIntent", "Date": "2015-09-29T23:05:20Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((crime.getId()) != null) values.put(CrimeTable.Columns.UUID, crime.getId().toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/2159/buggy-version/app.src.main.java.geoquiz.book.criminalintent.model.CrimeLab.java", "BodyUseAPI": ["crime.getId().toString()", "android.content.ContentValues.put(CrimeTable.Columns.UUID,crime.getId().toString())", "geoquiz.book.criminalintent.model.Crime.getId()"], "Fixed commit": "4bf7d9d79ad9c485962de21c38556e44bafaf3f0", "Url": "https://api.github.com/repos/jorgwel/CriminalIntent", "Date": "2015-09-29T23:05:20Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentChar == ')') && (!(isOperation(input.charAt(i))))) result += addMultiplyLexeme();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/9205/buggy-version/src.translator.LexicalAnalysis.java", "BodyUseAPI": [], "Fixed commit": "ef7af5d7a53953864d13dc79eedb4891ffd216e6", "Url": "https://api.github.com/repos/greshnikk/GFT", "Date": "2014-06-21T08:39:37Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isEnabled()) { setSelected((!(isSelected()))); invalidate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/1354/buggy-version/customview.src.main.java.ksh.jp.customview.ToggleButton.java", "BodyUseAPI": [], "Fixed commit": "fe7d6501b32d8b69b96cecb1908db8d809ae7dc8", "Url": "https://api.github.com/repos/k-sh/RoombaControlClient", "Date": "2017-10-27T20:34:14Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((data.enchantment) == null) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/841/buggy-version/java.ak.EnchantChanger.inventory.EcContainerMaterializer.java", "BodyUseAPI": [], "Fixed commit": "9d63a43cbde67329ea9f8a5393da506e0db8034f", "Url": "https://api.github.com/repos/aksource/EnchantChanger", "Date": "2015-03-30T10:12:37Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.sharingapples.sync.resource.Registrar.getNullOrText(annotation.name())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (name == null) { name = field.getName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/589/buggy-version/src.main.java.com.sharingapples.sync.resource.Registrar.java", "BodyUseAPI": [], "Fixed commit": "ccfa300c83b9b65ce46dd20e381244f85ec960dd", "Url": "https://api.github.com/repos/sharingapples/stacked", "Date": "2015-12-17T11:26:26Z"},
{"Line": "=>635", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((roundedTrueCrop.width()) > (fullSize.getWidth())) { roundedTrueCrop.right = (roundedTrueCrop.left) + (fullSize.getWidth()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/205/buggy-version/packages.WallpaperCropper.src.com.android.wallpapercropper.WallpaperCropActivity.java", "BodyUseAPI": ["android.graphics.Bitmap.getWidth()"], "Fixed commit": "ea5cc35c1a4e48aaecdd9861189b303a23c12e48", "Url": "https://api.github.com/repos/LOSP/frameworks_base", "Date": "2014-07-01T02:46:48Z"},
{"Line": "=>646", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((roundedTrueCrop.height()) > (fullSize.getHeight())) { roundedTrueCrop.bottom = (roundedTrueCrop.top) + (fullSize.getHeight()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/205/buggy-version/packages.WallpaperCropper.src.com.android.wallpapercropper.WallpaperCropActivity.java", "BodyUseAPI": ["android.graphics.Bitmap.getHeight()"], "Fixed commit": "ea5cc35c1a4e48aaecdd9861189b303a23c12e48", "Url": "https://api.github.com/repos/LOSP/frameworks_base", "Date": "2014-07-01T02:46:48Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.fasterxml.jackson.core.ObjectCodec.readTree(com.fasterxml.jackson.core.JsonParser)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (java.util.Optional.ofNullable(node.get(\"isPasswordChanged\")).map(JsonNode::asBoolean).orElse(java.lang.Boolean.FALSE).equals(java.lang.Boolean.TRUE)) { user.setPasswordHash(new org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder(11).encode(node.get(\"password\").asText())); }else { user.setPasswordHash(node.get(\"password\").asText()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/509/buggy-version/src.main.java.org.soippo.serialization.UserDeserializer.java", "BodyUseAPI": ["org.soippo.entity.User.setPasswordHash(new org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder(11).encode(node.get(\"password\").asText()))", "node.get(\"password\").asText()", "org.soippo.entity.User.setPasswordHash(node.get(\"password\").asText())", "org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder.encode(node.get(\"password\").asText())", "com.fasterxml.jackson.databind.JsonNode.get(java.lang.String)", "node.get(\"password\").asText()", "com.fasterxml.jackson.databind.JsonNode.get(java.lang.String)"], "Fixed commit": "2dcc2547b4b6e3cabeccacd9a442db84c16ebe1b", "Url": "https://api.github.com/repos/SOIPPO/Tester", "Date": "2016-08-08T10:11:15Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<java.lang.String>.next()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(chars.finished(suffix.length()))) { int currentWordEnd = currentWindowEnd + (suffix.length()); if (chars.slice(currentWindowEnd, currentWordEnd).equals(suffix)) { buffer.add(new com.almondtools.rexlex.stringsearch.StringMatch(currentWindowStart, currentWordEnd, (prefix + suffix))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/5829/buggy-version/src.main.java.com.almondtools.rexlex.stringsearch.SetBackwardOracleMatching.java", "BodyUseAPI": ["java.lang.String.length()", "chars.slice(currentWindowEnd, currentWordEnd).equals(java.lang.String)", "java.util.List<com.almondtools.rexlex.stringsearch.StringMatch>.add(com.almondtools.rexlex.stringsearch.StringMatch)", "com.almondtools.rexlex.io.CharProvider.slice(int,int)"], "Fixed commit": "3110d7f56e2148bd76c3268757b036692a1094a8", "Url": "https://api.github.com/repos/almondtools/rexlex", "Date": "2015-03-28T07:26:46Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((stOrdering) == null) stOrdering = new de.uniwue.smooth.palm.TarjanStOrdering<V, E>(undirectedGraph, s, t);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/2328/buggy-version/src.de.uniwue.smooth.orthogonal.LiuEtAlLayout.java", "BodyUseAPI": [], "Fixed commit": "2b9fb331b160c32f4a443a4bbd9626941b41ba34", "Url": "https://api.github.com/repos/bxt/smooth", "Date": "2014-02-23T18:53:00Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (block == null) return 3;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/1349/buggy-version/src.main.java.ru.minebot.extreme_energy.items.equipment.ItemEnergyTool.java", "BodyUseAPI": [], "Fixed commit": "e65035dc0d419a8d0ace7a056e7b4f99392cf8a3", "Url": "https://api.github.com/repos/Minebot17/ExtremeEnergy", "Date": "2017-11-15T11:44:06Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.event.ListSelectionEvent.getSource()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (lsm.isSelectionEmpty()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/9203/buggy-version/crypto-core.src.main.java.edu.udistrital.ing.sistemas.gui.AnalyzerGUI.java", "BodyUseAPI": [], "Fixed commit": "fd81ff1d22c72069374ffa97661d2325fa4fefe9", "Url": "https://api.github.com/repos/gerisg/cipher-app", "Date": "2014-03-21T03:54:49Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (\"\".equals(expense.get_categoryChild())) { category = expense.get_category(); }else { category = expense.get_categoryChild(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V87/7679/buggy-version/app.src.main.java.com.example.nguyennam.financialbook.recordtab.FinancialHistory.java", "BodyUseAPI": ["com.example.nguyennam.financialbook.model.Expense.get_categoryChild()", "com.example.nguyennam.financialbook.model.Expense.get_category()"], "Fixed commit": "337f9a956e91982e44bc77b97ed857f60125d44d", "Url": "https://api.github.com/repos/nguyennam271/FinancialBook", "Date": "2017-05-04T03:07:06Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!((IncomingPacket instanceof com.nexus.network.packets.Packet9AdminLogLine) || (IncomingPacket instanceof com.nexus.network.packets.Packet1RedirectedPacket))) com.nexus.network.ClientSendQueue.Log.finer((\"Sending \" + (IncomingPacket.toString())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/1252/buggy-version/src.com.nexus.network.ClientSendQueue.java", "BodyUseAPI": ["java.util.logging.Logger.finer((\"Sending \" + (IncomingPacket.toString())))", "com.nexus.interfaces.IPacket.toString()"], "Fixed commit": "ffa36c94ef7242ffdc1a5757e0dca0b1931f8a80", "Url": "https://api.github.com/repos/TeamNexus/nexus-java", "Date": "2013-04-06T07:50:53Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (this.SendQueue.contains(p)) { this.SendQueue.remove(this.SendQueue.indexOf(p)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/1252/buggy-version/src.com.nexus.network.ClientSendQueue.java", "BodyUseAPI": ["java.util.ArrayList<com.nexus.interfaces.IPacket>.indexOf(com.nexus.interfaces.IPacket)", "java.util.ArrayList<com.nexus.interfaces.IPacket>.remove(this.SendQueue.indexOf(p))"], "Fixed commit": "ffa36c94ef7242ffdc1a5757e0dca0b1931f8a80", "Url": "https://api.github.com/repos/TeamNexus/nexus-java", "Date": "2013-04-06T07:50:53Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tmp == e) { table[index] = tmp.next; }else { e.next = tmp.next; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/4067/buggy-version/CaDS.src.java.ru.rda.util.HashTable.java", "BodyUseAPI": [], "Fixed commit": "2a9c7801fd3eaa9ff0bc0d826af565acc9094d67", "Url": "https://api.github.com/repos/mityi/cads", "Date": "2013-10-30T07:36:56Z"},
{"Line": "=>651", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isTimeFetched)) { fetchTime(); isTimeFetched = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/980/buggy-version/app.src.main.java.com.iptv.iptv.main.activity.HomeActivity.java", "BodyUseAPI": [], "Fixed commit": "d8366f12dcc652f69ca642b996e5dab7f7b1bf31", "Url": "https://api.github.com/repos/pornpat/testtv", "Date": "2017-10-29T12:59:43Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["code.Pathfinding.getDirection(((x) / 32),((y) / 32))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (nextDirection != (Actor.NO_DIRECTION)) { direction = nextDirection; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/8676/buggy-version/code.entities.IntelligentCow.java", "BodyUseAPI": [], "Fixed commit": "8b7874b7c0f0d0fc264965ee5e11b88f1bed59e9", "Url": "https://api.github.com/repos/pturon/LudumDare", "Date": "2017-12-04T19:06:32Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((filters.containsKey(CaseItem.FILTER_CALLER)) && (\"any\".equalsIgnoreCase(filters.get(CaseItem.FILTER_CALLER)))) { return processAPI.searchArchivedProcessInstancesInAllStates(builder.done()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/2467/buggy-version/rest-api.rest-api-server.src.main.java.org.bonitasoft.web.rest.server.datastore.bpm.cases.ArchivedCaseDatastore.java", "BodyUseAPI": [], "Fixed commit": "c325cc752010de1126af52314a89b7ff3db3d800", "Url": "https://api.github.com/repos/bonitasoft/bonita-web", "Date": "2013-12-12T10:14:35Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((pratilipiData.getCategoryIdList()) != null) for (java.lang.Long genreId : pratilipiData.getCategoryIdList()) docBuilder.addField(com.google.appengine.api.search.Field.newBuilder().setName(\"genre\").setAtom(genreId.toString()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/8794/buggy-version/src.main.java.com.pratilipi.data.SearchAccessorGaeImpl.java", "BodyUseAPI": ["com.pratilipi.data.client.PratilipiData.getCategoryIdList()"], "Fixed commit": "f8a0bc9bd4c7a7f7d5fe3ed9716baa4c5e9a699f", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2015-07-27T07:37:07Z"},
{"Line": "=>313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (operation instanceof com.owncloud.android.operations.GetSharesForFileOperation) { if ((result.getCode()) == (com.owncloud.android.lib.common.operations.RemoteOperationResult.ResultCode.MAINTENANCE_MODE)) { message = res.getString(R.string.maintenance_mode); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/1650/buggy-version/src.main.java.com.owncloud.android.utils.ErrorMessageAdapter.java", "BodyUseAPI": [], "Fixed commit": "412ce69fcbaa82ed34c1ae643458100d41255c90", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2016-12-28T09:27:05Z"},
{"Line": "=>303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((str.length()) == 0) return str;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/318/buggy-version/src.engine.save.SaveData.java", "BodyUseAPI": [], "Fixed commit": "dad1c61afd553bf151fbe642d3b39a64075588d9", "Url": "https://api.github.com/repos/DrFair/Game", "Date": "2016-11-30T04:18:59Z"},
{"Line": "=>806", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (corrupted || (oldVersion != null)) { newLine = new java.lang.StringBuilder(org.apache.commons.lang.StringUtils.join(newCharacter, \":\")); newLine = newLine.append(\":\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/6504/buggy-version/src.main.java.com.gmail.nossr50.database.FlatfileDatabaseManager.java", "BodyUseAPI": [], "Fixed commit": "0ddc70987a31bcc07e8ee5a43f547ad27e0b27bc", "Url": "https://api.github.com/repos/mcMMO-Dev/mcMMO", "Date": "2014-07-12T11:58:36Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (modules.contains(module)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/6740/buggy-version/com.anjlab.eclipse.tapestry5.src.com.anjlab.eclipse.tapestry5.TapestryProject.java", "BodyUseAPI": [], "Fixed commit": "737f00d67a09590afc65917adadf968b59ce1e43", "Url": "https://api.github.com/repos/anjlab/eclipse-tapestry5-plugin", "Date": "2013-12-06T18:52:02Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["session.createQuery(\"from Result\").getResultList()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((results.size()) > 0) { session.flush(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/1794/buggy-version/db_hackaton.src.main.java.ru.atom.dbhackaton.dao.ResultDao.java", "BodyUseAPI": [], "Fixed commit": "f4f6975c9a450bff517969cee7197c3eeb1e0425", "Url": "https://api.github.com/repos/SaenkoDmitry/atom", "Date": "2017-04-18T22:53:52Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (upperLimit != 0) { numberOfInstances = (activeMemberCount * predictedValue) / upperLimit; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/3183/buggy-version/components.org.apache.stratos.autoscaler.src.main.java.org.apache.stratos.autoscaler.rule.RuleTasksDelegator.java", "BodyUseAPI": [], "Fixed commit": "b0d1acabc4050cb5c4df48576aa1f0fe494a4f84", "Url": "https://api.github.com/repos/apache/stratos", "Date": "2014-12-09T15:32:51Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type.equals(\"reset\")) { if (!(userService.resetPass(id))) message = \"Reset password tha\u0300nh c\u00f4ng\"; else { message = \"Reset password kh\u00f4ng tha\u0300nh c\u00f4ng\"; } }else { if (!(userService.deleteUser(id))) message = \"Xo\u0301a tha\u0300nh c\u00f4ng\"; else { message = \"Xo\u0301a kh\u00f4ng tha\u0300nh c\u00f4ng\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/2238/buggy-version/src.main.java.controller.AccountController.java", "BodyUseAPI": [], "Fixed commit": "7986942612ae4f19ca161936977dfeb14d7b72a1", "Url": "https://api.github.com/repos/haiht01666/management-store", "Date": "2016-05-22T03:22:22Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["service.UserService.countAllUser(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (numberUser > (recordOfPage)) { count = ((numberUser % (recordOfPage)) == 0) ? numberUser / (recordOfPage) : (numberUser / (recordOfPage)) + 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/2238/buggy-version/src.main.java.controller.AccountController.java", "BodyUseAPI": [], "Fixed commit": "7986942612ae4f19ca161936977dfeb14d7b72a1", "Url": "https://api.github.com/repos/haiht01666/management-store", "Date": "2016-05-22T03:22:22Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(isControlPacket(openFlowPacketContext.parsed()))) { openFlowPacketContext.block(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/7004/buggy-version/onos-shim.src.main.java.eu.netide.shim.NetIDEDeviceListener.java", "BodyUseAPI": ["org.onosproject.openflow.controller.OpenFlowPacketContext.block()"], "Fixed commit": "15fe33fadc8997916930c64f03fc34f89c6de0cb", "Url": "https://api.github.com/repos/fp7-netide/Engine", "Date": "2016-11-29T14:04:06Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.fusesource.fabric.service.jclouds.commands.CloudProviderRemove.findConfigurationByFactoryPid(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (computeConfigs != null) { for (org.osgi.service.cm.Configuration configuration : computeConfigs) { configuration.delete(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/1728/buggy-version/fabric.fabric-core-agent-jclouds.src.main.java.org.fusesource.fabric.service.jclouds.commands.CloudProviderRemove.java", "BodyUseAPI": [], "Fixed commit": "470d25e723b100ecd6c37929d269a0773121016c", "Url": "https://api.github.com/repos/fusesource/fuse", "Date": "2012-06-16T11:09:02Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<com.spykins.assessment.MainScreen.model.FavMovie>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (favMovie != null) { holder.titleTextView.setText(favMovie.title); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/1045/buggy-version/app.src.main.java.com.spykins.assessment.MainScreen.mainView.adapter.RecyclerViewAdapter.java", "BodyUseAPI": ["android.widget.TextView.setText(favMovie.title)"], "Fixed commit": "62498616310c73921c7b1266c4a31a53eb536fc1", "Url": "https://api.github.com/repos/spykins/FavouriteMovies", "Date": "2017-02-08T16:23:44Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<S, A>.remove(S)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (old != null) { fireScopeFacetChangeEvent(id, obj, old, DataFacetChangeEvent.DATA_REMOVED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/770/buggy-version/code.src.java.pcgen.cdom.facet.base.AbstractAssociationFacet.java", "BodyUseAPI": ["pcgen.cdom.facet.base.AbstractAssociationFacet<S, A>.fireScopeFacetChangeEvent(pcgen.cdom.enumeration.CharID,S,A,DataFacetChangeEvent.DATA_REMOVED)"], "Fixed commit": "53042b19cf0d7f11f28e34620b0ab86d38e14040", "Url": "https://api.github.com/repos/PCGen/pcgen", "Date": "2015-05-25T10:17:14Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mustHit) { if (!(sword.isHeld())) { player.emitParticle(); player.die(); mustKill = true; }else { mustKill = player.hit(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/1258/buggy-version/src.main.java.nidhogglike.motion.NidhoggOverlapRulesApplier.java", "BodyUseAPI": [], "Fixed commit": "593e871b59a9dc614d9e873b5618ae6b7bdf963d", "Url": "https://api.github.com/repos/Nesqwik/Nidhogg_like", "Date": "2016-01-30T13:05:43Z"},
{"Line": "=>372", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (node.hasProperty(VdbLexicon.DataRole.MAPPED_ROLE_NAMES)) { javax.jcr.Property property = node.getProperty(VdbLexicon.DataRole.MAPPED_ROLE_NAMES); javax.jcr.Value[] mappedRoleValues = property.getValues(); for (javax.jcr.Value value : mappedRoleValues) { writeTab(org.komodo.modeshape.visitor.VdbNodeVisitor.ElementTabValue.MAPPED_ROLE_NAME); writeElementWithText(VdbLexicon.ManifestIds.MAPPED_ROLE_NAME, value.getString()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/2038/buggy-version/komodo-modeshape-vdb.src.main.java.org.komodo.modeshape.visitor.VdbNodeVisitor.java", "BodyUseAPI": ["javax.jcr.Node.getProperty(VdbLexicon.DataRole.MAPPED_ROLE_NAMES)"], "Fixed commit": "5e8b9a84f890f54a3e37c0091fd6e861ba53e168", "Url": "https://api.github.com/repos/elvisisking/komodo", "Date": "2017-07-21T17:13:25Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.ByteBuffer.getInt()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isTestnet && (prefix != 70617039)) { throw new org.bitcoinj.core.AddressFormatException(\"invalid xpub version\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/3148/buggy-version/src.main.java.info.blockchain.bip44.Account.java", "BodyUseAPI": [], "Fixed commit": "cb43917b8df17ca63433ad7348e15302d23201f6", "Url": "https://api.github.com/repos/blockchain/unused-My-Wallet-V3-jar", "Date": "2017-01-18T11:57:10Z"},
{"Line": "=>1137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((imageOffsets.get(i)) - length) != (offsetDiff + 8)) { if (i == 0) { fixByteCounts = true; } imageOffsets.remove(i); imageLengths.remove(i); i--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/9076/buggy-version/components.formats-gpl.src.loci.formats.in.NativeND2Reader.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.Long>.remove(int)", "java.util.ArrayList<int[]>.remove(int)"], "Fixed commit": "d155c88a0126e3b016079f22cf54bfa3108f0b69", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2017-08-28T00:00:55Z"},
{"Line": "=>697", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((lastImage.position) + (lastImage.length)) >= (in.length())) { in.seek(((lastImage.position) + 16)); }else { in.seek(((lastImage.position) + (lastImage.length))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/9076/buggy-version/components.formats-gpl.src.loci.formats.in.NativeND2Reader.java", "BodyUseAPI": ["loci.formats.in.NativeND2Reader.seek(long)", "loci.formats.in.NativeND2Reader.seek(long)"], "Fixed commit": "d155c88a0126e3b016079f22cf54bfa3108f0b69", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2017-08-28T00:00:55Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((defaultTemperature) == (java.lang.Double.NaN)) { defaultTemperature = independent_study.lightningtimer.Utilities.convertTemperature(java.lang.Double.parseDouble(sharedPreferences.getString(\"default_temperature_text\", \"75\")), Utilities.TEMPERATURE_CONVERT.FAHRENHEIT_TO_KELVIN); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/6847/buggy-version/app.src.main.java.independent_study.lightningtimer.WeatherInfoManager.java", "BodyUseAPI": [], "Fixed commit": "078bba40f8ab6960e85069af5526c783cf2cad62", "Url": "https://api.github.com/repos/TheNextTesla/LightningTimer", "Date": "2017-10-04T17:00:28Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["independent_study.lightningtimer.WeatherInfoManager.2.getCurrentTemperature(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (tempDefaultTemperature != (java.lang.Double.NaN)) { defaultTemperature = tempDefaultTemperature; android.util.Log.d(\"Weather Info Manager\", ((\"Changed (ZIP) Temperature to be \" + (defaultTemperature)) + \" K\")); processStatus = independent_study.lightningtimer.WeatherInfoManager.PROCESS_STATUS.ONLINE_ZIP; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/6847/buggy-version/app.src.main.java.independent_study.lightningtimer.WeatherInfoManager.java", "BodyUseAPI": [], "Fixed commit": "078bba40f8ab6960e85069af5526c783cf2cad62", "Url": "https://api.github.com/repos/TheNextTesla/LightningTimer", "Date": "2017-10-04T17:00:28Z"},
{"Line": "=>273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((root.getData().compareToIgnoreCase(delString)) == 0) { root.setData(findMin(root.getRightChild())); root.setRightChild(root.getRightChild().getRightChild()); java.lang.System.out.println((\"ROOT NODE deletion. New ROOT value is now \" + (root.getData()))); }else if (find(delString)) { while (!isDeleted) { if ((currentNode.getData().compareToIgnoreCase(delString)) == 0) { java.lang.System.out.println((\"\\n\\nDeleting Node with value: \" + delString)); if ((previousNode.getData().compareToIgnoreCase(delString)) > 0) { if (((currentNode.getLeftChild()) == null) && ((currentNode.getRightChild()) == null)) { previousNode.setLeftChild(null); }else if (((currentNode.getLeftChild()) != null) && ((currentNode.getRightChild()) == null)) { previousNode.setLeftChild(currentNode.getLeftChild()); }else if (((currentNode.getLeftChild()) == null) && ((currentNode.getRightChild()) != null)) { previousNode.setLeftChild(currentNode.getRightChild()); }else if (((currentNode.getLeftChild()) != null) && ((currentNode.getRightChild()) != null)) { while ((currentNode.getLeftChild()) != null) { previousNode = currentNode; currentNode = currentNode.getLeftChild(); } currentNode.setData(findMin(currentNode)); previousNode.setLeftChild(null); } }else if ((previousNode.getData().compareToIgnoreCase(delString)) < 0) { if (((currentNode.getLeftChild()) == null) && ((currentNode.getRightChild()) == null)) { previousNode.setRightChild(null); }else if (((currentNode.getLeftChild()) != null) && ((currentNode.getRightChild()) == null)) { previousNode.setRightChild(currentNode.getLeftChild()); }else if (((currentNode.getLeftChild()) == null) && ((currentNode.getRightChild()) != null)) { previousNode.setRightChild(currentNode.getRightChild()); }else if (((currentNode.getLeftChild()) != null) && ((currentNode.getRightChild()) != null)) { while ((currentNode.getLeftChild()) != null) { previousNode = currentNode; currentNode = currentNode.getLeftChild(); } currentNode.setData(findMin(currentNode)); previousNode.setLeftChild(null); } } isDeleted = true; }else if ((currentNode.getData().compareToIgnoreCase(delString)) > 0) { previousNode = currentNode; currentNode = currentNode.getLeftChild(); }else if ((currentNode.getData().compareToIgnoreCase(delString)) < 0) { previousNode = currentNode; currentNode = currentNode.getRightChild(); } } }else { java.lang.System.out.println(((\"The string \" + delString) + \" is NOT in the Binary Tree.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/4187/buggy-version/BinaryTree.BinaryTree.java", "BodyUseAPI": ["previousNode.getData().compareToIgnoreCase(java.lang.String)", "currentNode.getData().compareToIgnoreCase(java.lang.String)", "currentNode.getData().compareToIgnoreCase(java.lang.String)", "Node.getData()", "java.io.PrintStream.println(java.lang.String)", "Node.getRightChild()", "previousNode.getData().compareToIgnoreCase(java.lang.String)", "currentNode.getData().compareToIgnoreCase(java.lang.String)", "BinaryTree.findMin(root.getRightChild())", "Node.setRightChild(root.getRightChild().getRightChild())", "BinaryTree.find(java.lang.String)", "Node.getRightChild()", "java.io.PrintStream.println(java.lang.String)", "java.io.PrintStream.println((\"ROOT NODE deletion. New ROOT value is now \" + (root.getData())))", "root.getRightChild().getRightChild()", "Node.setData(java.lang.String)"], "Fixed commit": "0e61770477c005091073270692fca3c320ea6ea4", "Url": "https://api.github.com/repos/StanDroid888/Java-Data-Structures", "Date": "2013-08-10T00:20:36Z"},
{"Line": "=>401", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.dakusui.jcunit.enumerator.ipo.IPO.Run.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((com.github.dakusui.jcunit.enumerator.ipo.IPO.lookUp(com.github.dakusui.jcunit.enumerator.ipo.IPO.lookUp(T, Fi, r), Fk, s).size()) == 0) ret.add(p);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/7171/buggy-version/src.main.java.com.github.dakusui.jcunit.enumerator.ipo.IPO.java", "BodyUseAPI": [], "Fixed commit": "6bf07d11fb6dfd44192c514b65744ef92c096075", "Url": "https://api.github.com/repos/dakusui/jcunit", "Date": "2013-08-27T21:30:49Z"},
{"Line": "=>678", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(form.isFieldBinded(holder, dataFieldHolder.getId()))) addDataFieldHolder(form, holderId, dataFieldHolder.getId(), dataFieldHolder.getClassName());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/8963/buggy-version/jbpm-form-modeler-core.jbpm-form-modeler-service.jbpm-form-modeler-service-core.src.main.java.org.jbpm.formModeler.core.config.FormManagerImpl.java", "BodyUseAPI": ["org.jbpm.formModeler.core.config.DataFieldHolder.getId()", "org.jbpm.formModeler.core.config.DataFieldHolder.getClassName()", "org.jbpm.formModeler.core.config.FormManagerImpl.addDataFieldHolder(org.jbpm.formModeler.core.config.Form,java.lang.String,dataFieldHolder.getId(),dataFieldHolder.getClassName())"], "Fixed commit": "cb8282bee69d5111624abdbf3373b92efa1dd068", "Url": "https://api.github.com/repos/droolsjbpm/jbpm-form-modeler", "Date": "2013-08-28T10:11:23Z"},
{"Line": "=>446", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (extrasBundle == (emptyBundle)) extrasBundle = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/378/buggy-version/ClientLib.src.main.java.org.droidplanner.services.android.impl.api.DroneApi.java", "BodyUseAPI": [], "Fixed commit": "bcb54401c040bf914b41354366d24b38d21be4d8", "Url": "https://api.github.com/repos/dronekit/dronekit-android", "Date": "2016-08-03T07:35:28Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.quickblox.q_municate_core.qb.helpers.QBBaseChatHelper.getDialogMessages(com.quickblox.core.request.QBRequestGetBuilder,android.os.Bundle,com.quickblox.chat.model.QBDialog,long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((dialogMessagesList.size()) > (com.quickblox.q_municate_core.utils.ConstsCore.ZERO_INT_VALUE)) { baseChatHelper.saveLoadedMessages(dialog.getDialogId(), dialogMessagesList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/5459/buggy-version/Q-municate_core.src.main.java.com.quickblox.q_municate_core.qb.commands.QBLoadDialogMessagesCommand.java", "BodyUseAPI": ["com.quickblox.q_municate_core.qb.helpers.QBBaseChatHelper.saveLoadedMessages(dialog.getDialogId(),java.util.List<com.quickblox.chat.model.QBChatMessage>)"], "Fixed commit": "26205fc163c6aa1cf0b094867e90c22fdb945aeb", "Url": "https://api.github.com/repos/QuickBlox/q-municate-android", "Date": "2015-08-13T12:41:45Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (tracks == null) { throw new java.lang.IllegalArgumentException(\"tracks cannot be null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/3621/buggy-version/app.src.main.java.com.example.android.spotifystreamer.PlayerFragment.java", "BodyUseAPI": [], "Fixed commit": "8059db4c34dec3190c5256d9952675bde33f9e9c", "Url": "https://api.github.com/repos/d-y/spotify-streamer", "Date": "2015-09-05T05:10:09Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (portalModifier.upgradeHandler.hasUpgrade(new enhancedportals.portal.upgrades.modifier.UpgradeDialDevice())) { ((enhancedcore.gui.GuiItemStackButton) (button)).isActive = true; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/3400/buggy-version/common.enhancedportals.client.gui.GuiPortalModifier.java", "BodyUseAPI": [], "Fixed commit": "181b5585ad79661f89d75c29034e50e345bc5f2d", "Url": "https://api.github.com/repos/ShadedDimension/enhanced-portals", "Date": "2013-06-22T22:36:05Z"},
{"Line": "=>464", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((transitDetails) != null) { stepString.append((((extraIndent + \"transitDetails:\") + (transitDetails.toString())) + \"\\n\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/5769/buggy-version/MetroBike.src.com.HuskySoft.metrobike.backend.Step.java", "BodyUseAPI": [], "Fixed commit": "d663cb8960ba4751606a94d3768365e4bff5921f", "Url": "https://api.github.com/repos/alaurenz/metrobike", "Date": "2013-05-20T05:53:13Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mNormalData.isEmpty()) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/1785/buggy-version/libary.src.main.java.com.xinyi.czsuperadapter.main.CZSuperAdapter.java", "BodyUseAPI": [], "Fixed commit": "eea34aded542ad8cf56aa8aa97e71ac2764b66a0", "Url": "https://api.github.com/repos/XinYiWorld/CZSuperAdapters", "Date": "2017-04-26T10:15:15Z"},
{"Line": "=>412", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["soot.jimple.XorExpr.getOp2()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((secondOperand.equals(soot.jimple.IntConstant.v((-1)))) || (secondOperand.equals(soot.jimple.LongConstant.v((-1))))) { soot.toDex.PrimitiveType destRegType = soot.toDex.PrimitiveType.getByName(destinationReg.getType().toString()); soot.toDex.Register orgDestReg = destinationReg; if (isBiggerThan(soot.toDex.PrimitiveType.getByName(secondOperand.getType().toString()), destRegType)) { destinationReg = regAlloc.asTmpReg(soot.IntType.v()); } if (secondOperand.equals(soot.jimple.IntConstant.v((-1)))) { soot.toDex.Register sourceReg = regAlloc.asImmediate(firstOperand, constantV); stmtV.addInsn(new soot.toDex.instructions.Insn12x(org.jf.dexlib2.Opcode.NOT_INT, destinationReg, sourceReg), origStmt); }else if (secondOperand.equals(soot.jimple.LongConstant.v((-1)))) { soot.toDex.Register sourceReg = regAlloc.asImmediate(firstOperand, constantV); stmtV.addInsn(new soot.toDex.instructions.Insn12x(org.jf.dexlib2.Opcode.NOT_LONG, destinationReg, sourceReg), origStmt); } if (orgDestReg != (destinationReg)) { soot.toDex.Register tempReg = destinationReg.clone(); destinationReg = orgDestReg.clone(); castPrimitive(tempReg, secondOperand, destinationReg.getType()); } }else { buildCalculatingBinaryInsn(\"XOR\", firstOperand, secondOperand, xe); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/6210/buggy-version/src.soot.toDex.ExprVisitor.java", "BodyUseAPI": ["soot.Value.getType()", "soot.toDex.ExprVisitor.buildCalculatingBinaryInsn(java.lang.String,soot.Value,soot.Value,soot.jimple.XorExpr)", "soot.toDex.ExprVisitor.isBiggerThan(soot.toDex.PrimitiveType.getByName(secondOperand.getType().toString()),soot.toDex.PrimitiveType)", "secondOperand.getType().toString()", "soot.toDex.ExprVisitor.castPrimitive(soot.toDex.Register,soot.Value,destinationReg.getType())", "soot.toDex.PrimitiveType.getByName(secondOperand.getType().toString())", "soot.Value.equals(soot.jimple.IntConstant.v((-1)))", "soot.Value.equals(soot.jimple.LongConstant.v((-1)))"], "Fixed commit": "08a4ef866989d9463f434c404629b872661b7f89", "Url": "https://api.github.com/repos/Sable/soot", "Date": "2017-01-23T14:42:05Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isChanged) { android.content.Intent IntentToNewWP = new android.content.Intent(this, orion.ms.sara.NewWayPointActivity.class); IntentToNewWP.putExtra(\"newLatitude\", java.lang.String.valueOf(mapLatitude)); IntentToNewWP.putExtra(\"newLongitude\", java.lang.String.valueOf(mapLongitude)); setResult(orion.ms.sara.RESULT_OK, IntentToNewWP); finish(); }else { finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/42/buggy-version/src.orion.ms.sara.WaypointMapActivity.java", "BodyUseAPI": [], "Fixed commit": "29cfcea819f52fe032fe1cf1c7fa686f27fb1526", "Url": "https://api.github.com/repos/bradshoow/SARA", "Date": "2014-05-01T16:13:31Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((searchMarker) != null) { searchMarker.remove(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/2964/buggy-version/app.src.main.java.com.gailardia.lymbo.Rider.java", "BodyUseAPI": [], "Fixed commit": "c7241cfed9d73dac3f5f35352d0e0fed8548f8a0", "Url": "https://api.github.com/repos/MohannedElfatih/Lymbo", "Date": "2016-08-07T04:58:38Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (edu.usf.ratsim.support.Configuration.getBoolean(\"UniverseFrame.display\")) bg.addChild(w);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/5569/buggy-version/src.edu.usf.ratsim.robot.virtual.VirtualExpUniverse.java", "BodyUseAPI": [], "Fixed commit": "787ecf8eaf91272b15fdb95e58a69f343859edf6", "Url": "https://api.github.com/repos/mllofriu/rat_simulator", "Date": "2014-07-01T19:35:35Z"},
{"Line": "=>2372", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (service instanceof org.apache.camel.CamelContextAware) { org.apache.camel.CamelContextAware aware = ((org.apache.camel.CamelContextAware) (service)); aware.setCamelContext(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/584/buggy-version/camel-core.src.main.java.org.apache.camel.impl.DefaultCamelContext.java", "BodyUseAPI": [], "Fixed commit": "5933e8e6bb91b9fb1877543161ceae2ca359489c", "Url": "https://api.github.com/repos/jcordes73/camel", "Date": "2014-12-02T07:47:14Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sourceAsMap == null) { if (hit.isSourceEmpty()) { if (!emptySourceWarningEmitted) { emptySourceWarningEmitted = true; logger.warn(\"_source field mapping used but no source available for: {}, field {}\", hit.getId(), spec.field); } }else { sourceAsMap = hit.getSource(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/2123/buggy-version/src.main.java.org.carrot2.elasticsearch.TransportCarrot2ClusteringAction.java", "BodyUseAPI": [], "Fixed commit": "d9d05cc73939343943ca1d3b45c7c5bc72eb2dbe", "Url": "https://api.github.com/repos/carrot2/elasticsearch-carrot2", "Date": "2013-07-02T08:31:34Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((team.players) != null) { for (java.lang.String s : team.players) { if (((team.mode) == 0) || ((team.mode) == 3)) { t.addPlayer(s); }else { t.removePlayer(s); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/6461/buggy-version/proxy.src.main.java.net.md_5.bungee.connection.DownstreamBridge.java", "BodyUseAPI": [], "Fixed commit": "5620c4679d5e9b03d18e85f09984854506dd19c4", "Url": "https://api.github.com/repos/ElasticPortalSuite/BungeeCord", "Date": "2013-04-13T23:33:36Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (optParam == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/3980/buggy-version/es.alrocar.poiproxy.src.main.java.es.alrocar.poiproxy.configuration.DescribeService.java", "BodyUseAPI": [], "Fixed commit": "f7d522b8a12288821e784d2271c8e3353a621e8b", "Url": "https://api.github.com/repos/alrocar/POIProxy", "Date": "2016-06-27T16:17:41Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (p == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/3980/buggy-version/es.alrocar.poiproxy.src.main.java.es.alrocar.poiproxy.proxy.LocalFilter.java", "BodyUseAPI": [], "Fixed commit": "f7d522b8a12288821e784d2271c8e3353a621e8b", "Url": "https://api.github.com/repos/alrocar/POIProxy", "Date": "2016-06-27T16:17:41Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((enemyPet) != null) { enemyPet.setHappiness(happiness); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/1169/buggy-version/src.model.Model.java", "BodyUseAPI": [], "Fixed commit": "53a74e05602c4c7a8ca77982cf44f0561a7779cc", "Url": "https://api.github.com/repos/wilq1994/Projekt-Java", "Date": "2016-01-22T12:12:06Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((enemyPet) != null) { return enemyPet.getHappiness(); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/1169/buggy-version/src.model.Model.java", "BodyUseAPI": [], "Fixed commit": "53a74e05602c4c7a8ca77982cf44f0561a7779cc", "Url": "https://api.github.com/repos/wilq1994/Projekt-Java", "Date": "2016-01-22T12:12:06Z"},
{"Line": "=>582", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (what == (android.media.MediaPlayer.MEDIA_INFO_BUFFERING_END)) { if ((fm.jiecao.jcvideoplayer_lib.JCVideoPlayer.BACKUP_PLAYING_BUFFERING_STATE) != (-1)) { setStateAndUi(fm.jiecao.jcvideoplayer_lib.JCVideoPlayer.BACKUP_PLAYING_BUFFERING_STATE); fm.jiecao.jcvideoplayer_lib.JCVideoPlayer.BACKUP_PLAYING_BUFFERING_STATE = -1; } android.util.Log.i(fm.jiecao.jcvideoplayer_lib.JCVideoPlayer.TAG, \"MEDIA_INFO_BUFFERING_END\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/861/buggy-version/jcvideoplayer-lib.src.main.java.fm.jiecao.jcvideoplayer_lib.JCVideoPlayer.java", "BodyUseAPI": [], "Fixed commit": "a464e341b05bc45c2b87cb4573474015f01b11bc", "Url": "https://api.github.com/repos/lipangit/JiaoZiVideoPlayer", "Date": "2016-06-30T09:55:16Z"},
{"Line": "=>250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.block.Block.getType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((((mBlock == (org.bukkit.Material.IRON_DOOR_BLOCK)) || (mBlock == (org.bukkit.Material.WOODEN_DOOR))) || (mBlock == (org.bukkit.Material.TRAP_DOOR))) || (mBlock == (org.bukkit.Material.FENCE_GATE))) { return (iData & 4) == 4 ? 15 : 0; }else if ((((mBlock == (org.bukkit.Material.REDSTONE_LAMP_OFF)) || (mBlock == (org.bukkit.Material.REDSTONE_LAMP_ON))) || (mBlock == (org.bukkit.Material.REDSTONE_TORCH_OFF))) || (mBlock == (org.bukkit.Material.REDSTONE_TORCH_ON))) { return com.ne0nx3r0.quantum.circuits.CircuitManager.keepAlives.contains(b) ? 15 : 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/4437/buggy-version/com.ne0nx3r0.quantum.circuits.CircuitManager.java", "BodyUseAPI": [], "Fixed commit": "3d6794a1cba9b57964b3c86ab58cf6c9408e748e", "Url": "https://api.github.com/repos/Ne0nx3r0/Quantum-Connectors", "Date": "2012-06-15T23:44:42Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (file == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/8182/buggy-version/src.main.java.edu.jiangxin.searchengine.split.MySpilt.java", "BodyUseAPI": [], "Fixed commit": "15356d6239a0cbf5c34bd0b4e3f857fb19eaaf41", "Url": "https://api.github.com/repos/jiangxincode/SearchEngine", "Date": "2016-03-12T02:54:21Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (filewriter != null) { try { filewriter.close(); } catch (java.io.IOException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/8182/buggy-version/src.main.java.edu.jiangxin.searchengine.split.MySpilt.java", "BodyUseAPI": ["java.io.FileWriter.close()"], "Fixed commit": "15356d6239a0cbf5c34bd0b4e3f857fb19eaaf41", "Url": "https://api.github.com/repos/jiangxincode/SearchEngine", "Date": "2016-03-12T02:54:21Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.list()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (children == null) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/8182/buggy-version/src.main.java.edu.jiangxin.searchengine.allinone.DeleteDirectory.java", "BodyUseAPI": [], "Fixed commit": "15356d6239a0cbf5c34bd0b4e3f857fb19eaaf41", "Url": "https://api.github.com/repos/jiangxincode/SearchEngine", "Date": "2016-03-12T02:54:21Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (history != null) historyListChange = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/8335/buggy-version/src.simpledb.MyDatabase.java", "BodyUseAPI": [], "Fixed commit": "35faf6acc01861e6042656d9268e43ae3adc6e59", "Url": "https://api.github.com/repos/howeeyz/SimpleDatabaseChallenge", "Date": "2016-03-07T02:29:00Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (history != null) historyListChange = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/8335/buggy-version/src.simpledb.MyDatabase.java", "BodyUseAPI": [], "Fixed commit": "35faf6acc01861e6042656d9268e43ae3adc6e59", "Url": "https://api.github.com/repos/howeeyz/SimpleDatabaseChallenge", "Date": "2016-03-07T02:29:00Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((results == null) || (results.isEmpty())) { return com.google.common.collect.Lists.newArrayList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/340/buggy-version/client.src.main.java.com.metamx.druid.query.timeboundary.TimeBoundaryQuery.java", "BodyUseAPI": [], "Fixed commit": "6827e48bd348e6628c126eec05566556b79488a4", "Url": "https://api.github.com/repos/metamx/druid", "Date": "2012-12-11T23:09:16Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (retVal == null) { throw new com.metamx.common.ISE(\"Mismatch! Agg[%s] was not specified!\", fieldName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/340/buggy-version/common.src.main.java.com.metamx.druid.aggregation.post.FieldAccessPostAggregator.java", "BodyUseAPI": [], "Fixed commit": "6827e48bd348e6628c126eec05566556b79488a4", "Url": "https://api.github.com/repos/metamx/druid", "Date": "2012-12-11T23:09:16Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.example.natia.flock1.MainActivity.calledAlready)) { com.google.firebase.database.FirebaseDatabase.getInstance().setPersistenceEnabled(true); com.example.natia.flock1.MainActivity.calledAlready = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/6934/buggy-version/Flock1.app.src.main.java.com.example.natia.flock1.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "942abe666813e79d470cda6da53fb2e1616c3bdd", "Url": "https://api.github.com/repos/CUNYTech/EventApp", "Date": "2017-11-07T22:50:26Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Settings.System.getInt(mContext.getContentResolver(), Settings.System.SHOW_FOURG, 0)) == 1) { mNetworkToIconLookup.put(TelephonyManager.NETWORK_TYPE_LTE, TelephonyIcons.FOUR_G); if (mConfig.hideLtePlus) { mNetworkToIconLookup.put(TelephonyManager.NETWORK_TYPE_LTE_CA, TelephonyIcons.FOUR_G); }else { mNetworkToIconLookup.put(TelephonyManager.NETWORK_TYPE_LTE_CA, TelephonyIcons.FOUR_G_PLUS); } }else { mNetworkToIconLookup.put(TelephonyManager.NETWORK_TYPE_LTE, TelephonyIcons.LTE); if (mConfig.hideLtePlus) { mNetworkToIconLookup.put(TelephonyManager.NETWORK_TYPE_LTE_CA, TelephonyIcons.LTE); }else { mNetworkToIconLookup.put(TelephonyManager.NETWORK_TYPE_LTE_CA, TelephonyIcons.LTE_PLUS); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/5925/buggy-version/packages.SystemUI.src.com.android.systemui.statusbar.policy.MobileSignalController.java", "BodyUseAPI": [], "Fixed commit": "51c52883faf67b49d5c5386a9589b26f4ad22929", "Url": "https://api.github.com/repos/CMRemix/android_frameworks_base", "Date": "2017-05-16T04:47:58Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sieger) == 0) { return sieger; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/3840/buggy-version/Watten-server.src.de.verbund.watten.spiel.SpielRunde.java", "BodyUseAPI": [], "Fixed commit": "1fa3b74ea354ceb7aca9f977fa7720399d12ab53", "Url": "https://api.github.com/repos/SRTigers98/Watten", "Date": "2017-01-24T15:02:05Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wso2.siddhi.query.compiler.internal.SiddhiQLBaseVisitorImpl.visit(SiddhiQLParser.Execution_elementContext)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (executionElement instanceof org.wso2.siddhi.query.api.execution.query.Query) { executionPlan.addQuery(((org.wso2.siddhi.query.api.execution.query.Query) (executionElement))); }else if (executionElement instanceof org.wso2.siddhi.query.api.execution.Subscription) { executionPlan.addSubscription(((org.wso2.siddhi.query.api.execution.Subscription) (executionElement))); }else { throw newSiddhiParserException(ctx); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/2145/buggy-version/modules.siddhi-query-compiler.src.main.java.org.wso2.siddhi.query.compiler.internal.SiddhiQLBaseVisitorImpl.java", "BodyUseAPI": [], "Fixed commit": "b226b1e712bf0ce2720915f20503e56d3b2d050c", "Url": "https://api.github.com/repos/thiliA/siddhi", "Date": "2017-01-18T11:19:45Z"},
{"Line": "=>1139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ability.isUsesStack()) { setJustActivatedType(ability.getAbilityType()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/7574/buggy-version/Mage.src.mage.players.PlayerImpl.java", "BodyUseAPI": ["mage.abilities.ActivatedAbility.getAbilityType()", "mage.players.PlayerImpl.setJustActivatedType(ability.getAbilityType())"], "Fixed commit": "c7edbbac5bffc2fc992b79b776d3750ddfce6a6a", "Url": "https://api.github.com/repos/magefree/mage", "Date": "2015-09-25T20:04:49Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((numberBubbles) > 0) { if (!(bubbles[((numberBubbles) - 1)].isAlive())) { blown = true; } }else if ((maxBubbles) <= 0) { blown = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/8189/buggy-version/src.main.java.entities.Bubbles.java", "BodyUseAPI": ["bubbles[((numberBubbles) - 1)].isAlive()"], "Fixed commit": "c67508b11c144dfb184bf80fedf6d373113f2672", "Url": "https://api.github.com/repos/tcbaars/TI2206_Group0", "Date": "2015-09-25T22:53:34Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((helperEntity) == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/7082/buggy-version/src.main.java.com.sbu.service.impl.DiscardServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "a8d217afad236a3162363c0c9bcc6b7d3880c6e3", "Url": "https://api.github.com/repos/Ardeshir-Shon/CharityProject", "Date": "2017-06-25T03:11:37Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(proxyEnabled.getValue())) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/1860/buggy-version/src.main.java.com.jaeksoft.searchlib.crawler.web.database.WebPropertyManager.java", "BodyUseAPI": [], "Fixed commit": "fe1917ab09f7c67e0d3f45c4b370df2897b0c5c9", "Url": "https://api.github.com/repos/jaeksoft/opensearchserver", "Date": "2014-03-29T21:54:34Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.ref.WeakReference<de.prob.ui.api.IToolListener>.get()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (listener != null) listener.animationChange(trigger, tool);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/5566/buggy-version/de.prob2.kernel.src.main.java.de.prob.ui.api.ToolRegistry.java", "BodyUseAPI": ["de.prob.ui.api.IToolListener.animationChange(java.lang.String,de.prob.ui.api.ITool)"], "Fixed commit": "dd3240ba0f93b49440bb5fd9e00cfc0ef6d33254", "Url": "https://api.github.com/repos/bendisposto/prob2", "Date": "2016-03-11T14:56:50Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (party != null) { parliament.voteParty(party); notifyObservers(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/5559/buggy-version/core.src.main.buildings.WhiteHouse.java", "BodyUseAPI": ["politics.Parliament.voteParty(T)"], "Fixed commit": "847edefc9e70b6f43974759cab789bf307eee7a3", "Url": "https://api.github.com/repos/Coec0/tda367-JOKE", "Date": "2017-05-18T13:51:46Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (focusChange != (android.media.AudioManager.AUDIOFOCUS_GAIN)) com.androidplayer.MusicPlayer.wasPlaying = isPlaying();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/2615/buggy-version/src.com.androidplayer.MusicPlayer.java", "BodyUseAPI": [], "Fixed commit": "be0d7ae941257939b93bf5e872568de2474cc7ab", "Url": "https://api.github.com/repos/abhinav04sharma/AndroidPlayer", "Date": "2014-04-29T16:21:43Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (postStatus2VWeb(txStatus)) { showMsg(\"update tx status is ok\"); preference.edit().lastUserTxNo().put(null).apply(); }else { showMsg(\"update tx status is error\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/1178/buggy-version/chaincloud-v.src.main.java.com.chaincloud.chaincloudv.service.WorkService.java", "BodyUseAPI": [], "Fixed commit": "c233db068e5bfbb28937d64ede663f021c941492", "Url": "https://api.github.com/repos/chaincloud-dot-com/chaincloud-v", "Date": "2017-02-08T09:27:05Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((protocol) == null) { if ((other.protocol) != null) return false; }else if (!(protocol.equals(other.protocol))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/4761/buggy-version/openstack.net-virt.src.main.java.org.opendaylight.ovsdb.openstack.netvirt.api.LoadBalancerConfiguration.java", "BodyUseAPI": [], "Fixed commit": "6ba8df16712674d30dbb67ce6e13d6ca70cbac6a", "Url": "https://api.github.com/repos/opendaylight/ovsdb", "Date": "2014-11-06T16:33:44Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((macAddr) == null) { if ((other.macAddr) != null) return false; }else if (!(macAddr.equals(other.macAddr))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/4761/buggy-version/openstack.net-virt.src.main.java.org.opendaylight.ovsdb.openstack.netvirt.api.LoadBalancerConfiguration.java", "BodyUseAPI": [], "Fixed commit": "6ba8df16712674d30dbb67ce6e13d6ca70cbac6a", "Url": "https://api.github.com/repos/opendaylight/ovsdb", "Date": "2014-11-06T16:33:44Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this) == obj) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/4761/buggy-version/openstack.net-virt.src.main.java.org.opendaylight.ovsdb.openstack.netvirt.api.LoadBalancerConfiguration.java", "BodyUseAPI": [], "Fixed commit": "6ba8df16712674d30dbb67ce6e13d6ca70cbac6a", "Url": "https://api.github.com/repos/opendaylight/ovsdb", "Date": "2014-11-06T16:33:44Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (obj == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/4761/buggy-version/openstack.net-virt.src.main.java.org.opendaylight.ovsdb.openstack.netvirt.api.LoadBalancerConfiguration.java", "BodyUseAPI": [], "Fixed commit": "6ba8df16712674d30dbb67ce6e13d6ca70cbac6a", "Url": "https://api.github.com/repos/opendaylight/ovsdb", "Date": "2014-11-06T16:33:44Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getClass()) != (obj.getClass())) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/4761/buggy-version/openstack.net-virt.src.main.java.org.opendaylight.ovsdb.openstack.netvirt.api.LoadBalancerConfiguration.java", "BodyUseAPI": [], "Fixed commit": "6ba8df16712674d30dbb67ce6e13d6ca70cbac6a", "Url": "https://api.github.com/repos/opendaylight/ovsdb", "Date": "2014-11-06T16:33:44Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((port) == null) { if ((other.port) != null) return false; }else if (!(port.equals(other.port))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/4761/buggy-version/openstack.net-virt.src.main.java.org.opendaylight.ovsdb.openstack.netvirt.api.LoadBalancerConfiguration.java", "BodyUseAPI": [], "Fixed commit": "6ba8df16712674d30dbb67ce6e13d6ca70cbac6a", "Url": "https://api.github.com/repos/opendaylight/ovsdb", "Date": "2014-11-06T16:33:44Z"},
{"Line": "=>400", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.N)) { java.io.InputStream in = getContentResolver().openInputStream(currentPhotoURI); android.media.ExifInterface ei = new android.media.ExifInterface(in); orientation = ei.getAttributeInt(ExifInterface.TAG_ORIENTATION, ExifInterface.ORIENTATION_UNDEFINED); }else { java.lang.String path = null; java.lang.String[] proj = new java.lang.String[]{ MediaStore.Images.Media.DATA }; android.database.Cursor cursor = getApplicationContext().getContentResolver().query(currentPhotoURI, proj, null, null, null); if (cursor.moveToFirst()) { int column_index = cursor.getColumnIndexOrThrow(MediaStore.Images.Media.DATA); path = cursor.getString(column_index); } cursor.close(); android.media.ExifInterface ei = new android.media.ExifInterface(path); orientation = ei.getAttributeInt(ExifInterface.TAG_ORIENTATION, ExifInterface.ORIENTATION_UNDEFINED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/3305/buggy-version/IROM.app.src.main.java.com.sjsu.se195.irom.IROMazonSearchActivity.java", "BodyUseAPI": [], "Fixed commit": "a45dedb785a251659972a7ea1ef8c2cd5dcc646f", "Url": "https://api.github.com/repos/azb/SE195A_SeniorProject", "Date": "2017-05-12T18:09:58Z"},
{"Line": "=>1290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mKeyguardViewProperties) != null) android.util.Log.d(com.android.internal.policy.impl.KeyguardViewMediator.TAG, (((((((\"adjustStatusBarLocked: mShowing=\" + (mShowing)) + \" mHidden=\") + (mHidden)) + \" isSecure=\") + (isSecure())) + \" --> flags=0x\") + (java.lang.Integer.toHexString(flags))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/2535/buggy-version/policy.src.com.android.internal.policy.impl.KeyguardViewMediator.java", "BodyUseAPI": [], "Fixed commit": "1f395eec6b1b67838278c1cac26fea57c6c58223", "Url": "https://api.github.com/repos/burstlam/android_frameworks_base", "Date": "2012-09-11T02:22:50Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((partner.getId()) == null) { return super.save(partner); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/1662/buggy-version/axelor-account.src.main.java.com.axelor.apps.account.db.repo.PartnerAccountRepository.java", "BodyUseAPI": ["com.axelor.apps.base.db.repo.PartnerBaseRepository.save(com.axelor.apps.base.db.Partner)"], "Fixed commit": "92d208616322486c9cf050d5163b96df99c8479a", "Url": "https://api.github.com/repos/axelor/axelor-business-suite", "Date": "2015-09-30T07:25:05Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (appendInnerQueryParenthesis && (value instanceof com.raizlabs.android.dbflow.sql.language.BaseModelQueriable)) { stringVal = java.lang.String.format(\"(%1s)\", ((com.raizlabs.android.dbflow.sql.language.BaseModelQueriable) (value)).getQuery().trim()); }else if (value instanceof com.raizlabs.android.dbflow.sql.language.NameAlias) { stringVal = ((com.raizlabs.android.dbflow.sql.language.NameAlias) (value)).getQuery(); }else if (value instanceof com.raizlabs.android.dbflow.sql.language.SQLCondition) { com.raizlabs.android.dbflow.sql.QueryBuilder queryBuilder = new com.raizlabs.android.dbflow.sql.QueryBuilder(); ((com.raizlabs.android.dbflow.sql.language.SQLCondition) (value)).appendConditionToQuery(queryBuilder); stringVal = queryBuilder.toString(); }else if (value instanceof com.raizlabs.android.dbflow.sql.Query) { stringVal = ((com.raizlabs.android.dbflow.sql.Query) (value)).getQuery(); }else { stringVal = java.lang.String.valueOf(value); if (!(stringVal.equals(Condition.Operation.EMPTY_PARAM))) { stringVal = android.database.DatabaseUtils.sqlEscapeString(stringVal); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/4653/buggy-version/dbflow.src.main.java.com.raizlabs.android.dbflow.sql.language.BaseCondition.java", "BodyUseAPI": ["java.lang.String.valueOf(java.lang.Object)"], "Fixed commit": "08ee4a444159033f03473eb98c60f10e14cfceec", "Url": "https://api.github.com/repos/Raizlabs/DBFlow", "Date": "2015-11-15T20:10:38Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getEntryValues()[which].toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (callChangeListener(value)) { setValue(value); if ((Build.VERSION.SDK_INT) < (Build.VERSION_CODES.KITKAT)) { setSummary(getEntries()[which]); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/6024/buggy-version/src.com.owncloud.android.ui.dialog.OwnCloudListPreference.java", "BodyUseAPI": ["com.owncloud.android.ui.dialog.OwnCloudListPreference.setValue(java.lang.String)"], "Fixed commit": "4f7d416b81d42e26b7c36d673f76ddf460f4500e", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2015-11-30T13:22:52Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((improvedTestedCommand.length()) == (improvedPrevChosenCommand.length())) { java.lang.String chosenCommand = this.askUserWhichActionToPerform(((\"chose candidate for '\" + operation) + \"' command:\"), improvedTestedCommand, improvedPrevChosenCommand); if (chosenCommand.isEmpty()) { chosenCommands.remove(operation); }else { if (chosenCommand.equals(improvedTestedCommand)) { chosenCommands.put(operation, originalTestedCommand); }else { chosenCommands.put(operation, originalPrevChosenCommand); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/5437/buggy-version/src.main.java.diarsid.beam.core.modules.executor.CommandsIntelligentCache.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "diarsid.beam.core.modules.executor.CommandsIntelligentCache.askUserWhichActionToPerform(java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "09e99d7c287bfac1fc820f22687c605f32cd20eb", "Url": "https://api.github.com/repos/Diarsid/Beam", "Date": "2016-06-28T23:37:43Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isFull == true) { wd.getShortWait().until(org.openqa.selenium.support.ui.ExpectedConditions.elementToBeClickable(step4.account_view_private_hpp())); step4.account_view_private_hpp().click(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/8188/buggy-version/src.bookingEngine.Page4_pay.java", "BodyUseAPI": [], "Fixed commit": "27fab4317ec4f9d2693a6ecef67141cabd0ca109", "Url": "https://api.github.com/repos/jasonogayon/DWH", "Date": "2015-09-15T08:32:50Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isFull == true) { getWait().until(org.openqa.selenium.support.ui.ExpectedConditions.elementToBeClickable(step4.account_view_private_hpp())); step4.account_view_private_hpp().click(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/8188/buggy-version/src.bookingEngine.Page4_pay.java", "BodyUseAPI": [], "Fixed commit": "27fab4317ec4f9d2693a6ecef67141cabd0ca109", "Url": "https://api.github.com/repos/jasonogayon/DWH", "Date": "2015-09-15T08:32:50Z"},
{"Line": "=>369", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ankhmorpork.GameObjects.Cards.GreenCard.GetAction()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (i != ((ActionArray.length) - 1)) { java.lang.System.out.println(((\"Do you wish to perform \" + (ActionArray[i])) + \" action? Y/N\")); while (true) { ans = ankhmorpork.discworldboard.BR.readLine(); if ((ans.equalsIgnoreCase(\"Y\")) || (ans.equalsIgnoreCase(\"N\"))) { break; }else java.lang.System.out.println(\"Incorrect input. Please try again.\"); } }else { java.lang.System.out.println((\"Performing action \" + (ActionArray[i]))); ans = \"Y\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/4512/buggy-version/src.ankhmorpork.discworldboard.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)", "java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "255861dade309f17ad4da6a15d48b67e278b50a4", "Url": "https://api.github.com/repos/NAVY11/Demo_Ankh", "Date": "2015-03-12T17:58:01Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["map.RoverMap.closestResource(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (closest == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/3459/buggy-version/rover.rover.src.main.java.map.RoverMap.java", "BodyUseAPI": [], "Fixed commit": "2cd9353a094c0db6b7d7e2af8c52cbfb980392ae", "Url": "https://api.github.com/repos/Birdfriender/IA-AgentScape-Rover", "Date": "2016-11-24T21:47:46Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (closest == null) { return closest; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/3459/buggy-version/rover.rover.src.main.java.map.RoverMap.java", "BodyUseAPI": [], "Fixed commit": "2cd9353a094c0db6b7d7e2af8c52cbfb980392ae", "Url": "https://api.github.com/repos/Birdfriender/IA-AgentScape-Rover", "Date": "2016-11-24T21:47:46Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["rover.CollectorRover.closestResource(rover.COLLECTOR_TYPE,double,double)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (r == null) { roverMove(xPos, yPos); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/3459/buggy-version/rover.rover.src.main.java.rover.CollectorRover.java", "BodyUseAPI": [], "Fixed commit": "2cd9353a094c0db6b7d7e2af8c52cbfb980392ae", "Url": "https://api.github.com/repos/Birdfriender/IA-AgentScape-Rover", "Date": "2016-11-24T21:47:46Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((msg.length()) > 4200) msg = \"Message failed to send because I can only count to 4200 :(\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/986/buggy-version/src.hashedVersion.MsgWindow.java", "BodyUseAPI": [], "Fixed commit": "b8735c9dabc8aee6ec8b34755003ef9f36b6bfa6", "Url": "https://api.github.com/repos/hdamron17/FauxIM", "Date": "2016-05-04T19:00:54Z"},
{"Line": "=>13", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (symbol == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/8539/buggy-version/sdf2table.core.src.main.java.org.metaborg.sdf2table.symbol.SymbolCollection.java", "BodyUseAPI": [], "Fixed commit": "63b61a80ae360c07fe33ee0c0e664221c9d4bba0", "Url": "https://api.github.com/repos/metaborg/sdf", "Date": "2016-09-15T11:40:43Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (symbol == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/8539/buggy-version/sdf2table.core.src.main.java.org.metaborg.sdf2table.symbol.SymbolCollection.java", "BodyUseAPI": [], "Fixed commit": "63b61a80ae360c07fe33ee0c0e664221c9d4bba0", "Url": "https://api.github.com/repos/metaborg/sdf", "Date": "2016-09-15T11:40:43Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(messageList.isEmpty())) { messagingEngine.messagesReceived(messageList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/888/buggy-version/modules.andes-core.broker.src.main.java.org.wso2.andes.kernel.disruptor.inbound.MessageWriter.java", "BodyUseAPI": ["org.wso2.andes.kernel.MessagingEngine.messagesReceived(java.util.List<org.wso2.andes.kernel.AndesMessage>)"], "Fixed commit": "b76b618125b060626b98fb5726205d576f8c35ce", "Url": "https://api.github.com/repos/Asitha/andes", "Date": "2017-01-04T11:48:12Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (t.isComplex) whereConditions.add(((((\"array_contains(\" + (tree.Utils.toMetastoreName(t.predicate))) + \", '\") + (t.object)) + \"')\")); else whereConditions.add(((((tree.Utils.toMetastoreName(t.predicate)) + \"='\") + (t.object)) + \"'\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/6402/buggy-version/executor.src.main.java.tree.Node.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(((((tree.Utils.toMetastoreName(t.predicate)) + \"='\") + (t.object)) + \"'\"))", "tree.Utils.toMetastoreName(t.predicate)", "tree.Utils.toMetastoreName(t.predicate)", "java.util.ArrayList<java.lang.String>.add(((((\"array_contains(\" + (tree.Utils.toMetastoreName(t.predicate))) + \", '\") + (t.object)) + \"')\"))"], "Fixed commit": "5cd581d35c122616a048cc8ee872f6766e01fc68", "Url": "https://api.github.com/repos/matteuan/PRoST", "Date": "2017-08-01T18:29:22Z"},
{"Line": "=>889", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((regionFile) == null) edu.utah.seq.data.Misc.printErrAndExit(\"\\nPlease provide a region file with -b to enable -c.\\n\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/5368/buggy-version/Source.edu.utah.seq.data.Sam2USeq.java", "BodyUseAPI": [], "Fixed commit": "e0f1121ba86d8b5963f6336e100093c99f07c90a", "Url": "https://api.github.com/repos/HuntsmanCancerInstitute/USeq", "Date": "2016-10-13T20:41:56Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (paper.read().contains(str)) { for (char character : str.toCharArray()) { if (reduceEraserDurability(character)) { charsToErase++; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/6788/buggy-version/src.main.java.kata.pencil_durability.Pencil.java", "BodyUseAPI": ["java.lang.String.toCharArray()"], "Fixed commit": "177203889765f242f1115a4e8a0d43f23b477aac", "Url": "https://api.github.com/repos/FPNelson/pencil-durability", "Date": "2017-10-13T21:09:56Z"},
{"Line": "=>795", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mutate_range >= 1) NaturalSynthesis.writer.println(((((\"int mutate_var_\" + m) + \" = \") + (NaturalSynthesis.gen_non_zero(mutate_range))) + \";\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/5771/buggy-version/src.NaturalSynthesis.java", "BodyUseAPI": ["NaturalSynthesis.gen_non_zero(int)", "java.io.PrintWriter.println(java.lang.String)"], "Fixed commit": "87255fa8db07ff8b41e6e56fc0aa773954f8ee79", "Url": "https://api.github.com/repos/xkqiu/ImpSynt", "Date": "2017-04-06T14:54:00Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tachyon.client.WritableBlockChannel.write(java.nio.ByteBuffer)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (r > 0) { mWritten.addAndGet(r); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/2322/buggy-version/core.src.main.java.tachyon.client.CountingWritableBlockChannel.java", "BodyUseAPI": ["java.util.concurrent.atomic.AtomicLong.addAndGet(int)"], "Fixed commit": "38adef9fa7e25a163ca5e8c08b3128ba078991b5", "Url": "https://api.github.com/repos/dcapwell/tachyon", "Date": "2014-09-11T03:46:38Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.LOLLIPOP)) { shareIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_DOCUMENT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/5644/buggy-version/alexandria.app.src.main.java.it.jaschke.alexandria.BookDetail.java", "BodyUseAPI": [], "Fixed commit": "7cd2cf8c85e3522a9ac0dfc7994b2e735d8b4460", "Url": "https://api.github.com/repos/dsvoronin/UdacitySuperDuo", "Date": "2015-10-25T12:26:09Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["it.jaschke.alexandria.api.BookListAdapter.getCursor()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (cursor != null) { cursor.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/5644/buggy-version/alexandria.app.src.main.java.it.jaschke.alexandria.ListOfBooks.java", "BodyUseAPI": ["android.database.Cursor.close()"], "Fixed commit": "7cd2cf8c85e3522a9ac0dfc7994b2e735d8b4460", "Url": "https://api.github.com/repos/dsvoronin/UdacitySuperDuo", "Date": "2015-10-25T12:26:09Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((selector) != null) { selector.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/1118/buggy-version/src.main.java.core.ClientConnectionManager.java", "BodyUseAPI": [], "Fixed commit": "f6b77ec3c8f60579f58183b98f73592ded290d8a", "Url": "https://api.github.com/repos/zezulka/GpioDebuggerClient", "Date": "2017-05-07T13:35:09Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((channel) != null) { channel.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/1118/buggy-version/src.main.java.core.ClientConnectionManager.java", "BodyUseAPI": [], "Fixed commit": "f6b77ec3c8f60579f58183b98f73592ded290d8a", "Url": "https://api.github.com/repos/zezulka/GpioDebuggerClient", "Date": "2017-05-07T13:35:09Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mModel.freq) >= (mFreqSpinner.getAdapter().getCount())) { mModel.freq = RecurrenceModel.FREQ_WEEKLY; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/3498/buggy-version/Library.src.main.java.com.teambition.recurrencerule.RecurrenceOptionsCreator.java", "BodyUseAPI": [], "Fixed commit": "f448845a96f1c5c0921bb9d8084cb08acdf21039", "Url": "https://api.github.com/repos/teambition/TbRepeatPicker", "Date": "2017-10-24T03:01:22Z"},
{"Line": "=>468", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cc.r2.core.poly.multivar.MultivariatePolynomial.size()) != 1) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/8775/buggy-version/src.main.java.cc.r2.core.poly.multivar.MultivariatePolynomial.java", "BodyUseAPI": [], "Fixed commit": "4e1d5c52f44bf3f946d1d38437f3b5b229a197a2", "Url": "https://api.github.com/repos/PoslavskySV/rings", "Date": "2017-06-18T09:38:22Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Matcher.group(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((varenvMap.get(envName)) != null) { if (withBrace) { value = value.replace(((\"${\" + envName) + \"}\"), varenvMap.get(envName)); }else { value = value.replace((\"$\" + envName), varenvMap.get(envName)); } }else { org.jrebirth.af.core.resource.parameter.ParameterBuilder.LOGGER.log(org.jrebirth.af.core.resource.parameter.UNDEFINED_ENV_VAR, envName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/2717/buggy-version/org.jrebirth.af.core.src.main.java.org.jrebirth.af.core.resource.parameter.ParameterBuilder.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)", "java.lang.String.replace(java.lang.String,java.lang.String)", "org.jrebirth.af.core.log.JRLogger.log(org.jrebirth.af.core.resource.parameter.UNDEFINED_ENV_VAR,java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)"], "Fixed commit": "5552022439a6f16fafcca6978387202377667170", "Url": "https://api.github.com/repos/JRebirth/JRebirth", "Date": "2014-07-23T17:28:57Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((image) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/2932/buggy-version/app.src.main.java.ca.ualberta.andromeda.Mood.java", "BodyUseAPI": [], "Fixed commit": "09e95c0401e32b5ff373b3f82bab5e3efa1bda37", "Url": "https://api.github.com/repos/CMPUT301W17T16/Andromeda", "Date": "2017-03-31T20:56:18Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((compacted) != null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/1612/buggy-version/extensions.hdrhistogram.src.main.java.org.radargun.stats.HistogramOperationStats.java", "BodyUseAPI": [], "Fixed commit": "58032ef770b634fcc249f551267557879bcd55bb", "Url": "https://api.github.com/repos/rvansa/radargun", "Date": "2014-11-07T10:36:51Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((histogram) == null) throw new java.lang.IllegalStateException(\"Either compacted or expanded form has to be defined!\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/1612/buggy-version/extensions.hdrhistogram.src.main.java.org.radargun.stats.HistogramOperationStats.java", "BodyUseAPI": [], "Fixed commit": "58032ef770b634fcc249f551267557879bcd55bb", "Url": "https://api.github.com/repos/rvansa/radargun", "Date": "2014-11-07T10:36:51Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(survivors[j].isAlive())) { java.lang.System.out.println((((((((zombies[i]) + \" \") + i) + \" killed \") + (survivors[j])) + \" \") + j)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/5820/buggy-version/src.zombiewar.Main.java", "BodyUseAPI": ["java.io.PrintStream.println((((((((zombies[i]) + \" \") + i) + \" killed \") + (survivors[j])) + \" \") + j))"], "Fixed commit": "b3cc36962fb3623dd96a19e4c7db398a6a75b919", "Url": "https://api.github.com/repos/AdamBrauns/ZombieWarGame", "Date": "2016-02-23T22:37:42Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mForcastInfo) != null) { return mForcastInfo.size(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/3067/buggy-version/app.src.main.java.com.busysnail.sunshineweather.ForecastAdapter.java", "BodyUseAPI": [], "Fixed commit": "d21c049ea1b39a701635dddd2488daca823bed87", "Url": "https://api.github.com/repos/busySnail/SunshineWeather", "Date": "2016-09-04T16:00:31Z"},
{"Line": "=>390", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((row.getHeight()) != 0) screenRow.add(row);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/7892/buggy-version/src.org.metawatch.manager.Idle.java", "BodyUseAPI": ["java.util.ArrayList<org.metawatch.manager.widgets.WidgetRow>.add(org.metawatch.manager.widgets.WidgetRow)"], "Fixed commit": "1effd9f5f0730a6feb2a07e5384cda0de3b433db", "Url": "https://api.github.com/repos/grueni75/MWM-for-Android", "Date": "2014-06-19T05:46:25Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((arg) instanceof operations.arguments.ArithmeticalArgument) { operations.arguments.ArithmeticalArgument aa = ((operations.arguments.ArithmeticalArgument) (arg)); elements.Element<?> ret = exec.callArithmeticalOperation(aa.getArgs().get(0), aa.getArgs().get(1), aa.getOperator(), line); if (ret != null) { if (!((ret.getContent()) instanceof java.lang.Integer)) throw new java.lang.RuntimeException((\"Nieprawdi\u0142owy typ przypisywany do zmiennej. LINIA:\" + (line))); var = ((java.lang.Integer) (ret.getContent())); } }else if ((arg) instanceof operations.arguments.ListElementInIndexArgument) { operations.arguments.ListElementInIndexArgument le = ((operations.arguments.ListElementInIndexArgument) (arg)); var = exec.getIntegerFromListIndex(le.getId(), le.getIndex(), line); }else throw new java.lang.RuntimeException((\"Niepoprawny argument deklaracji zmiennej liczbowej. LINIA:\" + (line)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/3642/buggy-version/src.operations.NumberDeclarationOperation.java", "BodyUseAPI": [], "Fixed commit": "d9721c38c1d0f86c8861294acfbc6e9462bc1584", "Url": "https://api.github.com/repos/cezarg1410/TKOM_NEW", "Date": "2016-01-25T00:59:03Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["LineHistory.getFile(org.eclipse.jgit.lib.Repository,java.lang.String,org.eclipse.jgit.lib.ObjectId)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (newFile.isMissingNewlineAtEnd()) { int size = newFile.size(); java.io.ByteArrayOutputStream out = new java.io.ByteArrayOutputStream(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/3969/buggy-version/HistorySlicing.src.LineHistory.java", "BodyUseAPI": ["org.eclipse.jgit.diff.RawText.size()"], "Fixed commit": "05ccd8a2aac97cb0e5d0954714771844c79695f9", "Url": "https://api.github.com/repos/tcllib/HistorySlicingTool", "Date": "2015-03-24T21:24:18Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCurrentPhotoPath) != null) outState.putString(\"currentPhotoPath\", mCurrentPhotoPath);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/9246/buggy-version/src.com.tzapps.tzpalette.ui.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "9f380e073b88e18b10052ab216b455ec1005df43", "Url": "https://api.github.com/repos/TianziHou/tzPalette", "Date": "2013-09-26T17:32:11Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fold == (Node.NULL_NODE)) { this.fold = Node.NULL_NODE; }else { this.fold = new node.Fold(fold); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/3176/buggy-version/src.node.Connections.java", "BodyUseAPI": [], "Fixed commit": "a1cb0270780c600916028257b11b8494d29d8c9e", "Url": "https://api.github.com/repos/jslinker/CS340", "Date": "2013-06-02T23:21:14Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (inverseSurrogateFold == (Node.NULL_NODE)) { this.inverseSurrogateFold = Node.NULL_NODE; }else { this.inverseSurrogateFold = new node.InverseSurrogateFold(inverseSurrogateFold); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/3176/buggy-version/src.node.Connections.java", "BodyUseAPI": [], "Fixed commit": "a1cb0270780c600916028257b11b8494d29d8c9e", "Url": "https://api.github.com/repos/jslinker/CS340", "Date": "2013-06-02T23:21:14Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (surrogateFold == (Node.NULL_NODE)) { this.surrogateFold = Node.NULL_NODE; }else { this.surrogateFold = new node.SurrogateFold(surrogateFold); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/3176/buggy-version/src.node.Connections.java", "BodyUseAPI": [], "Fixed commit": "a1cb0270780c600916028257b11b8494d29d8c9e", "Url": "https://api.github.com/repos/jslinker/CS340", "Date": "2013-06-02T23:21:14Z"},
{"Line": "=>1039", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(project instanceof org.apache.flex.compiler.internal.projects.FlexProject)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/3815/buggy-version/compiler.src.main.java.org.apache.flex.compiler.internal.tree.as.IdentifierNode.java", "BodyUseAPI": [], "Fixed commit": "ced58cc231ea1784cefb30511609df1cbad02d91", "Url": "https://api.github.com/repos/greg-dove/flex-falcon", "Date": "2016-08-24T05:01:40Z"},
{"Line": "=>756", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((arena) != null) { net.slipcor.pvparena.loadables.ArenaModuleManager.parseClassChange(arena, get(), this.aClass); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/3773/buggy-version/src.net.slipcor.pvparena.arena.ArenaPlayer.java", "BodyUseAPI": [], "Fixed commit": "ff678d741a497f18da541858c55928b4a88c19f9", "Url": "https://api.github.com/repos/ChrisLane/pvparena", "Date": "2016-12-05T18:28:45Z"},
{"Line": "=>551", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<java.lang.Object>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (newValue == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/1088/buggy-version/bpm.bonita-core.bonita-process-engine.src.main.java.org.bonitasoft.engine.execution.ProcessExecutorImpl.java", "BodyUseAPI": [], "Fixed commit": "49a291158c56bfb4f277f4c2726fc5073aecf7ec", "Url": "https://api.github.com/repos/amottier/bonita-engine", "Date": "2015-05-07T14:24:24Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.support.v4.app.FragmentManager.findFragmentByTag(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (fragment != null) { fragment.populateUI(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/7052/buggy-version/Hestia.app.src.main.java.hestia.UI.activities.home.HomeActivity.java", "BodyUseAPI": ["hestia.UI.activities.home.DeviceListFragment.populateUI()"], "Fixed commit": "2038899f3429145d7a2074ffc94a278d0b78bcce", "Url": "https://api.github.com/repos/RUGSoftEng/2017-Hestia-Client", "Date": "2017-06-11T20:26:45Z"},
{"Line": "=>1126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (me.ccrama.redditslide.Reddit.single) { hea.setBackgroundColor(me.ccrama.redditslide.Visuals.Pallete.getColor(usedArray.get(position))); header.setBackgroundColor(me.ccrama.redditslide.Visuals.Pallete.getColor(usedArray.get(position))); if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.LOLLIPOP)) { android.view.Window window = getWindow(); window.setStatusBarColor(me.ccrama.redditslide.Visuals.Pallete.getDarkerColor(usedArray.get(position))); this.setTaskDescription(new android.app.ActivityManager.TaskDescription(usedArray.get(position), ((android.graphics.drawable.BitmapDrawable) (getResources().getDrawable(R.drawable.ic_launcher))).getBitmap(), me.ccrama.redditslide.Visuals.Pallete.getColor(usedArray.get(position)))); } getSupportActionBar().setTitle(usedArray.get(position)); }else { if ((hea) != null) hea.setBackgroundColor(me.ccrama.redditslide.Visuals.Pallete.getColor(usedArray.get(position))); header.setBackgroundColor(me.ccrama.redditslide.Visuals.Pallete.getColor(usedArray.get(position))); if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.LOLLIPOP)) { android.view.Window window = getWindow(); window.setStatusBarColor(me.ccrama.redditslide.Visuals.Pallete.getDarkerColor(usedArray.get(position))); this.setTaskDescription(new android.app.ActivityManager.TaskDescription(usedArray.get(position), ((android.graphics.drawable.BitmapDrawable) (getResources().getDrawable(R.drawable.ic_launcher))).getBitmap(), me.ccrama.redditslide.Visuals.Pallete.getColor(usedArray.get(position)))); } tabs.setSelectedTabIndicatorColor(new me.ccrama.redditslide.ColorPreferences(this).getColor(usedArray.get(position))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/8051/buggy-version/app.src.main.java.me.ccrama.redditslide.Activities.OverviewBase.java", "BodyUseAPI": [], "Fixed commit": "d3908095b2dd1b6f1e13dbbce70286f25c19d6ad", "Url": "https://api.github.com/repos/rosenpin/Slide", "Date": "2015-11-12T17:33:26Z"},
{"Line": "=>422", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tabsContainer.getChildCount()) > 0) { halfFirstTab = (tabsContainer.getChildAt(0).getWidth()) / 2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/6062/buggy-version/library.src.com.astuetz.PagerSlidingTabStrip.java", "BodyUseAPI": ["tabsContainer.getChildAt(0).getWidth()", "android.widget.LinearLayout.getChildAt(int)"], "Fixed commit": "7380d64659879ce5732c73443f8e824559cedc87", "Url": "https://api.github.com/repos/jpardogo/PagerSlidingTabStrip", "Date": "2014-11-17T18:34:03Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (livingEntity == player) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/2940/buggy-version/WaywardSkills.src.main.java.net.wayward_realms.waywardskills.skill.SlashSkill.java", "BodyUseAPI": [], "Fixed commit": "b007e7fc27f0ae4b25ae9895030607b06fbc1364", "Url": "https://api.github.com/repos/WaywardRealms/Wayward", "Date": "2014-05-29T16:45:30Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (tag.equals(\"Delete Company\")) { new Server.DeleteCompany(socket, oos, ois); }else if (tag.equals(\"Delete User\")) { new Server.DeleteUser(socket, oos, ois); }else if (tag.equals(\"New Password\")) { new Server.GetNewPassword(socket, ois, oos); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/1553/buggy-version/src.Server.Server.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "5c09bf1805654792493775d9189b2fe4647250d1", "Url": "https://api.github.com/repos/tykesson89/AutoWorkJavaServer", "Date": "2016-04-04T21:53:54Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (topologyStream != null) { topologyStream.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/8229/buggy-version/com.dexels.hazelcast.src.com.dexels.hazelcast.impl.HazelcastTopologyConfiguration.java", "BodyUseAPI": ["java.io.InputStream.close()"], "Fixed commit": "fe82cd665f4dc215993bf3819779f3c70ccc049f", "Url": "https://api.github.com/repos/Dexels/dexels.repository", "Date": "2015-03-17T15:23:37Z"},
{"Line": "=>504", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((parameterCode.length()) > 0) { parameterCode = parameterCode.substring(0, ((parameterCode.length()) - 2)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/2766/buggy-version/src.main.i5.las2peer.services.codeGenerationService.generators.MicroserviceGenerator.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "d77b94899b72ca1b6dae7e76f30760a9dcab580a", "Url": "https://api.github.com/repos/rwth-acis/CAE-Code-Generation-Service", "Date": "2015-07-30T09:51:30Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["br.org.funcate.terramobile.util.Message.startProgressDialog(mMapView.getContext(),java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (progressDialog.isShowing()) progressDialog.dismiss();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/3591/buggy-version/app.src.main.java.br.org.funcate.terramobile.model.osmbonuspack.overlays.SFSEditableMarker.java", "BodyUseAPI": ["android.app.ProgressDialog.dismiss()"], "Fixed commit": "bce429fc28191a7a77d531529e80045332db956b", "Url": "https://api.github.com/repos/TerraMobile/TerraMobile", "Date": "2016-03-09T20:06:53Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (subPath.substring(0, 1).equals(\"/\")) { subPath = subPath.substring(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/2901/buggy-version/src.me.hehaiyang.codegen.file.FileProvider.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "825eb4952b2f03f4fec1a92ac1d3dbe73544debf", "Url": "https://api.github.com/repos/IceMimosa/CodeGen", "Date": "2017-07-07T01:12:52Z"},
{"Line": "=>370", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (gotInterface) { return org.jf.dexlib.Code.Analysis.ClassPath.theClassPath.javaLangObjectClassDef; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/908/buggy-version/dexlib.src.main.java.org.jf.dexlib.Code.Analysis.ClassPath.java", "BodyUseAPI": [], "Fixed commit": "541b93494809f062a5b619fa96c60eaed6b7538b", "Url": "https://api.github.com/repos/JesusFreke/smali", "Date": "2013-04-09T05:17:56Z"},
{"Line": "=>473", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((emptyPanel) != null) { frame.add(emptyPanel); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/3798/buggy-version/framework.common.org.gumtree.vis.core.src.org.gumtree.vis.swt.PlotComposite.java", "BodyUseAPI": [], "Fixed commit": "e47c23bed9939dd805f0f252988acfb020aba4cf", "Url": "https://api.github.com/repos/Gumtree/gumtree", "Date": "2013-04-26T00:47:13Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (trigger.isAllowTriggeringUnreviewedPatches()) { trigger.gerritEvent(event); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/3851/buggy-version/gerrithudsontrigger.src.main.java.com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.TriggerNotReviewedPatches.java", "BodyUseAPI": ["com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.GerritTrigger.gerritEvent(com.sonyericsson.hudson.plugins.gerrit.gerritevents.dto.events.PatchsetCreated)"], "Fixed commit": "c53bb5aa7e2daa58cc71b888f7620a7cbe1b0202", "Url": "https://api.github.com/repos/mathieu-wang/gerrit-trigger-plugin", "Date": "2013-08-02T10:51:18Z"},
{"Line": "=>743", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang.StringUtils.equals(\"VirtualNAS\", com.emc.storageos.db.client.URIUtil.getTypeName(nasUri))) { nasServer = dbClient.queryObject(com.emc.storageos.db.client.model.VirtualNAS.class, java.net.URI.create(nasUri)); }else { nasServer = dbClient.queryObject(com.emc.storageos.db.client.model.PhysicalNAS.class, java.net.URI.create(nasUri)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/5284/buggy-version/apisvc.src.main.java.com.emc.storageos.api.service.impl.resource.UnManagedFilesystemService.java", "BodyUseAPI": ["com.emc.storageos.db.client.DbClient.queryObject(java.lang.Class,java.net.URI)", "java.net.URI.create(java.lang.String)", "com.emc.storageos.db.client.DbClient.queryObject(java.lang.Class,java.net.URI)", "java.net.URI.create(java.lang.String)"], "Fixed commit": "19285895cdb2fb1af3ed272b650f60841a486887", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2015-12-22T11:55:48Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == (mT9TelephoneDialpadView)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/8943/buggy-version/AppSearch.src.com.handsomezhou.appsearch.fragment.T9SearchFragment.java", "BodyUseAPI": [], "Fixed commit": "6bb407b739ea5a153f84b9d7f133ce281aa3a16c", "Url": "https://api.github.com/repos/handsomezhou/PinyinSearchLibrary", "Date": "2015-10-11T13:03:52Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.handsomezhou.appsearch.helper.AppInfoHelper.getAppInfo(android.content.pm.PackageManager,android.content.pm.PackageInfo)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (android.text.TextUtils.isEmpty(appInfo.getLabel())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/8943/buggy-version/AppSearch.src.com.handsomezhou.appsearch.helper.AppInfoHelper.java", "BodyUseAPI": [], "Fixed commit": "6bb407b739ea5a153f84b9d7f133ce281aa3a16c", "Url": "https://api.github.com/repos/handsomezhou/PinyinSearchLibrary", "Date": "2015-10-11T13:03:52Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == (mSearchBox)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/8943/buggy-version/AppSearch.src.com.handsomezhou.appsearch.fragment.QwertySearchFragment.java", "BodyUseAPI": [], "Fixed commit": "6bb407b739ea5a153f84b9d7f133ce281aa3a16c", "Url": "https://api.github.com/repos/handsomezhou/PinyinSearchLibrary", "Date": "2015-10-11T13:03:52Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mProcess) != null) { com.spazedog.rootfw.container.ShellResult lResult; if (mRootAccount) { lResult = shell.execute(\"id\", \"echo 'uid=0'\"); if ((lResult != null) && (lResult.output().line().contains(\"uid=0\"))) { return true; } return false; }else { lResult = shell.execute(\"echo 'uid=unknown'\"); } return ((mProcess) != null) && (lResult.output().line().contains(\"uid=unknown\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/3372/buggy-version/src.com.spazedog.rootfw.RootFW.java", "BodyUseAPI": [], "Fixed commit": "55b62ac656982f33a6f1f2be2d096d8af121e8bb", "Url": "https://api.github.com/repos/SpazeDog/rootfw", "Date": "2013-04-09T20:49:44Z"},
{"Line": "=>377", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((paths) != null) && ((paths.size()) > 0)) { if (!(zip)) { context.setResponseContent(new org.locationtech.geogig.web.api.StreamResponse() { @java.lang.Override public void write(java.io.Writer out) throws java.lang.Exception { writeCSV(context.getRepository(), out, log); } }); }else { context.setResponseContent(new org.locationtech.geogig.web.api.ByteResponse() { @java.lang.Override public void write(java.io.OutputStream out) throws java.lang.Exception { writeZIP(context.getRepository(), out, log); } }); } }else { throw new org.locationtech.geogig.web.api.CommandSpecException(\"You must specify a feature type path when getting a summary.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/254/buggy-version/src.web.api.src.main.java.org.locationtech.geogig.web.api.commands.Log.java", "BodyUseAPI": [], "Fixed commit": "bef78034f92e81f9649fb5b066efcb0c6f9f0e7c", "Url": "https://api.github.com/repos/jmiller-boundless/geogig-1", "Date": "2016-11-01T20:22:50Z"},
{"Line": "=>1271", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currentapiVersion >= (Build.VERSION_CODES.JELLY_BEAN)) { return android.preference.PreferenceManager.getDefaultSharedPreferences(getActivity()).getBoolean(com.droidsans.photo.droidphoto.FeedFragment.FIRST_TIME_FEED_FRAGMENT, true); }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/6575/buggy-version/app.src.main.java.com.droidsans.photo.droidphoto.FeedFragment.java", "BodyUseAPI": [], "Fixed commit": "acde006d7352aba75bb4a91ec9ecda6357a5eb0e", "Url": "https://api.github.com/repos/Xenocide93/DroidPhoto", "Date": "2015-07-23T18:05:48Z"},
{"Line": "=>356", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((caseTests) != null) { for (models.CaseTest t : caseTests) { t.setCaseEntity(this); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/2335/buggy-version/lms.app.models.CaseEntityObject.java", "BodyUseAPI": [], "Fixed commit": "948738b506e047e97c6655f5061767519b06c2f2", "Url": "https://api.github.com/repos/KHAMGroup/lms", "Date": "2013-11-10T09:57:49Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.common.cache.Cache<java.lang.String, java.lang.Object>.getIfPresent(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (sourceObj instanceof java.util.Map) { @java.lang.SuppressWarnings(\"unchecked\") java.util.Map<java.lang.String, java.lang.Double> castObj = ((java.util.Map<java.lang.String, java.lang.Double>) (sourceObj)); sourceCache = castObj; }else { sourceCache = com.google.common.cache.CacheBuilder.newBuilder().maximumSize(cacheMaxSize).expireAfterWrite(cacheTtlSec, java.util.concurrent.TimeUnit.SECONDS).<java.lang.String, java.lang.Double>build().asMap(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/409/buggy-version/heron.metricsmgr.src.java.com.twitter.heron.metricsmgr.sink.WebSink.java", "BodyUseAPI": [], "Fixed commit": "f4e6b9c45a2f6fcc52379905ccb5363ce1762b49", "Url": "https://api.github.com/repos/apache/incubator-heron", "Date": "2017-02-19T00:15:05Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.confluent.connect.hdfs.storage.Storage.listStatus(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((statuses.length) != 1) { throw new java.lang.AssertionError(java.lang.String.format(\"Expected one log file at path: %s. Found multiple files.\", logFile)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/364/buggy-version/src.main.java.io.confluent.connect.hdfs.wal.FSWAL.java", "BodyUseAPI": [], "Fixed commit": "cac854a196c26bb15ac6ebdfb7e2f3b4a33b7045", "Url": "https://api.github.com/repos/jiangxiluning/kafka-connect-hdfs", "Date": "2017-11-02T02:11:54Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.confluent.connect.hdfs.storage.Storage.listStatus(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((statuses[0].getLen()) == 0) { io.confluent.connect.hdfs.wal.FSWAL.log.warn(java.lang.String.format(\"Found empty log file at path: %s\", logFile)); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/364/buggy-version/src.main.java.io.confluent.connect.hdfs.wal.FSWAL.java", "BodyUseAPI": [], "Fixed commit": "cac854a196c26bb15ac6ebdfb7e2f3b4a33b7045", "Url": "https://api.github.com/repos/jiangxiluning/kafka-connect-hdfs", "Date": "2017-11-02T02:11:54Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isDestroyed())) fragmentTransaction.commitAllowingStateLoss();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/4105/buggy-version/app.src.main.java.com.breadwallet.presenter.activities.IntroActivity.java", "BodyUseAPI": [], "Fixed commit": "85e5c4694bbed1a5fd36706e1699be80793a814b", "Url": "https://api.github.com/repos/breadwallet/breadwallet-android", "Date": "2017-06-01T22:48:30Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fi.muikku.plugins.announcer.AnnouncementController.findById(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (announcement == null) { return javax.ws.rs.core.Response.status(Status.NOT_FOUND).entity(\"Announcement not found\").build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/458/buggy-version/muikku-core-plugins.src.main.java.fi.muikku.plugins.announcer.rest.AnnouncerRESTService.java", "BodyUseAPI": [], "Fixed commit": "8b851327d64e4a33d3d3491e76956602027a85ff", "Url": "https://api.github.com/repos/otavanopisto/muikku", "Date": "2016-01-25T04:29:58Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((p.getXSpeed()) != 0) p.incrementXSpeed((-15));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/1366/buggy-version/wv_battleroyale.src.game.KeyInput.java", "BodyUseAPI": ["game.Fighter.incrementXSpeed(int)"], "Fixed commit": "07726810d34ce2a3fe961b138e2f0b298d554ed9", "Url": "https://api.github.com/repos/JetpackCat39/BattleRoyale", "Date": "2017-05-12T16:35:17Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((p.getXSpeed()) != 0) p.incrementXSpeed(15);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/1366/buggy-version/wv_battleroyale.src.game.KeyInput.java", "BodyUseAPI": ["game.Fighter.incrementXSpeed(int)"], "Fixed commit": "07726810d34ce2a3fe961b138e2f0b298d554ed9", "Url": "https://api.github.com/repos/JetpackCat39/BattleRoyale", "Date": "2017-05-12T16:35:17Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(response.isCommitted())) { java.lang.String msg = \"Server internal error\"; com.firefly.mvc.web.servlet.SystemHtmlPage.responseSystemPage(request, response, webContext.getEncoding(), 500, msg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/8375/buggy-version/firefly.src.main.java.com.firefly.mvc.web.servlet.HttpServletDispatcherController.java", "BodyUseAPI": ["com.firefly.mvc.web.servlet.SystemHtmlPage.responseSystemPage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,webContext.getEncoding(),int,java.lang.String)"], "Fixed commit": "5bfff7e80ef73734ff2ecc1e5fc7f29c08bec307", "Url": "https://api.github.com/repos/hypercube1024/firefly", "Date": "2013-05-06T05:36:46Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((stringHour.length()) == 1) { stringHour = \"0\" + stringHour; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/5976/buggy-version/oryx.app.lazarus.src.main.java.com.cloudera.oryx.lazarus.speed.LazarusSpeedUtility.java", "BodyUseAPI": [], "Fixed commit": "4703a8af3f7924b31fa3bd76a1b62895665d12a4", "Url": "https://api.github.com/repos/ucl-eee-data-processing/MEng-Project-2015-Systems", "Date": "2016-04-12T10:45:17Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fileName == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/7043/buggy-version/src.taskaler.storage.HistoryStorage.java", "BodyUseAPI": [], "Fixed commit": "2f0b62e3cb6dfd35bb8705562e6be4cb3433c50d", "Url": "https://api.github.com/repos/cs2103aug2014-w10-2j/cs2103aug2014-w10-2j", "Date": "2014-11-10T13:40:40Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((list.getSelectedValue()) != null) { Model.Room r = h.getRoom(list.getSelectedValue()); textArea.setText((((((\"Room: \" + (r.getID())) + \"\\nFloor: \") + (r.getFloor())) + \"\\nLayout: \") + (r.getLayout()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/6312/buggy-version/View.RoomInfo.java", "BodyUseAPI": ["javax.swing.JList<java.lang.String>.getSelectedValue()", "Model.Hotel.getRoom(java.lang.String)"], "Fixed commit": "5cdcc9f4debb54e0987302c6b69ebc4fbb15f15e", "Url": "https://api.github.com/repos/AddisonWomack/HCI_Project", "Date": "2017-05-02T20:58:01Z"},
{"Line": "=>1839", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((context.getErrors().size()) > 0) { for (org.drools.compiler.DroolsError error : context.getErrors()) { this.results.add(error); } }else { pkgRegistry.getPackage().addWindowDeclaration(window); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/7971/buggy-version/drools-compiler.src.main.java.org.drools.compiler.PackageBuilder.java", "BodyUseAPI": ["org.drools.rule.builder.RuleBuildContext.getErrors()"], "Fixed commit": "cd4b22f042014ddb85ebd0e71b4d0d96eb2fb609", "Url": "https://api.github.com/repos/sotty/drools", "Date": "2012-07-12T18:37:20Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["rabbitescape.ui.android.AndroidGameActivity.loadWorld(java.lang.String,android.os.Bundle)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((world.completionState()) == (World.CompletionState.INTRO)) { rabbitescape.ui.android.Dialogs.intro(this, world); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/5862/buggy-version/rabbit-escape-ui-android.app.src.main.java.rabbitescape.ui.android.AndroidGameActivity.java", "BodyUseAPI": ["rabbitescape.ui.android.Dialogs.intro(rabbitescape.ui.android.AndroidGameActivity,rabbitescape.engine.World)"], "Fixed commit": "c2dbb7344291f44e5251e8809f770eb6877e014c", "Url": "https://api.github.com/repos/andybalaam/rabbit-escape", "Date": "2015-02-20T03:28:43Z"},
{"Line": "=>2949", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getString(MainScreen.sTimestampCustomText,java.lang.String)", "java.lang.Integer.parseInt(prefs.getString(MainScreen.sTimestampDate, \"0\"))", "java.lang.Integer.parseInt(prefs.getString(MainScreen.sTimestampTime, \"0\"))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((dateFormat == 0) && (timeFormat == 0)) && (customText.equals(\"\"))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/5797/buggy-version/src.com.almalence.opencam.PluginManager.java", "BodyUseAPI": [], "Fixed commit": "faebcb1b630215138f711b3dc9b187948aca33b6", "Url": "https://api.github.com/repos/almalence/OpenCamera", "Date": "2014-11-11T06:20:10Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Utilities.mFacebook.isSessionValid()) { return; }else { Utilities.mFacebook.authorize(activity, permissions, com.uaemerchant.facebook.FacebookHandler.AUTHORIZE_ACTIVITY_RESULT_CODE, new com.uaemerchant.facebook.FacebookHandler.LoginDialogListener()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/935/buggy-version/UAEMerchant.src.com.uaemerchant.facebook.FacebookHandler.java", "BodyUseAPI": [], "Fixed commit": "3be3bc8cdf479a50082e30b19d74ab270f1c734b", "Url": "https://api.github.com/repos/kunoozdubai/UAEMerchant-Android", "Date": "2012-10-23T18:53:58Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((emailInterface.loadString()) != null) { android.content.Intent intentAll = new android.content.Intent(this, com.example.bbruner_notes.MainActivity.class); startActivity(intentAll); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/6891/buggy-version/bbruner-notes.src.com.example.bbruner_notes.EmailActivity.java", "BodyUseAPI": [], "Fixed commit": "44d73d7398e2fca59489e081f42be1ad443f7d49", "Url": "https://api.github.com/repos/Brendan-Bruner/Android-to-do-list", "Date": "2014-09-25T22:31:15Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (wordIndex >= (n)) { io.write(printArray(words)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/3921/buggy-version/scr.Parser.java", "BodyUseAPI": [], "Fixed commit": "c34fe4581f92bd4a97c91d8ae989b94af1f8c00b", "Url": "https://api.github.com/repos/JStonevalley/NGram", "Date": "2014-10-16T20:30:52Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((requestedUser) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/8381/buggy-version/src.com.fave100.client.pages.users.UsersPresenter.java", "BodyUseAPI": [], "Fixed commit": "f91a7aa976f6959e8127cf480f49b0be62580be4", "Url": "https://api.github.com/repos/yissachar/fave100", "Date": "2013-07-11T15:13:33Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((!(this.isAdded())) || (this.isDetached())) || (this.isRemoving())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/3635/buggy-version/app.src.main.java.com.erakk.lnreader.UI.fragment.UpdateInfoFragment.java", "BodyUseAPI": [], "Fixed commit": "1c382d7b47d96bc0ca519ebb1a5c7fdbcf806512", "Url": "https://api.github.com/repos/calvinaquino/LNReader-Android", "Date": "2015-11-07T04:08:26Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(value.startsWith(\"(\"))) value = \"(\" + value;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/2402/buggy-version/site.projectname.nicasm.NICSyntax.java", "BodyUseAPI": [], "Fixed commit": "f808ee401b635e6f05965c0556cf629db9c35bcc", "Url": "https://api.github.com/repos/Project-Name/codebase-java", "Date": "2017-04-23T09:15:16Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(value.endsWith(\")\"))) value = value + \")\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/2402/buggy-version/site.projectname.nicasm.NICSyntax.java", "BodyUseAPI": [], "Fixed commit": "f808ee401b635e6f05965c0556cf629db9c35bcc", "Url": "https://api.github.com/repos/Project-Name/codebase-java", "Date": "2017-04-23T09:15:16Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["file.getPath().getParent()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (subDir == null) { subDir = java.nio.file.Paths.get(archive.getFileName().substring(0, archive.getFileName().lastIndexOf(\".\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/7908/buggy-version/src.main.java.net.krazyweb.starmodmanager.data.Mod.java", "BodyUseAPI": [], "Fixed commit": "fc10c0d80b716053c9275b79c356031da64bc00b", "Url": "https://api.github.com/repos/KrazyTheFox/Starbound-Mod-Manager", "Date": "2014-01-27T17:30:09Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((new_hour % 24) >= 12) || ((((this.hour) == 12) && (this.PM)) && (new_hour > 24))) { this.PM = true; }else { this.PM = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/4738/buggy-version/src.Time.java", "BodyUseAPI": [], "Fixed commit": "8c5adaa2996a0b532e59228212465afb7a5a229e", "Url": "https://api.github.com/repos/brianmchan/Math-480B-Project", "Date": "2014-05-26T04:29:07Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.selectedProfile.getApplicationDescriptor()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(org.apache.commons.lang3.StringUtils.substringAfterLast(applicationDescriptor.getGamePath(), \"\\\\\").equals(\"\"))) { applicationDescriptor.setGamePath(((applicationDescriptor.getGamePath()) + (java.io.File.separatorChar))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/7704/buggy-version/app-core.src.main.java.com.mercury.platform.shared.config.configration.impl.ApplicationConfigurationService.java", "BodyUseAPI": ["com.mercury.platform.shared.config.descriptor.ApplicationDescriptor.setGamePath(((applicationDescriptor.getGamePath()) + (java.io.File.separatorChar)))", "com.mercury.platform.shared.config.descriptor.ApplicationDescriptor.getGamePath()"], "Fixed commit": "726a18e9940e59afea954f736aed52a0faa0013c", "Url": "https://api.github.com/repos/Exslims/MercuryTrade", "Date": "2017-10-24T22:24:57Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cardsType) == null) { try { cardsType = userMatch.getLastMove().getCardsType(); } catch (java.lang.Exception e) { gameLogic.sendDangerMessageTo(((server.model.User) (user)), \"Non hai specificato la tipologia di carte!\"); return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/745/buggy-version/src.game.action.UserPlay.java", "BodyUseAPI": [], "Fixed commit": "d9f203b805320055d7acf4f56ecd20c1ec958ddf", "Url": "https://api.github.com/repos/Guglio95/Dubito", "Date": "2017-01-13T20:01:02Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.yakindu.sct.model.stext.scoping.StextImportAwareScopeProvider.getQualifiedNameOfLocalElement(org.eclipse.emf.ecore.EObject)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (name != null) { org.eclipse.xtext.scoping.impl.ImportNormalizer localNormalizer = doCreateImportNormalizer(name, true, ignoreCase); result = createImportScope(result, java.util.Collections.singletonList(localNormalizer), allDescriptions, reference.getEReferenceType(), isIgnoreCase(reference)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/2803/buggy-version/plugins.org.yakindu.sct.model.stext.src.org.yakindu.sct.model.stext.scoping.StextImportAwareScopeProvider.java", "BodyUseAPI": ["org.yakindu.sct.model.stext.scoping.StextImportAwareScopeProvider.doCreateImportNormalizer(org.eclipse.xtext.naming.QualifiedName,boolean,boolean)"], "Fixed commit": "0c01d2287ec4833915e9e6ed9cb7fc4f69bb9bf3", "Url": "https://api.github.com/repos/Yakindu/statecharts", "Date": "2017-06-29T12:11:45Z"},
{"Line": "=>368", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isFirstRead) java.nio.file.Files.deleteIfExists(file.toPath());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/4231/buggy-version/src.FileTransferClient.java", "BodyUseAPI": [], "Fixed commit": "2e9330323e1f96e73fcb4e691ccd97e13ddd379b", "Url": "https://api.github.com/repos/DanGravel/TFTP", "Date": "2016-12-03T00:21:53Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isError()) { handleError(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/4231/buggy-version/src.FileTransferClient.java", "BodyUseAPI": [], "Fixed commit": "2e9330323e1f96e73fcb4e691ccd97e13ddd379b", "Url": "https://api.github.com/repos/DanGravel/TFTP", "Date": "2016-12-03T00:21:53Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((inputMessage.type) == (Utility.Message.msgType.APPENDTOTFSFILE)) { if ((inputMessage.sender) == (Utility.Message.serverType.CLIENT)) { AppendToTFSFile(inputMessage); }else if ((inputMessage.sender) == (Utility.Message.serverType.CHUNKSERVER)) { if ((inputMessage.success) == (Utility.Message.msgSuccess.REQUESTSUCCESS)) { java.lang.System.out.println(((\"File \" + (inputMessage.chunkClass.filename)) + \" append successful\")); }else if ((inputMessage.success) == (Utility.Message.msgSuccess.REQUESTERROR)) java.lang.System.out.println(((\"File \" + (inputMessage.chunkClass.filename)) + \" append failed\")); } }else if ((inputMessage.type) == (Utility.Message.msgType.COUNTFILES)) { if ((inputMessage.sender) == (Utility.Message.serverType.CLIENT)) { FindFile(inputMessage.filePath); }else if ((inputMessage.sender) == (Utility.Message.serverType.CHUNKSERVER)) { java.lang.System.out.println((((\"There are \" + (inputMessage.countedLogicalFiles)) + \" logical files in \") + (inputMessage.filePath))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/8515/buggy-version/TFS.src.base.MasterServerNode.java", "BodyUseAPI": ["java.io.PrintStream.println(((\"File \" + (inputMessage.chunkClass.filename)) + \" append successful\"))", "base.MasterServerNode.FindFile(inputMessage.filePath)", "java.io.PrintStream.println((((\"There are \" + (inputMessage.countedLogicalFiles)) + \" logical files in \") + (inputMessage.filePath)))", "base.MasterServerNode.AppendToTFSFile(Utility.Message)", "java.io.PrintStream.println(((\"File \" + (inputMessage.chunkClass.filename)) + \" append failed\"))"], "Fixed commit": "7b7454e382c9fbcebe1e58b36bb8ac06120d2280", "Url": "https://api.github.com/repos/liangvic/ChunkyMonkeys", "Date": "2014-04-14T06:50:59Z"},
{"Line": "=>446", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((insnFilledArray.getArrayType().getElementType()) instanceof uk.ac.cam.db538.dexter.dex.type.DexPrimitiveType) insns.add(combineTaint(regCombinedTaint, regCombinedTaint, regArg.getTaintRegister())); else { insns.add(getTaint(auxObjectTaint, regArg.getTaintRegister())); insns.add(combineTaint(regCombinedTaint, regCombinedTaint, auxObjectTaint)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/4129/buggy-version/libdexter.src.main.java.uk.ac.cam.db538.dexter.transform.taint.CodeGenerator.java", "BodyUseAPI": [], "Fixed commit": "b4d9c3bce5f109e61100dd53d456b4bed3918545", "Url": "https://api.github.com/repos/davidbrazdil/dexter", "Date": "2013-09-04T15:04:31Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((editing.getText().length()) == 0) { editing.setText(view.DetailsPanel.KEYBOARD_LABEL_DEFAULT_VALUE); e.consume(); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/8055/buggy-version/src.view.DetailsPanel.java", "BodyUseAPI": ["javax.swing.JLabel.setText(java.lang.String)"], "Fixed commit": "23f0a1c633e50533372655ff2d3d378e832b9118", "Url": "https://api.github.com/repos/dbbondy/Traffic-Simulation", "Date": "2012-05-01T11:43:35Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mIgnoreSuperCtorCallWithoutArgs)) { log(aSuperCallNode.getLineNo(), com.github.sevntu.checkstyle.checks.coding.UselessSuperCtorCallCheck.MSG_KEY_SUPER_CALL_WITHOUT_ARGS); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/4475/buggy-version/sevntu-checks.src.main.java.com.github.sevntu.checkstyle.checks.coding.UselessSuperCtorCallCheck.java", "BodyUseAPI": [], "Fixed commit": "c6c0db8c55ab061219ee5ca9d46f359bda45b2ef", "Url": "https://api.github.com/repos/pirat9600q/sevntu.checkstyle", "Date": "2014-10-21T07:21:47Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= 23) { mSlangList.requestFocus(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/5190/buggy-version/app.src.main.java.strayanslangapp.noni.com.strayanslangapp.presentation.fragments.VocabListFragment.java", "BodyUseAPI": [], "Fixed commit": "00ebf2ddba679ab621f6e3050a576c2d19be79da", "Url": "https://api.github.com/repos/poppito/StrayanSlangApp", "Date": "2017-11-09T10:02:20Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isInstant) { builder.disableNotification(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/7090/buggy-version/src.main.java.com.aaomidi.bitcointracker.handler.TelegramHandler.java", "BodyUseAPI": [], "Fixed commit": "4d2f183ab639ef5f13d4651db087771b5a2abe64", "Url": "https://api.github.com/repos/aaomidi/BitcoinTracker", "Date": "2017-06-14T23:36:27Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.BufferedReader.readLine()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (input.matches(\"([01]?[0-9]|2[0-3]):([0-5][0-9])-([01]?[0-9]|2[0-3]):([0-5][0-9])\")) { java.lang.String from = input.substring(0, 5); java.lang.String to = input.substring(6, 11); java.lang.System.out.println(isValidTime(from)); java.lang.System.out.println(isValidTime(to)); if ((isValidTime(from)) & (isValidTime(to))) { duration = input; }else { java.lang.System.out.println(\"The time to and/or from does not match the format hh:mm-hh:mm or is not valid. Try again.\"); } }else { java.lang.System.out.println(\"The time to and/or from does not match the format hh:mm-hh:mm or is not valid. Try again.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/6268/buggy-version/src.controller.SessionController.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.substring(int,int)"], "Fixed commit": "812a1735acc1b4bf4089e48881b88b4badb9220e", "Url": "https://api.github.com/repos/margreli/TDT4145-project", "Date": "2017-03-15T11:48:28Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<org.motechproject.ebodac.domain.Visit>.get(visits.indexOf(visit))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((existingVisit.getMotechProjectedDate()) == null) { existingVisit.setMotechProjectedDate(visit.getMotechProjectedDate()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/3325/buggy-version/src.main.java.org.motechproject.ebodac.service.impl.VisitServiceImpl.java", "BodyUseAPI": ["org.motechproject.ebodac.domain.Visit.setMotechProjectedDate(visit.getMotechProjectedDate())"], "Fixed commit": "91e4dbc5b8dca3638f785c2761cd68cb73c4c693", "Url": "https://api.github.com/repos/motech-implementations/ebodac", "Date": "2015-10-05T17:10:19Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (offset < 0) { throw new org.w3c.dom.DOMException(org.w3c.dom.DOMException.INDEX_SIZE_ERR, \"offset is out of bounds\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/1954/buggy-version/src.org.exist.dom.persistent.AbstractCharacterData.java", "BodyUseAPI": [], "Fixed commit": "fd5ad3aa525d29ccd7d70818636445534e7a2b4c", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2017-08-02T21:14:11Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (offset < 0) { throw new org.w3c.dom.DOMException(org.w3c.dom.DOMException.INDEX_SIZE_ERR, \"offset is out of bounds\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/1954/buggy-version/src.org.exist.dom.memtree.AbstractCharacterData.java", "BodyUseAPI": [], "Fixed commit": "fd5ad3aa525d29ccd7d70818636445534e7a2b4c", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2017-08-02T21:14:11Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (profile.usesCompounds()) text = seperateQuery(text, term, compounds);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/5882/buggy-version/ang.analyzer.src.main.java.ang.analyzer.Analyzer.java", "BodyUseAPI": [], "Fixed commit": "c3ebb3366d98c40a21cae3e5a97bed1bf8d8b390", "Url": "https://api.github.com/repos/spinfo/ang", "Date": "2016-08-30T15:10:15Z"},
{"Line": "=>953", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["OGlobalConfiguration.DISTRIBUTED_BACKUP_DIRECTORY.getValueAsString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (backupDirectory == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/8981/buggy-version/distributed.src.main.java.com.orientechnologies.orient.server.hazelcast.OHazelcastPlugin.java", "BodyUseAPI": [], "Fixed commit": "be91d4783bd68df8f387daff034f8aa1275539a2", "Url": "https://api.github.com/repos/micha-nerdlichter/orientdb", "Date": "2015-09-18T16:38:34Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((trophyName) != null) { }else { trophyName = \"debug\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/7309/buggy-version/wear.src.main.java.com.example.apurp_000.dementiaapp.TrophyPage.java", "BodyUseAPI": [], "Fixed commit": "e5e5de035ecce32a46c34340e5d0da8a23767fb3", "Url": "https://api.github.com/repos/apurpura/DementiaApp", "Date": "2015-08-02T00:51:45Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.hibernate.Session.createQuery(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((query2.list().size()) > 0) { employee = ((DBClasses.Employees) (query2.list().get(0))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/7907/buggy-version/SkiStation.src.Controller.LoginController.java", "BodyUseAPI": ["query2.list().get(int)", "org.hibernate.Query.list()"], "Fixed commit": "e77501c86aadcc88f5407962a1bf3e3c69aa1074", "Url": "https://api.github.com/repos/ad-woj/SkiStation", "Date": "2016-05-08T14:26:54Z"},
{"Line": "=>667", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.emc.storageos.db.client.DbClient.queryObject(java.lang.Class,java.net.URI)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((targetFileShare.getParentFileShare()) != null) { combined.add(targetFileShare.getParentFileShare().getURI()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/830/buggy-version/controllersvc.src.main.java.com.emc.storageos.filereplicationcontroller.FileReplicationDeviceController.java", "BodyUseAPI": ["com.emc.storageos.db.client.model.FileShare.getParentFileShare()", "java.util.List<java.net.URI>.add(targetFileShare.getParentFileShare().getURI())", "targetFileShare.getParentFileShare().getURI()"], "Fixed commit": "b91b911b3f7bbb7c10fb1310e3047ff8127dd258", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-02-15T06:52:36Z"},
{"Line": "=>708", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.emc.storageos.db.client.DbClient.queryObject(java.lang.Class,java.net.URI)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((fileShare.getParentFileShare()) != null) { combined.add(fileShare.getParentFileShare().getURI()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/830/buggy-version/controllersvc.src.main.java.com.emc.storageos.filereplicationcontroller.FileReplicationDeviceController.java", "BodyUseAPI": ["fileShare.getParentFileShare().getURI()", "java.util.List<java.net.URI>.add(fileShare.getParentFileShare().getURI())", "com.emc.storageos.db.client.model.FileShare.getParentFileShare()"], "Fixed commit": "b91b911b3f7bbb7c10fb1310e3047ff8127dd258", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-02-15T06:52:36Z"},
{"Line": "=>747", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.emc.storageos.db.client.DbClient.queryObject(java.lang.Class,java.net.URI)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((fileShare.getParentFileShare()) != null) { combined.add(fileShare.getParentFileShare().getURI()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/830/buggy-version/controllersvc.src.main.java.com.emc.storageos.filereplicationcontroller.FileReplicationDeviceController.java", "BodyUseAPI": ["java.util.List<java.net.URI>.add(fileShare.getParentFileShare().getURI())", "com.emc.storageos.db.client.model.FileShare.getParentFileShare()", "fileShare.getParentFileShare().getURI()"], "Fixed commit": "b91b911b3f7bbb7c10fb1310e3047ff8127dd258", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-02-15T06:52:36Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javafx.stage.FileChooser.showSaveDialog(fieldsContainer.getScene().getWindow())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (fileToSave == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/1326/buggy-version/src.pdf_utilities.Controller.java", "BodyUseAPI": [], "Fixed commit": "6a52772201036a788d44a30c4e4c86643517f43a", "Url": "https://api.github.com/repos/jhlenes/PDF-Utilities", "Date": "2017-02-26T21:35:01Z"},
{"Line": "=>1414", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (iHookImpl != null) { iHookImpl.onUnregister(); hooks.remove(iHookImpl); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/4510/buggy-version/core.src.main.java.com.orientechnologies.orient.core.db.record.ODatabaseRecordAbstract.java", "BodyUseAPI": ["com.orientechnologies.orient.core.hook.ORecordHook.onUnregister()", "java.util.Map<com.orientechnologies.orient.core.hook.ORecordHook, ORecordHook.HOOK_POSITION>.remove(com.orientechnologies.orient.core.hook.ORecordHook)"], "Fixed commit": "b144ef2f1cc4e49f631c523ce00adc49feb99676", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2014-06-12T11:33:29Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (event != null) { this.description = event.getName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/2612/buggy-version/grassroot-webapp.src.main.java.za.org.grassroot.webapp.model.rest.ResponseWrappers.GroupSearchWrapper.java", "BodyUseAPI": [], "Fixed commit": "30e0737c491937786d44c5b8042bf0789db302ad", "Url": "https://api.github.com/repos/vegtelenseg/grassroot-platform", "Date": "2016-03-16T14:40:10Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.logging.LogRecord.getThrown()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (th == null) { stackTraceString = \"\"; }else { java.io.StringWriter sw = new java.io.StringWriter(); java.io.PrintWriter out = new java.io.PrintWriter(sw); out.println(); record.getThrown().printStackTrace(out); out.close(); stackTraceString = sw.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/7549/buggy-version/src.main.java.stew5.LoggerFormatter.java", "BodyUseAPI": [], "Fixed commit": "2d0e0c9994833312ba8b9c76185acc11f1f7d814", "Url": "https://api.github.com/repos/argius/Stew5", "Date": "2017-05-08T14:39:23Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.tvbrowser.settings.TvbPreferenceFragment.findPreference(getResources().getString(R.string.PREF_REMIND_AGAIN_AT_START))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (remindAgain != null) { remindAgain.setEnabled((((reminderTime.getValue()) == null) || (!(reminderTime.getValue().equals(\"0\"))))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/6999/buggy-version/TV-Browser.src.org.tvbrowser.settings.TvbPreferenceFragment.java", "BodyUseAPI": ["android.preference.CheckBoxPreference.setEnabled((((reminderTime.getValue()) == null) || (!(reminderTime.getValue().equals(\"0\")))))"], "Fixed commit": "03cada73516093ec60ed63cc70d5b2ac25f0bc2d", "Url": "https://api.github.com/repos/ds10git/tvbrowserandroid", "Date": "2014-01-13T17:50:07Z"},
{"Line": "=>402", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.ContentResolver.query(android.net.Uri,<nulltype>,<nulltype>,<nulltype>,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(groupTest.isClosed())) { groupTest.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/6999/buggy-version/TV-Browser.src.org.tvbrowser.tvbrowser.TvDataUpdateService.java", "BodyUseAPI": ["android.database.Cursor.close()"], "Fixed commit": "03cada73516093ec60ed63cc70d5b2ac25f0bc2d", "Url": "https://api.github.com/repos/ds10git/tvbrowserandroid", "Date": "2014-01-13T17:50:07Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ctx.expression()) != null) { org.antlr.v4.runtime.Token right = ctx.expression().getStart(); verifyColonLeftAssociation(left, right, colon); }else { verifier.verifyPunctuationLeftAssociation(left, colon, Messages.COLON); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/7003/buggy-version/src.main.java.com.sleekbyte.tailor.listeners.whitespace.ColonWhitespaceListener.java", "BodyUseAPI": ["SwiftParser.ExpressionElementContext.expression()", "ctx.expression().getStart()"], "Fixed commit": "ecdd3cc13cc9eaa09f9034aabd84e5cab7080961", "Url": "https://api.github.com/repos/sleekbyte/tailor", "Date": "2016-07-24T05:47:15Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.dianping.puma.alarm.monitor.ScanningAlarmMonitor.monitorStrategy(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (strategy == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/7918/buggy-version/alarm.src.main.java.com.dianping.puma.alarm.monitor.ScanningAlarmMonitor.java", "BodyUseAPI": [], "Fixed commit": "e0b306deb76465423bb3dbc2a45f85b0be48ab89", "Url": "https://api.github.com/repos/dianping/puma", "Date": "2016-04-01T06:35:13Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (w != null) whereabouts = w;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/196/buggy-version/src.deadlybanquet.ai.NPCBrain.java", "BodyUseAPI": [], "Fixed commit": "5881491e987df02ae08d765f277760a5e888ff85", "Url": "https://api.github.com/repos/Mathcar/DeadlyBanquet", "Date": "2016-04-29T13:44:45Z"},
{"Line": "=>327", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (app.fetched = false) { containerJsonFetcher = new JsonUtils.ContainerJsonFetcher(conf, app, containerToReport); containerJsonFetcher.fetch(); app.fetched = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/7857/buggy-version/src.Server.Tracer.java", "BodyUseAPI": [], "Fixed commit": "378782965d24f7fe6589872ba7ceeb2632148d0e", "Url": "https://api.github.com/repos/EddiePi/tracing-server", "Date": "2017-04-05T17:47:06Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.frontMatter.isEmpty()) return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/1241/buggy-version/jekyll.Post.java", "BodyUseAPI": [], "Fixed commit": "70d30a9bce01cfca6d6e4cf1fdb5fa98cae3b18b", "Url": "https://api.github.com/repos/MaaSTaaR/EasyJekyll", "Date": "2016-09-17T06:15:29Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.frontMatter) == null) return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/1241/buggy-version/jekyll.Post.java", "BodyUseAPI": [], "Fixed commit": "70d30a9bce01cfca6d6e4cf1fdb5fa98cae3b18b", "Url": "https://api.github.com/repos/MaaSTaaR/EasyJekyll", "Date": "2016-09-17T06:15:29Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fr.imag.adele.apam.declarations.ComponentDeclaration.getImplementation()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((impl != null) && (!(impl.getName().isEmpty()))) { bundleRequiresImplementations.add(impl); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/3887/buggy-version/plugins.apam-maven-plugin.src.main.java.fr.imag.adele.apam.apammavenplugin.ApamRepoBuilder.java", "BodyUseAPI": ["java.util.Set<fr.imag.adele.apam.declarations.ImplementationReference>.add(fr.imag.adele.apam.declarations.ImplementationReference<?>)"], "Fixed commit": "92dead3809a5423755143afbcac06a809c690ac8", "Url": "https://api.github.com/repos/AdeleResearchGroup/ApAM", "Date": "2014-01-28T15:30:44Z"},
{"Line": "=>273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.egov.tradelicense.persistence.repository.CategoryRepository.getLong(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (parentId != null) { category.setParentName(getParentName(parentId)); }else { category.setParentName(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/6307/buggy-version/tradelicense.tl-masters.src.main.java.org.egov.tradelicense.persistence.repository.CategoryRepository.java", "BodyUseAPI": ["org.egov.tl.commons.web.contract.CategorySearch.setParentName(java.lang.String)", "org.egov.tradelicense.persistence.repository.CategoryRepository.getParentName(java.lang.Long)"], "Fixed commit": "9c4c976b8e8c5d49eaafee49611a28a5c2eedca7", "Url": "https://api.github.com/repos/egovernments/egov-services", "Date": "2017-09-07T14:06:54Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (obj instanceof org.jaggeryjs.scriptengine.util.ConsString) { return org.jaggeryjs.scriptengine.util.HostObjectUtil.serializeString(obj.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/2922/buggy-version/components.script-engine.org.jaggeryjs.scriptengine.src.main.java.org.jaggeryjs.scriptengine.util.HostObjectUtil.java", "BodyUseAPI": ["java.lang.Object.toString()", "org.jaggeryjs.scriptengine.util.HostObjectUtil.serializeString(java.lang.String)"], "Fixed commit": "26abcf465ebf746b0e8d5e61777a288a48e84f3a", "Url": "https://api.github.com/repos/wso2/jaggery", "Date": "2013-03-20T14:02:22Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (possibleSlugs == null) { throw new uk.ac.cam.cl.quebec.face.exceptions.StorageException(\"No users were provided to look for\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/3286/buggy-version/src.main.java.uk.ac.cam.cl.quebec.face.storage.TrainingFiles.java", "BodyUseAPI": [], "Fixed commit": "f609f9cfe1ee39347cf398fda21934ba09eb3fda", "Url": "https://api.github.com/repos/quebec-group/face", "Date": "2017-03-02T09:34:19Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((toRender.numDimensions()) == 1) && ((toRender.dimension(0)) < 3)) { toRender = tmpImg.factory().create(toRender, tmpImg.firstElement().createVariable()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/5087/buggy-version/org.knime.knip.base.src.org.knime.knip.base.data.img.ImgPlusCell.java", "BodyUseAPI": ["tmpImg.factory().create(net.imglib2.RandomAccessibleInterval<T>,tmpImg.firstElement().createVariable())"], "Fixed commit": "4acd2b84e3b1d9505d0a674a2b271d25a8b64de4", "Url": "https://api.github.com/repos/knime-ip/knip", "Date": "2016-03-17T22:35:07Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (action == null) throw new java.lang.NullPointerException(cz.deznekcz.reference.Out.NO_ACTION_EXCEPTION);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/997/buggy-version/myTools.src.cz.deznekcz.reference.Out.java", "BodyUseAPI": [], "Fixed commit": "eab7d7d73d941a3ceab558860fc9ba6caeaceff1", "Url": "https://api.github.com/repos/DeznekCZ/myTools", "Date": "2016-03-31T12:16:10Z"},
{"Line": "=>276", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(servicePath.startsWith(\"/\"))) { servicePath = \"/\" + servicePath; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/6194/buggy-version/modules.kernel.src.org.apache.axis2.util.Utils.java", "BodyUseAPI": [], "Fixed commit": "218357c38c8d8309c833caf45adfe9ce83a74bde", "Url": "https://api.github.com/repos/chanakaudaya/wso2-axis2", "Date": "2016-05-11T07:25:49Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(showPlot)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/2442/buggy-version/org.dawnsci.spectrum.ui.src.org.dawnsci.spectrum.ui.file.SpectrumFile.java", "BodyUseAPI": [], "Fixed commit": "a6eba54056d53f7999a4a809613ea7c3fe006f15", "Url": "https://api.github.com/repos/DawnScience/dawn-ui", "Date": "2013-11-15T11:20:22Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(showPlot)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/2442/buggy-version/org.dawnsci.spectrum.ui.src.org.dawnsci.spectrum.ui.file.SpectrumInMemory.java", "BodyUseAPI": [], "Fixed commit": "a6eba54056d53f7999a4a809613ea7c3fe006f15", "Url": "https://api.github.com/repos/DawnScience/dawn-ui", "Date": "2013-11-15T11:20:22Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (inputStream == null) throw new java.io.IOException(\"Datastore properties file not found.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/6204/buggy-version/logistics-ejb.src.main.java.br.com.esign.logistics.dao.impl.DatastoreProperties.java", "BodyUseAPI": [], "Fixed commit": "e736cde6a738b91b340c3564c27f8b89a1549c8c", "Url": "https://api.github.com/repos/esign-consulting/logistics", "Date": "2017-10-06T02:20:35Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((renderLayer < 0) || (renderLayer >= (cameraSystem.nodes.size()))) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/1880/buggy-version/app.src.main.java.noteworthyengine.RenderSystem.java", "BodyUseAPI": [], "Fixed commit": "2a1dc5ac8949906213c29b423e8e64da128c58e5", "Url": "https://api.github.com/repos/ericmok/android-rts-game", "Date": "2015-10-25T01:42:12Z"},
{"Line": "=>301", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (noteInfoToNotifyOn != null) { if (!(mSentNotifications.contains(noteInfoToNotifyOn))) { sendNotification(noteInfoToNotifyOn.toString(), noteInfoToNotifyOn); mSentNotifications.add(noteInfoToNotifyOn); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/4540/buggy-version/GeoNote.app.src.main.java.geonote.app.MapsActivity.java", "BodyUseAPI": ["geonote.app.NoteInfo.toString()", "java.util.HashSet<geonote.app.NoteInfo>.add(geonote.app.NoteInfo)", "java.util.HashSet<geonote.app.NoteInfo>.contains(geonote.app.NoteInfo)", "geonote.app.MapsActivity.sendNotification(noteInfoToNotifyOn.toString(),geonote.app.NoteInfo)"], "Fixed commit": "f1d99d6c779e376d4655d7bf4dc62e920f7068f8", "Url": "https://api.github.com/repos/ZanyGnu/GeoNote", "Date": "2015-01-10T18:45:10Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((inAssembly[i]) != null) { inAssembly[i].setCompletionTime(currentTime.increase(((i + 1) * 60))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/5446/buggy-version/src.company.Schedule.java", "BodyUseAPI": ["inAssembly[i].setCompletionTime(currentTime.increase(((i + 1) * 60)))", "util.TimeStamp.increase(int)"], "Fixed commit": "32983e49b7627cd9c27deb1b579c7788eecf1035", "Url": "https://api.github.com/repos/Novarg1/SWOP21", "Date": "2014-03-10T20:45:44Z"},
{"Line": "=>530", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.customers.size()) > 0) { return this.customers.get(java.util.Arrays.binarySearch(this.customers.toArray(), new concerthallsystem.Customer(name))); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/6250/buggy-version/ConcertHallSystem.src.concerthallsystem.Concert.java", "BodyUseAPI": ["java.util.ArrayList<concerthallsystem.Customer>.get(int)", "java.util.ArrayList<concerthallsystem.Customer>.toArray()", "java.util.Arrays.binarySearch(this.customers.toArray(),concerthallsystem.Customer)"], "Fixed commit": "bb0b389ede32c144523c2478ac98fec6c767bd95", "Url": "https://api.github.com/repos/danielcrblack/ConcertHallSystem", "Date": "2017-02-28T21:49:16Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((product.getCategory().length()) > 20) errors.rejectValue(\"category\", \"error.large\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/5999/buggy-version/NetCufar-api.src.main.java.com.project.crm.validator.ProductValidator.java", "BodyUseAPI": [], "Fixed commit": "b3d69863ea65d570e4873e36fdde402242d20cbb", "Url": "https://api.github.com/repos/IvanTkachev/CRM_Project", "Date": "2017-12-26T02:40:37Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((product.getDescription().length()) > 140) errors.rejectValue(\"description\", \"error.large\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/5999/buggy-version/NetCufar-api.src.main.java.com.project.crm.validator.ProductValidator.java", "BodyUseAPI": [], "Fixed commit": "b3d69863ea65d570e4873e36fdde402242d20cbb", "Url": "https://api.github.com/repos/IvanTkachev/CRM_Project", "Date": "2017-12-26T02:40:37Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((product.getSuperCategory().length()) > 20) errors.rejectValue(\"superCategory\", \"error.large\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/5999/buggy-version/NetCufar-api.src.main.java.com.project.crm.validator.ProductValidator.java", "BodyUseAPI": [], "Fixed commit": "b3d69863ea65d570e4873e36fdde402242d20cbb", "Url": "https://api.github.com/repos/IvanTkachev/CRM_Project", "Date": "2017-12-26T02:40:37Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.fasterxml.jackson.databind.ObjectMapper.convertValue(com.fasterxml.jackson.databind.JsonNode,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((record.getRefDatasetUrn()) != null) { java.util.Map<java.lang.String, java.lang.Object> refDataset = models.daos.DatasetDao.getDatasetByUrn(record.getRefDatasetUrn()); if (refDataset != null) { record.setRefDatasetId(((java.lang.Long) (refDataset.get(\"id\"))).intValue()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/8067/buggy-version/backend-service.app.models.daos.DatasetDao.java", "BodyUseAPI": ["wherehows.common.schemas.DatasetRecord.getRefDatasetUrn()", "models.daos.DatasetDao.getDatasetByUrn(record.getRefDatasetUrn())", "wherehows.common.schemas.DatasetRecord.setRefDatasetId(int)"], "Fixed commit": "2431d2943259939f12cdd8c9d0e594530b8ce261", "Url": "https://api.github.com/repos/SunZhaonan/WhereHows-1", "Date": "2016-03-18T22:26:55Z"},
{"Line": "=>457", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (model.isUseDoubleStrings()) { java.lang.Object stringVal = eObject.eGet(class1.getEStructuralFeature(((structuralFeature.getName()) + \"AsString\"))); if (stringVal != null) { print(((java.lang.String) (stringVal))); }else { writePrimitive(realVal); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/6950/buggy-version/IfcPlugins.src.org.bimserver.ifc.step.serializer.IfcStepSerializer.java", "BodyUseAPI": [], "Fixed commit": "6c3e6a663f0a767e11a2d5bf216e4b7a5c3179ef", "Url": "https://api.github.com/repos/opensourceBIM/BIMserver", "Date": "2014-12-05T21:50:23Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((curId) != (Listener.IdType.FUNC)) { if (ctx.getText().equals(\"INT\")) { curId = Listener.IdType.INT; }else if (ctx.getText().equals(\"FLOAT\")) { curId = Listener.IdType.FLOAT; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/6664/buggy-version/Parser.Step2.src.Listener.java", "BodyUseAPI": [], "Fixed commit": "7ea65dd26d3538059afb24a20e9a3958e316448f", "Url": "https://api.github.com/repos/AustinBoutin/CSCI468", "Date": "2017-03-30T02:27:59Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(tableName))) { selectQuery = selectQuery.replace(tableName, ((\"[\" + tableName) + \"]\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/7359/buggy-version/debug-db.src.main.java.com.amitshekhar.utils.DatabaseHelper.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "237ec14d00e2c704a2a43b2011a15be83bcf568f", "Url": "https://api.github.com/repos/landicefu/Android-Debug-Database", "Date": "2017-04-24T11:09:07Z"},
{"Line": "=>3223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mAgreedExtensions) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/6532/buggy-version/src.main.java.com.neovisionaries.ws.client.WebSocket.java", "BodyUseAPI": [], "Fixed commit": "818d2f4420c514bcbcd1d990a78c2e6bbe9a2357", "Url": "https://api.github.com/repos/TakahikoKawasaki/nv-websocket-client", "Date": "2015-12-18T09:46:24Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((app.Consulta.count()) == 0) { play.test.Fixtures.delete(); java.lang.String consultasFile = \"listas/initial-data/consultasSQL.yml\"; play.Logger.info(\"Cargando consultas desde %s\", consultasFile); play.test.Fixtures.loadModels(consultasFile); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/5603/buggy-version/fap.app.app.Start.java", "BodyUseAPI": [], "Fixed commit": "bcb9b535e8cf755411119edf92da5ab705b27dcb", "Url": "https://api.github.com/repos/FAP-Team/Fap-Module", "Date": "2012-09-27T11:21:01Z"},
{"Line": "=>462", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Pacman.ghostPenQ.size()) <= 0) Pacman.nextGhostReleaseLabel.setText(\" Ghost Release: N/A\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/3362/buggy-version/Pacman.java", "BodyUseAPI": [], "Fixed commit": "4ae19a55641456610ce17a5674e917f06ee30fd7", "Url": "https://api.github.com/repos/dsouzarc/pacman", "Date": "2014-07-23T18:47:00Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((assigneeRef) != null) { assigneeCommentsRef = new com.firebase.client.Firebase(((assigneeRef) + \"/comments\")); com.firebase.client.Firebase assigneeNewComment = assigneeCommentsRef.push(); assigneeNewComment.setValue(comment); assigneeNewComment.child(\"notify\").setValue(\"true\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/7317/buggy-version/app.src.main.java.com.example.ishita.assigntasks.CommentsActivity.java", "BodyUseAPI": [], "Fixed commit": "56af5cbba4e9b282d1ee439f8a7fe6aaff71ac27", "Url": "https://api.github.com/repos/geekskool/android-teamwork", "Date": "2016-03-30T07:56:04Z"},
{"Line": "=>332", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((numerator < (edu.berkeley.path.beats.simulator.nodeBeahavior.Node_SplitRatioSolver_Balancing.zeroThreshold)) && ((myNode.getOutput_link()[jprime].get_available_space_supply_in_veh(e)) < 0.0)) fraction = 0.0; else { fraction = numerator / (myNode.getOutput_link()[jprime].get_available_space_supply_in_veh(e)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/5940/buggy-version/src.main.java.edu.berkeley.path.beats.simulator.nodeBeahavior.Node_SplitRatioSolver_Balancing.java", "BodyUseAPI": ["myNode.getOutput_link()[jprime].get_available_space_supply_in_veh(int)", "edu.berkeley.path.beats.simulator.nodeBeahavior.Node_SplitRatioSolver_Balancing.getOutput_link()"], "Fixed commit": "734e8f918c4e95a733150d59df35da2623106148", "Url": "https://api.github.com/repos/mawright/beats", "Date": "2016-10-20T23:19:55Z"},
{"Line": "=>1722", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (allLinkThreadsDone()) { synchronized(generatedWordBags) { if (verbose) java.lang.System.out.println(\"3. LinkContent Thread has no more data therefore I am done.\"); synchronized(amDone) { amDone.set(true); amDone.notifyAll(); } generatedWordBags.notifyAll(); } assert allLinkThreadsDone(); return; }else { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/6066/buggy-version/src.main.java.openEval.MultithreadSimpleOpenEval.java", "BodyUseAPI": [], "Fixed commit": "5fb27583ba39f01cd8bf159e76dc0b796b17fd94", "Url": "https://api.github.com/repos/ikb-a/ci", "Date": "2016-08-10T11:50:04Z"},
{"Line": "=>918", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((email) != null) && ((password) != null)) { token = requestTokenBlocking(); }else { throw new java.lang.IllegalStateException(\"Reconnect not possible! Invalid token AND missing email or password!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/8422/buggy-version/src.main.java.de.btobastian.javacord.ImplDiscordAPI.java", "BodyUseAPI": [], "Fixed commit": "c9a95cf403a7597ec59cb075c8c5455dbceddb54", "Url": "https://api.github.com/repos/Javacord/Javacord", "Date": "2017-01-06T13:37:25Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ch == (org.neo4j.csv.reader.BufferedCharSeeker.EOL_CHAR)) { (lineNumber)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/4964/buggy-version/community.csv.src.main.java.org.neo4j.csv.reader.BufferedCharSeeker.java", "BodyUseAPI": [], "Fixed commit": "100888515aec1d12a1ff4986193e6b0ffcdfd0fd", "Url": "https://api.github.com/repos/nawroth/neo4j", "Date": "2015-02-12T09:35:09Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (date != null) { formattedDate = startDateEndFormat.format(date); pow.setStartdate(formattedDate); }else { pow.setStartdate(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/5404/buggy-version/app.src.main.java.edu.temple.tuhub.GetMarketDataThread.java", "BodyUseAPI": ["java.text.SimpleDateFormat.format(java.util.Date)"], "Fixed commit": "e57a5d1039be7bc949154f8814c9e12981f7916c", "Url": "https://api.github.com/repos/tuhub/TUHub-Android", "Date": "2017-04-28T01:09:51Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (selStart <= selEnd) { currentSelection = getText().toString().substring(selStart, selEnd); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/3859/buggy-version/app.src.main.java.org.connectbot.TerminalView.java", "BodyUseAPI": ["getText().toString().substring(int,int)"], "Fixed commit": "e9e9e5cb966df92f0ed51d493f5aec9d7d640348", "Url": "https://api.github.com/repos/rhansby/connectbot", "Date": "2015-10-05T19:10:02Z"},
{"Line": "=>12", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.kivSW.phonerecorderSharedClasses.MyConfiguration.debug) android.os.Debug.waitForDebugger();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/3327/buggy-version/PhoneRecorder.phoneRecorderShareClasses.src.main.java.com.kivSW.phonerecorderSharedClasses.MyConfiguration.java", "BodyUseAPI": [], "Fixed commit": "8f02f6dbb2f40097118dbd9afbffb609d1848196", "Url": "https://api.github.com/repos/IvanKovalchuk/PhoneRecorder", "Date": "2015-04-22T13:56:09Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fieldName != null) { throw new org.elasticsearch.common.ParsingException(parser.getTokenLocation(), (((((\"[match_phrase_prefix] query doesn't support multiple \" + \"fields, found [\") + fieldName) + \"] and [\") + (parser.currentName())) + \"]\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/3216/buggy-version/core.src.main.java.org.elasticsearch.index.query.MatchPhrasePrefixQueryBuilder.java", "BodyUseAPI": [], "Fixed commit": "cb41f304f29ff6270d8204f20eb7724e93ee015f", "Url": "https://api.github.com/repos/Popo-lth/elasticsearch", "Date": "2016-08-08T17:41:45Z"},
{"Line": "=>466", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (parentIsArray) { this.popContext(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/780/buggy-version/src.main.java.com.alibaba.fastjson.parser.DefaultJSONParser.java", "BodyUseAPI": [], "Fixed commit": "117ef36b8f21338825ce83bd887500891610e1c2", "Url": "https://api.github.com/repos/292388900/fastjson", "Date": "2015-10-29T08:11:20Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fallingBlockSpeed) == 0) { fallingBlockSpeed = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/4811/buggy-version/src.main.java.com.elmakers.mine.bukkit.action.builtin.ModifyBlockAction.java", "BodyUseAPI": [], "Fixed commit": "b8d61ee375a2731512c6dca2057e8790e418ffb3", "Url": "https://api.github.com/repos/elBukkit/MagicPlugin", "Date": "2015-03-19T03:45:49Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (index < (capacity)) { int pos = ((front) + index) % (capacity); return items[pos]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/7690/buggy-version/Proj1a-Deque.ArrayDeque.java", "BodyUseAPI": [], "Fixed commit": "92843eaa74a67d24c933d0c8dffe673ee964f2a9", "Url": "https://api.github.com/repos/JinLingChristopher/Algorithms", "Date": "2017-02-19T03:39:30Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((processes.left) == 0) { btnExitContinue.setText(\"Done!!!\"); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/2854/buggy-version/TorrentGUI.java", "BodyUseAPI": [], "Fixed commit": "8b9d2204ebe37447ff7f95cd83b102115edbb2da", "Url": "https://api.github.com/repos/nsheim/RUBTClient", "Date": "2015-12-06T19:26:53Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (resultCode == (RESULT_OK)) { switch (requestCode) { case com.example.skafle.weekonesolutions.MainActivity.SELECT_PHOTO : android.net.Uri selectedImage = data.getData(); sendImage(selectedImage); break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/3248/buggy-version/app.src.main.java.com.example.skafle.weekonesolutions.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "34192dc9f10a47e02a479a0129c6dc755c7c364f", "Url": "https://api.github.com/repos/SirjanK/MDBWeekOneSolutions", "Date": "2016-02-23T02:45:39Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(shouldApply(variant))) return this;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/8194/buggy-version/src.main.java.org.snpeff.interval.Exon.java", "BodyUseAPI": [], "Fixed commit": "9c09b2315e98fa779f861d48565b0e4803d57ae8", "Url": "https://api.github.com/repos/pcingola/SnpEff", "Date": "2017-11-23T16:10:18Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (publicEnvironment == null) publicEnvironment = new com.taobao.top.pacman.ActivityLocationReferenceEnvironment(activity.getParentEnvironment());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/1771/buggy-version/src.main.java.com.taobao.top.pacman.ActivityUtilities.java", "BodyUseAPI": [], "Fixed commit": "16ed2c22b95c16c1367077cdda436ecdfd5d1a2a", "Url": "https://api.github.com/repos/wsky/pacman", "Date": "2014-01-21T08:54:32Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(delete(mTemporaryPath, false))) { alluxio.underfs.NonAtomicCreateUnderFileSystem.LOG.error(\"Failed to delete temporary file {}\", mTemporaryPath); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/6790/buggy-version/core.common.src.main.java.alluxio.underfs.NonAtomicCreateUnderFileSystem.java", "BodyUseAPI": ["org.slf4j.Logger.error(java.lang.String,java.lang.String)"], "Fixed commit": "4d3793e37a496a81a08c22c2ba92fc0d736f024b", "Url": "https://api.github.com/repos/madanadit/alluxio", "Date": "2016-10-27T18:01:24Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (senderNumber.equals(userNumberApp)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/7949/buggy-version/app.src.main.java.com.colony.helper.FirebaseMessagingService.java", "BodyUseAPI": [], "Fixed commit": "14918f96f110115d3d8ebc004138f44690352bc6", "Url": "https://api.github.com/repos/zahi111/Colony", "Date": "2017-01-11T12:05:15Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (BuildConfig.DEBUG) { traceHistory.add(new android.util.Pair(event.toString(), new java.util.Date())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/102/buggy-version/FunPlusSDK.src.main.java.com.funplus.sdk.FunPlusRUM.java", "BodyUseAPI": [], "Fixed commit": "148c2ade8fe4a204391ac5ff243a26eaf36f6f20", "Url": "https://api.github.com/repos/funplus-sdk/android-sdk-core", "Date": "2016-11-14T02:33:14Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (BuildConfig.DEBUG) { suppressHistory.add(new android.util.Pair(event.toString(), new java.util.Date())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/102/buggy-version/FunPlusSDK.src.main.java.com.funplus.sdk.FunPlusRUM.java", "BodyUseAPI": [], "Fixed commit": "148c2ade8fe4a204391ac5ff243a26eaf36f6f20", "Url": "https://api.github.com/repos/funplus-sdk/android-sdk-core", "Date": "2016-11-14T02:33:14Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.core.resources.IProject.isOpen()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!_isOpen) { _and = false; }else { boolean _hasNature = project.hasNature(IErlProject.NATURE_ID); _and = _hasNature; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/3359/buggy-version/org.erlide.model_new.api.xtend-gen.org.erlide.engine.new_model.internal.ErlDeltaProcessor.java", "BodyUseAPI": [], "Fixed commit": "e05fbfcd7cb5f7bab00000de19f4b350d2164b72", "Url": "https://api.github.com/repos/vladdu/erlide", "Date": "2014-11-04T11:40:53Z"},
{"Line": "=>1281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (event.getPlayer().hasPermission(\"boatgame.sign\")) { event.setCancelled(true); java.lang.String name = s.getLine(1); getConfig().set((name + \".sign\"), null); event.getPlayer().sendMessage(\"\ufffd2Don't forget to set a new sign for the boatarena!\"); event.getBlock().breakNaturally(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/6367/buggy-version/src.com.comze_instancelabs.boatgame.Main.java", "BodyUseAPI": ["org.bukkit.event.block.BlockBreakEvent.setCancelled(boolean)", "org.bukkit.event.block.BlockBreakEvent.getBlock()", "event.getBlock().breakNaturally()", "event.getPlayer().sendMessage(java.lang.String)", "org.bukkit.event.block.BlockBreakEvent.getPlayer()"], "Fixed commit": "6791ffcf752e30761554bed91f6caeb5b76da08f", "Url": "https://api.github.com/repos/instance01/boatgame", "Date": "2013-10-16T17:13:32Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.block.BlockPlaceEvent.getPlayer()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (plugin.isDisabledWorld(player)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/4343/buggy-version/src.main.java.net.dmulloy2.swornrpg.listeners.BlockListener.java", "BodyUseAPI": [], "Fixed commit": "7ae122e054bfaba8a159db341596cd32e9e68be7", "Url": "https://api.github.com/repos/dmulloy2/SwornRPG", "Date": "2013-05-24T03:39:04Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.block.BlockState.getType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (blockMat == (org.bukkit.Material.FIRE)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/4343/buggy-version/src.main.java.net.dmulloy2.swornrpg.listeners.BlockListener.java", "BodyUseAPI": [], "Fixed commit": "7ae122e054bfaba8a159db341596cd32e9e68be7", "Url": "https://api.github.com/repos/dmulloy2/SwornRPG", "Date": "2013-05-24T03:39:04Z"},
{"Line": "=>465", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.stackObjectKey.size()) == 1) { this.currentLocalName = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/5579/buggy-version/es.alrocar.poiproxy.src.main.java.es.alrocar.jpe.parser.handler.BaseContentHandler.java", "BodyUseAPI": [], "Fixed commit": "e67a93e0ca04d138451026a9859e32efc4c3d546", "Url": "https://api.github.com/repos/alrocar/POIProxy", "Date": "2016-02-17T09:23:25Z"},
{"Line": "=>447", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.currentObjectKey) != null) { stackObjectKey.push(this.currentObjectKey); }else { if (!(stackObjectKey.isEmpty())) { this.currentObjectKey = stackObjectKey.peek(); }else { this.currentObjectKey = \"\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/5579/buggy-version/es.alrocar.poiproxy.src.main.java.es.alrocar.jpe.parser.handler.BaseContentHandler.java", "BodyUseAPI": [], "Fixed commit": "e67a93e0ca04d138451026a9859e32efc4c3d546", "Url": "https://api.github.com/repos/alrocar/POIProxy", "Date": "2016-02-17T09:23:25Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dateDebut.isBefore(new org.joda.time.DateTime(trimestre.dateDebut))) trimestre = listeDeSessions.liste.get(((listeDeSessions.liste.size()) - 2));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/2055/buggy-version/app.src.main.java.ca.etsmtl.applets.etsmobile.ui.fragment.HoraireFragment.java", "BodyUseAPI": [], "Fixed commit": "8165934d306a6bf070a2b4330894ce661e223412", "Url": "https://api.github.com/repos/ApplETS/ETSMobile-Android2", "Date": "2016-05-29T18:32:29Z"},
{"Line": "=>960", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.zkoss.zk.ui.AbstractComponent.getIndexCacheMap()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (indexCacheMap == null) initIndexCacheMap();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/4661/buggy-version/zk.src.org.zkoss.zk.ui.AbstractComponent.java", "BodyUseAPI": [], "Fixed commit": "dba0ac1aaf634289bf4ab033f66370b0eb047489", "Url": "https://api.github.com/repos/zkoss/zk", "Date": "2014-12-11T07:21:08Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(authExp.getMissingRoles().isEmpty())) { java.util.List<java.lang.String> missingRolesTranslation = new java.util.ArrayList<>(); for (java.lang.String missingRole : authExp.getMissingRoles()) { missingRolesTranslation.add(org.roda.wui.client.common.utils.AsyncCallbackUtils.messages.role(missingRole)); } message = org.roda.wui.client.common.utils.AsyncCallbackUtils.messages.authorizationDeniedAlertMessageMissingRoles(missingRolesTranslation); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/2895/buggy-version/roda-ui.roda-wui.src.main.java.org.roda.wui.client.common.utils.AsyncCallbackUtils.java", "BodyUseAPI": ["org.roda.core.data.exceptions.AuthorizationDeniedException.getMissingRoles()"], "Fixed commit": "8be2e2d304a17528c7cbff024976d496ffaa451a", "Url": "https://api.github.com/repos/keeps/roda", "Date": "2016-12-15T14:57:17Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((argument_holder.getCategory()) == (mks.arguments.holders.parameters.ArgumentCategory.MANDATORY)) { boolean skip = false; for (java.lang.String incompatible_flag : argument_holder.getIncompatibleArguments()) { if (this._ParsedArguments.contains(incompatible_flag)) { skip = true; break; } } if (!skip) { if (!(flag_by_incompatible_flag.containsKey(argument_holder.getFlag()))) { this._ParseResult = new mks.parsers.ParseResult(mks.parsers.ArgumentLineParser.RESULT.MISSING_FLAG, ((\"ERROR: missing mandatory argument with flag: \" + (argument_holder.getFlag())) + \".\")); return false; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/7889/buggy-version/JittyJ.Program.src.main.java.mks.parsers.ArgumentLineParser.java", "BodyUseAPI": ["mks.arguments.holders.ArgumentHolder.getIncompatibleArguments()", "mks.arguments.holders.ArgumentHolder.getFlag()", "mks.arguments.holders.ArgumentHolder.getFlag()", "java.util.Map<java.lang.String, java.lang.String>.containsKey(argument_holder.getFlag())"], "Fixed commit": "22c90665cab6659cc191bf62285953f5d056c54a", "Url": "https://api.github.com/repos/MarkoPaul0/Jiffy-J", "Date": "2017-03-22T05:18:07Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (de.robotricker.transportpipes.pipeutils.ContainerBlockUtils.loadedChunks.containsKey(blockLoc.getWorld())) { for (org.bukkit.Chunk c : de.robotricker.transportpipes.pipeutils.ContainerBlockUtils.loadedChunks.get(blockLoc.getWorld())) { if (((blockLoc.getBlockX()) >= ((c.getX()) * 16)) && ((blockLoc.getBlockX()) < (((c.getX()) + 1) * 16))) { if (((blockLoc.getBlockZ()) >= ((c.getZ()) * 16)) && ((blockLoc.getBlockZ()) < (((c.getZ()) + 1) * 16))) { return true; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/7878/buggy-version/src.main.java.de.robotricker.transportpipes.pipeutils.ContainerBlockUtils.java", "BodyUseAPI": ["org.bukkit.Location.getWorld()", "org.bukkit.Location.getBlockX()", "java.util.Map<org.bukkit.World, java.util.Set<org.bukkit.Chunk>>.get(blockLoc.getWorld())", "org.bukkit.Location.getBlockZ()", "org.bukkit.Location.getBlockX()", "org.bukkit.Location.getBlockZ()"], "Fixed commit": "2df4009a17039f454c7601f6ce4cc20322d7622e", "Url": "https://api.github.com/repos/RoboTricker/Transport-Pipes", "Date": "2017-07-24T19:39:46Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.github.apfelcreme.RegionReset.RegionManager.getInstance().resetRegion(org.bukkit.entity.Player,com.sk89q.worldguard.protection.regions.ProtectedRegion)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (backupFile != null) { io.github.apfelcreme.RegionReset.RegionReset.sendMessage(sender, io.github.apfelcreme.RegionReset.RegionResetConfig.getText(\"info.reset.reset\").replace(\"{0}\", regionName).replace(\"{1}\", backupFile.getName())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/6168/buggy-version/src.main.java.io.github.apfelcreme.RegionReset.Commands.ResetCommand.java", "BodyUseAPI": ["java.io.File.getName()", "io.github.apfelcreme.RegionReset.RegionResetConfig.getText(\"info.reset.reset\").replace(\"{0}\", regionName).replace(java.lang.String,java.lang.String)", "io.github.apfelcreme.RegionReset.RegionReset.sendMessage(org.bukkit.entity.Player,io.github.apfelcreme.RegionReset.RegionResetConfig.getText(\"info.reset.reset\").replace(\"{0}\", regionName).replace(\"{1}\", backupFile.getName()))"], "Fixed commit": "c8a73dd9ca5c9c4a3a1b12ebe1190782859951a6", "Url": "https://api.github.com/repos/Minebench/RegionReset", "Date": "2017-10-10T15:13:05Z"},
{"Line": "=>534", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mNotificationManager) != null) { mNotificationManager.cancelAll(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/1342/buggy-version/app.src.main.java.com.hyphenate.chatuidemo.call.VoiceCallActivity.java", "BodyUseAPI": [], "Fixed commit": "33f9ab136a2157389c2de737612c3f77a8e5dd4d", "Url": "https://api.github.com/repos/eastrain/Hyphenate-Demo-Android", "Date": "2016-11-23T08:43:37Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value == null) { throw new java.lang.NullPointerException(\"The id value is null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/3136/buggy-version/src.main.java.com.avaje.ebeaninternal.server.expression.DefaultExpressionFactory.java", "BodyUseAPI": [], "Fixed commit": "21a71c3a4f5e6afab41dd8535601a913675d4839", "Url": "https://api.github.com/repos/andersha/avaje-ebeanorm", "Date": "2014-01-16T08:10:13Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (result.getCode().equals(ResultCode.INVALID_CHARACTER_IN_NAME)) { message = res.getString(R.string.filename_forbidden_characters); }else if ((result.getCode()) == (com.owncloud.android.lib.common.operations.RemoteOperationResult.ResultCode.INVALID_CHARACTER_DETECT_IN_SERVER)) { message = res.getString(R.string.filename_forbidden_charaters_from_server); }else if ((result.getCode()) == (com.owncloud.android.lib.common.operations.RemoteOperationResult.ResultCode.FILE_NOT_FOUND)) { message = res.getString(R.string.rename_server_fail_msg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/8514/buggy-version/src.com.owncloud.android.ui.errorhandling.ErrorMessageAdapter.java", "BodyUseAPI": ["com.owncloud.android.lib.common.operations.RemoteOperationResult.getCode()", "com.owncloud.android.lib.common.operations.RemoteOperationResult.getCode()"], "Fixed commit": "607b8d2d2077c6c450ce70729a5ccf6752cf8e6d", "Url": "https://api.github.com/repos/owncloud/android", "Date": "2017-03-07T08:22:40Z"},
{"Line": "=>429", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (invalidInt) { coursesPlanned = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/338/buggy-version/src.FrontEnd.java", "BodyUseAPI": [], "Fixed commit": "73a0e3e69556819669fad08412b5a3e686b0cd17", "Url": "https://api.github.com/repos/aza2105/CourseScheduler", "Date": "2014-06-26T22:26:07Z"},
{"Line": "=>411", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((java.lang.Integer.parseInt(dataLine[i])) < 0) || ((java.lang.Integer.parseInt(dataLine[i])) > 10)) { invalidInt = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/338/buggy-version/src.FrontEnd.java", "BodyUseAPI": [], "Fixed commit": "73a0e3e69556819669fad08412b5a3e686b0cd17", "Url": "https://api.github.com/repos/aza2105/CourseScheduler", "Date": "2014-06-26T22:26:07Z"},
{"Line": "=>710", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((clazz == (java.lang.String.class)) && (map instanceof com.alibaba.fastjson.JSONObject)) { return ((T) (map.toString())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/2705/buggy-version/src.main.java.com.alibaba.fastjson.util.TypeUtils.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.toString()"], "Fixed commit": "c8fb449c800c29875e202dd948fd4dfafe3e8942", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2017-05-02T13:16:26Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["thomasmarkus.nl.freenet.graphdb.H2Graph.getVertexProperties(java.lang.Long)", "freenet.support.SimpleFieldSet.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (props.containsKey(propertyName)) sfsReply.putSingle(\"Property\", props.get(propertyName).get(0));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/1517/buggy-version/src.plugins.WebOfTrust.FCPInterface.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.util.List<java.lang.String>>.get(java.lang.String)", "freenet.support.SimpleFieldSet.putSingle(java.lang.String,java.lang.String)", "java.util.List<java.lang.String>.get(int)"], "Fixed commit": "88a3eaa3da93c22dc645a91c2c0fb98c38df9ed6", "Url": "https://api.github.com/repos/tmarkus/LessCrappyWebOfTrust", "Date": "2012-04-19T10:08:43Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((grantResults.length) <= 0) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/2198/buggy-version/app.src.main.java.com.airsaid.mpermissionutils.MPermissionUtils.java", "BodyUseAPI": [], "Fixed commit": "e06edc7507701aec80d513939e58853aa552775e", "Url": "https://api.github.com/repos/Airsaid/MPermissionUtils", "Date": "2017-06-07T14:32:42Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getINSU_FLAGE().length) == 2) { if (\"2\".equals(getINSU_FLAGE()[1])) { return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/2148/buggy-version/src.main.java.net.biz.hr.vo.LabourQueryParam.java", "BodyUseAPI": [], "Fixed commit": "afc9a550b450c32c178c95ed365fbd9ff9d1467f", "Url": "https://api.github.com/repos/neuqik/jlxt", "Date": "2013-03-04T01:51:07Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getINSU_FLAGE().length) == 1) { if (\"2\".equals(getINSU_FLAGE()[0])) { return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/2148/buggy-version/src.main.java.net.biz.hr.vo.LabourQueryParam.java", "BodyUseAPI": [], "Fixed commit": "afc9a550b450c32c178c95ed365fbd9ff9d1467f", "Url": "https://api.github.com/repos/neuqik/jlxt", "Date": "2013-03-04T01:51:07Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((name) != null) && ((version) != null)) { double browserVersion = java.lang.Double.parseDouble(version); if (((\"Mozilla\".equals(name)) && (browserVersion < 10)) || ((\"IE\".equals(name)) && (browserVersion < 10))) { return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/3544/buggy-version/central.plugins.org.jboss.tools.central.src.org.jboss.tools.central.internal.browser.VersionedBrowser.java", "BodyUseAPI": [], "Fixed commit": "8d761d0ae0e18a4b3a9c2a3011b53c6e8ab70a2d", "Url": "https://api.github.com/repos/ibuziuk/jbosstools-central", "Date": "2016-07-26T11:01:06Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.duke.cs.osprey.ematrix.EnergyMatrix.getPairwise(int,int,int,int)", "edu.duke.cs.osprey.astar.conf.scoring.mplp.MessageVars.get(int,int,int)", "edu.duke.cs.osprey.astar.conf.scoring.mplp.MessageVars.getEnergy(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((java.lang.Double.isFinite(theta)) && (java.lang.Double.isFinite(gamma1))) && (java.lang.Double.isFinite(gamma2))) { minVal = java.lang.Math.min(minVal, ((theta + ((2 * gamma1) / (confIndex.getNumUndefined()))) - gamma2)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/6967/buggy-version/src.edu.duke.cs.osprey.astar.conf.scoring.mplp.NodeUpdater.java", "BodyUseAPI": ["java.lang.Math.min(double,((theta + ((2 * gamma1) / (confIndex.getNumUndefined()))) - gamma2))"], "Fixed commit": "953d69cf8e384f244a3c70d165c8c2bdd1227a7c", "Url": "https://api.github.com/repos/donaldlab/OSPREY3", "Date": "2017-03-15T22:57:04Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((hasPreferencePane) == true) { final edu.wpi.cs.wpisuitetng.modules.planningpoker.view.PreferencesPanel userPreferences = new edu.wpi.cs.wpisuitetng.modules.planningpoker.view.PreferencesPanel(btnClose); myCloseActionHandler = new edu.wpi.cs.wpisuitetng.modules.planningpoker.view.MainView.MyCloseActionHandler(\"User Preferences\", j, this, userPreferences, 4); add(userPreferences, open); hasPreferencePane = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/29/buggy-version/PlanningPoker.src.edu.wpi.cs.wpisuitetng.modules.planningpoker.view.MainView.java", "BodyUseAPI": [], "Fixed commit": "b990397e0dc3b5302368b3d5c247d5f7d47d5781", "Url": "https://api.github.com/repos/pelferina/wpi-suite", "Date": "2014-04-22T01:22:59Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.inavr.bluetoothlibrary.BlueStateObserver.getInstance()) != null) com.inavr.bluetoothlibrary.BlueStateObserver.getInstance().destroy();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/7127/buggy-version/BluetoothLibrary.src.main.java.com.inavr.bluetoothlibrary.BluetoothSDKImpl.java", "BodyUseAPI": [], "Fixed commit": "40739c85a04bbd3ebe40537c8fdce4fea8c451b1", "Url": "https://api.github.com/repos/coutliuxing/bluetoothlibrary", "Date": "2017-04-07T08:35:09Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((request.getCui()) != null) && (request.getCui().isEmpty())) { if (((dbUser.getFkPersona()) == null) || (!(dbUser.getFkPersona().getCui().equals(request.getCui())))) { dbUser.setFkPersona(personas.findOne(request.getCui())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/8356/buggy-version/MS_RRHH_Servicios.src.main.java.gt.org.isis.controller.usuarios.handlers.ModificarUsHandler.java", "BodyUseAPI": ["dbUser.getFkPersona().getCui().equals(request.getCui())", "gt.org.isis.model.Usuario.setFkPersona(personas.findOne(request.getCui()))", "gt.org.isis.repository.PersonasRepository.findOne(request.getCui())", "gt.org.isis.controller.dto.UsuarioDto.getCui()", "gt.org.isis.controller.dto.UsuarioDto.getCui()"], "Fixed commit": "64642abf850e60047ad70c7f1f780f2f2e389fed", "Url": "https://api.github.com/repos/eliudiaz/StripesTest", "Date": "2016-11-17T14:00:59Z"},
{"Line": "=>342", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.activateCondensedTool) != (other.activateCondensedTool)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/7457/buggy-version/main.plugins.org.talend.designer.mapper.src.main.java.org.talend.designer.mapper.model.emf.mapper.impl.AbstractInOutTableImpl.java", "BodyUseAPI": [], "Fixed commit": "d9da03b602c7ece0194f90c60cd2612f1052f99a", "Url": "https://api.github.com/repos/Talend/tdi-studio-se", "Date": "2017-05-24T06:14:32Z"},
{"Line": "=>350", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.expressionFilter) == null) { if ((other.expressionFilter) != null) { return false; } }else if (!(this.expressionFilter.equals(other.expressionFilter))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/7457/buggy-version/main.plugins.org.talend.designer.mapper.src.main.java.org.talend.designer.mapper.model.emf.mapper.impl.AbstractInOutTableImpl.java", "BodyUseAPI": [], "Fixed commit": "d9da03b602c7ece0194f90c60cd2612f1052f99a", "Url": "https://api.github.com/repos/Talend/tdi-studio-se", "Date": "2017-05-24T06:14:32Z"},
{"Line": "=>346", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.activateExpressionFilter) != (other.activateExpressionFilter)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/7457/buggy-version/main.plugins.org.talend.designer.mapper.src.main.java.org.talend.designer.mapper.model.emf.mapper.impl.AbstractInOutTableImpl.java", "BodyUseAPI": [], "Fixed commit": "d9da03b602c7ece0194f90c60cd2612f1052f99a", "Url": "https://api.github.com/repos/Talend/tdi-studio-se", "Date": "2017-05-24T06:14:32Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (android.content.org.ei.drishti.Context.getInstance().IsUserLoggedOut()) { logInfo(\"Not updating from server as user is not logged in.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/7718/buggy-version/dristhi-app.src.main.java.org.ei.drishti.sync.UpdateActionsTask.java", "BodyUseAPI": [], "Fixed commit": "c8f14570768837bc3f9e1d6fe1b8b497fcf05893", "Url": "https://api.github.com/repos/modilabs/drishti-app", "Date": "2013-03-07T06:43:03Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (putScore) { scoreWriter.flush(); scoreWriter.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/8986/buggy-version/src.SemiSupervisedPOSTagger.Tagging.Tagger.java", "BodyUseAPI": [], "Fixed commit": "7ba71d417b67c3ef81744dce0188ca2ec1185f79", "Url": "https://api.github.com/repos/rasoolims/SemiSupervisedPosTagger", "Date": "2015-03-20T04:55:18Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (putScore) { scoreWriter.flush(); scoreWriter.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/8986/buggy-version/src.SemiSupervisedPOSTagger.Tagging.Tagger.java", "BodyUseAPI": [], "Fixed commit": "7ba71d417b67c3ef81744dce0188ca2ec1185f79", "Url": "https://api.github.com/repos/rasoolims/SemiSupervisedPosTagger", "Date": "2015-03-20T04:55:18Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ce == null) { return java.util.Collections.emptyList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/4301/buggy-version/src.main.java.org.olat.catalog.CatalogManager.java", "BodyUseAPI": [], "Fixed commit": "80e38ecf32c1451f65beac111f0a19af4bf43e75", "Url": "https://api.github.com/repos/klemens/openolat", "Date": "2013-07-17T10:14:27Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (book != null) bookLang = Settings.BookSettings.getSavedBook(book).lang; else bookLang = org.sefaria.sefaria.Settings.getDefaultTextLang();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/6719/buggy-version/app.src.main.java.org.sefaria.sefaria.activities.TOCActivity.java", "BodyUseAPI": ["Settings.BookSettings.getSavedBook(org.sefaria.sefaria.database.Book)"], "Fixed commit": "eb1d9a1a861f55488d9ed6283aec0530e349a708", "Url": "https://api.github.com/repos/Sefaria/Sefaria-Android", "Date": "2016-06-07T15:53:52Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((org.sefaria.sefaria.Settings.getIsCts()) && (bookLang != (Util.Lang.BI))) && (book != null)) && (org.sefaria.sefaria.activities.SuperTextActivity.canBeCts(book))) { intent = new android.content.Intent(context, org.sefaria.sefaria.activities.TextActivity.class); }else { intent = new android.content.Intent(context, org.sefaria.sefaria.activities.SectionActivity.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/6719/buggy-version/app.src.main.java.org.sefaria.sefaria.activities.TOCActivity.java", "BodyUseAPI": [], "Fixed commit": "eb1d9a1a861f55488d9ed6283aec0530e349a708", "Url": "https://api.github.com/repos/Sefaria/Sefaria-Android", "Date": "2016-06-07T15:53:52Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == ptr) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/7063/buggy-version/src.edu.pitt.isp.sverchkov.data.ADTreeHelper.java", "BodyUseAPI": [], "Fixed commit": "ba58adb85bf7da8dd3cafc8d2f0df42f3a160d3b", "Url": "https://api.github.com/repos/sverchkov/java-bn-library", "Date": "2013-05-31T23:58:48Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (compTime == 0) { compTime = (java.lang.System.currentTimeMillis()) - (theListener.startTimeReal); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/7745/buggy-version/problem.src.main.java.rinde.sim.problem.common.StatsTracker.java", "BodyUseAPI": [], "Fixed commit": "09fe69a5fa1ce777a5e7998f0ef0f87291217ff1", "Url": "https://api.github.com/repos/rinde/RinSim", "Date": "2012-12-17T13:27:45Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ignore_elements) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/4083/buggy-version/src.com.juanvvc.fschecklistreader.XMLChecklistHandler.java", "BodyUseAPI": [], "Fixed commit": "1cea93fc5feeb7197639e42bbba9677479e58bdf", "Url": "https://api.github.com/repos/Juanvvc/FSChecklistReader", "Date": "2014-02-22T00:49:46Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ignore_elements) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/4083/buggy-version/src.com.juanvvc.fschecklistreader.XMLChecklistHandler.java", "BodyUseAPI": [], "Fixed commit": "1cea93fc5feeb7197639e42bbba9677479e58bdf", "Url": "https://api.github.com/repos/Juanvvc/FSChecklistReader", "Date": "2014-02-22T00:49:46Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((qName.equals(\"condition\")) || (qName.equals(\"binding\"))) || (qName.equals(\"marker\"))) { ignore_elements = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/4083/buggy-version/src.com.juanvvc.fschecklistreader.XMLChecklistHandler.java", "BodyUseAPI": [], "Fixed commit": "1cea93fc5feeb7197639e42bbba9677479e58bdf", "Url": "https://api.github.com/repos/Juanvvc/FSChecklistReader", "Date": "2014-02-22T00:49:46Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((qName.equals(\"condition\")) || (qName.equals(\"binding\"))) || (qName.equals(\"marker\"))) { ignore_elements = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/4083/buggy-version/src.com.juanvvc.fschecklistreader.XMLChecklistHandler.java", "BodyUseAPI": [], "Fixed commit": "1cea93fc5feeb7197639e42bbba9677479e58bdf", "Url": "https://api.github.com/repos/Juanvvc/FSChecklistReader", "Date": "2014-02-22T00:49:46Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dest.isDirectory()) { dest = new java.io.File(dest, src.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/7849/buggy-version/hutool-core.src.main.java.com.PATHoleilu.hutool.io.file.FileCopier.java", "BodyUseAPI": [], "Fixed commit": "0c871056268c592ebb78dba7c158e29c748da481", "Url": "https://api.github.com/repos/looly/hutool", "Date": "2017-12-23T02:18:59Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (group1.getGroupStudentsSet().isEmpty()) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/8680/buggy-version/src.main.java.net.sourceforge.fenixedu.domain.finalDegreeWork.FinalDegreeWorkGroup.java", "BodyUseAPI": [], "Fixed commit": "cee12c419fefdea696dd9e2c8a770b648ce3dbf3", "Url": "https://api.github.com/repos/jcarvalho/fenix", "Date": "2013-07-31T17:12:39Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (group2.getGroupStudentsSet().isEmpty()) { return 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/8680/buggy-version/src.main.java.net.sourceforge.fenixedu.domain.finalDegreeWork.FinalDegreeWorkGroup.java", "BodyUseAPI": [], "Fixed commit": "cee12c419fefdea696dd9e2c8a770b648ce3dbf3", "Url": "https://api.github.com/repos/jcarvalho/fenix", "Date": "2013-07-31T17:12:39Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (s == 1) { return new com.github.android.downloader.bean.DownloadInfo[]{ new com.github.android.downloader.bean.DownloadInfo(dFile, 0, com.github.android.downloader.bean.DownloadInfo.RANGE_NONE) }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/6865/buggy-version/app.src.main.java.com.github.android.downloader.net.HttpDownAnalysis.java", "BodyUseAPI": [], "Fixed commit": "a7a696631d17964021d078f4cc8a1a492edf5ba6", "Url": "https://api.github.com/repos/8enet/libdownloadmanager", "Date": "2015-01-31T16:44:08Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (args != null) { jsonArgs = new java.lang.String[args.length]; for (int i = 0; i < (args.length); i++) { jsonArgs[i] = java.net.URLEncoder.encode(rxf.server.BlobAntiPatternObject.GSON.toJson(args[i]), \"UTF-8\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/37/buggy-version/rxf-server.src.main.java.rxf.server.CouchServiceFactory.java", "BodyUseAPI": ["java.net.URLEncoder.encode(rxf.server.BlobAntiPatternObject.GSON.toJson(args[i]),java.lang.String)", "rxf.server.BlobAntiPatternObject.GSON.toJson(java.lang.Object)"], "Fixed commit": "70f91f76bc8decde7c7a014124b233bcb6a1e6e0", "Url": "https://api.github.com/repos/niloc132/RelaxFactory", "Date": "2012-06-28T04:33:23Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(botSettings.getKnownLiveFeeds().contains(id.toLowerCase()))) { botSettings.getKnownLiveFeeds().add(id.toLowerCase()); saveConfig(\"config.json\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/2965/buggy-version/src.main.java.me.stuntguy3000.java.redditlivebot.handler.ConfigHandler.java", "BodyUseAPI": ["botSettings.getKnownLiveFeeds().add(java.lang.String)", "me.stuntguy3000.java.redditlivebot.object.config.BotSettings.getKnownLiveFeeds()", "java.lang.String.toLowerCase()"], "Fixed commit": "0c48efd79533e1b42c8a38228f480d483cfbaa19", "Url": "https://api.github.com/repos/stuntguy3000/RedditLiveBot", "Date": "2016-04-06T00:00:25Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.itemHolder) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/5231/buggy-version/core.src.org.egordorichev.lasttry.ui.UiItemSlot.java", "BodyUseAPI": [], "Fixed commit": "2c3035bbfcde318c7ea3bbed1a092dbd8c21bf77", "Url": "https://api.github.com/repos/LastTryR/LastTry", "Date": "2017-04-05T11:56:00Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.motechproject.tama.dailypillreminder.service.DosageTimeLine.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((allDosageAdherenceLogs.findByDosageIdAndDate(dose.getDosageId(), dose.getDate())) == null) { allDosageAdherenceLogs.add(dosageAdherenceLog); pillReminderService.setLastCapturedDate(pillRegimen.getId(), dose.getDosageId(), dose.getDate()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/1385/buggy-version/tama.dailypillreminder.src.main.java.org.motechproject.tama.dailypillreminder.service.DailyPillReminderAdherenceService.java", "BodyUseAPI": ["org.motechproject.tama.dailypillreminder.repository.AllDosageAdherenceLogs.add(org.motechproject.tama.dailypillreminder.service.DosageAdherenceLog)", "org.motechproject.tama.dailypillreminder.service.Dose.getDate()", "org.motechproject.tama.dailypillreminder.service.Dose.getDosageId()", "org.motechproject.tama.dailypillreminder.service.TAMAPillReminderService.setLastCapturedDate(pillRegimen.getId(),dose.getDosageId(),dose.getDate())"], "Fixed commit": "f19b07d573935e63657708aa5c1ae04b169071a7", "Url": "https://api.github.com/repos/motech/TAMA-Web", "Date": "2011-12-19T05:54:12Z"},
{"Line": "=>1426", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<java.lang.String>.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((size < 1) || (size > 2)) { return dateStr; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/601/buggy-version/hutool-core.src.main.java.com.PATHoleilu.hutool.date.DateUtil.java", "BodyUseAPI": [], "Fixed commit": "06f70c805324dc521b0f709e19d63510b6281388", "Url": "https://api.github.com/repos/looly/hutool", "Date": "2017-12-08T02:07:17Z"},
{"Line": "=>1439", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<java.lang.String>.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (size == 2) { builder.append(' '); java.lang.String timePart = dateAndTime.get(1).replaceAll(\"[\u65f6\u5206\u79d2]\", \":\"); timePart = com.PATHoleilu.hutool.util.StrUtil.removeSuffix(timePart, \":\"); builder.append(timePart); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/601/buggy-version/hutool-core.src.main.java.com.PATHoleilu.hutool.date.DateUtil.java", "BodyUseAPI": [], "Fixed commit": "06f70c805324dc521b0f709e19d63510b6281388", "Url": "https://api.github.com/repos/looly/hutool", "Date": "2017-12-08T02:07:17Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isMarkedSerializable(history))) { if (type == (TransactionType.READONLY_TRANSACTION)) return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/8611/buggy-version/src.fr.inria.jessy.protocol.SPSI_PDV_GC.java", "BodyUseAPI": [], "Fixed commit": "ab6210803ce249876f1252f9b05489c3b2e2ec07", "Url": "https://api.github.com/repos/mneri/jessy", "Date": "2016-03-07T17:18:06Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.StringBuilder.toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (sqlWhereString.equals(\" WHERE \")) { sqlWhereString = \"\"; }else { sqlWhereString = sqlWhereString.substring(0, sqlWhereString.lastIndexOf(\"AND\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/2037/buggy-version/shaman-core.src.main.java.org.shaman.dao.SQLBuilder.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.lastIndexOf(java.lang.String)"], "Fixed commit": "8236f7b6a279f1b1e8430a8a9677ed189bf58c20", "Url": "https://api.github.com/repos/fenglei0213/shaman", "Date": "2016-12-28T08:21:57Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tachyon.client.TachyonFS.getFileStatus(int,tachyon.TachyonURI)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (newFileInfo.isFolder) { mFiles = mTFS.listStatus(mListenUri); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/5434/buggy-version/core.src.main.java.tachyon.client.FileEventsTracker.java", "BodyUseAPI": [], "Fixed commit": "8c691c3249a5ac5e3f164cd0d10ac2662c32af36", "Url": "https://api.github.com/repos/qadahtm/tachyon", "Date": "2015-05-10T03:31:35Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((mFileInfo) != null) { mFiles = mTFS.listStatus(mListenUri); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/5434/buggy-version/core.src.main.java.tachyon.client.FileEventsTracker.java", "BodyUseAPI": [], "Fixed commit": "8c691c3249a5ac5e3f164cd0d10ac2662c32af36", "Url": "https://api.github.com/repos/qadahtm/tachyon", "Date": "2015-05-10T03:31:35Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((game.Grid.getCell(x, z)) == null) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/4031/buggy-version/src.objects.BuildPreview.java", "BodyUseAPI": [], "Fixed commit": "2c82fbcfdf51ca89f6ed112a8102a593eb7e5983", "Url": "https://api.github.com/repos/ForceField-IndieGames/marscity", "Date": "2013-05-26T20:23:44Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (net.h31ix.anticheat.manage.CheckManager.checkIgnoreList.contains(type)) { manager.log(((\"The \" + (type.toString())) + \" check was activated.\")); net.h31ix.anticheat.manage.CheckManager.checkIgnoreList.remove(type); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/3912/buggy-version/src.main.java.net.h31ix.anticheat.manage.CheckManager.java", "BodyUseAPI": ["java.util.List<net.h31ix.anticheat.manage.CheckType>.remove(net.h31ix.anticheat.manage.CheckType)", "net.h31ix.anticheat.manage.AnticheatManager.log(((\"The \" + (type.toString())) + \" check was activated.\"))", "net.h31ix.anticheat.manage.CheckType.toString()"], "Fixed commit": "82da97775f879aa68f184462b86defa3b64d8a8e", "Url": "https://api.github.com/repos/h31ix/AntiCheat", "Date": "2012-05-22T01:45:17Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((presenter) == null) this.presenter = new task.application.com.moviefinder.ui.itemdetail.SearchItemDetailPresenter(fragment);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/1001/buggy-version/app.src.main.java.task.application.com.moviefinder.ui.itemdetail.SearchItemDetailActivity.java", "BodyUseAPI": [], "Fixed commit": "3c5f709f83486f092274b62eb0787b6f3934d279", "Url": "https://api.github.com/repos/shivamsriva31093/MovieFinder", "Date": "2017-06-11T19:48:53Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((serversData.length) > 0) for (int i = 0; i < (tokens.length); i += 4) { serversData[(i / 4)][0] = tokens[i]; serversData[(i / 4)][1] = java.lang.Integer.parseInt(tokens[(i + 3)]); serversData[(i / 4)][2] = 0; servers.add(new CentralServer.ServerInfo(tokens[i], tokens[(i + 1)], java.lang.Integer.parseInt(tokens[(i + 2)]), java.lang.Integer.parseInt(tokens[(i + 3)]))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/2243/buggy-version/Source.Client.ClientServerSelection.java", "BodyUseAPI": [], "Fixed commit": "f8261af9360159c5f362faa4e0a2417b194ef1fe", "Url": "https://api.github.com/repos/Williamxu98/WorldQuestOnline", "Date": "2016-12-13T06:09:12Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (tqItemInfo != null) { mOnItemClickListener.onItemClicked(tqItemInfo); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/487/buggy-version/autorendereradapter.src.main.java.com.zuluft.autoadapter.listeners.ItemOnClickObserver.java", "BodyUseAPI": ["com.zuluft.autoadapter.listeners.OnItemClickListener<T, Q>.onItemClicked(com.zuluft.autoadapter.listeners.ItemInfo<T, Q>)"], "Fixed commit": "f77d5a65d31891b4de64dd2ff0e372b270b74d16", "Url": "https://api.github.com/repos/Zuluft/AutoAdapter", "Date": "2017-03-13T07:54:14Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (p instanceof javafx.scene.control.TextField) { if ((att.vtype) == (org.mavlink.messages.MAV_PARAM_TYPE.MAV_PARAM_TYPE_INT32)) ((javafx.scene.control.TextField) (p)).setText(java.lang.String.valueOf(((int) (v)))); else { java.math.BigDecimal bd = new java.math.BigDecimal(v).setScale(att.decimals, java.math.BigDecimal.ROUND_HALF_UP); ((javafx.scene.control.TextField) (p)).setText(bd.toPlainString()); } if (v == (att.default_val)) p.setStyle(\"-fx-text-fill: #F0F0F0;\"); else p.setStyle(\"-fx-text-fill: #F0D080;\"); }else { ((javafx.scene.control.Spinner<java.lang.Double>) (p)).getValueFactory().setValue(new java.lang.Double(v)); if (v == (att.default_val)) ((javafx.scene.control.Spinner<java.lang.Double>) (p)).getEditor().setStyle(\"-fx-text-fill: #F0F0F0;\"); else ((javafx.scene.control.Spinner<java.lang.Double>) (p)).getEditor().setStyle(\"-fx-text-fill: #F0D080;\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/8711/buggy-version/MAVGCL.src.com.comino.flight.widgets.tuning.TuningWidget.java", "BodyUseAPI": ["javafx.scene.control.Control.setStyle(java.lang.String)", "javafx.scene.control.Control.setStyle(java.lang.String)"], "Fixed commit": "aa37f7741c46f723b69602df9c9a82a20805cb76", "Url": "https://api.github.com/repos/ecmnet/MAVGCL", "Date": "2016-06-20T05:58:40Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (other == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/4918/buggy-version/dcm4che-core.src.main.java.org.dcm4che3.data.IDWithIssuer.java", "BodyUseAPI": [], "Fixed commit": "d79b31a34af1356fefc83037d927b321b099991a", "Url": "https://api.github.com/repos/dcm4che/dcm4che", "Date": "2016-05-20T13:10:01Z"},
{"Line": "=>2943", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.silverpeas.util.StringUtil.isDefined(query)) { globalClusters = clusteringEngine.process(results, query); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/1324/buggy-version/war-core.src.main.java.com.stratelia.silverpeas.pdcPeas.control.PdcSearchSessionController.java", "BodyUseAPI": ["org.silverpeas.search.ClusteringEngine.process(java.util.List<com.stratelia.silverpeas.pdcPeas.model.GlobalSilverResult>,java.lang.String)"], "Fixed commit": "51df718fb0919da21df37a0b16adc2ccc9f83413", "Url": "https://api.github.com/repos/mmoqui/Silverpeas-Core", "Date": "2012-10-11T14:35:39Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.aspectj.lang.ProceedingJoinPoint.proceed()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (result != null) { args.put(\"result\", result); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/7683/buggy-version/rultor-spi.src.main.java.com.rultor.snapshot.StepAspect.java", "BodyUseAPI": ["args.put(java.lang.String,java.lang.Object)"], "Fixed commit": "cc4fd115a97b3576207cfcbdf189cb1a0aff2474", "Url": "https://api.github.com/repos/rultor/rultor", "Date": "2013-08-04T17:24:11Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.insertContact) { new com.maohi.software.maohifx.contact.dao.ContactDAO().insert(iElement.getContact()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/4747/buggy-version/maohifx.contact.src.main.java.com.maohi.software.maohifx.server.webapi.SupplierService.java", "BodyUseAPI": [], "Fixed commit": "43704e8602502df078bc905928e82a946fb6f3fc", "Url": "https://api.github.com/repos/Heifara/maohifx", "Date": "2016-01-08T08:45:27Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (iterationType == (IterationType.KEY)) { result = (comparable1.hashCode()) - (comparable2.hashCode()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/8665/buggy-version/hazelcast.src.main.java.com.hazelcast.util.SortingUtil.java", "BodyUseAPI": [], "Fixed commit": "a6e002babb3d2a8f6d9f7236f2fb335ed95a4ef2", "Url": "https://api.github.com/repos/mdogan/hazelcast", "Date": "2014-08-20T12:44:08Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((((\"\".equals(startDate.getDate())) && (!(\"\".equals(startTime.getTime())))) && (\"\".equals(endDate.getDate()))) && (\"\".equals(endTime.getTime()))) | ((((\"\".equals(startDate.getDate())) && (\"\".equals(startTime.getTime()))) && (\"\".equals(endDate.getDate()))) && (!(\"\".equals(endTime.getTime()))))) throw new seedu.inbx0.commons.exceptions.IllegalValueException(seedu.inbx0.commons.core.Messages.MESSAGE_INVALID_TASK);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/2441/buggy-version/src.main.java.seedu.inbx0.model.task.Task.java", "BodyUseAPI": [], "Fixed commit": "6055ad965fa0aaec6f304d7c95fdf3cb939a0f6a", "Url": "https://api.github.com/repos/CS2103AUG2016-T09-C1/main", "Date": "2016-10-26T14:07:13Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((((\"\".equals(startDate.getDate())) && (!(\"\".equals(startTime.getTime())))) && (\"\".equals(endDate.getDate()))) && (\"\".equals(endTime.getTime()))) | ((((\"\".equals(startDate.getDate())) && (\"\".equals(startTime.getTime()))) && (\"\".equals(endDate.getDate()))) && (!(\"\".equals(endTime.getTime()))))) throw new seedu.inbx0.commons.exceptions.IllegalValueException(seedu.inbx0.commons.core.Messages.MESSAGE_INVALID_TASK);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/2441/buggy-version/src.main.java.seedu.inbx0.model.task.Task.java", "BodyUseAPI": [], "Fixed commit": "6055ad965fa0aaec6f304d7c95fdf3cb939a0f6a", "Url": "https://api.github.com/repos/CS2103AUG2016-T09-C1/main", "Date": "2016-10-26T14:07:13Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((line.indexOf(nameCheckLong1)) != (-1)) { nameString = line.substring(((line.indexOf(nameCheckLong1)) + (nameCheckLong1.length())), line.indexOf(nameCheck2)); }else if ((line.indexOf(timeCheck1)) != (-1)) { timeString = line.substring(((line.indexOf(timeCheck1)) + (timeCheck1.length())), line.indexOf(timeCheck2)); }else if ((line.indexOf(genreCheck1)) != (-1)) { genreString = (genreString + (line.substring(((line.indexOf(genreCheck1)) + (genreCheck1.length())), line.indexOf(genreCheck2)))) + \",\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/2975/buggy-version/WatchList.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.indexOf(java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.String.indexOf(java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.String.substring(int,int)", "java.lang.String.indexOf(java.lang.String)", "java.lang.String.indexOf(java.lang.String)", "java.lang.String.indexOf(java.lang.String)", "java.lang.String.indexOf(java.lang.String)", "java.lang.String.indexOf(java.lang.String)", "java.lang.String.indexOf(java.lang.String)"], "Fixed commit": "2159d775ad3a0dbf336710f7c38aa570361a5b89", "Url": "https://api.github.com/repos/batatop/watchList", "Date": "2016-11-21T10:48:51Z"},
{"Line": "=>468", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.passwordmaker.android.PasswordMakerProForAndroidActivity.getInputPassword()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((masterPassword.length()) >= (org.passwordmaker.android.PasswordMakerProForAndroidActivity.MIN_PASSWORD_LENGTH)) { setVerificationCode(pwm.generateVerificationCode(masterPassword)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/2214/buggy-version/PasswordMakerProForAndroid.src.org.passwordmaker.android.PasswordMakerProForAndroidActivity.java", "BodyUseAPI": ["org.passwordmaker.android.PasswordMakerProForAndroidActivity.setVerificationCode(pwm.generateVerificationCode(masterPassword))", "org.passwordmaker.android.PasswordMaker.generateVerificationCode(java.lang.String)"], "Fixed commit": "dc94b2ffe59f1672070519e72937b039d4a83b6d", "Url": "https://api.github.com/repos/tasermonkey/android-passwordmaker", "Date": "2014-06-29T13:50:58Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((getProxyHost()) != null) && ((getProxyPort()) != null)) && ((getProxyType()) != null)) { return new org.apache.http.HttpHost(getProxyHost(), getProxyPort(), getProxyType()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/4781/buggy-version/vertx.src.main.java.io.vertx.tempmail.TempMailOptions.java", "BodyUseAPI": [], "Fixed commit": "31b955161195d6f89518ac5bdd86ae74d16a9f8c", "Url": "https://api.github.com/repos/flicus/TempMail", "Date": "2016-03-22T10:34:47Z"},
{"Line": "=>373", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.System.currentTimeMillis()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (firstCall && (((java.lang.System.currentTimeMillis()) - startOperation) > 100)) { firstCall = false; painting = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/3322/buggy-version/src.Main.java", "BodyUseAPI": [], "Fixed commit": "061732e17595bb73ad86fbae0eba355f3fa33eb1", "Url": "https://api.github.com/repos/maximusvladimir/Aeda-Adventure", "Date": "2014-08-28T18:17:09Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (pointCount != 0) { newMeans.add(new kmeans.type.Point((xCoord / pointCount), (yCoord / pointCount))); }else { newMeans.add(m); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/1019/buggy-version/lab04.src.kmeans.func.Calcs.java", "BodyUseAPI": ["java.util.ArrayList<kmeans.type.Point>.add(kmeans.type.Point)"], "Fixed commit": "9b81af2b2eaeb68d6f74b7bbbab55b0eadffb0cd", "Url": "https://api.github.com/repos/AdAstraPerAspera/such-distribution", "Date": "2013-12-07T14:37:44Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((newMean.length()) > 0) { newMeans.add(newMean); }else { newMeans.add(m); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/1019/buggy-version/lab04.src.kmeans.func.Calcs.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "9b81af2b2eaeb68d6f74b7bbbab55b0eadffb0cd", "Url": "https://api.github.com/repos/AdAstraPerAspera/such-distribution", "Date": "2013-12-07T14:37:44Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (0 > radian) radian += (java.lang.Math.PI) * 2;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/8714/buggy-version/src.com.rockidog.networkdemo.utils.Graphics.java", "BodyUseAPI": [], "Fixed commit": "157af7fcbd3f22b5116ac9865374d19385d1dc0f", "Url": "https://api.github.com/repos/RockiDog/NetworkDemo", "Date": "2014-09-03T14:08:56Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.twitter.heron.healthmgr.resolver.SpoutScaleUpResolver.buildNewPackingPlan(com.twitter.heron.spi.packing.PackingPlan,java.util.Map<java.lang.String, java.lang.Integer>,TopologyAPI.Topology)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (proposedPlan == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/5610/buggy-version/heron.healthmgr.src.java.com.twitter.heron.healthmgr.resolver.SpoutScaleUpResolver.java", "BodyUseAPI": [], "Fixed commit": "fc7c14d37079a654f5a46d50fda6ca951cf627ed", "Url": "https://api.github.com/repos/ashvina/heron", "Date": "2017-02-22T18:36:06Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (currentCount == (newParallelism)) { com.twitter.heron.healthmgr.resolver.SpoutScaleUpResolver.LOG.info((\"New parallelism is same as current: \" + changeRequests)); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/5610/buggy-version/heron.healthmgr.src.java.com.twitter.heron.healthmgr.resolver.SpoutScaleUpResolver.java", "BodyUseAPI": [], "Fixed commit": "fc7c14d37079a654f5a46d50fda6ca951cf627ed", "Url": "https://api.github.com/repos/ashvina/heron", "Date": "2017-02-22T18:36:06Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((type) == null) { type = org.raml.model.ParamType.STRING; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/2086/buggy-version/src.main.java.org.raml.model.parameter.AbstractParam.java", "BodyUseAPI": [], "Fixed commit": "78b86e9c2255069512a4b092db40fdfb6fce39ea", "Url": "https://api.github.com/repos/raml-org/raml-java-parser", "Date": "2013-11-01T23:24:36Z"},
{"Line": "=>323", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(Expected_Value_type.EXPECTED_TEMPLATE.equals(expectedValue))) { getLocation().reportSemanticError(java.text.MessageFormat.format(org.eclipse.titan.designer.AST.TTCN3.values.Referenced_Value.UNEXPECTEDASSIGNMENT2, ass.getDescription())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/642/buggy-version/org.eclipse.titan.designer.src.org.eclipse.titan.designer.AST.TTCN3.values.Referenced_Value.java", "BodyUseAPI": [], "Fixed commit": "07dc25b29632c8586e6bfe0fafa874c2cc60e0ed", "Url": "https://api.github.com/repos/eclipse/titan.EclipsePlug-ins", "Date": "2017-08-01T11:09:41Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (args[0].equalsIgnoreCase(\"reload\")) { if ((runnable) != null) { sender.sendMessage(((org.bukkit.ChatColor.RED) + \"\u5b9f\u884c\u4e2d\u306e\u30bf\u30a4\u30de\u30fc\u304c\u3042\u308b\u305f\u3081\u3001\u30ea\u30ed\u30fc\u30c9\u3067\u304d\u307e\u305b\u3093\uff01\")); sender.sendMessage(((((org.bukkit.ChatColor.RED) + \"\u5148\u306b /\") + label) + \" cancel \u3092\u5b9f\u884c\u3057\u3066\u3001\u30bf\u30a4\u30de\u30fc\u3092\u7d42\u4e86\u3057\u3066\u304f\u3060\u3055\u3044\u3002\")); return true; } reloadConfigData(); sender.sendMessage(((org.bukkit.ChatColor.GRAY) + \"config.yml \u3092\u30ea\u30ed\u30fc\u30c9\u3057\u307e\u3057\u305f\u3002\")); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/7604/buggy-version/src.main.java.com.github.ucchyocean.et.ExpTimer.java", "BodyUseAPI": [], "Fixed commit": "8b3881a6141fe45f959cb89b9aa897d8bcaea870", "Url": "https://api.github.com/repos/ucchyocean/ExpTimer", "Date": "2013-10-06T05:29:54Z"},
{"Line": "=>1209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(getCharset().name().equals(\"UTF-16LE\"))) { bytesPerCharacter = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/8919/buggy-version/src.main.java.com.healthmarketscience.jackcess.impl.ColumnImpl.java", "BodyUseAPI": [], "Fixed commit": "db0a91c937a599b48efa7a41e279641333eb66d7", "Url": "https://api.github.com/repos/gordthompson/jackcess", "Date": "2017-04-02T14:38:30Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sender instanceof org.bukkit.entity.Player) { io.sendConsole(io.translate(\"Command.Save.Saved.Console\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/514/buggy-version/src.main.java.de.germanspacebuild.plugins.fasttravel.commands.SaveCommand.java", "BodyUseAPI": [], "Fixed commit": "a93f2708ceca1c5c7c230e641aefeedf6b4915f3", "Url": "https://api.github.com/repos/oneill011990/FastTravelReborn", "Date": "2016-04-01T17:58:45Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(utils.StringUtils.isEmpty(item.getOrderNumber()))) { core.Application.getOrderLibrary().addItemToOrder(item.getItemId(), item.getOrderNumber()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/3389/buggy-version/Server.src.utils.ItemUtils.java", "BodyUseAPI": ["items.Item.getOrderNumber()", "core.Application.getOrderLibrary().addItemToOrder(item.getItemId(),item.getOrderNumber())", "items.Item.getItemId()"], "Fixed commit": "9941f719734c7962fbb0c05d17712da5c04bdf9c", "Url": "https://api.github.com/repos/FutureTemp/futuretempglass", "Date": "2014-01-07T16:15:40Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(core.Application.getItemLibrary().updateItem(item))) { throw new java.lang.Exception(\"Failed to update item\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/3389/buggy-version/Server.src.utils.ItemUtils.java", "BodyUseAPI": [], "Fixed commit": "9941f719734c7962fbb0c05d17712da5c04bdf9c", "Url": "https://api.github.com/repos/FutureTemp/futuretempglass", "Date": "2014-01-07T16:15:40Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= 21) { setContentView(R.layout.activity_main_v21); }else { setContentView(R.layout.activity_main); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/8931/buggy-version/app.src.main.java.spit.matrix2017.Activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "dda2180fbc52c8b4ebb6ce378e1fc8694aa1f928", "Url": "https://api.github.com/repos/TejasBhitle/Matrix2017", "Date": "2017-01-01T06:30:40Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.techcavern.wavetact.utils.GeneralUtils.getJsonObject(((\"http://api.reddit.com/r/\" + (args[0])) + \"/?limit=25\")).get(\"data\").getAsJsonObject().get(\"children\").getAsJsonArray()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((results.size()) < 1) { com.techcavern.wavetact.utils.IRCUtils.sendError(user, network, channel, \"Search returned no results\", prefix); }else { com.google.gson.JsonObject result = results.get(new java.util.Random().nextInt(((results.size()) - 1))).getAsJsonObject().get(\"data\").getAsJsonObject(); com.techcavern.wavetact.utils.IRCUtils.sendMessage(user, network, channel, (((((result.get(\"title\").getAsString()) + \" by \") + (com.techcavern.wavetact.utils.IRCUtils.noPing(result.get(\"author\").getAsString()))) + \" - \") + (com.techcavern.wavetact.utils.GeneralUtils.shortenURL(result.get(\"url\").getAsString()))), prefix); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/6569/buggy-version/src.main.java.com.techcavern.wavetact.ircCommands.media.Reddit.java", "BodyUseAPI": ["java.util.Random.nextInt(((results.size()) - 1))", "results.get(new java.util.Random().nextInt(((results.size()) - 1))).getAsJsonObject().get(java.lang.String)", "results.get(new java.util.Random().nextInt(((results.size()) - 1))).getAsJsonObject()", "results.get(new java.util.Random().nextInt(((results.size()) - 1))).getAsJsonObject().get(\"data\").getAsJsonObject()", "com.google.gson.JsonArray.size()", "com.google.gson.JsonArray.get(int)"], "Fixed commit": "e3536fb65db3eb30813f02706a4aa3b1ec540b95", "Url": "https://api.github.com/repos/TechCavern/WaveTact", "Date": "2016-02-22T17:18:01Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((sx + (p.getX())) >= 27) || ((sy + (p.getY())) >= 27)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/7575/buggy-version/src.game.map.gen.RoadGenerator.java", "BodyUseAPI": [], "Fixed commit": "7d4e4e969a0688c978775e8d038cccaabb9735a7", "Url": "https://api.github.com/repos/anubiann00b/JourneyOfFear", "Date": "2014-05-15T04:48:42Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<java.lang.String>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(myPrefs.getString(((temp.trim()) + \" (FOLDER)\"), \"\").contains(currentName))) { list.add(temp.trim()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/2669/buggy-version/app.src.main.java.com.kirtan.audionotetaker.MainActivity.java", "BodyUseAPI": ["java.lang.String.trim()", "java.util.ArrayList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "fea8048ca69e25892811b150b61ba83b515fb0d0", "Url": "https://api.github.com/repos/kirtan96/Audio_Notetaker", "Date": "2016-01-14T01:01:37Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<java.lang.String>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(myPrefs.getString(\"myFiles\", \"\").contains(currentName))) { list.add(\"All Notes\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/2669/buggy-version/app.src.main.java.com.kirtan.audionotetaker.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "fea8048ca69e25892811b150b61ba83b515fb0d0", "Url": "https://api.github.com/repos/kirtan96/Audio_Notetaker", "Date": "2016-01-14T01:01:37Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (selection != null) { for (java.lang.String sel : selection) { for (int j = 0; j < (_items.length); ++j) { if (_items[j].equals(sel)) { mSelection[j] = true; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/1834/buggy-version/ParkHere310.app.src.main.java.com.csci310.ParkHere.MultiSelectionSpinner.java", "BodyUseAPI": [], "Fixed commit": "5cfeba31e287c98d9131842ed32be752a640ec58", "Url": "https://api.github.com/repos/curtiszhi/CSCI-310-TeamProject", "Date": "2016-11-01T06:32:36Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.hadoop.conf.Configuration.getInt(GuaguaMapReduceConstants.MAPREDUCE_JOB_MAX_SPLIT_LOCATIONS,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (maxSplits < 100) { maxSplits = 100; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/962/buggy-version/guagua-mapreduce.src.main.java.ml.shifu.guagua.mapreduce.GuaguaMapReduceClient.java", "BodyUseAPI": [], "Fixed commit": "557370c199b966b7e523cf2de94ab39541e6c6df", "Url": "https://api.github.com/repos/ShifuML/guagua", "Date": "2015-07-02T06:08:20Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= 24) { android.content.Context context = cordova.getActivity().getApplicationContext(); path = io.github.pwlin.cordova.plugins.fileopener2.FileProvider.getUriForFile(context, ((cordova.getActivity().getPackageName()) + \".opener.provider\"), file); intent.setDataAndType(path, contentType); intent.setFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION); intent.setFlags(Intent.FLAG_ACTIVITY_NO_HISTORY); java.util.List<android.content.pm.ResolveInfo> infoList = context.getPackageManager().queryIntentActivities(intent, PackageManager.MATCH_DEFAULT_ONLY); for (android.content.pm.ResolveInfo resolveInfo : infoList) { java.lang.String packageName = resolveInfo.activityInfo.packageName; context.grantUriPermission(packageName, path, ((android.content.Intent.FLAG_GRANT_WRITE_URI_PERMISSION) | (android.content.Intent.FLAG_GRANT_READ_URI_PERMISSION))); } }else { intent.setDataAndType(path, contentType); intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/897/buggy-version/src.android.io.github.pwlin.cordova.plugins.fileopener2.FileOpener2.java", "BodyUseAPI": [], "Fixed commit": "70e610e465d774d18a592140a0bbf745f4ee09e3", "Url": "https://api.github.com/repos/pwlin/cordova-plugin-file-opener2", "Date": "2017-01-27T20:01:33Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mDebug) android.util.Log.d(tag, message);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/6105/buggy-version/src.org.durka.hallmonitor.PreferenceFragmentLoader.java", "BodyUseAPI": [], "Fixed commit": "64061fcbff0cfad9dfd4cbe789747fd703c786b5", "Url": "https://api.github.com/repos/durka/HallMonitor", "Date": "2014-01-19T01:26:54Z"},
{"Line": "=>579", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Replication.ChangeEvent.getSource()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((replication.getStatus()) == (Replication.ReplicationStatus.REPLICATION_IDLE)) && (type.equals(\"pull\"))) { pull_percent = 100.0; updateView((type + \"stat('100');\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/7528/buggy-version/Couch.java", "BodyUseAPI": ["org.renpy.android.Couch.updateView(java.lang.String)"], "Fixed commit": "660b7348f7f259e2403492d07181906e7c494360", "Url": "https://api.github.com/repos/hinesmr/mll-android", "Date": "2015-02-21T03:24:06Z"},
{"Line": "=>411", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bsc.jaxrs.JavaMethod.getComment()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (comment != null) { modifiedComment = comment.toString().replace(\"{\", \"&#123;\").replace(\"}\", \"&#125;\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/4106/buggy-version/src.main.java.org.bsc.jaxrs.JAXRSWikiProcessor.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)", "java.lang.String.replace(java.lang.String,java.lang.String)", "java.lang.String.toString()"], "Fixed commit": "863c454ec3730ea99449b5302fe461e130667544", "Url": "https://api.github.com/repos/bsorrentino/maven-annotation-plugin.jaxrs-wiki-processor", "Date": "2016-06-29T13:32:21Z"},
{"Line": "=>341", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (prevType == 4) { ret.add((myType % 4)); if (myType >= 3) { ret.add(3); } return ret; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/6994/buggy-version/src.micropolisj.engine.TrafficSim.java", "BodyUseAPI": [], "Fixed commit": "52fab8bff6b39f7060caa9bd7d3109d12c5ace0a", "Url": "https://api.github.com/repos/Team--Rocket/micropolis-java", "Date": "2014-03-26T16:20:00Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentRoadType) == 3) { java.lang.System.out.println(\"I am a rail!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/6994/buggy-version/src.micropolisj.engine.TrafficSim.java", "BodyUseAPI": [], "Fixed commit": "52fab8bff6b39f7060caa9bd7d3109d12c5ace0a", "Url": "https://api.github.com/repos/Team--Rocket/micropolis-java", "Date": "2014-03-26T16:20:00Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(block.hasType())) && (!(block.hasData()))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/8656/buggy-version/src.main.java.com.bergerkiller.bukkit.tc.signactions.SignActionBlockChanger.java", "BodyUseAPI": [], "Fixed commit": "e2b9825009577332c5fe79e73896f7bdb8741029", "Url": "https://api.github.com/repos/bergerhealer/TrainCarts", "Date": "2017-04-20T17:11:27Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (block.hasData()) { entity.setBlock(type, block.getData()); }else { entity.setBlock(type); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/8656/buggy-version/src.main.java.com.bergerkiller.bukkit.tc.signactions.SignActionBlockChanger.java", "BodyUseAPI": ["com.bergerkiller.bukkit.common.inventory.ItemParser.getData()", "com.bergerkiller.bukkit.common.entity.type.CommonMinecart<?>.setBlock(org.bukkit.Material,block.getData())"], "Fixed commit": "e2b9825009577332c5fe79e73896f7bdb8741029", "Url": "https://api.github.com/repos/bergerhealer/TrainCarts", "Date": "2017-04-20T17:11:27Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i < 0) { i = 26 + i; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/1683/buggy-version/SubstituteCipherLibrary.src.com.soesec.ciphers.Ceaser.java", "BodyUseAPI": [], "Fixed commit": "77cd59fde4641d1c18c8393ca6b8e4f936ec2cc0", "Url": "https://api.github.com/repos/soesec13/SubstituteCipherLibrary", "Date": "2016-08-19T11:57:35Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((inputText.getText().toString()) == \"\") { play.setEnabled(false); }else { java.io.InputStream stream = new java.io.ByteArrayInputStream(inputText.getText().toString().getBytes(\"UTF-8\")); java.io.BufferedReader re = new java.io.BufferedReader(new java.io.InputStreamReader(stream, \"UTF8\")); spritz.clear(); spritz.parseTxt(re); play.setEnabled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/7373/buggy-version/src.cs2114.spritz.SpritzScreen.java", "BodyUseAPI": ["inputText.getText().toString()", "inputText.getText().toString().getBytes(java.lang.String)", "android.widget.EditText.getText()"], "Fixed commit": "b7b4e934cd6d095181a3fc60eebe7050e780b741", "Url": "https://api.github.com/repos/asubowo/Spritz2114", "Date": "2014-04-30T21:58:43Z"},
{"Line": "=>1500", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(new java.io.File(getRootDirectory(), \"config\").exists())) { new java.io.File(getRootDirectory(), \"config\").mkdir(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/580/buggy-version/src.main.java.com.atlauncher.workers.InstanceInstaller.java", "BodyUseAPI": [], "Fixed commit": "8824b64a877ce6c7ec33ea0480a61fe5f4a30784", "Url": "https://api.github.com/repos/UntiltledLauncher/UntitledLauncher", "Date": "2014-11-15T14:13:53Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (fileName != null) { int dotIndex = fileName.lastIndexOf('.'); if (dotIndex != (-1)) { java.lang.String ext = fileName.substring((dotIndex + 1)); if (((\"rdf\".equalsIgnoreCase(ext)) || (\"xml\".equalsIgnoreCase(ext))) || (\"sbol\".equalsIgnoreCase(ext))) { org.jbei.ice.lib.dto.entry.PartData partData = org.jbei.ice.storage.ModelToInfoFactory.getInfo(entry); org.jbei.ice.lib.parsers.sbol.SBOLParser sbolParser = new org.jbei.ice.lib.parsers.sbol.SBOLParser(partData); return sbolParser.parse(inputStream, fileName); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/6584/buggy-version/src.main.java.org.jbei.ice.lib.entry.sequence.PartSequence.java", "BodyUseAPI": ["java.lang.String.lastIndexOf(char)", "java.lang.String.substring(int)", "org.jbei.ice.lib.parsers.sbol.SBOLParser.parse(java.io.InputStream,java.lang.String)"], "Fixed commit": "f7f96e03acf99dd48a065ed7ed71f5a810f4e6b9", "Url": "https://api.github.com/repos/JBEI/ice", "Date": "2016-12-13T22:39:57Z"},
{"Line": "=>307", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(result.isEmpty())) && (org.apache.commons.lang3.StringUtils.equals(\"materiaalit\", result.get(0)))) { result.remove(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/9006/buggy-version/muikku-deus-nex-machina.src.main.java.fi.muikku.plugins.dnm.DeusNexMachinaController.java", "BodyUseAPI": ["java.util.List<java.lang.String>.remove(int)"], "Fixed commit": "f272e927964f9fd03ce21bcbce0e6a8738bacfae", "Url": "https://api.github.com/repos/otavanopisto/muikku", "Date": "2015-05-18T10:18:59Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((action.getEvent().getName()) == null) || (action.getEvent().getName().isEmpty())) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/5347/buggy-version/GeoServer.src.edu.cmu.eventtracker.actionhandler.CreateEventHandler.java", "BodyUseAPI": [], "Fixed commit": "c69ddd2e1f5e438d0710196f58fc70b99aac4f10", "Url": "https://api.github.com/repos/veroborges/distProject3", "Date": "2011-12-07T21:33:22Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["geoContext.getService().getLocatorService().getLocationShardServer(lat, lng).execute(edu.cmu.eventtracker.action.GetEventAction)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (event != null) { events.add(event); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/5347/buggy-version/GeoServer.src.edu.cmu.eventtracker.actionhandler.GetUserEventsHandler.java", "BodyUseAPI": ["java.util.List<edu.cmu.eventtracker.dto.Event>.add(edu.cmu.eventtracker.dto.Event)"], "Fixed commit": "c69ddd2e1f5e438d0710196f58fc70b99aac4f10", "Url": "https://api.github.com/repos/veroborges/distProject3", "Date": "2011-12-07T21:33:22Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.attask.jenkins.templates.BuildWrapperUtils.findBuildWrapper(java.lang.Class,com.attask.jenkins.templates.AbstractProject)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (templateBuildWrapper == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/676/buggy-version/src.main.java.com.attask.jenkins.templates.ImplementationBuildWrapper.java", "BodyUseAPI": [], "Fixed commit": "cd91f9a9fb660d364fbb22cc8a362a53aea8a2c0", "Url": "https://api.github.com/repos/JoelJ/Templating", "Date": "2012-06-26T17:26:07Z"},
{"Line": "=>468", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.eleybourn.bookcatalogue.Fields.Field.getView()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (v != null) { java.lang.String newVal = field.format(s); java.lang.String oldVal = ((v.getText()) == null) ? null : v.getText().toString(); if ((newVal == null) && (oldVal == null)) return; if (((newVal != null) && (oldVal != null)) && (newVal.equals(oldVal))) return; v.setText(newVal); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/1231/buggy-version/src.com.eleybourn.bookcatalogue.Fields.java", "BodyUseAPI": ["android.widget.TextView.getText()", "android.widget.TextView.setText(java.lang.String)", "v.getText().toString()", "android.widget.TextView.getText()"], "Fixed commit": "11c45eb713cfe7945179eb758ba5453e49e0e5a4", "Url": "https://api.github.com/repos/Grunthos/Book-Catalogue", "Date": "2013-03-24T06:37:35Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (type != null) { se.crafted.chrisb.ecoCreature.commons.LoggerUtil.getInstance().debugTrue((\"No reward defined for type: \" + type), source.isEmpty()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/8967/buggy-version/src.main.java.se.crafted.chrisb.ecoCreature.drops.categories.AbstractDropCategory.java", "BodyUseAPI": ["se.crafted.chrisb.ecoCreature.commons.LoggerUtil.getInstance().debugTrue(java.lang.String,source.isEmpty())"], "Fixed commit": "688a9a3ebed4700c0cf02046a9ff73376423fde5", "Url": "https://api.github.com/repos/mung3r/ecoCreature", "Date": "2014-12-22T06:42:30Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.suruga.tabandroid.ItemActivity.ratedIndices) == null) { com.suruga.tabandroid.ItemActivity.ratedIndices = new java.util.HashSet<java.lang.Integer>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/2206/buggy-version/src.com.suruga.tabandroid.ItemActivity.java", "BodyUseAPI": [], "Fixed commit": "e97782b3010ea826ac2d2ba1c74fb512dd828cc0", "Url": "https://api.github.com/repos/kombeneah/suruga_android", "Date": "2014-04-08T04:59:49Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.View.getTag()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (com.suruga.tabandroid.ItemActivity.ratedIndices.contains(itemSelected.getId())) { startActivity(i); }else { if ((g.getDetailViewedItems()) >= 2) { g.setDetailsViewed(true); this.CheckTaskCompletion(); } com.suruga.tabandroid.ItemActivity.ratedIndices.add(itemSelected.getId()); startActivityForResult(i, Globals.SET_RATING_REQUEST); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/2206/buggy-version/src.com.suruga.tabandroid.ItemActivity.java", "BodyUseAPI": ["java.util.Set<java.lang.Integer>.add(itemSelected.getId())", "com.suruga.tabandroid.Item.getId()"], "Fixed commit": "e97782b3010ea826ac2d2ba1c74fb512dd828cc0", "Url": "https://api.github.com/repos/kombeneah/suruga_android", "Date": "2014-04-08T04:59:49Z"},
{"Line": "=>960", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.zkoss.zk.ui.AbstractComponent.getIndexCacheMap()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (indexCacheMap == null) initIndexCacheMap();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/6716/buggy-version/zk.src.org.zkoss.zk.ui.AbstractComponent.java", "BodyUseAPI": [], "Fixed commit": "a75205c0812346ca0bef3f2c932b418b460fc016", "Url": "https://api.github.com/repos/zkoss/zk", "Date": "2014-12-11T07:21:08Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (null != categories) { olmMessageCallback.categories(categories); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/8787/buggy-version/src.main.java.com.khubla.olmreader.olm.OLMFile.java", "BodyUseAPI": ["com.khubla.olmreader.olm.OLMMessageCallback.categories(com.khubla.olmreader.olm.generated.Categories)"], "Fixed commit": "1ee22cdba876c473aeafc535e6f4f1b21eb4096e", "Url": "https://api.github.com/repos/teverett/OLMReader", "Date": "2017-07-28T00:44:16Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((i - lastEndNum) < 5) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/2638/buggy-version/src.com.linpinger.foxbook.FoxMemDBHelper.java", "BodyUseAPI": [], "Fixed commit": "faead47bda14b0b4013caff0abb2de5026672bda", "Url": "https://api.github.com/repos/linpinger/foxbook-android", "Date": "2016-09-08T00:49:39Z"},
{"Line": "=>631", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasEntered) table.exit();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/1694/buggy-version/StructureParser.java", "BodyUseAPI": [], "Fixed commit": "4f77cc2b30e3e2fae53a69304893f6581472b218", "Url": "https://api.github.com/repos/aflock/oop-project", "Date": "2011-12-10T23:08:12Z"},
{"Line": "=>382", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["xtc.tree.GNode.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (parent0.hasName(\"MethodDeclaration\")) { table.enter(parent0.getString(3)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/1694/buggy-version/StructureParser.java", "BodyUseAPI": ["xtc.tree.Node.getString(int)", "xtc.util.SymbolTable.enter(parent0.getString(3))"], "Fixed commit": "4f77cc2b30e3e2fae53a69304893f6581472b218", "Url": "https://api.github.com/repos/aflock/oop-project", "Date": "2011-12-10T23:08:12Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.psi.PsiClass.getConstructors()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (parameterClassHasConstructor(constructors)) { registerAllConstructorInvocations(type, constructors); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/8914/buggy-version/src.main.java.org.axonframework.intellij.ide.plugin.publisher.DefaultEventPublisherProvider.java", "BodyUseAPI": ["org.axonframework.intellij.ide.plugin.publisher.DefaultEventPublisherProvider.1.registerAllConstructorInvocations(com.intellij.psi.PsiType,com.intellij.psi.PsiMethod[])"], "Fixed commit": "e07a2a144d6b585c961bb7297838eb70e8e2d3ba", "Url": "https://api.github.com/repos/AxonFramework/IdeaPlugin", "Date": "2015-02-24T17:51:54Z"},
{"Line": "=>609", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isCancelled())) { processWeatherResult(responseModel); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/5714/buggy-version/app.src.main.java.com.eleks.voiceassistant.voiceassistantpoc.activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "adb51e322ed572a67dca973012c407361e4a94c8", "Url": "https://api.github.com/repos/eleks/VoiceAssistantPoC", "Date": "2015-06-09T18:26:53Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (android.preference.PreferenceManager.getDefaultSharedPreferences(this).getBoolean(\"pref_start_background\", true)) { mGOLThread.pause(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/165/buggy-version/src.com.TeamAmazing.activities.StartMenu.java", "BodyUseAPI": [], "Fixed commit": "a2eb7ce17cace3b6ad69a30ba988cb105c93e0c8", "Url": "https://api.github.com/repos/GavinDBrown/Amazing", "Date": "2014-01-31T22:34:43Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jspxcms.core.fulltext.InfoFulltextService.list(java.lang.Integer[],java.lang.Integer[],<nulltype>,java.util.Date,java.util.Date,java.lang.String[],java.lang.Integer[],java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.Integer,com.jspxcms.common.orm.Limitable,org.springframework.data.domain.Sort)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((list.size()) < offset) { return new java.util.ArrayList<com.jspxcms.core.domain.Info>(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/4267/buggy-version/src.main.java.com.jspxcms.core.web.fore.AjaxPageController.java", "BodyUseAPI": [], "Fixed commit": "847b83fc14976c34660bcfa8f7fa45b794e16419", "Url": "https://api.github.com/repos/xabaohui/dkedu", "Date": "2016-05-27T09:47:51Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mekanism.common.util.CableUtils.isCable(tile)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/5216/buggy-version/src.main.java.mekanism.common.util.CableUtils.java", "BodyUseAPI": [], "Fixed commit": "d73eed28657b9fbdeb4655c76415ddaed2782dd3", "Url": "https://api.github.com/repos/TehStoneMan/Mekanism", "Date": "2015-04-11T23:09:35Z"},
{"Line": "=>883", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.photon.phresco.framework.actions.applications.ADD_CONFIG.equals(getFromPage())) || (com.photon.phresco.framework.actions.applications.EDIT_CONFIG.equals(getFromPage()))) { com.photon.phresco.commons.model.Technology technology = getServiceManager().getTechnology(getTechId()); setReqAttribute(com.photon.phresco.framework.actions.applications.REQ_TECH_OPTIONS, technology.getOptions()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/4843/buggy-version/phresco-framework-web.src.main.java.com.photon.phresco.framework.actions.applications.Configurations.java", "BodyUseAPI": [], "Fixed commit": "78df59b3a8b4bd91d7abbd1f8a1c846969d847c7", "Url": "https://api.github.com/repos/phresco/framework", "Date": "2013-02-05T13:32:01Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Money.econ.getBalance(event.getPlayer())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (balance > 0) { Money.econ.withdrawPlayer(event.getPlayer(), balance); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/607/buggy-version/MysqlEconomyBridge.src.net.craftersland.games.money.PlayerListener.java", "BodyUseAPI": ["Money.econ.withdrawPlayer(event.getPlayer(),java.lang.Double)"], "Fixed commit": "a77c02fdad8a8c906231321655c6fe746c21f321", "Url": "https://api.github.com/repos/brunyman/MysqlEconomyBridge", "Date": "2015-05-20T11:02:23Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((worldObj) != null) { worldObj.markBlockForUpdate(getPos()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/8408/buggy-version/src.main.java.mcjty.rftools.blocks.shield.NoTickShieldBlockTileEntity.java", "BodyUseAPI": [], "Fixed commit": "3973788fee24f19af8a4437fa4d40bfc700d62e4", "Url": "https://api.github.com/repos/McJtyMods/RFTools", "Date": "2016-03-11T20:08:42Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((worldObj) != null) { worldObj.markBlockForUpdate(getPos()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/8408/buggy-version/src.main.java.mcjty.rftools.blocks.shield.NoTickShieldBlockTileEntity.java", "BodyUseAPI": [], "Fixed commit": "3973788fee24f19af8a4437fa4d40bfc700d62e4", "Url": "https://api.github.com/repos/McJtyMods/RFTools", "Date": "2016-03-11T20:08:42Z"},
{"Line": "=>389", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!insertedInMiddle) { roadMapList.add(new se.chalmers.agile5.entities.RoadMapEntry(title, desc, macroType)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/4621/buggy-version/app.src.se.chalmers.agile5.activities.RoadMapActivity.java", "BodyUseAPI": [], "Fixed commit": "f3f2bb8678c4ce1a2f9d8c1e8affae8c5abd91b3", "Url": "https://api.github.com/repos/ajgustafsson/agiledevelopment", "Date": "2014-05-15T08:20:58Z"},
{"Line": "=>362", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (max_bin_val > 0) { for (i = 0; i < (desc.length); ++i) { desc[i] = ((float) (java.lang.Math.min(1.0, ((desc[i]) / max_bin_val)))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/6184/buggy-version/library.mpicbg.mpicbg-lite.src.main.java.mpicbg.imagefeatures.FloatArray2DSIFT.java", "BodyUseAPI": ["java.lang.Math.min(double,float)"], "Fixed commit": "fb93c201a293d753635434af539f2e8400ad494e", "Url": "https://api.github.com/repos/khoadoan/slda-hadoop", "Date": "2013-05-01T22:33:44Z"},
{"Line": "=>340", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["isaac.bastion.BastionType.getBastionType(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (type == null) { type = isaac.bastion.BastionType.getDefaultType(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/4414/buggy-version/Bastion.src.isaac.bastion.storage.BastionBlockStorage.java", "BodyUseAPI": [], "Fixed commit": "37d42417db4eb0a6ef351807e7120858070e9d8f", "Url": "https://api.github.com/repos/TealNerd/Bastion", "Date": "2016-10-31T19:38:55Z"},
{"Line": "=>317", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.tools.ant.types.Path.list()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((paths.length) == 0) { ret = true; }else { for (int i = 0; i < (paths.length); ++i) { if (targetNeedsGen(paths[i], spaths)) { ret = true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/1227/buggy-version/trunk.ant-contrib.src.java.net.sf.antcontrib.logic.OutOfDate.java", "BodyUseAPI": ["net.sf.antcontrib.logic.OutOfDate.targetNeedsGen(java.lang.String,java.lang.String[])"], "Fixed commit": "954cf451e211a227bab9e02e74ba9be8d2b0de7a", "Url": "https://api.github.com/repos/crazy-max/ant-contrib", "Date": "2006-08-16T03:22:15Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((userPrivateKeyPath) != null) { java.lang.System.out.println(\"Please log out first!\"); return new message.response.LoginResponse(message.response.LoginResponse.Type.WRONG_CREDENTIALS); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/339/buggy-version/dslab13.src.main.java.your.Client.java", "BodyUseAPI": [], "Fixed commit": "087fc9aad1f07aaef831e1768ff1b95b267c0225", "Url": "https://api.github.com/repos/pieron89/DS13Lab2", "Date": "2013-12-28T21:37:12Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.DatabaseMetaData.getTables(java.lang.String,<nulltype>,java.lang.String,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (results.next()) { return results.getString(\"TABLE_NAME\").equals(tableName); }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/3774/buggy-version/AudioPlayer.src.jbull.audioplayer.Database.java", "BodyUseAPI": ["java.sql.ResultSet.getString(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "59da51805816662d351022eb0db9a2ff6134b25d", "Url": "https://api.github.com/repos/jordangb/AudioPlayer", "Date": "2012-12-26T22:33:18Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (times.contains(words[i])) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/781/buggy-version/hadoop.src.TextAnalyzer.java", "BodyUseAPI": [], "Fixed commit": "ee1aab17b996e3150188297f7a69076bffe8a59f", "Url": "https://api.github.com/repos/atreyamisra/ConcurrentAndDistributedSystems", "Date": "2017-04-11T06:27:18Z"},
{"Line": "=>377", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((engine.Screen.music) != null) { if (((engine.Screen.music.gameSound.getLengthInSeconds()) - (engine.Screen.music.getPositionSeconds())) < 10) { if ((engine.Screen.fadingMusic) != null) engine.Screen.fadingMusic.dispose(); engine.Screen.fadingMusic = engine.Screen.music; engine.Screen.music = engine.Sound.newMusic(engine.Screen.music.gameSound); engine.Screen.music.playSound(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/7749/buggy-version/src.engine.Screen.java", "BodyUseAPI": [], "Fixed commit": "d7977c9f8bac0a8680d69b920d49120f6dcd17fc", "Url": "https://api.github.com/repos/DrFair/Game", "Date": "2016-04-08T09:22:27Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (parentElement instanceof org.eclipse.core.resources.IProject) { org.eclipse.core.resources.IProject project = ((org.eclipse.core.resources.IProject) (parentElement)); if ((project.isOpen()) && (project.hasNature(IRascalResources.ID_RASCAL_NATURE))) { java.lang.Object[] libraries = getProjectSearchPath(); org.eclipse.core.resources.IResource[] members = project.members(); java.lang.Object[] result = new java.lang.Object[(members.length) + (libraries.length)]; java.lang.System.arraycopy(members, 0, result, 0, members.length); java.lang.System.arraycopy(libraries, 0, result, members.length, libraries.length); return result; }else if (project.isOpen()) { return project.members(); } }else if (parentElement instanceof org.eclipse.core.resources.IContainer) { return ((org.eclipse.core.resources.IContainer) (parentElement)).members(); }else if (parentElement instanceof org.eclipse.core.filesystem.IFileStore) { return ((org.eclipse.core.filesystem.IFileStore) (parentElement)).childStores(EFS.NONE, null); }else if (parentElement instanceof org.rascalmpl.eclipse.navigator.RascalLibraryContent) { return ((org.rascalmpl.eclipse.navigator.RascalLibraryContent) (parentElement)).getContent(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/3104/buggy-version/src.org.rascalmpl.eclipse.navigator.NavigatorContentProvider.java", "BodyUseAPI": [], "Fixed commit": "f9ebb8b76f715ffdbcbcf60b03ee028800e8c0b8", "Url": "https://api.github.com/repos/cwi-swat/rascal-eclipse", "Date": "2013-10-16T18:25:04Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (acc.getAccountType().equals(MessageProvider.Type.FACEBOOK)) { hu.rgai.android.test.MainActivity.openFbSession(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/2531/buggy-version/src.hu.rgai.android.services.MainService.java", "BodyUseAPI": [], "Fixed commit": "4789040cfdba22260afa3f000f50de114ea12ccf", "Url": "https://api.github.com/repos/k-kojak/yako", "Date": "2014-05-19T14:31:24Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.list()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((files == null) || ((files.length) == 0)) { return java.util.Collections.emptyIterator(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/2746/buggy-version/src.main.java.org.hobbit.evaluationstorage.resultstore.FileResultStoreFacade.java", "BodyUseAPI": [], "Fixed commit": "ef6aedaae8271fa09f3f150d66d449777eda5e6a", "Url": "https://api.github.com/repos/hobbit-project/evaluation-storage", "Date": "2017-05-22T09:59:41Z"},
{"Line": "=>436", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["main.Main.user.getInventory().get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (item.isWereableItem()) { main.Main.generatePrintMessage(names, main.Main.grammarUseItem, \"EQUIP\", main.Main.usePronoun(), false); }else { main.Main.generatePrintMessage(names, main.Main.grammarUseItem, \"USE\", main.Main.usePronoun(), false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/439/buggy-version/src.main.Main.java", "BodyUseAPI": [], "Fixed commit": "3c0d9f2424cccabeadda6bcdbf8a96ce37c5d2f1", "Url": "https://api.github.com/repos/dpenas/roomsgame", "Date": "2016-02-08T14:14:24Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.afollestad.ason.Util.followPath(org.json.JSONObject,java.lang.String,java.lang.String[],boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (((target == null) || (JSONObject.NULL.equals(target))) || ((org.json.JSONObject.NULL) == target)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/8453/buggy-version/src.main.java.com.afollestad.ason.Util.java", "BodyUseAPI": [], "Fixed commit": "1298b63db2199b9b051b97ab3b2c4b7bacd543ef", "Url": "https://api.github.com/repos/afollestad/ason-deprecated", "Date": "2017-02-28T20:47:58Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.jenkinsci.plugins.ssegateway.Util.isTestEnv) == null) { org.jenkinsci.plugins.ssegateway.Util.isTestEnv = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/3470/buggy-version/src.main.java.org.jenkinsci.plugins.ssegateway.Util.java", "BodyUseAPI": [], "Fixed commit": "426633c72af3a775f2695b84e4f53c07a469f43a", "Url": "https://api.github.com/repos/tfennelly/sse-gateway-plugin", "Date": "2016-08-03T10:18:03Z"},
{"Line": "=>340", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pserver.algorithms.metrics.VectorMetric.getDistance(user1.getVector(),user2.getVector())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (java.lang.Float.isNaN(dist)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/7180/buggy-version/PServer.PersServerUtils.src.pserver.data.PCommunityDBAccess.java", "BodyUseAPI": [], "Fixed commit": "3c957f9044d1672d18d5144aa426ff547878b80b", "Url": "https://api.github.com/repos/iit-Demokritos/PServer", "Date": "2014-06-01T10:47:05Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List.getSelectionIndex()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (index == (-1)) { controller = null; setPageComplete(false); }else { org.granite.wizard.ProjectTemplate template = templates.get(index); text.setText(template.getDescription()); controller = template.getController().newInstance(); controller.initialize(((org.granite.wizard.DynamicProjectWizard) (getWizard())), template); setPageComplete(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/6618/buggy-version/src.org.granite.wizard.DynamicProjectWizardPageOne.java", "BodyUseAPI": ["java.util.List<org.granite.wizard.ProjectTemplate>.get(int)"], "Fixed commit": "00028f1b6b881a9770b30dff45ec09300256d6e2", "Url": "https://api.github.com/repos/graniteds/graniteds_wizard_attic", "Date": "2011-11-29T14:20:39Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rawGenre == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/6499/buggy-version/src.main.java.com.perrier.music.tag.Mp3Tag.java", "BodyUseAPI": [], "Fixed commit": "a8b31cbd4addb589490e35a34ca796de8c243dcd", "Url": "https://api.github.com/repos/nperrier/music-server", "Date": "2015-03-30T01:35:18Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.getWhitespaceFollowedNode(com.puppycrawl.tools.checkstyle.api.DetailAST)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((whitespaceFollowedAst.getNextSibling()) == null) || ((whitespaceFollowedAst.getNextSibling().getType()) != (com.puppycrawl.tools.checkstyle.api.TokenTypes.ANNOTATIONS))) { final int whitespaceColumnNo = com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.getPositionAfter(whitespaceFollowedAst); final int whitespaceLineNo = whitespaceFollowedAst.getLineNo(); if (hasTrailingWhitespace(ast, whitespaceColumnNo, whitespaceLineNo)) { log(whitespaceLineNo, whitespaceColumnNo, com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.MSG_KEY, whitespaceFollowedAst.getText()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/1524/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.java", "BodyUseAPI": ["com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.getPositionAfter(com.puppycrawl.tools.checkstyle.api.DetailAST)", "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.log(int,int,java.lang.String,whitespaceFollowedAst.getText())", "com.puppycrawl.tools.checkstyle.api.DetailAST.getLineNo()", "com.puppycrawl.tools.checkstyle.api.DetailAST.getText()"], "Fixed commit": "affa9bd52f66375bf59bac720c9dbeb411b86227", "Url": "https://api.github.com/repos/Nimfadora/checkstyle", "Date": "2017-09-05T11:43:02Z"},
{"Line": "=>339", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (fileName.contains(\"MapDisarm\")) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/493/buggy-version/app.src.main.java.com.disarm.sanna.pdm.SocialShareActivity.java", "BodyUseAPI": [], "Fixed commit": "8b427378b5aee367a614f69c8caaf47f3798829a", "Url": "https://api.github.com/repos/archie94/pdm", "Date": "2016-09-23T20:08:00Z"},
{"Line": "=>894", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((Subtask.TaskFailure) != null) { SetStatus((-1), Subtask.TaskFailure); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/7522/buggy-version/src.Main.java", "BodyUseAPI": ["LoadProgram.SetStatus(int,Subtask.TaskFailure)"], "Fixed commit": "eae9accb8e184d0e2c1b8ee9a8883f1f5f21048b", "Url": "https://api.github.com/repos/ldo/ti5x_android", "Date": "2011-11-25T10:06:12Z"},
{"Line": "=>301", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (originatingRequest.isHandled()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/1724/buggy-version/qbit-boon.src.main.java.io.advantageous.qbit.server.Server.java", "BodyUseAPI": [], "Fixed commit": "5bc755cbacf7f2944d226e1f0c7ed7ece97b828b", "Url": "https://api.github.com/repos/advantageous/qbit", "Date": "2014-11-14T00:20:57Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.neo4j.kernel.impl.nioneo.store.labels.NodeLabels.getIfLoaded()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((labelIds.length) > 0) { label = labelMap.get(((int) (labelIds[0]))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/6491/buggy-version/src.main.java.com.localresponse.neo4j_tool.NodeStoreDump.java", "BodyUseAPI": ["java.util.Map<java.lang.Integer, java.lang.String>.get(long)"], "Fixed commit": "50f7e2ddb464a69e2e987e2b1ef30d869bd85bb6", "Url": "https://api.github.com/repos/bpziegler/MavenTest", "Date": "2015-10-20T18:29:02Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (stateDTO.equals(lastStateDTO)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/3385/buggy-version/service.src.main.java.com.epam.rft.atsy.service.impl.ApplicationServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "b297ffdcea4af4f36a1eb80698dad345903714c6", "Url": "https://api.github.com/repos/epam-debrecen-rft-2015/atsy", "Date": "2016-04-05T07:25:20Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((adj_arr[i]) != 0) && (((visited[i]) == (-1)) || ((costs[i]) > cost))) { costs[i] = cost; toVisit.add(i, cost); visited[i] = current; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/7677/buggy-version/src.pathfinding.Graph.java", "BodyUseAPI": ["util.IntDoubleHeap.add(int,double)"], "Fixed commit": "e82df420694c65032278306d664284aa6593e130", "Url": "https://api.github.com/repos/Alex-Huleatt/Panther", "Date": "2014-07-31T07:31:18Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<android.graphics.Paint>.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (size == 0) { com.cadeli.ui.CdlPalette.createDefaultColors(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/6935/buggy-version/CdlUIg.src.com.cadeli.ui.CdlPalette.java", "BodyUseAPI": [], "Fixed commit": "bbcfb1c0d0fd9c2610f0d6585898481a25d0918c", "Url": "https://api.github.com/repos/cadeli/CdlUI", "Date": "2013-09-26T08:49:14Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mConvertTextCollapsedStatus) != null) { mConvertTextCollapsedStatus.put(mPosition, mCollapsed); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/7008/buggy-version/src.com.example.expandabletextviewinlistview.ExpandableTextView.java", "BodyUseAPI": [], "Fixed commit": "a69a6dc5c22580004b1b4038f0d9432c48255138", "Url": "https://api.github.com/repos/com314159/ExpandableTextViewInListView", "Date": "2014-10-31T08:07:51Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (\"([Ljava/lang/Object;)Lorg/osgl/mvc/result/Result;\".equals(n.desc)) { injectRenderArgSetCode(n); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/3081/buggy-version/src.main.java.act.controller.bytecode.HandlerEnhancer.java", "BodyUseAPI": ["act.controller.bytecode.HandlerEnhancer.Transformer.InvocationHandler.injectRenderArgSetCode(act.controller.bytecode.MethodInsnNode)"], "Fixed commit": "834aa6195a34f9af72e1807bca2d50adddc53a30", "Url": "https://api.github.com/repos/actframework/actframework", "Date": "2016-09-11T21:24:16Z"},
{"Line": "=>312", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.molgenis.framework.db.Database.find(java.lang.Class,org.molgenis.framework.db.QueryRule,org.molgenis.framework.db.QueryRule,org.molgenis.framework.db.QueryRule)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((observedValues.size()) > 1) throw new java.lang.RuntimeException(\"expected exactly one value for a row/column combination\"); else { org.molgenis.omx.observ.value.Value value = observedValues.get(0).getValue(); if (observableFeature.getDataType().equalsIgnoreCase(FieldTypeEnum.XREF.toString())) { org.molgenis.omx.observ.Characteristic characteristic = ((org.molgenis.omx.observ.value.XrefValue) (value)).getValue(); characteristic.setName(rawValue); database.update(characteristic); }else { try { new org.molgenis.omx.converters.ValueConverter(database).updateFromTuple(tuple, colName, observableFeature, value); } catch (org.molgenis.omx.converters.ValueConverterException e) { throw new java.lang.RuntimeException(e); } database.update(value); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/2617/buggy-version/molgenis-omx-protocolmanager.src.main.java.org.molgenis.omx.workflow.WorkflowServiceImpl.java", "BodyUseAPI": ["observedValues.get(0).getValue()", "java.util.List<org.molgenis.omx.observ.ObservedValue>.get(int)"], "Fixed commit": "310f18aaa1248411d5bb1cc08769ba6c8f575555", "Url": "https://api.github.com/repos/dennishendriksen/molgenis", "Date": "2013-10-28T20:36:23Z"},
{"Line": "=>787", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((api.getEndpointUTPassword()) != null) { api.setEndpointUTPassword(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/6351/buggy-version/modules.api-import-export.src.main.java.org.wso2.carbon.apimgt.importexport.utils.APIExportUtil.java", "BodyUseAPI": ["org.wso2.carbon.apimgt.api.model.API.setEndpointUTPassword(java.lang.String)"], "Fixed commit": "085ffc7aa0dcf8baf3077fff880f962300d9ac7f", "Url": "https://api.github.com/repos/wso2/product-apim", "Date": "2017-11-08T09:04:28Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (maxDepth == 0) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/5198/buggy-version/src.main.java.com.oroplatform.idea.oroplatform.intellij.codeAssist.yml.YamlPsiElements.java", "BodyUseAPI": [], "Fixed commit": "2809373f8af6f6387e197e40fce26b8a6c2a4300", "Url": "https://api.github.com/repos/oroinc/oro-phpstorm-plugin", "Date": "2016-05-25T21:15:10Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (t.getSootClass().isPhantom()) r = soot.jimple.toolkits.typing.fast.Scene.v().getRefType(\"java.lang.Throwable\"); else r = t;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/6826/buggy-version/src.soot.jimple.toolkits.typing.fast.AugEvalFunction.java", "BodyUseAPI": [], "Fixed commit": "eec7f6667853950ab90d9cd71dfbca79311c0aa1", "Url": "https://api.github.com/repos/agorski3/soot", "Date": "2017-01-20T15:02:54Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mcc) != null) { for (ezcli.modules.smart_autocomplete.CommandFreq c : mcc.getCommandSequences()) if (c.getCommandSequence().startsWith(command)) return c.getCommandSequence().substring(command.length()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/2887/buggy-version/src.main.java.ezcli.modules.smart_autocomplete.CmdComplete.java", "BodyUseAPI": [], "Fixed commit": "d56288c1118b58550596b7d2a12c07a887820e1b", "Url": "https://api.github.com/repos/nanoandrew4/ezcli", "Date": "2017-12-03T04:57:23Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (org.apache.hadoop.hbase.mob.MobUtils.isMobFamily(store.getFamily())) { mobCellValueSizeThreshold = org.apache.hadoop.hbase.mob.MobUtils.getMobThreshold(store.getFamily()); mobFileManager = org.apache.hadoop.hbase.mob.MobFileManager.create(conf, this.store.getFileSystem(), this.store.getTableName(), this.store.getFamily()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/8908/buggy-version/hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.compactions.Compactor.java", "BodyUseAPI": [], "Fixed commit": "a57f71c2e11934b2027c03da5cf4d76fdbab7160", "Url": "https://api.github.com/repos/JingchengDu/hbase", "Date": "2014-08-26T05:57:50Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getIntent().getExtras().getLong(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (id == (-1)) { alarmInfo = new com.project2.anything2.se329.puzzlarm.alarmmanagement.AlarmModel(); }else { alarmInfo = helper.getAlarm(id); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/3366/buggy-version/app.src.main.java.com.project2.anything2.se329.puzzlarm.activities.SetAlarmActivity.java", "BodyUseAPI": ["com.project2.anything2.se329.puzzlarm.localdata.AlarmLocalDataHelper.getAlarm(java.lang.Long)"], "Fixed commit": "f9cadd6ba1b609309df1f2dbc55f78b5432e63c4", "Url": "https://api.github.com/repos/darrellii/Puzzlarm", "Date": "2015-03-31T02:07:45Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(mDatas.get(position).getDistance()))) { if ((mDatas.get(position).getDistance().length()) > 3) { double distance = java.lang.Double.parseDouble(mDatas.get(position).getDistance()); distance = distance / 1000; holder.mDistanceTv.setText(((java.lang.String.valueOf(distance).substring(0, 3)) + \"km\")); }else { holder.mDistanceTv.setText(((mDatas.get(position).getDistance()) + \"km\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/5414/buggy-version/src.com.xgf.wineserver.ui.adapter.OrderAdapter.java", "BodyUseAPI": ["java.util.ArrayList<com.xgf.wineserver.entity.Order>.get(int)", "java.lang.Double.parseDouble(mDatas.get(position).getDistance())", "java.util.ArrayList<com.xgf.wineserver.entity.Order>.get(int)", "java.util.ArrayList<com.xgf.wineserver.entity.Order>.get(int)", "android.widget.TextView.setText(((mDatas.get(position).getDistance()) + \"km\"))", "mDatas.get(position).getDistance()", "mDatas.get(position).getDistance()", "mDatas.get(position).getDistance().length()", "mDatas.get(position).getDistance()"], "Fixed commit": "89aa87b5e5595460fe870a6a25aae3965b106c66", "Url": "https://api.github.com/repos/xiguofeng/WineServer", "Date": "2015-09-15T09:34:51Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.concurrent.ConcurrentMap<java.lang.String, org.slf4j.Logger>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (gbLogger != null) { return gbLogger; }else { org.slf4j.Logger newInstance = new com.genband.util.log.GbLoggerAdapter(org.apache.logging.log4j.LogManager.getLogger(name)); org.slf4j.Logger oldInstance = loggerMap.putIfAbsent(name, newInstance); return oldInstance == null ? newInstance : oldInstance; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/3085/buggy-version/logging.src.main.java.com.genband.util.log.GbLoggerFactory.java", "BodyUseAPI": [], "Fixed commit": "b6e6bb862f554f5c39f0cf9202b1993f7adc6aff", "Url": "https://api.github.com/repos/dingwenPATHo/logging", "Date": "2017-02-06T05:52:01Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i < 3) { currentX = currentX - i; }else { currentX = currentX - (i - 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/6424/buggy-version/src.kalaveijo.game.gameobjects.Ai.java", "BodyUseAPI": [], "Fixed commit": "8f74f3029b144a56c7cc8d1b8ef2283adb23c9ad", "Url": "https://api.github.com/repos/kalaveijo/GrittyDefence", "Date": "2014-08-19T18:34:55Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (story != null) { android.util.Log.d(com.codepath.timeline.network.TimelineClient.TAG, \"Success getMomentChatList\"); if (listener != null) { listener.onGetMomentChatList(story.getMomentChatList()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/440/buggy-version/app.src.main.java.com.codepath.timeline.network.TimelineClient.java", "BodyUseAPI": ["com.codepath.timeline.models.Story.getMomentChatList()", "com.codepath.timeline.network.TimelineClient.TimelineClientGetMomentListListener.onGetMomentChatList(story.getMomentChatList())"], "Fixed commit": "b6a162b7bf0bf616ba72b04d14f5427370cf978b", "Url": "https://api.github.com/repos/dbautist/timeline", "Date": "2016-09-03T11:53:07Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sudokuSolver.SolverMain.isAvailable[k]) sudokuSolver.SolverMain.board[i][j] = k;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/2903/buggy-version/CipherLair.src.sudokuSolver.SolverMain.java", "BodyUseAPI": [], "Fixed commit": "a457c04b09917af1f08c3ddba0e1e2e65c0b324e", "Url": "https://api.github.com/repos/acarturk-e/java-projects", "Date": "2017-09-27T13:33:49Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (finalScore > 0) { org.matsim.contrib.parking.lib.DebugLib.emptyFunctionForSettingBreakPoint(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/3984/buggy-version/contribs.parking.src.main.java.org.matsim.contrib.parking.PC2.simulation.ParkingInfrastructureManager.java", "BodyUseAPI": [], "Fixed commit": "a12c20e55c56743e4fb924a8d085d458460c9614", "Url": "https://api.github.com/repos/matsim-org/matsim", "Date": "2015-12-04T13:04:28Z"},
{"Line": "=>270", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (selectedParking instanceof org.matsim.contrib.parking.PC2.infrastructure.RentableParking) { org.matsim.contrib.parking.lib.DebugLib.emptyFunctionForSettingBreakPoint(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/3984/buggy-version/contribs.parking.src.main.java.org.matsim.contrib.parking.PC2.simulation.ParkingInfrastructureManager.java", "BodyUseAPI": [], "Fixed commit": "a12c20e55c56743e4fb924a8d085d458460c9614", "Url": "https://api.github.com/repos/matsim-org/matsim", "Date": "2015-12-04T13:04:28Z"},
{"Line": "=>297", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (selectedParking instanceof org.matsim.contrib.parking.PC2.infrastructure.RentableParking) { org.matsim.contrib.parking.lib.DebugLib.emptyFunctionForSettingBreakPoint(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/3984/buggy-version/contribs.parking.src.main.java.org.matsim.contrib.parking.PC2.simulation.ParkingInfrastructureManager.java", "BodyUseAPI": [], "Fixed commit": "a12c20e55c56743e4fb924a8d085d458460c9614", "Url": "https://api.github.com/repos/matsim-org/matsim", "Date": "2015-12-04T13:04:28Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (input instanceof mage.cards.Card) { abilities = ((mage.cards.Card) (input)).getAbilities(game); }else { abilities = input.getAbilities(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/8669/buggy-version/Mage.src.mage.filter.predicate.mageobject.AbilityPredicate.java", "BodyUseAPI": ["mage.MageObject.getAbilities()"], "Fixed commit": "ab4ed4f97317401760787f9ba6f825cd932b7442", "Url": "https://api.github.com/repos/magefree/mage", "Date": "2015-06-11T10:54:23Z"},
{"Line": "=>375", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.njit.fall15.team1.cs673messenger.controllers.Activities.ChattingWindowActivity.getSystemService(Context.LOCATION_SERVICE)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (locationManager.isProviderEnabled(LocationManager.NETWORK_PROVIDER)) { locationManager.requestLocationUpdates(LocationManager.NETWORK_PROVIDER.toString(), edu.njit.fall15.team1.cs673messenger.controllers.Activities.ChattingWindowActivity.MIN_TIME_FOR_UPDATE, edu.njit.fall15.team1.cs673messenger.controllers.Activities.ChattingWindowActivity.MIN_DISTANCE_FOR_UPDATE, new android.location.LocationListener() { @java.lang.Override public void onLocationChanged(android.location.Location location) { } @java.lang.Override public void onStatusChanged(java.lang.String provider, int status, android.os.Bundle extras) { } @java.lang.Override public void onProviderEnabled(java.lang.String provider) { } @java.lang.Override public void onProviderDisabled(java.lang.String provider) { } }); if (locationManager != null) { location = locationManager.getLastKnownLocation(LocationManager.NETWORK_PROVIDER); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/7287/buggy-version/app.src.main.java.edu.njit.fall15.team1.cs673messenger.controllers.Activities.ChattingWindowActivity.java", "BodyUseAPI": ["android.location.LocationManager.requestLocationUpdates(LocationManager.NETWORK_PROVIDER.toString(),long,float,android.location.LocationListener)", "android.location.LocationManager.getLastKnownLocation(LocationManager.NETWORK_PROVIDER)"], "Fixed commit": "335e3151e612d07fc801261f7a42d26ad99656dd", "Url": "https://api.github.com/repos/JackQinCh/CS673Messenger", "Date": "2015-12-04T16:52:00Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((description) != null) { description = description.replaceAll(\"\u00bf\u00bd\", \"\u00b0\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/6439/buggy-version/app.src.main.java.anaels.com.bakingrecipe.api.model.Step.java", "BodyUseAPI": [], "Fixed commit": "4fae57ea3113d8166b384d88797da37cd4182d60", "Url": "https://api.github.com/repos/Anael-S/BakingRecipe", "Date": "2017-11-14T22:25:55Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getListView().getAdapter()) == null) { getListView().setAdapter(getPostListAdapter()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/2707/buggy-version/src.org.wordpress.android.ui.posts.PostsListFragment.java", "BodyUseAPI": [], "Fixed commit": "f82ca249b03db0eca6012833f6c0a4623866e5e5", "Url": "https://api.github.com/repos/wordpress-mobile/WordPress-Android", "Date": "2014-03-03T17:17:11Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (e.cookieIsset(args.get(0))) { java.lang.String jsonCookie = JHS.JSON_PARSER.toJson(new javahttpserver.Controller.Http.Get.Cookie(\"Cookie\", e.getCookie(args.get(0)))); e.send(jsonCookie); }else { e.setHeaderField(\"Status\", \"HTTP/1.1 404 Not Found\"); e.send(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/8417/buggy-version/src.javahttpserver.Controller.Http.Get.java", "BodyUseAPI": ["javahttpserver.Http.HttpEvent.send(java.lang.String)", "javahttpserver.Http.HttpEvent.setHeaderField(java.lang.String,java.lang.String)", "javahttpserver.Http.HttpEvent.send(java.lang.String)", "javahttpserver.Http.HttpEvent.getCookie(java.lang.String)", "java.util.ArrayList<java.lang.String>.get(int)", "JHS.JSON_PARSER.toJson(javahttpserver.Controller.Http.Get.Cookie)"], "Fixed commit": "e54fedc3930f0bea6433d85767809e74bfbb94d2", "Url": "https://api.github.com/repos/tncrazvan/ElkServer", "Date": "2017-06-09T09:15:41Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sxx != 0.0) { leastMeanSquaresB = sxy / sxx; }else { leastMeanSquaresB = ((float) (0.0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/4584/buggy-version/OTCAnalyser.src.uk.ac.cam.cstibhotel.otcanalyser.dataanalysis.trendprediction.TrendPredictor.java", "BodyUseAPI": [], "Fixed commit": "3b2076506a808d9885a859a2205f4475097d8266", "Url": "https://api.github.com/repos/CSTIB-Hotel/OTCAnalyser", "Date": "2015-03-01T23:44:43Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((height < 0) || (height > (model.Board.gridMaxHeight))) { isValid = false; return \"Invalid height. Please input width between 0 - \" + (model.Board.gridMaxHeight); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/1842/buggy-version/src.model.Board.java", "BodyUseAPI": [], "Fixed commit": "a844ab16f816446e531b6c9d9c727699b8c7c1a7", "Url": "https://api.github.com/repos/rmit-s3524228-KaKyen-Lam/OOSD-Ra-Men-A1", "Date": "2017-05-24T01:58:28Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isValid) { isFilled[width][height] = true; if (name.equals(\"coal\")) { grid[width][height] = new model.Grid(width, height, model.CardFlyweight.getCard(\"COAL\", 0)); return (((\"Coal created at (\" + width) + \", \") + height) + \")\"; }else if (name.equals(\"gold\")) { grid[width][height] = new model.Grid(width, height, model.CardFlyweight.getCard(\"GOLD\", 0)); goldLocation = grid[width][height]; return (((\"Gold created at (\" + width) + \", \") + height) + \")\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/1842/buggy-version/src.model.Board.java", "BodyUseAPI": [], "Fixed commit": "a844ab16f816446e531b6c9d9c727699b8c7c1a7", "Url": "https://api.github.com/repos/rmit-s3524228-KaKyen-Lam/OOSD-Ra-Men-A1", "Date": "2017-05-24T01:58:28Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((isFilled[width][height]) == true) { isValid = false; return \"Invalid position. That grid has been occupied.\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/1842/buggy-version/src.model.Board.java", "BodyUseAPI": [], "Fixed commit": "a844ab16f816446e531b6c9d9c727699b8c7c1a7", "Url": "https://api.github.com/repos/rmit-s3524228-KaKyen-Lam/OOSD-Ra-Men-A1", "Date": "2017-05-24T01:58:28Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((width < 0) || (width > (model.Board.gridMaxWidth))) { isValid = false; return \"Invalid width. Please input width between 0 - \" + (model.Board.gridMaxWidth); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/1842/buggy-version/src.model.Board.java", "BodyUseAPI": [], "Fixed commit": "a844ab16f816446e531b6c9d9c727699b8c7c1a7", "Url": "https://api.github.com/repos/rmit-s3524228-KaKyen-Lam/OOSD-Ra-Men-A1", "Date": "2017-05-24T01:58:28Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang.StringUtils.isBlank(this.refreshPort)) { this.refreshPort = \"8080\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/7330/buggy-version/plugins.alfresco-maven-plugin.src.main.java.org.alfresco.maven.plugin.AbstractRefreshWebappMojo.java", "BodyUseAPI": [], "Fixed commit": "e9fa82da5c8863dd0373ab65d48508074fe7b29e", "Url": "https://api.github.com/repos/Alfresco/alfresco-sdk", "Date": "2016-06-27T14:09:07Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (clazz != null) { org.compiere.model.MTable.s_classCache.put(tableName, clazz); return clazz; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/7656/buggy-version/base.src.org.compiere.model.MTable.java", "BodyUseAPI": ["org.compiere.util.CCache<java.lang.String, java.lang.Class<?>>.put(java.lang.String,java.lang.Class<?>)"], "Fixed commit": "a3b18ec826887136bf21169f9b7da8e00c28ca68", "Url": "https://api.github.com/repos/adempiere/adempiere", "Date": "2017-11-03T04:36:43Z"},
{"Line": "=>347", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((item.getEnabled()) != 1) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/2997/buggy-version/app.src.main.java.rikka.searchbyimage.ui.UploadActivity.java", "BodyUseAPI": [], "Fixed commit": "c849aabec326b5e8b2224b908d191e7ff6778a23", "Url": "https://api.github.com/repos/RikkaW/SearchByImage", "Date": "2017-01-26T03:54:46Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((_controller.getMainActivity()) != null) { _controller.getMainActivity().getInternetDenyButtonController().showInternetDenyIcon(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/6886/buggy-version/BusesSpb.src.main.java.ru.slavabulgakov.busesspb.controller.NetCheckState.java", "BodyUseAPI": ["_controller.getMainActivity().getInternetDenyButtonController().showInternetDenyIcon()", "ru.slavabulgakov.busesspb.controller.NetCheckState.CheckInternetConnectionTimerTask.1.getMainActivity()", "_controller.getMainActivity().getInternetDenyButtonController()"], "Fixed commit": "c6aaa75773815f83cd99831168b847db9bf9a410", "Url": "https://api.github.com/repos/slavabulgakov/BusesSpb", "Date": "2014-03-21T18:06:19Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((accountList) != null) && (accountList.isEmpty())) { java.lang.System.out.print(\"\\nThere are no user accounts currently registered\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/9054/buggy-version/src.UserAccountList.java", "BodyUseAPI": [], "Fixed commit": "5f076b7cc02b30b3573d60efbfdc061ea8b30887", "Url": "https://api.github.com/repos/GroupIV/Health-Tracker", "Date": "2014-03-30T22:11:42Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((getAvg(decoder.RfData.STRONGEST_SIG)) != 0) && ((getAvg(decoder.RfData.NOISE)) != 0)) { double p = getAvg(decoder.RfData.STRONGEST_SIG); double n = getAvg(decoder.RfData.NOISE); if ((p < (-10)) && (p > (-150))) if ((n < (-10)) && (n > (-150))) if (p > n) strongestSigRfSNR = p - n; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/6876/buggy-version/src.decoder.RfData.java", "BodyUseAPI": ["decoder.RfData.getAvg(int)", "decoder.RfData.getAvg(int)"], "Fixed commit": "cf0e68a7dfd4af205d7b747fab4ba63224bc0407", "Url": "https://api.github.com/repos/ac2cz/FoxTelem", "Date": "2017-10-22T16:04:11Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((getAvg(decoder.RfData.AVGSIG)) != 0) && ((getAvg(decoder.RfData.NOISE)) != 0)) { double p = getAvg(decoder.RfData.AVGSIG); double n = getAvg(decoder.RfData.NOISE); if ((p < (-10)) && (p > (-150))) if ((n < (-10)) && (n > (-150))) if (p > n) rfSNR = p - n; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/6876/buggy-version/src.decoder.RfData.java", "BodyUseAPI": ["decoder.RfData.getAvg(int)", "decoder.RfData.getAvg(int)"], "Fixed commit": "cf0e68a7dfd4af205d7b747fab4ba63224bc0407", "Url": "https://api.github.com/repos/ac2cz/FoxTelem", "Date": "2017-10-22T16:04:11Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((task.getTimeIntervals().size()) > 0) { ru.spbau.mit.atum.Interval interval = task.getTimeIntervals().get(0); resultIntervals.add(interval); task.getHolder().setScheduledTime(initialMoment.toDateTime().plusMinutes(interval.left())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/1215/buggy-version/app.src.main.java.ru.spbau.mit.atum.SchedulePlanner.java", "BodyUseAPI": ["task.getHolder().setScheduledTime(initialMoment.toDateTime().plusMinutes(interval.left()))", "ru.spbau.mit.atum.TimeLineTask.getTimeIntervals()", "ru.spbau.mit.atum.TimeLineTask.getHolder()", "task.getTimeIntervals().get(int)"], "Fixed commit": "8eb628e518de76935a9c14c3cd0ad356dd717248", "Url": "https://api.github.com/repos/Ivan-Veselov/atum", "Date": "2016-12-21T22:14:06Z"},
{"Line": "=>526", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((BITCOIN_CURRENCY_UNIT) == null) { throw new java.lang.RuntimeException(\"BITCOIN_CURRENCY_UNIT is null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/3715/buggy-version/src.main.java.org.multibit.exchange.CurrencyConverter.java", "BodyUseAPI": [], "Fixed commit": "0f87de337c05b9da0c3567b85813e5248c728d44", "Url": "https://api.github.com/repos/ai-coin/multibit", "Date": "2017-05-01T05:59:56Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((response.getStatus()) >= 200) && ((response.getStatus()) <= 299)) { writeToOutputStream(resp, entityMessage); resp.setStatus(response.getStatus()); java.lang.Object contentType = response.getMetadata().getFirst(HttpHeaders.CONTENT_TYPE); if (contentType != null) { resp.setContentType(contentType.toString()); } }else { resp.sendError(response.getStatus(), entityMessage); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/1134/buggy-version/src.main.java.ch.rabbithole.sra.resource.ResourceExecution.java", "BodyUseAPI": ["javax.ws.rs.core.Response.getMetadata()", "javax.servlet.http.HttpServletResponse.setStatus(response.getStatus())", "javax.ws.rs.core.Response.getStatus()", "response.getMetadata().getFirst(HttpHeaders.CONTENT_TYPE)", "javax.ws.rs.core.Response.getStatus()", "javax.servlet.http.HttpServletResponse.sendError(response.getStatus(),java.lang.String)"], "Fixed commit": "9984266ca17aa714632cb258e5e356ec52fb8264", "Url": "https://api.github.com/repos/nimloth05/simple-rest-api", "Date": "2015-08-23T09:56:45Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["filters.DetectionFilterThreading.getTracked(org.opencv.core.Point)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (id != (-1)) { android.widget.Toast.makeText(this, (\"you want note \" + id), Toast.LENGTH_SHORT).show(); android.content.Intent data = new android.content.Intent(); data.putExtra(\"id\", id); setResult(filters.RESULT_OK, data); finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/9189/buggy-version/layoutT.src.filters.UserTakeActivity5.java", "BodyUseAPI": ["android.widget.Toast.makeText(filters.UserTakeActivity5,java.lang.String,Toast.LENGTH_SHORT)", "android.widget.Toast.makeText(this, (\"you want note \" + id), Toast.LENGTH_SHORT).show()", "android.content.Intent.putExtra(java.lang.String,int)"], "Fixed commit": "0d3cf6f9ec33d26d874f9af218049862aa008fe8", "Url": "https://api.github.com/repos/wissam-r/NotePad", "Date": "2014-07-09T08:48:16Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (data != null) { adapter.setCursor(data); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/9017/buggy-version/app.src.main.java.com.artemohanjanyan.mobileschool.ui.ListFragment.java", "BodyUseAPI": ["com.artemohanjanyan.mobileschool.ui.Adapter.setCursor(android.database.Cursor)"], "Fixed commit": "14c0202dfda39c5b5c743826ecabb411eb76cfc2", "Url": "https://api.github.com/repos/artemohanjanyan/MobileSchool", "Date": "2016-07-21T12:16:27Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fullName) == null) { java.lang.String notNullFullName = current.getString(\"fullName\"); curr = new com.example.mapdemo.Comment(body, (((notNullFullName.toUpperCase()) + \" AT \") + timestamp), timestamp); }else { curr = new com.example.mapdemo.Comment(body, (((fullName.toUpperCase()) + \" AT \") + timestamp), timestamp); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/5581/buggy-version/app.src.main.java.com.example.mapdemo.MarkerDetailsActivity.java", "BodyUseAPI": [], "Fixed commit": "9353e3e8d12244aefc13e2fc188d1e9eb8150d92", "Url": "https://api.github.com/repos/tajj/Contribute", "Date": "2017-07-27T22:53:16Z"},
{"Line": "=>355", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tokenEnd == (dataLen)) { if (tokenLength > 0) { tokenLength = 0; tokenEnd = tokenStart + charCount; } nonWordEnd = tokenEnd; if (((initials) != null) && ((initialCharsIterator.current()) == (java.text.CharacterIterator.DONE))) { nonWordEnd = tokenEnd; final java.lang.String potentialToken = nonWordChars.toString(); potentialTokens.put(potentialToken, new java.lang.Integer[]{ nonWordStart, nonWordEnd, potentialToken.length(), 0, -1 }); if (!(initialsIterator.hasNext())) { break; } initialCharsIterator.setIndex(0); bufferIndex = initialsOrigBufferIndex; tokenStart = initialsOrigTokenStart; tokenEnd = initialsOrigTokenEnd; tokenLength = 0; currentRow = rootRow; }else { break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/2737/buggy-version/src.main.java.io.bdrc.lucene.sa.SkrtWordTokenizer.java", "BodyUseAPI": [], "Fixed commit": "94d1cdc295592a4b6e026dce0771d30e95ce0606", "Url": "https://api.github.com/repos/BuddhistDigitalResourceCenter/lucene-sa", "Date": "2017-09-05T10:31:52Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(gameDeck.isEmpty())) this.gameDeck = doTurn(this.gameDeck, opponent);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/3039/buggy-version/HumanPlayer.java", "BodyUseAPI": [], "Fixed commit": "55f3263209d8ee3ae1e3d5a6e3f6b288e4db3769", "Url": "https://api.github.com/repos/smacewan101/softwareEngineeringProject1", "Date": "2013-02-03T16:31:12Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!internal) { decoder = new de.matthiasmann.twl.utils.PNGDecoder(new java.io.FileInputStream(fileName)); }else { decoder = new de.matthiasmann.twl.utils.PNGDecoder(lu.innocence.opengl.core.TextureLoader.class.getResourceAsStream(fileName)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/9207/buggy-version/src.main.java.lu.innocence.opengl.core.TextureLoader.java", "BodyUseAPI": [], "Fixed commit": "44e6ec678ae23c3bfbcb9547de0eb213407ce58e", "Url": "https://api.github.com/repos/Meldrion/Java_OpenGL_LWJGL3", "Date": "2017-09-07T08:51:02Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (validatorId == null) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/2636/buggy-version/src.PublicSite.src.uk.ac.ox.zoo.seeg.abraid.mp.publicsite.web.AdminDiseaseGroupController.java", "BodyUseAPI": [], "Fixed commit": "d35ac9ae8591d236a8928a1036b59f903e014e34", "Url": "https://api.github.com/repos/SEEG-Oxford/ABRAID-MP", "Date": "2014-07-17T14:30:31Z"},
{"Line": "=>348", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (startMode == null) { android.util.Log.e(com.xcv58.joulerenergymanager.JoulerEnergyManageBlackWhiteListService.TAG, \"UNKNOWN option, it's a bug\"); startMode = \"UNKNOWN\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/8259/buggy-version/app.src.main.java.com.xcv58.joulerenergymanager.JoulerEnergyManageBlackWhiteListService.java", "BodyUseAPI": [], "Fixed commit": "79ebe2b6b0a961eeaf29a8562aebb3ddadb11092", "Url": "https://api.github.com/repos/xcv58/BlackList-Android", "Date": "2014-12-01T00:04:11Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((wire.getSourceBinding()) != null) && ((wire.getTargetBinding()) == null)) { pwd = wireGenerator.generateBoundReference(wire.getSourceBinding()); }else { pwd = wireGenerator.generateWire(wire); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/3241/buggy-version/kernel.impl.fabric3-fabric.src.main.java.org.fabric3.fabric.deployment.generator.wire.ReferenceCommandGenerator.java", "BodyUseAPI": ["org.fabric3.spi.deployment.generator.wire.WireGenerator.generateBoundReference(wire.getSourceBinding())", "org.fabric3.spi.deployment.generator.wire.WireGenerator.generateWire(org.fabric3.spi.model.instance.LogicalWire)", "org.fabric3.spi.model.instance.LogicalWire.getSourceBinding()"], "Fixed commit": "bbec69c33deb9d9807148a42e649a069b3e3d224", "Url": "https://api.github.com/repos/Fabric3/fabric3-core", "Date": "2013-10-05T17:36:07Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.createTempFile(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!((tempDir.delete()) && (tempDir.mkdir()))) { fr.ens.transcriptome.eoulsan.EoulsanLogger.getLogger().warning((\"Cannot create temporary directory for STAR: \" + tempDir)); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/6201/buggy-version/src.main.java.fr.ens.transcriptome.eoulsan.bio.readsmappers.STARReadsMapper.java", "BodyUseAPI": ["fr.ens.transcriptome.eoulsan.EoulsanLogger.getLogger().warning(java.lang.String)"], "Fixed commit": "cc89d6fa55bf68e9f63a08c9f3380d3a5ce4ba66", "Url": "https://api.github.com/repos/GenomicParisCentre/eoulsan", "Date": "2014-11-29T11:59:53Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["sosconnector.DAO.ConfigureDAO.createDomFromSource(sosconnector.Parser.SourceParser)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (domFromSource != null) this.hashGroup = new sosconnector.Parser.NodeParser(domFromSource, configure).parse();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/143/buggy-version/src.sosconnector.DAO.ConfigureDAO.java", "BodyUseAPI": ["sosconnector.Parser.NodeParser.parse()"], "Fixed commit": "383bd8bbe91efa464db0b60e244371e5009feac3", "Url": "https://api.github.com/repos/MOSapeizer/SOSconnector", "Date": "2016-07-15T00:50:36Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["sosconnector.Parser.SourceParser.getSourceFormGOV()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (sourceFormGOV.isEmpty()) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/143/buggy-version/src.sosconnector.DAO.ConfigureDAO.java", "BodyUseAPI": [], "Fixed commit": "383bd8bbe91efa464db0b60e244371e5009feac3", "Url": "https://api.github.com/repos/MOSapeizer/SOSconnector", "Date": "2016-07-15T00:50:36Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((price.size()) > 0) title += \" Price: \" + (price.get(0).text());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/1359/buggy-version/src.botMk3.Commands.link.java", "BodyUseAPI": ["price.get(0).text()", "org.jsoup.select.Elements.get(int)"], "Fixed commit": "5805d5a46dd50df25478b387d849fd9d344208f9", "Url": "https://api.github.com/repos/TBthegr81/SKBot", "Date": "2016-08-03T20:31:25Z"},
{"Line": "=>367", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(dirtyState_.getValue())) { java.lang.String frontMatter = org.rstudio.studio.client.rmarkdown.model.YamlFrontMatter.getFrontMatter(docDisplay_); if (!(org.rstudio.core.client.StringUtil.isNullOrEmpty(frontMatter))) { java.lang.String yamlMode = org.rstudio.studio.client.rmarkdown.model.RmdEditorOptions.getString(frontMatter, org.rstudio.studio.client.workbench.views.source.editors.text.rmd.TextEditingTargetNotebook.CHUNK_OUTPUT_TYPE, null); if (!(org.rstudio.core.client.StringUtil.isNullOrEmpty(yamlMode))) { java.lang.String docMode = docUpdateSentinel_.getProperty(org.rstudio.studio.client.workbench.views.source.editors.text.rmd.TextEditingTargetNotebook.CHUNK_OUTPUT_TYPE); if (yamlMode != docMode) { docUpdateSentinel_.setProperty(org.rstudio.studio.client.workbench.views.source.editors.text.rmd.TextEditingTargetNotebook.CHUNK_OUTPUT_TYPE, yamlMode); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/9053/buggy-version/src.gwt.src.org.rstudio.studio.client.workbench.views.source.editors.text.rmd.TextEditingTargetNotebook.java", "BodyUseAPI": [], "Fixed commit": "5c2b296cc998ab0d057234612845425c8e127229", "Url": "https://api.github.com/repos/rstudio/rstudio", "Date": "2017-08-01T21:08:08Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(toChange.equals(StringUtils.EMPTY))) mondrianCache.set(toChange);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/1748/buggy-version/src.pt.webdetails.cdc.ExternalConfigurationsManager.java", "BodyUseAPI": ["org.eigenbase.util.property.StringProperty.set(java.lang.String)"], "Fixed commit": "2b49bd168ebcb99fc9792891ae1e9248795f07a4", "Url": "https://api.github.com/repos/webdetails/cdc", "Date": "2012-03-29T10:49:17Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (expr instanceof pt.uminho.haslab.echo.engine.OperationCallExp) { pt.uminho.haslab.echo.engine.INode n = translate(((pt.uminho.haslab.echo.engine.OperationCallExp) (expr))); if (n instanceof pt.uminho.haslab.echo.engine.IFormula) return ((pt.uminho.haslab.echo.engine.IFormula) (n)); }else if (expr instanceof org.eclipse.qvtd.pivot.qvtrelation.RelationCallExp) { pt.uminho.haslab.echo.engine.INode n = translate(((org.eclipse.qvtd.pivot.qvtrelation.RelationCallExp) (expr))); if (n instanceof pt.uminho.haslab.echo.engine.IFormula) return ((pt.uminho.haslab.echo.engine.IFormula) (n)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/1289/buggy-version/plugins.pt.uminho.haslab.echo.src.pt.uminho.haslab.echo.engine.OCLTranslator.java", "BodyUseAPI": [], "Fixed commit": "4952b31a16a2087c1199a10784d2f08aae645a5a", "Url": "https://api.github.com/repos/haslab/echo", "Date": "2014-04-17T16:26:21Z"},
{"Line": "=>403", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["by.d1makrat.library_fm.MainActivity.GetPlaycountTask.findViewById(R.id.nav_header)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (nav_view != null) { android.widget.TextView user_registered = ((android.widget.TextView) (nav_view.findViewById(R.id.user_registered))); user_registered.setText(java.lang.String.format(\"%s scrobbles since %s\", playcount, registered)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/6594/buggy-version/app.src.main.java.by.d1makrat.library_fm.MainActivity.java", "BodyUseAPI": ["android.view.View.findViewById(R.id.user_registered)"], "Fixed commit": "c96cc53cff8ae45e28d2796cf51cd3542801b737", "Url": "https://api.github.com/repos/DzmitryLakisau/Last.fm-Library-Viewer", "Date": "2017-09-29T22:32:17Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mapper.readTree(this.descriptorYAMLfile).findValue(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (tr == null) { tr = mapper.readTree(this.descriptorYAMLfile).findValue(\"nsd\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/8745/buggy-version/src.main.java.pt.it.av.atnog.extractors.NSExtractor.java", "BodyUseAPI": [], "Fixed commit": "77a1429b2bcd8012654ca7613a3a0cd9bd2fc274", "Url": "https://api.github.com/repos/5GinFIRE/nfv-requirements-extractor", "Date": "2017-10-25T13:18:40Z"},
{"Line": "=>466", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.lgallardo.qbittorrentclient.MainActivity.getFragmentManager()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((fragmentManager.findFragmentByTag(\"firstFragment\")) == null) { fragmentTransaction.add(R.id.list_frame, helpTabletFragment, \"firstFragment\"); }else { fragmentTransaction.replace(R.id.list_frame, helpTabletFragment, \"firstFragment\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/7307/buggy-version/app.src.main.java.com.lgallardo.qbittorrentclient.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "4e65b9cd203e20a80d804be6710cd0f1690d35b3", "Url": "https://api.github.com/repos/lgallard/qBittorrent-Controller", "Date": "2015-09-24T20:55:28Z"},
{"Line": "=>522", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.lgallardo.qbittorrentclient.MainActivity.getFragmentManager()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((fragmentManager.findFragmentByTag(\"firstFragment\")) == null) { fragmentTransaction.add(R.id.one_frame, secondFragment, \"firstFragment\"); }else { fragmentTransaction.add(R.id.one_frame, secondFragment, \"firstFragment\"); fragmentTransaction.replace(R.id.one_frame, secondFragment, \"firstFragment\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/7307/buggy-version/app.src.main.java.com.lgallardo.qbittorrentclient.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "4e65b9cd203e20a80d804be6710cd0f1690d35b3", "Url": "https://api.github.com/repos/lgallard/qBittorrent-Controller", "Date": "2015-09-24T20:55:28Z"},
{"Line": "=>472", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.lgallardo.qbittorrentclient.MainActivity.getFragmentManager()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((fragmentManager.findFragmentByTag(\"secondFragment\")) == null) { fragmentTransaction.add(R.id.content_frame, secondFragment, \"secondFragment\"); }else { fragmentTransaction.replace(R.id.content_frame, secondFragment, \"secondFragment\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/7307/buggy-version/app.src.main.java.com.lgallardo.qbittorrentclient.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "4e65b9cd203e20a80d804be6710cd0f1690d35b3", "Url": "https://api.github.com/repos/lgallard/qBittorrent-Controller", "Date": "2015-09-24T20:55:28Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.antlr.v4.automata.ATNState.transition(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((atn.states.get(t.target.stateNumber)) == null) { throw new java.lang.IllegalStateException(\"Cannot serialize a transition to a removed state.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/1625/buggy-version/tool.src.org.antlr.v4.automata.ATNSerializer.java", "BodyUseAPI": [], "Fixed commit": "4bc615d72ff72756f8fcbf284911b9dbcb79a2cc", "Url": "https://api.github.com/repos/sharwell/antlr4", "Date": "2012-03-19T13:32:34Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.entity.Player.getUniqueId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (vg.civcraft.mc.namelayer.listeners.PlayerListener.notifications.get(uuid).isEmpty()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/4529/buggy-version/src.vg.civcraft.mc.namelayer.listeners.PlayerListener.java", "BodyUseAPI": [], "Fixed commit": "5c9fbb6bb2c7a65abfbaf7712eb57fbe6180d8a3", "Url": "https://api.github.com/repos/Civcraft/NameLayer", "Date": "2015-02-01T16:58:19Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((GUI.id) < 0) GUI.id = GUI.userList.get(((GUI.userList.size()) - 1)).getId();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/7120/buggy-version/JChatroom.src.GUI.java", "BodyUseAPI": [], "Fixed commit": "309ab341874393a4df773475fd70a979b0938798", "Url": "https://api.github.com/repos/DizzyThermal/JChatroom", "Date": "2013-04-23T04:18:17Z"},
{"Line": "=>763", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((searchBrowseProductsOpr.getProductSkuRecord().getHierarchyCategoryMappingRecord().getCategoryLevelOneRecord().getCode()) != null) { com.web.common.dvo.opr.retail.BrowseProductsOpr categoryListBrowseProductsOprRet = new com.web.bf.retail.modules.browseproducts.BrowseProductsBF().searchSubCategory(searchBrowseProductsOpr); browseProductsOpr.setSubCategoryList(categoryListBrowseProductsOprRet.getSubCategoryList()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/1447/buggy-version/PortalBase.src.com.web.bb.retail.module.browseproducts.BrowseProductsBB.java", "BodyUseAPI": ["com.web.bf.retail.modules.browseproducts.BrowseProductsBF.searchSubCategory(com.web.common.dvo.opr.retail.BrowseProductsOpr)"], "Fixed commit": "b2c68de5d69843c45bcb3ced8d1917c7ede7a467", "Url": "https://api.github.com/repos/santlalvishwakarma/RootBranch", "Date": "2016-12-07T18:07:27Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["signalNoiseEstimator.getModule().getSNCode()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (SNCode == \"Intensity Window Estimator\") { informationSN.put(\"code\", \"Intensity Window Estimator\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/4450/buggy-version/src.main.java.net.sf.mzmine.modules.peaklistmethods.peakpicking.deconvolution.ADAPpeakpicking.ADAPDetector.java", "BodyUseAPI": [], "Fixed commit": "2adadaa4c8700e7f991df0a222c28d41a7083fdc", "Url": "https://api.github.com/repos/du-lab/mzmine2", "Date": "2017-04-07T12:56:14Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.trendrr.cheshire.caching.TrendrrCaches.getCacheOrDefault(java.lang.String,com.trendrr.cheshire.CheshireController)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (cache == null) { throw com.trendrr.strest.StrestHttpException.INTERNAL_SERVER_ERROR(\"No cache configured for SessionFilter\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/5164/buggy-version/src.com.trendrr.cheshire.filters.SessionFilter.java", "BodyUseAPI": [], "Fixed commit": "a189b72f0e6806fa594cdfe463774c5189fa0866", "Url": "https://api.github.com/repos/dustismo/cheshire", "Date": "2012-04-19T22:55:55Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(s.isEmpty())) { try { return java.net.InetAddress.getByName(s); } catch (java.net.UnknownHostException ex) { return null; } }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/6021/buggy-version/core.src.main.java.se.sics.kompics.config.Conversions.java", "BodyUseAPI": ["java.net.InetAddress.getByName(java.lang.String)"], "Fixed commit": "592f1280ff95ad8cab3e1c12ca2d49aa513fc6ca", "Url": "https://api.github.com/repos/Decentrify/kompics", "Date": "2016-02-09T15:34:19Z"},
{"Line": "=>397", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((graphObject instanceof org.cytoscape.model.CyNode) && (!(network.containsNode(((org.cytoscape.model.CyNode) (graphObject)))))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/1003/buggy-version/filter-impl.src.main.java.org.cytoscape.filter.internal.quickfind.util.QuickFindImpl.java", "BodyUseAPI": [], "Fixed commit": "00d417f7e4da7467fa2fd800f957c19d690f201d", "Url": "https://api.github.com/repos/cytoscape/cytoscape-impl", "Date": "2013-02-22T15:31:29Z"},
{"Line": "=>399", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((graphObject instanceof org.cytoscape.model.CyEdge) && (!(network.containsEdge(((org.cytoscape.model.CyEdge) (graphObject)))))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/1003/buggy-version/filter-impl.src.main.java.org.cytoscape.filter.internal.quickfind.util.QuickFindImpl.java", "BodyUseAPI": [], "Fixed commit": "00d417f7e4da7467fa2fd800f957c19d690f201d", "Url": "https://api.github.com/repos/cytoscape/cytoscape-impl", "Date": "2013-02-22T15:31:29Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (s.nodes.get(i).getParents().isEmpty()) { writer.write(((s.nodes.get(i).getValue(null).toString()) + \" \")); }else { java.util.List<java.lang.Boolean> bs = new java.util.ArrayList<java.lang.Boolean>(); for (int p = 0; p < parentSize; p++) { bs.add(false); } while (bs.contains(false)) { writer.write(((s.nodes.get(i).getValue(bs).toString()) + \" \")); bs = task1.File.fullAdder(bs, ((bs.size()) - 1)); } writer.write(((s.nodes.get(i).getValue(bs).toString()) + \" \")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/298/buggy-version/Ass3.src.task1.File.java", "BodyUseAPI": ["s.nodes.get(i).getValue(java.util.List<java.lang.Boolean>)", "s.nodes.get(i).getValue(null).toString()", "s.nodes.get(int)", "s.nodes.get(i).getValue(java.util.List<java.lang.Boolean>)", "s.nodes.get(i).getValue(bs).toString()", "java.io.BufferedWriter.write(((s.nodes.get(i).getValue(bs).toString()) + \" \"))", "s.nodes.get(int)", "java.io.BufferedWriter.write(((s.nodes.get(i).getValue(null).toString()) + \" \"))", "java.io.BufferedWriter.write(((s.nodes.get(i).getValue(bs).toString()) + \" \"))", "s.nodes.get(int)", "s.nodes.get(i).getValue(bs).toString()", "s.nodes.get(i).getValue(<nulltype>)"], "Fixed commit": "286a7342c216649b3d2f7080260e5a1c01926771", "Url": "https://api.github.com/repos/JonathanHolland/COMP3702", "Date": "2014-11-13T11:25:28Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (limit > 0) sb.append(topResultsTitle.get((limit - 1)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/6381/buggy-version/src.query.QueryResult.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "java.util.List<java.lang.String>.get(int)"], "Fixed commit": "0e61156edc53e4b04dd43a121bec8d98fdb1ad9f", "Url": "https://api.github.com/repos/vahid-g/database-capacity", "Date": "2017-04-18T18:26:42Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (entitySingletonContextNode == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/2336/buggy-version/core.src.main.java.xdi2.core.features.multiplicity.XdiSubGraph.java", "BodyUseAPI": [], "Fixed commit": "fefae750d4bd875ea7348f13ef50edf0569b3256", "Url": "https://api.github.com/repos/peacekeeper/xdi2", "Date": "2013-01-05T10:52:29Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (attributeSingletonContextNode == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/2336/buggy-version/core.src.main.java.xdi2.core.features.multiplicity.XdiSubGraph.java", "BodyUseAPI": [], "Fixed commit": "fefae750d4bd875ea7348f13ef50edf0569b3256", "Url": "https://api.github.com/repos/peacekeeper/xdi2", "Date": "2013-01-05T10:52:29Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (collectionContextNode == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/2336/buggy-version/core.src.main.java.xdi2.core.features.multiplicity.XdiSubGraph.java", "BodyUseAPI": [], "Fixed commit": "fefae750d4bd875ea7348f13ef50edf0569b3256", "Url": "https://api.github.com/repos/peacekeeper/xdi2", "Date": "2013-01-05T10:52:29Z"},
{"Line": "=>987", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((stmt.getWarnings()) != null) { java.lang.String sWarn = stmt.getWarnings().getMessage(); _returnValue.add(sWarn); org.homedns.mkh.databuffer.DataBuffer.LOG.debug((\"query message: \" + sWarn)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/2141/buggy-version/src.main.java.org.homedns.mkh.databuffer.DataBuffer.java", "BodyUseAPI": ["java.sql.CallableStatement.getWarnings()", "java.sql.SQLWarning.getMessage()"], "Fixed commit": "dfd973280a864588f98b0cb27d69e15a6a875b8e", "Url": "https://api.github.com/repos/khomisha/databuffer", "Date": "2017-05-03T06:32:24Z"},
{"Line": "=>1088", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (lastTag0.equals(\"<web>\")) { buffer.append(\"</ptr>\\n\"); }else if (lastTag0.equals(\"<phone>\")) { buffer.append(\"</phone>\\n\"); }else if (lastTag0.equals(\"<pubnum>\")) { buffer.append(\"</idno>\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/2578/buggy-version/grobid-core.src.main.java.org.grobid.core.engines.HeaderParser.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "ab398b4565a8dbf508f5ff7f2f1f68c72f12cc2e", "Url": "https://api.github.com/repos/kermitt2/grobid", "Date": "2013-09-05T04:16:15Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.silverpeas.core.index.search.model.QueryDescription.isTaxonomyUsed()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (taxonomySearch) { taxonomyResults = taxonomySearchProcessor.process(queryDescription, null); }else { taxonomyResults = java.util.Collections.emptyList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/4155/buggy-version/core-services.search.src.main.java.org.silverpeas.core.search.SearchService.java", "BodyUseAPI": [], "Fixed commit": "08fc73904fb6953f0cf78cd9d8cc68caefb41122", "Url": "https://api.github.com/repos/Silverpeas/Silverpeas-Core", "Date": "2016-11-07T15:52:18Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((transactionResult.getResult()) == (org.spongepowered.api.service.economy.transaction.ResultType.ACCOUNT_NO_FUNDS)) { player.sendMessage(org.spongepowered.api.text.Text.of(TextColors.GREEN, \"[Polis]: \", TextColors.DARK_RED, \"Error! \", TextColors.RED, \"Not enough funds! Deposit funds or setup taxes!\")); }else { player.sendMessage(org.spongepowered.api.text.Text.of(TextColors.GREEN, \"[Polis]: \", TextColors.DARK_RED, \"Error! \", TextColors.RED, \"An error occured while trying to withdraw from your Polis' bank.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/3836/buggy-version/src.main.java.io.github.hsyyid.polis.listeners.EntityMoveListener.java", "BodyUseAPI": [], "Fixed commit": "aee2429cfef4ba61fe4c5866d27fdf0d8ce955e4", "Url": "https://api.github.com/repos/hsyyid/Polis", "Date": "2016-02-16T22:13:06Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Polis.game.getServer().getChunkLayout().toChunk(player.getLocation().getBlockPosition())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (optionalChunk.isPresent()) { com.flowpowered.math.vector.Vector3i chunk = optionalChunk.get(); if ((io.github.hsyyid.polis.utils.ConfigManager.getClaims(playerTeamName)) < (io.github.hsyyid.polis.utils.ConfigManager.getClaimCap())) { if ((io.github.hsyyid.polis.utils.ConfigManager.getBalance(playerTeamName).compareTo(io.github.hsyyid.polis.utils.ConfigManager.getClaimCost())) >= 0) { org.spongepowered.api.service.economy.transaction.TransactionResult transactionResult = null; org.spongepowered.api.service.economy.account.Account account = Polis.economyService.getAccount(playerTeamName).orElse(null); if (account != null) transactionResult = account.withdraw(Polis.economyService.getDefaultCurrency(), io.github.hsyyid.polis.utils.ConfigManager.getClaimCost(), org.spongepowered.api.event.cause.Cause.of(player)); else { account = Polis.economyService.createVirtualAccount(playerTeamName).get(); account.deposit(Polis.economyService.getDefaultCurrency(), io.github.hsyyid.polis.utils.ConfigManager.getBalance(playerTeamName), org.spongepowered.api.event.cause.Cause.of(player)); transactionResult = account.withdraw(Polis.economyService.getDefaultCurrency(), io.github.hsyyid.polis.utils.ConfigManager.getClaimCost(), org.spongepowered.api.event.cause.Cause.of(player)); } if ((transactionResult.getResult()) == (org.spongepowered.api.service.economy.transaction.ResultType.SUCCESS)) { io.github.hsyyid.polis.utils.ConfigManager.claim(playerTeamName, player.getLocation().getExtent().getUniqueId(), chunk.getX(), chunk.getZ()); io.github.hsyyid.polis.utils.ConfigManager.withdrawFromTownBank(io.github.hsyyid.polis.utils.ConfigManager.getClaimCost(), playerTeamName); player.sendMessage(org.spongepowered.api.text.Text.builder().append(org.spongepowered.api.text.Text.of(TextColors.GREEN, \"[Polis]: \", TextColors.GOLD, ((\"Successfully claimed this location for \" + (io.github.hsyyid.polis.utils.ConfigManager.getClaimCost())) + \" \"))).append(Polis.economyService.getDefaultCurrency().getPluralDisplayName()).build()); }else if ((transactionResult.getResult()) == (org.spongepowered.api.service.economy.transaction.ResultType.ACCOUNT_NO_FUNDS)) { player.sendMessage(org.spongepowered.api.text.Text.of(TextColors.GREEN, \"[Polis]: \", TextColors.DARK_RED, \"Error! \", TextColors.RED, \"Not enough funds! Deposit funds or setup taxes!\")); }else { player.sendMessage(org.spongepowered.api.text.Text.of(TextColors.GREEN, \"[Polis]: \", TextColors.DARK_RED, \"Error! \", TextColors.RED, \"An error occured while trying to withdraw from your Polis' bank.\")); } }else { player.sendMessage(org.spongepowered.api.text.Text.of(TextColors.GREEN, \"[Polis]: \", TextColors.DARK_RED, \"Error! \", TextColors.RED, \"Your Polis does not have enough funds to claim this land! Deposit funds soon!\")); } }else { player.sendMessage(org.spongepowered.api.text.Text.of(TextColors.GREEN, \"[Polis]: \", TextColors.DARK_RED, \"Error! \", TextColors.RED, \"You already have the maximum number of claims!\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/3836/buggy-version/src.main.java.io.github.hsyyid.polis.listeners.EntityMoveListener.java", "BodyUseAPI": ["java.util.Optional<com.flowpowered.math.vector.Vector3i>.get()"], "Fixed commit": "aee2429cfef4ba61fe4c5866d27fdf0d8ce955e4", "Url": "https://api.github.com/repos/hsyyid/Polis", "Date": "2016-02-16T22:13:06Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((item.getMessage()) != null) && ((item.getMessage().indexOf(\"has the same concept mapping as Attribute\")) > (-1))) { isDuplicate = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/1080/buggy-version/software.SIW.src.java.gov.nih.nci.ncicb.cadsr.loader.ui.tree.TreeBuilder.java", "BodyUseAPI": [], "Fixed commit": "ef06973abc247668fa7f8f468810e6d7f2c8ab36", "Url": "https://api.github.com/repos/CBIIT/cadsr-semantic-tools", "Date": "2017-11-14T20:56:39Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (selectedFirst) { android.content.Intent colorActivityLauncher = new android.content.Intent(this, edu.temple.AndroidLab3.PaletteActivity.class); colorActivityLauncher.putExtra(\"Color\", colors[position]); startActivity(colorActivityLauncher); }else { selectedFirst = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/3677/buggy-version/app.src.main.java.edu.temple.AndroidLab3.CanvasActivity.java", "BodyUseAPI": [], "Fixed commit": "548c1c418b2694a8beb2dd2f54d7cead0ecbfc70", "Url": "https://api.github.com/repos/KyletheFox/AndroidLab3", "Date": "2016-09-27T15:12:10Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (f.isFile()) return net.schattenkind.androidLove.LoveStorage.FileType.FILE;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/2280/buggy-version/src.net.schattenkind.androidLove.LoveStorage.java", "BodyUseAPI": [], "Fixed commit": "7d5803b4872828200477bdb5f319846aaa4bde2e", "Url": "https://api.github.com/repos/hagish/love-android", "Date": "2011-11-06T01:16:26Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (f.isDirectory()) return net.schattenkind.androidLove.LoveStorage.FileType.DIR;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/2280/buggy-version/src.net.schattenkind.androidLove.LoveStorage.java", "BodyUseAPI": [], "Fixed commit": "7d5803b4872828200477bdb5f319846aaa4bde2e", "Url": "https://api.github.com/repos/hagish/love-android", "Date": "2011-11-06T01:16:26Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(player.getUniqueId().equals(github.scarsz.discordsrv.util.WebhookUtil.lastPlayer))) { github.scarsz.discordsrv.util.WebhookUtil.lastPlayer = player.getUniqueId(); github.scarsz.discordsrv.util.WebhookUtil.currentWebhook = ((github.scarsz.discordsrv.util.WebhookUtil.currentWebhook) == 1) ? 0 : 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/3254/buggy-version/src.main.java.github.scarsz.discordsrv.util.WebhookUtil.java", "BodyUseAPI": ["org.bukkit.entity.Player.getUniqueId()"], "Fixed commit": "3324b21fddf327e277493161d291024e0ff91553", "Url": "https://api.github.com/repos/BillyGalbreath/DiscordSRV", "Date": "2017-08-11T19:21:17Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (imperialExtraDescription.isEmpty()) { mDescriptionImperial = description; }else { mDescriptionImperial = java.lang.String.format(\"%s (%s)\", description, imperialExtraDescription); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/5663/buggy-version/app.src.main.java.com.roamingroths.cmcc.data.Observation.java", "BodyUseAPI": [], "Fixed commit": "cb8b7cb3ad50666cb6f2cfef6559bec968444fdb", "Url": "https://api.github.com/repos/parkeroth/ChartyMcChartChart", "Date": "2017-04-22T21:05:06Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (metricExtraDescription.isEmpty()) { mDescriptionMetric = description; }else { mDescriptionMetric = java.lang.String.format(\"%s (%s)\", description, metricExtraDescription); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/5663/buggy-version/app.src.main.java.com.roamingroths.cmcc.data.Observation.java", "BodyUseAPI": [], "Fixed commit": "cb8b7cb3ad50666cb6f2cfef6559bec968444fdb", "Url": "https://api.github.com/repos/parkeroth/ChartyMcChartChart", "Date": "2017-04-22T21:05:06Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(areAnyValuesNull(values))) { objectMapper.deleteObsoleteIndex(row, index, values); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/4691/buggy-version/src.main.java.com.pardot.rhombus.UpdateProcessor.java", "BodyUseAPI": ["com.pardot.rhombus.ObjectMapper.deleteObsoleteIndex(com.pardot.rhombus.IndexUpdateRow,com.pardot.rhombus.CIndex,java.util.Map<java.lang.String, java.lang.Object>)"], "Fixed commit": "f6b1651aaeecd64838bd92748dc93fb379265b2a", "Url": "https://api.github.com/repos/Pardot/Rhombus", "Date": "2014-04-21T23:30:17Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (view == (buttonAlarm)) { startActivity(new android.content.Intent(this, com.example.chavin.holdem.AlarmActivity.class)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/8832/buggy-version/app.src.main.java.com.example.chavin.holdem.ProfileActivity.java", "BodyUseAPI": [], "Fixed commit": "c18a043bfd4edd6575ad70b096d771e467999e07", "Url": "https://api.github.com/repos/chavin96/Holdem", "Date": "2017-05-10T07:25:46Z"},
{"Line": "=>845", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isRequestor(message)) { if (maps == null) { org.apache.cxf.message.Message m = message.getExchange().getOutMessage(); maps = org.apache.cxf.ws.addressing.ContextUtils.retrieveMAPs(m, false, true, false); if (maps != null) { org.apache.cxf.message.Exchange ex = uncorrelatedExchanges.get(maps.getMessageID().getValue()); if (ex == (message.getExchange())) { uncorrelatedExchanges.remove(maps.getMessageID().getValue()); org.apache.cxf.ws.addressing.soap.MAPCodec.LOG.log(java.util.logging.Level.WARNING, \"RESPONSE_NOT_USING_WSADDRESSING\"); } } }else if ((((maps.getRelatesTo()) == null) && ((maps.getAction()) != null)) && (Names.WSA_DEFAULT_FAULT_ACTION.equals(maps.getAction().getValue()))) { org.apache.cxf.message.Message m = message.getExchange().getOutMessage(); maps = org.apache.cxf.ws.addressing.ContextUtils.retrieveMAPs(m, false, true, false); if (maps != null) { uncorrelatedExchanges.remove(maps.getMessageID().getValue()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/1499/buggy-version/rt.ws.addr.src.main.java.org.apache.cxf.ws.addressing.soap.MAPCodec.java", "BodyUseAPI": ["org.apache.cxf.binding.soap.SoapMessage.getExchange()", "message.getExchange().getOutMessage()", "org.apache.cxf.binding.soap.SoapMessage.getExchange()", "org.apache.cxf.binding.soap.SoapMessage.getExchange()", "message.getExchange().getOutMessage()"], "Fixed commit": "80c3ac62fd401aa293a839a4725f017bfb78325f", "Url": "https://api.github.com/repos/apache/cxf", "Date": "2015-09-16T16:58:14Z"},
{"Line": "=>862", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (maps != null) { uncorrelatedExchanges.remove(maps.getMessageID().getValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/1499/buggy-version/rt.ws.addr.src.main.java.org.apache.cxf.ws.addressing.soap.MAPCodec.java", "BodyUseAPI": ["org.apache.cxf.ws.addressing.AddressingProperties.getMessageID()", "maps.getMessageID().getValue()", "java.util.Map<java.lang.String, org.apache.cxf.message.Exchange>.remove(maps.getMessageID().getValue())"], "Fixed commit": "80c3ac62fd401aa293a839a4725f017bfb78325f", "Url": "https://api.github.com/repos/apache/cxf", "Date": "2015-09-16T16:58:14Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.TimeZone.getDefault()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (tz.inDaylightTime(new java.util.Date())) timeAdd = timeAdd - 3600000L;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/4289/buggy-version/src.com.ht1.cc.cgm.DexcomReader.java", "BodyUseAPI": [], "Fixed commit": "bbdef8628ca8abd57b3aa21a641f36bb7debe55c", "Url": "https://api.github.com/repos/jasoncalabrese/original-android-cgm", "Date": "2014-03-09T16:01:24Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(abortLessonDelete)) de.oerntec.votenote.Database.DBLessons.getInstance().deleteAllEntriesForGroup(subjectId);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/3653/buggy-version/app.src.main.java.de.oerntec.votenote.SubjectManagerStuff.SubjectManagementActivity.java", "BodyUseAPI": [], "Fixed commit": "5db140797b4d9acef94a18d64018ef68ca8ec392", "Url": "https://api.github.com/repos/enra64/Votenote", "Date": "2015-09-30T20:52:04Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.util.Objects.equals(object.getString(\"type\"), \"teacher_picker\")) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/5535/buggy-version/app.src.main.java.com.bukhmastov.cdoitmo.activities.ScheduleExamsSearchActivity.java", "BodyUseAPI": [], "Fixed commit": "98848227f9cac2e519a1fc113b6e015589b36dd6", "Url": "https://api.github.com/repos/bukhmastov/CDOITMO", "Date": "2017-05-08T17:07:55Z"},
{"Line": "=>876", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((queryDimension.getDimension().numberOfChild()) == 0) { noDictionaryDimensionBlockIndex.add(columnOrdinalToBlockIndexMapping.get(queryDimension.getDimension().getOrdinal())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/8104/buggy-version/core.src.main.java.org.carbondata.query.carbon.executor.util.QueryUtil.java", "BodyUseAPI": ["queryDimension.getDimension().getOrdinal()", "java.util.List<java.lang.Integer>.add(java.lang.Integer)", "java.util.Map<java.lang.Integer, java.lang.Integer>.get(queryDimension.getDimension().getOrdinal())", "org.carbondata.query.carbon.model.QueryDimension.getDimension()"], "Fixed commit": "8034da1898eea811a1c25cdcab42ff63b8747273", "Url": "https://api.github.com/repos/mohammadshahidkhan/carbondata-1", "Date": "2016-07-18T11:25:11Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(validateForm())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/9193/buggy-version/app.src.main.java.com.computermon.monitorapp.RegisterActivity.java", "BodyUseAPI": [], "Fixed commit": "ebc42a2585ed879805a1217bf52ac60cc0910b17", "Url": "https://api.github.com/repos/mucyomiller/computermon-android", "Date": "2017-04-23T01:27:24Z"},
{"Line": "=>589", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((match.getCrosslinker()) != null) { xlmas = match.getCrosslinker().getCrossLinkedMass(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/1584/buggy-version/src.main.java.org.rappsilber.xiAnnotator.java", "BodyUseAPI": ["match.getCrosslinker().getCrossLinkedMass()", "rappsilber.ms.spectra.match.MatchedXlinkedPeptide.getCrosslinker()"], "Fixed commit": "8601a6e07b662c90579a0b7100f5137cc3062c09", "Url": "https://api.github.com/repos/Rappsilber-Laboratory/xiAnnotator", "Date": "2017-07-06T07:58:23Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.silverpeas.util.StringUtil.isInteger(strDomainId)) { loginUrl += \"?DomainId=\" + strDomainId; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/2804/buggy-version/war-core.src.main.java.com.silverpeas.core.AutoRedirectServlet.java", "BodyUseAPI": [], "Fixed commit": "78cb379d5347f77f45d89acaf3f2c456dd117f34", "Url": "https://api.github.com/repos/SilverTeamWork/Silverpeas-Core", "Date": "2014-11-27T15:19:14Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(currfilePath.exists())) || (!(currfilePath.isDirectory()))) { log.info(\"create file path {} result: {}\", basefilePath.getAbsolutePath(), currfilePath.mkdir()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/3326/buggy-version/src.main.java.com.it.audit.util.FileUtils.java", "BodyUseAPI": ["com.it.audit.util.FileUtils.info(java.lang.String,java.lang.String,boolean)", "java.io.File.mkdir()"], "Fixed commit": "77ffd8c022aa6c30f3b7d360a32575222b6f5879", "Url": "https://api.github.com/repos/xcnote/it-audit", "Date": "2017-01-14T05:42:57Z"},
{"Line": "=>474", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (allLinks) { type = ((fieldValue.charAt(0)) == (com.orientechnologies.orient.core.serialization.serializer.OStringSerializerHelper.LIST_BEGIN)) ? com.orientechnologies.orient.core.metadata.schema.OType.LINKLIST : com.orientechnologies.orient.core.metadata.schema.OType.LINKSET; linkedType = com.orientechnologies.orient.core.metadata.schema.OType.LINK; int classSeparatorPos = value.indexOf(OStringSerializerHelper.CLASS_SEPARATOR); if (classSeparatorPos > (-1)) { java.lang.String className = value.substring(1, classSeparatorPos); if (className != null) linkedClass = ODatabaseRecordThreadLocal.INSTANCE.get().getMetadata().getSchema().getClass(className); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/5063/buggy-version/core.src.main.java.com.orientechnologies.orient.core.serialization.serializer.record.string.ORecordSerializerSchemaAware2CSV.java", "BodyUseAPI": [], "Fixed commit": "72cb3608a03f5d223005479306415f20f503cc97", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2013-07-13T14:51:50Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (TTTCore.mg.getArena(args[1].toLowerCase()).isPresent()) { TTTCore.locale.getLocalizable(\"error.arena.already-exists\").withPrefix(Color.ERROR).sendTo(sender); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/8148/buggy-version/src.main.java.net.caseif.ttt.command.handler.arena.ImportCommand.java", "BodyUseAPI": [], "Fixed commit": "7bc638c7bbf8219167359903e2b2f84e0671da5f", "Url": "https://api.github.com/repos/caseif/TTT", "Date": "2016-01-08T04:13:32Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["lapd.databases.neo4j.Queries.getHead(org.neo4j.graphdb.Node)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (exceptionNode.hasProperty(PropertyNames.STRING)) if (exceptionNode.getProperty(PropertyNames.STRING).equals(\"Exception\")) results.add(type.accept(new lapd.databases.neo4j.GraphDbValueRetrievalVisitor(catchRefNode, vf, ts)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/4350/buggy-version/src.lapd.databases.neo4j.Queries.java", "BodyUseAPI": ["exceptionNode.getProperty(PropertyNames.STRING).equals(java.lang.String)", "org.neo4j.graphdb.Node.getProperty(PropertyNames.STRING)"], "Fixed commit": "a5229b0f44e46e267cf6b61d6d5ffc773a3d44c9", "Url": "https://api.github.com/repos/wouterkwakernaak/lapd", "Date": "2014-01-20T10:06:31Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((((((tokens.length) > position) && (position > 2)) && (tokens[(position - 2)].matchesPosTagRegex(\"VER:3:PLU:.+\"))) && (tokens[(position - 1)].getToken().equals(\"sie\"))) && (tokens[position].getToken().equals(\"sie\"))) && (tokens[(position + 1)].hasPosTag(\"ZUS\"))) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/6779/buggy-version/languagetool-language-modules.de.src.main.java.org.languagetool.rules.de.GermanWordRepeatRule.java", "BodyUseAPI": [], "Fixed commit": "40a9ddcdeb9f4d4f38f3b5d5a72da7c1b41c7371", "Url": "https://api.github.com/repos/languagetool-org/languagetool", "Date": "2017-11-14T21:42:56Z"},
{"Line": "=>1105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(isStringEmptyOrNull(from.getIdentificationBarcode()))) { to.setIdentificationBarcode(from.getIdentificationBarcode()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/297/buggy-version/miso-dto.src.main.java.uk.ac.bbsrc.tgac.miso.dto.Dtos.java", "BodyUseAPI": ["uk.ac.bbsrc.tgac.miso.dto.DilutionDto.getIdentificationBarcode()", "uk.ac.bbsrc.tgac.miso.core.data.impl.LibraryDilution.setIdentificationBarcode(from.getIdentificationBarcode())"], "Fixed commit": "f906fe5e01f048fb59add5752882f067b89e58ed", "Url": "https://api.github.com/repos/TGAC/miso-lims", "Date": "2016-08-17T15:10:27Z"},
{"Line": "=>1099", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((from.getId()) != null) { to.setId(from.getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/297/buggy-version/miso-dto.src.main.java.uk.ac.bbsrc.tgac.miso.dto.Dtos.java", "BodyUseAPI": ["uk.ac.bbsrc.tgac.miso.core.data.impl.LibraryDilution.setId(from.getId())", "uk.ac.bbsrc.tgac.miso.dto.DilutionDto.getId()"], "Fixed commit": "f906fe5e01f048fb59add5752882f067b89e58ed", "Url": "https://api.github.com/repos/TGAC/miso-lims", "Date": "2016-08-17T15:10:27Z"},
{"Line": "=>1102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(isStringEmptyOrNull(from.getName()))) { to.setName(from.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/297/buggy-version/miso-dto.src.main.java.uk.ac.bbsrc.tgac.miso.dto.Dtos.java", "BodyUseAPI": ["uk.ac.bbsrc.tgac.miso.dto.DilutionDto.getName()", "uk.ac.bbsrc.tgac.miso.core.data.impl.LibraryDilution.setName(from.getName())"], "Fixed commit": "f906fe5e01f048fb59add5752882f067b89e58ed", "Url": "https://api.github.com/repos/TGAC/miso-lims", "Date": "2016-08-17T15:10:27Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (termIsValid(iTerm)) { mTermManager.update(iTerm); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/1418/buggy-version/src.com.selagroup.schedu.activities.TermActivity.java", "BodyUseAPI": ["com.selagroup.schedu.managers.TermManager.update(com.selagroup.schedu.model.Term)"], "Fixed commit": "a35750d937af63d4b3d59006b925685fc2027362", "Url": "https://api.github.com/repos/marred01/SchedU", "Date": "2012-08-10T16:31:38Z"},
{"Line": "=>309", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (countO == 3) return 3;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/4855/buggy-version/src.core.GameWorld.java", "BodyUseAPI": [], "Fixed commit": "07fff6c345d3335de30b6eb3c6e289ba526c0fe5", "Url": "https://api.github.com/repos/brady994/CandyDLV", "Date": "2016-03-17T18:25:31Z"},
{"Line": "=>315", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (countO > 3) return 4;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/4855/buggy-version/src.core.GameWorld.java", "BodyUseAPI": [], "Fixed commit": "07fff6c345d3335de30b6eb3c6e289ba526c0fe5", "Url": "https://api.github.com/repos/brady994/CandyDLV", "Date": "2016-03-17T18:25:31Z"},
{"Line": "=>313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (countO > 3) return 4;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/4855/buggy-version/src.core.GameWorld.java", "BodyUseAPI": [], "Fixed commit": "07fff6c345d3335de30b6eb3c6e289ba526c0fe5", "Url": "https://api.github.com/repos/brady994/CandyDLV", "Date": "2016-03-17T18:25:31Z"},
{"Line": "=>311", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (countV == 3) return 3;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/4855/buggy-version/src.core.GameWorld.java", "BodyUseAPI": [], "Fixed commit": "07fff6c345d3335de30b6eb3c6e289ba526c0fe5", "Url": "https://api.github.com/repos/brady994/CandyDLV", "Date": "2016-03-17T18:25:31Z"},
{"Line": "=>317", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (countO < 3) return 2;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/4855/buggy-version/src.core.GameWorld.java", "BodyUseAPI": [], "Fixed commit": "07fff6c345d3335de30b6eb3c6e289ba526c0fe5", "Url": "https://api.github.com/repos/brady994/CandyDLV", "Date": "2016-03-17T18:25:31Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.kafka.common.config.AbstractConfig.getString(ConfigParam.MAPPING.getName())", "org.apache.kafka.common.config.AbstractConfig.getString(ConfigParam.DEFAULT_TYPE.getName())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((type != null) && (mapping != null)) { elasticsearchClient.putMappingIfNotExists(index, type, mapping); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/9086/buggy-version/src.main.java.ru.sbrf.ofep.kafka.ElasticTask.java", "BodyUseAPI": ["ru.sbrf.ofep.kafka.elastic.ElasticsearchClient.putMappingIfNotExists(java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "d8ac06f5160ecf2dac1fb0eaad0dc29f1dd4288c", "Url": "https://api.github.com/repos/cherkovskiyandrey/ElasticSearchConnector", "Date": "2016-12-06T14:49:05Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(offsets.isEmpty())) { context.offset(offsets); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/9086/buggy-version/src.main.java.ru.sbrf.ofep.kafka.ElasticTask.java", "BodyUseAPI": ["ru.sbrf.ofep.kafka.ElasticTask.offset(java.util.Map<org.apache.kafka.common.TopicPartition, java.lang.Long>)"], "Fixed commit": "d8ac06f5160ecf2dac1fb0eaad0dc29f1dd4288c", "Url": "https://api.github.com/repos/cherkovskiyandrey/ElasticSearchConnector", "Date": "2016-12-06T14:49:05Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.player.PlayerJoinEvent.getPlayer()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (vanished.contains(player.getUniqueId())) { for (org.bukkit.entity.Player p : org.bukkit.Bukkit.getOnlinePlayers()) p.hidePlayer(player); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/7280/buggy-version/src.com.redstoner.modules.vanish.Vanish.java", "BodyUseAPI": ["org.bukkit.entity.Player.hidePlayer(org.bukkit.entity.Player)"], "Fixed commit": "f8c2665c84fb3f0c53a554d9dcc2b91f1b0b019f", "Url": "https://api.github.com/repos/RedstonerServer/ModuleLoader", "Date": "2017-02-03T20:53:46Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hudson.model.Run.getParent()", "argelbargel.jenkins.plugins.modules.ModuleDependencyGraph.get()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(dependencyGraph.hasIndirectDependencies(parent, downstream))) { addTriggeredAndBlockedBuilds(runs, ((java.util.List<hudson.model.Run<?, ?>>) (downstream.getBuilds())), payload); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/3346/buggy-version/src.main.java.argelbargel.jenkins.plugins.modules.graph.ModuleBuildGraph.java", "BodyUseAPI": ["argelbargel.jenkins.plugins.modules.graph.ModuleBuildGraph.addTriggeredAndBlockedBuilds(java.util.List<hudson.model.Run>,((java.util.List<hudson.model.Run<?, ?>>) (downstream.getBuilds())),hudson.model.Run)", "hudson.model.Job.getBuilds()"], "Fixed commit": "66e112966edde9d8fa1ebf944556758017bf98b0", "Url": "https://api.github.com/repos/Argelbargel/jenkins-modules-plugin", "Date": "2017-05-24T17:01:44Z"},
{"Line": "=>465", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(channelStateManager.isDisabled())) { channelStateManager.gotoState(io.grpc.ConnectivityState.SHUTDOWN); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/8041/buggy-version/core.src.main.java.io.grpc.internal.ManagedChannelImpl.java", "BodyUseAPI": ["io.grpc.internal.ConnectivityStateManager.gotoState(io.grpc.ConnectivityState.SHUTDOWN)"], "Fixed commit": "18970e6ef310fda38e577de2a30c71c6c44f1e66", "Url": "https://api.github.com/repos/rmichela/grpc-java", "Date": "2017-08-01T17:26:02Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.block.BlockState.getData()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (door.isTopHalf()) { arena.getObjectManager().getArenaDoor(event.getBlock().getRelative(BlockFace.DOWN)).blockBreak(); }else { arena.getObjectManager().getArenaDoor(event.getBlock()).blockBreak(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/8045/buggy-version/src.main.java.com.AustinPilz.FridayThe13th.Listener.BlockListener.java", "BodyUseAPI": [], "Fixed commit": "bdc9f2385cb6413bd46700d1327e88447497e8a1", "Url": "https://api.github.com/repos/austinpilz/FridayThe13th", "Date": "2017-09-06T21:08:21Z"},
{"Line": "=>519", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (alpha > 1) { alpha = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/7943/buggy-version/app.src.main.java.com.yalin.freevideo.ui.widget.dragview.DraggableView.java", "BodyUseAPI": [], "Fixed commit": "6c31f0937f042da88e4967b95bcf2a7afb976511", "Url": "https://api.github.com/repos/jinkg/FreeVideo", "Date": "2016-12-13T03:00:13Z"},
{"Line": "=>660", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mLocationRequestUpdatesEnabled) { mLocationManager.removeUpdates(mLocationListener); mLocationRequestUpdatesEnabled = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/7617/buggy-version/sdk.src.ru.wapstart.plus1.sdk.Plus1BannerAsker.java", "BodyUseAPI": [], "Fixed commit": "0f7c7e83421ccd73c4ffc54a95d82013440cfd40", "Url": "https://api.github.com/repos/WapStart/plus1-android-sdk", "Date": "2014-05-23T16:25:38Z"},
{"Line": "=>1582", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.aksw.sparqlify.core.algorithms.CandidateViewSelectorBase.getRestrictions2(com.hp.hpl.jena.sparql.algebra.Op)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (tmp != null) { subRestrictions.stateRestriction(tmp); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/5173/buggy-version/sparqlify-core.src.main.java.org.aksw.sparqlify.core.algorithms.CandidateViewSelectorBase.java", "BodyUseAPI": ["org.aksw.sparqlify.restriction.RestrictionManagerImpl.stateRestriction(org.aksw.sparqlify.restriction.RestrictionManagerImpl)"], "Fixed commit": "d32a468bb0e7e6e4432fc4a27f4319aabd6ac2e9", "Url": "https://api.github.com/repos/AKSW/Sparqlify", "Date": "2014-01-20T23:39:56Z"},
{"Line": "=>703", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rm == null) { throw new java.lang.RuntimeException(\"Should not happen\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/5173/buggy-version/sparqlify-core.src.main.java.org.aksw.sparqlify.restriction.RestrictionManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "d32a468bb0e7e6e4432fc4a27f4319aabd6ac2e9", "Url": "https://api.github.com/repos/AKSW/Sparqlify", "Date": "2014-01-20T23:39:56Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (params != null) { java.util.Iterator<org.romaframework.core.schema.SchemaParameter> param = getParameterIterator(); java.lang.Object[] newValues = new java.lang.Object[params.length]; int i = 0; while (param.hasNext()) { org.romaframework.core.schema.SchemaParameter par = param.next(); newValues[i] = convertValue(params[i], par.getType()); i++; } value = invokeFinal(iContent, newValues); }else { value = invokeFinal(iContent, params); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/6238/buggy-version/src.org.romaframework.core.schema.SchemaEvent.java", "BodyUseAPI": ["org.romaframework.core.schema.SchemaEvent.convertValue(java.lang.Object,par.getType())", "org.romaframework.core.schema.SchemaEvent.invokeFinal(java.lang.Object,java.lang.Object[])"], "Fixed commit": "5f06f3a4cf2a24e336b4a15978eca29f5b5b6616", "Url": "https://api.github.com/repos/romaframework/core", "Date": "2012-04-13T14:14:29Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (futurePeerConnection == null) { setFailed(\"FuturePeerConnection is null\"); }else if (!(futurePeerConnection.getObject().channelFuture().channel().isActive())) { setFailed(\"Peer connection is not active\"); }else if (!(futurePeerConnection.getObject().channelFuture().channel().isOpen())) { setFailed(\"Peer connection is not open\"); }else { this.futurePeerConnection = futurePeerConnection; type = FutureType.OK; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/4859/buggy-version/nat.src.main.java.net.tomp2p.relay.RelayConnectionFuture.java", "BodyUseAPI": ["net.tomp2p.futures.FuturePeerConnection.getObject()", "futurePeerConnection.getObject().channelFuture().channel().isOpen()", "futurePeerConnection.getObject().channelFuture().channel().isActive()", "futurePeerConnection.getObject().channelFuture().channel()", "futurePeerConnection.getObject().channelFuture()", "net.tomp2p.futures.FuturePeerConnection.getObject()", "futurePeerConnection.getObject().channelFuture().channel()", "futurePeerConnection.getObject().channelFuture()"], "Fixed commit": "97da859969e46118a6fc92f4a1ad4068f637a987", "Url": "https://api.github.com/repos/omnibrain/TomP2P", "Date": "2014-02-27T13:38:51Z"},
{"Line": "=>2030", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getRGBChannelCount()) == 1) || ((getRGBChannelCount()) == (getSizeC()))) { if (((getSizeC()) > 1) && ((getSizeT()) > 1)) { ms.dimensionOrder += \"C\"; } for (java.lang.Long nBytes : bytes) { java.lang.String axis = bytesPerAxis.get(nBytes); if ((ms.dimensionOrder.indexOf(axis)) == (-1)) { ms.dimensionOrder += axis; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/2256/buggy-version/components.formats-gpl.src.loci.formats.in.LIFReader.java", "BodyUseAPI": [], "Fixed commit": "98bfa83cc1a69eaba702e418a30553f5652f1a8e", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2016-04-05T03:01:19Z"},
{"Line": "=>563", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.stef.gpstracker.DBHelper.getAllPoints()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(list.isEmpty())) { com.google.maps.android.heatmaps.HeatmapTileProvider mProvider = new com.google.maps.android.heatmaps.HeatmapTileProvider.Builder().data(list).build(); com.google.android.gms.maps.model.TileOverlay mOverlay = map.addTileOverlay(new com.google.android.gms.maps.model.TileOverlayOptions().tileProvider(mProvider)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/8552/buggy-version/app.src.main.java.com.example.stef.gpstracker.MainActivity.java", "BodyUseAPI": ["new com.google.maps.android.heatmaps.HeatmapTileProvider.Builder().data(list).build()", "com.google.maps.android.heatmaps.HeatmapTileProvider.Builder.data(java.util.ArrayList<com.google.android.gms.maps.model.LatLng>)"], "Fixed commit": "d607578dcf14f0d3eb05c06a4923bdd82255d95f", "Url": "https://api.github.com/repos/CarlBarks/GPS-and-Activity-Tracker", "Date": "2016-03-18T16:47:43Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.stef.gpstracker.DBHelper.getAllPointsActivity()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(l2.isEmpty())) { if ((l2.size()) > 1) { for (int i = 1; i < 100; i++) { java.lang.System.out.println((((l2.get(((l2.size()) - i))) + \" \") + (l3.get(((l3.size()) - i))))); } }else { java.lang.System.out.println(\"List is empty or bigger than one\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/8552/buggy-version/app.src.main.java.com.example.stef.gpstracker.MainActivity.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.get(int)", "java.io.PrintStream.println(java.lang.String)", "java.util.ArrayList<java.lang.String>.size()", "java.util.ArrayList<java.lang.String>.size()"], "Fixed commit": "d607578dcf14f0d3eb05c06a4923bdd82255d95f", "Url": "https://api.github.com/repos/CarlBarks/GPS-and-Activity-Tracker", "Date": "2016-03-18T16:47:43Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (activity.isComment()) { return org.exoplatform.social.notification.LinkProviderUtils.getOpenLink(org.exoplatform.social.notification.Utils.getActivityManager().getParentActivity(activity)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/1642/buggy-version/component.notification.src.main.java.org.exoplatform.social.notification.LinkProviderUtils.java", "BodyUseAPI": ["org.exoplatform.social.notification.LinkProviderUtils.getOpenLink(org.exoplatform.social.notification.Utils.getActivityManager().getParentActivity(activity))", "org.exoplatform.social.notification.Utils.getActivityManager().getParentActivity(org.exoplatform.social.core.activity.model.ExoSocialActivity)"], "Fixed commit": "d89acac988a6af3473b93c87b7bc20d3b8dfc267", "Url": "https://api.github.com/repos/exodev/social", "Date": "2016-08-24T11:35:04Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((imageFile) != null) { builder.append(\" image : \").append(imageFile.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/367/buggy-version/src.main.java.org.rphdyt.library.model.Book.java", "BodyUseAPI": [], "Fixed commit": "7a003cb6784e84356f13972d7cce7211ef22d59d", "Url": "https://api.github.com/repos/ariphidayat/rphdyt-library", "Date": "2016-07-21T02:08:24Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.rphdyt.library.service.BookService.getBook(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((book.getImageFile()) != null) { response.setContentType(MediaType.IMAGE_PNG_VALUE); response.getOutputStream().write(book.getImageFile()); response.getOutputStream().close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/367/buggy-version/src.main.java.org.rphdyt.library.controller.BookController.java", "BodyUseAPI": ["response.getOutputStream().write(book.getImageFile())", "org.rphdyt.library.model.Book.getImageFile()"], "Fixed commit": "7a003cb6784e84356f13972d7cce7211ef22d59d", "Url": "https://api.github.com/repos/ariphidayat/rphdyt-library", "Date": "2016-07-21T02:08:24Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((m_bundleClassLoader) == null) { return super.hashCode(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/4310/buggy-version/pax-web-jsp.src.main.java.org.ops4j.pax.web.jsp.internal.JasperClassLoader.java", "BodyUseAPI": [], "Fixed commit": "5d9f422cbe654c52992847d7cab2793b24123255", "Url": "https://api.github.com/repos/ops4j/org.ops4j.pax.web", "Date": "2012-11-15T10:01:27Z"},
{"Line": "=>3149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (o == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/9144/buggy-version/src.main.java.core.com.giisoo.core.bean.Bean.java", "BodyUseAPI": [], "Fixed commit": "4fb9f373aa5bb60d8e4a9a6ae3fb947d2d917d8e", "Url": "https://api.github.com/repos/s20000/webgiisoo", "Date": "2015-09-08T04:23:39Z"},
{"Line": "=>3155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((o instanceof java.util.List) || (o instanceof java.util.Map)) && (!(name.endsWith(\"_obj\")))) { jo.put(name, o); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/9144/buggy-version/src.main.java.core.com.giisoo.core.bean.Bean.java", "BodyUseAPI": ["net.sf.json.JSONObject.put(java.lang.String,java.lang.Object)"], "Fixed commit": "4fb9f373aa5bb60d8e4a9a6ae3fb947d2d917d8e", "Url": "https://api.github.com/repos/s20000/webgiisoo", "Date": "2015-09-08T04:23:39Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (t1.before(t2)) { r += 24 * 60; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/3939/buggy-version/ArabicaExpress.src.ricerca.TrainState.java", "BodyUseAPI": [], "Fixed commit": "ab6a84759803cb7b77da7f0eb7ea42367ce1a4a8", "Url": "https://api.github.com/repos/GiulioGx/ArabicaExpress", "Date": "2013-01-16T19:26:22Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (phased != null) { queryOptions.put(\"phased\", phased); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/1535/buggy-version/cellbase-server.src.main.java.org.opencb.cellbase.server.ws.genomic.VariantWSServer.java", "BodyUseAPI": ["org.opencb.cellbase.server.ws.genomic.VariantWSServer.put(java.lang.String,java.lang.Boolean)"], "Fixed commit": "4f37ecbade9db5fb1502828be95ccbfd0b1c61b4", "Url": "https://api.github.com/repos/opencb/cellbase", "Date": "2016-10-20T12:51:48Z"},
{"Line": "=>1201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((paParams.getSignature_filterMetric()) == (paParams.MANN_WHIT)) { if (((value != null) && ((value.doubleValue()) >= 0.0)) && ((value.intValue()) <= 1.0)) { paParams.setSignature_Mann_Whit_Cutoff(value.doubleValue()); }else { source.setValue(paParams.getDefault_signature_Mann_Whit_Cutoff()); message += \"The filter cutoff must be greater than or equal 0.0 and less than or equal to 1.0\"; invalid = true; } }else if ((paParams.getSignature_filterMetric()) == (paParams.PERCENT)) { if (((value != null) && ((value.intValue()) >= 0)) && ((value.intValue()) <= 100)) { paParams.setFilterValue(value.intValue()); }else { source.setValue(paParams.getFilterValue()); message += \"The filter cutoff must be greater than or equal 0 and less than or equal to 100.\"; invalid = true; } }else if ((paParams.getSignature_filterMetric()) == (paParams.NUMBER)) { if ((value != null) && ((value.intValue()) >= 0)) { paParams.setFilterValue(value.intValue()); }else { source.setValue(paParams.getFilterValue()); message += \"The filter cutoff must be greater than or equal 0.\"; invalid = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/375/buggy-version/EnrichmentMapPlugin.src.main.java.org.baderlab.csplugins.enrichmentmap.view.PostAnalysisInputPanel.java", "BodyUseAPI": ["org.baderlab.csplugins.enrichmentmap.PostAnalysisParameters.getDefault_signature_Mann_Whit_Cutoff()", "org.baderlab.csplugins.enrichmentmap.PostAnalysisParameters.setSignature_Mann_Whit_Cutoff(double)", "org.baderlab.csplugins.enrichmentmap.PostAnalysisParameters.getSignature_filterMetric()", "org.baderlab.csplugins.enrichmentmap.PostAnalysisParameters.setFilterValue(int)", "javax.swing.JFormattedTextField.setValue(paParams.getFilterValue())", "javax.swing.JFormattedTextField.setValue(paParams.getFilterValue())", "javax.swing.JFormattedTextField.setValue(paParams.getDefault_signature_Mann_Whit_Cutoff())", "org.baderlab.csplugins.enrichmentmap.PostAnalysisParameters.setFilterValue(int)", "org.baderlab.csplugins.enrichmentmap.PostAnalysisParameters.getFilterValue()", "org.baderlab.csplugins.enrichmentmap.PostAnalysisParameters.getSignature_filterMetric()", "org.baderlab.csplugins.enrichmentmap.PostAnalysisParameters.getFilterValue()"], "Fixed commit": "6a97edc3523d19ea0da848228e5652d1582dd8d1", "Url": "https://api.github.com/repos/BaderLab/EnrichmentMapApp", "Date": "2014-03-31T16:56:49Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this._rngSeed) <= 0) { this._rngSeed = radlab.rain.workload.rubis.RubisConfiguration.DEFAULT_RNG_SEED; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/5113/buggy-version/src.radlab.rain.workload.rubis.RubisConfiguration.java", "BodyUseAPI": [], "Fixed commit": "7dbfbdc94dab150d6d743deee0580f2bdb4dbfe3", "Url": "https://api.github.com/repos/sguazt/rain-workload-toolkit", "Date": "2013-07-15T19:58:15Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((inputOracleJaxb.getSelectQuery()) == null) { inputRDBMSEntity.setTableName((((inputOracleJaxb.getSchemaName().getValue()) + \".\") + (inputOracleJaxb.getTableName().getValue()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/3809/buggy-version/hydrograph.engine.hydrograph.engine.core.src.main.java.hydrograph.engine.core.component.generator.InputOracleEntityGenerator.java", "BodyUseAPI": ["inputOracleJaxb.getTableName().getValue()", "hydrograph.engine.jaxb.inputtypes.Oracle.getTableName()", "inputOracleJaxb.getSchemaName().getValue()", "hydrograph.engine.jaxb.inputtypes.Oracle.getSchemaName()", "hydrograph.engine.core.component.entity.InputRDBMSEntity.setTableName((((inputOracleJaxb.getSchemaName().getValue()) + \".\") + (inputOracleJaxb.getTableName().getValue())))"], "Fixed commit": "76d97e27959525895ff0f7a249f3be93fc5c92f3", "Url": "https://api.github.com/repos/capitalone/Hydrograph", "Date": "2017-06-22T19:58:45Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Lang.PREFIX.toString_().equals(\"&4[&cEchoPet&4]&r\")) { langConfig.set(Lang.PREFIX.getPath(), \"&4[&cEchoPet&4]&r \", Lang.PREFIX.getDescription()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/1622/buggy-version/src.main.java.io.github.dsh105.echopet.EchoPetPlugin.java", "BodyUseAPI": [], "Fixed commit": "26570a0cb05b147d767003d5955ac2eed5bec6e0", "Url": "https://api.github.com/repos/minecrafter/EchoPet", "Date": "2014-02-21T06:26:49Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mProgressDialog) != null) { mProgressDialog.dismiss(); mProgressDialog = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/7283/buggy-version/app.src.main.java.com.platypii.basemap.MapsActivity.java", "BodyUseAPI": [], "Fixed commit": "1e6b9f2bb3111b43299d4e412f1a0904afcef0ca", "Url": "https://api.github.com/repos/platypii/BaseMap", "Date": "2014-12-22T03:39:11Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (querying) { android.util.Log.w(\"Map\", \"Update called, but still querying\"); }else if ((map) == null) { android.util.Log.e(\"Map\", \"Update called, but map not initialized\"); }else { final com.google.android.gms.maps.model.LatLngBounds bounds = map.getProjection().getVisibleRegion().latLngBounds; querying = true; new android.os.AsyncTask<java.lang.Void, java.lang.Void, java.util.List<com.platypii.basemap.ASRRecord>>() { @java.lang.Override protected void onPreExecute() { progressSpinner.setVisibility(ProgressBar.VISIBLE); } @java.lang.Override protected java.util.List<com.platypii.basemap.ASRRecord> doInBackground(java.lang.Void... params) { return com.platypii.basemap.ASR.query(bounds); } @java.lang.Override protected void onPostExecute(java.util.List<com.platypii.basemap.ASRRecord> towers) { if (towers != null) { final java.util.Set<com.platypii.basemap.ASRRecord> toDelete = new java.util.HashSet<>(); for (com.platypii.basemap.ASRRecord tower : markers.keySet()) { if (!(towers.contains(tower))) { markers.get(tower).remove(); toDelete.add(tower); } } for (com.platypii.basemap.ASRRecord record : toDelete) { markers.remove(record); } for (com.platypii.basemap.ASRRecord tower : towers) { if (!(markers.containsKey(tower))) { final float alpha = (((float) (tower.height)) / 1260.0F) + 0.5F; final com.google.android.gms.maps.model.BitmapDescriptor icon = com.platypii.basemap.Assets.getSizedIcon(com.platypii.basemap.MapsActivity.this, tower.height); final com.google.android.gms.maps.model.Marker marker = map.addMarker(new com.google.android.gms.maps.model.MarkerOptions().position(tower.latLng()).icon(icon).title(com.platypii.basemap.Convert.toFeet(tower.height)).alpha(alpha)); markers.put(tower, marker); } } }else { map.clear(); } progressSpinner.setVisibility(ProgressBar.GONE); querying = false; } }.execute(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/7283/buggy-version/app.src.main.java.com.platypii.basemap.MapsActivity.java", "BodyUseAPI": [], "Fixed commit": "1e6b9f2bb3111b43299d4e412f1a0904afcef0ca", "Url": "https://api.github.com/repos/platypii/BaseMap", "Date": "2014-12-22T03:39:11Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((grille.getCurrentPiece().getForme()[i][j].getColor()) != (javafx.scene.paint.Color.DARKGREY)) { this.getRectangleByRowColumnIndex(((grille.getCurrentPiece().getPosX()) + i), ((grille.getCurrentPiece().getPosY()) + j)).setFill(grille.getCurrentPiece().getForme()[i][j].getColor()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/6324/buggy-version/src.lib.view.GPane.java", "BodyUseAPI": ["grille.getCurrentPiece().getForme()[i][j].getColor()", "javafx.scene.shape.Rectangle.setFill(grille.getCurrentPiece().getForme()[i][j].getColor())", "grille.getCurrentPiece().getForme()", "lib.model.Grille.getCurrentPiece()", "lib.model.Grille.getCurrentPiece()", "lib.model.Grille.getCurrentPiece()", "lib.view.GPane.getRectangleByRowColumnIndex(((grille.getCurrentPiece().getPosX()) + i),((grille.getCurrentPiece().getPosY()) + j))", "grille.getCurrentPiece().getPosX()", "grille.getCurrentPiece().getPosY()"], "Fixed commit": "2a845f7da2c58833312aafb662aa418475ad1974", "Url": "https://api.github.com/repos/anthonyferreol/javapoo", "Date": "2017-05-17T11:02:05Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.spanish_inquisition.battleship.common.AppLogger.isInitializd) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/5990/buggy-version/src.main.java.com.spanish_inquisition.battleship.common.AppLogger.java", "BodyUseAPI": [], "Fixed commit": "f314ebd81403b7f4f267e614abfcfbd3a69ae59e", "Url": "https://api.github.com/repos/spanish-inquisition-4/Battleship_v2", "Date": "2017-07-31T11:12:40Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((i != 0) && (i != ((originUrl.length) - 1))) result += \"_\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/9146/buggy-version/app.src.main.java.kr.edcan.cumchuck.utils.CumChuckHelper.java", "BodyUseAPI": [], "Fixed commit": "93ca040be52a1d5ad1b7c6e510a48c81ed20e556", "Url": "https://api.github.com/repos/buddman1208/CumChuck", "Date": "2016-07-14T06:03:06Z"},
{"Line": "=>2472", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((defaultNetwork == null) || ((defaultNetwork.getGuestType()) != (Network.GuestType.Shared))) { throw new com.cloud.exception.InvalidParameterValueException((\"Cannot find default network for vm:\" + (vm.getId()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/675/buggy-version/server.src.com.cloud.vm.UserVmManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "659f527095fe24f55cbe2a73ecbe6eec31714052", "Url": "https://api.github.com/repos/DaanHoogland/cloudstack", "Date": "2016-01-12T09:56:07Z"},
{"Line": "=>2460", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.cloud.dc.dao.DataCenterDao.findById(vm.getDataCenterId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((zone.getNetworkType()) == (com.cloud.dc.DataCenter.NetworkType.Basic)) { defaultNetwork = _networkModel.getExclusiveGuestNetwork(zone.getId()); }else { if (zone.isSecurityGroupEnabled()) { com.cloud.vm.NicVO defaultNic = _nicDao.findDefaultNicForVM(vm.getId()); if (defaultNic != null) { defaultNetwork = _networkDao.findById(defaultNic.getNetworkId()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/675/buggy-version/server.src.com.cloud.vm.UserVmManagerImpl.java", "BodyUseAPI": ["com.cloud.dc.DataCenterVO.isSecurityGroupEnabled()", "com.cloud.dc.DataCenterVO.getId()", "com.cloud.network.NetworkModel.getExclusiveGuestNetwork(zone.getId())"], "Fixed commit": "659f527095fe24f55cbe2a73ecbe6eec31714052", "Url": "https://api.github.com/repos/DaanHoogland/cloudstack", "Date": "2016-01-12T09:56:07Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((info.length()) > 0) { info.append(\", \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/2866/buggy-version/src.com.nadmm.airports.wx.WxCursorAdapter.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "af40f97f8d39003459209985a9304778294e2710", "Url": "https://api.github.com/repos/nhasan/Airports", "Date": "2013-08-11T22:18:30Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (imagesUrl != null) { java.lang.String[] images = imagesUrl.split(\",\"); java.lang.String active = \"\"; html += (((((\"<div class='item productListingImage \" + active) + \"'><img src='\") + (images[0])) + \"' alt='\") + model) + \"'></div>\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/8793/buggy-version/src.controller.HomeServlet.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "8ce89b4019c6e068fe4d8ba72f41cc5513b029c5", "Url": "https://api.github.com/repos/zitinghan/SSPPP", "Date": "2016-11-10T00:44:46Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (arguments == null) { throw new java.lang.IllegalArgumentException(\"One argument is expected\"); }else if ((arguments.size()) != 1) { throw new java.lang.IllegalArgumentException(((\"One argument was expected, \" + (arguments.size())) + \" were supplied\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/8109/buggy-version/core-rules.src.main.java.org.hisp.dhis.rules.functions.RuleFunctionLength.java", "BodyUseAPI": ["java.util.List<java.lang.String>.size()", "java.util.List<java.lang.String>.size()"], "Fixed commit": "5c64d205cdecb47956ba833bbbf103e5f6bcc3cf", "Url": "https://api.github.com/repos/EyeSeeTea/dhis2-android-sdk", "Date": "2017-12-22T06:18:14Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((arguments.get(0)) != null) { length = arguments.get(0).length(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/8109/buggy-version/core-rules.src.main.java.org.hisp.dhis.rules.functions.RuleFunctionLength.java", "BodyUseAPI": ["java.util.List<java.lang.String>.get(int)", "java.lang.String.length()"], "Fixed commit": "5c64d205cdecb47956ba833bbbf103e5f6bcc3cf", "Url": "https://api.github.com/repos/EyeSeeTea/dhis2-android-sdk", "Date": "2017-12-22T06:18:14Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openhab.binding.miinternetspeaker.handler.MiInternetSpeakerHandler.getStatus()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (status == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/1679/buggy-version/addons.binding.org.openhab.binding.miinternetspeaker.src.main.java.org.openhab.binding.miinternetspeaker.handler.MiInternetSpeakerHandler.java", "BodyUseAPI": [], "Fixed commit": "5af01080b96b3011354181fc627f5f29b626cc25", "Url": "https://api.github.com/repos/octa22/openhab2-addons", "Date": "2017-08-10T15:20:13Z"},
{"Line": "=>621", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (thing.getStatus().equals(ThingStatus.ONLINE)) { logger.error(\"GetStatus error\", ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/1679/buggy-version/addons.binding.org.openhab.binding.miinternetspeaker.src.main.java.org.openhab.binding.miinternetspeaker.handler.MiInternetSpeakerHandler.java", "BodyUseAPI": [], "Fixed commit": "5af01080b96b3011354181fc627f5f29b626cc25", "Url": "https://api.github.com/repos/octa22/openhab2-addons", "Date": "2017-08-10T15:20:13Z"},
{"Line": "=>474", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (deviceUrl.equals(\"\")) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/1679/buggy-version/addons.binding.org.openhab.binding.miinternetspeaker.src.main.java.org.openhab.binding.miinternetspeaker.handler.MiInternetSpeakerHandler.java", "BodyUseAPI": [], "Fixed commit": "5af01080b96b3011354181fc627f5f29b626cc25", "Url": "https://api.github.com/repos/octa22/openhab2-addons", "Date": "2017-08-10T15:20:13Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/3010/buggy-version/frontend.src.main.java.cz.cuni.mff.xrg.odcs.frontend.auxiliaries.MaxLengthValidator.java", "BodyUseAPI": [], "Fixed commit": "95553cfcb9ac817276910f21b26bfba645922d86", "Url": "https://api.github.com/repos/UnifiedViews/Core", "Date": "2015-05-13T14:20:43Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (input == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/3619/buggy-version/server.sonar-server.src.main.java.org.sonar.server.plugins.ws.InstalledPluginsWsAction.java", "BodyUseAPI": [], "Fixed commit": "7b31330492d77ad529e7c3821acf3bcae8cf3482", "Url": "https://api.github.com/repos/SonarSource/sonarqube", "Date": "2015-04-17T10:59:39Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (input == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/3619/buggy-version/server.sonar-server.src.main.java.org.sonar.server.plugins.ws.InstalledPluginsWsAction.java", "BodyUseAPI": [], "Fixed commit": "7b31330492d77ad529e7c3821acf3bcae8cf3482", "Url": "https://api.github.com/repos/SonarSource/sonarqube", "Date": "2015-04-17T10:59:39Z"},
{"Line": "=>584", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (k == ((arr.size()) - 1)) { java.lang.String seq = java.util.Arrays.toString(arr.toArray()); seq = seq.replace(\"[\", \"\"); seq = seq.replace(\"]\", \"\"); java.lang.String[] seqbreak = seq.split(\",\"); java.lang.String seqstart = seqbreak[0].trim(); java.lang.String seqend = seqbreak[((seqbreak.length) - 1)].trim(); if (ginstance.is_role_run) { seqstart = \"\"; if (seqstart.equals(ginstance.sourceAgentName)) { gla.prisoft.server.kernel.util.PathsInGraph.otherpossiblesequences = gla.prisoft.server.kernel.util.Helper.addUniqueStringToArray(gla.prisoft.server.kernel.util.PathsInGraph.otherpossiblesequences, java.util.Arrays.toString(arr.toArray())); } }else { if ((seqstart.trim().equals(ginstance.sourceAgentName)) && (seqend.equals(ginstance.targetAgentName))) { gla.prisoft.server.kernel.util.PathsInGraph.otherpossiblesequences = gla.prisoft.server.kernel.util.Helper.addUniqueStringToArray(gla.prisoft.server.kernel.util.PathsInGraph.otherpossiblesequences, java.util.Arrays.toString(arr.toArray())); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/2291/buggy-version/src.main.java.gla.prisoft.server.kernel.util.PathsInGraph.java", "BodyUseAPI": ["gla.prisoft.server.kernel.util.Helper.addUniqueStringToArray(java.lang.String[],java.lang.String)", "java.util.Arrays.toString(java.lang.Object[])", "java.util.List<java.lang.String>.toArray()", "java.util.List<java.lang.String>.toArray()", "java.util.Arrays.toString(java.lang.Object[])", "java.util.Arrays.toString(java.lang.Object[])", "java.util.List<java.lang.String>.toArray()", "gla.prisoft.server.kernel.util.Helper.addUniqueStringToArray(java.lang.String[],java.lang.String)"], "Fixed commit": "0a55e4a66ba9ad7703572946e73b285e53117226", "Url": "https://api.github.com/repos/inah/PSatAnalyser", "Date": "2017-07-12T10:34:25Z"},
{"Line": "=>371", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (primaryKey == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/3265/buggy-version/P1.src.frames.MainWindow.java", "BodyUseAPI": [], "Fixed commit": "781041f1cd0e8e74c8cefff03900f2f7ddd62d15", "Url": "https://api.github.com/repos/josuPastorAlmor/BDA1", "Date": "2016-09-27T08:20:14Z"},
{"Line": "=>313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bdTable.getSelectedRow()) == (-1)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/3265/buggy-version/P1.src.frames.MainWindow.java", "BodyUseAPI": [], "Fixed commit": "781041f1cd0e8e74c8cefff03900f2f7ddd62d15", "Url": "https://api.github.com/repos/josuPastorAlmor/BDA1", "Date": "2016-09-27T08:20:14Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.catrobat.catroid.formulaeditor.Formula.getRequiredResources()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((resources & (org.catrobat.catroid.content.bricks.Brick.BLUETOOTH_SENSORS_ARDUINO)) > 0) { org.catrobat.catroid.bluetooth.base.BluetoothDeviceService btService = org.catrobat.catroid.common.ServiceProvider.getService(CatroidService.BLUETOOTH_DEVICE_SERVICE); btService.connectDevice(BluetoothDevice.ARDUINO, this.getContext()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/6729/buggy-version/catroid.src.org.catrobat.catroid.ui.dialogs.FormulaEditorComputeDialog.java", "BodyUseAPI": [], "Fixed commit": "6b8d49218ee10f2842e6b7f6b9313f77a8b11f59", "Url": "https://api.github.com/repos/bernadettespieler/Catroid", "Date": "2015-11-04T12:23:57Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (testWeight != null) weight = testWeight;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/4268/buggy-version/QuizSite.src.quiz.AddQuestionServlet.java", "BodyUseAPI": [], "Fixed commit": "626b60b82a7c907fc9b72c38790549332f6b28c3", "Url": "https://api.github.com/repos/mrg1/QuizProject", "Date": "2013-03-15T06:22:02Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (testWeight != null) weight = testWeight;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/4268/buggy-version/QuizSite.src.quiz.AddQuestionServlet.java", "BodyUseAPI": [], "Fixed commit": "626b60b82a7c907fc9b72c38790549332f6b28c3", "Url": "https://api.github.com/repos/mrg1/QuizProject", "Date": "2013-03-15T06:22:02Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (testWeight != null) weight = testWeight;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/4268/buggy-version/QuizSite.src.quiz.AddQuestionServlet.java", "BodyUseAPI": [], "Fixed commit": "626b60b82a7c907fc9b72c38790549332f6b28c3", "Url": "https://api.github.com/repos/mrg1/QuizProject", "Date": "2013-03-15T06:22:02Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (testWeight != null) weight = testWeight;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/4268/buggy-version/QuizSite.src.quiz.AddQuestionServlet.java", "BodyUseAPI": [], "Fixed commit": "626b60b82a7c907fc9b72c38790549332f6b28c3", "Url": "https://api.github.com/repos/mrg1/QuizProject", "Date": "2013-03-15T06:22:02Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (count < (map.getAllLocations().size())) bw.write(\"\\n\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/2462/buggy-version/src.main.model.FileExporter.java", "BodyUseAPI": [], "Fixed commit": "f2389325790aa15e5e79b8d346228e173a9e7a72", "Url": "https://api.github.com/repos/OOP-Team-11/RoadsAndBoats", "Date": "2017-03-29T15:49:15Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portal.kernel.service.PersistedModelLocalServiceRegistryUtil.getPersistedModelLocalService(entry.getClassName())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (persistedModelLocalService instanceof com.liferay.portal.kernel.service.PersistedResourcedModelLocalService) { com.liferay.portal.kernel.service.PersistedResourcedModelLocalService persistedResourcedModelLocalService = ((com.liferay.portal.kernel.service.PersistedResourcedModelLocalService) (persistedModelLocalService)); java.util.List<? extends com.liferay.portal.kernel.model.PersistedModel> persistedModels = persistedResourcedModelLocalService.getPersistedModel(newClassPK); if (com.liferay.portal.kernel.util.ListUtil.isEmpty(persistedModels)) { return; } }else { persistedModelLocalService.getPersistedModel(newClassPK); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/5227/buggy-version/modules.apps.collaboration.ratings.ratings-service.src.main.java.com.liferay.ratings.internal.exportimport.data.handler.RatingsEntryStagedModelDataHandler.java", "BodyUseAPI": ["com.liferay.portal.kernel.service.PersistedModelLocalService.getPersistedModel(long)"], "Fixed commit": "d4715951f11a61d645e91c7abad6cb710793239f", "Url": "https://api.github.com/repos/linolaoj/liferay-portal", "Date": "2017-07-18T15:08:40Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang.StringUtils.isNotBlank(config.getLoadBalancingIPType())) { if (config.getLoadBalancingIPType().equals(\"public\")) { config.setLoadBalancingIPType(org.apache.stratos.cloud.controller.util.CloudControllerUtil.getLoadBalancingIPTypeStringFromEnum(LoadBalancingIPType.Public)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/4627/buggy-version/components.org.apache.stratos.cloud.controller.src.main.java.org.apache.stratos.cloud.controller.util.CloudControllerUtil.java", "BodyUseAPI": ["config.getLoadBalancingIPType().equals(java.lang.String)", "org.apache.stratos.cloud.controller.util.Cartridge.setLoadBalancingIPType(java.lang.String)", "org.apache.stratos.cloud.controller.util.Cartridge.getLoadBalancingIPType()"], "Fixed commit": "7070f1cd7f8ee0f2f7fa384f814209f39fa88698", "Url": "https://api.github.com/repos/dinithis/stratos", "Date": "2015-05-18T05:51:18Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (page != 0) { page = page - 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/2486/buggy-version/faceye-stock-manager.src.main.java.com.faceye.component.stock.service.impl.ForecastIndexServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "9e72e20d7603e51873683d87dc6b23525b3b738d", "Url": "https://api.github.com/repos/haipenge/faceye-stock", "Date": "2017-07-22T12:09:25Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (conds.contains(\",)\")) { conds = conds.replaceAll(\",\\\\)\", \")\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/5272/buggy-version/src.edu.ucla.cs.mine.LightweightPredicateMiner.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "022b19a31d832369e7a7086c6617ab3e3365c76b", "Url": "https://api.github.com/repos/husttroy/Maple", "Date": "2017-03-04T05:30:20Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.savara.bpmn2.parser.choreo.BPMN2ChoreographyProtocolParser.getItemDefinition(message.getItemRef().getLocalPart(),org.savara.bpmn2.model.TDefinitions)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((itemdefn.getStructureRef()) == null) { org.savara.bpmn2.parser.choreo.BPMN2ChoreographyProtocolParser.logger.severe(((\"Item definition has no structure ref for message '\" + (message.getName())) + \"'\")); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/7823/buggy-version/bundles.org.savara.bpmn2.src.main.java.org.savara.bpmn2.parser.choreo.BPMN2ChoreographyProtocolParser.java", "BodyUseAPI": [], "Fixed commit": "b88f987fa4b6654b938070ab2214e66c5f609d53", "Url": "https://api.github.com/repos/savara/savara-core", "Date": "2014-01-03T10:38:26Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tag[0].hashCode()) != (EpsDirectory.TAG_CONTINUE_LINE)) previousTag = tag[0].hashCode();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/6789/buggy-version/Source.com.drew.metadata.eps.EpsReader.java", "BodyUseAPI": ["java.lang.String.hashCode()"], "Fixed commit": "6d21e39bf377f919f36a3c179b9029eff6d218d4", "Url": "https://api.github.com/repos/payton/metadata-extractor", "Date": "2017-06-13T14:15:29Z"},
{"Line": "=>544", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["freenet.node.updater.NodeUpdateManager.canAnnounceUOMNew()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (size <= 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/8959/buggy-version/src.freenet.node.updater.NodeUpdateManager.java", "BodyUseAPI": [], "Fixed commit": "9e39f03587a6034c02d10a5c829512e19a31441d", "Url": "https://api.github.com/repos/freenet/fred-staging", "Date": "2012-10-22T21:44:22Z"},
{"Line": "=>13", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((executeConsult((((\"Select count(longitude) from tb_locate where longitude = \" + (event.getLongitude())) + \" and latitude = \") + (event.getLatitude())))) == null) executeQuery(((((((\"insert into tb_locate values(\" + (event.getLongitude())) + \",\") + (event.getLatitude())) + \",'\") + (event.getAdress())) + \"')\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/6524/buggy-version/app.src.main.java.dao.EventDAO.java", "BodyUseAPI": ["dao.EventDAO.executeQuery(((((((\"insert into tb_locate values(\" + (event.getLongitude())) + \",\") + (event.getLatitude())) + \",'\") + (event.getAdress())) + \"')\"))", "model.Event.getLongitude()", "model.Event.getLatitude()", "model.Event.getAdress()"], "Fixed commit": "ddda2483fe8788529fecd9a747181fa8ba766ccf", "Url": "https://api.github.com/repos/italopaiva/EuVou", "Date": "2015-10-19T21:57:08Z"},
{"Line": "=>714", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.getEntityPlayer()) != null) { growthModification = iguanaman.hungeroverhaul.module.growth.PlantGrowthModule.getPlantGrowthModification(((net.minecraftforge.common.IPlantable) (event.getItemStack().getItem())).getPlant(event.getEntityPlayer().world, BlockPos.ORIGIN).getBlock()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/8328/buggy-version/src.main.java.iguanaman.hungeroverhaul.module.event.HungerOverhaulEventHook.java", "BodyUseAPI": ["net.minecraftforge.event.entity.player.ItemTooltipEvent.getEntityPlayer()", "net.minecraftforge.event.entity.player.ItemTooltipEvent.getItemStack()", "iguanaman.hungeroverhaul.module.growth.PlantGrowthModule.getPlantGrowthModification(((net.minecraftforge.common.IPlantable) (event.getItemStack().getItem())).getPlant(event.getEntityPlayer().world, BlockPos.ORIGIN).getBlock())", "event.getItemStack().getItem()", "((net.minecraftforge.common.IPlantable) (event.getItemStack().getItem())).getPlant(event.getEntityPlayer().world,BlockPos.ORIGIN)", "((net.minecraftforge.common.IPlantable) (event.getItemStack().getItem())).getPlant(event.getEntityPlayer().world, BlockPos.ORIGIN).getBlock()"], "Fixed commit": "69c7497731147de9d108326c3a440147672fbfd8", "Url": "https://api.github.com/repos/progwml6/HungerOverhaul", "Date": "2017-11-02T01:58:49Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (session.isOpened()) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/2758/buggy-version/Basin.src.com.randymcollier.basin.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "01c74747a0e2f2db9ffc68c0e9965e667e7f42f4", "Url": "https://api.github.com/repos/randymcollier/basin-android", "Date": "2013-06-26T15:35:44Z"},
{"Line": "=>1675", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(getChild().getRowType().equals(getRowType()))) { final net.hydromatic.optiq.impl.java.JavaTypeFactory typeFactory = ((net.hydromatic.optiq.impl.java.JavaTypeFactory) (getCluster().getTypeFactory())); net.hydromatic.optiq.rules.java.PhysType physType = net.hydromatic.optiq.rules.java.PhysTypeImpl.of(typeFactory, table.getRowType(), JavaRowFormat.CUSTOM); java.util.List<net.hydromatic.linq4j.expressions.Expression> expressionList = new java.util.ArrayList<net.hydromatic.linq4j.expressions.Expression>(); final net.hydromatic.optiq.rules.java.PhysType childPhysType = ((net.hydromatic.optiq.rules.java.EnumerableRel) (getChild())).getPhysType(); final net.hydromatic.optiq.rules.java.ParameterExpression o = net.hydromatic.optiq.rules.java.Expressions.parameter(childPhysType.getJavaRowType(), \"o\"); final int fieldCount = childPhysType.getRowType().getFieldCount(); for (int i = 0; i < fieldCount; i++) { expressionList.add(childPhysType.fieldReference(o, i)); } convertedChildExp = builder.append(\"convertedChild\", net.hydromatic.optiq.rules.java.Expressions.call(childExp, BuiltinMethod.SELECT.method, net.hydromatic.optiq.rules.java.Expressions.lambda(physType.record(expressionList), o))); }else { convertedChildExp = childExp; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/8450/buggy-version/src.main.java.net.hydromatic.optiq.rules.java.JavaRules.java", "BodyUseAPI": [], "Fixed commit": "69fbf7e48a1a91f8bea23d01fb64ffab72f5c34d", "Url": "https://api.github.com/repos/julianhyde/optiq", "Date": "2013-05-08T22:32:51Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ambTreesSeen) > 100) { throw new java.lang.RuntimeException(\"Lets stop collecting, the user get's the point, it is VERY ambigious\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/7151/buggy-version/src.org.rascalmpl.eclipse.ambidexter.ReportView.java", "BodyUseAPI": [], "Fixed commit": "3a3ecc333ba3887e90e22e99d9d7db55e151ac8f", "Url": "https://api.github.com/repos/cwi-swat/rascal-eclipse", "Date": "2013-12-04T22:04:18Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.Integer.parseInt((\"\" + (data.charAt((2 * i)))))) != 0) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/695/buggy-version/AIPlayer.java", "BodyUseAPI": [], "Fixed commit": "747ee2508e45d90a06ffde8638fdf51491bef51b", "Url": "https://api.github.com/repos/Springo/ConNet-Four-Hackillinois-2016-", "Date": "2016-02-20T21:00:03Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.pictureit.leumi.server.parse.JsonToObject.jsonToUserProfilesArrayList(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((p.size()) == 0) { showNO_RESULTSdialog(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/4924/buggy-version/Leumi.src.com.pictureit.leumi.server.SearchCallback.java", "BodyUseAPI": [], "Fixed commit": "d02d30ea91fe0660d9473eeaf6c0639964aa32a3", "Url": "https://api.github.com/repos/NoamBO/Pictureit", "Date": "2014-05-27T11:53:09Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((predeccessor.pointerDepth) == (descendent.pointerDepth)) && ((descendent.pointerDepth) > 0)) { if ((predeccessor.ICType) != (descendent.ICType)) { return false; }else { return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/4054/buggy-version/WINDOWS_COMMAND_LINE.FOLDER_3_src.SemanticAnalysis.SymbolTable.java", "BodyUseAPI": [], "Fixed commit": "dae8e0b4da581eca3d1f3b34f23b9d359377fa69", "Url": "https://api.github.com/repos/DanielleTab/Compilation", "Date": "2016-12-21T15:31:42Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((SemanticAnalysis.SymbolTable.insertNewSymbol(new SemanticAnalysis.FunctionSymbolInfo(methodName, this.body.expectedReturnType, null))) == false) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/4054/buggy-version/WINDOWS_COMMAND_LINE.FOLDER_3_src.AST.AST_METHOD.java", "BodyUseAPI": [], "Fixed commit": "dae8e0b4da581eca3d1f3b34f23b9d359377fa69", "Url": "https://api.github.com/repos/DanielleTab/Compilation", "Date": "2016-12-21T15:31:42Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((courseCodeTextField.getText().isEmpty()) || (courseNameTextField.getText().isEmpty())) || (getNumOfCreds == 0)) { javax.swing.JOptionPane.showMessageDialog(null, \"Need to fill in all boxes.\"); }else if ((getNumOfCreds < 0) || (getNumOfCreds > 5)) { javax.swing.JOptionPane.showMessageDialog(null, \"Credits must be between 1 and 5.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/6196/buggy-version/src.Views.MainWindow.java", "BodyUseAPI": [], "Fixed commit": "f65fff9bf4e7ffe9bd44f61e3ce89943eb6ceee2", "Url": "https://api.github.com/repos/michellegardner77/CS490Assignment2", "Date": "2017-06-23T22:15:27Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (android.text.TextUtils.isEmpty(name)) { name = clazz.getSimpleName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/2844/buggy-version/easycache.src.main.java.com.stormagain.easycache.EasyCacheManager.java", "BodyUseAPI": [], "Fixed commit": "da7e1da22e5736354308dc795d74e186cf4da3d9", "Url": "https://api.github.com/repos/stormagain/EasyCache", "Date": "2015-11-19T02:46:10Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.earelin.ecclesia.repository.UserRepository.get(long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (user == null) { throw new org.earelin.ecclesia.service.exception.UserNotFoundException(userId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/3759/buggy-version/src.main.java.org.earelin.ecclesia.service.impl.UserServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "5843a2c209f6e2c9b576969d0793e2d84a8695a8", "Url": "https://api.github.com/repos/earelin/ecclesia", "Date": "2016-04-21T03:34:40Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpSession.getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (username == null) { throw new java.lang.Exception(\"Not Logged in\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/4091/buggy-version/src.main.java.com.theironyard.GamesController.java", "BodyUseAPI": [], "Fixed commit": "13ad926b4f984f59d5ba2772675e7bfee649c5c4", "Url": "https://api.github.com/repos/NathanMartin86/MovieTrackerSpring", "Date": "2015-11-16T12:28:52Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mImageViewApi.getSingleTapListener()) != null) { mImageViewApi.getSingleTapListener().onSingleTap(e.getX(), e.getY(), mImageViewApi.getVisibleImageAreaInCanvas()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/3641/buggy-version/lib.src.main.java.cz.mzk.tiledimageview.gestures.MyGestureListener.java", "BodyUseAPI": ["cz.mzk.tiledimageview.TiledImageViewApi.getSingleTapListener()", "mImageViewApi.getSingleTapListener().onSingleTap(e.getX(),e.getY(),mImageViewApi.getVisibleImageAreaInCanvas())", "cz.mzk.tiledimageview.TiledImageViewApi.getVisibleImageAreaInCanvas()"], "Fixed commit": "930f34483d7b32702d6afdbe5326913af223ac1a", "Url": "https://api.github.com/repos/moravianlibrary/AndroidZoomifyViewer", "Date": "2016-05-23T07:25:13Z"},
{"Line": "=>1930", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((!(brewingSalts.isEmpty())) && (i > (-1))) && (i < (brewingSalts.size()))) this.brewingSalts.remove(i);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/2036/buggy-version/src.ca.strangebrew.Recipe.java", "BodyUseAPI": ["java.util.List<ca.strangebrew.Salt>.remove(int)"], "Fixed commit": "f44402344aa5f4a794171834cc95ed879b34511b", "Url": "https://api.github.com/repos/DougEdey/StrangeBrew", "Date": "2013-01-23T22:28:45Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.techcavern.wavetact.utils.IRCUtils.getUserByNick(org.pircbotx.PircBotX,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (use != null) { host = use.getHostname(); }else { org.pircbotx.hooks.events.WhoisEvent whois = com.techcavern.wavetact.utils.IRCUtils.WhoisEvent(network, userObject); if (whois != null) { host = use.getHostname(); }else { host = \"\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/2986/buggy-version/src.main.java.com.techcavern.wavetact.utils.IRCUtils.java", "BodyUseAPI": ["org.pircbotx.User.getHostname()", "org.pircbotx.User.getHostname()"], "Fixed commit": "9c8c020ab7430107e89c8c45d0db73e677444179", "Url": "https://api.github.com/repos/TechCavern/WaveTact", "Date": "2015-06-24T22:56:13Z"},
{"Line": "=>456", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((org.apache.commons.lang.StringUtils.isEmpty(fromPage)) || ((org.apache.commons.lang.StringUtils.isNotEmpty(fromPage)) && (!(configType.equals(oldConfigType))))) { if ((configType.equals(Constants.SETTINGS_TEMPLATE_SERVER)) || (configType.equals(Constants.SETTINGS_TEMPLATE_EMAIL))) { java.util.List<com.photon.phresco.configuration.Configuration> configurations = configManager.getConfigurations(environment.getName(), configType); if (org.apache.commons.collections.CollectionUtils.isNotEmpty(configurations)) { setConfigTypeError(getText(com.photon.phresco.framework.actions.applications.CONFIG_ALREADY_EXIST)); hasError = true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/9224/buggy-version/phresco-framework-web.src.main.java.com.photon.phresco.framework.actions.applications.Configurations.java", "BodyUseAPI": ["java.lang.String.equals(Constants.SETTINGS_TEMPLATE_EMAIL)", "java.lang.String.equals(Constants.SETTINGS_TEMPLATE_SERVER)", "com.photon.phresco.api.ConfigManager.getConfigurations(environment.getName(),java.lang.String)"], "Fixed commit": "073b9c15b29aea212f5d2d100cf029cf7ac3e13f", "Url": "https://api.github.com/repos/phresco/framework", "Date": "2012-12-11T14:43:30Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ec.getBeginTime().isBefore(java.time.LocalDateTime.now())) { shuru.type(ec.getCode()); java.lang.Thread.sleep(1000L); region.click(((baseDir) + \"fasong.png\")); status.CodeExchanged(ec.getId(), status.getCurrentUser()); java.lang.Thread.sleep(1000L); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/2848/buggy-version/src.main.java.com.peace.auto.bl.task.ExchangeCodeTask.java", "BodyUseAPI": ["com.peace.auto.bl.task.ExchangeCode.getId()", "com.peace.auto.bl.Status.CodeExchanged(ec.getId(),status.getCurrentUser())", "com.peace.auto.bl.task.ExchangeCode.getCode()", "org.sikuli.script.Match.type(ec.getCode())"], "Fixed commit": "191df40a374d3eaac6c29344f864985063592e29", "Url": "https://api.github.com/repos/peace0phmind/blauto", "Date": "2016-07-29T03:44:34Z"},
{"Line": "=>1535", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["robot.RoboticArm.getUserFrame(mInst.getUFrameIdx())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (instUFrame != null) { offset = removeFrame(offset, new processing.core.PVector(), instUFrame.getOrientation()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/2229/buggy-version/RobotRun.src.robot.RoboticArm.java", "BodyUseAPI": ["robot.RoboticArm.removeFrame(geom.Point,processing.core.PVector,instUFrame.getOrientation())", "frame.UserFrame.getOrientation()"], "Fixed commit": "6806ca06b0454da956f3584585095d006dc9d84e", "Url": "https://api.github.com/repos/skuhl/RobotRun", "Date": "2017-06-16T14:33:28Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getFragmentManager().findFragmentById(R.id.placeHolder)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (savedFragment == null) { fragments.venkat.com.myapplication.ListFragment listFragment = new fragments.venkat.com.myapplication.ListFragment(); android.app.FragmentManager fragmentManager = getFragmentManager(); android.app.FragmentTransaction fragmentTransaction = fragmentManager.beginTransaction(); fragmentTransaction.add(R.id.placeHolder, listFragment); fragmentTransaction.commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/7258/buggy-version/app.src.main.java.fragments.venkat.com.myapplication.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "e90ecc4d7be5a9ff1c1ffd502195146428f5deff", "Url": "https://api.github.com/repos/venkyg88/RecipeApp", "Date": "2016-08-02T17:39:12Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (canvas != null) { canvas.setRenderingHint(java.awt.RenderingHints.KEY_FRACTIONALMETRICS, java.awt.RenderingHints.VALUE_FRACTIONALMETRICS_ON); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/8186/buggy-version/blaise-graphics.src.main.java.com.googlecode.blaisemath.graphics.swing.MultilineTextRenderer.java", "BodyUseAPI": ["java.awt.Graphics2D.setRenderingHint(java.awt.RenderingHints.Key,java.lang.Object)"], "Fixed commit": "6219fc68bbcb388d24764883db75a26287270ede", "Url": "https://api.github.com/repos/triathematician/blaisemath", "Date": "2017-05-09T17:05:28Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["doc.select(\"meta[name=title]\").first()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (playlistName != null) { if (android.text.TextUtils.isEmpty(org.schabi.newpipe.extractor.services.youtube.YoutubePlayListExtractor.channelName)) { org.schabi.newpipe.extractor.services.youtube.YoutubePlayListExtractor.channelName = playlistName.attr(\"content\"); }else { org.schabi.newpipe.extractor.services.youtube.YoutubePlayListExtractor.channelName += \" - \" + (playlistName.attr(\"content\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/1945/buggy-version/app.src.main.java.org.schabi.newpipe.extractor.services.youtube.YoutubePlayListExtractor.java", "BodyUseAPI": ["org.jsoup.nodes.Element.attr(java.lang.String)", "org.jsoup.nodes.Element.attr(java.lang.String)"], "Fixed commit": "7be023c152472a21b9cce80ca83282cc0d5e868d", "Url": "https://api.github.com/repos/BlenderViking/NewPipe", "Date": "2016-11-30T22:26:51Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["doc.select(\"span[class=\\\"qualified-channel-title-text\\\"] a\").first()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (channelName != null) { org.schabi.newpipe.extractor.services.youtube.YoutubePlayListExtractor.channelName = channelName.text(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/1945/buggy-version/app.src.main.java.org.schabi.newpipe.extractor.services.youtube.YoutubePlayListExtractor.java", "BodyUseAPI": ["org.jsoup.nodes.Element.text()"], "Fixed commit": "7be023c152472a21b9cce80ca83282cc0d5e868d", "Url": "https://api.github.com/repos/BlenderViking/NewPipe", "Date": "2016-11-30T22:26:51Z"},
{"Line": "=>1191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newState == (android.bluetooth.BluetoothProfile.STATE_DISCONNECTED)) { if (status != (android.bluetooth.BluetoothGatt.GATT_SUCCESS)) no.nordicsemi.android.log.Logger.w(mLogSession, (((\"Error: (0x\" + (java.lang.Integer.toHexString(status))) + \"): \") + (no.nordicsemi.android.nrftoolbox.error.GattError.parseConnectionError(status)))); mOperationInProgress = true; mInitQueue = null; mTaskQueue.clear(); final boolean wasConnected = mConnected; if (mConnected) { notifyDeviceDisconnected(gatt.getDevice()); } if (mInitialConnection) { connect(gatt.getDevice()); } if (wasConnected || (status == (android.bluetooth.BluetoothGatt.GATT_SUCCESS))) return; }else { if (status != (android.bluetooth.BluetoothGatt.GATT_SUCCESS)) no.nordicsemi.android.log.Logger.e(mLogSession, (((\"Error (0x\" + (java.lang.Integer.toHexString(status))) + \"): \") + (no.nordicsemi.android.nrftoolbox.error.GattError.parseConnectionError(status)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/8133/buggy-version/app.src.main.java.no.nordicsemi.android.nrftoolbox.profile.BleManager.java", "BodyUseAPI": [], "Fixed commit": "fe75efa4cd78162f4a769e2d8076870d81c09041", "Url": "https://api.github.com/repos/NordicSemiconductor/Android-nRF-Toolbox", "Date": "2017-06-28T15:12:14Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((out.size()) == 1) && ((out.getField(0).type) == (org.apache.pig.data.DataType.TUPLE))) { out = out.getField(0).schema; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/1498/buggy-version/src.main.java.com.cwoodson.pigaddons.rpig.RFunction.java", "BodyUseAPI": ["org.apache.pig.impl.logicalLayer.schema.Schema.getField(int)"], "Fixed commit": "12b4417c9495afed51fe94114252cd213702e4df", "Url": "https://api.github.com/repos/cd-wood/pigaddons", "Date": "2013-06-13T21:59:54Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.android.services.telephony.TelephonyConnection.getExtras()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (connExtras == null) { connExtras = new android.os.Bundle(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/63/buggy-version/src.com.android.services.telephony.TelephonyConnectionService.java", "BodyUseAPI": [], "Fixed commit": "35a155fe19ab6645ccc19bad4f32bf304e619da2", "Url": "https://api.github.com/repos/codeaurora-unofficial/packages-services-Telephony", "Date": "2015-10-28T20:59:07Z"},
{"Line": "=>312", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.hibernate.sql.Template.isBoolean(token)) { token = dialect.toBooleanValueString(java.lang.Boolean.parseBoolean(token)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/3122/buggy-version/hibernate-core.src.main.java.org.hibernate.sql.Template.java", "BodyUseAPI": ["java.lang.Boolean.parseBoolean(java.lang.String)", "org.hibernate.dialect.Dialect.toBooleanValueString(boolean)"], "Fixed commit": "7fadfc09e41f467889ffd469623f5a15a797718c", "Url": "https://api.github.com/repos/CaperWhite/hibernate-orm", "Date": "2015-09-22T15:16:23Z"},
{"Line": "=>750", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.hibernate.sql.Template.isBoolean(token)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/3122/buggy-version/hibernate-core.src.main.java.org.hibernate.sql.Template.java", "BodyUseAPI": [], "Fixed commit": "7fadfc09e41f467889ffd469623f5a15a797718c", "Url": "https://api.github.com/repos/CaperWhite/hibernate-orm", "Date": "2015-09-22T15:16:23Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (host == null) host = new java.net.URL(jenkins.model.Jenkins.getInstance().getRootUrl()).getHost();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/616/buggy-version/src.main.java.org.jenkinsci.plugins.remote_terminal_access.lease.LeaseFile.java", "BodyUseAPI": [], "Fixed commit": "ea077c200e2e1f394c845ec084cf9c534a301ec6", "Url": "https://api.github.com/repos/jenkinsci/remote-terminal-access-plugin", "Date": "2013-06-05T15:08:03Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (name.equals(\"startScriptArgs\")) { i++; break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/6445/buggy-version/src.main.java.com.gmail.socraticphoenix.shnap.app.ArgumentParser.java", "BodyUseAPI": [], "Fixed commit": "08d109dd5120cca28de59c56be4c62f7e6ed2819", "Url": "https://api.github.com/repos/ShnapLang/Shnap", "Date": "2017-08-18T21:53:29Z"},
{"Line": "=>513", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lastActive != null) for (long l : lastActive) { attemptFlow(l, (l + (X))); attemptFlow(l, (l - (X))); attemptFlow(l, (l + (Z))); attemptFlow(l, (l - (Z))); attemptFlow(l, (l - (Y))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/5693/buggy-version/classicphysics.src.main.java.me.eddiep.PhysicsEngine.java", "BodyUseAPI": [], "Fixed commit": "6d55b04947ec82c46d0584079cb03d5178eacdee", "Url": "https://api.github.com/repos/pupnewfster/Lavasurvival", "Date": "2017-06-22T01:50:54Z"},
{"Line": "=>320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Object.trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((sOther.indexOf(\".\")) != (-1)) { number = java.lang.Double.parseDouble(sOther); }else { java.text.NumberFormat nf = java.text.NumberFormat.getInstance(); number = nf.parse(((java.lang.String) (sOther))).doubleValue(); return number; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/218/buggy-version/com.opendoorlogistics.core.src.com.opendoorlogistics.core.tables.ColumnValueProcessor.java", "BodyUseAPI": ["java.lang.Double.parseDouble(java.lang.String)"], "Fixed commit": "6fa0aa43b17081fe9dd548756b031bf441549321", "Url": "https://api.github.com/repos/PGWelch/com.opendoorlogistics", "Date": "2015-02-12T10:17:15Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["nu.xom.Element.getChildElements(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((rs.get(i).getAttribute(\"description\").getValue()) != null) { v.add(new net.sf.memoranda.Resource(rs.get(i).getAttribute(\"path\").getValue(), ((rs.get(i).getAttribute(\"isInetShortcut\")) != null), ((rs.get(i).getAttribute(\"isProjectFile\")) != null), rs.get(i).getAttribute(\"description\").getValue())); }else { v.add(new net.sf.memoranda.Resource(rs.get(i).getAttribute(\"path\").getValue(), ((rs.get(i).getAttribute(\"isInetShortcut\")) != null), ((rs.get(i).getAttribute(\"isProjectFile\")) != null), \"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/7650/buggy-version/src.net.sf.memoranda.ResourcesListImpl.java", "BodyUseAPI": ["nu.xom.Elements.get(int)", "nu.xom.Elements.get(int)", "rs.get(i).getAttribute(java.lang.String)", "rs.get(i).getAttribute(\"path\").getValue()", "rs.get(i).getAttribute(\"description\").getValue()", "nu.xom.Elements.get(int)", "nu.xom.Elements.get(int)", "rs.get(i).getAttribute(java.lang.String)", "rs.get(i).getAttribute(java.lang.String)", "java.util.Vector.add(net.sf.memoranda.Resource)", "nu.xom.Elements.get(int)", "java.util.Vector.add(net.sf.memoranda.Resource)", "rs.get(i).getAttribute(\"path\").getValue()", "nu.xom.Elements.get(int)", "rs.get(i).getAttribute(java.lang.String)", "rs.get(i).getAttribute(java.lang.String)", "nu.xom.Elements.get(int)", "rs.get(i).getAttribute(java.lang.String)", "rs.get(i).getAttribute(java.lang.String)"], "Fixed commit": "a221b6d0105b51f2e7895fd2fba01f876a604ac0", "Url": "https://api.github.com/repos/ser316asu/Adlershof_SER316", "Date": "2017-04-28T21:43:31Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_description) != null) { return _description; }else { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/7650/buggy-version/src.net.sf.memoranda.Resource.java", "BodyUseAPI": [], "Fixed commit": "a221b6d0105b51f2e7895fd2fba01f876a604ac0", "Url": "https://api.github.com/repos/ser316asu/Adlershof_SER316", "Date": "2017-04-28T21:43:31Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.arckenver.nations.object.Rect.pointsInside(com.arckenver.nations.object.Rect)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((points.size()) == 0) { if (!(intersects(rect))) { result.add(new com.arckenver.nations.object.Rect(world, minX, maxX, minY, maxY)); }else if ((((rect.getMinX()) > (minX)) && ((rect.getMaxX()) < (maxX))) && (!(((rect.getMaxY()) >= (minY)) || ((maxY) >= (rect.getMinY()))))) { result.add(new com.arckenver.nations.object.Rect(world, minX, ((rect.getMinX()) - 1), minY, maxY)); result.add(new com.arckenver.nations.object.Rect(world, ((rect.getMaxX()) + 1), maxX, minY, maxY)); if ((rect.getMinY()) <= (minY)) { if ((rect.getMaxY()) < (maxY)) { result.add(new com.arckenver.nations.object.Rect(world, rect.getMinX(), rect.getMaxX(), ((rect.getMaxY()) + 1), maxY)); } }else { result.add(new com.arckenver.nations.object.Rect(world, rect.getMinX(), rect.getMaxX(), minY, ((rect.getMinY()) - 1))); if ((rect.getMaxY()) < (maxY)) { result.add(new com.arckenver.nations.object.Rect(world, rect.getMinX(), rect.getMaxX(), ((rect.getMaxY()) + 1), maxY)); } } }else if (((rect.getMinY()) > (minY)) && ((rect.getMaxY()) < (maxY))) { result.add(new com.arckenver.nations.object.Rect(world, minX, maxX, minY, ((rect.getMinY()) - 1))); result.add(new com.arckenver.nations.object.Rect(world, minX, maxX, ((rect.getMaxY()) + 1), maxY)); if ((rect.getMinX()) <= (minX)) { if ((rect.getMaxX()) < (maxX)) { result.add(new com.arckenver.nations.object.Rect(world, ((rect.getMaxX()) + 1), maxX, rect.getMinY(), rect.getMaxY())); } }else { result.add(new com.arckenver.nations.object.Rect(world, minX, ((rect.getMinX()) - 1), rect.getMinY(), rect.getMaxY())); if ((rect.getMaxY()) < (maxY)) { result.add(new com.arckenver.nations.object.Rect(world, ((rect.getMaxX()) + 1), maxX, rect.getMinY(), rect.getMaxY())); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/1393/buggy-version/src.main.java.com.arckenver.nations.object.Rect.java", "BodyUseAPI": [], "Fixed commit": "fb878ef4e123ee3cc8c61cee6eec46e671bb8fb2", "Url": "https://api.github.com/repos/Arckenver/Nations", "Date": "2016-05-08T13:05:43Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (allLocations.contains(roomName)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/7514/buggy-version/System.src.main.java.il.ac.technion.cs.smarthouse.system.mapping_information.MappingInformation.java", "BodyUseAPI": [], "Fixed commit": "674d3cb7ccbd92325c9c5441364b3ca29e3256cf", "Url": "https://api.github.com/repos/TechnionYP5777/Smartcity-Smarthouse", "Date": "2017-07-03T10:54:15Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.camel.Exchange.getProperty(CxfConstants.DATA_FORMAT_PROPERTY,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(DataFormat.CXF_MESSAGE.equals(dataFormat))) { for (java.util.Map.Entry<java.lang.String, javax.activation.DataHandler> entry : camelExchange.getIn().getAttachments().entrySet()) { if (attachments == null) { attachments = new java.util.HashSet<org.apache.cxf.message.Attachment>(); } org.apache.cxf.attachment.AttachmentImpl attachment = new org.apache.cxf.attachment.AttachmentImpl(entry.getKey(), entry.getValue()); attachment.setXOP(isXop); attachments.add(attachment); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/527/buggy-version/components.camel-cxf.src.main.java.org.apache.camel.component.cxf.DefaultCxfBinding.java", "BodyUseAPI": [], "Fixed commit": "933d1ba6d5c24cc27b9f67974091aff84fd36fae", "Url": "https://api.github.com/repos/apache/camel", "Date": "2014-05-29T13:25:11Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (opCode < 0) { hexValue = \"-\" + (java.lang.String.format(\"0x%04x\", java.lang.Math.abs(opCode))); }else { hexValue = java.lang.String.format(\"0x%04x\", opCode); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/21/buggy-version/src.main.java.org.mufuku.yaoocai.v1.bytecode.viewer.ByteCodeViewer.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,int)", "java.lang.String.format(java.lang.String,short)", "java.lang.Math.abs(short)"], "Fixed commit": "57441390519990a396a42e328bbd8dbad171cbdf", "Url": "https://api.github.com/repos/aetzlstorfer/yaoocai", "Date": "2017-06-11T13:03:38Z"},
{"Line": "=>453", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.tomahawk.libtomahawk.collection.StationPlaylist.get(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (stationPlaylist != (getPlaybackManager().getPlaylist())) { getPlaybackManager().setPlaylist(stationPlaylist); getMediaController().getTransportControls().play(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/420/buggy-version/app.src.main.java.org.tomahawk.tomahawk_android.fragments.ContentHeaderFragment.java", "BodyUseAPI": ["org.tomahawk.tomahawk_android.utils.PlaybackManager.setPlaylist(org.tomahawk.libtomahawk.collection.StationPlaylist)"], "Fixed commit": "cdf2547ffdc0483551968efa13c1f369678435a8", "Url": "https://api.github.com/repos/tomahawk-player/tomahawk-android", "Date": "2016-06-10T19:03:14Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (backlogs != null) { for (java.lang.Long backlog : backlogs.values()) { m_totalBacklog += backlog; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/8401/buggy-version/hermes-metaservice.src.main.java.com.ctrip.hermes.metaservice.monitor.event.ConsumeLargeBacklogEvent.java", "BodyUseAPI": [], "Fixed commit": "ef4040e571ba2e5d8a20284917ffcf3b18636b55", "Url": "https://api.github.com/repos/yiming187/hermes", "Date": "2015-11-10T03:33:22Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((px == 0) && ((w.getScreenX()) <= 200)) || ((py == 0) && ((w.getScreenY()) <= 200))) return true; else return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/938/buggy-version/src.com.jpii.navalbattle.pavo.PavoHelper.java", "BodyUseAPI": [], "Fixed commit": "664faa4411811edd1a3099b4e73e3d6f1136d450", "Url": "https://api.github.com/repos/JPII/NavalBattle", "Date": "2013-02-01T04:11:46Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((java.lang.System.currentTimeMillis()) - (task.getExecStartTime().getTime())) / 1000) >= (build.getRunScriptTimeout())) { task.compelteTask(STATUS.NOT_COMPLETE); }else { task.compelteTask(STATUS.FAILURE); if (tryNum >= 1) { result = runTestCase(script, builder, (--tryNum)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/2826/buggy-version/src.com.mead.android.crazymonkey.RunScripts.java", "BodyUseAPI": ["com.mead.android.crazymonkey.model.Task.compelteTask(STATUS.NOT_COMPLETE)", "com.mead.android.crazymonkey.model.Task.compelteTask(STATUS.FAILURE)"], "Fixed commit": "ca332e92e7f8ae9ae7075cbd2e987c01e06c64be", "Url": "https://api.github.com/repos/Bossmai/crazy-monkey", "Date": "2015-03-20T13:47:03Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.salesforce.androidsdk.app.SalesforceSDKManager.getInstance().getClientManager().peekRestClient()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((restClient.getOkHttpClient()) == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/6818/buggy-version/libs.SalesforceSDK.src.com.salesforce.androidsdk.analytics.AILTNPublisher.java", "BodyUseAPI": [], "Fixed commit": "4b5a70e4e342d9db67ff2666178cd751b2502fa0", "Url": "https://api.github.com/repos/rwhitley/SalesforceMobileSDK-Android", "Date": "2017-07-11T22:44:17Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (button == 0) selectedForce.addToRoute(selectedStar); else selectedForce.removeFromRoute(selectedStar);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/7595/buggy-version/src.graphic.Game.java", "BodyUseAPI": [], "Fixed commit": "f251b524db22187e74d0c6556f9e6a7525ea21ab", "Url": "https://api.github.com/repos/dlangdon/ToTameTheVoid-java", "Date": "2013-04-26T06:18:04Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (mList2 != null) { for (bitter.action.Message message : mList2) { mList.add(message); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/5483/buggy-version/bitter.action.LoginPrint.java", "BodyUseAPI": [], "Fixed commit": "722ea1e43545b872df3db8fb66cb5fd1ea7cc18d", "Url": "https://api.github.com/repos/Alfandorachk/330Team4", "Date": "2013-04-18T14:08:43Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.imagej.ops.filter.phasecorrelation.PhaseCorrelationPeak.getPosition()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((peakPosition.length) <= i) { translationArray[i][j] = 0; }else { translationArray[i][j] = peakPosition[i]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/1423/buggy-version/src.main.java.net.imagej.ops.filter.phasecorrelation.ImgPhaseCorrelationOp.java", "BodyUseAPI": [], "Fixed commit": "8bb72117bbd72af9efb5160b318b5556a67fd0c8", "Url": "https://api.github.com/repos/gab1one/imagej-ops", "Date": "2015-08-17T09:47:51Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (size < 3) { size = 3; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/1423/buggy-version/src.main.java.net.imagej.ops.filter.phasecorrelation.ImgPhaseCorrelationOp.java", "BodyUseAPI": [], "Fixed commit": "8bb72117bbd72af9efb5160b318b5556a67fd0c8", "Url": "https://api.github.com/repos/gab1one/imagej-ops", "Date": "2015-08-17T09:47:51Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (workspaceResId == 0) { android.telephony.TelephonyManager tm = ((android.telephony.TelephonyManager) (getContext().getSystemService(Context.TELEPHONY_SERVICE))); if ((tm.getPhoneType()) == (android.telephony.TelephonyManager.PHONE_TYPE_NONE)) { workspaceResId = sp.getInt(com.cyanogenmod.trebuchet.LauncherProvider.DEFAULT_WORKSPACE_RESOURCE_ID, R.xml.default_workspace_no_telephony); }else { workspaceResId = sp.getInt(com.cyanogenmod.trebuchet.LauncherProvider.DEFAULT_WORKSPACE_RESOURCE_ID, R.xml.default_workspace); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/7227/buggy-version/src.com.cyanogenmod.trebuchet.LauncherProvider.java", "BodyUseAPI": [], "Fixed commit": "42b656dbd1302cd27f0b4d0667f2fdb1af1b8a70", "Url": "https://api.github.com/repos/CyanogenMod/android_packages_apps_Trebuchet", "Date": "2013-04-07T11:13:20Z"},
{"Line": "=>428", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Context.getSystemService(Context.TELEPHONY_SERVICE)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((tm.getPhoneType()) == (android.telephony.TelephonyManager.PHONE_TYPE_NONE)) { loadFavorites(db, R.xml.update_workspace_no_telephony); }else { loadFavorites(db, R.xml.update_workspace); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/7227/buggy-version/src.com.cyanogenmod.trebuchet.LauncherProvider.java", "BodyUseAPI": [], "Fixed commit": "42b656dbd1302cd27f0b4d0667f2fdb1af1b8a70", "Url": "https://api.github.com/repos/CyanogenMod/android_packages_apps_Trebuchet", "Date": "2013-04-07T11:13:20Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraftforge.event.entity.player.FillBucketEvent.getTarget()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (pos == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/990/buggy-version/src.main.java.com.mjr.extraplanets.handlers.BucketHandler.java", "BodyUseAPI": [], "Fixed commit": "46906aad24fb1f421b435a8850118d8c2f178a02", "Url": "https://api.github.com/repos/MJRLegends/ExtraPlanets", "Date": "2017-04-11T21:58:36Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.codehaus.jackson.JsonNode.path(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (title.isMissingNode()) { r.put(\"title\", \"no title\"); }else { if (title.isArray()) { r.put(\"title\", title.get(0)); }else { r.put(\"title\", title); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/7481/buggy-version/src.main.java.eu.eexcess.insa.PrivacyProxyService.java", "BodyUseAPI": ["org.codehaus.jackson.JsonNode.get(int)", "org.codehaus.jackson.node.ObjectNode.put(java.lang.String,org.codehaus.jackson.JsonNode)", "org.codehaus.jackson.node.ObjectNode.put(java.lang.String,title.get(0))", "org.codehaus.jackson.JsonNode.isArray()"], "Fixed commit": "37b0dcb2aadef6da66eefa0d8cf7a347f20ddab8", "Url": "https://api.github.com/repos/EEXCESS/privacy-proxy", "Date": "2014-11-07T12:36:56Z"},
{"Line": "=>886", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["lessa.EvalVisitor.visit(ctx.trailer(0))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (trailerStr.equals(\".play\")) { java.lang.System.out.println(\"GMF get play \"); envir.Envir.playflag = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/1595/buggy-version/src.lessa.EvalVisitor.java", "BodyUseAPI": [], "Fixed commit": "5dedbfd9ea73614a414edba98238689354123807", "Url": "https://api.github.com/repos/giddens9527/Lessa", "Date": "2015-05-10T06:21:24Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wso2.carbon.context.CarbonContext.getThreadLocalCarbonContext().getTenantDomain()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(MultitenantConstants.SUPER_TENANT_DOMAIN_NAME.equals(domain))) { userWithDomain = org.wso2.carbon.apimgt.impl.utils.APIUtil.appendDomainWithUser(user, domain); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/2938/buggy-version/components.apimgt.org.wso2.carbon.apimgt.impl.src.main.java.org.wso2.carbon.apimgt.impl.executors.APIExecutor.java", "BodyUseAPI": ["org.wso2.carbon.apimgt.impl.utils.APIUtil.appendDomainWithUser(java.lang.String,java.lang.String)"], "Fixed commit": "f052b4a9891cb4b22a1441cf87aa484705e404f2", "Url": "https://api.github.com/repos/chamilaadhi/carbon-apimgt", "Date": "2015-10-15T03:01:19Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cambridge.model.Tag.getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((id == null) && (tag.isDynamic())) { id = tag.getAttribute(tag.getNameSpace(), \"id\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/4278/buggy-version/cambridge-core.src.main.java.cambridge.model.ExtendsDirective.java", "BodyUseAPI": ["cambridge.model.Tag.getNameSpace()", "cambridge.model.Tag.getAttribute(tag.getNameSpace(),java.lang.String)"], "Fixed commit": "50d5f86abb043faedd93c6de3d8bf6596203c473", "Url": "https://api.github.com/repos/erdincyilmazel/Cambridge", "Date": "2012-07-07T03:45:06Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (address.equals(component.getAddress())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/7305/buggy-version/PoultryInspector.src.ccre.viewer.WebcamComponent.java", "BodyUseAPI": [], "Fixed commit": "42452e9f60514f5f17c874be81effb82ff122433", "Url": "https://api.github.com/repos/flamingchickens1540/common-chicken-runtime-engine", "Date": "2016-04-29T16:20:30Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.mobicents.slee.runtime.eventrouter.stats.EventRouterStatisticsImpl.getEventRouterExecutorStatistics(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (eventRouterExecutorStatistics != null) { org.mobicents.slee.container.eventrouter.stats.EventTypeRoutingStatistics eventTypeRoutingStatistics = eventRouterExecutorStatistics.getEventTypeRoutingStatistics(eventTypeID); if (eventTypeRoutingStatistics != null) { time += eventTypeRoutingStatistics.getRoutingTime(); events += eventTypeRoutingStatistics.getEventsRouted(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/589/buggy-version/container.router.src.main.java.org.mobicents.slee.runtime.eventrouter.stats.EventRouterStatisticsImpl.java", "BodyUseAPI": ["org.mobicents.slee.container.eventrouter.stats.EventRouterExecutorStatistics.getEventTypeRoutingStatistics(javax.slee.EventTypeID)"], "Fixed commit": "0a888869557a056e120889411e91bb4836470a10", "Url": "https://api.github.com/repos/Mobicents/jain-slee", "Date": "2014-06-25T14:30:39Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.mobicents.slee.runtime.eventrouter.stats.EventRouterStatisticsImpl.getEventRouterExecutorStatistics(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (eventRouterExecutorStatistics != null) { org.mobicents.slee.container.eventrouter.stats.EventTypeRoutingStatistics eventTypeRoutingStatistics = eventRouterExecutorStatistics.getEventTypeRoutingStatistics(eventTypeID); if (eventTypeRoutingStatistics != null) { time += eventTypeRoutingStatistics.getRoutingTime(); events += eventTypeRoutingStatistics.getEventsRouted(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/589/buggy-version/container.router.src.main.java.org.mobicents.slee.runtime.eventrouter.stats.EventRouterStatisticsImpl.java", "BodyUseAPI": ["org.mobicents.slee.container.eventrouter.stats.EventRouterExecutorStatistics.getEventTypeRoutingStatistics(javax.slee.EventTypeID)"], "Fixed commit": "0a888869557a056e120889411e91bb4836470a10", "Url": "https://api.github.com/repos/Mobicents/jain-slee", "Date": "2014-06-25T14:30:39Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.parse.ParseUser.getCurrentUser()) != null) { mUserPermission = com.parse.ParseUser.getCurrentUser().getInt(ParseConstants.USER_PERMISSION); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/8404/buggy-version/app.src.main.java.dariogonzalez.fitplaygames.MainChallengeFragment.java", "BodyUseAPI": [], "Fixed commit": "eb5ab430da5990fa7d10fd2f6c068e00e7bedce2", "Url": "https://api.github.com/repos/dariogs2001/FitPlayGames", "Date": "2016-02-10T05:19:45Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (boardMap[cellCord.getX()][cellCord.getY()].isUnderShip) { return players[playerId].ship.getNeighbors(); }else { return boardMap[cellCord.getX()][cellCord.getY()].getNeighbors(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/3831/buggy-version/src.main.java.ru.mail.park.game.GameBoard.java", "BodyUseAPI": ["boardMap[cellCord.getX()][cellCord.getY()].getNeighbors()", "ru.mail.park.game.CoordPair.getY()", "ru.mail.park.game.CoordPair.getX()"], "Fixed commit": "864dd0e21bc58ce62042b87cf647dfdd68ced1ae", "Url": "https://api.github.com/repos/VictorKamyshin/strategy-09-2016", "Date": "2016-11-16T22:04:07Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["nl.matshofman.saxrssreader.RssItem.getContent()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((content == null) || ((content.length()) <= 0)) { content = rssItem.getDescription(); if ((content == null) || ((content.length()) <= 0)) { content = \"\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/5241/buggy-version/src.com.rollonapp.rollon.RssFeedReaderActivity.java", "BodyUseAPI": [], "Fixed commit": "f9c23b411219264d0a77692c2fbc1de5d92ab158", "Url": "https://api.github.com/repos/Rollon/Rollon", "Date": "2013-03-02T22:58:42Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((parts.length) == 1) && (parts[0].isEmpty())) return new de.metanome.algorithm_integration.ColumnCombination();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/414/buggy-version/algorithm_integration.src.main.java.de.metanome.algorithm_integration.ColumnCombination.java", "BodyUseAPI": [], "Fixed commit": "b55cc95471c2165fae6898943fdcde4e7cbe0f55", "Url": "https://api.github.com/repos/Jens-Ehrlich/Metanome", "Date": "2015-02-19T19:59:11Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (newStart == newEnd) { if (start < pre) { if ((start + 1) == pre) { result.add(java.lang.Integer.toString(start)); }else { result.add(((start + \"->\") + (pre - 1))); } } result.add(java.lang.Integer.toString(newStart)); }else { result.add(((newStart + \"->\") + newEnd)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/7443/buggy-version/src.MissingRanges.java", "BodyUseAPI": ["java.lang.Integer.toString(int)", "java.util.List<java.lang.String>.add(java.lang.String)", "java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "5ccb7b2b00cf1e5645776f39ec5371f0e1ec566d", "Url": "https://api.github.com/repos/yao23/Java_Playground", "Date": "2017-07-20T07:13:31Z"},
{"Line": "=>2151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.vmware.bdd.software.mgmt.plugin.model.NodeGroupInfo.getRoles()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (roles.contains(HadoopRole.HADOOP_NAMENODE_ROLE.toString())) { unsupportedRoles.add(HadoopRole.HADOOP_NAMENODE_ROLE.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/3316/buggy-version/server.software-mgmt-plugin-clouderamgr.src.main.java.com.vmware.bdd.plugin.clouderamgr.service.ClouderaManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "fd07fd660f696ec5ccc2cd41e3f89d45b43272d9", "Url": "https://api.github.com/repos/vmware-serengeti/serengeti-ws", "Date": "2014-09-10T03:32:09Z"},
{"Line": "=>2147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.vmware.bdd.software.mgmt.plugin.model.NodeGroupInfo.getRoles()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (roles.isEmpty()) { return new java.util.ArrayList<java.lang.String>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/3316/buggy-version/server.software-mgmt-plugin-clouderamgr.src.main.java.com.vmware.bdd.plugin.clouderamgr.service.ClouderaManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "fd07fd660f696ec5ccc2cd41e3f89d45b43272d9", "Url": "https://api.github.com/repos/vmware-serengeti/serengeti-ws", "Date": "2014-09-10T03:32:09Z"},
{"Line": "=>2154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.vmware.bdd.software.mgmt.plugin.model.NodeGroupInfo.getRoles()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (roles.contains(HadoopRole.HADOOP_SECONDARY_NAMENODE_ROLE.toString())) { unsupportedRoles.add(HadoopRole.HADOOP_SECONDARY_NAMENODE_ROLE.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/3316/buggy-version/server.software-mgmt-plugin-clouderamgr.src.main.java.com.vmware.bdd.plugin.clouderamgr.service.ClouderaManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "fd07fd660f696ec5ccc2cd41e3f89d45b43272d9", "Url": "https://api.github.com/repos/vmware-serengeti/serengeti-ws", "Date": "2014-09-10T03:32:09Z"},
{"Line": "=>2157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.vmware.bdd.software.mgmt.plugin.model.NodeGroupInfo.getRoles()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (roles.contains(HadoopRole.HADOOP_JOBTRACKER_ROLE.toString())) { unsupportedRoles.add(HadoopRole.HADOOP_JOBTRACKER_ROLE.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/3316/buggy-version/server.software-mgmt-plugin-clouderamgr.src.main.java.com.vmware.bdd.plugin.clouderamgr.service.ClouderaManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "fd07fd660f696ec5ccc2cd41e3f89d45b43272d9", "Url": "https://api.github.com/repos/vmware-serengeti/serengeti-ws", "Date": "2014-09-10T03:32:09Z"},
{"Line": "=>2160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.vmware.bdd.software.mgmt.plugin.model.NodeGroupInfo.getRoles()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (roles.contains(HadoopRole.HADOOP_RESOURCEMANAGER_ROLE.toString())) { unsupportedRoles.add(HadoopRole.HADOOP_RESOURCEMANAGER_ROLE.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/3316/buggy-version/server.software-mgmt-plugin-clouderamgr.src.main.java.com.vmware.bdd.plugin.clouderamgr.service.ClouderaManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "fd07fd660f696ec5ccc2cd41e3f89d45b43272d9", "Url": "https://api.github.com/repos/vmware-serengeti/serengeti-ws", "Date": "2014-09-10T03:32:09Z"},
{"Line": "=>2163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.vmware.bdd.software.mgmt.plugin.model.NodeGroupInfo.getRoles()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (roles.contains(HadoopRole.ZOOKEEPER_SERVER_ROLE.toString())) { unsupportedRoles.add(HadoopRole.ZOOKEEPER_SERVER_ROLE.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/3316/buggy-version/server.software-mgmt-plugin-clouderamgr.src.main.java.com.vmware.bdd.plugin.clouderamgr.service.ClouderaManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "fd07fd660f696ec5ccc2cd41e3f89d45b43272d9", "Url": "https://api.github.com/repos/vmware-serengeti/serengeti-ws", "Date": "2014-09-10T03:32:09Z"},
{"Line": "=>632", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.vmware.bdd.software.mgmt.plugin.model.NodeGroupInfo.getRoles()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (roles.contains(HadoopRole.HADOOP_SECONDARY_NAMENODE_ROLE.toString())) { unsupportedRoles.add(HadoopRole.HADOOP_SECONDARY_NAMENODE_ROLE.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/3316/buggy-version/server.software-mgmt-plugin-ambari.src.main.java.com.vmware.bdd.plugin.ambari.service.AmbariImpl.java", "BodyUseAPI": [], "Fixed commit": "fd07fd660f696ec5ccc2cd41e3f89d45b43272d9", "Url": "https://api.github.com/repos/vmware-serengeti/serengeti-ws", "Date": "2014-09-10T03:32:09Z"},
{"Line": "=>635", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.vmware.bdd.software.mgmt.plugin.model.NodeGroupInfo.getRoles()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (roles.contains(HadoopRole.HADOOP_JOBTRACKER_ROLE.toString())) { unsupportedRoles.add(HadoopRole.HADOOP_JOBTRACKER_ROLE.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/3316/buggy-version/server.software-mgmt-plugin-ambari.src.main.java.com.vmware.bdd.plugin.ambari.service.AmbariImpl.java", "BodyUseAPI": [], "Fixed commit": "fd07fd660f696ec5ccc2cd41e3f89d45b43272d9", "Url": "https://api.github.com/repos/vmware-serengeti/serengeti-ws", "Date": "2014-09-10T03:32:09Z"},
{"Line": "=>625", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.vmware.bdd.software.mgmt.plugin.model.NodeGroupInfo.getRoles()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (roles.isEmpty()) { return new java.util.ArrayList<java.lang.String>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/3316/buggy-version/server.software-mgmt-plugin-ambari.src.main.java.com.vmware.bdd.plugin.ambari.service.AmbariImpl.java", "BodyUseAPI": [], "Fixed commit": "fd07fd660f696ec5ccc2cd41e3f89d45b43272d9", "Url": "https://api.github.com/repos/vmware-serengeti/serengeti-ws", "Date": "2014-09-10T03:32:09Z"},
{"Line": "=>629", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.vmware.bdd.software.mgmt.plugin.model.NodeGroupInfo.getRoles()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (roles.contains(HadoopRole.HADOOP_NAMENODE_ROLE.toString())) { unsupportedRoles.add(HadoopRole.HADOOP_NAMENODE_ROLE.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/3316/buggy-version/server.software-mgmt-plugin-ambari.src.main.java.com.vmware.bdd.plugin.ambari.service.AmbariImpl.java", "BodyUseAPI": [], "Fixed commit": "fd07fd660f696ec5ccc2cd41e3f89d45b43272d9", "Url": "https://api.github.com/repos/vmware-serengeti/serengeti-ws", "Date": "2014-09-10T03:32:09Z"},
{"Line": "=>641", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.vmware.bdd.software.mgmt.plugin.model.NodeGroupInfo.getRoles()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (roles.contains(HadoopRole.ZOOKEEPER_SERVER_ROLE.toString())) { unsupportedRoles.add(HadoopRole.ZOOKEEPER_SERVER_ROLE.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/3316/buggy-version/server.software-mgmt-plugin-ambari.src.main.java.com.vmware.bdd.plugin.ambari.service.AmbariImpl.java", "BodyUseAPI": [], "Fixed commit": "fd07fd660f696ec5ccc2cd41e3f89d45b43272d9", "Url": "https://api.github.com/repos/vmware-serengeti/serengeti-ws", "Date": "2014-09-10T03:32:09Z"},
{"Line": "=>638", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.vmware.bdd.software.mgmt.plugin.model.NodeGroupInfo.getRoles()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (roles.contains(HadoopRole.HADOOP_RESOURCEMANAGER_ROLE.toString())) { unsupportedRoles.add(HadoopRole.HADOOP_RESOURCEMANAGER_ROLE.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/3316/buggy-version/server.software-mgmt-plugin-ambari.src.main.java.com.vmware.bdd.plugin.ambari.service.AmbariImpl.java", "BodyUseAPI": [], "Fixed commit": "fd07fd660f696ec5ccc2cd41e3f89d45b43272d9", "Url": "https://api.github.com/repos/vmware-serengeti/serengeti-ws", "Date": "2014-09-10T03:32:09Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.vmware.bdd.software.mgmt.plugin.model.NodeGroupInfo.getRoles()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (roles.contains(HadoopRole.HADOOP_RESOURCEMANAGER_ROLE.toString())) { unsupportedRoles.add(HadoopRole.HADOOP_RESOURCEMANAGER_ROLE.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/3316/buggy-version/server.software-mgmt-plugin-default.src.main.java.com.vmware.bdd.plugin.ironfan.impl.DefaultSoftwareManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "fd07fd660f696ec5ccc2cd41e3f89d45b43272d9", "Url": "https://api.github.com/repos/vmware-serengeti/serengeti-ws", "Date": "2014-09-10T03:32:09Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.mrgeo.data.adhoc.AdHocDataProvider.getName(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (name != null) { if (org.apache.commons.io.FilenameUtils.getExtension(name).toLowerCase().equals(\"xml\")) { try (java.io.InputStream fdis = provider.get(i)) { org.mrgeo.colorscale.ColorScale cs = org.mrgeo.colorscale.ColorScale.loadFromXML(fdis); org.mrgeo.colorscale.ColorScaleManager.colorscales.put(org.apache.commons.io.FilenameUtils.getBaseName(name), cs); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/3030/buggy-version/mrgeo-core.src.main.java.org.mrgeo.colorscale.ColorScaleManager.java", "BodyUseAPI": ["org.apache.commons.io.FilenameUtils.getExtension(name).toLowerCase().equals(java.lang.String)", "org.apache.commons.io.FilenameUtils.getBaseName(java.lang.String)", "org.apache.commons.io.FilenameUtils.getExtension(name).toLowerCase()", "java.util.Map<java.lang.String, org.mrgeo.colorscale.ColorScale>.put(org.apache.commons.io.FilenameUtils.getBaseName(name),org.mrgeo.colorscale.ColorScale)", "org.apache.commons.io.FilenameUtils.getExtension(java.lang.String)"], "Fixed commit": "dbb9b2a0ed8930865f910a14f2ddd38e4aeabc85", "Url": "https://api.github.com/repos/ngageoint/mrgeo", "Date": "2017-02-16T14:26:37Z"},
{"Line": "=>356", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (token.contentEquals(\"synchronized\")) { continue; }else if ((i >= 1) && ((method.getReturnType()) == null)) { method.setReturnType(token); }else if ((i >= 2) && ((method.getName()) == null)) { try { java.lang.String methodSig = token.substring(0, token.indexOf('(')); methodSig = methodSig.substring(((methodSig.lastIndexOf('.')) + 1)); if (methodSig.contains(\"$\")) { methodSig = methodSig.substring(0, methodSig.lastIndexOf('$')); } method.setName(methodSig); } catch (final java.lang.Exception e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/4254/buggy-version/rac.creator.src.main.java.org.iobserve.rac.creator.RacCreator.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.indexOf(char)", "org.iobserve.analysis.protocom.PcmCorrespondentMethod.setReturnType(java.lang.String)"], "Fixed commit": "fecef8abca91abd22cf9212ea654e33aa82136bd", "Url": "https://api.github.com/repos/research-iobserve/iobserve-analysis", "Date": "2017-05-09T10:18:01Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((!mobile) || groundLocked) { addBehavior(new org.jtrfp.trcl.beh.ExplodesOnDeath(org.jtrfp.trcl.obj.Explosion.ExplosionType.BigExplosion)); }else { addBehavior(new org.jtrfp.trcl.beh.ExplodesOnDeath(org.jtrfp.trcl.obj.Explosion.ExplosionType.Blast)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/6397/buggy-version/src.main.java.org.jtrfp.trcl.obj.DEFObject.java", "BodyUseAPI": [], "Fixed commit": "5783b2f35a6eb0851fb670bbbf734c05fc071761", "Url": "https://api.github.com/repos/jtrfp/terminal-recall", "Date": "2014-01-07T00:33:35Z"},
{"Line": "=>592", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.thinkinglogic.rest.mock.ResponseBuilder.replaceEmptyValue(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((value.indexOf(\":\")) >= 0) { value = value.substring(((value.indexOf(\":\")) + 1)); com.thinkinglogic.rest.mock.ResponseBuilder.logger.debug((((\" -> \" + path) + \"=\") + value)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/6193/buggy-version/src.java.com.thinkinglogic.rest.mock.ResponseBuilder.java", "BodyUseAPI": ["java.lang.String.indexOf(java.lang.String)", "java.lang.String.substring(int)"], "Fixed commit": "87e79a9a95d1f8448688c6106f69ab25dcc55498", "Url": "https://api.github.com/repos/ThinkingLogic/rest-mocker", "Date": "2013-09-04T14:41:21Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.lwjgl.LWJGLUtil.getPlatform()) == (LWJGLUtil.Platform.MACOSX)) glfwWindowHint(minusk.render.core.GLFW_CONTEXT_VERSION_MINOR, 2); else glfwWindowHint(minusk.render.core.GLFW_CONTEXT_VERSION_MINOR, 3);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/8397/buggy-version/src.minusk.render.core.Window.java", "BodyUseAPI": [], "Fixed commit": "33fcc923c9335970e5759ae3c856e118a5ed1304", "Url": "https://api.github.com/repos/MinusKelvin/Rendering-Engine", "Date": "2015-05-12T03:48:34Z"},
{"Line": "=>1030", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((peekToken()) instanceof mc.compiler.CommaToken) { nextToken(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/91/buggy-version/modelchecker.src.main.java.mc.compiler.Parser.java", "BodyUseAPI": [], "Fixed commit": "5eb365de10d9234fbed6887cfd57fb13275c1c34", "Url": "https://api.github.com/repos/DavidSheridan/Model-Checker", "Date": "2017-02-15T01:07:12Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang.StringUtils.endsWith(loginString.toString(), \"?\")) { additionalParams = org.apache.commons.lang.StringUtils.removeStart(additionalParams, \"&\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V88/7871/buggy-version/idp-cas-invoker.src.main.java.net.unicon.idp.authn.provider.CasLoginHandler.java", "BodyUseAPI": [], "Fixed commit": "02081408298246b1aee56bdbf6959363aa0cd26e", "Url": "https://api.github.com/repos/Unicon/shib-cas-authn2", "Date": "2014-03-31T17:16:15Z"},
{"Line": "=>401", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((numericStr.endsWith(\"D\")) || (numericStr.endsWith(\"d\"))) || (numericStr.contains(\".\"))) { literal = new org.epochx.epox.Literal(n.doubleValue()); }else if ((!(numericStr.endsWith(\"L\"))) && (!(numericStr.endsWith(\"l\")))) { long longValue = n.longValue(); if ((longValue <= (java.lang.Integer.MAX_VALUE)) && (longValue >= (java.lang.Integer.MIN_VALUE))) { literal = new org.epochx.epox.Literal(n.intValue()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/2209/buggy-version/version1.common-src.org.epochx.epox.EpoxParser.java", "BodyUseAPI": ["java.lang.String.endsWith(java.lang.String)", "java.lang.String.endsWith(java.lang.String)"], "Fixed commit": "d72bdfa444905faa3bbbb8536225b1915194d632", "Url": "https://api.github.com/repos/tc33/EpochX", "Date": "2011-08-14T16:21:35Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["at.netcrawler.network.connection.snmp.SNMPConnection.getNext(java.lang.String[])"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (result == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/5371/buggy-version/src.at.netcrawler.network.connection.snmp.SNMPConnection.java", "BodyUseAPI": [], "Fixed commit": "85d7df8b5b531e9252de4b4182b342601073ca18", "Url": "https://api.github.com/repos/TomTasche/netCrawler", "Date": "2011-11-22T19:04:37Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["at.netcrawler.network.connection.snmp.SNMPConnection.get(java.lang.String[])"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (result == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/5371/buggy-version/src.at.netcrawler.network.connection.snmp.SNMPConnection.java", "BodyUseAPI": [], "Fixed commit": "85d7df8b5b531e9252de4b4182b342601073ca18", "Url": "https://api.github.com/repos/TomTasche/netCrawler", "Date": "2011-11-22T19:04:37Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["at.netcrawler.network.connection.snmp.SNMPConnection.set(at.netcrawler.network.connection.snmp.SNMPObject[])"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (result == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/5371/buggy-version/src.at.netcrawler.network.connection.snmp.SNMPConnection.java", "BodyUseAPI": [], "Fixed commit": "85d7df8b5b531e9252de4b4182b342601073ca18", "Url": "https://api.github.com/repos/TomTasche/netCrawler", "Date": "2011-11-22T19:04:37Z"},
{"Line": "=>703", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["bot.database.manager.data.GuildSetting.getPrefix()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (prefix == null) { return \"!\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/5228/buggy-version/src.bot.database.manager.DatabaseManager.java", "BodyUseAPI": [], "Fixed commit": "df3cf69e4cbfa77676ef24cd09ced052041bf532", "Url": "https://api.github.com/repos/IANetworks/Ducky-Mc-Duckerson", "Date": "2017-11-01T22:41:06Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((seedu.lifekeeper.model.activity.task.ReadOnlyTask) (activity)).getDueDate()) != null) dateTime.setText(((seedu.lifekeeper.model.activity.task.ReadOnlyTask) (activity)).getDueDate().forDisplay());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/4135/buggy-version/src.main.java.seedu.lifekeeper.ui.ActivityCard.java", "BodyUseAPI": ["seedu.lifekeeper.model.activity.ReadOnlyActivity.getDueDate()", "javafx.scene.control.Label.setText(((seedu.lifekeeper.model.activity.task.ReadOnlyTask) (activity)).getDueDate().forDisplay())", "((seedu.lifekeeper.model.activity.task.ReadOnlyTask) (activity)).getDueDate().forDisplay()"], "Fixed commit": "36ac97699fdec338890cc1cf207128968d7e44a0", "Url": "https://api.github.com/repos/CS2103AUG2016-T13-C2/main", "Date": "2016-11-07T06:06:59Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pcb) != null) { pcb.allowFlying = true; if (sprintButton.isKeyDown()) { pcb.setFlySpeed(maxflyspeed); pcb.setPlayerWalkSpeed(sprintspeed); }else { pcb.setFlySpeed(defaultWalkSpeed); pcb.setPlayerWalkSpeed(defaultWalkSpeed); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/1650/buggy-version/SimplyHax.src.main.java.atomicstryker.simplyhax.SimplyHaxFlying.java", "BodyUseAPI": [], "Fixed commit": "567fc4b1be7e116fcc19eac7aa1f38a7421fa8d8", "Url": "https://api.github.com/repos/AtomicStryker/atomicstrykers-minecraft-mods", "Date": "2016-03-23T23:14:43Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((index) < (sentences.length)) { this.collector.emit(new backtype.storm.tuple.Values(sentences[((index) % (sentences.length))])); (index)++; storm.blueprints.utils.Utils.waitForMillis(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/937/buggy-version/word-count.Chapter1.src.main.java.storm.blueprints.SentenceSpout.java", "BodyUseAPI": ["backtype.storm.spout.SpoutOutputCollector.emit(backtype.storm.tuple.Values)"], "Fixed commit": "34eb5156c922baec5dc84221ca09ff65bdbc9de6", "Url": "https://api.github.com/repos/radcheb/Storm-demos", "Date": "2015-04-08T13:20:16Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, java.lang.Long>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (old_count == null) { counts.put(word, count); }else { counts.put(word, (count + old_count)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/937/buggy-version/word-count.Chapter1.src.main.java.storm.blueprints.ReportBolt.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.Long>.put(java.lang.String,long)"], "Fixed commit": "34eb5156c922baec5dc84221ca09ff65bdbc9de6", "Url": "https://api.github.com/repos/radcheb/Storm-demos", "Date": "2015-04-08T13:20:16Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((arguments != null) && ((arguments.size()) > 0)) { rootPath = org.eclipse.jdt.ls.core.internal.ResourceUtils.filePathFromURI(((java.lang.String) (arguments.get(0)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/1009/buggy-version/com.microsoft.java.debug.plugin.src.main.java.com.microsoft.java.debug.plugin.internal.ResolveMainClassHandler.java", "BodyUseAPI": ["java.util.List<java.lang.Object>.get(int)", "org.eclipse.jdt.ls.core.internal.ResourceUtils.filePathFromURI(java.lang.Object)"], "Fixed commit": "6fb7350cec1e6da40b99f4a14c06a80444a63bb1", "Url": "https://api.github.com/repos/Microsoft/java-debug", "Date": "2017-11-22T08:20:42Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.core.resources.IResource.getProject()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (((projectName == null) || (targetProjectPath.isEmpty())) || (org.eclipse.jdt.ls.core.internal.ResourceUtils.isContainedIn(project.getLocation(), targetProjectPath))) { res.add(new com.microsoft.java.debug.plugin.internal.ResolveMainClassHandler.ResolutionItem(mainClass, projectName)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/1009/buggy-version/com.microsoft.java.debug.plugin.src.main.java.com.microsoft.java.debug.plugin.internal.ResolveMainClassHandler.java", "BodyUseAPI": ["java.util.ArrayList<com.microsoft.java.debug.plugin.internal.ResolveMainClassHandler.ResolutionItem>.add(com.microsoft.java.debug.plugin.internal.ResolveMainClassHandler.ResolutionItem)"], "Fixed commit": "6fb7350cec1e6da40b99f4a14c06a80444a63bb1", "Url": "https://api.github.com/repos/Microsoft/java-debug", "Date": "2017-11-22T08:20:42Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (rootPath != null) { targetProjectPath.add(rootPath); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/1009/buggy-version/com.microsoft.java.debug.plugin.src.main.java.com.microsoft.java.debug.plugin.internal.ResolveMainClassHandler.java", "BodyUseAPI": ["java.util.ArrayList<org.eclipse.core.runtime.IPath>.add(org.eclipse.core.runtime.IPath)"], "Fixed commit": "6fb7350cec1e6da40b99f4a14c06a80444a63bb1", "Url": "https://api.github.com/repos/Microsoft/java-debug", "Date": "2017-11-22T08:20:42Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(fr.moribus.imageonmap.ui.SplatterMapManager.placeSplatterMap(frame, player))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/5157/buggy-version/src.main.java.fr.moribus.imageonmap.ui.MapItemManager.java", "BodyUseAPI": [], "Fixed commit": "97e62c1a1425b2ec4038a821cc5afa35f20de589", "Url": "https://api.github.com/repos/zDevelopers/ImageOnMap", "Date": "2016-07-07T21:28:17Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasSource) { warmerEntry.source().writeTo(out); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/6513/buggy-version/core.src.main.java.org.elasticsearch.action.admin.indices.get.GetIndexResponse.java", "BodyUseAPI": [], "Fixed commit": "2de450ca0b25723ec3974e98521631e92d649394", "Url": "https://api.github.com/repos/elastic/elasticsearch", "Date": "2015-09-23T18:57:59Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((algorithm.getAlgorithm()) != null) { try { javax.script.ScriptEngineManager mgr = new javax.script.ScriptEngineManager(); javax.script.ScriptEngine engine = mgr.getEngineByName(\"JavaScript\"); engine.eval(algorithm.getAlgorithm()); } catch (javax.script.ScriptException e) { compileErrorMessage = e.getMessage(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/7468/buggy-version/src.main.java.edu.unlv.cs.edas.design.controller.AlgorithmController.java", "BodyUseAPI": ["edu.unlv.cs.edas.design.domain.Algorithm.getAlgorithm()", "javax.script.ScriptEngine.eval(algorithm.getAlgorithm())"], "Fixed commit": "accff016aa5b96ddfb0a3e99718ee7c1a4f09eb4", "Url": "https://api.github.com/repos/cpj0106/eDAS", "Date": "2014-05-31T02:48:43Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (\"-Xjre\".equals(args[1])) { if ((args.length) < 4) { isRightFmt = false; } classNameIndex = 3; this.xJreOption = args[2]; }else if (args[1].startsWith(\"-\")) { isRightOpt = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/474/buggy-version/Java.src.Utils.Cmd.java", "BodyUseAPI": ["java.lang.String.startsWith(java.lang.String)"], "Fixed commit": "7e1d29aec0c5cc1b1cf2743dcde7b7a75c1d06b4", "Url": "https://api.github.com/repos/zachaxy/JVM", "Date": "2017-12-23T01:33:53Z"},
{"Line": "=>327", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((p.getPath()) != null) && ((p.getRegion()) != null)) { r.setPath(p.getPath(), p.getRegion()); if ((r.contains(((int) (point.x)), ((int) (point.y)))) && ((event.getAction()) == (android.view.MotionEvent.ACTION_DOWN))) { indexSelected = count; }else if ((event.getAction()) == (android.view.MotionEvent.ACTION_UP)) { if ((r.contains(((int) (point.x)), ((int) (point.y)))) && ((listener) != null)) { listener.onClick(lineCount, pointCount); } indexSelected = -1; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/1646/buggy-version/HoloGraphLibrary.src.com.echo.holographlibrary.LineGraph.java", "BodyUseAPI": ["android.graphics.Region.setPath(p.getPath(),p.getRegion())", "com.echo.holographlibrary.LinePoint.getRegion()", "com.echo.holographlibrary.LinePoint.getPath()"], "Fixed commit": "59b6c17244bb8e52b2e83f9231ea068982acb533", "Url": "https://api.github.com/repos/menghang/HoloGraphLibrary", "Date": "2013-03-14T16:46:28Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((uk.ac.glasgow.main.MainWindow.currentEditor) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/2607/buggy-version/src.uk.ac.glasgow.main.MainWindow.java", "BodyUseAPI": [], "Fixed commit": "d84f6ac42f6bb841d71883a659fc06fcd36b1235", "Url": "https://api.github.com/repos/nikolovb1/SourceCodeClippy", "Date": "2015-11-29T23:06:15Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((contentType.getCharset()) == null) { contentType = contentType.withCharset(request.charset()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/5792/buggy-version/httpclient.src.main.java.feign.httpclient.ApacheHttpClient.java", "BodyUseAPI": ["org.apache.http.entity.ContentType.withCharset(request.charset())"], "Fixed commit": "29ed13041c44f53ed1b1c2fe526acc084019426c", "Url": "https://api.github.com/repos/phymbert/feign", "Date": "2017-06-12T12:47:40Z"},
{"Line": "=>9", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((this.getBody().length()) > 10) { this.summary = this.getBody().substring(0, 11); }else { this.summary = body; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/2127/buggy-version/src.tr.org.lyk.blog.TextPost.java", "BodyUseAPI": [], "Fixed commit": "52b8944adf683aa2806aae9b24e099ce4c324a49", "Url": "https://api.github.com/repos/frknnay/simpleConsoleBlog", "Date": "2016-08-17T09:26:57Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<tr.org.lyk.blog.Post>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (currentPost instanceof tr.org.lyk.blog.TextPost) { menu.append(((tr.org.lyk.blog.TextPost) (currentPost)).getSummary()); }else { menu.append(currentPost.getBody()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/2127/buggy-version/src.tr.org.lyk.blog.Menu.java", "BodyUseAPI": ["java.lang.StringBuilder.append(currentPost.getBody())", "tr.org.lyk.blog.Post.getBody()"], "Fixed commit": "52b8944adf683aa2806aae9b24e099ce4c324a49", "Url": "https://api.github.com/repos/frknnay/simpleConsoleBlog", "Date": "2016-08-17T09:26:57Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((meta.isInFields()) && (!(meta.isRemoveSourceField()))) { start = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/933/buggy-version/plugins.kettle-json-plugin.src.org.pentaho.di.trans.steps.jsoninput.JsonInput.java", "BodyUseAPI": [], "Fixed commit": "af03b191ebf4d49958de38bbcd80455eabda2173", "Url": "https://api.github.com/repos/ArtsiomYurhevich/pentaho-kettle", "Date": "2016-05-19T15:11:21Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(amidst.Amidst.isWindows())) { amidst.Amidst.setAndLogProperty(\"sun.java2d.opengl\", \"True\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/1120/buggy-version/src.main.java.amidst.Amidst.java", "BodyUseAPI": [], "Fixed commit": "c9d2623390b23874933b56be6356626c9e0e7b7f", "Url": "https://api.github.com/repos/toolbox4minecraft/amidst", "Date": "2016-02-20T07:15:30Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.charAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (c3 == '_') { propertyName = methodName.substring(4); }else if (c3 == 'f') { propertyName = methodName.substring(3); }else if (((methodName.length()) >= 5) && (java.lang.Character.isUpperCase(methodName.charAt(4)))) { propertyName = com.alibaba.fastjson.util.TypeUtils.decapitalize(methodName.substring(3)); }else { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/3267/buggy-version/src.main.java.com.alibaba.fastjson.util.DeserializeBeanInfo.java", "BodyUseAPI": [], "Fixed commit": "b5c371fe4693b0b532540a3bc5da5a145c13fd86", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2014-10-04T02:31:59Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.classicube.launcher.gui.PromptScreen.show(java.lang.String,java.lang.String,java.lang.String,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (givenString.equals(\"localhost\")) { chosenAddress = java.net.InetAddress.getLoopbackAddress(); }else { chosenAddress = java.net.InetAddress.getByName(givenString); if (!(chosenAddress.isSiteLocalAddress())) { throw new java.net.UnknownHostException(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/1989/buggy-version/ClassiCubeLauncher.src.net.classicube.launcher.gui.SameIPScreen.java", "BodyUseAPI": ["java.net.InetAddress.getByName(java.lang.String)"], "Fixed commit": "b3bdf114818de19b2d5180754c653a93b2493232", "Url": "https://api.github.com/repos/fragmer/ClassiCubeLauncher", "Date": "2014-02-18T01:23:13Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uk.ac.mdx.cs.asip.examples.AsipMirtoPIDFollower.cutIR(robot.getIR(1))", "uk.ac.mdx.cs.asip.examples.AsipMirtoPIDFollower.cutIR(robot.getIR(2))", "uk.ac.mdx.cs.asip.examples.AsipMirtoPIDFollower.cutIR(robot.getIR(0))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((leftIR == 0) && (middleIR == 0)) && (rightIR == 0)) { curError = prevError; }else { curError = computeError(leftIR, middleIR, rightIR, prevError); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/6115/buggy-version/src.uk.ac.mdx.cs.asip.examples.AsipMirtoPIDFollower.java", "BodyUseAPI": ["uk.ac.mdx.cs.asip.examples.AsipMirtoPIDFollower.computeError(int,int,int,double)"], "Fixed commit": "cc339320afb7dee9ec827a801f1b4c1ba7dcbfe1", "Url": "https://api.github.com/repos/fraimondi/java-asip", "Date": "2014-11-08T09:21:51Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((il.org.spartan.spartanizer.tippers.InfixIndexOfToStringContains.tippers.size()) == 4) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/2234/buggy-version/src.main.java.il.org.spartan.spartanizer.tippers.InfixIndexOfToStringContains.java", "BodyUseAPI": [], "Fixed commit": "bed556b468010a42f57d74fbcd77fd7d0e78f0ce", "Url": "https://api.github.com/repos/SpartanRefactoring/Main", "Date": "2016-10-10T06:10:02Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (track.getGenreName().equals(null)) { model.DBAccess.preparedStatement = model.DBAccess.connection.prepareStatement(model.DBAccess.insertTracksQuerry); }else { model.DBAccess.preparedStatement = model.DBAccess.connection.prepareStatement(model.DBAccess.insertTracksIncGenreQuerry); model.DBAccess.preparedStatement.setString(1, track.getGenreName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/2041/buggy-version/src.model.DBAccess.java", "BodyUseAPI": ["java.sql.PreparedStatement.setString(int,track.getGenreName())", "model.Track.getGenreName()"], "Fixed commit": "ca8171079974622d6dc51d9816e0b526741b4e29", "Url": "https://api.github.com/repos/Cimex97/schalplatten_dbs", "Date": "2017-09-20T17:33:10Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ServerRun.runningServer) ServerRun.server.closeServer();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/3686/buggy-version/src.ServerRun.java", "BodyUseAPI": [], "Fixed commit": "2db6091f4476cb1ecb28cec65c74c31949ad1ee8", "Url": "https://api.github.com/repos/MTUCappuccino/Helium_Server", "Date": "2017-11-02T01:38:31Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(ServerRun.runningServer)) { ServerRun.Sysp(\"No server running to get info about...\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/3686/buggy-version/src.ServerRun.java", "BodyUseAPI": [], "Fixed commit": "2db6091f4476cb1ecb28cec65c74c31949ad1ee8", "Url": "https://api.github.com/repos/MTUCappuccino/Helium_Server", "Date": "2017-11-02T01:38:31Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isEmpty()) return array;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/2468/buggy-version/CircularlyLinkedList.java", "BodyUseAPI": [], "Fixed commit": "11552d1b4e3054eee1d70bc2be826fc23f60672e", "Url": "https://api.github.com/repos/NgoMing/DataStructures_Algorithms", "Date": "2017-10-25T23:13:53Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isEmpty()) return this;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/2468/buggy-version/CircularlyLinkedList.java", "BodyUseAPI": [], "Fixed commit": "11552d1b4e3054eee1d70bc2be826fc23f60672e", "Url": "https://api.github.com/repos/NgoMing/DataStructures_Algorithms", "Date": "2017-10-25T23:13:53Z"},
{"Line": "=>776", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!ntlm) rec.getRecordedInput().readFullyOrUntil(softMax); else { rec.getRecordedInput().getReplayInputStream().read(method.getResponseBody()); rec.getRecordedInput().getRecordingOutputStream().close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/8807/buggy-version/engine-3.1.1.modules.src.main.java.org.archive.modules.fetcher.FetchHTTP.java", "BodyUseAPI": [], "Fixed commit": "0cccecd4a0c4ebbf334788833332304797a81467", "Url": "https://api.github.com/repos/searchtechnologies/heritrix-connector", "Date": "2016-08-30T19:52:40Z"},
{"Line": "=>760", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (c instanceof org.archive.modules.credential.HttpAuthenticationCredential) { org.archive.modules.credential.HttpAuthenticationCredential cred = ((org.archive.modules.credential.HttpAuthenticationCredential) (c)); ntlm = cred.getUsingNtlm(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/8807/buggy-version/engine-3.1.1.modules.src.main.java.org.archive.modules.fetcher.FetchHTTP.java", "BodyUseAPI": [], "Fixed commit": "0cccecd4a0c4ebbf334788833332304797a81467", "Url": "https://api.github.com/repos/searchtechnologies/heritrix-connector", "Date": "2016-08-30T19:52:40Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.res.Resources.getColorStateList(controller.getTabItemColor())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (csl != null) { textView.setTextColor(csl); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/5378/buggy-version/android-common-lib.src.main.java.net.datafans.android.common.widget.tabbar.TabbarFragment.java", "BodyUseAPI": ["android.widget.TextView.setTextColor(android.content.res.ColorStateList)"], "Fixed commit": "9ff3fba2973454d0905e2dd6347c9895ba7def9e", "Url": "https://api.github.com/repos/anyunzhong/AndroidCommon", "Date": "2015-06-23T15:27:50Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(cell.getValue().equals(\"\"))) { if (cell.getValue().contains(\".\")) { content.put(((java.lang.String) (excelDataToCouchbase.convertToJson.ExcelrowToJSON.spaltenName.get(i))), java.lang.Double.parseDouble(cell.getValue().toString())); }else { content.put(((java.lang.String) (excelDataToCouchbase.convertToJson.ExcelrowToJSON.spaltenName.get(i))), java.text.NumberFormat.getInstance().parse(cell.getValue())); } }else { content.put(((java.lang.String) (excelDataToCouchbase.convertToJson.ExcelrowToJSON.spaltenName.get(i))), \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/1513/buggy-version/src.excelDataToCouchbase.convertToJson.ExcelrowToJSON.java", "BodyUseAPI": ["cell.getValue().contains(java.lang.String)", "com.couchbase.client.java.document.json.JsonObject.put(java.lang.Object,java.lang.Number)", "com.incesoft.tools.excel.xlsx.Cell.getValue()", "com.couchbase.client.java.document.json.JsonObject.put(java.lang.Object,double)", "com.incesoft.tools.excel.xlsx.Cell.getValue()", "cell.getValue().toString()", "java.lang.Double.parseDouble(cell.getValue().toString())", "com.incesoft.tools.excel.xlsx.Cell.getValue()", "java.text.NumberFormat.parse(cell.getValue())"], "Fixed commit": "bdc79055a5bb32763b82e53c2f672bdc467c51c0", "Url": "https://api.github.com/repos/daudna/ExcelDataToCouchbase", "Date": "2016-12-13T18:12:48Z"},
{"Line": "=>303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (relativeTo == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/42/buggy-version/src.com.uwsoft.editor.gdx.sandbox.ItemSelector.java", "BodyUseAPI": [], "Fixed commit": "f00c6bff88473d857b10507c86d2257eef034727", "Url": "https://api.github.com/repos/UnderwaterApps/overlap2d", "Date": "2015-04-15T10:42:07Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (relativeTo == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/42/buggy-version/src.com.uwsoft.editor.gdx.sandbox.ItemSelector.java", "BodyUseAPI": [], "Fixed commit": "f00c6bff88473d857b10507c86d2257eef034727", "Url": "https://api.github.com/repos/UnderwaterApps/overlap2d", "Date": "2015-04-15T10:42:07Z"},
{"Line": "=>313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.os.Build.VERSION.SDK_INT) >= (android.os.Build.VERSION_CODES.M)) { android.media.MediaPlayer player = this.playerPool.get(key); if (player != null) { player.setPlaybackParams(player.getPlaybackParams().setSpeed(speed)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/5817/buggy-version/android.src.main.java.com.zmxv.RNSound.RNSoundModule.java", "BodyUseAPI": [], "Fixed commit": "f5e75959801d90431ff03bce5490c960b2803d94", "Url": "https://api.github.com/repos/tt-sport-mobile/react-native-sound", "Date": "2017-12-12T12:57:11Z"},
{"Line": "=>1030", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((i < 0) || (i >= (data.lines.size()))) return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/4394/buggy-version/src.neoe.ne.U.java", "BodyUseAPI": [], "Fixed commit": "c9c38e2076a3dc2636d0798bcc62742ebd0836c5", "Url": "https://api.github.com/repos/neoedmund/neoeedit", "Date": "2015-10-22T08:01:26Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lines().isEmpty()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/4394/buggy-version/src.neoe.ne.U.java", "BodyUseAPI": [], "Fixed commit": "c9c38e2076a3dc2636d0798bcc62742ebd0836c5", "Url": "https://api.github.com/repos/neoedmund/neoeedit", "Date": "2015-10-22T08:01:26Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((member) != null ? !(member.equals(that.member)) : (that.member) != null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/5338/buggy-version/hazelcast.src.main.java.com.hazelcast.cache.impl.CachePartitionEventData.java", "BodyUseAPI": [], "Fixed commit": "c6e8254906ba30249a74abd06ed4bb4576bc6a8d", "Url": "https://api.github.com/repos/hazelcast/hazelcast", "Date": "2016-05-03T17:42:21Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(o instanceof com.hazelcast.cache.impl.CachePartitionEventData)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/5338/buggy-version/hazelcast.src.main.java.com.hazelcast.cache.impl.CachePartitionEventData.java", "BodyUseAPI": [], "Fixed commit": "c6e8254906ba30249a74abd06ed4bb4576bc6a8d", "Url": "https://api.github.com/repos/hazelcast/hazelcast", "Date": "2016-05-03T17:42:21Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((partitionId) != (that.partitionId)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/5338/buggy-version/hazelcast.src.main.java.com.hazelcast.cache.impl.CachePartitionEventData.java", "BodyUseAPI": [], "Fixed commit": "c6e8254906ba30249a74abd06ed4bb4576bc6a8d", "Url": "https://api.github.com/repos/hazelcast/hazelcast", "Date": "2016-05-03T17:42:21Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this) == o) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/5338/buggy-version/hazelcast.src.main.java.com.hazelcast.cache.impl.CachePartitionEventData.java", "BodyUseAPI": [], "Fixed commit": "c6e8254906ba30249a74abd06ed4bb4576bc6a8d", "Url": "https://api.github.com/repos/hazelcast/hazelcast", "Date": "2016-05-03T17:42:21Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ch.astorm.ssmt.diff.Diff.getFrom()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (bf instanceof ch.astorm.ssmt.core.Column) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/2334/buggy-version/ssmt.src.ch.astorm.ssmt.diff.DiffManager.java", "BodyUseAPI": [], "Fixed commit": "16719a6b7bfbd40e539434e29dda328af6198724", "Url": "https://api.github.com/repos/ctabin/ssmt", "Date": "2015-07-25T21:10:10Z"},
{"Line": "=>285", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ch.astorm.ssmt.diff.Diff.getTo()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (bt instanceof ch.astorm.ssmt.core.Column) { ch.astorm.ssmt.core.Column bc = ((ch.astorm.ssmt.core.Column) (bt)); for (ch.astorm.ssmt.core.Index idx : atb.getIndexes()) { if (idx instanceof ch.astorm.ssmt.core.ForeignKey) { ch.astorm.ssmt.core.ForeignKey fk = ((ch.astorm.ssmt.core.ForeignKey) (idx)); if (fk.getTargetReference().getColumns().contains(bc)) { return true; } } } return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/2334/buggy-version/ssmt.src.ch.astorm.ssmt.diff.DiffManager.java", "BodyUseAPI": [], "Fixed commit": "16719a6b7bfbd40e539434e29dda328af6198724", "Url": "https://api.github.com/repos/ctabin/ssmt", "Date": "2015-07-25T21:10:10Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((parsed.length) != 2) { throw new java.lang.IllegalArgumentException((((\"PAYMENTREQUEST_0_CUSTOM is not constructed correctly - (\" + customField) + \"): \") + \"should be of the form completeCheckoutBoolean_orderIdLong\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/7556/buggy-version/src.main.java.org.broadleafcommerce.vendor.paypal.service.payment.PayPalResponseGeneratorImpl.java", "BodyUseAPI": [], "Fixed commit": "ce84346c1006fd25bd1ce7178c9179da8384c4cd", "Url": "https://api.github.com/repos/BroadleafCommerce/blc-paypal", "Date": "2014-01-03T20:42:54Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (i < 3) series[i].appendData(new com.jjoe64.graphview.series.DataPoint(xIndex, values[i]), true, 1000);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/3477/buggy-version/app.src.main.java.ch.ethz.inf.vs.a1.pascalo.sensors.vs_pascalo_sensors.SensorView.java", "BodyUseAPI": ["series[i].appendData(com.jjoe64.graphview.series.DataPoint,boolean,int)"], "Fixed commit": "81d32f774f8338147f1f21e4577528445cc7c730", "Url": "https://api.github.com/repos/oberholzerp/VS_pascalo_Sensors", "Date": "2016-10-05T14:10:22Z"},
{"Line": "=>366", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((e != null) && ((e.getMessage()) != null)) { android.util.Log.e(tag, e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/7192/buggy-version/mjpegviewer.src.main.java.com.longdo.mjpegviewer.MjpegView.java", "BodyUseAPI": ["java.lang.Exception.getMessage()", "android.util.Log.e(java.lang.String,java.lang.String)"], "Fixed commit": "5df82938c216660802c0402a8cd7f90846a51145", "Url": "https://api.github.com/repos/perthcpe23/android-mjpeg-view", "Date": "2017-06-25T16:04:15Z"},
{"Line": "=>374", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((e != null) && ((e.getMessage()) != null)) { android.util.Log.e(tag, e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/7192/buggy-version/mjpegviewer.src.main.java.com.longdo.mjpegviewer.MjpegView.java", "BodyUseAPI": ["java.lang.Exception.getMessage()", "android.util.Log.e(java.lang.String,java.lang.String)"], "Fixed commit": "5df82938c216660802c0402a8cd7f90846a51145", "Url": "https://api.github.com/repos/perthcpe23/android-mjpeg-view", "Date": "2017-06-25T16:04:15Z"},
{"Line": "=>393", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((e != null) && ((e.getMessage()) != null)) { android.util.Log.e(tag, e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/7192/buggy-version/mjpegviewer.src.main.java.com.longdo.mjpegviewer.MjpegView.java", "BodyUseAPI": ["android.util.Log.e(java.lang.String,java.lang.String)", "java.lang.InterruptedException.getMessage()"], "Fixed commit": "5df82938c216660802c0402a8cd7f90846a51145", "Url": "https://api.github.com/repos/perthcpe23/android-mjpeg-view", "Date": "2017-06-25T16:04:15Z"},
{"Line": "=>384", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((e != null) && ((e.getMessage()) != null)) { android.util.Log.e(tag, e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/7192/buggy-version/mjpegviewer.src.main.java.com.longdo.mjpegviewer.MjpegView.java", "BodyUseAPI": ["android.util.Log.e(java.lang.String,java.lang.String)", "java.lang.Exception.getMessage()"], "Fixed commit": "5df82938c216660802c0402a8cd7f90846a51145", "Url": "https://api.github.com/repos/perthcpe23/android-mjpeg-view", "Date": "2017-06-25T16:04:15Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mwallet.decrypt(new java.lang.String(oldPass.getPassword())))) { javax.swing.JOptionPane.showMessageDialog(view, \"Your password is incorrect.\", \"Error\", javax.swing.JOptionPane.WARNING_MESSAGE); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/6965/buggy-version/AquaRegia.src.org.aquaregia.ui.Controller.java", "BodyUseAPI": [], "Fixed commit": "c260f7b6c290b5297a55814f81b37a7c65d40052", "Url": "https://api.github.com/repos/yiyanghu/AquaRegia", "Date": "2014-04-27T09:17:02Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((nPassword.length()) == 0) { if (!(mwallet.isEncrypted())) { javax.swing.JOptionPane.showMessageDialog(view, \"Your wallet now is not encrypted.\"); }else { throw new java.lang.RuntimeException(\"The wallet should be decrypted here\"); } }else { mwallet.encrypt(nPassword); javax.swing.JOptionPane.showMessageDialog(view, \"Your wallet has been protected with a new password.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/6965/buggy-version/AquaRegia.src.org.aquaregia.ui.Controller.java", "BodyUseAPI": ["org.aquaregia.wallet.ARWallet.encrypt(java.lang.String)"], "Fixed commit": "c260f7b6c290b5297a55814f81b37a7c65d40052", "Url": "https://api.github.com/repos/yiyanghu/AquaRegia", "Date": "2014-04-27T09:17:02Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (x < 10) { x = 10; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/4667/buggy-version/DesktopBGChanger.src.main.java.de.acwhadk.rz.DesktopBGChanger.picture.PictureCaption.java", "BodyUseAPI": [], "Fixed commit": "7a7510ee7f59a79039477f0d503a7d64bc1f06c8", "Url": "https://api.github.com/repos/ralfzobel/DesktopBGChanger", "Date": "2016-05-23T20:51:33Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Iterable<?>.iterator()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(it.hasNext())) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/8263/buggy-version/src.main.java.de.interactive_instruments.SUtils.java", "BodyUseAPI": [], "Fixed commit": "f82ce7d0fb8658dc5fa27d660114c4c9babe38ca", "Url": "https://api.github.com/repos/interactive-instruments/ii-commons-util", "Date": "2017-06-02T11:48:18Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((valueParameterDescriptor.getIndex()) >= (inferenceErrorData.valueArgumentsTypes.size())) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/4228/buggy-version/compiler.frontend.src.org.jetbrains.jet.lang.diagnostics.rendering.Renderers.java", "BodyUseAPI": [], "Fixed commit": "0d4d576fed910d18e06b07117beca55fa1e8f109", "Url": "https://api.github.com/repos/JetBrains/kotlin", "Date": "2012-10-16T13:28:24Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jenkins.model.Jenkins.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (j == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/5786/buggy-version/src.main.java.jenkins.plugins.http_request.HttpRequestGlobalConfig.java", "BodyUseAPI": [], "Fixed commit": "f53f4fe41a8ac687982c1b2e631bee58c816a9e0", "Url": "https://api.github.com/repos/martinda/http-request-plugin", "Date": "2016-04-25T03:57:48Z"},
{"Line": "=>532", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(player.getWorld().equals(location.getWorld()))) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/5583/buggy-version/src.main.java.bammerbom.ultimatecore.bukkit.resources.utils.ParticleUtil.java", "BodyUseAPI": [], "Fixed commit": "dd759fa0757e958544c6f839c14b3a11c50b448b", "Url": "https://api.github.com/repos/Bammerbom/UltimateCore", "Date": "2015-02-10T10:42:24Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (r.getOnlinePlayersL().isEmpty()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/5583/buggy-version/src.main.java.bammerbom.ultimatecore.bukkit.listeners.BloodListener.java", "BodyUseAPI": [], "Fixed commit": "dd759fa0757e958544c6f839c14b3a11c50b448b", "Url": "https://api.github.com/repos/Bammerbom/UltimateCore", "Date": "2015-02-10T10:42:24Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.karlhammar.ontometrics.plugins.structural.StructuralSingletonOWLAPI.getHeights()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((heights.size()) == 0) { return \"0\"; }else { java.util.Collections.sort(heights, java.util.Collections.reverseOrder()); return heights.get(0).toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/6934/buggy-version/plugins-structural.src.main.java.com.karlhammar.ontometrics.plugins.structural.MaximumDepth.java", "BodyUseAPI": ["java.util.List<java.lang.Integer>.get(int)", "java.util.Collections.sort(java.util.List<java.lang.Integer>,java.util.Comparator<java.lang.Integer>)", "java.lang.Integer.toString()"], "Fixed commit": "e54eae3caeb18a519ddcb01f25c852328b0c425c", "Url": "https://api.github.com/repos/hammar/OntoMetrics", "Date": "2013-03-05T16:04:46Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (string.startsWith(\"<p>\")) { string = string.substring(3, string.length()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/6333/buggy-version/app.src.main.java.com.app.maththpt.utils.Utils.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "7c4db96e091ebbe2e45bbe3d4cbd592aa1145a67", "Url": "https://api.github.com/repos/oNguyenDucManh/Maththpt_Android", "Date": "2017-03-15T10:03:33Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (string.endsWith(\"</p>\")) { string = string.substring(0, ((string.length()) - 4)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/6333/buggy-version/app.src.main.java.com.app.maththpt.utils.Utils.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "7c4db96e091ebbe2e45bbe3d4cbd592aa1145a67", "Url": "https://api.github.com/repos/oNguyenDucManh/Maththpt_Android", "Date": "2017-03-15T10:03:33Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args.length) != 1) { sender.sendMessage(\"Help: /pe reload; /pe toggle\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/8092/buggy-version/PriceEditor.src.net.ddns.gsgtemp.PriceEditor.PriceEditor.java", "BodyUseAPI": [], "Fixed commit": "31b0eb4b6808c69d056eac66e9a0ef8ebad1b2b4", "Url": "https://api.github.com/repos/buhiroshi0205/PriceEditor", "Date": "2017-05-12T07:50:44Z"},
{"Line": "=>679", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["canvasResponse.getStatusLine().getStatusCode()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((statusCode / 100) != 2) { edu.umich.ctools.sectionsUtilityTool.SectionsUtilityToolServlet.M_log.error(java.lang.String.format(\"Canvas Api \\\"%s\\\" call failed with status code %s due to %s \", url, statusCode, sb.toString())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/4042/buggy-version/src.main.java.edu.umich.ctools.sectionsUtilityTool.SectionsUtilityToolServlet.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,java.lang.String,int,java.lang.String)", "org.apache.commons.logging.Log.error(java.lang.String)"], "Fixed commit": "b24fba8c1c9a3d8811ce8ba029d2cd9ff978602e", "Url": "https://api.github.com/repos/pushyamig/canvas_course_manager", "Date": "2017-05-05T18:26:39Z"},
{"Line": "=>456", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((health) == 0) { Debug.warn(\"Player is already dead.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/4539/buggy-version/libs.AIConnection.java", "BodyUseAPI": [], "Fixed commit": "88b21163628e6694b4bf3b6517735c79dac78df0", "Url": "https://api.github.com/repos/Amadiro/Skyport-logic", "Date": "2013-03-16T22:42:03Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (parent == null) { root = node.leftChild; }else if ((parent.value.compareTo(value)) < 0) { parent.rightChild = node.leftChild; }else if ((parent.value.compareTo(value)) > 0) { parent.leftChild = node.leftChild; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/7477/buggy-version/hw02_AVL-Tree_java.src.com.fmi.ads.avl.AVLTree.java", "BodyUseAPI": ["parent.value.compareTo(T)"], "Fixed commit": "78c2929f97bd3e14a5831bdde4869b16263b78cf", "Url": "https://api.github.com/repos/DChaushev/Advanced-Data-Structures", "Date": "2015-03-18T19:50:32Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (parent == null) { root = node.rightChild; }else if ((parent.value.compareTo(value)) < 0) { parent.rightChild = node.rightChild; }else if ((parent.value.compareTo(value)) > 0) { parent.leftChild = node.rightChild; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/7477/buggy-version/hw02_AVL-Tree_java.src.com.fmi.ads.avl.AVLTree.java", "BodyUseAPI": ["parent.value.compareTo(T)"], "Fixed commit": "78c2929f97bd3e14a5831bdde4869b16263b78cf", "Url": "https://api.github.com/repos/DChaushev/Advanced-Data-Structures", "Date": "2015-03-18T19:50:32Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["BinarySearchTree<K, V>.parent(K)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (parent == null) { root = node.right; }else if ((parent.key.compareTo(key)) < 0) { parent.right = node.right; }else if ((parent.key.compareTo(key)) > 0) { parent.left = node.right; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/7477/buggy-version/Day-Stout-Warren.src.BinarySearchTree.java", "BodyUseAPI": ["K.compareTo(K)", "K.compareTo(K)"], "Fixed commit": "78c2929f97bd3e14a5831bdde4869b16263b78cf", "Url": "https://api.github.com/repos/DChaushev/Advanced-Data-Structures", "Date": "2015-03-18T19:50:32Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["BinarySearchTree<K, V>.parent(K)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (parent == null) { root = node.left; }else if ((parent.key.compareTo(key)) < 0) { parent.right = node.left; }else if ((parent.key.compareTo(key)) > 0) { parent.left = node.left; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/7477/buggy-version/Day-Stout-Warren.src.BinarySearchTree.java", "BodyUseAPI": ["K.compareTo(K)", "K.compareTo(K)"], "Fixed commit": "78c2929f97bd3e14a5831bdde4869b16263b78cf", "Url": "https://api.github.com/repos/DChaushev/Advanced-Data-Structures", "Date": "2015-03-18T19:50:32Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((root) != null) { q.add(root); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/7477/buggy-version/hw01_Treap_java.src.TreapImpl.java", "BodyUseAPI": [], "Fixed commit": "78c2929f97bd3e14a5831bdde4869b16263b78cf", "Url": "https://api.github.com/repos/DChaushev/Advanced-Data-Structures", "Date": "2015-03-18T19:50:32Z"},
{"Line": "=>299", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mOutWriter) != null) { mOutWriter.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/1815/buggy-version/src.main.java.com.michael.corelib.corelog.DebugLog.java", "BodyUseAPI": [], "Fixed commit": "4bd375898dbe43d989bafe694c85bd7c5dc56b94", "Url": "https://api.github.com/repos/MichaelSun/corelib", "Date": "2015-12-10T09:28:34Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.listOfNodes.size()) == 1) { leafs.add(this.listOfNodes.get(0)); }else { for (net.adamjak.utils.trees.TreeNode<T> n : this.listOfNodes) { if (n.isNodeTypeLeaf()) { leafs.add(n); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/926/buggy-version/src.main.java.net.adamjak.utils.trees.Tree.java", "BodyUseAPI": ["java.util.List<net.adamjak.utils.trees.TreeNode<T>>.add(this.listOfNodes.get(0))", "java.util.List<net.adamjak.utils.trees.TreeNode<T>>.get(int)"], "Fixed commit": "8ccf5910e15ee81838c70544375ab58b81ad3bbd", "Url": "https://api.github.com/repos/adamjak/Tree", "Date": "2016-12-15T23:25:57Z"},
{"Line": "=>2074", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (comp.hasAttribute(BindComposer.BINDER_ID)) comp.setAttribute(org.zkoss.bind.impl.REMOVE_BINDINGS, java.lang.Boolean.TRUE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/2019/buggy-version/zkbind.src.org.zkoss.bind.impl.BinderImpl.java", "BodyUseAPI": ["org.zkoss.zk.ui.Component.setAttribute(org.zkoss.bind.impl.REMOVE_BINDINGS,java.lang.Boolean)"], "Fixed commit": "4c6fbaf3a8bc51f3ab6f06fa3bee1d6a71da15f7", "Url": "https://api.github.com/repos/zkoss/zk", "Date": "2015-10-27T04:36:35Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/708/buggy-version/dex-translator.src.main.java.com.googlecode.d2j.dex.LambadaNameSafeClassAdapter.java", "BodyUseAPI": [], "Fixed commit": "909c1ef5e427ebcf41bece63bab98c1cf152c4ea", "Url": "https://api.github.com/repos/timofonic-java/dex2jar", "Date": "2017-09-30T17:17:48Z"},
{"Line": "=>318", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.QuarkLabs.BTCeClient.MainActivity.alarmManager) != null) { com.QuarkLabs.BTCeClient.MainActivity.alarmManager.cancel(com.QuarkLabs.BTCeClient.MainActivity.pendingIntent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/6386/buggy-version/BTCeClient.src.main.java.com.QuarkLabs.BTCeClient.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "bd74ee5d74a27876881aa9ef5ab45368c6dbc67b", "Url": "https://api.github.com/repos/0xnm/BTC-e-client-for-Android", "Date": "2014-07-28T04:17:03Z"},
{"Line": "=>344", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.droidlogic.app.OutputModeManager.getHdmiSupportList()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((strEdid.contains(\"2160p60hz\")) && (!(strEdid.contains(\"2160p60hz420\")))) { listHdmiMode.add(\"2160p60hz\"); listHdmiTitle.add(\"4k2k-60hz\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/2981/buggy-version/Settings.src.com.android.tv.settings.device.display.outputmode.OutputUiManager.java", "BodyUseAPI": [], "Fixed commit": "f788eaba58889416f251cfb8000f74d992cb69bd", "Url": "https://api.github.com/repos/khadas/android_packages_apps_TvSettings", "Date": "2017-10-24T06:35:47Z"},
{"Line": "=>339", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.droidlogic.app.OutputModeManager.getHdmiSupportList()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((strEdid.contains(\"2160p50hz\")) && (!(strEdid.contains(\"2160p50hz420\")))) { listHdmiMode.add(\"2160p50hz\"); listHdmiTitle.add(\"4k2k-50hz\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/2981/buggy-version/Settings.src.com.android.tv.settings.device.display.outputmode.OutputUiManager.java", "BodyUseAPI": [], "Fixed commit": "f788eaba58889416f251cfb8000f74d992cb69bd", "Url": "https://api.github.com/repos/khadas/android_packages_apps_TvSettings", "Date": "2017-10-24T06:35:47Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (stack.peekTag().equals(tag)) { return; }else { synchronized(lock) { stack.popFragment(); stack.popTag(); } fragmentManager.popBackStack(); fragment = ((mobi.cangol.mobile.base.BaseFragment) (android.support.v4.app.Fragment.instantiate(fActivity, clazz.getName(), args))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/8001/buggy-version/uiframe.src.main.java.mobi.cangol.mobile.base.CustomFragmentManager.java", "BodyUseAPI": ["mobi.cangol.mobile.base.FragmentStack.popFragment()", "mobi.cangol.mobile.base.FragmentStack.popTag()"], "Fixed commit": "e8405b5427acf9342b3e0fd2bfdcb9b2364f6a2c", "Url": "https://api.github.com/repos/Cangol/Cangol-uiframe", "Date": "2017-12-12T03:33:59Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args != null) || ((args.length) <= 0)) { for (java.lang.String s : args) { if (s.equalsIgnoreCase(\"-conf\")); java.lang.System.out.println((\"Proxy Argument:\" + s)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/7646/buggy-version/ServiceWatcher.src.main.java.com.cons.Main.java", "BodyUseAPI": [], "Fixed commit": "c4cb84857811b4640bf51772e673f6c50862a8b8", "Url": "https://api.github.com/repos/gtrianta1965/ServiceWatcher", "Date": "2017-07-03T14:43:34Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.wso2telco.services.dep.sandbox.util.CommonUtil.getNullOrTrimmedValue(wrapperDTO.getMnc())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (mnc != null) { validationRulesList.add(new com.wso2telco.dep.oneapivalidation.util.ValidationRule(com.wso2telco.dep.oneapivalidation.util.ValidationRule.VALIDATION_TYPE_OPTIONAL_INT_GE_ZERO, \"mnc\", mnc)); validationRulesList.add(new com.wso2telco.dep.oneapivalidation.util.ValidationRule(com.wso2telco.dep.oneapivalidation.util.ValidationRule.VALIDATION_TYPE_MANDATORY_INT_GE_ZERO, \"mcc\", mcc)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/3742/buggy-version/dep-sandbox.src.main.java.com.wso2telco.services.dep.sandbox.servicefactory.customerinfo.GetAttributeRequestHandler.java", "BodyUseAPI": ["java.util.List<com.wso2telco.dep.oneapivalidation.util.ValidationRule>.add(com.wso2telco.dep.oneapivalidation.util.ValidationRule)"], "Fixed commit": "181a2371664a71b7ae40b49185881e6e5a833d66", "Url": "https://api.github.com/repos/rshahintha/sandbox-service", "Date": "2017-01-18T07:04:17Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dataObject.hasParameterSet(RESTCSRelatedNodeV1.RELATIONSHIP_SORT_NAME)) entity.setRelationshipSort(dataObject.getRelationshipSort());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/3213/buggy-version/src.main.java.org.jboss.pressgang.ccms.restserver.rest.v1.CSRelatedNodeV1Factory.java", "BodyUseAPI": ["org.jboss.pressgang.ccms.rest.v1.entities.contentspec.join.RESTCSRelatedNodeV1.getRelationshipSort()", "org.jboss.pressgang.ccms.model.contentspec.CSNodeToCSNode.setRelationshipSort(dataObject.getRelationshipSort())"], "Fixed commit": "efb8376f6b07fdffd724daf2572e72b811e22e35", "Url": "https://api.github.com/repos/lnewson/PressGangCCMSREST", "Date": "2013-03-12T02:55:07Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (persistencset) { persistencset = true; com.google.firebase.database.FirebaseDatabase.getInstance().setPersistenceEnabled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/8983/buggy-version/app.src.main.java.pt12.frigidarium.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "761156f61d0c564cd61b04de84417c11e58cc22c", "Url": "https://api.github.com/repos/rndcursus/frigidarium", "Date": "2017-06-02T16:48:14Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.lody.virtual.helper.utils.ArrayUtils.indexOfObject(java.lang.Object[],java.lang.Class,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (intentIndex < 0) { return com.lody.virtual.helper.compat.ActivityManagerCompat.START_INTENT_NOT_RESOLVED; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/2170/buggy-version/VirtualApp.lib.src.main.java.com.lody.virtual.client.hook.patchs.am.StartActivity.java", "BodyUseAPI": [], "Fixed commit": "be5dd165b17e9d70d1f840f73d9bc7555315aa02", "Url": "https://api.github.com/repos/lolicon/VirtualApp", "Date": "2017-03-10T14:27:19Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.pr0npaganda.appvoat.model.Post.getThumbUrl()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(url.equals(imageView.getTag()))) ((android.view.ViewGroup) (imageView.getParent())).setAlpha(0.0F);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/3916/buggy-version/app.src.main.java.net.pr0npaganda.appvoat.adapters.PostBindingAdapter.java", "BodyUseAPI": ["((android.view.ViewGroup) (imageView.getParent())).setAlpha(float)", "com.makeramen.roundedimageview.RoundedImageView.getParent()"], "Fixed commit": "19fff26a408acf2bc6761161caa184dc3d64e76b", "Url": "https://api.github.com/repos/daita/appvoat", "Date": "2017-02-06T02:23:15Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ProfilePlot.getProfile()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (iDepthPixels == (phanProfile.length)) { keepLooping = false; intersectionDepth = ((float) (iDepthPixels * delta)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/7237/buggy-version/computeDOP_.java", "BodyUseAPI": [], "Fixed commit": "1773998ea9143fab5f5c9bdbdb2faaf6f5b683ca", "Url": "https://api.github.com/repos/rubert/Depth-of-Penetration", "Date": "2016-07-20T22:14:42Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (team == null) { request.setAttribute(\"message\", \"Please select the radio button\"); request.getRequestDispatcher(\"viewteam.jsp\").forward(request, response); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/4303/buggy-version/src.com.accenture.tmt.presentation.servlet.EditTeam.java", "BodyUseAPI": [], "Fixed commit": "a78779e04a2efa63a17db0caadf1d4e7c8743740", "Url": "https://api.github.com/repos/nitin2402/accentureaserocks", "Date": "2015-07-15T05:08:30Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.bukkit.Bukkit.getServer().getOnlinePlayers().isEmpty())) { int random = new java.util.Random().nextInt(org.bukkit.Bukkit.getOnlinePlayers().size()); return ((org.bukkit.entity.Player) (org.bukkit.Bukkit.getServer().getOnlinePlayers().toArray()[random])); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/8982/buggy-version/src.com.v3ld1n.util.PlayerUtil.java", "BodyUseAPI": [], "Fixed commit": "fe339740f156e737baec92c7e69da3b1891c83ab", "Url": "https://api.github.com/repos/V3LD1N/V3LD1N-Bukkit-Plugin", "Date": "2015-01-08T18:39:52Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.bukkit.Bukkit.getServer().getOnlinePlayers().isEmpty())) { if (((random.nextInt(100)) + 1) <= (ConfigSetting.PLAYER_EFFECTS_CHANCE.getInt())) { org.bukkit.entity.Player player = com.v3ld1n.util.PlayerUtil.getRandomPlayer(); if (ConfigSetting.PLAYER_EFFECTS_PLAYERS.getStringList().contains(player.getName())) { player.getWorld().strikeLightningEffect(player.getLocation()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/8982/buggy-version/src.com.v3ld1n.V3LD1N.java", "BodyUseAPI": [], "Fixed commit": "fe339740f156e737baec92c7e69da3b1891c83ab", "Url": "https://api.github.com/repos/V3LD1N/V3LD1N-Bukkit-Plugin", "Date": "2015-01-08T18:39:52Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((this.tick) % 500) == 0) && ((this.space) > 20)) { (this.space)--; this.tick = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/5623/buggy-version/src.de.titanium.enterprise.View.DefenseGame.DefenseMenu.java", "BodyUseAPI": [], "Fixed commit": "0f361102c1e03dc111091036e8f83e090d690629", "Url": "https://api.github.com/repos/Titanium-Team/Enterprise", "Date": "2016-03-14T20:54:24Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"http\".equalsIgnoreCase(uri.substring(0, 4))) { fileContent.getSize(); remoteEncoding = fileContent.getContentInfo().getContentEncoding(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/286/buggy-version/src.main.java.com.github.abola.crawler.CrawlerPack.java", "BodyUseAPI": [], "Fixed commit": "49400de6c9078ace2bc2ed5c831ee91293a51e90", "Url": "https://api.github.com/repos/abola/CrawlerPack", "Date": "2016-03-22T07:25:34Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.JELLY_BEAN_MR1)) { frameLayout.setLayoutDirection(View.LAYOUT_DIRECTION_RTL); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/273/buggy-version/library.src.main.java.com.github.paolorotolo.appintro.AppIntroBase.java", "BodyUseAPI": [], "Fixed commit": "3b442b18090a430e008c440d0b934c03fb3818b1", "Url": "https://api.github.com/repos/beatbrot/AppIntro", "Date": "2016-12-04T14:50:54Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.panel.getWidget(i)) instanceof com.google.gwt.user.client.ui.Button) { ((com.google.gwt.user.client.ui.Button) (this.panel.getWidget(i))).setEnabled(enabled); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/1412/buggy-version/src.com.aacdil.municipality.client.StatusChangeControl.java", "BodyUseAPI": ["com.google.gwt.user.client.ui.HorizontalPanel.getWidget(int)", "((com.google.gwt.user.client.ui.Button) (this.panel.getWidget(i))).setEnabled(boolean)"], "Fixed commit": "41bd12f33f3d6213eef83b62754c5ca7da58edd3", "Url": "https://api.github.com/repos/ivailo-pashov/MunicipalityInfrastructureService", "Date": "2014-06-07T20:45:41Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (resources.containsKey(path)) { requestUri = org.springframework.web.util.UriComponentsBuilder.fromUriString(resources.get(path)).build().toUri(); }else if (\"/\".equals(configCmds.getBaseUri().getPath())) { requestUri = org.springframework.web.util.UriComponentsBuilder.fromUri(configCmds.getBaseUri()).path(path).build().toUri(); }else { requestUri = org.springframework.web.util.UriComponentsBuilder.fromUri(configCmds.getBaseUri()).pathSegment(path).build().toUri(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/6396/buggy-version/src.main.java.org.springframework.data.rest.shell.commands.DiscoveryCommands.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)", "org.springframework.web.util.UriComponentsBuilder.fromUriString(resources.get(path)).build().toUri()", "org.springframework.web.util.UriComponentsBuilder.fromUri(configCmds.getBaseUri()).pathSegment(path).build().toUri()", "org.springframework.web.util.UriComponentsBuilder.fromUriString(java.lang.String)", "org.springframework.web.util.UriComponentsBuilder.fromUri(configCmds.getBaseUri()).pathSegment(path).build()", "org.springframework.web.util.UriComponentsBuilder.fromUri(configCmds.getBaseUri()).path(java.lang.String)", "org.springframework.web.util.UriComponentsBuilder.fromUri(configCmds.getBaseUri()).pathSegment(java.lang.String)", "org.springframework.web.util.UriComponentsBuilder.fromUriString(resources.get(path)).build()", "org.springframework.web.util.UriComponentsBuilder.fromUri(configCmds.getBaseUri()).path(path).build().toUri()", "org.springframework.web.util.UriComponentsBuilder.fromUri(configCmds.getBaseUri()).path(path).build()"], "Fixed commit": "daa767cf0e9fd8f89db49bb28fea683ceb6b6ab1", "Url": "https://api.github.com/repos/jbrisbin/rest-shell", "Date": "2012-09-26T19:04:57Z"},
{"Line": "=>328", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (broadcastConsumerMethods.contains(method.getName())) impl.addBroadcastReceiver(consumer);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/8942/buggy-version/src.main.java.org.tickcode.broadcast.VMMessageBroker.java", "BodyUseAPI": [], "Fixed commit": "6605e7c64b1311a7792e7e345c933db14abec1b2", "Url": "https://api.github.com/repos/tickcode/BroadcastingInterfaces", "Date": "2012-08-22T04:06:44Z"},
{"Line": "=>302", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (broadcastConsumerMethods.contains(method.getName())) impl.addBroadcastReceiver(consumer);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/8942/buggy-version/src.main.java.org.tickcode.broadcast.VMMessageBroker.java", "BodyUseAPI": [], "Fixed commit": "6605e7c64b1311a7792e7e345c933db14abec1b2", "Url": "https://api.github.com/repos/tickcode/BroadcastingInterfaces", "Date": "2012-08-22T04:06:44Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.kura.core.net.NetInterfaceAddressConfigImpl.getConfigs()", "org.eclipse.kura.core.net.NetInterfaceAddressConfigImpl.getConfigs()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((thisNetConfigs == null) && (otherNetConfigs == null)) { return true; }else if ((thisNetConfigs == null) || (otherNetConfigs == null)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/4071/buggy-version/kura.org.eclipse.kura.core.net.src.main.java.org.eclipse.kura.core.net.NetInterfaceAddressConfigImpl.java", "BodyUseAPI": [], "Fixed commit": "a46b2d465a1e818956eaf1d2f1e81ba49f45fb43", "Url": "https://api.github.com/repos/markoer/kura", "Date": "2016-10-27T10:55:17Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(horizontal)) { queue.put(row); requests.mark(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/2342/buggy-version/src.main.java.org.aksw.es.bsbmloader.reader.DataReader.java", "BodyUseAPI": [], "Fixed commit": "4f07a3dcbeb6985c410a982c8d32b2189dda78f6", "Url": "https://api.github.com/repos/Iranox/mapbench-datadistributor", "Date": "2017-01-21T16:08:00Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, sledgehammer.objects.Player>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (player == null) { return addPlayer(new sledgehammer.objects.Player(username)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/1808/buggy-version/src.sledgehammer.manager.PlayerManager.java", "BodyUseAPI": [], "Fixed commit": "6b0c21f381600e75bd0e96b120f5d0ffb1fd812c", "Url": "https://api.github.com/repos/JabJabJab/Sledgehammer", "Date": "2017-05-16T12:11:46Z"},
{"Line": "=>316", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (temp.matches(regex)) { x = temp.charAt(0); y = java.lang.Character.getNumericValue(temp.charAt(1)); }else { x = temp.charAt(1); y = java.lang.Character.getNumericValue(temp.charAt(0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/6843/buggy-version/src.uk.ac.gcu.battleships.Game.java", "BodyUseAPI": ["java.lang.String.charAt(int)", "java.lang.String.charAt(int)", "java.lang.Character.getNumericValue(char)", "java.lang.String.charAt(int)", "java.lang.Character.getNumericValue(char)", "java.lang.String.charAt(int)"], "Fixed commit": "8beb65ed806c4432f57898aa35815d5d03f9e2e7", "Url": "https://api.github.com/repos/GlasgowCaley/Battleships-IP2014", "Date": "2014-05-19T11:57:17Z"},
{"Line": "=>308", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (_timeTable.isEditing()) { _timeTable.getCellEditor().cancelCellEditing(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/4338/buggy-version/src.net.sf.memoranda.ui.TimeTrackingPanel.java", "BodyUseAPI": ["net.sf.memoranda.ui.TimeTrackingTable.getCellEditor()", "_timeTable.getCellEditor().cancelCellEditing()"], "Fixed commit": "e80584282717692a3cd5a5947384ac35381b410a", "Url": "https://api.github.com/repos/ser316asu/Zehlendorf_SER316", "Date": "2017-04-28T01:34:57Z"},
{"Line": "=>2194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.seafile.seadroid2.data.DataManager.getCachedRepoByID(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((repo != null) && (repo.canLocalDecrypt())) { txService.addTaskToDownloadQue(account, repoName, repoID, com.seafile.seadroid2.util.Utils.pathJoin(dirPaths.get(i), seafDirent.name), true, repo.encVersion); }else { txService.addTaskToDownloadQue(account, repoName, repoID, com.seafile.seadroid2.util.Utils.pathJoin(dirPaths.get(i), seafDirent.name)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/7951/buggy-version/app.src.main.java.com.seafile.seadroid2.ui.activity.BrowserActivity.java", "BodyUseAPI": ["com.seafile.seadroid2.transfer.TransferService.addTaskToDownloadQue(com.seafile.seadroid2.account.Account,java.lang.String,java.lang.String,com.seafile.seadroid2.util.Utils.pathJoin(dirPaths.get(i), seafDirent.name),boolean,repo.encVersion)"], "Fixed commit": "abe2c66f9bae6debdb062fca69e5910724001772", "Url": "https://api.github.com/repos/haiwen/seadroid", "Date": "2016-05-24T03:53:46Z"},
{"Line": "=>1609", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.seafile.seadroid2.data.DataManager.getCachedRepoByID(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((repo != null) && (repo.canLocalDecrypt())) { txService.addTaskToDownloadQue(account, repoName, repoID, com.seafile.seadroid2.util.Utils.pathJoin(dirPaths.get(i), seafDirent.name), true, repo.encVersion); }else { txService.addTaskToDownloadQue(account, repoName, repoID, com.seafile.seadroid2.util.Utils.pathJoin(dirPaths.get(i), seafDirent.name)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/7951/buggy-version/app.src.main.java.com.seafile.seadroid2.ui.activity.BrowserActivity.java", "BodyUseAPI": ["com.seafile.seadroid2.transfer.TransferService.addTaskToDownloadQue(com.seafile.seadroid2.account.Account,java.lang.String,java.lang.String,com.seafile.seadroid2.util.Utils.pathJoin(dirPaths.get(i), seafDirent.name),boolean,repo.encVersion)"], "Fixed commit": "abe2c66f9bae6debdb062fca69e5910724001772", "Url": "https://api.github.com/repos/haiwen/seadroid", "Date": "2016-05-24T03:53:46Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (sendIntent != null) { destination.startActivity(sendIntent); }else { sendIntent.setPackage(\"com.google.android.talk\"); if (sendIntent != null) { destination.startActivity(sendIntent); }else { android.widget.Toast.makeText(destination, R.string.error_no_whatsapp, Toast.LENGTH_SHORT).show(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/2394/buggy-version/android.app.src.main.java.com.thedeveloperworldisyours.whatdoyoudoandroid.utils.Utils.java", "BodyUseAPI": ["android.content.Intent.setPackage(java.lang.String)", "android.app.Activity.startActivity(android.content.Intent)", "android.app.Activity.startActivity(android.content.Intent)"], "Fixed commit": "66e91429851f9e23b4c2d6b5a64ad1c53c1ceddd", "Url": "https://api.github.com/repos/LumbralesSoftware/WhatDoYouDo", "Date": "2015-04-28T16:46:30Z"},
{"Line": "=>301", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (col.isArray()) { valString = org.gephi.io.exporter.plugin.AttributeUtils.printArray(col.getDefaultValue()); }else { valString = col.getDefaultValue().toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/4564/buggy-version/modules.ExportPlugin.src.main.java.org.gephi.io.exporter.plugin.ExporterGEXF.java", "BodyUseAPI": ["org.gephi.io.exporter.plugin.AttributeUtils.printArray(col.getDefaultValue())", "org.gephi.io.exporter.plugin.Column.getDefaultValue()", "col.getDefaultValue().toString()", "org.gephi.io.exporter.plugin.Column.getDefaultValue()"], "Fixed commit": "93b5c1806689315096d9fd35579b31bc37559088", "Url": "https://api.github.com/repos/gephi/gephi", "Date": "2016-01-10T16:14:50Z"},
{"Line": "=>367", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (column.isArray()) { valString = org.gephi.io.exporter.plugin.AttributeUtils.printArray(val); }else { valString = val.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/4564/buggy-version/modules.ExportPlugin.src.main.java.org.gephi.io.exporter.plugin.ExporterGEXF.java", "BodyUseAPI": [], "Fixed commit": "93b5c1806689315096d9fd35579b31bc37559088", "Url": "https://api.github.com/repos/gephi/gephi", "Date": "2016-01-10T16:14:50Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i > 0) { data[i][j] = info; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/6006/buggy-version/TrainSystem.src.com.rogueone.mbo.Mbo.java", "BodyUseAPI": [], "Fixed commit": "b1a49c891595f82c9b26b19952ef220772af9ef1", "Url": "https://api.github.com/repos/JKenneson/ECE1186", "Date": "2017-02-15T02:53:28Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(response.getBody().getObject().has(\"items\"))) { thc.parser.search.GoogleImageSearch.log.warn(\"No item found from body\", response.getBody().getObject()); return java.util.Collections.EMPTY_LIST; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/8091/buggy-version/src.main.java.thc.parser.search.GoogleImageSearch.java", "BodyUseAPI": ["org.slf4j.Logger.warn(java.lang.String,response.getBody().getObject())", "response.getBody().getObject()", "com.mashape.unirest.http.HttpResponse<com.mashape.unirest.http.JsonNode>.getBody()"], "Fixed commit": "3d860fd29f15a88184c2948851ef874d93e1ba87", "Url": "https://api.github.com/repos/thcathy/web-parser-rest", "Date": "2017-02-19T04:26:36Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((s.length()) == 0) return s;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/5441/buggy-version/src.ai.susi.mind.SusiPhrase.java", "BodyUseAPI": [], "Fixed commit": "1d801e70bd26db6bd85570f0371913763ced5205", "Url": "https://api.github.com/repos/dynamitechetan/susi_server", "Date": "2017-06-03T19:19:24Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((signer.getId()) != null) { id = signer.getId(); }else if ((signer.getGroupId()) == null) { id = \"role\" + signerCount; }else { id = signer.getGroupId().getId(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/6442/buggy-version/sdk.src.main.java.com.silanis.esl.sdk.internal.converter.DocumentPackageConverter.java", "BodyUseAPI": ["signer.getGroupId().getId()", "com.silanis.esl.sdk.Signer.getGroupId()", "com.silanis.esl.sdk.Signer.getGroupId()", "com.silanis.esl.sdk.Signer.getId()"], "Fixed commit": "766c523714348c3db6f77081fa677618779cd7ca", "Url": "https://api.github.com/repos/silanis/esl.sdk.java", "Date": "2014-06-04T19:49:55Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((centerView != null) && (i == ((tabItemViews.size()) / 2))) { this.addView(centerView); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/3704/buggy-version/app.src.main.java.cn.ifmvo.bottomtabview.BottomTabView.java", "BodyUseAPI": ["cn.ifmvo.bottomtabview.BottomTabView.addView(android.view.View)"], "Fixed commit": "8c8b9ffc8defa837f85958975494127f84721cc4", "Url": "https://api.github.com/repos/ifmvo/BottomTabView", "Date": "2017-05-04T07:30:30Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mContext.getContentResolver().query(com.nikmalov.portfolioproject.PopularVideoApp.data.FavouriteMoviesContract.FavouriteMovieEntry.buildSingleMovieUri(movie.getMovieId()),java.lang.String[],<nulltype>,<nulltype>,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((cursor != null) && (cursor.moveToFirst())) isInFavourites = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/6879/buggy-version/app.src.main.java.com.nikmalov.portfolioproject.PopularVideoApp.DetailedViewListAdapter.java", "BodyUseAPI": [], "Fixed commit": "cf47114e4a72c2c9df326b33a63ef465c72e7647", "Url": "https://api.github.com/repos/nikmalov/my-app-portfolio", "Date": "2016-02-17T20:27:53Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mContext.getContentResolver().query(com.nikmalov.portfolioproject.PopularVideoApp.data.FavouriteMoviesContract.FavouriteMovieEntry.buildSingleMovieUri(movie.getMovieId()),java.lang.String[],<nulltype>,<nulltype>,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (cursor != null) cursor.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/6879/buggy-version/app.src.main.java.com.nikmalov.portfolioproject.PopularVideoApp.DetailedViewListAdapter.java", "BodyUseAPI": ["android.database.Cursor.close()"], "Fixed commit": "cf47114e4a72c2c9df326b33a63ef465c72e7647", "Url": "https://api.github.com/repos/nikmalov/my-app-portfolio", "Date": "2016-02-17T20:27:53Z"},
{"Line": "=>612", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(name.getFamilyName().equals(\"*\"))) retVal.add(this.createPN(name));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/8962/buggy-version/api.src.main.java.org.openmrs.module.shr.odd.util.CdaDataUtil.java", "BodyUseAPI": ["org.marc.everest.datatypes.generic.SET<org.marc.everest.datatypes.PN>.add(org.marc.everest.datatypes.PN)", "org.openmrs.module.shr.odd.util.CdaDataUtil.createPN(org.openmrs.PersonName)"], "Fixed commit": "e5e2f5a69aa444c6f0c99709d3b7a0ac9a9a3966", "Url": "https://api.github.com/repos/jembi/openmrs-module-shr-odd", "Date": "2014-11-26T14:05:08Z"},
{"Line": "=>316", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((data.end_time) < (data.start_time)) { android.widget.Toast.makeText(this, getResources().getString(R.string.end_before_start_err), Toast.LENGTH_LONG).show(); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/9091/buggy-version/app.src.main.java.org.mattvchandler.progressbars.Settings.java", "BodyUseAPI": [], "Fixed commit": "2e808b4b5f6b2b2604d587aa0d17975824e5c306", "Url": "https://api.github.com/repos/mattvchandler/ProgressBars", "Date": "2017-06-15T17:48:28Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["m.getEmbeds().get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((e.getEmbedFields()) != null) { for (sx.blah.discord.handle.obj.IEmbed.IEmbedField ef : e.getEmbedFields()) { res += (((\"Field Title [ID: \" + i) + \"]: \") + (ef.getName())) + \"\\n\\n\"; res += (((\"Field Text [ID: \" + i) + \"]: \") + (ef.getValue())) + \"\\n\\n\"; i++; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/8301/buggy-version/src.me.xaanit.auxilium.commands.Dev.java", "BodyUseAPI": ["me.xaanit.auxilium.commands.IEmbed.getEmbedFields()"], "Fixed commit": "cf8ec22297d8eb438cfe595edc285911c2369dd1", "Url": "https://api.github.com/repos/NovaFox161/auxilium", "Date": "2017-04-02T04:56:52Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(dir.endsWith(\"/\"))) { dir += \"/\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/954/buggy-version/src.radio.RadioUtil.java", "BodyUseAPI": [], "Fixed commit": "77fbc7c723c420ccbf9956c76d510afe9d717cfd", "Url": "https://api.github.com/repos/m2i/cysat-basestation", "Date": "2012-11-10T20:22:52Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.URLDecoder.decode(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (dir.endsWith(\".jar\")) { dir = dir.substring(0, dir.lastIndexOf('/')); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/954/buggy-version/src.radio.RadioUtil.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.lastIndexOf(char)"], "Fixed commit": "77fbc7c723c420ccbf9956c76d510afe9d717cfd", "Url": "https://api.github.com/repos/m2i/cysat-basestation", "Date": "2012-11-10T20:22:52Z"},
{"Line": "=>300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.ObjectInputStream.readObject()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (tempMessageObject instanceof de.gebit.integrity.remoting.transport.messages.ShutdownRequestMessage) { disconnectRequested = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/5451/buggy-version/de.gebit.integrity.remoting.src.de.gebit.integrity.remoting.transport.Endpoint.java", "BodyUseAPI": [], "Fixed commit": "9c6e301e39636f3bec1f2db0551f3a2a885ec76c", "Url": "https://api.github.com/repos/integrity-tf/integrity", "Date": "2016-11-09T13:10:23Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tempList.size()) == 1) { tempKeyValueMap.put(tempDescriptor.getName(), tempList.get(0)); }else { tempKeyValueMap.put(tempDescriptor.getName(), tempList.toArray()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/5451/buggy-version/de.gebit.integrity.dsl.src.de.gebit.integrity.parameter.conversion.conversions.java.other.ObjectToMap.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,java.lang.Object)", "java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,java.lang.Object[])", "java.util.List<java.lang.Object>.get(int)", "java.util.List<java.lang.Object>.toArray()"], "Fixed commit": "9c6e301e39636f3bec1f2db0551f3a2a885ec76c", "Url": "https://api.github.com/repos/integrity-tf/integrity", "Date": "2016-11-09T13:10:23Z"},
{"Line": "=>835", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((topLevelWindow) != null) { topLevelWindow.requestFocus(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/6672/buggy-version/pivot-wtk.src.org.apache.pivot.wtk.SwingContainer.java", "BodyUseAPI": [], "Fixed commit": "6bd6d8c62deec48eee648558392438dbdec5c54c", "Url": "https://api.github.com/repos/barchart/barchart-pivot", "Date": "2013-06-19T20:01:45Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (gameInfo == null) { client.send(new org.copinf.cc.net.Request(\"server.lobby.join\", false)); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/4695/buggy-version/src.main.java.org.copinf.cc.net.server.Server.java", "BodyUseAPI": [], "Fixed commit": "c411d1c2cfb41ce12383e2c14dea4e8a62b63e58", "Url": "https://api.github.com/repos/CopyrightInfringement/ChineseCheckers", "Date": "2016-05-06T20:36:16Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (result == null) { this.launcher = launcher; }else { this.launcher = launcher.decorateByEnv(new hudson.EnvVars(\"BUILD_RESULT\", result.toString())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/7838/buggy-version/src.main.java.org.jenkinsci.plugins.postbuildscript.Processor.java", "BodyUseAPI": [], "Fixed commit": "971a0f18525ec74f6116701b406a9e5f0a9a1b19", "Url": "https://api.github.com/repos/jenkinsci/postbuildscript-plugin", "Date": "2017-12-01T07:33:50Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(player.capabilities.isCreativeMode)) && ((player.experienceLevel) < (uncraftingResult.experienceCost))) { uncraftingResult.resultType = org.jglrxavpok.mods.decraft.item.uncrafting.UncraftingResult.ResultType.NOT_ENOUGH_XP; }else { for (net.minecraft.item.ItemStack recipeStack : uncraftingResult.getCraftingGrid()) { if ((recipeStack != (net.minecraft.item.ItemStack.EMPTY)) && (recipeStack.getItem().hasContainerItem(null))) { uncraftingResult.resultType = org.jglrxavpok.mods.decraft.item.uncrafting.UncraftingResult.ResultType.NEED_CONTAINER_ITEMS; break; } } if ((uncraftingResult.resultType) != (org.jglrxavpok.mods.decraft.item.uncrafting.UncraftingResult.ResultType.NEED_CONTAINER_ITEMS)) { uncraftingResult.resultType = org.jglrxavpok.mods.decraft.item.uncrafting.UncraftingResult.ResultType.VALID; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/7424/buggy-version/src.main.java.org.jglrxavpok.mods.decraft.item.uncrafting.UncraftingManager.java", "BodyUseAPI": ["org.jglrxavpok.mods.decraft.item.uncrafting.UncraftingResult.getCraftingGrid()"], "Fixed commit": "8ec6da9c1868ef2b736dd3e9ca58c36dd7c82e3a", "Url": "https://api.github.com/repos/crazysnailboy/UncraftingTable", "Date": "2017-01-22T15:56:08Z"},
{"Line": "=>474", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (bitmap == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/8303/buggy-version/ByakuGallery.src.com.diegocarloslima.byakugallery.lib.TileBitmapDrawable.java", "BodyUseAPI": [], "Fixed commit": "75a279bc99efb3b4f1966b0ab4405faa99d72607", "Url": "https://api.github.com/repos/azki/ByakuGallery", "Date": "2014-03-11T17:55:48Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currentStrip >= (pusher.getNumberOfStrips())) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/8357/buggy-version/src.com.heroicrobot.pixelpusher.artnet.ArtNetMapping.java", "BodyUseAPI": [], "Fixed commit": "5aa82b743aba1e0b2575fa6e64a51c3618fc146e", "Url": "https://api.github.com/repos/robot-head/PixelPusher-artnet", "Date": "2013-10-02T03:26:46Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((caseId) != null) { try { sendRequest(((((((((((((\"SELECT \" + (com.salesforce.samples.templateapp.CaseActivity.CASE_NUMBER)) + \", \") + (com.salesforce.samples.templateapp.CaseActivity.CASE_SUBJECT)) + \", \") + (com.salesforce.samples.templateapp.CaseActivity.CASE_STATUS)) + \", \") + (com.salesforce.samples.templateapp.CaseActivity.CASE_DESCRIPTION)) + \" FROM \") + (com.salesforce.samples.templateapp.CaseActivity.CASE)) + \" WHERE Id='\") + (caseId)) + \"'\"), com.salesforce.samples.templateapp.CaseActivity.CASE); } catch (java.io.UnsupportedEncodingException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/654/buggy-version/native.TemplateApp.src.com.salesforce.samples.templateapp.CaseActivity.java", "BodyUseAPI": ["com.salesforce.samples.templateapp.CaseActivity.1.sendRequest(java.lang.String,java.lang.String)"], "Fixed commit": "1f9078973815aba1f5f2622fe206b9432e67a1de", "Url": "https://api.github.com/repos/bhariharan/SalesforceMobileSDK-Android", "Date": "2014-05-07T04:48:10Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.reactome.web.diagram.data.graph.model.GraphObject.getDiagramObjects()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(diagramObjectList.isEmpty())) { for (org.reactome.web.diagram.data.layout.DiagramObject nodeTo : diagramObjectList) { org.reactome.web.diagram.client.InteractorLink link; if (node.equals(nodeTo)) { link = new org.reactome.web.diagram.client.LoopLink(node, rawInteractor.getId(), rawInteractor.getScore()); }else { link = new org.reactome.web.diagram.client.StaticLink(node, ((org.reactome.web.diagram.data.layout.Node) (nodeTo)), rawInteractor.getId(), rawInteractor.getScore()); } interactors.cache(currentResource, node, link); interactors.addInteractor(currentResource, link); } }else { dynamicInteractors.add(rawInteractor); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/3391/buggy-version/src.main.java.org.reactome.web.diagram.client.InteractorsManager.java", "BodyUseAPI": [], "Fixed commit": "65a9345f50ddbf8251383148364fb51ae755482a", "Url": "https://api.github.com/repos/reactome-pwp/diagram", "Date": "2016-02-01T22:13:41Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang.StringUtils.isNotEmpty(value)) { if ((jsonParser.parse(value)) instanceof com.google.gson.JsonObject) { com.google.gson.JsonObject valueObject = ((com.google.gson.JsonObject) (jsonParser.parse(value))); addValueObject(parent, valueObject); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/6722/buggy-version/plugins.org.wso2.developerstudio.visualdatamapper.diagram.src.org.wso2.developerstudio.datamapper.diagram.schemagen.util.SchemaBuilderWithNamepaces.java", "BodyUseAPI": ["com.google.gson.JsonParser.parse(java.lang.String)", "com.google.gson.JsonParser.parse(java.lang.String)"], "Fixed commit": "5412f037b6c7f6a6b17134bb16f700d516318c0b", "Url": "https://api.github.com/repos/wso2/devstudio-tooling-esb", "Date": "2016-06-01T10:05:21Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((animationCompoundEdit) == null) && ((undoManager) != null)) && (!(undoManager.isBeeingRecording()))) { animationCompoundEdit = undoManager.startRecording(\"animation\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/2273/buggy-version/diana-core.src.main.java.org.openflexo.fge.animation.impl.AnimationImpl.java", "BodyUseAPI": ["org.openflexo.model.undo.UndoManager.startRecording(java.lang.String)"], "Fixed commit": "b58c4fc10e33dab61503f46b815d757fc47466e1", "Url": "https://api.github.com/repos/openflexo-team/diana", "Date": "2015-10-08T13:38:49Z"},
{"Line": "=>552", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang3.SystemUtils.IS_OS_WINDOWS) { safeArg = org.apache.commons.lang3.StringUtils.strip(safeArg, \"\\\"\"); return (\"\\\"\" + safeArg) + \"\\\"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/3340/buggy-version/norconex-collector-http.src.main.java.com.norconex.collector.http.fetch.impl.PhantomJSDocumentFetcher.java", "BodyUseAPI": [], "Fixed commit": "787b83f794471783923794f459970afdaf3d2df9", "Url": "https://api.github.com/repos/Norconex/collector-http", "Date": "2017-01-22T04:20:17Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.hsbremen.mds.common.whiteboard.Whiteboard.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (result == null) { java.lang.String allKeys = \"\"; for (java.lang.String key : keys) { allKeys += \".\" + key; } java.lang.System.err.println(((((\"Error. No key [\" + (keys[((keys.length) - 1)])) + \"] found in Whiteboard. All keys:\") + allKeys) + \". Returning null, an excpetion might be thrown.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/8689/buggy-version/MdsCommon.src.de.hsbremen.mds.common.whiteboard.Whiteboard.java", "BodyUseAPI": [], "Fixed commit": "13536d10de9960ef6b99559a182cadb1030dcb68", "Url": "https://api.github.com/repos/MachDeinSpiel/MdsCommon", "Date": "2014-05-22T19:17:13Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (oldPlayer == null) { oldPlayer = getPlayer(player.getId(), true); changeDetected = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/8604/buggy-version/scrappers.scraper-common.src.main.java.jepperscore.scraper.common.PlayerManager.java", "BodyUseAPI": [], "Fixed commit": "a1957cb99c4e04940f28df931a17e88716bdf7ee", "Url": "https://api.github.com/repos/SiphonSquirrel/jepperscore", "Date": "2013-08-18T02:55:51Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["me.valour.sugaroverflow.orm.AccessDB.getInstance(appContext).listQuestions(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((questions.size()) > 0) { lastChecked = ((int) ((java.lang.System.currentTimeMillis()) / 1000)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/1015/buggy-version/app.src.main.java.me.valour.sugaroverflow.fragment.QuestionFragment.java", "BodyUseAPI": [], "Fixed commit": "08c1062973be182c2fd7dabe0439e0a293da0a34", "Url": "https://api.github.com/repos/9ae/SugarOverflow", "Date": "2016-04-02T20:40:31Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["me.valour.sugaroverflow.orm.AccessDB.getInstance(myContext).insertQuestion(items.getJSONObject(i))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (id > 0) { entriesInserted++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/1015/buggy-version/app.src.main.java.me.valour.sugaroverflow.service.GetQuestionService.java", "BodyUseAPI": [], "Fixed commit": "08c1062973be182c2fd7dabe0439e0a293da0a34", "Url": "https://api.github.com/repos/9ae/SugarOverflow", "Date": "2016-04-02T20:40:31Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (city != null) { userCity.setText(city.name); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/7965/buggy-version/src.com.example.android_vk_client.Profile.java", "BodyUseAPI": ["android.widget.TextView.setText(city.name)"], "Fixed commit": "b312f5ebbbda16656dfaaea46d06415828505189", "Url": "https://api.github.com/repos/Khelek/client_from_vk_extension", "Date": "2013-06-19T07:27:55Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["intent.getExtras().getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (path == null) { android.net.Uri temp = ((android.net.Uri) (intent.getExtras().get(\"uri\"))); path = temp.getPath(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/3815/buggy-version/app.src.main.java.lol.primitive.primitivemobile.FinishedPreviewActivity.java", "BodyUseAPI": [], "Fixed commit": "d7d3e97477c649745d99fa49ba751a434afc5f2b", "Url": "https://api.github.com/repos/solunaire/Vectrize", "Date": "2017-10-25T16:13:33Z"},
{"Line": "=>508", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isOpen())) { throw new java.lang.IllegalStateException(org.eclipse.persistence.internal.localization.ExceptionLocalization.buildMessage(\"getpersistenceunitutil_called_on_closed_emf\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/3496/buggy-version/jpa.org.eclipse.persistence.jpa.src.org.eclipse.persistence.internal.jpa.EntityManagerFactoryDelegate.java", "BodyUseAPI": [], "Fixed commit": "ac94b96ae574caee2afaa21e314459dd81622b3a", "Url": "https://api.github.com/repos/sabineheider/eclipselink.runtime", "Date": "2013-02-20T13:36:23Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isData == 1) { return serializationService.bytesToObject(bytes, 39); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/2565/buggy-version/hazelcast.src.main.java.com.hazelcast.spi.impl.operationservice.impl.responses.Response.java", "BodyUseAPI": [], "Fixed commit": "20c41753e5fe6d27d960e3b9801d9839d59f8d5d", "Url": "https://api.github.com/repos/pveentjer/hazelcast", "Date": "2016-03-05T17:45:13Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (configuration.isReuseChannel()) { producerCallback = callback; }else { producerCallback = new org.apache.camel.component.netty4.NettyProducer.NettyProducerCallback(channel, callback); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/5893/buggy-version/components.camel-netty4.src.main.java.org.apache.camel.component.netty4.NettyProducer.java", "BodyUseAPI": [], "Fixed commit": "eed88d16f57f351a54c4832c68ecb9d1ece21428", "Url": "https://api.github.com/repos/anoordover/camel", "Date": "2016-06-12T12:48:41Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((selectedEvent) == null) { selectedEvent.attendees = 1; }else { selectedEvent.attendees += 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/8000/buggy-version/app.src.main.java.client.smrtms.com.smrtms_client.fragment.EventFragment.java", "BodyUseAPI": [], "Fixed commit": "670fa69b29f9195865c5be7b371d1b60e9889451", "Url": "https://api.github.com/repos/ethragur/SMRTMS", "Date": "2015-06-12T18:26:26Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<java.util.LinkedList<org.kframework.compile.transformers.Term>>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(cells.isEmpty())) { throw org.kframework.utils.errorsystem.KExceptionManager.criticalError(\"Found term remaining in cell collection after populating parent cell. Did you duplicate a cell accidentally?\", cells.iterator().next()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/5302/buggy-version/kernel.src.main.java.org.kframework.compile.transformers.ResolveContextAbstraction.java", "BodyUseAPI": ["cells.iterator().next()", "org.kframework.utils.errorsystem.KExceptionManager.criticalError(java.lang.String,cells.iterator().next())", "java.util.LinkedList<org.kframework.compile.transformers.Term>.iterator()"], "Fixed commit": "0a0417c40adb03726c837d1a4e5c87c3a8b4ba33", "Url": "https://api.github.com/repos/dwightguth/k", "Date": "2015-04-28T17:27:11Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((download) == null)) download.setWhileLoopStatus(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/733/buggy-version/AppPalPointer.src.com.example.palpointer.ToDoActivity.java", "BodyUseAPI": [], "Fixed commit": "15c1fdebfe5ad54c780ca10f36e8c9e64579408e", "Url": "https://api.github.com/repos/DAT255-GLPP/AppPalPointer", "Date": "2014-05-20T16:46:56Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((schemaExists(schema.getFileName(), schema.getSchemaSetId())) == false) { getNamedParameterJdbcTemplate().update(eionet.meta.dao.mysql.SchemaDAOImpl.INSERT_SQL, params); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/3662/buggy-version/src.main.java.eionet.meta.dao.mysql.SchemaDAOImpl.java", "BodyUseAPI": [], "Fixed commit": "d953383177d3cbea4e13f6b9c51d3e0210eb6fc5", "Url": "https://api.github.com/repos/eea/eionet.datadict", "Date": "2016-02-25T16:36:14Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((this.letters[i]) == ' ') { list.add(' '); }else { list.add('_'); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/6958/buggy-version/src.Controllers.Controller.java", "BodyUseAPI": [], "Fixed commit": "c9bce782a58c36e485c4bd61f65d5f2a0393be25", "Url": "https://api.github.com/repos/anthoxo/nepal-hangman", "Date": "2017-06-11T21:05:36Z"},
{"Line": "=>734", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((className.startsWith(\"http:\")) || (className.startsWith(\"<http:\"))) { if (className.contains(\"#\")) className = className.substring(((className.indexOf(\"#\")) + 1)).replaceAll(\">\", \"\"); else className = className.substring(className.lastIndexOf(\"/\")).replaceAll(\">\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/1830/buggy-version/src.main.java.edu.isi.mediator.rdf.RuleRDFGenerator.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.String.substring(int)", "java.lang.String.indexOf(java.lang.String)"], "Fixed commit": "8db7bb3c4cd638c27d30415b75faa243b2b7c28d", "Url": "https://api.github.com/repos/InformationIntegrationGroup/Web-Karma-Public", "Date": "2013-04-25T22:41:02Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((model.Faktura) (nowy)).kontrachent) == null) result += \" brak \"; else { result += ((model.Faktura) (nowy)).kontrachent.nazwa; result += ((((((((((((((((((((\" o warto\u015bci \" + (utils.MojeUtils.utworzWartoscZlotowki(((model.Faktura) (nowy)).wartosc_z_narzutem))) + \" w walucie \") + waluta) + \" d\u0142ugi (\") + (utils.MojeUtils.utworzWartoscZlotowki(((model.Faktura) (nowy)).kontrachent.dlug_pln))) + \"PLN;\") + (utils.MojeUtils.utworzWartoscZlotowki(((model.Faktura) (nowy)).kontrachent.dlug_eur))) + \"EUR;\") + (utils.MojeUtils.utworzWartoscZlotowki(((model.Faktura) (nowy)).kontrachent.dlug_usd))) + \"USD;\") + (utils.MojeUtils.utworzWartoscZlotowki(((model.Faktura) (nowy)).kontrachent.dlug_uah))) + \"UAH)\") + \", nadp\u0142aty(\") + (utils.MojeUtils.utworzWartoscZlotowki(((model.Faktura) (nowy)).kontrachent.nadplata_pln))) + \"PLN;\") + (utils.MojeUtils.utworzWartoscZlotowki(((model.Faktura) (nowy)).kontrachent.nadplata_eur))) + \"EUR;\") + (utils.MojeUtils.utworzWartoscZlotowki(((model.Faktura) (nowy)).kontrachent.nadplata_usd))) + \"USD;\") + (utils.MojeUtils.utworzWartoscZlotowki(((model.Faktura) (nowy)).kontrachent.nadplata_uah))) + \"UAH)\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/6580/buggy-version/src.utils.Loger.java", "BodyUseAPI": ["utils.MojeUtils.utworzWartoscZlotowki(((model.Faktura) (nowy)).kontrachent.dlug_eur)", "utils.MojeUtils.utworzWartoscZlotowki(((model.Faktura) (nowy)).kontrachent.dlug_usd)", "utils.MojeUtils.utworzWartoscZlotowki(((model.Faktura) (nowy)).kontrachent.nadplata_uah)", "utils.MojeUtils.utworzWartoscZlotowki(((model.Faktura) (nowy)).wartosc_z_narzutem)", "utils.MojeUtils.utworzWartoscZlotowki(((model.Faktura) (nowy)).kontrachent.dlug_uah)", "utils.MojeUtils.utworzWartoscZlotowki(((model.Faktura) (nowy)).kontrachent.nadplata_usd)", "utils.MojeUtils.utworzWartoscZlotowki(((model.Faktura) (nowy)).kontrachent.nadplata_pln)", "utils.MojeUtils.utworzWartoscZlotowki(((model.Faktura) (nowy)).kontrachent.nadplata_eur)", "utils.MojeUtils.utworzWartoscZlotowki(((model.Faktura) (nowy)).kontrachent.dlug_pln)"], "Fixed commit": "49cc8cc02df9c221e76088a0d3511c11b463969a", "Url": "https://api.github.com/repos/orf1888/Subiekt", "Date": "2014-03-13T11:05:37Z"},
{"Line": "=>418", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((faktura.kontrachent) != null) kontroler.FakturaBaza.zaplacFaktury(faktura.kontrachent.id_kontrachent, faktura.waluta.intValue());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/6580/buggy-version/src.kontroler.FakturaBaza.java", "BodyUseAPI": ["kontroler.FakturaBaza.zaplacFaktury(faktura.kontrachent.id_kontrachent,faktura.waluta.intValue())", "faktura.waluta.intValue()"], "Fixed commit": "49cc8cc02df9c221e76088a0d3511c11b463969a", "Url": "https://api.github.com/repos/orf1888/Subiekt", "Date": "2014-03-13T11:05:37Z"},
{"Line": "=>474", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (allLinks) { type = ((fieldValue.charAt(0)) == (com.orientechnologies.orient.core.serialization.serializer.OStringSerializerHelper.LIST_BEGIN)) ? com.orientechnologies.orient.core.metadata.schema.OType.LINKLIST : com.orientechnologies.orient.core.metadata.schema.OType.LINKSET; linkedType = com.orientechnologies.orient.core.metadata.schema.OType.LINK; int classSeparatorPos = value.indexOf(OStringSerializerHelper.CLASS_SEPARATOR); if (classSeparatorPos > (-1)) { java.lang.String className = value.substring(1, classSeparatorPos); if (className != null) linkedClass = ODatabaseRecordThreadLocal.INSTANCE.get().getMetadata().getSchema().getClass(className); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/5702/buggy-version/core.src.main.java.com.orientechnologies.orient.core.serialization.serializer.record.string.ORecordSerializerSchemaAware2CSV.java", "BodyUseAPI": [], "Fixed commit": "b2d66ec32437e23a1ac795fb5e61bc030025d211", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2013-07-13T14:51:50Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((book.getEbookPrice()) == 0) { eBookDownload.setText(\"Read Book For Free\"); }else { eBookDownload.setText(\"Download\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/908/buggy-version/app.src.main.java.com.orthopg.snaphy.orthopg.Fragment.BooksFragment.BookDescriptionFragment.java", "BodyUseAPI": [], "Fixed commit": "167221009e375ffc5c39a16c8c742bbba725c368", "Url": "https://api.github.com/repos/SnaphyClients/OrthoPG", "Date": "2017-08-26T09:40:26Z"},
{"Line": "=>1253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (result != null) return result;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/1951/buggy-version/src.br.uff.midiacom.ana.node.NCLMedia.java", "BodyUseAPI": [], "Fixed commit": "569a85e21f956c177fba062abd347ad462f08637", "Url": "https://api.github.com/repos/joeldossantos/aNa", "Date": "2012-10-31T19:36:13Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mApiClient.isConnected()) { mApiClient.clearDefaultAccountAndReconnect(); }else { mApiClient.connect(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/5284/buggy-version/app.src.main.java.com.adithyaupadhya.moviemaniac.login.SignInActivity.java", "BodyUseAPI": ["com.google.android.gms.common.api.GoogleApiClient.clearDefaultAccountAndReconnect()", "com.google.android.gms.common.api.GoogleApiClient.connect()"], "Fixed commit": "c8a8d5dfa7a1398e9ee6f3ae4196ed03eabf147f", "Url": "https://api.github.com/repos/hkuadithya/MovieManiac", "Date": "2016-08-18T08:12:34Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cn.hiroz.uninstallfeedback.FeedbackUtils.processId) != 0) { android.os.Process.killProcess(cn.hiroz.uninstallfeedback.FeedbackUtils.processId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/230/buggy-version/uninstallfeedback.src.main.java.cn.hiroz.uninstallfeedback.FeedbackUtils.java", "BodyUseAPI": [], "Fixed commit": "484ab222398374daaaca49520e2895d6f476444d", "Url": "https://api.github.com/repos/cnzx219/android-uninstall-feedback", "Date": "2015-12-10T11:15:20Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JList<java.lang.String>.locationToIndex(java.awt.Point)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((index < (tagsModel.getSize())) && (index >= 0)) { java.lang.String value = tagsModel.getElementAt(index); tagStates.put(value, (!(tagStates.get(value)))); tagsList.repaint(); updateFinishButton(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/2626/buggy-version/Core.src.org.sleuthkit.autopsy.report.ReportVisualPanel2.java", "BodyUseAPI": ["org.sleuthkit.autopsy.report.ReportVisualPanel2.TagsListModel.getElementAt(int)"], "Fixed commit": "5c3cbb622215c4a08c7dff8a4b76428a17f18e08", "Url": "https://api.github.com/repos/sleuthkit/autopsy", "Date": "2016-02-03T15:19:53Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.getWhitespaceFollowedNode(com.puppycrawl.tools.checkstyle.api.DetailAST)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((whitespaceFollowedAst.getNextSibling()) == null) || ((whitespaceFollowedAst.getNextSibling().getType()) != (com.puppycrawl.tools.checkstyle.api.TokenTypes.ANNOTATIONS))) { final int whitespaceColumnNo = com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.getPositionAfter(whitespaceFollowedAst); final int whitespaceLineNo = whitespaceFollowedAst.getLineNo(); if (hasTrailingWhitespace(ast, whitespaceColumnNo, whitespaceLineNo)) { log(whitespaceLineNo, whitespaceColumnNo, com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.MSG_KEY, whitespaceFollowedAst.getText()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/4364/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.java", "BodyUseAPI": ["com.puppycrawl.tools.checkstyle.api.DetailAST.getText()", "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.log(int,int,java.lang.String,whitespaceFollowedAst.getText())", "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.getPositionAfter(com.puppycrawl.tools.checkstyle.api.DetailAST)", "com.puppycrawl.tools.checkstyle.api.DetailAST.getLineNo()"], "Fixed commit": "b64e6fa13b796c4d8392d52849ddf68cea6308b7", "Url": "https://api.github.com/repos/sergileon/checkstyle", "Date": "2017-09-05T11:43:02Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(constructResult.endsWith(\"(\"))) { constructResult += \", \"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/673/buggy-version/play-platformservices-querydispatcher.src.main.java.eu.play_project.play_platformservices_querydispatcher.bdpl.code_generator.realtime.EleGeneratorForConstructQuery.java", "BodyUseAPI": [], "Fixed commit": "f36e421f376e365f01df2d9feb38fae58c05d4f4", "Url": "https://api.github.com/repos/play-project/play-dcep", "Date": "2013-12-17T22:11:48Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mercury.services.TransService.getAllPendings()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((index < 0) || (index >= (allpendings.size()))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/3624/buggy-version/src.com.mercury.services.TransService.java", "BodyUseAPI": [], "Fixed commit": "15594f94af69038b2ba8e74d9d19c364b2982a35", "Url": "https://api.github.com/repos/yyang325/YahooFinanceTradingSystem", "Date": "2016-04-06T02:06:29Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (contents[0].equals(\"perma-offset\")) { config.permaOffset = java.lang.Integer.parseInt(contents[1]); }else if (contents[0].equals(\"bedvote\")) { config.bedVote = contents[1].equals(\"yes\"); }else if (contents[0].equals(\"itemvote\")) { config.itemVote = contents[1].equals(\"yes\"); }else if (contents[0].equals(\"lightvote-nocommands\")) { config.lightVoteNoCommands = contents[1].equals(\"yes\"); }else if (contents[0].equals(\"bedvote-iteminhand-day\")) { config.bedVoteItemInHandDay = org.bukkit.Material.getMaterial(contents[1]); if ((config.bedVoteItemInHandDay) == null) java.lang.System.out.println((\"Bad material 1 : \" + (contents[1]))); }else if (contents[0].equals(\"bedvote-itemhits-day\")) { config.bedVoteItemHitsDay = org.bukkit.Material.getMaterial(contents[1]); if ((config.bedVoteItemHitsDay) == null) java.lang.System.out.println((\"Bad material 1 : \" + (contents[1]))); }else if (contents[0].equals(\"bedvote-iteminhand-night\")) { config.bedVoteItemInHandNight = org.bukkit.Material.getMaterial(contents[1]); if ((config.bedVoteItemInHandNight) == null) java.lang.System.out.println((\"Bad material 1 : \" + (contents[1]))); }else if (contents[0].equals(\"bedvote-itemhits-night\")) { config.bedVoteItemHitsNight = org.bukkit.Material.getMaterial(contents[1]); if ((config.bedVoteItemHitsNight) == null) java.lang.System.out.println((\"Bad material 1 : \" + (contents[1]))); }else if (contents[0].equals(\"bedvote-novote-iteminhand-day\")) { config.bedVoteNoVoteItemInHandDay = org.bukkit.Material.getMaterial(contents[1]); if ((config.bedVoteNoVoteItemInHandDay) == null) java.lang.System.out.println((\"Bad material 1 : \" + (contents[1]))); }else if (contents[0].equals(\"bedvote-novote-itemhits-day\")) { config.bedVoteNoVoteItemHitsDay = org.bukkit.Material.getMaterial(contents[1]); if ((config.bedVoteNoVoteItemHitsDay) == null) java.lang.System.out.println((\"Bad material 1 : \" + (contents[1]))); }else if (contents[0].equals(\"bedvote-novote-iteminhand-night\")) { config.bedVoteNoVoteItemInHandNight = org.bukkit.Material.getMaterial(contents[1]); if ((config.bedVoteNoVoteItemInHandNight) == null) java.lang.System.out.println((\"Bad material 1 : \" + (contents[1]))); }else if (contents[0].equals(\"bedvote-novote-itemhits-night\")) { config.bedVoteNoVoteItemHitsNight = org.bukkit.Material.getMaterial(contents[1]); if ((config.bedVoteNoVoteItemHitsNight) == null) java.lang.System.out.println((\"Bad material 1 : \" + (contents[1]))); }else if (contents[0].equals(\"debug-messages\")) { config.debugMessages = contents[1].equals(\"yes\"); }else if (contents[0].equals(\"use-permissions\")) { config.usePermissions = contents[1].equals(\"yes\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/5500/buggy-version/src.com.gmail.zariust.LightVote.LightVote.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.io.PrintStream.println(java.lang.String)", "java.io.PrintStream.println(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.io.PrintStream.println(java.lang.String)", "java.io.PrintStream.println(java.lang.String)", "org.bukkit.Material.getMaterial(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.io.PrintStream.println(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "org.bukkit.Material.getMaterial(java.lang.String)", "org.bukkit.Material.getMaterial(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.io.PrintStream.println(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "org.bukkit.Material.getMaterial(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "org.bukkit.Material.getMaterial(java.lang.String)", "java.io.PrintStream.println(java.lang.String)", "java.io.PrintStream.println(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "org.bukkit.Material.getMaterial(java.lang.String)", "org.bukkit.Material.getMaterial(java.lang.String)", "java.lang.String.equals(java.lang.String)", "org.bukkit.Material.getMaterial(java.lang.String)"], "Fixed commit": "42418508ab08b11df7f74b6fce9e918673a417ca", "Url": "https://api.github.com/repos/Zarius/LightVote", "Date": "2013-06-19T17:45:39Z"},
{"Line": "=>965", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lineRenderer == null) { lineRenderersByDataSource.put(s, null); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/3228/buggy-version/gral-core.src.main.java.de.erichseifert.gral.plots.XYPlot.java", "BodyUseAPI": [], "Fixed commit": "2c0a5988b2414a0f531a72478ffd83fead2d0039", "Url": "https://api.github.com/repos/eseifert/gral", "Date": "2015-04-12T08:52:02Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newAmount > (PezDispenser.MAX_PEZ)) { throw new java.lang.IllegalArgumentException(\"Too Many PEZ!!!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/2855/buggy-version/PezDispenser.java", "BodyUseAPI": [], "Fixed commit": "79826752faa96942c5071ea754bcd45b377535b1", "Url": "https://api.github.com/repos/Langster2323/Java-Basics", "Date": "2016-12-16T15:20:26Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((trackingService) != null) { changeActiveStatus(trackingService.getIsRunning()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/7540/buggy-version/app.src.main.java.cc.intx.owntrack.ServiceControlClass.java", "BodyUseAPI": [], "Fixed commit": "4f4faee003307aa5e3d39fcffc86e5c332be42d9", "Url": "https://api.github.com/repos/intxcc/OwnTrack", "Date": "2016-03-05T12:08:39Z"},
{"Line": "=>340", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((idsString == null) || (idsString.isEmpty())) { onSuccess(new java.util.ArrayList<java.lang.String>()); }else { java.util.List<java.lang.String> ids = java.util.Arrays.asList(idsString.split(\",\")); onSuccess(ids); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/5865/buggy-version/client.BoardMessengerSDK.sdk.src.main.java.jp.co.mobilusers.boardmessenger.ws.WSClient.java", "BodyUseAPI": ["java.util.Arrays.asList(java.lang.String[])", "java.lang.String.split(java.lang.String)"], "Fixed commit": "11e96aed53e8df75387a2ac0e190ee5f8bf0ce43", "Url": "https://api.github.com/repos/tokyo-hackademics/mobilusers", "Date": "2015-05-16T16:24:19Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.genders) == null) return com.bitdubai.fermat_api.layer.all_definition.enums.Genders.INDEFINITE; else return genders;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/2477/buggy-version/DAP.library.api.fermat-dap-api.src.main.java.com.bitdubai.fermat_dap_api.layer.dap_actor.asset_user.AssetUserActorRecord.java", "BodyUseAPI": [], "Fixed commit": "c24ccdc426422ec728a88f7302b97319cedc7f73", "Url": "https://api.github.com/repos/acostarodrigo/fermat", "Date": "2016-02-25T20:56:37Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((arrayList.size()) > 0) { return arrayList; }else { java.util.List<org.datazup.utils.Tuple<java.util.Map<java.lang.String, java.lang.String>, java.lang.Object>> tmp = new java.util.ArrayList<>(); for (java.util.List<org.datazup.utils.Tuple<java.util.Map<java.lang.String, java.lang.String>, java.lang.Object>> tuples : list) { tmp.addAll(tuples); } java.util.List<java.util.List<org.datazup.utils.Tuple<java.util.Map<java.lang.String, java.lang.String>, java.lang.Object>>> tmpList = new java.util.ArrayList<>(); tmpList.add(tmp); return tmpList; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/6665/buggy-version/src.main.java.org.datazup.grouper.DimensionKey.java", "BodyUseAPI": [], "Fixed commit": "3598e16e7cc7124bea02d1bf632df1f1c7ee340b", "Url": "https://api.github.com/repos/datazup/dzupper-grouper", "Date": "2017-04-12T09:55:35Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((f.getGraph()) == null) { tooltips.add(f.toString()); }else { tooltips.add(f.getGraph().getPath()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/762/buggy-version/unitex.src.fr.umlv.unitex.frames.FindAndReplaceDialog.java", "BodyUseAPI": ["fr.umlv.unitex.frames.GraphFrame.toString()", "java.util.ArrayList<java.lang.String>.add(f.toString())", "f.getGraph().getPath()", "java.util.ArrayList<java.lang.String>.add(f.getGraph().getPath())", "fr.umlv.unitex.frames.GraphFrame.getGraph()"], "Fixed commit": "2f7a6d273af7d9b0e5e1db268b8dc52cca5d150b", "Url": "https://api.github.com/repos/phmz/gramlab-ide", "Date": "2016-05-30T08:23:18Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((data1.indexOf(temp1)) >= 0) { java.lang.String tempOut = data1.substring(((data1.indexOf(temp1)) + (temp1.length()))); int toCount = tempOut.indexOf(\"/\"); if (toCount != (-1)) { tempOut = tempOut.substring(0, toCount); } android.util.Log.v(\"tempOut\", tempOut); outUrl = (\"twitter://status?status_id=\" + tempOut) + \"&src=mobile\"; }else { outUrl = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/4509/buggy-version/app.src.main.java.org.lenchan139.twitterhandler.MainActivity.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int)", "java.lang.String.indexOf(java.lang.String)"], "Fixed commit": "448083882d1d5b96e50a89a990a9414057a47cad", "Url": "https://api.github.com/repos/lenchan139/TwitterHandler", "Date": "2017-02-04T14:24:46Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang.StringUtils.isNotBlank(queryPara)) { map = com.cnnic.whois.util.WhoisUtil.processError(WhoisUtil.COMMENDRRORCODE, role, format); processRespone(request, response, map); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/5209/buggy-version/source.whois.src.com.cnnic.whois.controller.QueryServlet.java", "BodyUseAPI": [], "Fixed commit": "1b584388b7bcdc6bd53cea8a4cd754ee9fa67a1b", "Url": "https://api.github.com/repos/cnnic/restfulwhois", "Date": "2013-10-31T01:54:27Z"},
{"Line": "=>2535", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((ph.getStatus()) != (org.exist.storage.index.BFile.MULTI_PAGE)) readOffsets();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/1066/buggy-version/src.org.exist.storage.index.BFile.java", "BodyUseAPI": [], "Fixed commit": "c91dcbd04996647ba89df58e0645289b5e0fb957", "Url": "https://api.github.com/repos/dizzzz/exist", "Date": "2013-12-18T20:23:20Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pay.money) == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/3223/buggy-version/complete.src.main.java.com.zhubo.task.parsepage.task.ParseRoomPageWithWeekIdentifyTask.java", "BodyUseAPI": [], "Fixed commit": "ba0682ffa94451375ec53a685bdb01f3aee28707", "Url": "https://api.github.com/repos/expPATHoli/zhubo_backend", "Date": "2016-10-17T17:52:45Z"},
{"Line": "=>414", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.camel.Message.getHeader(HttpHeaders.Names.CONNECTION,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (connection == null) { connection = message.getExchange().getProperty(HttpHeaders.Names.CONNECTION, java.lang.String.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/7452/buggy-version/components.camel-netty4-http.src.main.java.org.apache.camel.component.netty4.http.DefaultNettyHttpBinding.java", "BodyUseAPI": [], "Fixed commit": "57b084d8b530a622d3d4f1756bed286eae3c8977", "Url": "https://api.github.com/repos/apache/camel", "Date": "2015-03-09T10:08:13Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.netty.handler.codec.http.HttpHeaders.isKeepAlive(io.netty.handler.codec.http.HttpRequest)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!keepAlive) { exchange.setProperty(HttpHeaders.Names.CONNECTION, HttpHeaders.Values.CLOSE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/7452/buggy-version/components.camel-netty4-http.src.main.java.org.apache.camel.component.netty4.http.handlers.HttpServerChannelHandler.java", "BodyUseAPI": [], "Fixed commit": "57b084d8b530a622d3d4f1756bed286eae3c8977", "Url": "https://api.github.com/repos/apache/camel", "Date": "2015-03-09T10:08:13Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((de.cismet.netutil.Proxy.fromPreferences()) != null) { this.proxy = de.cismet.netutil.Proxy.fromPreferences(); }else if ((de.cismet.netutil.Proxy.fromSystem()) != null) { this.proxy = de.cismet.netutil.Proxy.fromSystem(); }else { this.proxy = new de.cismet.netutil.Proxy(); this.proxy.setEnabled(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/6658/buggy-version/src.main.java.de.cismet.cids.custom.switchon.utils.ZenodoUploader.java", "BodyUseAPI": [], "Fixed commit": "45782ae1e2b70ba0a09a037b565aced801bb98a0", "Url": "https://api.github.com/repos/switchonproject/cids-custom-switchon", "Date": "2017-05-17T15:12:34Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((length(args)) == 1) && ((first(args)) instanceof com.nuke.scheme.core.Pair)) { return apply(first(args)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/6390/buggy-version/src.com.nuke.scheme.functions.StatFunctions.java", "BodyUseAPI": ["com.nuke.scheme.functions.StatFunctions.8.first(java.lang.Object)", "com.nuke.scheme.functions.StatFunctions.8.apply(first(args))"], "Fixed commit": "32c5c18d9f25a4a9ad4350a29f8482cfc2e01bf3", "Url": "https://api.github.com/repos/binarii/NScheme", "Date": "2014-10-06T02:18:07Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((length(args)) == 1) && ((first(args)) instanceof com.nuke.scheme.core.Pair)) { return apply(first(args)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/6390/buggy-version/src.com.nuke.scheme.functions.StatFunctions.java", "BodyUseAPI": ["com.nuke.scheme.functions.StatFunctions.MathFunction.apply(first(args))", "com.nuke.scheme.functions.StatFunctions.MathFunction.first(java.lang.Object)"], "Fixed commit": "32c5c18d9f25a4a9ad4350a29f8482cfc2e01bf3", "Url": "https://api.github.com/repos/binarii/NScheme", "Date": "2014-10-06T02:18:07Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((length(args)) == 1) && ((first(args)) instanceof com.nuke.scheme.core.Pair)) { return apply(first(args)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/6390/buggy-version/src.com.nuke.scheme.functions.StatFunctions.java", "BodyUseAPI": ["com.nuke.scheme.functions.StatFunctions.9.apply(first(args))", "com.nuke.scheme.functions.StatFunctions.9.first(java.lang.Object)"], "Fixed commit": "32c5c18d9f25a4a9ad4350a29f8482cfc2e01bf3", "Url": "https://api.github.com/repos/binarii/NScheme", "Date": "2014-10-06T02:18:07Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((length(args)) == 1) && ((first(args)) instanceof com.nuke.scheme.core.Pair)) { return apply(first(args)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/6390/buggy-version/src.com.nuke.scheme.functions.StatFunctions.java", "BodyUseAPI": ["com.nuke.scheme.functions.StatFunctions.10.apply(first(args))", "com.nuke.scheme.functions.StatFunctions.10.first(java.lang.Object)"], "Fixed commit": "32c5c18d9f25a4a9ad4350a29f8482cfc2e01bf3", "Url": "https://api.github.com/repos/binarii/NScheme", "Date": "2014-10-06T02:18:07Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(newFilesDir.isDirectory())) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/1693/buggy-version/src.ac.robinson.util.IOUtilities.java", "BodyUseAPI": [], "Fixed commit": "219844e951679a0225dbe31f4fe7a39bec394092", "Url": "https://api.github.com/repos/communitymedia/mediautilities", "Date": "2013-02-17T10:34:54Z"},
{"Line": "=>366", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (super.isBlank(projectOid)) { throw new com.netsteadfast.greenstep.base.exception.ServiceException(com.netsteadfast.greenstep.base.SysMessageUtil.get(GreenStepSysMsgConstants.PARAMS_BLANK)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/8/buggy-version/gsbsc-standard.src.com.netsteadfast.greenstep.bsc.service.logic.impl.DegreeFeedbackLogicServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "6acb973278f7925cfc917330819bfcaa7b484427", "Url": "https://api.github.com/repos/billchen198318/bamboobsc", "Date": "2015-09-17T10:06:53Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((value != null) && (value.getClass().isArray())) { value = convertArray(((java.lang.Object[]) (value))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/7409/buggy-version/src.main.java.richTea.runtime.attribute.variable.LookupChainElement.java", "BodyUseAPI": [], "Fixed commit": "f9e8d2a8f86acc537448b0a187e9d1e487e80ce7", "Url": "https://api.github.com/repos/RichTeaLang/RichTea", "Date": "2016-07-26T22:18:12Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.sekwah.advancedportals.portals.Portal.portalsActive)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/1217/buggy-version/src.com.sekwah.advancedportals.PortalProtect.java", "BodyUseAPI": [], "Fixed commit": "54a3f8215f2acc62ec307f49247a9edfb957e573", "Url": "https://api.github.com/repos/sekwah41/Advanced-Portals", "Date": "2016-03-02T22:10:07Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.sekwah.advancedportals.portals.Portal.portalsActive)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/1217/buggy-version/src.com.sekwah.advancedportals.PortalProtect.java", "BodyUseAPI": [], "Fixed commit": "54a3f8215f2acc62ec307f49247a9edfb957e573", "Url": "https://api.github.com/repos/sekwah41/Advanced-Portals", "Date": "2016-03-02T22:10:07Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.sekwah.advancedportals.portals.Portal.portalsActive)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/1217/buggy-version/src.com.sekwah.advancedportals.PortalProtect.java", "BodyUseAPI": [], "Fixed commit": "54a3f8215f2acc62ec307f49247a9edfb957e573", "Url": "https://api.github.com/repos/sekwah41/Advanced-Portals", "Date": "2016-03-02T22:10:07Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ch.character.toString().equals(\"q\")) { word += \"u\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/2792/buggy-version/src.bogglegame.BoardCharacter.java", "BodyUseAPI": [], "Fixed commit": "002dfcd355c97dc07c5dfb01a1e39e0fdf5f47b7", "Url": "https://api.github.com/repos/D-Pow/BoggleGame", "Date": "2016-03-07T02:24:49Z"},
{"Line": "=>763", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((iteration.getModel().getSize()) > 0) iteration.setSelectedIndex(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/5706/buggy-version/RequirementsManagement.src.edu.wpi.cs.wpisuitetng.modules.requirementsmanagement.gui.RequirementsPanel.java", "BodyUseAPI": ["javax.swing.JComboBox.setSelectedIndex(int)"], "Fixed commit": "9e11ccb425d5e60e612847ba65cfae5416ecd9ec", "Url": "https://api.github.com/repos/alexhenning/wpi-suite-tng", "Date": "2013-04-10T20:19:06Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["obj.getJSONArray(\"predictions\").getJSONObject(i).getJSONObject(\"direction\").optJSONArray(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (big_arr == null) { org.json.JSONObject ob = obj.getJSONArray(\"predictions\").getJSONObject(i).getJSONObject(\"direction\").optJSONObject(\"prediction\"); java.lang.String toadd = ob.getString(\"minutes\"); add += toadd + \"min\"; }else if (big_arr != null) { for (int j = 0; j < (big_arr.length()); j++) { java.lang.String toadd = big_arr.getJSONObject(j).getString(\"minutes\"); if (toadd.equals(\"0\")) { toadd = \"<1\"; } if (j != ((big_arr.length()) - 1)) { add += (toadd + \",\") + \" \"; }else { add += (toadd + \" \") + \" min\"; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/8431/buggy-version/RutgersApp2.app.src.main.java.com.rutgersapp.BusList.java", "BodyUseAPI": ["org.json.JSONArray.length()", "big_arr.getJSONObject(j).getString(java.lang.String)", "org.json.JSONArray.length()", "org.json.JSONArray.getJSONObject(int)"], "Fixed commit": "3a92d28a4559c9fabd9591cfd5fafa2735400265", "Url": "https://api.github.com/repos/Sail338/UltimateRutgersApp", "Date": "2016-12-31T05:30:28Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isEmpty()) { last = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/8845/buggy-version/src.main.java.com.jaichaudhary.algorithms.collections.LinkedListQueueOfStrings.java", "BodyUseAPI": [], "Fixed commit": "ea5373197f5b57e43f3cb1216ce2e0bda7ad71c9", "Url": "https://api.github.com/repos/Jai-Chaudhary/algorithms", "Date": "2015-08-31T06:37:44Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.file.attribute.FileTime.toMillis()", "java.nio.file.Files.readAttributes(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (timetmp > (attrs.creationTime().toMillis())) { timetmp = attrs.creationTime().toMillis(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/6498/buggy-version/photoweb.src.com.backend.scan.FileTools.java", "BodyUseAPI": ["java.nio.file.attribute.BasicFileAttributes.creationTime()", "java.nio.file.attribute.FileTime.toMillis()"], "Fixed commit": "f4006f4f1ed6eb1c147aed2a323376ddf03adeb3", "Url": "https://api.github.com/repos/shentar/jAlbum", "Date": "2017-02-01T17:47:56Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((com.tint.specular.game.BoardShock.gs.gameMusic()) != null) { com.tint.specular.game.BoardShock.gs.gameMusic().setVolume(0.15F); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/3682/buggy-version/core.src.com.tint.specular.game.BoardShock.java", "BodyUseAPI": ["com.tint.specular.game.GameState.gameMusic()", "com.tint.specular.game.BoardShock.gs.gameMusic().setVolume(float)"], "Fixed commit": "a7ee29e4182109c992d91a8d428b6467e791f312", "Url": "https://api.github.com/repos/onoff97/Specular", "Date": "2014-08-18T17:47:50Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((com.tint.specular.game.BoardShock.gs.gameMusic()) != null) { com.tint.specular.game.BoardShock.gs.gameMusic().setVolume((0.15F + ((com.tint.specular.game.BoardShock.timeActivated) / 550))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/3682/buggy-version/core.src.com.tint.specular.game.BoardShock.java", "BodyUseAPI": ["com.tint.specular.game.GameState.gameMusic()", "com.tint.specular.game.BoardShock.gs.gameMusic().setVolume(float)"], "Fixed commit": "a7ee29e4182109c992d91a8d428b6467e791f312", "Url": "https://api.github.com/repos/onoff97/Specular", "Date": "2014-08-18T17:47:50Z"},
{"Line": "=>1055", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSearchView) != null) { outState.putBoolean(com.owncloud.android.ui.activity.FileDisplayActivity.KEY_IS_SEARCH_OPEN, (!(mSearchView.isIconified()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/3633/buggy-version/src.main.java.com.owncloud.android.ui.activity.FileDisplayActivity.java", "BodyUseAPI": [], "Fixed commit": "6921d013be12b10968557c467f1afe315f75e02b", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2017-01-23T10:00:13Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((mLock) != null) && (!(mLock.isHeld()))) { mLock.acquire(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/4680/buggy-version/src.com.espressif.iot.esptouch.udp.UDPSocketServer.java", "BodyUseAPI": ["WifiManager.MulticastLock.acquire()"], "Fixed commit": "16e7f3e5f6c2a97fa4cd81b83a0628e4e0e5967e", "Url": "https://api.github.com/repos/EspressifApp/EsptouchForAndroid", "Date": "2015-06-01T10:24:30Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((measurement.getMeasurementTime()) - (track.getStartTime())) > 60000) && (((track.getEndTime()) - (measurement.getMeasurementTime())) > 60000)) { if (((org.envirocar.app.views.Utils.getDistance(track.getFirstMeasurement().getLatitude(), track.getFirstMeasurement().getLongitude(), measurement.getLatitude(), measurement.getLongitude())) > 0.25) && ((org.envirocar.app.views.Utils.getDistance(track.getLastMeasurement().getLatitude(), track.getLastMeasurement().getLongitude(), measurement.getLatitude(), measurement.getLongitude())) > 0.25)) { privateMeasurements.add(measurement); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/7109/buggy-version/org.envirocar.app.src.org.envirocar.app.application.UploadManager.java", "BodyUseAPI": ["org.envirocar.app.storage.Track.getLastMeasurement()", "track.getFirstMeasurement().getLongitude()", "java.util.ArrayList<org.envirocar.app.storage.Measurement>.add(org.envirocar.app.storage.Measurement)", "track.getLastMeasurement().getLatitude()", "org.envirocar.app.storage.Track.getFirstMeasurement()", "org.envirocar.app.storage.Track.getLastMeasurement()", "org.envirocar.app.views.Utils.getDistance(track.getLastMeasurement().getLatitude(),track.getLastMeasurement().getLongitude(),measurement.getLatitude(),measurement.getLongitude())", "org.envirocar.app.storage.Measurement.getLatitude()", "track.getFirstMeasurement().getLatitude()", "org.envirocar.app.storage.Track.getFirstMeasurement()", "track.getLastMeasurement().getLongitude()", "org.envirocar.app.views.Utils.getDistance(track.getFirstMeasurement().getLatitude(),track.getFirstMeasurement().getLongitude(),measurement.getLatitude(),measurement.getLongitude())", "org.envirocar.app.storage.Measurement.getLongitude()", "org.envirocar.app.storage.Measurement.getLongitude()", "org.envirocar.app.storage.Measurement.getLatitude()"], "Fixed commit": "8ed7020f588af4b1cf36a92e3b751a71d8120846", "Url": "https://api.github.com/repos/enviroCar/enviroCar-app", "Date": "2013-07-08T14:22:54Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.System.getenv(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((globalTags != null) && (!(globalTags.isEmpty()))) { result = globalTags; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/2213/buggy-version/src.main.java.de.bsd.mp_metrics.MetadataEntry.java", "BodyUseAPI": [], "Fixed commit": "5bdbe9acd7e06532562c16d5481ede00fc08f780", "Url": "https://api.github.com/repos/pilhuhn/mp-metrics", "Date": "2017-05-11T15:35:11Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.stakkato95.sprint3.util.DatabaseUtils.getCursor(com.github.stakkato95.sprint3.database.DatabaseManager.Request)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (cursor.moveToNext()) { model = ((ConcreteModel) (com.github.stakkato95.sprint3.util.DatabaseUtils.restoreFromCursor(request.getModelClass(), cursor))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/9003/buggy-version/app.src.main.java.com.github.stakkato95.sprint3.database.DatabaseManager.java", "BodyUseAPI": ["com.github.stakkato95.sprint3.util.DatabaseUtils.restoreFromCursor(java.lang.Class,android.database.Cursor)"], "Fixed commit": "1965d9010e55b2c2ec0911e4284843b496c3c0c9", "Url": "https://api.github.com/repos/stakkato95/Sprint3", "Date": "2016-01-06T08:44:27Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (view.contains(\"<\")) { view = view.substring(0, view.indexOf(\"<\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/6530/buggy-version/moxy-compiler.src.main.java.com.arellomobile.mvp.compiler.ViewStateProviderClassGenerator.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.indexOf(java.lang.String)"], "Fixed commit": "cc7b35d6ccc8047dac08824774193d9db1a052d2", "Url": "https://api.github.com/repos/terrakok/Moxy", "Date": "2016-07-08T06:04:47Z"},
{"Line": "=>685", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((currentKey.length()) != 0) { currentObject.setProperty(currentKey, obj); }else { org.structr.core.graph.SyncCommand.logger.log(java.util.logging.Level.SEVERE, \"Invalid property key for value {0}, ignoring\", obj); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/3736/buggy-version/structr-core.src.main.java.org.structr.core.graph.SyncCommand.java", "BodyUseAPI": ["org.neo4j.graphdb.PropertyContainer.setProperty(java.lang.String,java.lang.Object)"], "Fixed commit": "5d8164c15e9b79f02055621112da38e963a1e545", "Url": "https://api.github.com/repos/structr/structr", "Date": "2014-02-21T13:51:39Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((stepsCounter) == ((maxSteps) + 1)) increment = -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/7813/buggy-version/CG_Morphing.src.Morphing.java", "BodyUseAPI": [], "Fixed commit": "5a8ebd3a37189bee24f76e17ea4985837ef8f754", "Url": "https://api.github.com/repos/ntaniraula/CSCI550", "Date": "2015-10-22T06:24:14Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.player.PlayerInteractEvent.getPlayer()", "org.bukkit.event.player.PlayerInteractEvent.getClickedBlock()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((clavus.enderpearlrevamp.MarkerMetaData.isMarkable(bl.getType())) && (!(bl.isLiquid()))) && (playerCanHit(pl, bl))) { if (face == (org.bukkit.block.BlockFace.UP)) { plugin.playerMarkBlock(pl, bl); }else { plugin.sendMessageTo(pl, \"Touch the top side of the block to mark it!\"); } }else { plugin.sendMessageTo(pl, \"Cannot mark this spot...\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/8048/buggy-version/src.clavus.enderpearlrevamp.EnderPearlRevampListener.java", "BodyUseAPI": ["clavus.enderpearlrevamp.EnderPearlRevamp.sendMessageTo(org.bukkit.entity.Player,java.lang.String)", "clavus.enderpearlrevamp.EnderPearlRevamp.playerMarkBlock(org.bukkit.entity.Player,org.bukkit.block.Block)", "clavus.enderpearlrevamp.EnderPearlRevamp.sendMessageTo(org.bukkit.entity.Player,java.lang.String)"], "Fixed commit": "317ff613c6e01a387a1741a2ae09f416df0d9348", "Url": "https://api.github.com/repos/Clavus/EnderPearlRevamp", "Date": "2013-01-11T00:39:17Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tk.itstake.steakgui.itemtask.ItemTask.getClickType()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (clickTypes == null) { clickType = \"ALL\"; }else { for (org.bukkit.event.inventory.ClickType ct : clickTypes) { if (clickType.equals(\"\")) { clickType = ct.name(); }else { clickType = \",\" + (ct.name()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/6845/buggy-version/src.tk.itstake.steakgui.util.ItemTaskConverter.java", "BodyUseAPI": [], "Fixed commit": "9930821d7823435722b86638b84704417cb17ab1", "Url": "https://api.github.com/repos/itstake/SteakGUI", "Date": "2015-10-15T17:43:30Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (java.lang.Double.valueOf(numberString).equals(0.0)) { mTextViewResults.setText((\"\" + 0)); }else if ((numberString.charAt(0)) == '0') { mTextViewResults.setText(numberString.substring(1)); }else { mTextViewResults.setText(numberString); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/4989/buggy-version/GreenCalc.app.src.main.java.me.jimmyshaw.greencalc.ActivityCalc.java", "BodyUseAPI": ["java.lang.String.charAt(int)", "android.widget.TextView.setText(java.lang.String)", "android.widget.TextView.setText(java.lang.String)", "java.lang.String.substring(int)"], "Fixed commit": "6dac1dc3e28b830727ee151c445d02c316b3e2b8", "Url": "https://api.github.com/repos/jimxshaw/samples-android", "Date": "2016-07-10T18:44:52Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mRunningNumberString) != null) { executeOperation(operation); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/4989/buggy-version/GreenCalc.app.src.main.java.me.jimmyshaw.greencalc.ActivityCalc.java", "BodyUseAPI": [], "Fixed commit": "6dac1dc3e28b830727ee151c445d02c316b3e2b8", "Url": "https://api.github.com/repos/jimxshaw/samples-android", "Date": "2016-07-10T18:44:52Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((item.type) == (Todo.TYPE.EVENT)) { if ((deadlineTime.isBefore(item.endTime)) && (deadlineTime.isAfter(item.startTime))) { return true; } if ((deadlineTime.isEqual(item.endTime)) || (deadlineTime.isEqual(item.startTime))) { return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/6864/buggy-version/src.com.clockwork.ClashDetector.java", "BodyUseAPI": ["org.joda.time.DateTime.isEqual(item.endTime)", "org.joda.time.DateTime.isAfter(item.startTime)", "org.joda.time.DateTime.isEqual(item.startTime)", "org.joda.time.DateTime.isBefore(item.endTime)"], "Fixed commit": "bbc48e67ef607d03d8dea55ca8b393c6df7c18da", "Url": "https://api.github.com/repos/cs2103jan2016-T09-5j/main", "Date": "2016-03-11T08:39:08Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((item.type) == (Todo.TYPE.DEADLINE)) { if ((item.endTime.isAfter(startTime)) && (item.endTime.isBefore(endTime))) { return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/6864/buggy-version/src.com.clockwork.ClashDetector.java", "BodyUseAPI": ["item.endTime.isAfter(org.joda.time.DateTime)", "item.endTime.isBefore(org.joda.time.DateTime)"], "Fixed commit": "bbc48e67ef607d03d8dea55ca8b393c6df7c18da", "Url": "https://api.github.com/repos/cs2103jan2016-T09-5j/main", "Date": "2016-03-11T08:39:08Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((item.type) == (Todo.TYPE.EVENT)) { if ((startTime.isBefore(item.startTime)) && (endTime.isAfter(item.startTime))) { return true; } if ((endTime.isAfter(item.endTime)) && (startTime.isBefore(item.endTime))) { return true; } if ((startTime.isEqual(item.startTime)) || (endTime.isEqual(item.endTime))) { return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/6864/buggy-version/src.com.clockwork.ClashDetector.java", "BodyUseAPI": ["org.joda.time.DateTime.isAfter(item.endTime)", "org.joda.time.DateTime.isEqual(item.startTime)", "org.joda.time.DateTime.isBefore(item.startTime)", "org.joda.time.DateTime.isEqual(item.endTime)", "org.joda.time.DateTime.isBefore(item.endTime)", "org.joda.time.DateTime.isAfter(item.startTime)"], "Fixed commit": "bbc48e67ef607d03d8dea55ca8b393c6df7c18da", "Url": "https://api.github.com/repos/cs2103jan2016-T09-5j/main", "Date": "2016-03-11T08:39:08Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((item.type) == (Todo.TYPE.DEADLINE)) { if (deadlineTime.isEqual(item.endTime)) { return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/6864/buggy-version/src.com.clockwork.ClashDetector.java", "BodyUseAPI": ["org.joda.time.DateTime.isEqual(item.endTime)"], "Fixed commit": "bbc48e67ef607d03d8dea55ca8b393c6df7c18da", "Url": "https://api.github.com/repos/cs2103jan2016-T09-5j/main", "Date": "2016-03-11T08:39:08Z"},
{"Line": "=>361", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.knime.knip.base.data.img.ImgPlusCell<T>.getMinimum()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(java.util.Arrays.equals(minimum, localMin))) { for (int d = 0; d < (minimum.length); d++) { if ((minimum[d]) != 0) { tmp = net.imglib2.img.ImgView.wrap(net.imglib2.view.Views.translate(tmp, minimum), m_img.factory()); break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/4368/buggy-version/org.knime.knip.base.src.org.knime.knip.base.data.img.ImgPlusCell.java", "BodyUseAPI": ["net.imglib2.img.ImgView.wrap(net.imglib2.view.Views.translate(tmp, minimum),m_img.factory())", "net.imglib2.view.Views.translate(net.imglib2.img.Img<T>,long[])"], "Fixed commit": "23e5f3e5d5cae1e33214c007ad7de6689f5a48ca", "Url": "https://api.github.com/repos/knime-ip/knip", "Date": "2015-07-29T13:20:53Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.enderspawn.Configuration.getConfigurationSection(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (playerSection == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/4170/buggy-version/src.main.java.org.enderspawn.Configuration.java", "BodyUseAPI": [], "Fixed commit": "3d7e13031e5e0b577d1ecb0a6e3307ebb488c2f7", "Url": "https://api.github.com/repos/Glitchfinder/EnderSpawn", "Date": "2012-08-07T05:03:46Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.enderspawn.Configuration.getConfigurationSection(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (dragonSection == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/4170/buggy-version/src.main.java.org.enderspawn.Configuration.java", "BodyUseAPI": [], "Fixed commit": "3d7e13031e5e0b577d1ecb0a6e3307ebb488c2f7", "Url": "https://api.github.com/repos/Glitchfinder/EnderSpawn", "Date": "2012-08-07T05:03:46Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.enderspawn.Configuration.getConfigurationSection(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (playerSection == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/4170/buggy-version/src.main.java.org.enderspawn.Configuration.java", "BodyUseAPI": [], "Fixed commit": "3d7e13031e5e0b577d1ecb0a6e3307ebb488c2f7", "Url": "https://api.github.com/repos/Glitchfinder/EnderSpawn", "Date": "2012-08-07T05:03:46Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((i % (mywidth)) == ((mywidth) - 1)) { index++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/525/buggy-version/src.Codebook.java", "BodyUseAPI": [], "Fixed commit": "e0cbcdf6504e617a08d289966f2dacfd05d2fd69", "Url": "https://api.github.com/repos/alexsword88/Picture_Reader", "Date": "2015-12-12T03:05:08Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (gameName.equals(\"\")) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/5041/buggy-version/Pathogenum.src.client.ClientLobbyState.java", "BodyUseAPI": [], "Fixed commit": "75cdfb651e3a088250bd877f37f95cce7f3ab1e8", "Url": "https://api.github.com/repos/YoX89/Pathogenum", "Date": "2013-05-07T21:58:19Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (gameName.equals(\"\")) { cch.updateGameName(); gameName = cch.getGameName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/5041/buggy-version/Pathogenum.src.client.ClientLobbyState.java", "BodyUseAPI": [], "Fixed commit": "75cdfb651e3a088250bd877f37f95cce7f3ab1e8", "Url": "https://api.github.com/repos/YoX89/Pathogenum", "Date": "2013-05-07T21:58:19Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((cardPool.getCyclenumber()) >= 9) && (!found)) { rowdata.add(new com.madarasz.netrunnerstats.helper.gchartConverter.CellNumber(0, \"0%\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/4194/buggy-version/src.main.java.com.madarasz.netrunnerstats.helper.gchartConverter.DPStatsToOverTimeGchart.java", "BodyUseAPI": [], "Fixed commit": "84e0981700c64a161f1d7912d4aca0cb88ae044c", "Url": "https://api.github.com/repos/madarasz/NetrunnerMeta", "Date": "2016-01-30T16:51:58Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((container) instanceof org.vaadin.addons.lazyquerycontainer.LazyQueryContainer) { org.vaadin.addons.lazyquerycontainer.LazyQueryContainer lazyContainer = ((org.vaadin.addons.lazyquerycontainer.LazyQueryContainer) (container)); if (!(lazyContainer.getContainerPropertyIds().contains(attributeModel.getPath()))) { lazyContainer.addContainerProperty(attributeModel.getPath(), attributeModel.getType(), attributeModel.getDefaultValue(), attributeModel.isReadOnly(), attributeModel.isSortable()); } }else if ((container) instanceof com.vaadin.data.util.BeanItemContainer) { com.vaadin.data.util.BeanItemContainer<?> beanContainer = ((com.vaadin.data.util.BeanItemContainer<?>) (container)); if (!(beanContainer.getContainerPropertyIds().contains(attributeModel.getPath()))) { beanContainer.addNestedContainerProperty(attributeModel.getPath()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/5235/buggy-version/dynamo-spring.src.main.java.com.ocs.dynamo.ui.composite.table.ModelBasedTable.java", "BodyUseAPI": [], "Fixed commit": "5e5a7498bb00be58432dce2b45367fd24f66e9af", "Url": "https://api.github.com/repos/opencirclesolutions/dynamo", "Date": "2017-07-10T11:28:43Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getSearchForm()) != null) && ((getSearchForm().getSearchButton()) != null)) { getSearchForm().getSearchButton().addClickListener(new com.vaadin.ui.Button.ClickListener() { private static final long serialVersionUID = -156650492974447814L; @java.lang.Override public void buttonClick(com.vaadin.ui.Button.ClickEvent event) { checkButtonState(null); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/5235/buggy-version/dynamo-spring.src.main.java.com.ocs.dynamo.ui.composite.layout.AbstractSearchLayout.java", "BodyUseAPI": [], "Fixed commit": "5e5a7498bb00be58432dce2b45367fd24f66e9af", "Url": "https://api.github.com/repos/opencirclesolutions/dynamo", "Date": "2017-07-10T11:28:43Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState == null) { mapFragment = new us.v4lk.transrock.fragments.MapFragment(); routeFragment = new us.v4lk.transrock.fragments.RoutesFragment(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/4594/buggy-version/app.src.main.java.us.v4lk.transrock.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "174c36a9a84c5dcdb197c30d273c34a92375c541", "Url": "https://api.github.com/repos/qlyoung/transrock", "Date": "2016-01-23T21:10:16Z"},
{"Line": "=>285", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (offset == 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/5131/buggy-version/src.com.northvine.reader.implementation.DataMatrix.java", "BodyUseAPI": [], "Fixed commit": "76de826668143cc356e1ff55a71a03119a72b988", "Url": "https://api.github.com/repos/North-Vine-Engineering/Optical-Barcode-Reader", "Date": "2017-05-20T20:43:58Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (offset == ((com.northvine.reader.BarcodeImage.MAX_HEIGHT) - 1)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/5131/buggy-version/src.com.northvine.reader.implementation.DataMatrix.java", "BodyUseAPI": [], "Fixed commit": "76de826668143cc356e1ff55a71a03119a72b988", "Url": "https://api.github.com/repos/North-Vine-Engineering/Optical-Barcode-Reader", "Date": "2017-05-20T20:43:58Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (context instanceof android.app.Activity) { android.app.FragmentManager manager = ((android.app.Activity) (context)).getFragmentManager(); android.app.DialogFragment newFragment = new it.polimi.dima.watchdog.errors.ErrorPopupFragment(message, context); newFragment.show(manager, \"Error notification popup\"); }else { it.polimi.dima.watchdog.errors.ErrorManager.showShortToastMessage(\"Error in command session: wait 2 minutes before trying again!\", context); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/2952/buggy-version/src.it.polimi.dima.watchdog.errors.ErrorManager.java", "BodyUseAPI": ["it.polimi.dima.watchdog.errors.ErrorManager.showShortToastMessage(java.lang.String,android.content.Context)"], "Fixed commit": "70214971f121c2518842095e2b6b270b03a8b647", "Url": "https://api.github.com/repos/ClaudioRizzo/WatchDog", "Date": "2014-06-23T11:16:57Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (canRead) { java.lang.String[] cols = line.split(\"\\\\|\"); if (!(cols[0].trim().equals(\"Column\"))) { if ((cols.length) == 3) { schema.addCol(cols[0].trim(), cols[1].trim(), cols[2].trim()); }else if ((cols.length) == 2) { schema.addCol(cols[0].trim(), cols[1].trim(), \"\"); } } }else if (canReadFK && (!(line.trim().equals(\"\")))) { schema.addFK(line.trim()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/7075/buggy-version/Ddiff.src.com.ck.db.util.Ddiff.java", "BodyUseAPI": [], "Fixed commit": "64617bcebe4abb4aff4b7c0b66bc89add55a7542", "Url": "https://api.github.com/repos/s4553711/Ddiff", "Date": "2015-10-20T09:53:45Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["moduleFile.getParent().getPath()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (workingDirectory.endsWith(\".idea\")) { workingDirectory = workingDirectory.replace(\".idea\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/7571/buggy-version/src.main.java.org.ballerinalang.plugins.idea.runconfig.BallerinaRunConfigurationProducerBase.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "2a7bd823b1846f9a3c0d937e7da2111887f96cb5", "Url": "https://api.github.com/repos/Shan1024/plugin-intellij", "Date": "2017-12-21T08:19:33Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (input.isGenerateSoftToken()) { ks = com.nextleap.itr.webservice.util.SecurityUtils.loadKeyStoreFromHardToken(input.getHardTokenPin(), input.getHardTokenType()); password = input.getHardTokenPin(); }else { ks = com.nextleap.itr.webservice.util.SecurityUtils.loadKeyStoreFromPFXFile(input.getEriPfxFilePath(), input.getEriPfxFilePassword()); password = input.getEriPfxFilePassword(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/4906/buggy-version/src.com.nextleap.itr.webservice.util.SecurityUtils.java", "BodyUseAPI": ["com.nextleap.itr.webservice.beans.ItrInputs.getEriPfxFilePassword()", "com.nextleap.itr.webservice.util.SecurityUtils.loadKeyStoreFromHardToken(input.getHardTokenPin(),input.getHardTokenType())", "com.nextleap.itr.webservice.beans.ItrInputs.getHardTokenPin()", "com.nextleap.itr.webservice.util.SecurityUtils.loadKeyStoreFromPFXFile(input.getEriPfxFilePath(),input.getEriPfxFilePassword())", "com.nextleap.itr.webservice.beans.ItrInputs.getEriPfxFilePath()", "com.nextleap.itr.webservice.beans.ItrInputs.getHardTokenType()", "com.nextleap.itr.webservice.beans.ItrInputs.getEriPfxFilePassword()", "com.nextleap.itr.webservice.beans.ItrInputs.getHardTokenPin()"], "Fixed commit": "9d01f5503ab828c4c9fb6b469b9654a0cd446805", "Url": "https://api.github.com/repos/rajeevbadgujar/itr", "Date": "2014-09-29T15:21:09Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((seen == (org.apache.bcel.Constants.GETFIELD)) || (seen == (org.apache.bcel.Constants.GETSTATIC))) { edu.umd.cs.findbugs.classfile.FieldDescriptor targetField = detector.getFieldDescriptorOperand(); org.apache.bcel.generic.Type type = org.apache.bcel.generic.Type.getType(targetField.getSignature()); if (type != null) { jp.skypencil.findbugs.slf4j.JavaType javaType = jp.skypencil.findbugs.slf4j.JavaType.from(type); if (javaType != null) { org.apache.bcel.classfile.JavaClass javaClass = javaType.toJavaClass(); if ((javaClass != null) && (javaClass.instanceOf(throwable))) { edu.umd.cs.findbugs.OpcodeStack.Item localThrowable = stack.getStackItem(0); localThrowable.setUserValue(jp.skypencil.findbugs.slf4j.ThrowableHandler.IS_THROWABLE); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/997/buggy-version/bug-pattern.src.main.java.jp.skypencil.findbugs.slf4j.ThrowableHandler.java", "BodyUseAPI": [], "Fixed commit": "c7a89db8840e33d1ebe72c27a3936e598f6ae327", "Url": "https://api.github.com/repos/eller86/findbugs-slf4j", "Date": "2013-03-25T23:30:26Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["vm.getDeclaredVertices().get(org.nschmidt.ldparteditor.data.GData)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (verts != null) { vertexToReplace = verts[0]; foundVertexMetacommand = true; foundValidVertex = true; org.nschmidt.ldparteditor.logger.NLogger.debug(getClass(), \"Vertex I\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/2852/buggy-version/src.org.nschmidt.ldparteditor.composites.compositetab.CompositeTab.java", "BodyUseAPI": [], "Fixed commit": "5c78e79dc9ff16a02e9c804ec07d72cd9ec53546", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2016-01-19T19:31:41Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (itemStackA == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/8599/buggy-version/src.main.java.de.alaoli.games.minecraft.mods.limitedresources.data.LimitedBlock.java", "BodyUseAPI": [], "Fixed commit": "87e038a5418169880fa5bf846897ae0812ad62ed", "Url": "https://api.github.com/repos/DerOli82/LimitedResources", "Date": "2015-08-09T14:51:00Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (that == null) { throw new java.lang.NullPointerException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/1085/buggy-version/CourseRaPrincetonAlgo.src.hengxiu.courseraPA.w3.Point.java", "BodyUseAPI": [], "Fixed commit": "adfaf05564dbed71c96367a5d211e62a29edf3ef", "Url": "https://api.github.com/repos/Hengxiugao/CourseRaPrincetonAlgo", "Date": "2017-02-27T05:36:45Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (that == null) { throw new java.lang.NullPointerException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/1085/buggy-version/CourseRaPrincetonAlgo.src.hengxiu.courseraPA.w3.Point.java", "BodyUseAPI": [], "Fixed commit": "adfaf05564dbed71c96367a5d211e62a29edf3ef", "Url": "https://api.github.com/repos/Hengxiugao/CourseRaPrincetonAlgo", "Date": "2017-02-27T05:36:45Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.hasDict())) { this.createDict(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/351/buggy-version/src.main.java.ch.unibnf.sfdwh.tscf.bolts.fuzzy.SentiWordFuzzyModel.java", "BodyUseAPI": [], "Fixed commit": "efa8e835898b29d197966330f0500fc35e6cf181", "Url": "https://api.github.com/repos/snoooze03/tsfc", "Date": "2013-11-08T08:55:47Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(properties.getProperty(\"tourney.location\", \"\").isEmpty())) { return properties.getProperty(\"tourney.location\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/8461/buggy-version/src.main.java.org.powertac.tourney.services.TournamentProperties.java", "BodyUseAPI": ["java.util.Properties.getProperty(java.lang.String)"], "Fixed commit": "928def19d03af961fdbe78c4454326e7daf9bc61", "Url": "https://api.github.com/repos/powertac/powertac-tournament-scheduler", "Date": "2012-09-14T15:09:40Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((eventId2touchPointDescriptor.get(eventId)) instanceof net.sourceforge.cobertura.instrument.tp.JumpTouchPointDescriptor) { net.sourceforge.cobertura.instrument.tp.JumpTouchPointDescriptor jumpTouchPointDescriptor = ((net.sourceforge.cobertura.instrument.tp.JumpTouchPointDescriptor) (eventId2touchPointDescriptor.get(eventId))); if (jumpTouchPointDescriptor != null) { return jumpTouchPointDescriptor.getCounterIdForTrue(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/8784/buggy-version/cobertura.src.main.java.net.sourceforge.cobertura.instrument.tp.ClassMap.java", "BodyUseAPI": ["java.util.Map<java.lang.Integer, net.sourceforge.cobertura.instrument.tp.TouchPointDescriptor>.get(int)"], "Fixed commit": "006cc9b9edec5a7927621ebd2e53b02586a317fb", "Url": "https://api.github.com/repos/jmrozanec/cobertura", "Date": "2013-07-16T12:37:32Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((eventId2touchPointDescriptor.get(eventId)) instanceof net.sourceforge.cobertura.instrument.tp.JumpTouchPointDescriptor) { net.sourceforge.cobertura.instrument.tp.JumpTouchPointDescriptor jumpTouchPointDescriptor = ((net.sourceforge.cobertura.instrument.tp.JumpTouchPointDescriptor) (eventId2touchPointDescriptor.get(eventId))); if (jumpTouchPointDescriptor != null) { return jumpTouchPointDescriptor.getCounterIdForFalse(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/8784/buggy-version/cobertura.src.main.java.net.sourceforge.cobertura.instrument.tp.ClassMap.java", "BodyUseAPI": ["java.util.Map<java.lang.Integer, net.sourceforge.cobertura.instrument.tp.TouchPointDescriptor>.get(int)"], "Fixed commit": "006cc9b9edec5a7927621ebd2e53b02586a317fb", "Url": "https://api.github.com/repos/jmrozanec/cobertura", "Date": "2013-07-16T12:37:32Z"},
{"Line": "=>568", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((question.get(\"answers\")) == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/3379/buggy-version/rest.slap.src.main.java.com.ntechinternational.slap.SlapRestImpl.java", "BodyUseAPI": [], "Fixed commit": "328ba1479cc78eaa8c7a30005ab6f2490d2d19c0", "Url": "https://api.github.com/repos/NTechInternational/slap", "Date": "2014-11-19T17:12:35Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (configFileProperties != null) { configFileProperties.getProperty(com.alibaba.druid.filter.config.ConfigFilter.CONFIG_KEY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/2871/buggy-version/src.main.java.com.alibaba.druid.filter.config.ConfigFilter.java", "BodyUseAPI": ["java.util.Properties.getProperty(java.lang.String)"], "Fixed commit": "31250baebc58fd9d9a122f77f7a6a9cf8b925dff", "Url": "https://api.github.com/repos/wenshao/druid", "Date": "2013-08-04T06:46:38Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.util.List<java.lang.String>>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (classProcessedRules == null) { classProcessedRules = new java.util.ArrayList<>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/2345/buggy-version/kubwa-compiler.src.main.java.com.wesleyelliott.kubwa.KubwaCompiler.java", "BodyUseAPI": [], "Fixed commit": "e7e7a66f42337ce1c3a02261362cd099350158ec", "Url": "https://api.github.com/repos/WesleyElliott/Kubwa", "Date": "2016-09-01T07:16:18Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, yahoofinance.Stock>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (stock != null) quote = stock.getQuote();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/161/buggy-version/app.src.main.java.com.udacity.stockhawk.sync.QuoteSyncJob.java", "BodyUseAPI": ["yahoofinance.Stock.getQuote()"], "Fixed commit": "97796b45c0117f2dc5f642578296b190f52de712", "Url": "https://api.github.com/repos/ehabhamdy/StockHawk", "Date": "2017-04-15T09:39:19Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isBinaryMessage)) { props.put(\"value.deserializer\", \"org.apache.kafka.common.serialization.StringDeserializer\"); }else { props.put(\"value.deserializer\", \"org.apache.kafka.common.serialization.ByteArrayDeserializer\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/5626/buggy-version/component.src.main.java.org.wso2.extension.siddhi.io.kafka.source.KafkaSource.java", "BodyUseAPI": [], "Fixed commit": "bc6794e8083b3f67e0625ce60e4b3299f0c8429c", "Url": "https://api.github.com/repos/wso2-extensions/siddhi-io-kafka", "Date": "2017-11-15T13:08:16Z"},
{"Line": "=>331", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isBinaryMessage)) { configProperties.put(ProducerConfig.VALUE_SERIALIZER_CLASS_CONFIG, \"org.apache.kafka.common.serialization.StringSerializer\"); }else { configProperties.put(ProducerConfig.VALUE_SERIALIZER_CLASS_CONFIG, \"org.apache.kafka.common.serialization.ByteArraySerializer\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/5626/buggy-version/component.src.main.java.org.wso2.extension.siddhi.io.kafka.source.KafkaSource.java", "BodyUseAPI": [], "Fixed commit": "bc6794e8083b3f67e0625ce60e4b3299f0c8429c", "Url": "https://api.github.com/repos/wso2-extensions/siddhi-io-kafka", "Date": "2017-11-15T13:08:16Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getIntent().getExtras()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (sn != null) subjectname = sn.getString(\"subjectname\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/2684/buggy-version/src.com.vinchi.thesis.DialogActivity.java", "BodyUseAPI": ["android.os.Bundle.getString(java.lang.String)"], "Fixed commit": "960a4811debdf4f48cbcc5cb40167c8bbb877603", "Url": "https://api.github.com/repos/vinchi777/thesis", "Date": "2011-11-21T18:24:25Z"},
{"Line": "=>728", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((playerSettings != null) && (!(playerSettings[playerId].isAvailable()))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/8160/buggy-version/jsettlers.logic.src.main.java.jsettlers.logic.map.loading.original.OriginalMapFileContentReader.java", "BodyUseAPI": [], "Fixed commit": "8c8a22474e70bc16db8025850f6846bbb62e205b", "Url": "https://api.github.com/repos/gollum1001/settlers-remake", "Date": "2017-07-07T17:16:36Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sender.hasPermission(\"chaoticmc.command.god\")) { me.chaoticmc.core.util.Chat.color(p, \"&9/god &8- &7Toggles godmode!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/5037/buggy-version/src.me.chaoticmc.core.commands.CommandHelp.java", "BodyUseAPI": [], "Fixed commit": "6c7b4df63fa0903cd632e0179c442ef0be92091d", "Url": "https://api.github.com/repos/overfriended/ChaoticCores", "Date": "2017-04-29T20:39:07Z"},
{"Line": "=>388", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.python.pydev.debug.ui.PyConfigureExceptionDialog.getSelectedElements()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (selectedElements != null) { for (java.lang.Object element : selectedElements) { getViewer().setChecked(element, true); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/4443/buggy-version/plugins.org.python.pydev.debug.src.org.python.pydev.debug.ui.PyConfigureExceptionDialog.java", "BodyUseAPI": [], "Fixed commit": "5d0fc7336ff45308d8040fff4fae51ee58dc12f4", "Url": "https://api.github.com/repos/hussainbohra/Pydev", "Date": "2011-04-20T12:48:29Z"},
{"Line": "=>311", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.python.pydev.debug.ui.PyConfigureExceptionDialog.getSelectedElements()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (selectedElements != null) { for (java.lang.Object selectedElement : selectedElements) { if (!(list.contains(selectedElement))) { list.add(selectedElement); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/4443/buggy-version/plugins.org.python.pydev.debug.src.org.python.pydev.debug.ui.PyConfigureExceptionDialog.java", "BodyUseAPI": [], "Fixed commit": "5d0fc7336ff45308d8040fff4fae51ee58dc12f4", "Url": "https://api.github.com/repos/hussainbohra/Pydev", "Date": "2011-04-20T12:48:29Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (digits.equals(\"\")) { beginSaldo = java.lang.Double.valueOf(((mBeginSaldo.group(4).replace(',', '.')) + \"00\")); }else { beginSaldo = java.lang.Double.valueOf(((mBeginSaldo.group(4).replace(',', '.')) + digits)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/7628/buggy-version/maakboekingen.src.main.java.nl.fzit.maakboekingen.maakboekingen.LeesBoekingen.java", "BodyUseAPI": ["java.lang.Double.valueOf(java.lang.String)"], "Fixed commit": "18f0bb6121391e09296f0667d69d9c2ab9f0fc9c", "Url": "https://api.github.com/repos/zwijze/Maakboekingen", "Date": "2017-10-29T17:27:12Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (digits.equals(\"\")) { eindSaldo = java.lang.Double.valueOf(((mEindSaldo.group(2).replace(',', '.')) + \"00\")); }else { eindSaldo = java.lang.Double.valueOf(((mEindSaldo.group(2).replace(',', '.')) + digits)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/7628/buggy-version/maakboekingen.src.main.java.nl.fzit.maakboekingen.maakboekingen.LeesBoekingen.java", "BodyUseAPI": ["java.lang.Double.valueOf(java.lang.String)"], "Fixed commit": "18f0bb6121391e09296f0667d69d9c2ab9f0fc9c", "Url": "https://api.github.com/repos/zwijze/Maakboekingen", "Date": "2017-10-29T17:27:12Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (digits.equals(\"\")) { boeking[3] = (mBoekingsDatumEnBedrag.group(4).replace(',', '.')) + \"00\"; }else { boeking[3] = (mBoekingsDatumEnBedrag.group(4).replace(',', '.')) + digits; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/7628/buggy-version/maakboekingen.src.main.java.nl.fzit.maakboekingen.maakboekingen.LeesBoekingen.java", "BodyUseAPI": [], "Fixed commit": "18f0bb6121391e09296f0667d69d9c2ab9f0fc9c", "Url": "https://api.github.com/repos/zwijze/Maakboekingen", "Date": "2017-10-29T17:27:12Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mDatabase.isOpen()) { mDatabase.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/5638/buggy-version/app.src.main.java.org.digitalcampus.oppia.application.DatabaseManager.java", "BodyUseAPI": ["android.database.sqlite.SQLiteDatabase.close()"], "Fixed commit": "713355e9e09e5b694da660af722bb579dd4aa43d", "Url": "https://api.github.com/repos/jjoseba/oppia-mobile-android", "Date": "2016-01-19T11:50:29Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pieceLocations[pieceID]) != (-1)) pieceIDs[pieceLocations[pieceID]] = -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/9208/buggy-version/src.manager.UIState.java", "BodyUseAPI": [], "Fixed commit": "d495c7e0f6ce993a282e3dd1d1835ef59607125a", "Url": "https://api.github.com/repos/utdrobotchess/chess-game", "Date": "2015-03-18T18:14:28Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (location != (-1)) pieceIDs[location] = pieceID;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/9208/buggy-version/src.manager.UIState.java", "BodyUseAPI": [], "Fixed commit": "d495c7e0f6ce993a282e3dd1d1835ef59607125a", "Url": "https://api.github.com/repos/utdrobotchess/chess-game", "Date": "2015-03-18T18:14:28Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<com.foodie.app.entities.Activity>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((activityItem.getActivityImage()) != null) { android.graphics.Bitmap bmp = android.graphics.BitmapFactory.decodeByteArray(activityItem.getActivityImage(), 0, activityItem.getActivityImage().length); holder.suggestionImage.setImageBitmap(bmp); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/7613/buggy-version/app.src.main.java.com.foodie.app.ui.view_adapters.SuggestionRecyclerViewAdapter.java", "BodyUseAPI": ["android.graphics.BitmapFactory.decodeByteArray(activityItem.getActivityImage(),int,activityItem.getActivityImage().length)", "com.foodie.app.entities.Activity.getActivityImage()", "com.foodie.app.entities.Activity.getActivityImage()"], "Fixed commit": "7975eebf2ff16497f9d19c8fcc8f4baecbdbad69", "Url": "https://api.github.com/repos/danmi20/JavaProject", "Date": "2017-01-29T22:16:02Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<com.foodie.app.entities.Activity>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((activityItem.getActivityImage()) != null) { android.graphics.Bitmap bmp = android.graphics.BitmapFactory.decodeByteArray(activityItem.getActivityImage(), 0, activityItem.getActivityImage().length); holder.image.setImageBitmap(bmp); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/7613/buggy-version/app.src.main.java.com.foodie.app.ui.view_adapters.ActivityRecyclerViewAdapter.java", "BodyUseAPI": ["com.foodie.app.entities.Activity.getActivityImage()", "com.foodie.app.entities.Activity.getActivityImage()", "android.graphics.BitmapFactory.decodeByteArray(activityItem.getActivityImage(),int,activityItem.getActivityImage().length)"], "Fixed commit": "7975eebf2ff16497f9d19c8fcc8f4baecbdbad69", "Url": "https://api.github.com/repos/danmi20/JavaProject", "Date": "2017-01-29T22:16:02Z"},
{"Line": "=>567", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ee.sk.digidoc.factory.DigiDocVerifyFactory.m_logger.isDebugEnabled()) ee.sk.digidoc.factory.DigiDocVerifyFactory.m_logger.debug((((\"Different for signed: \" + (r1.getId())) + \"/\") + (r1.getValue())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/5689/buggy-version/jdigidoc.src.main.java.ee.sk.digidoc.factory.DigiDocVerifyFactory.java", "BodyUseAPI": ["org.apache.log4j.Logger.debug((((\"Different for signed: \" + (r1.getId())) + \"/\") + (r1.getValue())))"], "Fixed commit": "59eb085b05bc4f12e26347cbf75a699f87a80fcb", "Url": "https://api.github.com/repos/open-eid/jdigidoc", "Date": "2015-05-14T09:56:51Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cmd.hasOption(\"db\")) dbname = cmd.getOptionValue(\"db\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/7608/buggy-version/src.enderdom.eddie.tasks.database.Task_Blast.java", "BodyUseAPI": ["org.apache.commons.cli.CommandLine.getOptionValue(java.lang.String)"], "Fixed commit": "b1c440e07c0e643115241a4da74a4eb4c0e568e3", "Url": "https://api.github.com/repos/EnderDom/Eddie", "Date": "2013-03-22T14:56:00Z"},
{"Line": "=>602", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["no.uib.cipr.matrix.sparse.FlexCompRowMatrix.get(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (corr == 0) { no.uib.cipr.matrix.sparse.SparseVector jv = lib.rec.MatrixUtils.col(trainMatrix, j); corr = compCorr(iv, jv, items); corrs.set(i, j, corr); corrs.set(j, i, corr); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/7371/buggy-version/librec.src.main.java.lib.rec.intf.Recommender.java", "BodyUseAPI": [], "Fixed commit": "04769fa2bd2ed58df7b1c19d0deaf35cacf0b956", "Url": "https://api.github.com/repos/guoguibing/librec", "Date": "2014-01-17T15:43:06Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((lib.rec.intf.Recommender.isRankingPred) && (lib.rec.intf.Recommender.isDiverseUsed)) corrs = new no.uib.cipr.matrix.sparse.FlexCompRowMatrix(lib.rec.intf.Recommender.numItems, lib.rec.intf.Recommender.numItems);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/7371/buggy-version/librec.src.main.java.lib.rec.intf.Recommender.java", "BodyUseAPI": [], "Fixed commit": "04769fa2bd2ed58df7b1c19d0deaf35cacf0b956", "Url": "https://api.github.com/repos/guoguibing/librec", "Date": "2014-01-17T15:43:06Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["filemanagement.FileWrapper.getFileList()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((hiddenFiles.length) == 0) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/6256/buggy-version/core.src.main.java.filemanagement.RandomImageFileMoverImpl.java", "BodyUseAPI": [], "Fixed commit": "b664e0e32d7e2dbc33d590a1f54a3edd0dab53d1", "Url": "https://api.github.com/repos/zliving/File-Play", "Date": "2016-11-08T04:50:21Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isAdded()) { android.widget.Toast.makeText(getContext(), error.getMessage(), Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/3308/buggy-version/app.src.main.java.com.brunoaybar.unofficialupc.modules.base.BaseFragment.java", "BodyUseAPI": [], "Fixed commit": "11ffd254f802c17045a0964da8bb582062e1fb17", "Url": "https://api.github.com/repos/Bruno125/Unofficial-Ups", "Date": "2016-10-21T16:44:42Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<java.lang.String>.toArray(java.lang.String[])"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((names.length) > 0) { names[0] = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/277/buggy-version/src.OptionsPanel.java", "BodyUseAPI": [], "Fixed commit": "fb95f031ce03b235f904cc4713dafa9cbd62d4de", "Url": "https://api.github.com/repos/RogerTsang/comp2911Connect4", "Date": "2015-05-26T06:12:32Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["doc.body().getElementsByTag(\"br\").first()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (br != null) br.remove();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/8442/buggy-version/src.com.endreman0.jekyllwin.FileWriter.java", "BodyUseAPI": ["org.jsoup.nodes.Element.remove()"], "Fixed commit": "0eb7d293672afb4d4b23ead3ae19ea57a1b1c309", "Url": "https://api.github.com/repos/endreman0/jekyll-win", "Date": "2014-12-26T01:52:13Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (contentType == (com.pratilipi.common.type.PratilipiContentType.IMAGE)) { blobEntry = ((com.pratilipi.data.type.BlobEntry) (com.pratilipi.data.util.PratilipiDataUtil.getPratilipiContent(request.pratilipiId, 0, request.pageNo, PratilipiContentType.IMAGE))); }else if (contentType == (com.pratilipi.common.type.PratilipiContentType.PRATILIPI)) { blobEntry = ((com.pratilipi.data.type.BlobEntry) (com.pratilipi.data.util.PratilipiDataUtil.getPratilipiContentImage(request.pratilipiId, request.name, request.width))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/8951/buggy-version/src.main.java.com.pratilipi.api.impl.pratilipi.PratilipiContentImageApi.java", "BodyUseAPI": [], "Fixed commit": "5a836a1184dbe80d6fece6d4778d15b4b06f3740", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2016-09-29T07:32:36Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (contentType == null) contentType = com.pratilipi.data.DataAccessorFactory.getDataAccessor().getPratilipi(request.pratilipiId).getContentType();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/8951/buggy-version/src.main.java.com.pratilipi.api.impl.pratilipi.PratilipiContentImageApi.java", "BodyUseAPI": [], "Fixed commit": "5a836a1184dbe80d6fece6d4778d15b4b06f3740", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2016-09-29T07:32:36Z"},
{"Line": "=>432", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (str.contains(\".\")) { result = str.substring(0, str.indexOf(\".\")); }else { result = str; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/6241/buggy-version/app.src.main.java.io.ucoin.app.Format.java", "BodyUseAPI": ["java.lang.String.indexOf(java.lang.String)", "java.lang.String.substring(int,int)"], "Fixed commit": "10832d9d16be95362e0ba3ccaf25c690179804da", "Url": "https://api.github.com/repos/duniter/duniter-android-app", "Date": "2016-03-01T15:28:59Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((imageViewWidth > availableWidth) || (imageViewHeight > availableHeight)) { while ((imageViewWidth > availableWidth) || (imageViewHeight > availableHeight)) { imageViewWidth *= 0.99F; imageViewHeight *= 0.99F; } }else { while ((imageViewWidth < availableWidth) && (imageViewHeight < availableHeight)) { imageViewWidth *= 1.01F; imageViewHeight *= 1.01F; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/881/buggy-version/src.main.java.de.j4velin.picturechooser.crop.CropFragment.java", "BodyUseAPI": [], "Fixed commit": "72479aa9925a136886775db42c263de6b72faf8c", "Url": "https://api.github.com/repos/j4velin/PictureChooser", "Date": "2014-08-20T21:09:25Z"},
{"Line": "=>344", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(d.isAbsolute())) { final java.lang.String wspace = org.eclipse.core.resources.ResourcesPlugin.getWorkspace().getRoot().getLocation().toPortableString(); workingDir = (wspace + \"/\") + workingDir; workingDirText.setText(workingDir); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/433/buggy-version/org.erlide.ui.src.org.erlide.ui.launch.RuntimeTab.java", "BodyUseAPI": [], "Fixed commit": "5b99578dab677f7c1e64e930fc94ca44346d9498", "Url": "https://api.github.com/repos/erlide/erlide", "Date": "2014-03-11T15:44:13Z"},
{"Line": "=>539", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((com.github.mikephil.charting.utils.Utils.allCharsHeight) <= 0) || ((com.github.mikephil.charting.utils.Utils.allCharsHeightFromTextSize) != (paint.getTextSize()))) { paint.getTextBounds(com.github.mikephil.charting.utils.Utils.allChars, 0, com.github.mikephil.charting.utils.Utils.allChars.length(), com.github.mikephil.charting.utils.Utils.mDrawTextRectBuffer); com.github.mikephil.charting.utils.Utils.allCharsHeight = com.github.mikephil.charting.utils.Utils.mDrawTextRectBuffer.height(); com.github.mikephil.charting.utils.Utils.allCharsHeightFromTextSize = paint.getTextSize(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/4948/buggy-version/MPChartLib.src.com.github.mikephil.charting.utils.Utils.java", "BodyUseAPI": ["android.graphics.Paint.getTextBounds(java.lang.String,int,int,android.graphics.Rect)", "android.graphics.Paint.getTextSize()"], "Fixed commit": "0f2042ef53785eaa4c8ba97156c1c5162eab8611", "Url": "https://api.github.com/repos/danielmalmq/MPAndroidChart", "Date": "2016-02-15T10:23:35Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (matcher.group(org.jboss.narayana.txvis.logparsing.handlers.LOG_CLASS).equals(\"com.arjuna.ats.jtax\")) service.enlistResourceManagerByThreadID(matcher.group(org.jboss.narayana.txvis.logparsing.handlers.THREAD_ID), matcher.group(org.jboss.narayana.txvis.logparsing.handlers.RM_JNDI_NAME), matcher.group(org.jboss.narayana.txvis.logparsing.handlers.RM_PRODUCT_NAME), matcher.group(org.jboss.narayana.txvis.logparsing.handlers.RM_PRODUCT_VERSION), parseTimestamp(matcher.group(org.jboss.narayana.txvis.logparsing.handlers.TIMESTAMP)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/326/buggy-version/txvis-core.src.main.java.org.jboss.narayana.txvis.logparsing.handlers.TransactionImpleHandler.java", "BodyUseAPI": ["java.util.regex.Matcher.group(org.jboss.narayana.txvis.logparsing.handlers.THREAD_ID)", "org.jboss.narayana.txvis.logparsing.handlers.TransactionImpleHandler.parseTimestamp(java.lang.String)", "java.util.regex.Matcher.group(org.jboss.narayana.txvis.logparsing.handlers.RM_JNDI_NAME)", "org.jboss.narayana.txvis.logparsing.handlers.TransactionImpleHandler.enlistResourceManagerByThreadID(java.lang.String,java.lang.String,java.lang.String,java.lang.String,parseTimestamp(matcher.group(org.jboss.narayana.txvis.logparsing.handlers.TIMESTAMP)))", "java.util.regex.Matcher.group(org.jboss.narayana.txvis.logparsing.handlers.RM_PRODUCT_VERSION)", "java.util.regex.Matcher.group(org.jboss.narayana.txvis.logparsing.handlers.RM_PRODUCT_NAME)", "java.util.regex.Matcher.group(org.jboss.narayana.txvis.logparsing.handlers.TIMESTAMP)"], "Fixed commit": "a66f7ed6a627efed05252bc069c0d8fd4ac94533", "Url": "https://api.github.com/repos/alexcreasy/txvis", "Date": "2013-06-23T19:33:07Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openstack4j.model.network.Network.getNeutronSubnets()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (neutronSubnets != null) { for (org.openstack4j.model.network.Subnet neutronSubnet : neutronSubnets) { if (neutronSubnet != null) { subnets.put(neutronSubnet.getId(), neutronSubnet.getName()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/1224/buggy-version/cloud-openstack.src.main.java.com.sequenceiq.cloudbreak.cloud.openstack.common.OpenStackPlatformResources.java", "BodyUseAPI": [], "Fixed commit": "255fe7283d8da4bc39ba4e929be3182c12ef76a4", "Url": "https://api.github.com/repos/hortonworks/cloudbreak", "Date": "2017-10-24T07:19:06Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (writeToDisk) { net.xdocc.Utils.writeHTML(handlerBean.getSite(), handlerBean.getxPath(), handlerBean.getDirtyset(), handlerBean.getRelativePathToRoot(), documentPreview, generatedFile0, \"directory\", handlerBean.getModel()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/4343/buggy-version/src.main.java.net.xdocc.handlers.HandlerDirectory.java", "BodyUseAPI": [], "Fixed commit": "3047a276b70ab8a59bb0856da60efcc4bdd0e2ce", "Url": "https://api.github.com/repos/xdocc/xdocc", "Date": "2014-02-12T16:21:53Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(selectedUsers.isEmpty())) { android.widget.Toast.makeText(this, (\"Sending invites to: \" + (selectedUsersNames.substring(0, ((selectedUsersNames.length()) - 2)))), Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/2011/buggy-version/app.src.main.java.com.msushanth.tablesapp.PresentationLayer.FormClasses.Invitation.SelectMatchedUsersForm.java", "BodyUseAPI": [], "Fixed commit": "bfb6205c32accff6cb287d95984b6b5a19c3d348", "Url": "https://api.github.com/repos/sumukkam/TablesApp", "Date": "2017-11-25T07:26:12Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (typeName.endsWith(\"[]\")) return new de.sormuras.stash.stashlet.common.ObjectStashlet(typeName);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/9196/buggy-version/src.stashlet.de.sormuras.stash.stashlet.Stashlets.java", "BodyUseAPI": [], "Fixed commit": "119efacd7a90db42bfb9dd73f5179ae6da624c67", "Url": "https://api.github.com/repos/sormuras/stash", "Date": "2015-05-10T03:11:53Z"},
{"Line": "=>315", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dev.ukanth.ufirewall.util.G.gPrefs.getString(dev.ukanth.ufirewall.util.G.PROTECTION_OPTION, \"p0\").equals(\"Disable\")) { dev.ukanth.ufirewall.util.G.gPrefs.edit().putString(dev.ukanth.ufirewall.util.G.PROTECTION_OPTION, \"p0\").commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/611/buggy-version/aFWall.src.main.java.dev.ukanth.ufirewall.util.G.java", "BodyUseAPI": ["dev.ukanth.ufirewall.util.G.gPrefs.edit().putString(java.lang.String,java.lang.String)", "android.content.SharedPreferences.edit()", "dev.ukanth.ufirewall.util.G.gPrefs.edit().putString(dev.ukanth.ufirewall.util.G.PROTECTION_OPTION, \"p0\").commit()"], "Fixed commit": "6718dc6d37102cf019dfccf906cd6064705a7acf", "Url": "https://api.github.com/repos/ukanth/afwall", "Date": "2016-07-21T16:14:28Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (slot >= (items.size())) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/3416/buggy-version/src.main.java.makeo.gadomancy.common.blocks.tiles.TileArcaneDropper.java", "BodyUseAPI": [], "Fixed commit": "ccd1f94dfbfa0f89a75efa74a3cf26dbea1bba60", "Url": "https://api.github.com/repos/makeoo/Gadomancy", "Date": "2015-12-18T18:25:14Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (position == 1) { android.content.Intent intent = new android.content.Intent(view.getContext(), com.example.derek.whereabouts.MapsActivity.class); intent.putExtra(\"ROOM_ID\", room); intent.putExtra(\"ROOM_NAME\", roomName); intent.putExtra(\"USERNAME\", username); startActivity(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/6858/buggy-version/app.src.main.java.com.example.derek.whereabouts.ChatRoomActivity.java", "BodyUseAPI": [], "Fixed commit": "ebcd636040714694a33be08f34a677c428daf6b1", "Url": "https://api.github.com/repos/derekhua/whereabouts", "Date": "2016-02-20T21:17:02Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((books[i].myRenter) != null) { if (books[i].myRenter.equals(rentee)) { return books[i]; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/6152/buggy-version/expandableArray.java", "BodyUseAPI": ["books[i].myRenter.equals(java.lang.String)"], "Fixed commit": "480e6189dcb46ed762bc410e02fe30b94214c559", "Url": "https://api.github.com/repos/stefanKnott/LibManGUI", "Date": "2014-07-01T04:25:15Z"},
{"Line": "=>585", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (room == null) { controllers.Logger.info(((\"User \" + (user.firstName)) + \"trying to retrieve information for null room\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/1163/buggy-version/app.controllers.Lobby.java", "BodyUseAPI": [], "Fixed commit": "137f08f0d6aeaf8e66479f21a2626f9feff74417", "Url": "https://api.github.com/repos/eltmon/auricle", "Date": "2016-08-28T17:55:11Z"},
{"Line": "=>449", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.silverpeas.attachment.model.SimpleDocument.getLastPublicVersion()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (lastPublicVersion == null) { throw new org.silverpeas.attachment.web.WebApplicationException(javax.ws.rs.core.Response.Status.NOT_FOUND); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/9209/buggy-version/web-core.src.main.java.org.silverpeas.attachment.web.SimpleDocumentResource.java", "BodyUseAPI": [], "Fixed commit": "40b21a20db9c3cdb8de01e0822744b74c7323ccd", "Url": "https://api.github.com/repos/Silverpeas/Silverpeas-Core", "Date": "2016-01-29T10:09:10Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((actionBar.getNavigationMode()) == (android.app.ActionBar.NAVIGATION_MODE_TABS)) actionBar.setSelectedNavigationItem(nav);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/5732/buggy-version/src.org.qii.weiciyuan.ui.main.CommentsTimeLine.java", "BodyUseAPI": ["android.app.ActionBar.setSelectedNavigationItem(int)"], "Fixed commit": "3a2caf08158c5be7f02f7edad2d0b31835e7bb45", "Url": "https://api.github.com/repos/Jewelzqiu/weiciyuan", "Date": "2013-04-18T11:27:40Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity().getActionBar().getNavigationMode()) == (android.app.ActionBar.NAVIGATION_MODE_TABS)) getActivity().getActionBar().setSelectedNavigationItem(position);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/5732/buggy-version/src.org.qii.weiciyuan.ui.main.CommentsTimeLine.java", "BodyUseAPI": [], "Fixed commit": "3a2caf08158c5be7f02f7edad2d0b31835e7bb45", "Url": "https://api.github.com/repos/Jewelzqiu/weiciyuan", "Date": "2013-04-18T11:27:40Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity().getActionBar().getNavigationMode()) == (android.app.ActionBar.NAVIGATION_MODE_TABS)) getActivity().getActionBar().setSelectedNavigationItem(position);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/5732/buggy-version/src.org.qii.weiciyuan.ui.main.MentionsTimeLine.java", "BodyUseAPI": [], "Fixed commit": "3a2caf08158c5be7f02f7edad2d0b31835e7bb45", "Url": "https://api.github.com/repos/Jewelzqiu/weiciyuan", "Date": "2013-04-18T11:27:40Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((actionBar.getNavigationMode()) == (android.app.ActionBar.NAVIGATION_MODE_TABS)) actionBar.setSelectedNavigationItem(nav);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/5732/buggy-version/src.org.qii.weiciyuan.ui.main.MentionsTimeLine.java", "BodyUseAPI": ["android.app.ActionBar.setSelectedNavigationItem(int)"], "Fixed commit": "3a2caf08158c5be7f02f7edad2d0b31835e7bb45", "Url": "https://api.github.com/repos/Jewelzqiu/weiciyuan", "Date": "2013-04-18T11:27:40Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (params == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/644/buggy-version/src.main.java.io.jboot.core.http.JbootHttpRequest.java", "BodyUseAPI": [], "Fixed commit": "fb01b689323198ba483e647c9be7b02ad710dfdd", "Url": "https://api.github.com/repos/yangfuhai/jboot", "Date": "2017-10-21T04:16:46Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["disconfCenterStore.getConfItemMap().get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((disconfCenterItem.getObject()) != null) { disconfCenterItem.getField().set(disconfCenterItem.getObject(), disconfCenterItem.getValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/4940/buggy-version/disconf.disconf-client.src.main.java.com.baidu.disconf2.client.store.DisconfStoreMgr.java", "BodyUseAPI": ["com.baidu.disconf2.client.common.model.DisconfCenterItem.getObject()", "com.baidu.disconf2.client.common.model.DisconfCenterItem.getValue()", "com.baidu.disconf2.client.common.model.DisconfCenterItem.getField()", "disconfCenterItem.getField().set(disconfCenterItem.getObject(),disconfCenterItem.getValue())"], "Fixed commit": "1019a34fa3ebc4033995c97d374f6f50ec2dac82", "Url": "https://api.github.com/repos/knightliao/disconf", "Date": "2014-06-18T16:56:21Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["info.matchingservice.dom.Match.MatchingService.getElementMatches(info.matchingservice.dom.Need.VacancyProfileElement)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(tempListOfElements.isEmpty())) { for (info.matchingservice.dom.Match.ElementComparison e : tempListOfElements) { if (e.getMatchingProfileOwner().equals(tempProfileOwner)) { elementCounter++; if (((vpelement.getWeight()) != null) && ((vpelement.getWeight()) > 0)) { totalMatchingValue += ((e.getCalculatedMatchingValue()) * (vpelement.getWeight())) / cumWeight; }else { totalMatchingValue += ((e.getCalculatedMatchingValue()) * avarageWeight) / cumWeight; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/8875/buggy-version/dom.src.main.java.info.matchingservice.dom.Match.MatchingService.java", "BodyUseAPI": [], "Fixed commit": "ae98a288fd03f99431da9ee7728bc73ca5dd2fa7", "Url": "https://api.github.com/repos/johandoornenbal/matching", "Date": "2014-11-18T20:27:36Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (requestCode == (at.tugraz.ist.catroid.stage.StageActivity.STAGE_ACTIVITY_FINISH)) { loadProjectAsync = true; at.tugraz.ist.catroid.ProjectManager projectManager = at.tugraz.ist.catroid.ProjectManager.getInstance(); projectManager.loadProjectAsync(projectManager.getCurrentProject().getName(), this, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/2323/buggy-version/catroid.src.at.tugraz.ist.catroid.ui.MainMenuActivity.java", "BodyUseAPI": [], "Fixed commit": "dcc01ab729ed9f27b3318d45626f5e7ab4a4fa21", "Url": "https://api.github.com/repos/Catrobat/Catroid", "Date": "2012-08-23T13:57:42Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(loadProjectAsync)) { ProjectManager.INSTANCE.loadProject(ProjectManager.INSTANCE.getCurrentProject().getName(), this, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/2323/buggy-version/catroid.src.at.tugraz.ist.catroid.ui.MainMenuActivity.java", "BodyUseAPI": [], "Fixed commit": "dcc01ab729ed9f27b3318d45626f5e7ab4a4fa21", "Url": "https://api.github.com/repos/Catrobat/Catroid", "Date": "2012-08-23T13:57:42Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (timeout <= 0) { timeout = com.yy.httpdns.util.HttpUtil.CONNECT_TIMEOUT; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/8498/buggy-version/android-httpdns-sdk.src.main.java.com.yy.httpdns.util.HttpUtil.java", "BodyUseAPI": [], "Fixed commit": "2ab484069ce50ba3409fca205e5b59d948acec3a", "Url": "https://api.github.com/repos/huangzhilong/http-dns-android", "Date": "2016-09-13T08:02:54Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dimension < 0) { throw new me.chaosdefinition.hypercube.common.HypercubeException((\"Illegal value of dimension: \" + dimension)); }else if (dimension < 2) { return dimension; }else { return (3 * (1 << ((dimension << 1) - 3))) - (1 << (dimension - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/5867/buggy-version/src.main.java.me.chaosdefinition.hypercube.core.WirelengthCalculator.java", "BodyUseAPI": [], "Fixed commit": "20f4dfb20b0a37f52f1166f8838e59da1c9ba255", "Url": "https://api.github.com/repos/chaosdefinition/hypercube", "Date": "2016-04-16T07:11:34Z"},
{"Line": "=>581", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.molgenis.framework.server.MolgenisRequest.getString((\"8_\" + (e.getName())))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((backgroundName == null) || (backgroundName.equals(\"\"))) { db.remove(value); db.remove(cs.getProtocolApplicationByName(value.getProtocolApplication_Name())); }else { value.setRelation(cs.getObservationTargetByName(backgroundName).getId()); db.update(value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/3165/buggy-version/apps.animaldb.org.molgenis.animaldb.plugins.animal.EditAnimalPlugin.java", "BodyUseAPI": ["cs.getObservationTargetByName(backgroundName).getId()", "org.molgenis.pheno.ObservedValue.setRelation(cs.getObservationTargetByName(backgroundName).getId())", "org.molgenis.animaldb.commonservice.CommonService.getObservationTargetByName(java.lang.String)"], "Fixed commit": "796d919d8c01bd614f9375a75c99181139ea75d7", "Url": "https://api.github.com/repos/pneerincx/molgenis_apps-legacy", "Date": "2013-04-15T18:23:02Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (trips.isEmpty()) { return tripResponse; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/5592/buggy-version/src.main.java.ru.kpfu.itis.dmitryivanov.response.TripResponse.java", "BodyUseAPI": [], "Fixed commit": "152fb6c227da3c2b8486cbbba3604f50448684c3", "Url": "https://api.github.com/repos/Flexuss/TeamTravel", "Date": "2017-12-17T14:39:28Z"},
{"Line": "=>285", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.MotionEvent.getRawY()", "android.view.MotionEvent.getRawX()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((((eventX < (tvX[0])) || (eventX > ((tvX[4]) + (tvLength)))) || (eventY > ((tvY[24]) + (tvHeight)))) || (eventY < (tvY[0]))) { resetTiles(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/5345/buggy-version/app.src.main.java.com.example.dave.sumrun.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "1b4860a365906ac7897cce92d93de386c7b21fc9", "Url": "https://api.github.com/repos/DaveDe/SumRun", "Date": "2015-12-09T19:58:23Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.simple.JSONValue.parse(readResponse(connection))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((msgArray == null) || ((msgArray.size()) == 0)) return resultArrayList;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/1471/buggy-version/src.edu.cmu.cs.ebiz.teamHEX.task8.model.Twitter.java", "BodyUseAPI": [], "Fixed commit": "4634b525141997415f4c63aedbcc3b209556a97c", "Url": "https://api.github.com/repos/wgtmac/Task8", "Date": "2015-02-17T07:18:55Z"},
{"Line": "=>1128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((modelsTabPane.getTabCount()) > 0) modelsTabPane.setSelectedIndex(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/3610/buggy-version/com.variamos.gui.src.com.variamos.gui.maineditor.BasicGraphEditor.java", "BodyUseAPI": ["javax.swing.JTabbedPane.setSelectedIndex(int)"], "Fixed commit": "b8c155f1649ad1641e4e2bcbaab461c4912b4e47", "Url": "https://api.github.com/repos/leonjaramillo/VARIAMOS", "Date": "2015-02-23T23:01:30Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cmd.getAlias()) == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/6945/buggy-version/core.src.com.google.collinsmith70.diablo.command.Commands.java", "BodyUseAPI": [], "Fixed commit": "bf1ec2e806bf3ff0e222addb6bf916e4caa003eb", "Url": "https://api.github.com/repos/collinsmith/diablo", "Date": "2015-12-14T03:31:09Z"},
{"Line": "=>869", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mLocation) != null) { locLat = mLocation.getLatitude(); }else { locLat = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/8868/buggy-version/app.src.main.java.fr.wcs.viaferrata.MapsActivity.java", "BodyUseAPI": [], "Fixed commit": "541ba3294bbdd3d4fb7d514834eddab4e274c2c7", "Url": "https://api.github.com/repos/YvesToiser/ViaFerrata", "Date": "2017-10-24T12:41:07Z"},
{"Line": "=>875", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mLocation) != null) { locLong = mLocation.getLongitude(); }else { locLong = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/8868/buggy-version/app.src.main.java.fr.wcs.viaferrata.MapsActivity.java", "BodyUseAPI": [], "Fixed commit": "541ba3294bbdd3d4fb7d514834eddab4e274c2c7", "Url": "https://api.github.com/repos/YvesToiser/ViaFerrata", "Date": "2017-10-24T12:41:07Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (file.getOriginalFilename().equals(\"\")) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/481/buggy-version/src.main.java.itn.issuemanager.service.FileService.java", "BodyUseAPI": [], "Fixed commit": "6b65b114c0d20d66e27c23c2b117c6b0f2ae8981", "Url": "https://api.github.com/repos/I-Think-Not/I-Think-Not", "Date": "2017-02-16T05:34:47Z"},
{"Line": "=>1417", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.zstack.storage.ceph.backup.CephBackupStorageVO.getFsid()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((org.zstack.core.db.Q.New(org.zstack.storage.ceph.primary.CephPrimaryStorageVO.class).eq(CephPrimaryStorageVO_.fsid, fsid).find()) == null) { dbf.removeByPrimaryKey(fsid, org.zstack.storage.ceph.backup.CephCapacityVO.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/1148/buggy-version/plugin.ceph.src.main.java.org.zstack.storage.ceph.backup.CephBackupStorageBase.java", "BodyUseAPI": ["org.zstack.storage.ceph.backup.CephBackupStorageBase.removeByPrimaryKey(java.lang.String,java.lang.Class)"], "Fixed commit": "c940d722a097e22b6560c6ce16413a6d4496c396", "Url": "https://api.github.com/repos/MaJin1996/zstack", "Date": "2017-03-20T01:34:58Z"},
{"Line": "=>316", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(Runner.userInput.equals(\"4\"))) { Runner.menu(); }else { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/8878/buggy-version/Runner.java", "BodyUseAPI": [], "Fixed commit": "18d4c12007e5a6b5c86dd1cd403a084eabc280dd", "Url": "https://api.github.com/repos/mzyskin6/ComputerScienceFinalProject", "Date": "2016-05-24T13:01:39Z"},
{"Line": "=>449", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value < 0) value = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/1864/buggy-version/src.Server.SocketManagerServer.SocketClient.java", "BodyUseAPI": [], "Fixed commit": "f1d6e582ccd34d645a87c945fb1dd7f685baf3b4", "Url": "https://api.github.com/repos/MightyDuelsDevs/MightyDuelsDistributed", "Date": "2016-01-11T13:26:24Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((guard) != null) { org.dynalang.dynalink.linker.GuardedInvocation.assertType(guard, type.changeReturnType(java.lang.Boolean.TYPE)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/1722/buggy-version/src.main.java.org.dynalang.dynalink.linker.GuardedInvocation.java", "BodyUseAPI": [], "Fixed commit": "b0e63a850ea4cd9c90893dfa64912acfce1418ef", "Url": "https://api.github.com/repos/szegedi/dynalink", "Date": "2012-05-22T00:16:49Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((potentialNewRoot.getActions().size()) == (potentialNewRoot.amountOfChildren())) { potentialNewRoot.setFullyExpanded(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/8611/buggy-version/src.main.java.nl.dke.boardgame.mcts.MonteCarloTree.java", "BodyUseAPI": ["nl.dke.boardgame.mcts.MonteCarloRootNode<S, A>.setFullyExpanded(boolean)"], "Fixed commit": "79d2b1e340db2851cf63f36c3a9e5d543d6b7a07", "Url": "https://api.github.com/repos/nikvaessen/dke-boardgame", "Date": "2017-01-23T12:46:32Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (b.getChildren(d1, d2, playerColor).isEmpty()) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/5662/buggy-version/Player.java", "BodyUseAPI": [], "Fixed commit": "39619b18e15b5a9af471ed0a45b4f673369c45da", "Url": "https://api.github.com/repos/bstrds/bckbn", "Date": "2012-12-18T15:06:30Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang.StringUtils.isNotBlank(value)) { doc.addField((\"mv_\" + facetName), value, 1.0F); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/6136/buggy-version/elab4-backend.src.main.java.elaborate.editor.solr.ElaborateSolrIndexer.java", "BodyUseAPI": ["org.apache.solr.common.SolrInputDocument.addField(java.lang.String,java.lang.String,float)"], "Fixed commit": "f185590e6e246a68592ecf70a2360e958597668c", "Url": "https://api.github.com/repos/HuygensING/elaborate4-backend", "Date": "2016-03-09T16:25:58Z"},
{"Line": "=>300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (this.searchField.getText().equals(this.searchInstruction)) { this.searchField.setText(newSearchInstruction); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/8209/buggy-version/src.com.ceejii.gui.component.SearchSuggestionComponent.java", "BodyUseAPI": ["javax.swing.JTextField.setText(java.lang.String)"], "Fixed commit": "3231bc6ee9eacb6e726cd0d8838e4d1eeeaddc8c", "Url": "https://api.github.com/repos/ceejii/jcomponent-search", "Date": "2013-04-05T15:54:09Z"},
{"Line": "=>500", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.stratos.gce.extension.GCEOperations.compute.httpHealthChecks().list(org.apache.stratos.gce.extension.GCEOperations.PROJECT_ID).execute()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((httpHealthCheckList.size()) == 0) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/4747/buggy-version/extensions.load-balancer.gce-extension.src.main.java.org.apache.stratos.gce.extension.GCEOperations.java", "BodyUseAPI": [], "Fixed commit": "173571acbac6de1a2baa2153a3ab8e33214ed6d3", "Url": "https://api.github.com/repos/asankasanjaya/stratos", "Date": "2015-06-17T07:26:12Z"},
{"Line": "=>316", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.sqlite.SQLiteDatabase.query(SongData.TABLE_NAME,java.lang.String[],<nulltype>,<nulltype>,<nulltype>,<nulltype>,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((cursor.getInt(1)) == 0) { return \"None\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/5606/buggy-version/src.com.wsiia.database.GameDatabaseHelper.java", "BodyUseAPI": [], "Fixed commit": "45981fb65de1bca5f018848d3524217dcd7d9194", "Url": "https://api.github.com/repos/Bandits789/WhatSongIsItAnyway", "Date": "2014-06-19T02:23:16Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.satnar.smpp.StackMap.getStack(this.smppConnection.getEsmeLabel())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (session != null) session.stop();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/4570/buggy-version/cagw-core.src.main.java.com.satnar.smpp.transport.ReadHelper.java", "BodyUseAPI": ["com.satnar.smpp.client.Esme.stop()"], "Fixed commit": "17db604578247b67f8099439d15ab42bc3b29af5", "Url": "https://api.github.com/repos/chamuch/vtlcagw", "Date": "2015-07-15T09:31:55Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.satnar.smpp.StackMap.getStack(this.smppConnection.getEsmeLabel())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (session != null) session.stop();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/4570/buggy-version/cagw-core.src.main.java.com.satnar.smpp.transport.ReadHelper.java", "BodyUseAPI": ["com.satnar.smpp.client.Esme.stop()"], "Fixed commit": "17db604578247b67f8099439d15ab42bc3b29af5", "Url": "https://api.github.com/repos/chamuch/vtlcagw", "Date": "2015-07-15T09:31:55Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(initData[0].contains(\":\"))) this.count = defaults.count;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/1330/buggy-version/src.com.gmail.haloinverse.DynamicMarket.MarketItem.java", "BodyUseAPI": [], "Fixed commit": "8517eca4b5434dd0a5d450b9a57df64604dcdde2", "Url": "https://api.github.com/repos/HaloInverse/DynamicMarket", "Date": "2011-03-01T11:12:13Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (e instanceof java.lang.Exception) { org.apache.cxf.transport.jms.util.PollingMessageListenerContainer.LOG.log(java.util.logging.Level.WARNING, \"Unexpected exception. Restarting session and consumer\", ((java.lang.Exception) (e))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/6044/buggy-version/rt.transports.jms.src.main.java.org.apache.cxf.transport.jms.util.PollingMessageListenerContainer.java", "BodyUseAPI": [], "Fixed commit": "be269a8f7b9409792963dee097da76cb5fdd5757", "Url": "https://api.github.com/repos/apache/cxf", "Date": "2017-03-24T16:36:48Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (e instanceof java.lang.Exception) { org.apache.cxf.transport.jms.util.PollingMessageListenerContainer.LOG.log(java.util.logging.Level.WARNING, \"Exception while processing jms message in cxf. Rolling back\", ((java.lang.Exception) (e))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/6044/buggy-version/rt.transports.jms.src.main.java.org.apache.cxf.transport.jms.util.PollingMessageListenerContainer.java", "BodyUseAPI": [], "Fixed commit": "be269a8f7b9409792963dee097da76cb5fdd5757", "Url": "https://api.github.com/repos/apache/cxf", "Date": "2017-03-24T16:36:48Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sequence) instanceof org.biojava.nbio.core.sequence.RNASequence) returnSeq = new org.biojava.nbio.core.sequence.RNASequence(sequenceString, org.biojava.nbio.core.sequence.compound.RNACompoundSet.getRNACompoundSet()); else if ((sequence) instanceof org.biojava.nbio.core.sequence.ProteinSequence) returnSeq = new org.biojava.nbio.core.sequence.ProteinSequence(sequenceString, org.biojava.nbio.core.sequence.compound.AminoAcidCompoundSet.getAminoAcidCompoundSet()); else if ((sequence) == null) { if (sequenceString.matches(\"^[ACTG]+$\")) returnSeq = new org.biojava.nbio.core.sequence.DNASequence(sequenceString, org.biojava.nbio.core.sequence.compound.DNACompoundSet.getDNACompoundSet()); else if (sequenceString.matches(\"^[ACUG]+$\")) returnSeq = new org.biojava.nbio.core.sequence.RNASequence(sequenceString, org.biojava.nbio.core.sequence.compound.DNACompoundSet.getDNACompoundSet()); else returnSeq = new org.biojava.nbio.core.sequence.ProteinSequence(sequenceString, org.biojava.nbio.core.sequence.compound.AminoAcidCompoundSet.getAminoAcidCompoundSet()); }else throw new java.lang.IllegalStateException();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/2527/buggy-version/biojava-core.src.main.java.org.biojava.nbio.core.search.io.Hsp.java", "BodyUseAPI": [], "Fixed commit": "df6cf5811d6c6fd2866aca8410c9915f85439f8a", "Url": "https://api.github.com/repos/paolopavan/biojava", "Date": "2015-12-14T14:26:30Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["main.GamePanel.getGraphics()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (g != null) { g.drawImage(image, 0, 0, ((main.GamePanel.WIDTH) * 2), ((main.GamePanel.HEIGHT) * 2), null); g.dispose(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/810/buggy-version/IH11-Game.src.main.GamePanel.java", "BodyUseAPI": ["java.awt.Graphics.drawImage(java.awt.image.BufferedImage,int,int,int,int,<nulltype>)", "java.awt.Graphics.dispose()"], "Fixed commit": "650ccd48061820029708a91ee2aaa12389cebcf1", "Url": "https://api.github.com/repos/TobiasBodewig/IH11-Game", "Date": "2014-05-30T16:38:45Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["FBLT.service.rating.ImplIRatingService.findRatingByUserId(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((ratingList.size()) != 0) return total / (ratingList.size()); else return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/4781/buggy-version/src.main.java.FBLT.controllers.UserProfileController.java", "BodyUseAPI": ["java.util.List<FBLT.domain.rating.Rating>.size()"], "Fixed commit": "b4c93983996706c2f3b1a3dda2cf5305b049b164", "Url": "https://api.github.com/repos/FerinT/FBLT", "Date": "2016-12-14T00:20:03Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isBlank(jobName)) { throw new com.vip.saturn.job.console.exception.SaturnJobConsoleHttpException(HttpStatus.BAD_REQUEST.value(), java.lang.String.format(com.vip.saturn.job.console.controller.JobOperationRestApiController.MISSING_REQUEST_MSG, \"jobName\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/394/buggy-version/saturn-console.src.main.java.com.vip.saturn.job.console.controller.JobOperationRestApiController.java", "BodyUseAPI": [], "Fixed commit": "74b9579b917eceaca4d1046caeb1007532dccc54", "Url": "https://api.github.com/repos/vipshop/Saturn", "Date": "2017-07-10T03:19:25Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (test == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/1108/buggy-version/src.com.br.bnsantos.login.example.utils.JsonUtils.java", "BodyUseAPI": [], "Fixed commit": "9430a450c1c037696c4c728f45b69857415d278b", "Url": "https://api.github.com/repos/bnsantos/android-http-request", "Date": "2014-01-25T23:13:18Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((test.length()) == 0) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/1108/buggy-version/src.com.br.bnsantos.login.example.utils.JsonUtils.java", "BodyUseAPI": [], "Fixed commit": "9430a450c1c037696c4c728f45b69857415d278b", "Url": "https://api.github.com/repos/bnsantos/android-http-request", "Date": "2014-01-25T23:13:18Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((size) < 1) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/209/buggy-version/src.main.java.com.github.mfondo.CuckooHashSet.java", "BodyUseAPI": [], "Fixed commit": "f5876708f18c5a3d4d1e5c848fa8564506201c96", "Url": "https://api.github.com/repos/mfondo/cuckoohash", "Date": "2014-11-07T23:05:38Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type.equalsIgnoreCase(\"going\")) { }else { txtStatus.setText(\"B\u00e1o c\u00e1o \u0111\u00e3 b\u1ecb x\u00f3a\"); txtStatus.setVisibility(View.VISIBLE); txtStatusDes.setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/2898/buggy-version/App.StaffMobileApp.app.src.main.java.com.fu.group10.capstone.apps.staffmobileapp.activity.ResolveReportActivity.java", "BodyUseAPI": [], "Fixed commit": "65bc4b73189547a1e7902c1b300a73b9f0d5533e", "Url": "https://api.github.com/repos/tranquang9a1/ECRM", "Date": "2015-08-09T13:15:01Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.yaml.snakeyaml.Yaml.load(java.io.InputStream)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((map.get(\"definitions\")) != null) { com.networknt.swagger.Bundler.definitions.putAll(((java.util.Map<java.lang.String, java.lang.Object>) (map.get(\"definitions\")))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/1460/buggy-version/src.main.java.com.networknt.swagger.Bundler.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)", "java.util.Map<java.lang.String, java.lang.Object>.putAll(java.lang.Object)"], "Fixed commit": "3702dc9391c337772db2fbf844e3c8f85dffb171", "Url": "https://api.github.com/repos/networknt/swagger-bundler", "Date": "2017-07-24T19:45:43Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isHttpPath(subPath)) { return subPath; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/3423/buggy-version/core.modules.jackson.src.main.java.org.onetwo.common.jackson.UrlJsonSerializer.java", "BodyUseAPI": [], "Fixed commit": "725e440206e10273cdda0fc895baca8b020c9a93", "Url": "https://api.github.com/repos/wayshall/onetwo", "Date": "2017-08-30T09:04:20Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isHttpPath(subPath)) { return subPath; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/3423/buggy-version/core.modules.boot.src.main.java.org.onetwo.boot.utils.ImageUrlJsonSerializer.java", "BodyUseAPI": [], "Fixed commit": "725e440206e10273cdda0fc895baca8b020c9a93", "Url": "https://api.github.com/repos/wayshall/onetwo", "Date": "2017-08-30T09:04:20Z"},
{"Line": "=>3015", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.craft.atom.redis.DefaultRedis.handleException(java.lang.Exception,redis.clients.jedis.Jedis,java.lang.Object[])"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (re instanceof org.craft.atom.redis.api.RedisConnectionException) { j = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/7260/buggy-version/craft-atom-redis.src.main.java.org.craft.atom.redis.DefaultRedis.java", "BodyUseAPI": [], "Fixed commit": "50b389b2cd7f42c31d34828e026c33762f50e1b6", "Url": "https://api.github.com/repos/mindwind/craft-atom", "Date": "2014-01-21T12:51:28Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.and12edi.kitchenaplication.MainActivity.findViewById(R.id.toolBar)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (toolbar != null) { setSupportActionBar(toolbar); toolbar.setLogo(R.mipmap.ic_launcher); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/9102/buggy-version/Projekt.KitchenAplication.app.src.main.java.com.example.and12edi.kitchenaplication.MainActivity.java", "BodyUseAPI": ["com.example.and12edi.kitchenaplication.MainActivity.setSupportActionBar(android.support.v7.widget.Toolbar)", "android.support.v7.widget.Toolbar.setLogo(R.mipmap.ic_launcher)"], "Fixed commit": "cbbd2d5268d629271391a3fd9768f373b0737f47", "Url": "https://api.github.com/repos/josu1502/miun-java-project", "Date": "2017-03-07T20:05:51Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((isConnected) == true) { java.lang.System.out.println(((localPort) + \": disconnect before connecting\")); }else { java.lang.String[] t = ipRemotePort.split(\":\"); remoteIP = new IPv4(t[0]); remotePort = java.lang.Integer.parseInt(t[1]); this.listenPort = new Listener(datagramSocket); this.listenPort.start(); java.lang.System.out.println((((((localPort) + \" connected to \") + (remoteIP.toString())) + \":\") + (remotePort))); isConnected = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/2559/buggy-version/src.Port.java", "BodyUseAPI": [], "Fixed commit": "9196bfbd2798f95877a6031b09f14aabc6b6c3aa", "Url": "https://api.github.com/repos/WebDevGirl/VMRouter", "Date": "2012-11-06T07:00:32Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isBlank(attributeName)) { localizer.removeLocalizedValue(key, LocalizedObjectTypes.CUSTOM_ATTRIBUTE_NAME, language); }else { localizer.storeLocalizedResource(language, key, LocalizedObjectTypes.CUSTOM_ATTRIBUTE_NAME, attributeName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/7575/buggy-version/oscm-accountmgmt-intsvc.javasrc.org.oscm.accountservice.dataaccess.UdaDefinitionAccess.java", "BodyUseAPI": ["org.oscm.i18nservice.local.LocalizerServiceLocal.storeLocalizedResource(java.lang.String,long,LocalizedObjectTypes.CUSTOM_ATTRIBUTE_NAME,java.lang.String)"], "Fixed commit": "e3319c393383a1a3b9827375a79d368de6044f46", "Url": "https://api.github.com/repos/servicecatalog/development", "Date": "2016-12-21T09:24:00Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<org.alfresco.service.namespace.QName, java.io.Serializable>.get(ContentModel.PROP_EMAIL_FEED_DISABLED)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((emailFeedDisabled == null) && ((this.optIn) == true)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/1621/buggy-version/projects.repository.source.java.org.alfresco.repo.activities.feed.EmailUserNotifier.java", "BodyUseAPI": [], "Fixed commit": "3a5e4b8fb08d58eda0f7d98c473276cab01dbbdf", "Url": "https://api.github.com/repos/loftuxab/alfresco-community-loftux", "Date": "2014-05-25T13:19:22Z"},
{"Line": "=>2323", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((GlobalData.applicationEventLocationRescan.equals(GlobalData.RESCAN_TYPE_RESTART_EVENTS)) || (GlobalData.applicationEventLocationRescan.equals(GlobalData.RESCAN_TYPE_SCREEN_ON_RESTART_EVENTS))) { sk.henrichg.phoneprofilesplus.GeofenceScannerAlarmBroadcastReceiver.setAlarm(context, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/4978/buggy-version/phoneProfilesPlus.src.main.java.sk.henrichg.phoneprofilesplus.DataWrapper.java", "BodyUseAPI": [], "Fixed commit": "a159e82dfae24c6a6e8fa0e3da6d9c0bddc1a8a1", "Url": "https://api.github.com/repos/henrichg/PhoneProfilesPlus", "Date": "2016-03-16T09:39:07Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((element != null) && (!(element.equals(\"\")))) alphaIndexer.put(element.substring(0, 1), i);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/1822/buggy-version/src.uni.projecte.dataLayer.RemoteDBManager.objects.LocalTaxonNoThListAdapter.java", "BodyUseAPI": [], "Fixed commit": "f1027bf48a97e73dbee3538f8957bed159e43f1d", "Url": "https://api.github.com/repos/zamiaDroid/zamiaDroid", "Date": "2012-12-03T12:01:16Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uni.projecte.dataLayer.utils.TaxonUtils.rankPosition(java.lang.String)", "java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((taxonName.indexOf(taxonSplitet[2])) >= ((subEpPos.first) - 1)) { specificEpithetAuthor = \"\"; }else { specificEpithetAuthor = taxonName.substring(taxonName.indexOf(taxonSplitet[2]), ((subEpPos.first) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/1822/buggy-version/src.uni.projecte.dataLayer.utils.TaxonUtils.java", "BodyUseAPI": ["java.lang.String.substring(int,((subEpPos.first) - 1))", "java.lang.String.indexOf(java.lang.String)"], "Fixed commit": "f1027bf48a97e73dbee3538f8957bed159e43f1d", "Url": "https://api.github.com/repos/zamiaDroid/zamiaDroid", "Date": "2012-12-03T12:01:16Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (taxonName != null) taxonName = taxonName.trim();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/1822/buggy-version/src.uni.projecte.dataLayer.utils.TaxonUtils.java", "BodyUseAPI": ["java.lang.String.trim()"], "Fixed commit": "f1027bf48a97e73dbee3538f8957bed159e43f1d", "Url": "https://api.github.com/repos/zamiaDroid/zamiaDroid", "Date": "2012-12-03T12:01:16Z"},
{"Line": "=>1138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (sort.getText(2).startsWith(\"[WFE]\")) { if (!(sorts.contains(sort.getText(2)))) sorts.add(sort.getText(2)); }else { if (!(sorts.contains(sort.getText(0)))) sorts.add(sort.getText(0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/3415/buggy-version/src.org.nschmidt.ldparteditor.composites.compositetab.CompositeTab.java", "BodyUseAPI": ["org.nschmidt.ldparteditor.widgets.TreeItem.getText(int)", "java.util.HashSet<java.lang.String>.contains(sort.getText(2))", "java.util.HashSet<java.lang.String>.contains(sort.getText(0))", "java.util.HashSet<java.lang.String>.add(sort.getText(0))", "java.util.HashSet<java.lang.String>.add(sort.getText(2))", "org.nschmidt.ldparteditor.widgets.TreeItem.getText(int)", "org.nschmidt.ldparteditor.widgets.TreeItem.getText(int)", "org.nschmidt.ldparteditor.widgets.TreeItem.getText(int)"], "Fixed commit": "d7c8187b6b8a59ddc62a292041d7dbc1485caf13", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2016-07-30T07:05:32Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(dir.exists())) { boolean result = dir.mkdir(); if (!result) { com.gpjpe.bolts.HashtagCountBolt.LOGGER.error((\"Couldn't create directory: \" + (outputFolder))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/5425/buggy-version/src.main.java.com.gpjpe.bolts.HashtagCountBolt.java", "BodyUseAPI": ["java.io.File.mkdir()"], "Fixed commit": "965f77e0a306275971ab6d415ea03a8cbf0a4211", "Url": "https://api.github.com/repos/ph1l337/TwitterTrendsStorm", "Date": "2015-12-13T13:00:21Z"},
{"Line": "=>503", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.ref.WeakReference<android.support.v4.app.Fragment>.get()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((f instanceof net.osmand.plus.dashboard.DashFavoritesFragment) && (!(f.isDetached()))) { ((net.osmand.plus.dashboard.DashFavoritesFragment) (f)).updateLocation(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/4873/buggy-version/OsmAnd.src.net.osmand.plus.activities.MainMenuActivity.java", "BodyUseAPI": [], "Fixed commit": "a6a052b0737e679cb32a26ebfae02c63b155ea2f", "Url": "https://api.github.com/repos/osmandapp/Osmand", "Date": "2015-01-04T07:58:30Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((findKeyword(statement, \"can\")) != (-1)) { response = \"Can I? Of course I can!\"; }else { response = genericResponse(statement); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/3479/buggy-version/src.chatbots.ChatBotFeng.java", "BodyUseAPI": ["chatbots.ChatBotFeng.genericResponse(java.lang.String)"], "Fixed commit": "fa1728d1bde175232d35e2cc605839b170d29047", "Url": "https://api.github.com/repos/afeng5853/College-Chatbot", "Date": "2017-10-10T01:46:23Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (userRequestsLocation(statement)) { brain.addToMemory(\"action\", \"where is\"); response = getLocationResponse(statement, colleges); }else if (userQueriesCollege(statement, colleges)) { brain.addToMemory(\"action\", \"how is\"); response = getOpinion(statement, colleges); }else if ((((findKeyword(statement, \"about\")) != (-1)) && ((brain.getMemory(\"action\").size()) > 0)) && ((grammar.SentenceParser.getWords(statement).size()) <= (3 + (colleges.get(0).length())))) { statement = ((brain.getLastMemory(\"action\")) + \" \") + statement; return parseWhatHowQuestion(statement, colleges); }else { java.lang.System.out.println(\"Sorry, I didn't understand.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/3479/buggy-version/src.chatbots.ChatBotFeng.java", "BodyUseAPI": ["chatbots.ChatBotFeng.getOpinion(java.lang.String,java.util.ArrayList<java.lang.String>)", "chatbots.ChatBotFeng.getLocationResponse(java.lang.String,java.util.ArrayList<java.lang.String>)", "grammar.SentenceParser.getWords(statement).size()", "chatbots.ChatBotFeng.userQueriesCollege(java.lang.String,java.util.ArrayList<java.lang.String>)", "chatbots.ChatBotFeng.findKeyword(java.lang.String,java.lang.String)", "grammar.SentenceParser.getWords(java.lang.String)"], "Fixed commit": "fa1728d1bde175232d35e2cc605839b170d29047", "Url": "https://api.github.com/repos/afeng5853/College-Chatbot", "Date": "2017-10-10T01:46:23Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((queue.size()) != 0) { java.lang.System.out.println(queue.size()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/821/buggy-version/Chat.src.Communications.TCP.java", "BodyUseAPI": ["java.io.PrintStream.println(int)", "java.util.concurrent.ConcurrentLinkedQueue<java.lang.Byte>.size()"], "Fixed commit": "6c579529b4484e768d9f621e7909b1705bcc7bf7", "Url": "https://api.github.com/repos/ragnarok089/CS544", "Date": "2013-06-07T18:08:33Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.epam.tasks.task06.tree.elements.Leaf.getParent()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (parentOfTarget == null) { setRoot(transformedTarget); }else { java.util.List<com.epam.tasks.task06.tree.elements.Vertex> targetLevelList = ((com.epam.tasks.task06.tree.elements.Branch) (parentOfTarget)).getDescendants(); int targetIndex = targetLevelList.indexOf(targetVertex); targetLevelList.set(targetIndex, transformedTarget); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/1231/buggy-version/src.main.java.com.epam.tasks.task06.tree.Tree.java", "BodyUseAPI": [], "Fixed commit": "cc64a60a5974db18b0a0942123ae0d03e47bfc47", "Url": "https://api.github.com/repos/komarov884/epam_tasks", "Date": "2017-11-05T20:13:29Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (e.getText().toString().isEmpty()) { dialog.cancel(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/5636/buggy-version/frc-notebook.src.main.java.com.plnyyanks.frcnotebook.activities.AddNoteDialog.java", "BodyUseAPI": [], "Fixed commit": "6745811f4f497e880b7511a07e9f733ca9ae1f47", "Url": "https://api.github.com/repos/plnyyanks/frc-notebook", "Date": "2014-03-14T19:54:36Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang.StringUtils.startsWithIgnoreCase(query, \"with\")) { resultQuery = (com.hangum.tadpole.engine.sql.template.OracleDMLTemplate.TMP_EXPLAIN_EXTENDED) + query; }else { resultQuery = (((com.hangum.tadpole.engine.sql.template.OracleDMLTemplate.TMP_EXPLAIN_EXTENDED) + \"( \") + query) + \")\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/5316/buggy-version/com.hangum.tadpole.commons.sql.src.com.hangum.tadpole.engine.sql.util.PartQueryUtil.java", "BodyUseAPI": [], "Fixed commit": "84a9222d2e2d734e99be70c05709f6e8e0f83c9f", "Url": "https://api.github.com/repos/jeongjaehong/TadpoleForDBTools", "Date": "2016-06-21T15:42:01Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((initialEditValues) != null) { latestEditValues = fetchEditedValues(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/7592/buggy-version/AppConfigLib.src.main.java.com.crescentflare.appconfig.activity.ManageAppConfigActivity.java", "BodyUseAPI": [], "Fixed commit": "f5d4c364fbd6ee372edf8d63cc2615af20e261f7", "Url": "https://api.github.com/repos/crescentflare/DynamicAppConfigAndroid", "Date": "2017-11-19T21:11:35Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (visibility == (android.view.View.VISIBLE)) { visible++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/4983/buggy-version/android.src.com.frostwire.android.gui.views.KeywordFilterDrawerView.java", "BodyUseAPI": [], "Fixed commit": "916305c7793bbd33078cb6f6d83d41473ad52d5a", "Url": "https://api.github.com/repos/frostwire/frostwire", "Date": "2017-07-12T06:44:10Z"},
{"Line": "=>366", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (de.thetaphi.forbiddenapis.ClassScanner.CONSTRUCTOR_METHOD_NAME.equals(method.getName())) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/923/buggy-version/src.main.java.de.thetaphi.forbiddenapis.ClassScanner.java", "BodyUseAPI": [], "Fixed commit": "2a5791279c7a9c927b37b03c554edc767eaf7880", "Url": "https://api.github.com/repos/policeman-tools/forbidden-apis", "Date": "2016-05-22T17:58:52Z"},
{"Line": "=>345", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (de.thetaphi.forbiddenapis.ClassScanner.CLASS_CONSTRUCTOR_METHOD_NAME.equals(method.getName())) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/923/buggy-version/src.main.java.de.thetaphi.forbiddenapis.ClassScanner.java", "BodyUseAPI": [], "Fixed commit": "2a5791279c7a9c927b37b03c554edc767eaf7880", "Url": "https://api.github.com/repos/policeman-tools/forbidden-apis", "Date": "2016-05-22T17:58:52Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.gaeproxy.GAEProxyService.isServiceStarted()) { settings.edit().putBoolean(\"packageChanged\", true).commit(); }else { java.util.Set<java.lang.Integer> appSet = org.gaeproxy.db.App.getProxiedApps(this); org.gaeproxy.db.App.updateApps(this, appSet); settings.edit().putBoolean(\"packageChanged\", false).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/165/buggy-version/src.org.gaeproxy.GAEProxyUpdateService.java", "BodyUseAPI": [], "Fixed commit": "73d436bf7b5c238c30704e4686cf718e720db35d", "Url": "https://api.github.com/repos/madeye/gaeproxy", "Date": "2013-05-12T05:47:15Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!((nl.detoren.ijc.ui.control.IJCController.getI().getWedstrijden().getGroepswedstrijdenNiveau(i)) == null)) { if (nl.detoren.ijc.ui.control.IJCController.getI().getWedstrijden().getGroepswedstrijdenNiveau(i).isUitslagBekend()) { tabs.setTitleAt(i, ((nl.detoren.ijc.data.groepen.Groep.geefNaam(i)) + \"*\")); }else { tabs.setTitleAt(i, nl.detoren.ijc.data.groepen.Groep.geefNaam(i)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/4297/buggy-version/IJC_UI.src.nl.detoren.ijc.ui.view.Hoofdscherm.java", "BodyUseAPI": ["nl.detoren.ijc.ui.control.IJCController.getI().getWedstrijden().getGroepswedstrijdenNiveau(int)", "nl.detoren.ijc.data.groepen.Groep.geefNaam(int)", "javax.swing.JTabbedPane.setTitleAt(int,nl.detoren.ijc.data.groepen.Groep.geefNaam(i))", "nl.detoren.ijc.ui.control.IJCController.getI().getWedstrijden().getGroepswedstrijdenNiveau(i).isUitslagBekend()", "javax.swing.JTabbedPane.setTitleAt(int,((nl.detoren.ijc.data.groepen.Groep.geefNaam(i)) + \"*\"))", "nl.detoren.ijc.data.groepen.Groep.geefNaam(int)"], "Fixed commit": "811aed44cb6dee5249cf1322b74d7c1d1388577a", "Url": "https://api.github.com/repos/lmeulen/IJC_UI", "Date": "2016-11-21T12:31:06Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(containsMovie(movie))) { appendMovie(movie); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/4013/buggy-version/app.src.main.java.com.example.android.popularmovies.overview.MovieOverviewCursorAdapter.java", "BodyUseAPI": ["com.example.android.popularmovies.overview.MovieOverviewCursorAdapter.1.appendMovie(com.example.android.popularmovies.model.Movie)"], "Fixed commit": "ddd48ea09a2c3d37520f524a78fb7710aa9014f3", "Url": "https://api.github.com/repos/tobixdev/PopularMovies", "Date": "2017-02-16T19:03:37Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(o instanceof com.epam.dlab.dto.exploratory.LibInstallDTO)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/6394/buggy-version/services.common.src.main.java.com.epam.dlab.dto.exploratory.LibInstallDTO.java", "BodyUseAPI": [], "Fixed commit": "aa4d576caf26305562bc28b17d6f3a32cd109777", "Url": "https://api.github.com/repos/epam/DLab", "Date": "2017-10-18T16:10:12Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Object.getClass()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (clazz.isArray()) { if (propertyName.equals(\"length\")) { return ((java.lang.Object[]) (obj)).length; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/8304/buggy-version/src.main.org.soya.runtime.InvokeUtil.java", "BodyUseAPI": [], "Fixed commit": "22d59fa2951c5e1229c13af93ba0fc568c810adb", "Url": "https://api.github.com/repos/mySingleLive/soya", "Date": "2015-02-27T02:57:24Z"},
{"Line": "=>683", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((obj.getClass().isArray()) && ((args.length) >= 1)) { return java.lang.reflect.Array.get(obj, ((org.soya.runtime.Int) (args[0])).getValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/8304/buggy-version/src.main.org.soya.runtime.SoyaShell.java", "BodyUseAPI": ["java.lang.Object.getValue()", "java.lang.reflect.Array.get(java.lang.Object,((org.soya.runtime.Int) (args[0])).getValue())"], "Fixed commit": "22d59fa2951c5e1229c13af93ba0fc568c810adb", "Url": "https://api.github.com/repos/mySingleLive/soya", "Date": "2015-02-27T02:57:24Z"},
{"Line": "=>680", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (obj == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/8304/buggy-version/src.main.org.soya.runtime.SoyaShell.java", "BodyUseAPI": [], "Fixed commit": "22d59fa2951c5e1229c13af93ba0fc568c810adb", "Url": "https://api.github.com/repos/mySingleLive/soya", "Date": "2015-02-27T02:57:24Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.jena.riot.RDFLanguages.contentTypeToLang(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (lang == null) { lang = defaultLang; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/3271/buggy-version/solrdf.src.main.java.org.gazzax.labs.solrdf.response.SPARQLResponseWriter.java", "BodyUseAPI": [], "Fixed commit": "d341bb0b404b44b871fb6467c0b1746a0d87a18b", "Url": "https://api.github.com/repos/agazzarini/SolRDF", "Date": "2014-12-14T18:40:06Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((var8 != 0) || ((var11.particleTextureIndexY) != 8)) || ((((xdiff * xdiff) + (ydiff * ydiff)) + (zdiff * zdiff)) >= 2.0)) var11.renderParticle(var9, par2, var3, var7, var4, var5, var6);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/1135/buggy-version/net.minecraft.src.EffectRenderer.java", "BodyUseAPI": ["net.minecraft.src.EntityFX.renderParticle(net.minecraft.src.Tessellator,float,float,float,float,float,float)"], "Fixed commit": "2747e85e7bf6212b3ac8df4c4b81a257605c655a", "Url": "https://api.github.com/repos/rmct/AutoReferee-client", "Date": "2013-04-05T16:15:53Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!validationFailed) { com.example.riis.logindemo.model.task.UserLoginTask loginTask = new com.example.riis.logindemo.model.task.UserLoginTask(email, password); loginTask.setLoginActivityListener(activity); loginTask.execute(((java.lang.Void) (null))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/8518/buggy-version/LoginExample.app.src.main.java.com.example.riis.logindemo.model.LoginModel.java", "BodyUseAPI": [], "Fixed commit": "b81b0298bc60bdaa4643ee805ce4087bd1ef7fa6", "Url": "https://api.github.com/repos/scouseusa/OneDevDayDemo2014", "Date": "2014-11-15T16:30:21Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((game) == null) { ((com.sam.hex.MainActivity) (getActivity())).returnHome(); initializeNewGame(); }else { game.setGameListener(createGameListener()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/4206/buggy-version/src.com.sam.hex.fragment.GameFragment.java", "BodyUseAPI": [], "Fixed commit": "e8830531ed3a1230bf470ee48f40d4377a3ee0b8", "Url": "https://api.github.com/repos/Xlythe/HexGame_Android", "Date": "2014-09-13T01:50:13Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (block != null) for (java.lang.Object o : block.statements()) this._statements.add(new edu.rice.cs.caper.bayou.application.dom_driver.DOMStatement(((org.eclipse.jdt.core.dom.Statement) (o))).handleAML());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/6525/buggy-version/src.main.java.edu.rice.cs.caper.bayou.application.dom_driver.DOMBlock.java", "BodyUseAPI": [], "Fixed commit": "88a2063094044095ecaaca8fde2efc18668694b5", "Url": "https://api.github.com/repos/capergroup/bayou", "Date": "2017-10-17T22:59:45Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ru.android.ainege.shoppinglist.ui.fragments.settings.CurrencyFragment.CurrencyAdapter.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((c.getId()) == (mIdSelected)) { saveCurrencySetting((-1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/1798/buggy-version/app.src.main.java.ru.android.ainege.shoppinglist.ui.fragments.settings.CurrencyFragment.java", "BodyUseAPI": [], "Fixed commit": "e491959446b4cf1fa54524fd8a9ef70561c7c102", "Url": "https://api.github.com/repos/Ainege/ShoppingList", "Date": "2016-04-04T10:17:16Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(java.nio.file.Files.isReadable(resourcePath))) { throw new org.wso2.carbon.uuf.exception.ResourceNotFoundException(((\"Static resource file '\" + resourcePath) + \"' is not readable.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/6866/buggy-version/uuf-core.src.main.java.org.wso2.carbon.uuf.internal.io.StaticResolver.java", "BodyUseAPI": [], "Fixed commit": "cea05af1882550094525481ee27046f80ab4adf9", "Url": "https://api.github.com/repos/wso2-attic/carbon-uuf", "Date": "2016-07-21T14:14:39Z"},
{"Line": "=>334", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((main) != null) { main.getRootTable().produceAtlas(); main.getRootTable().populate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/2436/buggy-version/core.src.com.ray3k.skincomposer.data.ProjectData.java", "BodyUseAPI": [], "Fixed commit": "26e44625acb0e4c131a7cbc401c4e3fff82a6f35", "Url": "https://api.github.com/repos/raeleus/skin-composer", "Date": "2017-02-19T17:33:54Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((delegate) == null) { if (OClass.INDEX_TYPE.SPATIAL.name().equalsIgnoreCase(indexType)) { if ((indexDefinition.getFields().size()) > 1) { delegate = new com.orientechnologies.lucene.engine.OLuceneLegacySpatialIndexEngine(indexName, com.orientechnologies.orient.spatial.shape.OShapeFactory.INSTANCE); }else { delegate = new com.orientechnologies.lucene.engine.OLuceneGeoSpatialIndexEngine(indexName, com.orientechnologies.orient.spatial.shape.OShapeFactory.INSTANCE); } }else if (OClass.INDEX_TYPE.FULLTEXT.name().equalsIgnoreCase(indexType)) { delegate = new com.orientechnologies.lucene.engine.OLuceneFullTextIndexEngine(indexName, new com.orientechnologies.lucene.builder.ODocBuilder(), new com.orientechnologies.lucene.builder.OQueryBuilderImpl()); } delegate.initIndex(indexName, indexType, indexDefinition, isAutomatic, metadata); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/2105/buggy-version/lucene.src.main.java.com.orientechnologies.lucene.engine.OLuceneIndexEngineDelegate.java", "BodyUseAPI": [], "Fixed commit": "83f5319ab55e0efb2495a153005de89611a3893a", "Url": "https://api.github.com/repos/mcculls/orientdb", "Date": "2015-11-06T06:00:47Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.processes) == null) { this.processes = processes; }else { this.processes.clear(); this.processes.addAll(processes); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/5876/buggy-version/Kitodo-DataManagement.src.main.java.org.kitodo.data.database.beans.Batch.java", "BodyUseAPI": [], "Fixed commit": "e2a545355b0102ba2b4be36c8889d2385d547afb", "Url": "https://api.github.com/repos/Beacze/kitodo-production", "Date": "2017-05-11T09:27:14Z"},
{"Line": "=>347", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.batches) == null) { this.batches = batches; }else { this.batches.clear(); this.batches.addAll(batches); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/5876/buggy-version/Kitodo-DataManagement.src.main.java.org.kitodo.data.database.beans.Process.java", "BodyUseAPI": [], "Fixed commit": "e2a545355b0102ba2b4be36c8889d2385d547afb", "Url": "https://api.github.com/repos/Beacze/kitodo-production", "Date": "2017-05-11T09:27:14Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (obj != null) { buf.append(org.structr.core.script.Scripting.formatToDefaultDateOrString(obj)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/7411/buggy-version/structr-core.src.main.java.org.structr.core.function.LogFunction.java", "BodyUseAPI": ["org.structr.core.script.Scripting.formatToDefaultDateOrString(java.lang.Object)", "java.lang.StringBuilder.append(org.structr.core.script.Scripting.formatToDefaultDateOrString(obj))"], "Fixed commit": "95ee927a06e28c37e5979976230faab9b816d8ec", "Url": "https://api.github.com/repos/ckramp/structr", "Date": "2017-03-27T12:07:25Z"},
{"Line": "=>388", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(\"1.8.17\".equals(version))) { scripts.add(iwb.getVirtualPathWithFileNameString(\"javascript/datepicker.js\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/6363/buggy-version/src.java.com.idega.presentation.ui.IWDatePicker.java", "BodyUseAPI": [], "Fixed commit": "f6e43a2522cc64df503355d46ed2ad29132babb9", "Url": "https://api.github.com/repos/idega/com.idega.core", "Date": "2014-06-18T13:07:17Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.idega.presentation.ui.IWDatePicker.getVersion()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.idega.util.StringUtil.isEmpty(version)) { version = com.idega.block.web2.business.Web2Business.JQUERY_UI_LATEST_VERSION; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/6363/buggy-version/src.java.com.idega.presentation.ui.IWDatePicker.java", "BodyUseAPI": [], "Fixed commit": "f6e43a2522cc64df503355d46ed2ad29132babb9", "Url": "https://api.github.com/repos/idega/com.idega.core", "Date": "2014-06-18T13:07:17Z"},
{"Line": "=>866", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currentCourse.getCourseName().equals(course.getCourseName())) { if ((this.sortChoiceBox.getSelectedIndex()) == 0) { sortNotes(); }else { this.sortChoiceBox.setSelectedIndex(0); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/1402/buggy-version/src.NewGUI.MainWinInstr.java", "BodyUseAPI": [], "Fixed commit": "6aa660fb51cc10f00d038b9d6231d58b9af58c76", "Url": "https://api.github.com/repos/CS201-FinalProject-Notezza/Notezza", "Date": "2017-11-21T04:46:40Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.smi.travel.datalayer.service.LoginService.getSystemUser(com.smi.travel.datalayer.entity.SystemUser)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((UserAuthen.getMDepartment()) == null) { request.setAttribute(\"ResultLogin\", \"Department is null.Please contact admin.\"); com.smi.travel.controller.LoginController.log.info(\"Login fail!!\"); return com.smi.travel.controller.LoginController.LOG_IN; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/4284/buggy-version/src.java.com.smi.travel.controller.LoginController.java", "BodyUseAPI": [], "Fixed commit": "b0bd5ba7d8d0d68a1f01b2dfaebe6dcd72c937ca", "Url": "https://api.github.com/repos/iCONEXT/SMI_Travel", "Date": "2015-11-16T10:39:41Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["meshRoot.getVertices(Direction.OUT, \"HAS_JOB_ROOT\").iterator()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (it.hasNext()) { com.tinkerpop.blueprints.Vertex jobRoot = meshRoot.getVertices(Direction.OUT, \"HAS_JOB_ROOT\").iterator().next(); java.lang.Iterable<com.tinkerpop.blueprints.Vertex> jobIt = jobRoot.getVertices(com.gentics.mesh.changelog.changes.OUT, \"HAS_JOB\"); for (com.tinkerpop.blueprints.Vertex v : jobIt) { v.remove(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/2247/buggy-version/changelog-system.src.main.java.com.gentics.mesh.changelog.changes.PurgeOldJobs.java", "BodyUseAPI": [], "Fixed commit": "e12843d8e4f09213607e6d2e4d537654fc7173e4", "Url": "https://api.github.com/repos/gentics/mesh", "Date": "2017-10-09T11:22:57Z"},
{"Line": "=>676", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.tinkerpop.blueprints.impls.orient.OrientGraphNoTx.getVertexType(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (type != null) { noTx.dropVertexType(typeName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/2247/buggy-version/databases.orientdb.src.main.java.com.gentics.mesh.graphdb.OrientDBDatabase.java", "BodyUseAPI": [], "Fixed commit": "e12843d8e4f09213607e6d2e4d537654fc7173e4", "Url": "https://api.github.com/repos/gentics/mesh", "Date": "2017-10-09T11:22:57Z"},
{"Line": "=>334", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["columns.get(iCol).getModelColumn()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(column instanceof org.drools.ide.common.client.modeldriven.dt52.AnalysisCol52)) { org.drools.ide.common.client.modeldriven.dt52.DTCellValue52 dcv = cellValueFactory.convertToDTModelCell(column, cv); dcv.setOtherwise(cv.isOtherwise()); row.add(dcv); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/1990/buggy-version/guvnor-webapp.src.main.java.org.drools.guvnor.client.decisiontable.widget.AbstractDecisionTableWidget.java", "BodyUseAPI": ["org.drools.guvnor.client.decisiontable.widget.DecisionTableCellValueFactory.convertToDTModelCell(org.drools.ide.common.client.modeldriven.dt52.DTColumnConfig52,org.drools.guvnor.client.widgets.decoratedgrid.CellValue<?>)"], "Fixed commit": "1c8262caf328b8470d50da14534641e8bc2a9b0c", "Url": "https://api.github.com/repos/gwendo/guvnor", "Date": "2011-10-12T08:46:59Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (preserveContextInfo) { }else { deleteContextInfo(contextInfo); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/511/buggy-version/backend.src.main.java.cz.cuni.mff.xrg.odcs.backend.context.ContextDeleter.java", "BodyUseAPI": [], "Fixed commit": "aefc20794c1dae86af7d0e8875e553a5da9e6035", "Url": "https://api.github.com/repos/mff-uk/ODCS", "Date": "2013-11-20T14:46:29Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (charset.toUpperCase().equals(\"GB2312\")) { charset = \"GBK\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/3231/buggy-version/src.main.java.com.seveniu.spider.MyHttpDownload.java", "BodyUseAPI": [], "Fixed commit": "98a8272532294dc39719cb1e75b8ea45072e6fc5", "Url": "https://api.github.com/repos/seveniu/OneCrawl", "Date": "2016-10-31T16:25:39Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((playerOne.getTotalScore()) < (playerTwo.getTotalScore())) { java.lang.System.out.println(((\"Player Two won with \" + (playerTwo.getTotalScore())) + \" points\")); }else { java.lang.System.out.println((\"A tie! Both players had \" + (playerOne.getTotalScore()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/5374/buggy-version/src.Game.Game.java", "BodyUseAPI": ["Player.getTotalScore()", "java.io.PrintStream.println(((\"Player Two won with \" + (playerTwo.getTotalScore())) + \" points\"))", "Player.getTotalScore()", "java.io.PrintStream.println((\"A tie! Both players had \" + (playerOne.getTotalScore())))"], "Fixed commit": "fff90d92822c69b66d05d3c55a3a7b3d53f35b15", "Url": "https://api.github.com/repos/sindrikaldal/ScrabbleAI", "Date": "2016-04-06T12:56:44Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.keyboard) != null) { this.keyboard.removeListener(this); this.keyboard = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/4164/buggy-version/src.de.teamteamteam.spacescooter.entity.Player.java", "BodyUseAPI": [], "Fixed commit": "c716bc218738f56b537d1346bda83f4fa67e9e2b", "Url": "https://api.github.com/repos/teamteamteam/SpaceScooter", "Date": "2014-11-04T19:23:52Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.oncore.common.controller.BaseController.loadUserFromSecurityContext(com.oncore.common.controller.BaseController)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((user != null) && ((user.getId().equals(userId)) || (user.getEmailAddress().equals(userId.toLowerCase())))) { return user; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/8178/buggy-version/common.src.main.java.com.oncore.common.controller.BaseController.java", "BodyUseAPI": [], "Fixed commit": "63e6fbb93b10f5aeef8d51938b35e71baad6e61c", "Url": "https://api.github.com/repos/SteveZhangF/admin", "Date": "2016-07-12T19:29:59Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (column == 5) return mapCount.get(e);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/5335/buggy-version/src.org.magic.gui.models.MagicEditionsTableModel.java", "BodyUseAPI": [], "Fixed commit": "180d56dcc0ba060bd359ae695366edf837403f69", "Url": "https://api.github.com/repos/nicho92/MtgDesktopCompanion", "Date": "2016-01-05T20:37:40Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(staticFetchers.containsKey(entry.getKey()))) { staticFetchers.put(entry.getKey(), new java.util.ArrayList<>(entry.getValue())); }else { staticFetchers.get(entry.getKey()).addAll(new java.util.ArrayList<>(entry.getValue())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/4885/buggy-version/grails-datastore-core.src.main.groovy.org.grails.datastore.mapping.reflect.ClassPropertyFetcher.java", "BodyUseAPI": ["java.util.Map.Entry<java.lang.String, java.util.List<org.grails.datastore.mapping.reflect.ClassPropertyFetcher.PropertyFetcher>>.getKey()", "java.util.Map.Entry<java.lang.String, java.util.List<org.grails.datastore.mapping.reflect.ClassPropertyFetcher.PropertyFetcher>>.getKey()", "java.util.Map.Entry<java.lang.String, java.util.List<org.grails.datastore.mapping.reflect.ClassPropertyFetcher.PropertyFetcher>>.getValue()", "java.util.Map.Entry<java.lang.String, java.util.List<org.grails.datastore.mapping.reflect.ClassPropertyFetcher.PropertyFetcher>>.getValue()", "java.util.Map<java.lang.String, java.util.List<org.grails.datastore.mapping.reflect.ClassPropertyFetcher.PropertyFetcher>>.get(java.lang.String)", "java.util.List<org.grails.datastore.mapping.reflect.ClassPropertyFetcher.PropertyFetcher>.addAll(java.util.ArrayList<>)", "java.util.Map<java.lang.String, java.util.List<org.grails.datastore.mapping.reflect.ClassPropertyFetcher.PropertyFetcher>>.put(java.lang.String,java.util.ArrayList<>)"], "Fixed commit": "7ce82ffa94a5b8b0e2aa4bb12f1acacec2e1e993", "Url": "https://api.github.com/repos/hakanernam/grails-data-mapping", "Date": "2017-02-07T02:28:36Z"},
{"Line": "=>575", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.simperium.client.Bucket.ObjectCursor<com.automattic.simplenote.models.Note>.getInt(mCursor.getColumnIndex(Note.COLOR_PROPERTY))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (color != (android.graphics.Color.WHITE)) holder.colorView.setVisibility(View.VISIBLE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/5561/buggy-version/Simplenote.src.main.java.com.automattic.simplenote.NoteListFragment.java", "BodyUseAPI": [], "Fixed commit": "1b722bf710955abdca0a29dc6b58ca7cf7a1ff81", "Url": "https://api.github.com/repos/Asmadek/simplenote-android", "Date": "2016-10-15T23:48:09Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fr.clementduployez.aurionexplorer.Utils.Settings.LITE) { item.setVisible(false); }else { item.setChecked(fr.clementduployez.aurionexplorer.Utils.UserData.isRefreshGradesService()); startGradesUpdaterService(item.isChecked()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/6370/buggy-version/app.src.main.java.fr.clementduployez.aurionexplorer.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "fb4dea55356cfe66f92ebbc800250e1abaedee78", "Url": "https://api.github.com/repos/Patapizza05/AurionExplorer", "Date": "2016-09-20T09:09:39Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["scal.io.liger.model.GenericCard.getHeader()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((txtHeader != null) && (!(txtHeader.isEmpty()))) { tvHeader.setText(txtHeader); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/4074/buggy-version/lib.src.main.java.scal.io.liger.view.GenericCardView.java", "BodyUseAPI": ["android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "19a8e241e89666de6c17cb7679f996cdf6a370da", "Url": "https://api.github.com/repos/scalio/liger-prototype", "Date": "2014-10-27T06:33:09Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (x != ((items.size()) - 1)) { fw.println((toPrint + \",\")); }else { fw.println(toPrint); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/1111/buggy-version/code.mergeToOne.java", "BodyUseAPI": [], "Fixed commit": "d2cde83b5dd2b43b7e7cc9c26c501995f7962fd6", "Url": "https://api.github.com/repos/ChenWangCarleton/234Broject", "Date": "2017-10-21T16:20:01Z"},
{"Line": "=>450", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (modulePublishState == (-1)) { modulePublishState = org.eclipse.wst.server.core.IServer.PUBLISH_STATE_UNKNOWN; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/6603/buggy-version/eclipse.server.plugins.com.liferay.ide.eclipse.server.core.src.com.liferay.ide.eclipse.server.remote.RemoteServerBehavior.java", "BodyUseAPI": [], "Fixed commit": "cdce850a50a8b8ecdab61535de2c2725deb660f8", "Url": "https://api.github.com/repos/liferay/liferay-ide", "Date": "2011-10-17T09:19:03Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<de.topobyte.livecg.geometry.geom.Chain>.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (n == 1) { return java.lang.String.format(\"Member of %d chain\", n); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/8415/buggy-version/project.src.de.topobyte.livecg.geometry.ui.geometryeditor.object.single.NodePanel.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,int)"], "Fixed commit": "29698a7988b3bcdf53df91c03ec004c7fc96afa0", "Url": "https://api.github.com/repos/sebkur/live-cg", "Date": "2013-09-27T12:56:25Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (s.hasPermission(\"eden.eco.check\")) { int funds = plugin.getConfig().getInt(((\"players.\" + name) + \".funds\")); s.sendMessage((((((((OldEdenCore.serverHead) + \"You have \") + (org.bukkit.ChatColor.BLUE)) + funds) + \" Bits\") + (org.bukkit.ChatColor.RESET)) + \".\")); return true; }else { s.sendMessage((((OldEdenCore.head) + (org.bukkit.ChatColor.RED)) + \"You don't have permission to do that!\")); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/225/buggy-version/src.net.mayateck.OldEdenCore.EconomyHandler.java", "BodyUseAPI": ["org.bukkit.command.CommandSender.sendMessage((((((((OldEdenCore.serverHead) + \"You have \") + (org.bukkit.ChatColor.BLUE)) + funds) + \" Bits\") + (org.bukkit.ChatColor.RESET)) + \".\"))", "org.bukkit.command.CommandSender.sendMessage((((OldEdenCore.head) + (org.bukkit.ChatColor.RED)) + \"You don't have permission to do that!\"))"], "Fixed commit": "72ddfc85f1cc27b113a719119b896ee28f3d7db8", "Url": "https://api.github.com/repos/Wehttam664/OldEdenPlugin_Core", "Date": "2013-08-10T19:32:13Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((category != null) && (!(category.isEmpty()))) { this.category = category; }else { throw new exception.EventException(model.Event.CATEGORY_IS_INVALID); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/1792/buggy-version/app.src.main.java.model.Event.java", "BodyUseAPI": [], "Fixed commit": "6b198455bd18c62d4453dcc2c8563e00bc2d8122", "Url": "https://api.github.com/repos/italopaiva/EuVou", "Date": "2015-10-24T01:14:42Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(event.getMessage().getGuild().getRolesForUser(event.getClient().getOurUser()).contains(\"MANAGE_ROLES\"))) return interaction.getRandomTemplate(\"noroleperm\").getTemplate();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/5068/buggy-version/src.org.frostbite.karren.interactions.Tags.RoleRoll.java", "BodyUseAPI": [], "Fixed commit": "52dc11fa09d092c1bb6cd449d1cb9422dfd0f057", "Url": "https://api.github.com/repos/ripxfrostbite/karren-sama", "Date": "2017-06-28T04:51:25Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(view.isFocusableInTouchMode())) { view.setFocusableInTouchMode(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/4977/buggy-version/selendroid-server.src.main.java.org.openqa.selendroid.server.model.AndroidNativeElement.java", "BodyUseAPI": ["android.view.View.setFocusableInTouchMode(boolean)"], "Fixed commit": "a1e515aab11599193a1a8a9fd884a61bb52c75cc", "Url": "https://api.github.com/repos/DominikDary/selendroid", "Date": "2013-03-27T08:49:46Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(view.isFocusable())) { view.setFocusable(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/4977/buggy-version/selendroid-server.src.main.java.org.openqa.selendroid.server.model.AndroidNativeElement.java", "BodyUseAPI": ["android.view.View.setFocusable(boolean)"], "Fixed commit": "a1e515aab11599193a1a8a9fd884a61bb52c75cc", "Url": "https://api.github.com/repos/DominikDary/selendroid", "Date": "2013-03-27T08:49:46Z"},
{"Line": "=>1378", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((com.paymium.instawallet.wallet.WalletsActivity.viewAnimator.getCurrentView().getId()) == (R.id.flip2)) { com.paymium.instawallet.flip.AnimationFactory.flipTransition(com.paymium.instawallet.wallet.WalletsActivity.viewAnimator, FlipDirection.LEFT_RIGHT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/4396/buggy-version/src.com.paymium.instawallet.wallet.WalletsActivity.java", "BodyUseAPI": ["com.paymium.instawallet.flip.AnimationFactory.flipTransition(android.widget.ViewAnimator,FlipDirection.LEFT_RIGHT)"], "Fixed commit": "a65ff72616633dfb37046455a196b9dd7330e3eb", "Url": "https://api.github.com/repos/Paymium/Instawallet-Android", "Date": "2012-05-09T09:53:27Z"},
{"Line": "=>330", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (appendToGalleryUrl.contains(net.dahanne.gallery3.client.business.G3Client.INDEX_PHP_REST)) { this.isUsingRewrittenUrls = true; responseEntity = requestToResponseEntity(appendToGalleryUrl, nameValuePairs, requestMethod, file); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/1806/buggy-version/g3-java-client.src.main.java.net.dahanne.gallery3.client.business.G3Client.java", "BodyUseAPI": ["net.dahanne.gallery3.client.business.G3Client.requestToResponseEntity(java.lang.String,java.util.List<org.apache.http.NameValuePair>,java.lang.String,java.io.File)"], "Fixed commit": "d9a61e4d9a635b4e4a13aaf86acd8b95b34987a9", "Url": "https://api.github.com/repos/anthonydahanne/ReGalAndroid", "Date": "2011-04-23T22:41:28Z"},
{"Line": "=>930", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mState) == (XRefreshViewState.STATE_COMPLETE)) { mFooterCallBack.onStateComplete(); }else { mFooterCallBack.onStateFinish(hideFooter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/8610/buggy-version/library.src.main.java.com.andview.refreshview.XRefreshView.java", "BodyUseAPI": [], "Fixed commit": "9c42335a4f424b6b99c4cb0361eda4d3d30cc569", "Url": "https://api.github.com/repos/huxq17/XRefreshView", "Date": "2017-05-04T04:40:21Z"},
{"Line": "=>979", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasComplete) { mState = XRefreshViewState.STATE_COMPLETE; }else { mState = XRefreshViewState.STATE_NORMAL; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/8610/buggy-version/library.src.main.java.com.andview.refreshview.XRefreshView.java", "BodyUseAPI": [], "Fixed commit": "9c42335a4f424b6b99c4cb0361eda4d3d30cc569", "Url": "https://api.github.com/repos/huxq17/XRefreshView", "Date": "2017-05-04T04:40:21Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.rit.se.antipattern.htmleditor.models.Parser.parse(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((parsed.length) == 0) return new edu.rit.se.antipattern.htmleditor.models.TextElement(\"\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/4831/buggy-version/src.main.java.edu.rit.se.antipattern.htmleditor.models.Parser.java", "BodyUseAPI": [], "Fixed commit": "e349c7cf4d641a6a4d1d0dc0aea369e7acc61b98", "Url": "https://api.github.com/repos/mok4ry/htmleditor", "Date": "2013-03-29T01:16:02Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (obj == null) { return false; }else if (obj == (this)) { return true; }else if ((obj.getClass()) != (getClass())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/6690/buggy-version/smalivm.src.main.java.org.cf.smalivm.context.ClassState.java", "BodyUseAPI": ["java.lang.Object.getClass()"], "Fixed commit": "855679b777d9c7ebf01d289bef54799d3f24f552", "Url": "https://api.github.com/repos/CalebFenton/simplify", "Date": "2015-06-05T04:48:15Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.length()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (l > 2) cr = (log.charAt((l - 2))) == '\\r';", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/6351/buggy-version/araqne-log-api.src.main.java.org.araqne.log.api.MultilineLogExtractor.java", "BodyUseAPI": ["java.lang.String.charAt(int)"], "Fixed commit": "7f285e5b821879a5ce57110b2cf2f15d4c75b069", "Url": "https://api.github.com/repos/araqne/logdb", "Date": "2014-09-16T07:06:37Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (r == 0) board[i][j].setOwner(Player.ComputerPlayer); else board[i][j].setOwner(Player.OtherPlayer);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/792/buggy-version/ConquerThePathGame.src.edu.nyu.ComputerGame.ConquerThePath.ConquerThePathGame.java", "BodyUseAPI": [], "Fixed commit": "772d84b5c5c61a9b2b57b74c8f212b4091174573", "Url": "https://api.github.com/repos/RameezLoladia/ConquerThePath", "Date": "2012-10-24T04:17:35Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["app.android.gambit.ui.AccountCreator.buildAccountFromName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (account == null) { throw new app.android.gambit.ui.SignUpFailedException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/4140/buggy-version/application.src.main.java.app.android.gambit.ui.AccountCreator.java", "BodyUseAPI": [], "Fixed commit": "bfb6a16bd3ec11ec7e9267e800fd5ffb78890ace", "Url": "https://api.github.com/repos/ming13/gambit", "Date": "2012-06-13T08:56:46Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (jmsMessage != null) { jmsMessage.setJMSDeliveryMode(Message.DEFAULT_DELIVERY_MODE); jmsMessage.setJMSPriority(Message.DEFAULT_PRIORITY); jmsMessage.setJMSExpiration(Message.DEFAULT_TIME_TO_LIVE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/2171/buggy-version/jms.org.wso2.carbon.transport.jms.src.main.java.org.wso2.carbon.transport.jms.sender.JMSClientConnectorImpl.java", "BodyUseAPI": ["javax.jms.Message.setJMSDeliveryMode(Message.DEFAULT_DELIVERY_MODE)", "javax.jms.Message.setJMSExpiration(Message.DEFAULT_TIME_TO_LIVE)", "javax.jms.Message.setJMSPriority(Message.DEFAULT_PRIORITY)"], "Fixed commit": "a43a1a1336f16ef7d4b8cd8fba5400fd1d053c1e", "Url": "https://api.github.com/repos/wso2/carbon-transports", "Date": "2017-10-01T16:10:30Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((hdfs.exists(rootFolder)) == false) { hdfs.mkdirs(rootFolder); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/1107/buggy-version/Utils.src.main.java.com.cloudera.sa.hive.utils.Hive8InsertIntoSimulator.java", "BodyUseAPI": ["org.apache.hadoop.fs.FileSystem.mkdirs(org.apache.hadoop.fs.Path)"], "Fixed commit": "ba44dfe7a49dc9decee9dbe49de640b3e2f41be8", "Url": "https://api.github.com/repos/tmalaska/Hive.Generate.DDL", "Date": "2013-02-21T23:57:29Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((hdfs.exists(tempRootFolder)) == false) { hdfs.mkdirs(tempRootFolder); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/1107/buggy-version/Utils.src.main.java.com.cloudera.sa.hive.utils.Hive8InsertIntoSimulator.java", "BodyUseAPI": ["org.apache.hadoop.fs.FileSystem.mkdirs(org.apache.hadoop.fs.Path)"], "Fixed commit": "ba44dfe7a49dc9decee9dbe49de640b3e2f41be8", "Url": "https://api.github.com/repos/tmalaska/Hive.Generate.DDL", "Date": "2013-02-21T23:57:29Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.crypto.CipherInputStream.read(byte[])"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (n == (-1)) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/9041/buggy-version/FileProtector.app.src.main.java.com.example.xin.fileprotector.Encryptor.java", "BodyUseAPI": [], "Fixed commit": "643c1e6865d752631b8e5a5870ba3b8553f303cf", "Url": "https://api.github.com/repos/xinnosuke/plp", "Date": "2017-11-26T23:04:01Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.littlerolf.sav.SortAlgorithmVisualizer.getLocalVersion()", "de.littlerolf.sav.SortAlgorithmVisualizer.getRemoteVersion()", "de.littlerolf.sav.SortAlgorithmVisualizer.getDownloadedJarVersion()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((remoteVersion == downloadedVersion) && (downloadedVersion > localVersion)) { de.littlerolf.sav.SortAlgorithmVisualizer.startJar(de.littlerolf.sav.SortAlgorithmVisualizer.DOWNLOADED_FILE.getAbsolutePath()); }else { java.lang.System.out.println(\"Starting local version.\"); de.littlerolf.sav.SortAlgorithmVisualizer.startLocal(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/1127/buggy-version/src.de.littlerolf.sav.SortAlgorithmVisualizer.java", "BodyUseAPI": [], "Fixed commit": "c45c05d94a21ee805a62cb48457e57e5c2bd4f91", "Url": "https://api.github.com/repos/LittleRolf/SortAlgorithmVisualizer", "Date": "2014-03-07T20:31:44Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (parser.isLabel()) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/3944/buggy-version/HackAssembler.java", "BodyUseAPI": [], "Fixed commit": "f7d8d42e99243663a261f55028511648578ffb9e", "Url": "https://api.github.com/repos/VipinindKumar/Assembler", "Date": "2017-08-12T07:28:04Z"},
{"Line": "=>953", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (deserIndex != (-1)) { fieldDeserializer = sortedFieldDeserializers[deserIndex]; java.lang.Class fieldClass = fieldDeserializer.fieldInfo.fieldClass; if (is && ((fieldClass != (boolean.class)) && (fieldClass != (java.lang.Boolean.class)))) { fieldDeserializer = null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/597/buggy-version/src.main.java.com.alibaba.fastjson.parser.JavaBeanDeserializer.java", "BodyUseAPI": [], "Fixed commit": "2e1fa054f023e2d5c5d9295dcbe5494b97b5ae1a", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2017-10-21T13:14:56Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((descriptor.getAddOnProperties()) == null) throw new org.intellimate.izou.security.exceptions.IzouPermissionException((\"addon_config.properties not found for addon:\" + addon));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/3581/buggy-version/src.main.java.org.intellimate.izou.security.SocketPermissionModule.java", "BodyUseAPI": [], "Fixed commit": "35402a9550599e275c540509e975ab89569fcfdb", "Url": "https://api.github.com/repos/intellimate/Izou", "Date": "2015-07-01T18:56:05Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((descriptor.getAddOnProperties()) == null) throw new org.intellimate.izou.security.exceptions.IzouPermissionException((\"addon_config.properties not found for addon:\" + addOn));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/3581/buggy-version/src.main.java.org.intellimate.izou.security.AudioPermissionModule.java", "BodyUseAPI": [], "Fixed commit": "35402a9550599e275c540509e975ab89569fcfdb", "Url": "https://api.github.com/repos/intellimate/Izou", "Date": "2015-07-01T18:56:05Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (android.text.TextUtils.isEmpty(content)) { util.showMessage(getString(R.string.enter_feedback), Toast.LENGTH_SHORT); }else { if (util.checkNetworkAvailability()) { com.imooc.run.newyear.FeedbackActivity.SendTask sTask = new com.imooc.run.newyear.FeedbackActivity.SendTask(); sTask.execute(); }else { util.showMessage(getString(R.string.network_unavailable), Toast.LENGTH_SHORT); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/4240/buggy-version/app.src.main.java.com.imooc.run.newyear.FeedbackActivity.java", "BodyUseAPI": [], "Fixed commit": "11a5c33312b1546535cc7376cebe10dd87bb5bca", "Url": "https://api.github.com/repos/runyan/NewYear", "Date": "2016-03-15T18:03:57Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (clazz == null) { throw new java.lang.IllegalArgumentException(\"Class is required\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/7291/buggy-version/recordingproxy.src.main.java.org.cementframework.recordingproxy.impl.ClassMetaDataUtils.java", "BodyUseAPI": [], "Fixed commit": "c512ba578bae2ea71d75354c7896467f1fd32842", "Url": "https://api.github.com/repos/allen-parslow/querybyproxy", "Date": "2017-10-25T23:50:53Z"},
{"Line": "=>2073", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Tree.MethodDeclaration.getDeclarationModel()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!(m.isActual())) || (isTypeUnknown(m.getType()))) { inferFunctionType(that, returnType); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/2376/buggy-version/typechecker.src.com.redhat.ceylon.compiler.typechecker.analyzer.ExpressionVisitor.java", "BodyUseAPI": [], "Fixed commit": "fafd520c1030a9af05f6f17ce4806926ce34d403", "Url": "https://api.github.com/repos/eclipse/ceylon", "Date": "2016-08-27T22:32:46Z"},
{"Line": "=>271", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mobi.monaca.framework.MonacaApplication.findMenuRepresentation(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (menuRepresentation != null) { menuRepresentation.configureMenu(uiContext, menu); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/6160/buggy-version/MonacaFramework.src.mobi.monaca.framework.MonacaPageActivity.java", "BodyUseAPI": ["mobi.monaca.framework.nativeui.menu.MenuRepresentation.configureMenu(mobi.monaca.framework.nativeui.UIContext,android.view.Menu)"], "Fixed commit": "d3a69bd128077a8793246cbc4a0fb4ee19c3e29f", "Url": "https://api.github.com/repos/monaca/monaca-framework-android", "Date": "2013-05-22T08:22:18Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.getInventory().getHolder()) instanceof org.bukkit.block.Chest) { chest = ((org.bukkit.block.BlockState) (event.getInventory().getHolder())).getBlock(); }else { chest = ((org.bukkit.block.DoubleChest) (event.getInventory().getHolder())).getLocation().getBlock(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/7652/buggy-version/com.Acrobot.ChestShop.Listeners.Player.PlayerInventory.java", "BodyUseAPI": ["org.bukkit.event.inventory.InventoryOpenEvent.getInventory()", "event.getInventory().getHolder()", "((org.bukkit.block.DoubleChest) (event.getInventory().getHolder())).getLocation()", "org.bukkit.event.inventory.InventoryOpenEvent.getInventory()", "((org.bukkit.block.BlockState) (event.getInventory().getHolder())).getBlock()", "event.getInventory().getHolder()", "((org.bukkit.block.DoubleChest) (event.getInventory().getHolder())).getLocation().getBlock()"], "Fixed commit": "0d22ddc4a4c79f25ee9f0a66dc7b37f6199172a0", "Url": "https://api.github.com/repos/Acrobot/ChestShop-3", "Date": "2012-11-23T20:03:29Z"},
{"Line": "=>1327", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (juiceOrangeCheckbox.isSelected()) { filterIngredients.add(\"juiceOrange\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/4072/buggy-version/src.MainViewController.java", "BodyUseAPI": [], "Fixed commit": "807334b84cefc3d5e00931672f2fafae6f20f908", "Url": "https://api.github.com/repos/422SoftwareMethodology/GetTrashed", "Date": "2017-03-02T17:53:48Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.axelby.gpodder.Client.getSubscriptionChanges(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (changes == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/8681/buggy-version/src.com.axelby.gpodder.SyncService.java", "BodyUseAPI": [], "Fixed commit": "995bd01743503541fda8c289911804d9fa5ce8c5", "Url": "https://api.github.com/repos/thasmin/Podax", "Date": "2013-10-28T11:27:20Z"},
{"Line": "=>1821", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (ndParent == null) { ndParent = ((org.w3c.dom.Node) (xpath.evaluate(\"/CorpusResearchProject\", this.docProject, javax.xml.xpath.XPathConstants.NODE))); if (ndParent == null) return false; java.lang.String sParent = \"\"; switch (sTagName) { case \"Query\" : sParent = \"QueryList\"; break; case \"Definition\" : sParent = \"DefList\"; break; case \"QC\" : sParent = \"QueryConstructor\"; break; case \"DbFeat\" : sParent = \"DbFeatList\"; break; default : return false; } org.w3c.dom.Element ndNew = this.docProject.createElement(sParent); ndParent.appendChild(ndNew); ndParent = ((org.w3c.dom.Node) (xpath.evaluate(sPath, this.docProject, javax.xml.xpath.XPathConstants.NODE))); if (ndParent == null) return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/4053/buggy-version/src.nl.ru.crpx.project.CorpusResearchProject.java", "BodyUseAPI": [], "Fixed commit": "3d0e7cc194dfa7ef3e70e8cdbefe127b097709bf", "Url": "https://api.github.com/repos/ErwinKomen/CrpxProcessor", "Date": "2015-12-07T14:03:47Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.Thread.currentThread()) != (android.os.Looper.getMainLooper().getThread())) { post(new java.lang.Runnable() { public void run() { loadUrl(fullUrl); } }); }else { loadUrl(fullUrl); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/3236/buggy-version/survey_app.src.main.java.org.opendatakit.survey.android.views.OdkSurveyWebView.java", "BodyUseAPI": [], "Fixed commit": "0ec4a975c0eaf3d757bef2ef6197cd19601bbeba", "Url": "https://api.github.com/repos/opendatakit/survey", "Date": "2016-04-08T18:15:55Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.Thread.currentThread()) != (android.os.Looper.getMainLooper().getThread())) { post(new java.lang.Runnable() { public void run() { loadUrl(fullUrl); } }); }else { loadUrl(fullUrl); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/3236/buggy-version/survey_app.src.main.java.org.opendatakit.survey.android.views.OdkSurveyWebView.java", "BodyUseAPI": [], "Fixed commit": "0ec4a975c0eaf3d757bef2ef6197cd19601bbeba", "Url": "https://api.github.com/repos/opendatakit/survey", "Date": "2016-04-08T18:15:55Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (diagram.saveNSD(true)) { setDefaultCloseOperation(javax.swing.JFrame.EXIT_ON_CLOSE); saveToINI(); }else { setDefaultCloseOperation(javax.swing.JFrame.DO_NOTHING_ON_CLOSE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/8558/buggy-version/src.lu.fisch.structorizer.gui.Mainform.java", "BodyUseAPI": [], "Fixed commit": "01967118e94166d48ad6603a322c13e2353b4e02", "Url": "https://api.github.com/repos/codemanyak/Structorizer.Desktop", "Date": "2015-10-30T10:43:33Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isLoggedIn()) clickCallback.openProfile(sessionFeed, holder); else showAlertDialog(v);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/2982/buggy-version/app.src.main.java.com.hybrid.freeopensourceusers.Adapters.RecyclerSessionAdapter.java", "BodyUseAPI": [], "Fixed commit": "cc20651a2cfe4f328175d1352c8dc92af0f983b3", "Url": "https://api.github.com/repos/adarshtri/Focus-Android-App", "Date": "2016-10-14T15:29:29Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.playerID) != null) compound.setString(\"player_id\", this.playerID.toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/5140/buggy-version/src.main.java.xyz.brassgoggledcoders.modularutilities.modules.ender.TileEntityEnderChestProxy.java", "BodyUseAPI": [], "Fixed commit": "cb97b2d3ee357f792969d4130416fcc60aab5691", "Url": "https://api.github.com/repos/BrassGoggledCoders/ModularUtilities", "Date": "2016-07-28T22:49:38Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(compound.getString(\"player_id\").isEmpty())) this.playerID = java.util.UUID.fromString(compound.getString(\"player_id\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/5140/buggy-version/src.main.java.xyz.brassgoggledcoders.modularutilities.modules.ender.TileEntityEnderChestProxy.java", "BodyUseAPI": ["java.util.UUID.fromString(compound.getString(\"player_id\"))", "net.minecraft.nbt.NBTTagCompound.getString(java.lang.String)"], "Fixed commit": "cb97b2d3ee357f792969d4130416fcc60aab5691", "Url": "https://api.github.com/repos/BrassGoggledCoders/ModularUtilities", "Date": "2016-07-28T22:49:38Z"},
{"Line": "=>320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.jjaz.aetherflames.AetherFlamesActivity.afa) != null) { com.jjaz.aetherflames.AetherFlamesActivity.afa.finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/2001/buggy-version/src.com.jjaz.aetherflames.AetherFlamesActivity.java", "BodyUseAPI": [], "Fixed commit": "0f21c74b41b3338b198678538690226e816eb427", "Url": "https://api.github.com/repos/Jraipxg/Aether-Flames", "Date": "2012-05-03T20:21:18Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(calcStack.isEmpty())) { switch (calcStack.peek()) { case \"^\" : case \"\u221a\" : precedence = true; case \"*\" : case \"/\" : if ((nextToken == '+') || (nextToken == '-')) { precedence = true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/3875/buggy-version/JavaCalculator.src.ie.ait.mase.calcproject.CalculatorParser.java", "BodyUseAPI": ["java.util.Stack<java.lang.String>.peek()"], "Fixed commit": "d8d79f845de8b67cc3e1f9939d5453e707b8a7f8", "Url": "https://api.github.com/repos/walshkvn/JavaCalculator", "Date": "2014-02-12T16:09:06Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mainSeekBar.getProgress()) == 0) { ifZeroCheckBox.setChecked(true); rangeNumberTextView.setText(\"0\"); returnIntent.putExtra(\"ifZero\", ifZeroCheckBox.isChecked()); }else { rangeNumberTextView.setText(java.lang.String.valueOf(mainSeekBar.getProgress())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/2636/buggy-version/RNum.app.src.main.java.com.example.prudnikoff.rnum.SettingsActivity.java", "BodyUseAPI": ["android.widget.SeekBar.getProgress()", "android.widget.TextView.setText(java.lang.String)", "java.lang.String.valueOf(mainSeekBar.getProgress())"], "Fixed commit": "9a8907052e32bb09a4dc39b7e0dca28ca3178caf", "Url": "https://api.github.com/repos/prudnikoff/Android", "Date": "2017-07-16T15:59:12Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mainSeekBar.getProgress()) == 0) ifZeroCheckBox.setChecked(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/2636/buggy-version/RNum.app.src.main.java.com.example.prudnikoff.rnum.SettingsActivity.java", "BodyUseAPI": [], "Fixed commit": "9a8907052e32bb09a4dc39b7e0dca28ca3178caf", "Url": "https://api.github.com/repos/prudnikoff/Android", "Date": "2017-07-16T15:59:12Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getSupportFragmentManager().getBackStackEntryCount()) != 0) { getSupportFragmentManager().popBackStack(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/8287/buggy-version/src.de.dhbw.container.MenuContainerActivity.java", "BodyUseAPI": [], "Fixed commit": "f24d28303e20eee6e83047e1866d66d76f60b898", "Url": "https://api.github.com/repos/titikakatoo/MapMyRun", "Date": "2013-12-02T17:27:56Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getSupportFragmentManager().getBackStackEntryCount()) != 0) { getSupportFragmentManager().popBackStack(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/8287/buggy-version/src.de.dhbw.container.MenuContainerActivity.java", "BodyUseAPI": [], "Fixed commit": "f24d28303e20eee6e83047e1866d66d76f60b898", "Url": "https://api.github.com/repos/titikakatoo/MapMyRun", "Date": "2013-12-02T17:27:56Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((spinnerType) == (com.mty.groupfuel.datamodel.Car.class)) { sendButton.setEnabled(true); try { selectedCar = cars.get((pos - 1)); } catch (java.lang.NullPointerException e) { selectedCar = new com.mty.groupfuel.datamodel.Car(); } }else if (pos == 0) { sendButton.setEnabled(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/6389/buggy-version/Android.app.src.main.java.com.mty.groupfuel.FuelingFragment.java", "BodyUseAPI": [], "Fixed commit": "d80ed2b1a8762a075fb9f59b49cfe4b8415fc38f", "Url": "https://api.github.com/repos/yanivlib/GroupFuelAndroid", "Date": "2015-06-06T07:23:00Z"},
{"Line": "=>369", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(e.getIsBorrowed())) { freeExemplarsCount++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/3639/buggy-version/src.src.java.org.fit.pis.library.back.SearchBooksBean.java", "BodyUseAPI": [], "Fixed commit": "6706cb930a792e4ae8f80f9a7d70348242f08396", "Url": "https://api.github.com/repos/blacker-cz/pis-library", "Date": "2011-05-02T11:28:12Z"},
{"Line": "=>382", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.fit.pis.library.back.BookingManager.find(org.fit.pis.library.back.Book)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((booking.get(0).getUser().getIduser()) == (user.getIduser())) { return true; }else if ((booking.size()) < freeExemplarsCount) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/3639/buggy-version/src.src.java.org.fit.pis.library.back.SearchBooksBean.java", "BodyUseAPI": ["java.util.List<org.fit.pis.library.back.Booking>.size()"], "Fixed commit": "6706cb930a792e4ae8f80f9a7d70348242f08396", "Url": "https://api.github.com/repos/blacker-cz/pis-library", "Date": "2011-05-02T11:28:12Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (org.apache.commons.collections.CollectionUtils.isNotEmpty(entries)) { this.id = entries.get(0).getCardId(); }else { this.id = new java.lang.Long(((long) ((java.lang.Math.random()) * 1111111L))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/1493/buggy-version/src.main.java.com.roosterpark.rptime.model.TimeSheetDay.java", "BodyUseAPI": [], "Fixed commit": "d4faf7d200020c9cccf5a62a35d06dae6fd90426", "Url": "https://api.github.com/repos/scandeezy/rpTime", "Date": "2013-11-19T21:55:59Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((transfer.getDescription().length()) > 500) { transfer.setDescription(((transfer.getDescription().substring(0, 490)) + \" ...\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/5486/buggy-version/schedule.schedule-appengine.src.main.java.com.jasify.schedule.appengine.model.balance.DefaultBalanceService.java", "BodyUseAPI": ["transfer.getDescription().substring(int,int)", "com.jasify.schedule.appengine.model.balance.Transfer.setDescription(((transfer.getDescription().substring(0, 490)) + \" ...\"))", "com.jasify.schedule.appengine.model.balance.Transfer.getDescription()"], "Fixed commit": "c070ac1f2f716f8017476581bfbdd475d2d2c397", "Url": "https://api.github.com/repos/krico/jas", "Date": "2015-06-30T23:15:40Z"},
{"Line": "=>942", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(running_history.isEmpty())) running_history.remove(((running_history.size()) - 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/2489/buggy-version/CalcV7.src.Model.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.remove(int)", "java.util.ArrayList<java.lang.String>.size()"], "Fixed commit": "057961b5875c6dadb7173438e2c8c9e2a93fabfe", "Url": "https://api.github.com/repos/Bastani/PostfixCalc", "Date": "2016-03-22T22:40:03Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (current != (depart)) destroy(current);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/1208/buggy-version/pc.src.pathfinding.astar.AStarCourbe.java", "BodyUseAPI": ["pathfinding.astar.AStarCourbe.destroy(pathfinding.astar.AStarCourbeNode)"], "Fixed commit": "a7808dc075321014228358ab30c0d6c712b1d75c", "Url": "https://api.github.com/repos/INTechSenpai/moon-rover", "Date": "2017-05-07T17:28:48Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["comp2402TreeEditor.Trie.getLetterRoot(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((markNode == null) && (root != lastNode)) { this.addWord(lastNode, word.substring(letterIndex), word); }else if ((root == lastNode) && ((word.length()) == 1)) { root.setNodeLabel(word); }else if (root == lastNode) { this.addWord(root, word.substring(1), word); }else { markNode.setNodeLabel(word); markNode.setDrawAsCircle(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/3664/buggy-version/src.comp2402TreeEditor.Trie.java", "BodyUseAPI": ["comp2402TreeEditor.TrieNode.setNodeLabel(java.lang.String)", "comp2402TreeEditor.Trie.addWord(comp2402TreeEditor.TrieNode,java.lang.String,java.lang.String)", "comp2402TreeEditor.TrieNode.setNodeLabel(java.lang.String)", "comp2402TreeEditor.Trie.addWord(comp2402TreeEditor.TrieNode,java.lang.String,java.lang.String)", "comp2402TreeEditor.TrieNode.setDrawAsCircle(boolean)"], "Fixed commit": "f231b918566824081810a6fdcc7b9f67a9637c38", "Url": "https://api.github.com/repos/mmaqsood/2402AS3", "Date": "2015-02-25T07:58:29Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.configuration.getSignatureReferenceDigestMethods()) != null) { config.setSignatureReferenceDigestMethods(this.configuration.getSignatureReferenceDigestMethods()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/3858/buggy-version/pac4j-saml.src.main.java.org.pac4j.saml.crypto.DefaultSignatureSigningParametersProvider.java", "BodyUseAPI": ["org.pac4j.saml.client.SAML2ClientConfiguration.getSignatureReferenceDigestMethods()", "org.opensaml.xmlsec.impl.BasicSignatureSigningConfiguration.setSignatureReferenceDigestMethods(this.configuration.getSignatureReferenceDigestMethods())"], "Fixed commit": "0f3fc69e648c9f3adaf5835415dd7e285cfea1d6", "Url": "https://api.github.com/repos/pac4j/pac4j", "Date": "2015-12-09T07:51:54Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.configuration.getSignatureCanonicalizationAlgorithm()) != null) { config.setSignatureCanonicalizationAlgorithm(this.configuration.getSignatureCanonicalizationAlgorithm()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/3858/buggy-version/pac4j-saml.src.main.java.org.pac4j.saml.crypto.DefaultSignatureSigningParametersProvider.java", "BodyUseAPI": ["org.pac4j.saml.client.SAML2ClientConfiguration.getSignatureCanonicalizationAlgorithm()", "org.opensaml.xmlsec.impl.BasicSignatureSigningConfiguration.setSignatureCanonicalizationAlgorithm(this.configuration.getSignatureCanonicalizationAlgorithm())"], "Fixed commit": "0f3fc69e648c9f3adaf5835415dd7e285cfea1d6", "Url": "https://api.github.com/repos/pac4j/pac4j", "Date": "2015-12-09T07:51:54Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.configuration.getSignatureAlgorithms()) != null) { config.setSignatureAlgorithms(this.configuration.getSignatureAlgorithms()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/3858/buggy-version/pac4j-saml.src.main.java.org.pac4j.saml.crypto.DefaultSignatureSigningParametersProvider.java", "BodyUseAPI": ["org.pac4j.saml.client.SAML2ClientConfiguration.getSignatureAlgorithms()", "org.opensaml.xmlsec.impl.BasicSignatureSigningConfiguration.setSignatureAlgorithms(this.configuration.getSignatureAlgorithms())"], "Fixed commit": "0f3fc69e648c9f3adaf5835415dd7e285cfea1d6", "Url": "https://api.github.com/repos/pac4j/pac4j", "Date": "2015-12-09T07:51:54Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.configuration.getBlackListedSignatureSigningAlgorithms()) != null) { config.setBlacklistedAlgorithms(this.configuration.getBlackListedSignatureSigningAlgorithms()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/3858/buggy-version/pac4j-saml.src.main.java.org.pac4j.saml.crypto.DefaultSignatureSigningParametersProvider.java", "BodyUseAPI": ["org.pac4j.saml.client.SAML2ClientConfiguration.getBlackListedSignatureSigningAlgorithms()", "org.opensaml.xmlsec.impl.BasicSignatureSigningConfiguration.setBlacklistedAlgorithms(this.configuration.getBlackListedSignatureSigningAlgorithms())"], "Fixed commit": "0f3fc69e648c9f3adaf5835415dd7e285cfea1d6", "Url": "https://api.github.com/repos/pac4j/pac4j", "Date": "2015-12-09T07:51:54Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (true) { mMediaSaver.addVideo(mRecordFileNameA, 0, 0, mImpactSaveFlag); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/7174/buggy-version/src.com.apical.dvr.RecordService.java", "BodyUseAPI": [], "Fixed commit": "30326c2c1a00f4fed1048b0fee2b0e8c4ed9e3ee", "Url": "https://api.github.com/repos/rockcarry/CameraDVR", "Date": "2016-09-20T04:08:40Z"},
{"Line": "=>275", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mMiscEventMon.isUsbCamConnected()) { mMediaSaver.addVideo(mRecordFileNameB, 0, 0, mImpactSaveFlag); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/7174/buggy-version/src.com.apical.dvr.RecordService.java", "BodyUseAPI": [], "Fixed commit": "30326c2c1a00f4fed1048b0fee2b0e8c4ed9e3ee", "Url": "https://api.github.com/repos/rockcarry/CameraDVR", "Date": "2016-09-20T04:08:40Z"},
{"Line": "=>426", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mMiscEventMon.isUsbCamConnected()) { mMediaSaver.addVideo(mRecordFileNameB, 0, 0, mImpactSaveFlag); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/7174/buggy-version/src.com.apical.dvr.RecordService.java", "BodyUseAPI": [], "Fixed commit": "30326c2c1a00f4fed1048b0fee2b0e8c4ed9e3ee", "Url": "https://api.github.com/repos/rockcarry/CameraDVR", "Date": "2016-09-20T04:08:40Z"},
{"Line": "=>423", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (true) { mMediaSaver.addVideo(mRecordFileNameA, 0, 0, mImpactSaveFlag); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/7174/buggy-version/src.com.apical.dvr.RecordService.java", "BodyUseAPI": [], "Fixed commit": "30326c2c1a00f4fed1048b0fee2b0e8c4ed9e3ee", "Url": "https://api.github.com/repos/rockcarry/CameraDVR", "Date": "2016-09-20T04:08:40Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((player) == (PLAYER_ONE)) { for (int i = 0; i < (availMoves.size()); i++) { android.graphics.Point orient = availMoves.get(i); availMoves.set(i, new android.graphics.Point((((boardDimension) - 1) - (orient.x)), (((boardDimension) - 1) - (orient.y)))); } temp.flip(); if (!(sumoPushOption.equals((-1), (-1)))) { sumoPushOption = new android.graphics.Point((((boardDimension) - 1) - (sumoPushOption.x)), (((boardDimension) - 1) - (sumoPushOption.y))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/6730/buggy-version/app.src.main.java.com.radiance.kamisado.Player.java", "BodyUseAPI": [], "Fixed commit": "b5cbc7f98b41e89c56b4d7c342553340b251a63d", "Url": "https://api.github.com/repos/neery1218/Kamisado", "Date": "2015-04-28T03:28:18Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/4001/buggy-version/smartETL.src.main.java.org.f3tools.incredible.smartETL.DataDef.java", "BodyUseAPI": [], "Fixed commit": "6101418c92b261ce920ecd6e776d7f06435c4aa0", "Url": "https://api.github.com/repos/dennisk28/SmartETL", "Date": "2015-04-01T16:37:03Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((time1) >= (time2)) { plugin.debug(\"Transition forward complete-----------------\"); if (hasSettings(level)) { player.resetPlayerTime(); }else { player.setPlayerTime(time1, hasSettings(level)); int timeTemp = ((int) (player.getPlayerTime())); plugin.debug((\"Player time is \" + (timeTemp % 24000))); } plugin.locCheck.cancelTask(\"transition\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/8221/buggy-version/TheDarkness.src.us.twoguys.thedarkness.mechanics.effects.Time.java", "BodyUseAPI": [], "Fixed commit": "8689d92184158b44ecaf464d163fee44e463a132", "Url": "https://api.github.com/repos/Arzeyt/TheDarkness", "Date": "2012-06-13T06:19:34Z"},
{"Line": "=>423", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.support.v4.view.MotionEventCompat.getActionMasked(android.view.MotionEvent)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((action == (android.view.MotionEvent.ACTION_UP)) || (action == (android.view.MotionEvent.ACTION_CANCEL))) { (touchCounter)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/4741/buggy-version/UniLayoutAndroid.UniLayoutLib.src.main.java.com.crescentflare.unilayout.containers.UniReusingContainer.java", "BodyUseAPI": [], "Fixed commit": "fe0838dffdca7385e9e2244db002ddc0a684c34d", "Url": "https://api.github.com/repos/crescentflare/UniLayout", "Date": "2017-12-29T13:00:49Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.stratos.manager.components.ApplicationSignUpHandler.getApplicationSignUp(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (applicationSignUp != null) { return applicationSignUp.getDomainMappings(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/2698/buggy-version/components.org.apache.stratos.manager.src.main.java.org.apache.stratos.manager.components.DomainMappingHandler.java", "BodyUseAPI": ["org.apache.stratos.messaging.domain.application.signup.ApplicationSignUp.getDomainMappings()"], "Fixed commit": "c1517c50402f23246cc37c9b9d78710116a35a49", "Url": "https://api.github.com/repos/apache/stratos", "Date": "2015-01-10T20:21:43Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (list == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/8804/buggy-version/app.src.main.java.com.adonai.manman.ManLocalArchiveFragment.java", "BodyUseAPI": [], "Fixed commit": "cceb049cf3f6771ba85a5fdfd9be1f2932c12f07", "Url": "https://api.github.com/repos/Adonai/Man-Man", "Date": "2014-11-25T12:40:42Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((address) == null) { return name; }else { return (((name) + \" (\") + (address)) + \")\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/7017/buggy-version/app.src.main.java.de.renekolb.loopinglouieextreme.CustomViews.ConnectedPlayerListItem.java", "BodyUseAPI": [], "Fixed commit": "dd4b0151fdfc69dd0694bad247aadd9475a9fbc0", "Url": "https://api.github.com/repos/ReneKolb/LoopingLouieExtremeApp", "Date": "2016-03-30T17:28:32Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((connectedPlayerAdapter.getItem(position).getAddress()) != null) { fa.btServer.sendMessage(connectedPlayerAdapter.getItem(position).getAddress(), \"Msg from Server\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/7017/buggy-version/app.src.main.java.de.renekolb.loopinglouieextreme.ui.HostGameFragment.java", "BodyUseAPI": ["fa.btServer.sendMessage(connectedPlayerAdapter.getItem(position).getAddress(),java.lang.String)", "android.widget.ArrayAdapter<de.renekolb.loopinglouieextreme.CustomViews.ConnectedPlayerListItem>.getItem(int)", "connectedPlayerAdapter.getItem(position).getAddress()"], "Fixed commit": "dd4b0151fdfc69dd0694bad247aadd9475a9fbc0", "Url": "https://api.github.com/repos/ReneKolb/LoopingLouieExtremeApp", "Date": "2016-03-30T17:28:32Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((availableBoardAdapter.getItem(position).getAddress()) != null) { fa.connectToBoard(availableBoardAdapter.getItem(position).getAddress()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/7017/buggy-version/app.src.main.java.de.renekolb.loopinglouieextreme.ui.HostGameFragment.java", "BodyUseAPI": ["android.widget.ArrayAdapter<de.renekolb.loopinglouieextreme.CustomViews.ConnectedPlayerListItem>.getItem(int)", "de.renekolb.loopinglouieextreme.FullscreenActivity.connectToBoard(availableBoardAdapter.getItem(position).getAddress())", "availableBoardAdapter.getItem(position).getAddress()"], "Fixed commit": "dd4b0151fdfc69dd0694bad247aadd9475a9fbc0", "Url": "https://api.github.com/repos/ReneKolb/LoopingLouieExtremeApp", "Date": "2016-03-30T17:28:32Z"},
{"Line": "=>1597", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!skipSave) { dirty.add(DirtyFieldReason.FLAGS); net.sacredlabyrinth.Phaed.PreciousStones.debug(\"DirtyFlags: disableFlag\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/8396/buggy-version/src.main.java.net.sacredlabyrinth.Phaed.PreciousStones.vectors.Field.java", "BodyUseAPI": [], "Fixed commit": "b1da30348b24155ef7e585e4126dd430b3568df4", "Url": "https://api.github.com/repos/marcelo-mason/PreciousStones", "Date": "2015-04-07T05:34:55Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (uri != null) { activatedGrammarURI = uri; numActiveGrammars = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/6974/buggy-version/JVXML_HOME.org.jvoicexml.implementation.mrcpv2.src.org.jvoicexml.implementation.mrcpv2.Mrcpv2SpokenInput.java", "BodyUseAPI": [], "Fixed commit": "d7bb8fe66877933fb851b04407a4ca144b43744b", "Url": "https://api.github.com/repos/Malatawy15/JvoiceXML-Halef", "Date": "2014-06-02T00:21:03Z"},
{"Line": "=>567", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (flushMember == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/1696/buggy-version/src.org.jgroups.protocols.pbcast.FLUSH.java", "BodyUseAPI": [], "Fixed commit": "5c759df0c096c7fb0f983fe3339762f54f4cafb3", "Url": "https://api.github.com/repos/pruivo/JGroups", "Date": "2012-04-04T13:12:02Z"},
{"Line": "=>628", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<compiler.ast.Block, firm.nodes.Node>.get(methodConstruction.getCurrentBlock())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (returnNode != null) { block.setFirmNode(returnNode); }else { compiler.ast.statement.Statement lastStatement = block.getStatements().get(((block.getNumberOfStatements()) - 1)); block.setFirmNode(lastStatement.getFirmNode()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/6638/buggy-version/Compiler.src.compiler.firm.generation.FirmGenerationVisitor.java", "BodyUseAPI": ["compiler.ast.Block.setFirmNode(firm.nodes.Node)"], "Fixed commit": "a892007c9409f476415303315de53ef0cf0e42e1", "Url": "https://api.github.com/repos/replimoc/compiler", "Date": "2015-01-19T19:23:58Z"},
{"Line": "=>559", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mGridHorizontalSpacing) != 0) mPaint.setStrokeWidth(mGridHorizontalSpacing);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/2843/buggy-version/RecyclerViewDecoration.app.src.main.java.com.arjinmc.recyclerviewdecoration.RecyclerViewItemDecoration.java", "BodyUseAPI": [], "Fixed commit": "1825e3c5864f874fddb9b5bd2b217f678e0070a4", "Url": "https://api.github.com/repos/arjinmc/RecyclerViewDecoration", "Date": "2017-07-04T06:12:04Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) < 14) { if ((!(clippingToPadding)) && ((getPaddingTop()) > 0)) { if ((getChildAt(0).getTop()) > 0) { if (firstVisibleItem > 0) firstVisibleItem -= 1; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/7344/buggy-version/src.com.emilsjolander.components.StickyListHeaders.StickyListHeadersListView.java", "BodyUseAPI": [], "Fixed commit": "6febac0fd2c5ac8a747cff033401f551c6dba419", "Url": "https://api.github.com/repos/nilesh14/FMC", "Date": "2012-04-01T19:15:51Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (mp != null) { msg.setContent(mp); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/3254/buggy-version/src.main.java.com.xmlcalabash.extensions.SendMail.java", "BodyUseAPI": ["javax.mail.internet.MimeMessage.setContent(javax.mail.internet.MimeMultipart)"], "Fixed commit": "ea1d6570373f0d000f73e3cf974dc0f9eed91f07", "Url": "https://api.github.com/repos/ndw/xmlcalabash1-sendmail", "Date": "2017-08-12T01:00:10Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (index < 0) { throw new java.io.IOException(((\"Each line must have at least (\" + (tuple.length)) + \") columns\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/1328/buggy-version/src.main.org.deidentifier.arx.io.CSVDataInput.java", "BodyUseAPI": [], "Fixed commit": "1e9af496bd95e1e3aaa645def3e109cbbbf5676d", "Url": "https://api.github.com/repos/arx-deidentifier/arx", "Date": "2014-04-11T08:42:45Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (boardCopy[j][i].isActive()) { blankCount = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/2743/buggy-version/Tetris.src.cerulean.Cerulean.java", "BodyUseAPI": [], "Fixed commit": "55bb4c5e16050b875bb2003fc47934973568465a", "Url": "https://api.github.com/repos/hjobrien/Quadris", "Date": "2016-04-17T20:59:10Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mEnablePresenceUpdates) { edu.stanford.mobisocial.dungbeetle.Helpers.updatePresence(this, pos); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/4089/buggy-version/src.edu.stanford.mobisocial.dungbeetle.ProfileActivity.java", "BodyUseAPI": [], "Fixed commit": "2c351142bad4487009a453ecc4128ed0a8226b12", "Url": "https://api.github.com/repos/Mobisocial/dungbeetle", "Date": "2011-04-20T23:13:05Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sebastians.challenge.data.DatabaseHelper.instance.getAllChallenges().size()) == 0) sebastians.challenge.data.DatabaseHelper.instance.createDefaultData();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/4177/buggy-version/app.src.main.java.sebastians.challenge.data.DatabaseHelper.java", "BodyUseAPI": ["sebastians.challenge.data.DatabaseHelper.createDefaultData()"], "Fixed commit": "87a60cc81ec833376649646bedc1631cdbca8d7f", "Url": "https://api.github.com/repos/kunterbunt/challenge-app", "Date": "2015-06-13T22:43:42Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (interval <= 0) { interval = 60000; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/3297/buggy-version/mobile.src.main.java.me.calebjones.spacelaunchnow.content.jobs.NextLaunchJob.java", "BodyUseAPI": [], "Fixed commit": "4895f745002e7a15baa0377c36c553cca4cecad7", "Url": "https://api.github.com/repos/ItsCalebJones/SpaceLaunchNow-Android", "Date": "2017-04-25T02:06:06Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((alpha) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/3097/buggy-version/src.main.java.Second.java", "BodyUseAPI": [], "Fixed commit": "0848d12ef58386593d23be06e00d8d75af8c414d", "Url": "https://api.github.com/repos/Katsz/MathLog", "Date": "2017-01-05T13:19:03Z"},
{"Line": "=>1095", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (row == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/5026/buggy-version/src.com.wanikani.androidnotifier.ItemsFragment.java", "BodyUseAPI": [], "Fixed commit": "fc1335ccdcc6ba091666ce0c14626869050d08ea", "Url": "https://api.github.com/repos/WaniKani/Android-Notification", "Date": "2013-06-07T19:43:55Z"},
{"Line": "=>485", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!ready) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/1286/buggy-version/src.main.java.io.github.dre2n.dungeonsxl.player.DGroup.java", "BodyUseAPI": [], "Fixed commit": "f266f0041279ca53a691808d8bb24b6261bce0f9", "Url": "https://api.github.com/repos/DRE2N/DungeonsXL", "Date": "2016-05-15T18:56:36Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((is.ru.stringcalculator.Calculator.toInt(number)) <= 1000) { result += is.ru.stringcalculator.Calculator.toInt(number); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/7366/buggy-version/src.main.java.is.ru.stringcalculator.Calculator.java", "BodyUseAPI": ["is.ru.stringcalculator.Calculator.toInt(java.lang.String)"], "Fixed commit": "70cd7d0d2b3d37beb45251c333a516b0bf1f3c32", "Url": "https://api.github.com/repos/Hafsteinn-Atli/StringCalculator", "Date": "2017-10-15T13:38:45Z"},
{"Line": "=>449", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.createTempFile(java.lang.String,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((tempFile.length()) <= 0) { while ((line = ereader.readLine()) != null) { writer.write(line); writer.newLine(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/2430/buggy-version/src.frontend.org.voltdb.utils.Collector.java", "BodyUseAPI": [], "Fixed commit": "6e94a04a2dc0a8cb0c6a26c70ffe64c54daf1692", "Url": "https://api.github.com/repos/VoltDB/voltdb", "Date": "2014-01-06T15:16:18Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (weekNo1 > weekNo2) { return 1; }else if (weekNo2 > weekNo1) { return -1; }else { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/8812/buggy-version/tmc-plugin.src.fi.helsinki.cs.tmc.ui.ExerciseWeekTable.java", "BodyUseAPI": [], "Fixed commit": "6268d31292fba4175d2d39903a41c84d43a485db", "Url": "https://api.github.com/repos/testmycode/tmc-netbeans", "Date": "2017-06-29T11:58:36Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((x > (background.getWidth())) || (y > (background.getHeight()))) || (x < 0)) || (y < 0)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/241/buggy-version/brainatlas-android.src.com.mm.brainatlas.BrainPartView.java", "BodyUseAPI": [], "Fixed commit": "f4d6f860f4da73337fd124ed24e1771a8602f1e9", "Url": "https://api.github.com/repos/Tjesto/-android-brain-atlas", "Date": "2014-05-20T23:47:24Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (gamer == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/5038/buggy-version/src.main.java.io.github.chucre.game.Server.java", "BodyUseAPI": [], "Fixed commit": "c2c8aeea158b81f7812a77d6a4174fc1e08b5750", "Url": "https://api.github.com/repos/chucre/pre-dojo", "Date": "2016-12-29T01:27:38Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((dataSource.getMetadata()) != null) { for (java.util.Map.Entry<java.lang.String, java.lang.String> entry : dataSource.getMetadata().entrySet()) { this.metadata.put(entry.getKey(), entry.getValue()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/6681/buggy-version/datakitapi.src.main.java.org.md2k.datakitapi.source.datasource.DataSourceBuilder.java", "BodyUseAPI": [], "Fixed commit": "552dfd4e912dbf762a80feca2a9803f10296cbe5", "Url": "https://api.github.com/repos/MD2Korg/mCerebrum-DataKitAPI", "Date": "2017-09-18T15:12:30Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((platform.getMetadata()) != null) { for (java.util.Map.Entry<java.lang.String, java.lang.String> entry : platform.getMetadata().entrySet()) { this.metadata.put(entry.getKey(), entry.getValue()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/6681/buggy-version/datakitapi.src.main.java.org.md2k.datakitapi.source.platform.PlatformBuilder.java", "BodyUseAPI": [], "Fixed commit": "552dfd4e912dbf762a80feca2a9803f10296cbe5", "Url": "https://api.github.com/repos/MD2Korg/mCerebrum-DataKitAPI", "Date": "2017-09-18T15:12:30Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pathObj.toUri().getScheme()) != null) return pathObj;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/8856/buggy-version/src.main.java.neu.nctracer.utils.HdfsFileUtils.java", "BodyUseAPI": [], "Fixed commit": "3f715ff91bebaee66cd5803cc99d822984fdb406", "Url": "https://api.github.com/repos/ankur-shanbhag/ImageStitcher", "Date": "2016-12-11T19:58:29Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((shelf.size()) == 0) { racks = java.lang.Integer.valueOf(userInput[1]); java.lang.System.out.println(((\"Created a shelf with \" + racks) + \" racks\")); }else { java.lang.System.out.println(((\"Shelf of size \" + racks) + \" already exists\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/4855/buggy-version/src.com.mastermindappz.Main.java", "BodyUseAPI": [], "Fixed commit": "479f3539ac87c7eddab7b9002f4185648f5fa0a6", "Url": "https://api.github.com/repos/M-ZubairAhmed/Courier-Facility-Loading-Cli", "Date": "2017-07-31T19:38:18Z"},
{"Line": "=>1884", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((values.get(i)) != null) preparedStatement.setObject((i + 1), values.get(i), columnTypes[i].getTypeCode()); else preparedStatement.setNull((i + 1), columnTypes[i].getTypeCode());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/8430/buggy-version/snapshots.javatools.src.main.java.javatools.database.Database.java", "BodyUseAPI": ["columnTypes[i].getTypeCode()", "java.sql.PreparedStatement.setNull(int,columnTypes[i].getTypeCode())", "java.sql.PreparedStatement.setObject(int,java.lang.Object,columnTypes[i].getTypeCode())", "java.util.List<java.lang.Object>.get(int)", "columnTypes[i].getTypeCode()"], "Fixed commit": "acc8087288c5527b7c2cd84238b426cd580e5375", "Url": "https://api.github.com/repos/antoine-tran/maven-repo", "Date": "2013-08-19T16:23:14Z"},
{"Line": "=>1809", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getAnnotations()) == null) || ((getAnnotations().size()) < 1)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/8134/buggy-version/src.main.java.org.ecocean.Encounter.java", "BodyUseAPI": [], "Fixed commit": "844083f68815949948f2a907bef4f6083ee1e9e8", "Url": "https://api.github.com/repos/WildbookOrg/Wildbook", "Date": "2017-02-22T20:43:25Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ecocean.Shepherd.getEncounter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((myShark.getAnnotations()) != null) { for (org.ecocean.Annotation ann : myShark.getAnnotations()) { myShepherd.getPM().makePersistent(ann); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/8134/buggy-version/src.main.java.org.ecocean.servlet.EncounterSetGenusSpecies.java", "BodyUseAPI": ["org.ecocean.Encounter.getAnnotations()"], "Fixed commit": "844083f68815949948f2a907bef4f6083ee1e9e8", "Url": "https://api.github.com/repos/WildbookOrg/Wildbook", "Date": "2017-02-22T20:43:25Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((super.body) != null) DungeonCleanerGame.CharacterPkg.Enemy.gameEng.gamePhysics().addDeadBodie(super.body);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/8041/buggy-version/core.src.DungeonCleanerGame.CharacterPkg.Enemy.java", "BodyUseAPI": ["DungeonCleanerGame.CharacterPkg.Enemy.gameEng.gamePhysics().addDeadBodie(super.body)"], "Fixed commit": "fef530d6a6f0b1d8c040092d83228957cc0913b6", "Url": "https://api.github.com/repos/DevRandomGames/DungeonCleanerGame", "Date": "2014-12-14T14:52:09Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.majorkernelpanic.streaming.rtsp.RtspClient.Response.parseResponse(java.io.BufferedReader)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (response.headers.containsKey(\"server\")) { android.util.Log.v(net.majorkernelpanic.streaming.rtsp.RtspClient.TAG, (\"RTSP server name:\" + (response.headers.get(\"server\")))); }else { android.util.Log.v(net.majorkernelpanic.streaming.rtsp.RtspClient.TAG, \"RTSP server name unknown\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/1572/buggy-version/src.net.majorkernelpanic.streaming.rtsp.RtspClient.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.String>.get(java.lang.String)", "android.util.Log.v(java.lang.String,java.lang.String)"], "Fixed commit": "a544ce63e9752196c8a37b395db7dcde06618c2f", "Url": "https://api.github.com/repos/fyhertz/spydroid-ipcamera", "Date": "2013-10-21T22:45:54Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dbobj == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/5654/buggy-version/src.de.inovex.jmom.ClassConverter.java", "BodyUseAPI": [], "Fixed commit": "c8dbe009e9d52e5bcb7855fa357cf3799adfbd6d", "Url": "https://api.github.com/repos/inovex/jMOM", "Date": "2013-04-23T18:26:22Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pt.ulisboa.tecnico.amorphous.requestrouter.RequestRouter.deleteCluster(pt.ulisboa.tecnico.amorphous.requestrouter.internal.RequestRouterCluster)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (result) return ((\"Added cluster \" + IP) + \":\") + Port; else return \"Failed to remove the cluster\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/7943/buggy-version/src.pt.ulisboa.tecnico.amorphous.requestrouter.shell.ShellCommands.java", "BodyUseAPI": [], "Fixed commit": "904fcb88d0621bdeeb1c46978feeaa2a2b1679d5", "Url": "https://api.github.com/repos/fazevedo86/RequestRouter", "Date": "2015-06-17T16:08:02Z"},
{"Line": "=>405", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.URL.toExternalForm()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((remoteUrlString.endsWith(\"/\")) && (relativePath.startsWith(\"/\"))) { remoteUrlString = remoteUrlString.substring(0, ((remoteUrlString.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/6608/buggy-version/src.main.java.com.couchbase.cblite.replicator.CBLReplicator.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "b9922b521508ac608d996ae6c1e4b26ffc96b7a6", "Url": "https://api.github.com/repos/couchbase/couchbase-lite-android-core", "Date": "2013-08-28T21:58:13Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (t == null) { return dCal; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/681/buggy-version/src.com.ntumis.drink99.controller.MainAjaxController.java", "BodyUseAPI": [], "Fixed commit": "f20e2a8ab43a8106c8a7c3dcd73e9776c9629974", "Url": "https://api.github.com/repos/mxt305/Drink99", "Date": "2016-01-05T11:53:43Z"},
{"Line": "=>895", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isNewSlide) { isNewSlide = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/4323/buggy-version/src.com.portablepresentations.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "adffd2dea8f1e538c10e7907bcec71df1f111030", "Url": "https://api.github.com/repos/kiruthi/cs256", "Date": "2013-05-06T21:38:39Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((device) != null) { message = \" connection=\" + (device.getConnection().getDescription()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/4636/buggy-version/NFCommunicator.nfcommunicator.src.main.java.com.neofect.communicator.CommunicationController.java", "BodyUseAPI": [], "Fixed commit": "a8357a6654cb33ecf94cc886a09205d6430c7f7f", "Url": "https://api.github.com/repos/Neofect/Communicator", "Date": "2017-10-20T13:18:40Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tag.endsWith(\"\\\\\")) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/1214/buggy-version/src.main.java.org.exoplatform.crowdin.utils.PropsToXML.java", "BodyUseAPI": [], "Fixed commit": "8f41542c752a28f4612f3a17006f4f43b3b4b54b", "Url": "https://api.github.com/repos/exoplatform/crowdin-maven-plugin", "Date": "2012-07-11T10:45:23Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((value instanceof com.psddev.dari.db.State) && (!(((com.psddev.dari.db.State) (value)).getType().getGroups().contains(com.psddev.dari.db.Query.class.getName())))) { mutableValues.add(((com.psddev.dari.db.State) (value)).getId()); }else if (value instanceof java.util.Date) { mutableValues.add(((java.util.Date) (value)).getTime()); }else if (value instanceof org.joda.time.DateTime) { mutableValues.add(((org.joda.time.DateTime) (value)).getMillis()); }else if (value instanceof java.lang.Enum) { mutableValues.add(((java.lang.Enum<?>) (value)).name()); }else if (value instanceof java.util.Locale) { mutableValues.add(com.psddev.dari.util.LocaleUtils.toLanguageTag(((java.util.Locale) (value)))); }else if (value instanceof java.lang.Class) { mutableValues.add(com.psddev.dari.db.ObjectType.getInstance(((java.lang.Class<?>) (value))).getId()); }else if ((value == null) && isNullAliasForMissing) { mutableValues.add(Query.MISSING_VALUE); }else { mutableValues.add(value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/8736/buggy-version/db.src.main.java.com.psddev.dari.db.ComparisonPredicate.java", "BodyUseAPI": [], "Fixed commit": "5fdad70a337e3baa596aafe54c7f7d160106df58", "Url": "https://api.github.com/repos/perfectsense/dari", "Date": "2015-05-27T17:11:38Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((hovered) instanceof org.reactome.web.diagram.tooltips.Edge) { org.reactome.web.diagram.tooltips.Edge edge = ((org.reactome.web.diagram.tooltips.Edge) (hovered)); org.reactome.web.diagram.tooltips.Shape shape = org.reactome.web.diagram.data.layout.impl.ShapeFactory.transform(edge.getReactionShape(), factor, offset); java.lang.String type = shape.getType(); if (type.equals(\"BOX\")) { tooltip.setPositionAndShow(this, shape.getA().getX(), shape.getA().getY(), (((shape.getB().getY()) - (shape.getA().getY())) + (8.0 * factor))); }else if ((type.equals(\"CIRCLE\")) || (type.equals(\"DOUBLE_CIRCLE\"))) { tooltip.setPositionAndShow(this, ((shape.getC().getX()) - (shape.getR())), shape.getC().getY(), ((shape.getR()) + (8.0 * factor))); } }else { tooltip.hide(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/7446/buggy-version/src.main.java.org.reactome.web.diagram.tooltips.TooltipContainer.java", "BodyUseAPI": [], "Fixed commit": "55670dad2a126e6084d97f4dd7670f5e205fbb21", "Url": "https://api.github.com/repos/reactome-pwp/diagram", "Date": "2015-07-22T09:48:49Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (string.equals(\"\")) { return 0; }else { android.widget.Toast.makeText(getActivity(), (\"To see correct GPA, \" + \"please enter valid grades.\"), Toast.LENGTH_SHORT).show(); return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/2681/buggy-version/src.com.mobileappdevelopersclub.fapp.ui.GpaCalculatorFragment.java", "BodyUseAPI": [], "Fixed commit": "35aa33c4b3ad7f9c17db7dc010e922d0a8c7551a", "Url": "https://api.github.com/repos/VinnieVendemia/MADFinalsApp", "Date": "2014-05-06T23:10:58Z"},
{"Line": "=>955", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.table.TableModel.getValueAt(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (cabinet != null) { cabinet.removeServer(server); ca.bcit.comp2613.a00251471.util.Helper.delete(ca.bcit.comp2613.servertracker.ServerTrackerCabinetSwingApplicationWithMySQLDB.getCabinets(), server); ca.bcit.comp2613.servertracker.ServerTrackerCabinetSwingApplicationWithMySQLDB.cabinetRepository.save(cabinet); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/7042/buggy-version/src.ca.bcit.comp2613.servertracker.ServerTrackerCabinetSwingApplicationWithMySQLDB.java", "BodyUseAPI": ["ca.bcit.comp2613.servertracker.repository.CabinetRepository.save(ca.bcit.comp2613.servertracker.model.Cabinet)", "ca.bcit.comp2613.servertracker.model.Cabinet.removeServer(ca.bcit.comp2613.servertracker.model.Server)"], "Fixed commit": "f644eb9bd0a1283ab1e73b98ea2e0ce7b9765fb8", "Url": "https://api.github.com/repos/omorley/ServerTracker", "Date": "2014-07-31T01:55:52Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (event.getMessage().getFormattedContent().contains(\" \")) { command = event.getMessage().getFormattedContent().substring(1, event.getMessage().getFormattedContent().indexOf(\" \")); content = event.getMessage().getFormattedContent().substring(((event.getMessage().getFormattedContent().indexOf(\" \")) + 1)); }else { command = event.getMessage().getFormattedContent().substring(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/3485/buggy-version/src.main.java.MessageListener.java", "BodyUseAPI": ["sx.blah.discord.handle.impl.events.guild.channel.message.MessageEvent.getMessage()", "event.getMessage().getFormattedContent().substring(((event.getMessage().getFormattedContent().indexOf(\" \")) + 1))", "sx.blah.discord.handle.impl.events.guild.channel.message.MessageEvent.getMessage()", "event.getMessage().getFormattedContent()", "event.getMessage().getFormattedContent()", "sx.blah.discord.handle.impl.events.guild.channel.message.MessageEvent.getMessage()", "sx.blah.discord.handle.impl.events.guild.channel.message.MessageEvent.getMessage()", "event.getMessage().getFormattedContent().indexOf(java.lang.String)", "event.getMessage().getFormattedContent()", "sx.blah.discord.handle.impl.events.guild.channel.message.MessageEvent.getMessage()", "event.getMessage().getFormattedContent().substring(int)", "event.getMessage().getFormattedContent().substring(int,event.getMessage().getFormattedContent().indexOf(\" \"))", "event.getMessage().getFormattedContent()", "event.getMessage().getFormattedContent().indexOf(java.lang.String)", "event.getMessage().getFormattedContent()"], "Fixed commit": "fa30fbe2df5e1578d8f994a6c4a1845cb41f163d", "Url": "https://api.github.com/repos/StijnvanderLinden/BottyMcBot", "Date": "2017-11-28T13:08:31Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getList()) != null) && ((getList().getSize()) > 0)) return getList().getComments().get(position);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/704/buggy-version/src.org.qii.weiciyuan.ui.maintimeline.CommentsTimeLineFragment.java", "BodyUseAPI": [], "Fixed commit": "3439e23eb2fd985f3e29891a6f7dff34180f6c45", "Url": "https://api.github.com/repos/qii/weiciyuan", "Date": "2012-09-08T08:50:53Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((bean) != null) && ((bean.size()) > 0)) return bean.get(position); else return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/704/buggy-version/src.org.qii.weiciyuan.ui.userinfo.StatusesListAdapter.java", "BodyUseAPI": ["java.util.List<org.qii.weiciyuan.bean.MessageBean>.get(int)"], "Fixed commit": "3439e23eb2fd985f3e29891a6f7dff34180f6c45", "Url": "https://api.github.com/repos/qii/weiciyuan", "Date": "2012-09-08T08:50:53Z"},
{"Line": "=>370", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (innerMouseInterval.getStart().before(mouseInterval.getStart())) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/5539/buggy-version/src.mouse.DataProcessor.java", "BodyUseAPI": [], "Fixed commit": "aa4f4dc4666aa04de14efb38f60f88a9a8a35b3b", "Url": "https://api.github.com/repos/vahan/mouse", "Date": "2013-06-11T15:37:03Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (claims != null) { keyBytes = signingKeyResolver.resolveSigningKey(jwsHeader, claims); }else { keyBytes = signingKeyResolver.resolveSigningKey(jwsHeader, payload); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/3809/buggy-version/src.main.java.io.jsonwebtoken.impl.DefaultJwtParser.java", "BodyUseAPI": ["io.jsonwebtoken.SigningKeyResolver.resolveSigningKey(io.jsonwebtoken.JwsHeader,io.jsonwebtoken.Claims)"], "Fixed commit": "44965c7b9fabfcda673dcc6e5ae91433715310dd", "Url": "https://api.github.com/repos/josebarrueta/jjwt", "Date": "2014-11-19T06:42:03Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getLayout()) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/6566/buggy-version/src.main.java.ayar.oktay.advancedtextview.AdvancedTextView.java", "BodyUseAPI": [], "Fixed commit": "519572860fa676f60bf89bdd6abc58fc115c5ca7", "Url": "https://api.github.com/repos/oktayayr/advancedtextview", "Date": "2016-06-01T13:48:11Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dmax.trycatch.data.storage.DataStorage.getCurrentBoard()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((board != null) && ((board.getStatus()) == (STATUS_DATA_UPDATED))) { adapter.setBoard(board); adapter.notifyDataSetChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/2015/buggy-version/src.main.java.dmax.trycatch.ui.TasksFragment.java", "BodyUseAPI": ["dmax.trycatch.ui.TasksFragment.Adapter.setBoard(dmax.trycatch.domain.TasksBoard)"], "Fixed commit": "df249c464f29bab0f8b0ac47a2a9583398b0f792", "Url": "https://api.github.com/repos/d-max/test-task-try-catch", "Date": "2015-09-21T10:23:32Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(sender.hasPermission(sub.getPermission()))) { sender.sendMessage(plugin.getCommand(sub.getCommand()).getPermissionMessage().replace(\"<permission>\", sub.getPermission().getName())); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/5990/buggy-version/src.main.java.de.themoep.entitydetection.commands.PluginCommandExecutor.java", "BodyUseAPI": ["de.themoep.entitydetection.commands.SubCommand.getCommand()", "plugin.getCommand(sub.getCommand()).getPermissionMessage()", "sub.getPermission().getName()", "de.themoep.entitydetection.commands.SubCommand.getPermission()", "org.bukkit.command.CommandSender.sendMessage(plugin.getCommand(sub.getCommand()).getPermissionMessage().replace(\"<permission>\", sub.getPermission().getName()))", "plugin.getCommand(sub.getCommand()).getPermissionMessage().replace(java.lang.String,sub.getPermission().getName())", "de.themoep.entitydetection.EntityDetection.getCommand(sub.getCommand())"], "Fixed commit": "bbf94c8fbf8d0c1709fefc333b9804dcea18a6c9", "Url": "https://api.github.com/repos/Minebench/EntityDetection", "Date": "2016-03-22T04:34:56Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mEvents.get(position).getmImage()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((image.getParent()) != null) { ((android.support.v4.view.ViewPager) (image.getParent())).removeView(image); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/6134/buggy-version/app.src.main.java.com.ritwik.madfbla201415.BannerAdapter.java", "BodyUseAPI": ["((android.support.v4.view.ViewPager) (image.getParent())).removeView(android.widget.ImageView)", "android.widget.ImageView.getParent()"], "Fixed commit": "dad68cec960241e85b893383f9156b8c113f7def", "Url": "https://api.github.com/repos/ritwikdixit/Chronology", "Date": "2015-04-16T23:08:50Z"},
{"Line": "=>395", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(operation.isOrdered())) || ((operation.getEntity()) == null)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/4901/buggy-version/src.main.java.org.uaithne.generator.templates.operations.myBatis.MyBatisTemplate.java", "BodyUseAPI": [], "Fixed commit": "ad33e18de9f7f19c9610a053dd41f37a18318c14", "Url": "https://api.github.com/repos/uaithne/uaithne-generator", "Date": "2014-06-13T20:42:19Z"},
{"Line": "=>407", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(operation.isOrdered())) || ((operation.getEntity()) == null)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/4901/buggy-version/src.main.java.org.uaithne.generator.templates.operations.myBatis.MyBatisTemplate.java", "BodyUseAPI": [], "Fixed commit": "ad33e18de9f7f19c9610a053dd41f37a18318c14", "Url": "https://api.github.com/repos/uaithne/uaithne-generator", "Date": "2014-06-13T20:42:19Z"},
{"Line": "=>490", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ship) == null) { placeShip(); if ((level) >= 2) { scheduleTransition(((asteroids.game.RANDOM.nextInt(asteroids.game.ALIEN_DELAY)) + 5000)); } }else if ((pstate.countAsteroids()) == 0) { (level)++; placeAsteroids(level); placeShip(); alienCanShoot = false; if ((level) >= 2) { scheduleTransition(((asteroids.game.RANDOM.nextInt(asteroids.game.ALIEN_DELAY)) + 5000)); } }else if (((level) == 2) && (!(alienCanShoot))) { alien = new asteroids.participants.Alien(1, this); addParticipant(alien); alienCanShoot = true; clip.playSaucerBClip(); scheduleTransition(((asteroids.game.RANDOM.nextInt(2000)) + 1000)); }else if (((level) >= 3) && (!(alienCanShoot))) { alien = new asteroids.participants.Alien(0, this); addParticipant(alien); alienCanShoot = true; clip.playSaucerSClip(); scheduleTransition(((asteroids.game.RANDOM.nextInt(2000)) + 1000)); }else if ((((ship) != null) && ((alien) != null)) && ((alienCanShoot) && ((alien.getAlienSize()) == 1))) { alienShootDumb(); }else if ((((ship) != null) && ((alien) != null)) && ((alienCanShoot) && ((alien.getAlienSize()) == 0))) { alienShootSmart(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/5519/buggy-version/PS11_CRAGUN_JOSHUA.src.asteroids.game.Controller.java", "BodyUseAPI": [], "Fixed commit": "ce41179190601df6999cc32d78c554ea452feb33", "Url": "https://api.github.com/repos/jmcragun/CS1410", "Date": "2017-12-08T22:33:36Z"},
{"Line": "=>443", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (image == null) { return new byte[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/2512/buggy-version/src.com.klinker.android.send_message.Message.java", "BodyUseAPI": [], "Fixed commit": "e675e538de528a6ffec9e68840598ac4b9881069", "Url": "https://api.github.com/repos/klinker41/android-smsmms", "Date": "2014-01-14T18:19:25Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.baseConfig) == null) { return new java.util.HashMap<java.lang.String, net.xuchuan.common.configmanager.ConfigItem>(this.itemMap); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/1491/buggy-version/src.main.java.net.xuchuan.common.configmanager.AbstractConfiguration.java", "BodyUseAPI": [], "Fixed commit": "0e32b0d7805799ff6b62dee974dc7dcd997ba613", "Url": "https://api.github.com/repos/xuchuan/gaia-config-java", "Date": "2016-12-18T17:11:16Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.baseConfig) == null) { return new java.util.HashSet<java.lang.String>(this.itemMap.keySet()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/1491/buggy-version/src.main.java.net.xuchuan.common.configmanager.AbstractConfiguration.java", "BodyUseAPI": [], "Fixed commit": "0e32b0d7805799ff6b62dee974dc7dcd997ba613", "Url": "https://api.github.com/repos/xuchuan/gaia-config-java", "Date": "2016-12-18T17:11:16Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.block.BlockPlaceEvent.getPlayer()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (ru.tehkode.permissions.bukkit.PermissionsEx.getUser(player).inGroup(\"Moderator\")) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/3166/buggy-version/src.main.java.com.jaoafa.HoneypotChecker.Event.HoneypotBreak.java", "BodyUseAPI": [], "Fixed commit": "464486c123b7bf3637b33fd67ea44dc692620af6", "Url": "https://api.github.com/repos/jaoafa/HoneypotChecker", "Date": "2017-03-04T08:49:50Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.range.classify(old.range)) == (Range.Relation.MOREOVERLAP)) { return split(this, old); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/8116/buggy-version/TrackingNumber.src.TrackingNumber.TrackingTableRow.java", "BodyUseAPI": ["TrackingNumber.TrackingTableRow.split(TrackingNumber.TrackingTableRow,TrackingNumber.TrackingTableRow)"], "Fixed commit": "c408a4f49a26ae0423ce70b6cbb18e7bbb6a21af", "Url": "https://api.github.com/repos/ashajyothi-iitbhu/TrackingNumber", "Date": "2015-07-28T04:39:36Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["entry.getValue().copy()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(tagTypeMap.containsKey(tag.getType()))) { tagTypeMap.put(tag.getType(), tag); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/8157/buggy-version/jgiven-html5-report.src.main.java.com.tngtech.jgiven.report.html5.TagFile.java", "BodyUseAPI": ["java.util.Map<java.lang.String, com.tngtech.jgiven.report.model.Tag>.put(tag.getType(),com.tngtech.jgiven.report.model.Tag)", "com.tngtech.jgiven.report.model.Tag.getType()"], "Fixed commit": "f3fd2f4231272599501910f2d5163036fa8c915a", "Url": "https://api.github.com/repos/TNG/JGiven", "Date": "2015-08-26T20:18:10Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["entry.getValue().copy()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(com.google.common.base.Objects.equal(entry.getValue().getDescription(), tagTypeMap.get(tag.getType()).getDescription()))) { instance.description = entry.getValue().getDescription(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/8157/buggy-version/jgiven-html5-report.src.main.java.com.tngtech.jgiven.report.html5.TagFile.java", "BodyUseAPI": ["java.util.Map.Entry<java.lang.String, com.tngtech.jgiven.report.model.Tag>.getValue()", "entry.getValue().getDescription()"], "Fixed commit": "f3fd2f4231272599501910f2d5163036fa8c915a", "Url": "https://api.github.com/repos/TNG/JGiven", "Date": "2015-08-26T20:18:10Z"},
{"Line": "=>351", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(response.getText().toString().equals(\"0\"))) { int start = response.getSelectionStart(); editable.insert(start, java.lang.Character.toString(((char) (primaryCode)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/9161/buggy-version/app.src.main.java.csci3320.kuilin.sat.gameActivity.java", "BodyUseAPI": ["android.widget.EditText.getSelectionStart()"], "Fixed commit": "9e39482133ebee59a366444a2d6ffa76ee4dc21e", "Url": "https://api.github.com/repos/wklglider/SAT", "Date": "2015-04-26T22:05:51Z"},
{"Line": "=>373", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (toString) value = ((fieldName + \" == null ? null : \") + fieldName) + \".toString()\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/2044/buggy-version/src.main.java.ilarkesto.mda.legacy.generator.DatobGenerator.java", "BodyUseAPI": [], "Fixed commit": "ad33bdf3e86c98e93d701f874d48b19f026d40b1", "Url": "https://api.github.com/repos/Kunagi/ilarkesto", "Date": "2014-05-25T12:58:39Z"},
{"Line": "=>372", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (p.getType().equals(java.lang.Boolean.class.getName())) toString = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/2044/buggy-version/src.main.java.ilarkesto.mda.legacy.generator.DatobGenerator.java", "BodyUseAPI": [], "Fixed commit": "ad33bdf3e86c98e93d701f874d48b19f026d40b1", "Url": "https://api.github.com/repos/Kunagi/ilarkesto", "Date": "2014-05-25T12:58:39Z"},
{"Line": "=>371", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (p.getType().equals(java.lang.Long.class.getName())) toString = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/2044/buggy-version/src.main.java.ilarkesto.mda.legacy.generator.DatobGenerator.java", "BodyUseAPI": [], "Fixed commit": "ad33bdf3e86c98e93d701f874d48b19f026d40b1", "Url": "https://api.github.com/repos/Kunagi/ilarkesto", "Date": "2014-05-25T12:58:39Z"},
{"Line": "=>370", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (p.getType().equals(java.lang.Integer.class.getName())) toString = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/2044/buggy-version/src.main.java.ilarkesto.mda.legacy.generator.DatobGenerator.java", "BodyUseAPI": [], "Fixed commit": "ad33bdf3e86c98e93d701f874d48b19f026d40b1", "Url": "https://api.github.com/repos/Kunagi/ilarkesto", "Date": "2014-05-25T12:58:39Z"},
{"Line": "=>369", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (p.getType().equals(java.lang.String.class.getName())) toString = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/2044/buggy-version/src.main.java.ilarkesto.mda.legacy.generator.DatobGenerator.java", "BodyUseAPI": [], "Fixed commit": "ad33bdf3e86c98e93d701f874d48b19f026d40b1", "Url": "https://api.github.com/repos/Kunagi/ilarkesto", "Date": "2014-05-25T12:58:39Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((eventId2touchPointDescriptor.get(eventId)) instanceof net.sourceforge.cobertura.instrument.tp.SwitchTouchPointDescriptor) { net.sourceforge.cobertura.instrument.tp.SwitchTouchPointDescriptor point = ((net.sourceforge.cobertura.instrument.tp.SwitchTouchPointDescriptor) (eventId2touchPointDescriptor.get(eventId))); if (point != null) { return point.getCounterId(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/3424/buggy-version/cobertura.src.main.java.net.sourceforge.cobertura.instrument.tp.ClassMap.java", "BodyUseAPI": ["java.util.Map<java.lang.Integer, net.sourceforge.cobertura.instrument.tp.TouchPointDescriptor>.get(int)"], "Fixed commit": "ff8cad0e718c0f189f430976fa2d30c021b6bcab", "Url": "https://api.github.com/repos/jmrozanec/cobertura", "Date": "2013-07-24T08:26:03Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((eventId2touchPointDescriptor.get(eventId)) instanceof net.sourceforge.cobertura.instrument.tp.LineTouchPointDescriptor) { net.sourceforge.cobertura.instrument.tp.LineTouchPointDescriptor point = ((net.sourceforge.cobertura.instrument.tp.LineTouchPointDescriptor) (eventId2touchPointDescriptor.get(eventId))); if (point != null) { return point.getCounterId(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/3424/buggy-version/cobertura.src.main.java.net.sourceforge.cobertura.instrument.tp.ClassMap.java", "BodyUseAPI": ["java.util.Map<java.lang.Integer, net.sourceforge.cobertura.instrument.tp.TouchPointDescriptor>.get(int)"], "Fixed commit": "ff8cad0e718c0f189f430976fa2d30c021b6bcab", "Url": "https://api.github.com/repos/jmrozanec/cobertura", "Date": "2013-07-24T08:26:03Z"},
{"Line": "=>299", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eu.around_me.rpgplugin.skills.Skill.getSkillRequirements()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (req != null) { for (eu.around_me.rpgplugin.skills.Skill reqskill : req) { if (!(learned.contains(reqskill))) return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/4996/buggy-version/src.eu.around_me.rpgplugin.playerstats.RPGPlayerStat.java", "BodyUseAPI": [], "Fixed commit": "2e8013b0f2ed0866d6bb8c48d82325fced7ab2a4", "Url": "https://api.github.com/repos/SetZero/RPGPlugin", "Date": "2017-01-03T21:14:11Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dayView.getDraggedEntry()) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/4550/buggy-version/CalendarFXView.src.main.java.impl.com.calendarfx.view.DayViewEditController.java", "BodyUseAPI": [], "Fixed commit": "6d76a61ef0e009f531b71abe488d8311e2d96e07", "Url": "https://api.github.com/repos/imario42/CalendarFX", "Date": "2017-10-20T10:53:36Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.cattle.platform.object.util.DataAccessor.fields(account).withKey(SecurityConstants.HAS_LOGGED_IN).get()", "io.cattle.platform.iaas.api.auth.dao.AuthDao.hasAccessToAnyProject(java.util.Set<io.cattle.platform.api.auth.Identity>,boolean,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (((!hasAccessToAProject) && (hasLoggedIn != null)) && (!((java.lang.Boolean) (hasLoggedIn)))) { projectResourceManager.createProjectForUser(account); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/6135/buggy-version/code.iaas.auth-logic.src.main.java.io.cattle.platform.iaas.api.auth.TokenUtils.java", "BodyUseAPI": [], "Fixed commit": "5d9ba4aa73cda6a7f1cb46cf26669e850d50d967", "Url": "https://api.github.com/repos/hibooboo2/cattle", "Date": "2015-09-03T18:02:11Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (account != null) { io.cattle.platform.object.util.DataAccessor.fields(account).withKey(SecurityConstants.HAS_LOGGED_IN).set(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/6135/buggy-version/code.iaas.auth-logic.src.main.java.io.cattle.platform.iaas.api.auth.TokenUtils.java", "BodyUseAPI": ["io.cattle.platform.object.util.DataAccessor.fields(account).withKey(SecurityConstants.HAS_LOGGED_IN).set(boolean)", "io.cattle.platform.object.util.DataAccessor.fields(io.cattle.platform.core.model.Account)", "io.cattle.platform.object.util.DataAccessor.fields(account).withKey(SecurityConstants.HAS_LOGGED_IN)"], "Fixed commit": "5d9ba4aa73cda6a7f1cb46cf26669e850d50d967", "Url": "https://api.github.com/repos/hibooboo2/cattle", "Date": "2015-09-03T18:02:11Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(dynamic)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/8471/buggy-version/src.raytrace.surfaces.MatrixTransformSurface.java", "BodyUseAPI": [], "Fixed commit": "5c4098ef76f7f11fe2e202644e8c79a4a779a00f", "Url": "https://api.github.com/repos/CalVR/ParallelRaytracing", "Date": "2014-04-17T03:37:21Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((((groups == null) || (groups.isEmpty())) || (permissionStrings == null)) || (permissionStrings.isEmpty())) || (contextType == null)) || (contextType.isEmpty())) { return java.util.Collections.emptyList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/8438/buggy-version/src.java.com.idega.core.accesscontrol.dao.impl.PermissionDAOImpl.java", "BodyUseAPI": [], "Fixed commit": "c904a882029dbbb07c45b8f1b30abb589ceea1e3", "Url": "https://api.github.com/repos/hugveitan/com.idega.core", "Date": "2012-10-23T15:42:26Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == (mTaxonomy)) { java.lang.System.out.println(\"No taxonomy specified -- defaulting to all questions\"); mTaxonomy = QuestionTaxonomyActivity.taxonomies.AllQuestions; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/7593/buggy-version/moqa.src.com.ualberta.team17.view.QuestionListActivity.java", "BodyUseAPI": [], "Fixed commit": "ecadaa08210a434b1e7382b558fb45f021ad2f55", "Url": "https://api.github.com/repos/CMPUT301F14T17/Team17Project", "Date": "2014-11-06T18:38:58Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(file.delete())) { file.deleteOnExit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/2486/buggy-version/src.main.java.act.metric.SimpleMetricStore.java", "BodyUseAPI": ["java.io.File.deleteOnExit()"], "Fixed commit": "00134f55f3759700a8607bfdd3a8a553c92812b8", "Url": "https://api.github.com/repos/actframework/actframework", "Date": "2016-09-09T20:49:55Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.twitter.sdk.android.core.TwitterCore.getInstance().getSessionManager().getActiveSession()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (activeSession != null) { handleSuccess(activeSession); }else { getTwitterAuthClient().authorize(this, callback); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/8222/buggy-version/library.src.main.java.com.jaychang.sa.TwitterAuthActivity.java", "BodyUseAPI": ["com.jaychang.sa.TwitterAuthActivity.handleSuccess(com.twitter.sdk.android.core.TwitterSession)"], "Fixed commit": "1e03544c8dfa16d03e42c45547f451517578ff8d", "Url": "https://api.github.com/repos/jaychang0917/SimpleAuth", "Date": "2017-07-25T03:02:03Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((grades.size()) == 0) return view;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/8640/buggy-version/FHICT-companion.app.src.main.java.s.pahlplatz.fhict_companion.adapters.GradeAdapter.java", "BodyUseAPI": [], "Fixed commit": "178f8c64bf1a2fd403f6424bbabcb9c5166d83dc", "Url": "https://api.github.com/repos/StefanPahlplatz/fontys-companion-app", "Date": "2017-02-14T12:46:34Z"},
{"Line": "=>942", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mVertexPoints.isEmpty()) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/1979/buggy-version/app.src.main.java.android.support.v7.widget.FlowLayoutManager.java", "BodyUseAPI": [], "Fixed commit": "fbcb78e838c1414242aeab9b72e3002a54221a76", "Url": "https://api.github.com/repos/alexclin0188/FlowLayoutManager", "Date": "2016-03-08T07:51:05Z"},
{"Line": "=>387", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.talend.commons.CommonsPlugin.isHeadless())) { java.lang.Exception compLoadException = new java.lang.Exception((((\"Coponent \" + (this.name)) + \" load error.\\nbecause the exception:\") + (re.getCause().getMessage())), re); org.talend.commons.ui.runtime.exception.MessageBoxExceptionHandler.process(compLoadException); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/7675/buggy-version/main.plugins.org.talend.designer.core.src.main.java.org.talend.designer.core.model.components.EmfComponent.java", "BodyUseAPI": [], "Fixed commit": "ad734c190c624be906ac4391907f071f419f5f8a", "Url": "https://api.github.com/repos/Talend/tdi-studio-se", "Date": "2015-02-15T10:02:42Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.enchantment.EnchantItemEvent.getEnchantsToAdd()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((toAdd == null) || (toAdd.isEmpty())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/7758/buggy-version/src.main.java.net.glowstone.inventory.EnchantmentManager.java", "BodyUseAPI": [], "Fixed commit": "a26aa7c7b18113d4264029b4d7ba4903906559b1", "Url": "https://api.github.com/repos/Tonodus/Glowstone", "Date": "2014-12-12T18:36:33Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (phonesshop.util.DebugMode.isDebug()) phonesshop.Application.logger.debug(\"Made application launch.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/1010/buggy-version/src.main.java.phonesshop.Application.java", "BodyUseAPI": [], "Fixed commit": "ba3b0af23c0784db5a1940103f5cfa4001d2123a", "Url": "https://api.github.com/repos/knikitin/PhoneShop", "Date": "2016-07-05T07:02:36Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.pacCondition) != null) pacConditionName = this.pacCondition.getClass().getSimpleName(); else if ((this.pacConditionClass) != null) pacConditionName = this.pacConditionClass.getSimpleName(); else pacConditionName = \"None\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/5715/buggy-version/src.main.java.org.cs4j.core.algorithms.pac.PACSearchFramework.java", "BodyUseAPI": [], "Fixed commit": "cd7d1629484c72c8e91e94c10b019ea243c95a98", "Url": "https://api.github.com/repos/galdreiman/j-PAC-heuristic-search", "Date": "2017-03-02T04:53:12Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.anytimeSearchAlgorithm) != null) anytimeSearchName = this.anytimeSearchAlgorithm.getName(); else if ((this.anytimeSearchClass) != null) anytimeSearchName = this.anytimeSearchClass.getSimpleName(); else anytimeSearchName = \"None\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/5715/buggy-version/src.main.java.org.cs4j.core.algorithms.pac.PACSearchFramework.java", "BodyUseAPI": [], "Fixed commit": "cd7d1629484c72c8e91e94c10b019ea243c95a98", "Url": "https://api.github.com/repos/galdreiman/j-PAC-heuristic-search", "Date": "2017-03-02T04:53:12Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(containsNewSNP(cur_win, new_snp))) { cur_win.addSNP(new_snp); index++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/6153/buggy-version/src.io.PhasedParser.java", "BodyUseAPI": ["tools.Window.addSNP(tools.SNP)"], "Fixed commit": "22f2c43b037a71d77721977181347c274a0a3ca9", "Url": "https://api.github.com/repos/mebbert/CMS4J", "Date": "2015-03-10T19:18:06Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (env.isEmpty()) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/2131/buggy-version/src.main.java.NitrateIntegration.TcmsGatherer.java", "BodyUseAPI": [], "Fixed commit": "4eadbd8b6153f35f062deb2a49bbdffe90f63ebe", "Url": "https://api.github.com/repos/AdamSaleh/NitrateRPC", "Date": "2012-06-11T09:13:19Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cz.library.PullToRefreshLayout.getChildCount()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (0 < childCount) { for (int i = 0; i < childCount; i++) { android.view.View childView = cz.library.PullToRefreshLayout.getChildAt(i); android.util.Log.e(cz.library.PullToRefreshLayout.TAG, (((((\"index:\" + i) + \" width:\") + (childView.getMeasuredWidth())) + \" height:\") + (childView.getMeasuredHeight()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/1948/buggy-version/library.src.main.java.cz.library.PullToRefreshLayout.java", "BodyUseAPI": [], "Fixed commit": "0619f4c201aeb3dd7294fd30af0d2df054098ea7", "Url": "https://api.github.com/repos/momodae/PullToRefreshLayout", "Date": "2016-12-20T10:44:54Z"},
{"Line": "=>713", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (streamError.getCode().equals(\"conflict\")) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/7198/buggy-version/source.org.jivesoftware.smack.util.PacketParserUtils.java", "BodyUseAPI": [], "Fixed commit": "a6b93f36ea9a02304a1bcf13863a936f9deede4f", "Url": "https://api.github.com/repos/habzy/smack", "Date": "2013-08-06T08:43:53Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.yogee.widgets.CurrentLocationWidget.utils.Utilities.isScreenOn(android.content.Context)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((widgetCount > 0) && isScreenOn) { context.startService(new android.content.Intent(context, com.yogee.widgets.CurrentLocationWidget.services.LocationService.class)); Utilities.AppLog.d(com.yogee.widgets.CurrentLocationWidget.receivers.EventReceiver.TAG, \">>>>>>>>>> Starting the service\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/6524/buggy-version/src.com.yogee.widgets.CurrentLocationWidget.receivers.EventReceiver.java", "BodyUseAPI": [], "Fixed commit": "b2d1fabda9fe220d5abb7fc6e09f5434c7584d4d", "Url": "https://api.github.com/repos/yogendra1/currentLocationWidget", "Date": "2014-05-30T09:58:24Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["utils.Utils.getObjectWithText(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (discardText.exists()) { utils.Utils.customAssertTrue(this, \"Delete button diseappeared???\", utils.Utils.click(discardText)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/7555/buggy-version/src.facebook.LaunchSettings.java", "BodyUseAPI": ["utils.Utils.customAssertTrue(facebook.LaunchSettings,java.lang.String,utils.Utils.click(discardText))", "utils.Utils.click(com.android.uiautomator.core.UiObject)"], "Fixed commit": "e0bf610611217f04afe4f85007a1128dd464916a", "Url": "https://api.github.com/repos/MPTCP-smartphone-thesis/uitests-facebook", "Date": "2014-12-01T15:23:42Z"},
{"Line": "=>485", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((this) instanceof mage.abilities.MageSingleton)) { mage.MageObject object = game.getObject(getSourceId()); if ((object != null) && (!(object.getAbilities().contains(this)))) { boolean found = false; if ((object instanceof mage.game.permanent.PermanentCard) && (((mage.game.permanent.PermanentCard) (object)).canTransform())) { mage.game.permanent.PermanentCard permanent = ((mage.game.permanent.PermanentCard) (object)); found = (permanent.getSecondCardFace().getAbilities().contains(this)) || (permanent.getCard().getAbilities().contains(this)); } if (!found) { return false; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/418/buggy-version/Mage.src.mage.abilities.AbilityImpl.java", "BodyUseAPI": [], "Fixed commit": "93f446aaf0c30fc7eeeec37d087897eba9abd866", "Url": "https://api.github.com/repos/magefree/mage", "Date": "2012-09-07T15:05:07Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.abusement.park.acneed.model.Image.getUri()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(com.abusement.park.acneed.activity.CustomAdapter.checkedRows.containsKey(uri))) { com.abusement.park.acneed.activity.CustomAdapter.checkedRows.put(uri, true); }else { includeCheckBox.setChecked(com.abusement.park.acneed.activity.CustomAdapter.checkedRows.get(uri)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/4699/buggy-version/app.src.main.java.com.abusement.park.acneed.activity.CustomAdapter.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Boolean>.put(java.lang.String,boolean)", "java.util.Map<java.lang.String, java.lang.Boolean>.get(java.lang.String)", "android.widget.CheckBox.setChecked(java.lang.Boolean)"], "Fixed commit": "b15b2b11e04f47185f7b6a6a6cb85802718360a8", "Url": "https://api.github.com/repos/JohntaviousB/acneed", "Date": "2017-04-15T21:51:47Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (trgRows < 0) trgRows = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/5930/buggy-version/railo-java.railo-core.src.railo.runtime.functions.query.QueryConvertForGrid.java", "BodyUseAPI": [], "Fixed commit": "025ed83ecaf67188de5d3201ee56fef5b9cf60c3", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2013-12-02T13:16:18Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (page < 1) { throw new railo.runtime.exp.FunctionException(pc, \"QueryConvertForGrid\", 2, \"page\", ((\"page must be a positive number now (\" + page) + \")\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/5930/buggy-version/railo-java.railo-core.src.railo.runtime.functions.query.QueryConvertForGrid.java", "BodyUseAPI": [], "Fixed commit": "025ed83ecaf67188de5d3201ee56fef5b9cf60c3", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2013-12-02T13:16:18Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (trgRows > pageSize) trgRows = pageSize;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/5930/buggy-version/railo-java.railo-core.src.railo.runtime.functions.query.QueryConvertForGrid.java", "BodyUseAPI": [], "Fixed commit": "025ed83ecaf67188de5d3201ee56fef5b9cf60c3", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2013-12-02T13:16:18Z"},
{"Line": "=>340", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (upperBound != (-1)) { upperBoundVersion = getVersionComparator().incrementSegment(lowerBoundVersion, upperBound); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/6052/buggy-version/src.main.java.org.codehaus.mojo.versions.api.PropertyVersions.java", "BodyUseAPI": ["org.codehaus.mojo.versions.ordering.VersionComparator.incrementSegment(org.apache.maven.artifact.versioning.ArtifactVersion,int)"], "Fixed commit": "f098a7d8d1599056cfdfefb948126b24480a1943", "Url": "https://api.github.com/repos/pbromley/versions-maven-plugin", "Date": "2016-06-14T15:17:22Z"},
{"Line": "=>307", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uk.ac.diamond.scisoft.analysis.rcp.explorers.SRSExplorer.getActiveData()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((d.getRank()) > 1) { datasetSelection.setType(InspectorType.IMAGE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/5634/buggy-version/uk.ac.diamond.scisoft.analysis.rcp.src.uk.ac.diamond.scisoft.analysis.rcp.explorers.SRSExplorer.java", "BodyUseAPI": [], "Fixed commit": "74f7bcead81623f1c1653879fcf7e92810acfd7d", "Url": "https://api.github.com/repos/DawnScience/scisoft-ui", "Date": "2012-12-18T14:22:48Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, watch.fight.android.fightbrowser.Brackets.models.Participant>.get(match.getPlayerTwoId())", "mMatches.get(position).getMatch()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (match.getWinnerId().equals(p2.getId())) { holder.mPlayerOne.setTextColor(mContext.getResources().getColor(R.color.primary_dark_fgc)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/7972/buggy-version/app.src.main.java.watch.fight.android.fightbrowser.Brackets.ParticipantsAdapter.java", "BodyUseAPI": [], "Fixed commit": "fc7e3ee4675dcfa6adaf7ead3dff6d0cbb83f858", "Url": "https://api.github.com/repos/thingdeux/FightWatchAndroidApplication", "Date": "2015-10-07T03:09:02Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (value != null) { if (!(value instanceof java.util.Collection<?>)) value = java.util.Arrays.asList(value); result.retainAll(((java.util.Collection<?>) (value))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/7599/buggy-version/core.src.main.java.com.orientechnologies.orient.core.sql.functions.coll.OSQLFunctionIntersect.java", "BodyUseAPI": ["java.util.Arrays.asList(java.lang.Object)"], "Fixed commit": "c480f482fc60d3cb064463cb4dd8eef5ddf11653", "Url": "https://api.github.com/repos/logart/orientdb", "Date": "2013-01-02T13:39:52Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((actionIds.size()) > (java.lang.Long.SIZE)) || (((actionIds.size()) == (java.lang.Long.SIZE)) && (!(actionIds.contains(ActionKeys.VIEW))))) { throw new com.liferay.portal.kernel.exception.SystemException((\"There are too many actions for resource \" + name)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/4166/buggy-version/portal-impl.src.com.liferay.portal.service.impl.ResourceActionLocalServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "17ae848b3920fd56fcd3c53172c9b1fd77b56c5e", "Url": "https://api.github.com/repos/mbowerman/liferay-portal", "Date": "2016-06-21T00:13:21Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (data == null) { throw new java.lang.IllegalArgumentException(\"The date can't be null.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/1197/buggy-version/src.main.java.br.com.caelum.argentum.modelo.CandleStick.java", "BodyUseAPI": [], "Fixed commit": "a9903aaad7428dd1fbc7568b67907ad79320be66", "Url": "https://api.github.com/repos/VictorGee/fj22-argentum", "Date": "2014-10-01T00:49:59Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((((abertura < 0) || (fechamento < 0)) || (minimo < 0)) || (maximo < 0)) || (volume < 0)) { throw new java.lang.IllegalArgumentException(\"None of the values can be negative.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/1197/buggy-version/src.main.java.br.com.caelum.argentum.modelo.CandleStick.java", "BodyUseAPI": [], "Fixed commit": "a9903aaad7428dd1fbc7568b67907ad79320be66", "Url": "https://api.github.com/repos/VictorGee/fj22-argentum", "Date": "2014-10-01T00:49:59Z"},
{"Line": "=>911", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (Constants.NIntAnnotationFQ.equals(downgradeAnnotation)) { aNInt = newMarker(aNInt, org.moe.natjgen.ModifierEditor.NInt); }else if (Constants.NUIntAnnotationFQ.equals(downgradeAnnotation)) { aNUInt = newMarker(aNUInt, org.moe.natjgen.ModifierEditor.NUInt); }else if (downgradeAnnotation == null) { aNFloat = null; aNInt = null; aNUInt = null; }else { throw new java.lang.IllegalArgumentException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/4542/buggy-version/src.main.java.org.moe.natjgen.ModifierEditor.java", "BodyUseAPI": ["Constants.NUIntAnnotationFQ.equals(java.lang.String)"], "Fixed commit": "0c118e3eb1023570cd4223a6c6217c43c6cf5777", "Url": "https://api.github.com/repos/multi-os-engine/moe-natjgen", "Date": "2016-12-02T16:57:24Z"},
{"Line": "=>369", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (android.text.TextUtils.isEmpty(mQuantityEditText.getText().toString().trim())) { quantityString = \"0\"; }else { quantityString = mQuantityEditText.getText().toString().trim(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/4916/buggy-version/app.src.main.java.pl.lukaszpelczar.p10_udacity_inventory.DetailActivity.java", "BodyUseAPI": ["mQuantityEditText.getText().toString().trim()", "android.widget.EditText.getText()", "mQuantityEditText.getText().toString()"], "Fixed commit": "ab4981557814a38d80ef3d6386b7b1e58f449468", "Url": "https://api.github.com/repos/lpelczar/P10_Udacity_Inventory", "Date": "2017-07-03T11:13:16Z"},
{"Line": "=>349", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (android.text.TextUtils.isEmpty(mQuantityEditText.getText().toString().trim())) { quantityString = \"0\"; }else { quantityString = mQuantityEditText.getText().toString().trim(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/4916/buggy-version/app.src.main.java.pl.lukaszpelczar.p10_udacity_inventory.DetailActivity.java", "BodyUseAPI": ["mQuantityEditText.getText().toString().trim()", "mQuantityEditText.getText().toString()", "android.widget.EditText.getText()"], "Fixed commit": "ab4981557814a38d80ef3d6386b7b1e58f449468", "Url": "https://api.github.com/repos/lpelczar/P10_Udacity_Inventory", "Date": "2017-07-03T11:13:16Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != dflt) entityManager.createQuery(\"UPDATE GroupModel SET dflt=:state WHERE id<>:groupid\").setParameter(\"state\", false).setParameter(\"groupid\", groupid).executeUpdate();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/3162/buggy-version/src.main.java.com.sergiienko.xrserver.web.resources.AdminResource.java", "BodyUseAPI": [], "Fixed commit": "1f191bd669a77fc919c8cf1317d4808e2758d052", "Url": "https://api.github.com/repos/fycth/exchange-rates-server", "Date": "2015-11-19T20:26:00Z"},
{"Line": "=>1579", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.concurrent.ConcurrentMap<java.lang.String, org.apache.ignite.internal.processors.cache.DynamicCacheDescriptor>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (desc != null) desc.onStart();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/1116/buggy-version/modules.core.src.main.java.org.apache.ignite.internal.processors.cache.GridCacheProcessor.java", "BodyUseAPI": ["org.apache.ignite.internal.processors.cache.DynamicCacheDescriptor.onStart()"], "Fixed commit": "29cd3dbc510a14b001722de212312c915085dc4a", "Url": "https://api.github.com/repos/apache/ignite", "Date": "2015-09-23T00:57:09Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.concurrent.ConcurrentMap<java.lang.Integer, com.orientechnologies.orient.server.OClientConnection>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (connection != null) connection.protocol = protocol;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/4956/buggy-version/server.src.main.java.com.orientechnologies.orient.server.OClientConnectionManager.java", "BodyUseAPI": [], "Fixed commit": "3ba4efa929bb9ca46e8c3b6c921b5ffee03e61a2", "Url": "https://api.github.com/repos/Blackspark/orientdb", "Date": "2014-06-05T15:14:49Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.src.OldDaysTextureManager.getField(java.lang.Class,net.minecraft.src.TexturePackList,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (texpack instanceof net.minecraft.src.TexturePackDefault) { try { texpack.getResourceAsStream((\"/\" + (str[i]))); } catch (java.lang.Exception e) { entryCache.put(str[i], false); return false; } }else if (texpack instanceof net.minecraft.src.TexturePackFolder) { java.io.File orig = ((java.io.File) (mod_OldDays.getField(net.minecraft.src.TexturePackImplementation.class, texpack, 2))); java.io.File file = new java.io.File(orig, str[i]); boolean b = file.exists(); entryCache.put(str[i], b); if (!b) { return false; } }else { java.util.zip.ZipFile file = ((java.util.zip.ZipFile) (mod_OldDays.getField(net.minecraft.src.TexturePackCustom.class, texpack, 0))); boolean b = (file.getEntry(str[i])) != null; entryCache.put(str[i], b); if (!b) { return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/1945/buggy-version/src.client.olddays.core.OldDaysTextureManager.java", "BodyUseAPI": ["net.minecraft.src.OldDaysTextureManager.getField(java.lang.Class,net.minecraft.src.ITexturePack,int)", "net.minecraft.src.ITexturePack.getResourceAsStream(java.lang.String)", "net.minecraft.src.OldDaysTextureManager.getField(java.lang.Class,net.minecraft.src.ITexturePack,int)"], "Fixed commit": "fb6dfabdd7230998af677d7ca6cc39529deec590", "Url": "https://api.github.com/repos/Exalm/Minecraft-mods", "Date": "2013-04-03T11:31:19Z"},
{"Line": "=>648", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["DatabaseManager<Task>.getInstance(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((!(storedTask.getIsDone())) && ((storedTask.getDateList().size()) > 0)) { java.util.ArrayList<DatePair> dp = storedTask.getDateList(); for (int j = 0; j < (dp.size()); j++) { if (t.isWithinPeriod(dp.get(j))) { isConflict = true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/1348/buggy-version/src.Logic.java", "BodyUseAPI": ["Task.getDateList()"], "Fixed commit": "0898563b5010bc61110791f76c283076fad380b8", "Url": "https://api.github.com/repos/cs2103aug2014-w11-4j/main", "Date": "2014-10-22T02:36:31Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portal.kernel.xml.Element.attributeValue(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (className.equals(com.liferay.portal.model.Repository.class.getName())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/7129/buggy-version/portal-impl.src.com.liferay.portlet.documentlibrary.lar.FileEntryStagedModelDataHandler.java", "BodyUseAPI": [], "Fixed commit": "33fd089fde0b007b8a37f6bd13d16c95fb3032ff", "Url": "https://api.github.com/repos/hhuijser/liferay-portal", "Date": "2013-04-30T08:42:58Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.dynmap.markers.MarkerSet.createPolyLineMarker(java.lang.String,(\"\" + (c.getLowWind().getSpeed())),boolean,c.getWorld().getName(),double[],double[],double[],boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (l == null) { l = windSet.findPolyLineMarker(windid); if (l == null) { org.bukkit.Bukkit.getServer().getLogger().severe(\"Failed to create Wind display.\"); }else { l.setCornerLocations(xline, yline, zline); l.setLabel((\"\" + (c.getLowWind().getSpeed()))); } }else { l.setLineStyle(1, 2, Color.BLACK.asRGB()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/7139/buggy-version/LivelyWorld.src.main.java.com.kylantraynor.livelyworld.hooks.DynmapHook.java", "BodyUseAPI": ["org.dynmap.markers.PolyLineMarker.setLineStyle(int,int,Color.BLACK.asRGB())"], "Fixed commit": "e951229e3f99e917ff2837bda58b0c0727d0f143", "Url": "https://api.github.com/repos/KylanTraynor/LivelyWorld", "Date": "2017-08-03T12:40:25Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(imageFile.equals(\"\"))) { java.awt.Image image = com.clarkparsia.sbol.editor.Images.getActionImage(imageFile); if (image != null) { image = com.clarkparsia.sbol.editor.Images.scaleImageToWidth(image, 16); return new javax.swing.ImageIcon(image); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/3075/buggy-version/src.main.java.com.clarkparsia.sbol.editor.SBOLEditorAction.java", "BodyUseAPI": ["com.clarkparsia.sbol.editor.Images.getActionImage(java.lang.String)"], "Fixed commit": "788bb134b3a907b0d418b529181b36c99740c2eb", "Url": "https://api.github.com/repos/SynBioDex/SBOLDesigner", "Date": "2017-03-27T21:40:53Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (msg instanceof io.netty.handler.codec.http.websocketx.PingWebSocketFrame) { io.netty.handler.codec.http.websocketx.PingWebSocketFrame pingWebSocketFrame = ((io.netty.handler.codec.http.websocketx.PingWebSocketFrame) (msg)); ctx.writeAndFlush(new io.netty.handler.codec.http.websocketx.PongWebSocketFrame(pingWebSocketFrame.content())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/5238/buggy-version/http.org.wso2.carbon.transport.http.netty.src.main.java.org.wso2.carbon.transport.http.netty.listener.WebSocketSourceHandler.java", "BodyUseAPI": [], "Fixed commit": "157099466f20bb043514fc220db4df7fe4b77e79", "Url": "https://api.github.com/repos/irunika/carbon-transports", "Date": "2017-04-07T09:36:27Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.getParticipants().length) == (participants_JBu.size())) { jb.setText((((event.getParticipants()[participants_JBu.indexOf(evt.getSource())].getNom()) + \" \") + (event.getParticipants()[participants_JBu.indexOf(evt.getSource())].getPrenom()))); }else { participants_JBu.remove(evt.getSource()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/6232/buggy-version/IHM_v3.src.m2105_ihm.ui.PlanningUI.java", "BodyUseAPI": ["javax.swing.JButton.setText((((event.getParticipants()[participants_JBu.indexOf(evt.getSource())].getNom()) + \" \") + (event.getParticipants()[participants_JBu.indexOf(evt.getSource())].getPrenom())))", "java.util.ArrayList<javax.swing.JButton>.indexOf(java.lang.Object)", "m2105_ihm.nf.Evenement.getParticipants()", "java.util.ArrayList<javax.swing.JButton>.indexOf(java.lang.Object)", "m2105_ihm.nf.Evenement.getParticipants()", "java.util.ArrayList<javax.swing.JButton>.remove(java.lang.Object)", "event.getParticipants()[participants_JBu.indexOf(evt.getSource())].getNom()", "event.getParticipants()[participants_JBu.indexOf(evt.getSource())].getPrenom()"], "Fixed commit": "1ecca31275113b5070286b44cc922f6c0dd79f50", "Url": "https://api.github.com/repos/Armand0s/IHM_v2", "Date": "2015-06-12T13:40:01Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (this.controleur.retirerParticipantEvenement(currentEvt.getParticipants()[participants_JBu.indexOf(e.getSource())])) { java.lang.System.out.println(\"blbl\"); participants_JBu.remove(e.getSource()); setValuesParticipants(event); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/6232/buggy-version/IHM_v3.src.m2105_ihm.ui.PlanningUI.java", "BodyUseAPI": ["java.util.ArrayList<javax.swing.JButton>.remove(java.lang.Object)", "java.awt.event.ActionEvent.getSource()"], "Fixed commit": "1ecca31275113b5070286b44cc922f6c0dd79f50", "Url": "https://api.github.com/repos/Armand0s/IHM_v2", "Date": "2015-06-12T13:40:01Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (immunizations.contains(org.ei.drishti.service.reporting.HEPATITIS_0_VALUE)) { mctsReporter.report(child.caseId(), child.thayiCardNumber(), MCTSServiceCode.HEPB0.toString(), reportData.get(org.ei.drishti.service.reporting.REGISTRATION_DATE), child.dateOfBirth()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/4491/buggy-version/drishti-mother-child.src.main.java.org.ei.drishti.service.reporting.ChildReportingService.java", "BodyUseAPI": [], "Fixed commit": "e5ab773a5a3871e887bd8b3a05c28a6e86afa6f2", "Url": "https://api.github.com/repos/SEL-Columbia/dristhi", "Date": "2014-07-08T09:10:25Z"},
{"Line": "=>3429", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jboss.pressgang.ccms.server.rest.v1.RESTv1.find(java.lang.Class,java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(((csNode.getCSNodeType()) == (org.jboss.pressgang.ccms.utils.constants.CommonConstants.CS_NODE_TOPIC)) || ((csNode.getCSNodeType()) == (org.jboss.pressgang.ccms.utils.constants.CommonConstants.CS_NODE_INITIAL_CONTENT_TOPIC)))) { throw new org.jboss.resteasy.spi.NotFoundException(((\"The CSNode with the id of \" + id) + \" does not hold a reference to a topic.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/4171/buggy-version/src.main.java.org.jboss.pressgang.ccms.server.rest.v1.RESTv1.java", "BodyUseAPI": [], "Fixed commit": "1885addc0925736a5ab78f7301aeee4a0274fda8", "Url": "https://api.github.com/repos/pressgang-ccms/PressGangCCMSREST", "Date": "2014-03-27T22:28:39Z"},
{"Line": "=>3464", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jboss.pressgang.ccms.server.utils.EnversUtilities.getRevision(org.jboss.pressgang.ccms.server.rest.v1.RESTv1,java.lang.Class,java.lang.Integer,java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (csNode == null) { throw new org.jboss.resteasy.spi.NotFoundException((\"No CSNode was found with an ID of \" + id)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/4171/buggy-version/src.main.java.org.jboss.pressgang.ccms.server.rest.v1.RESTv1.java", "BodyUseAPI": [], "Fixed commit": "1885addc0925736a5ab78f7301aeee4a0274fda8", "Url": "https://api.github.com/repos/pressgang-ccms/PressGangCCMSREST", "Date": "2014-03-27T22:28:39Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (additionalPredicate.test(this.point)) return java.util.Arrays.asList(this.point);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/6721/buggy-version/rays2.src.org.snowjak.rays.util.KdTree.java", "BodyUseAPI": ["java.util.Arrays.asList(P)"], "Fixed commit": "5503c06df2c694b37ba7c60a8cb3bd60415e342e", "Url": "https://api.github.com/repos/snowjak88/rays2", "Date": "2016-11-07T19:38:21Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rawColumn.value) == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/2906/buggy-version/src.main.java.org.apache.cassandra.cql.jdbc.TypedColumn.java", "BodyUseAPI": [], "Fixed commit": "953f274bbad8d00e88ad5d1c0de03ce859576e91", "Url": "https://api.github.com/repos/sainthxd/cassandra-jdbc", "Date": "2013-04-05T20:04:46Z"},
{"Line": "=>501", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.util.List<java.lang.String>>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((nameList.size()) == 2) { msgBuilder.append(nameList.get(0).trim()).append(\" and \").append(nameList.get(1).trim()).append(\",\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/5152/buggy-version/Library.src.ui.ClerkTabPanel.java", "BodyUseAPI": ["java.util.List<java.lang.String>.get(int)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.String.trim()", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.String.trim()", "java.util.List<java.lang.String>.get(int)", "java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "0303c5555bff5a4f702c6bf344cfedd7be529e3f", "Url": "https://api.github.com/repos/lchsiao/LibraryProject304", "Date": "2014-04-01T09:30:05Z"},
{"Line": "=>979", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mOriginalConnection) == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/4126/buggy-version/src.com.android.services.telephony.TelephonyConnection.java", "BodyUseAPI": [], "Fixed commit": "9296aa05bcf9ca1ce665979baedd330137e8b322", "Url": "https://api.github.com/repos/codeaurora-unofficial/packages-services-Telephony", "Date": "2017-09-28T17:24:45Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (source.hasTop()) { key = source.getTopKey(); }else { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/3122/buggy-version/extensions.datastores.accumulo.src.main.java.mil.nga.giat.geowave.datastore.accumulo.query.QueryFilterIterator.java", "BodyUseAPI": ["org.apache.accumulo.core.iterators.SortedKeyValueIterator<org.apache.accumulo.core.data.Key, org.apache.accumulo.core.data.Value>.getTopKey()"], "Fixed commit": "77a7fbb12a24487ea0fde6e1f0c0fb1b020618d7", "Url": "https://api.github.com/repos/locationtech/geowave", "Date": "2016-07-10T17:32:36Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["database.Member.getMembers(database.User.getByUsername(username))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (memberList == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/2274/buggy-version/ETSN05.BaseBlockSystem.src.database.Project.java", "BodyUseAPI": [], "Fixed commit": "627b0af97337874cf099f65ec9c720c757662951", "Url": "https://api.github.com/repos/Megabuffen/etsn05", "Date": "2014-10-25T17:13:13Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (context == null) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/8038/buggy-version/src.com.umeng.findyou.utils.ClipboardUtil.java", "BodyUseAPI": [], "Fixed commit": "dc9d50802e3ddf52867ca8ce3c2de0be6b7bde38", "Url": "https://api.github.com/repos/bboyfeiyu/sogou_gotyou", "Date": "2013-12-05T07:14:03Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (response.equals(\"\")) com.thesis.dont.loyaltypointadmin.models.ShopModel.mOnSelectListShopResult.onError(\"no data\"); else com.thesis.dont.loyaltypointadmin.models.ShopModel.mOnSelectListShopResult.onSuccess(response.toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/5631/buggy-version/Code.LoyaltyPointAdmin.app.src.main.java.com.thesis.dont.loyaltypointadmin.models.ShopModel.java", "BodyUseAPI": ["java.lang.String.toString()", "com.thesis.dont.loyaltypointadmin.models.ShopModel.OnSelectListShopResult.onSuccess(java.lang.String)"], "Fixed commit": "e9fbc857d2bb6e7ae7103cdf322de114f47d122a", "Url": "https://api.github.com/repos/loyalty-point/Thesis", "Date": "2015-03-09T15:50:46Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (alleleNo < (alleleFrequencies.get(pop).size())) if ((alleleFrequencies.get(pop).get(alleleNo)) > bestFreq) { bestFreq = alleleFrequencies.get(pop).get(alleleNo); bestPop = pop; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/7414/buggy-version/jannovar-vardbs.src.main.java.de.charite.compbio.jannovar.vardbs.exac.ExacRecord.java", "BodyUseAPI": ["alleleFrequencies.get(pop).get(int)", "com.google.common.collect.ImmutableSortedMap<de.charite.compbio.jannovar.vardbs.exac.ExacPopulation, com.google.common.collect.ImmutableList<java.lang.Double>>.get(de.charite.compbio.jannovar.vardbs.exac.ExacPopulation)", "alleleFrequencies.get(pop).get(int)", "com.google.common.collect.ImmutableSortedMap<de.charite.compbio.jannovar.vardbs.exac.ExacPopulation, com.google.common.collect.ImmutableList<java.lang.Double>>.get(de.charite.compbio.jannovar.vardbs.exac.ExacPopulation)"], "Fixed commit": "5df11ebbff227b0357ebf50664df05bc38b8d3ea", "Url": "https://api.github.com/repos/holtgrewe/jannovar", "Date": "2017-03-30T15:55:27Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (alleleNo < (getAlleleFrequencies(popWithHighestAlleleFreq(alleleNo)).size())) result = java.lang.Math.max(result, getAlleleFrequencies(popWithHighestAlleleFreq(alleleNo)).get(alleleNo));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/7414/buggy-version/jannovar-vardbs.src.main.java.de.charite.compbio.jannovar.vardbs.exac.ExacRecord.java", "BodyUseAPI": ["de.charite.compbio.jannovar.vardbs.exac.ExacRecord.getAlleleFrequencies(de.charite.compbio.jannovar.vardbs.exac.ExacPopulation)", "com.google.common.collect.ImmutableList<java.lang.Double>.get(int)", "java.lang.Math.max(double,getAlleleFrequencies(popWithHighestAlleleFreq(alleleNo)).get(alleleNo))", "de.charite.compbio.jannovar.vardbs.exac.ExacRecord.popWithHighestAlleleFreq(int)"], "Fixed commit": "5df11ebbff227b0357ebf50664df05bc38b8d3ea", "Url": "https://api.github.com/repos/holtgrewe/jannovar", "Date": "2017-03-30T15:55:27Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((coverHelper) != null) coverHelper.setCachedCoverMaxSize(coverArt.getMeasuredHeight());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/1710/buggy-version/MPDroid.src.com.namelessdev.mpdroid.fragments.NowPlayingSmallFragment.java", "BodyUseAPI": [], "Fixed commit": "e47a9ffc0e50860096eb47450dcb3da1f1275657", "Url": "https://api.github.com/repos/tburke/dmix", "Date": "2013-07-21T16:02:49Z"},
{"Line": "=>757", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((net.grinder.script.Grinder.grinder) != null) { Grinder.grinder.getLogger().info(\"thread-{} is sleeping {} ms for ramp-up\", threadNumber, waitingTime); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/7230/buggy-version/ngrinder-runtime.src.main.java.net.grinder.engine.process.GrinderProcess.java", "BodyUseAPI": [], "Fixed commit": "d689e69133af0be207e493e46670684cdf69fa96", "Url": "https://api.github.com/repos/nhnopensource/ngrinder", "Date": "2014-01-20T04:17:47Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (tokenizer.hasMoreTokens()) { java.lang.String first_argument = tokenizer.nextToken(); commandList.add(first_argument); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/1043/buggy-version/sda.src.main.java.org.scigap.iucig.filemanager.util.StringUtils.java", "BodyUseAPI": ["java.util.StringTokenizer.nextToken()"], "Fixed commit": "4a668deaad7ee57686a5ae2f726a318931ae40a7", "Url": "https://api.github.com/repos/SciGaP/IUGateway", "Date": "2014-05-04T19:07:51Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(mKidsId.isEmpty())) mServerMachine.subHostAccept(mSubHostAcceptListener, mSubHostId, mKidsId); else mServerMachine.subHostDeny(mSubHostDenyListener, subHostId);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/4219/buggy-version/app.src.main.java.com.kidsdynamic.swing.androidswingapp.WatchOperatorReplyToSubHost.java", "BodyUseAPI": ["com.kidsdynamic.swing.androidswingapp.ServerMachine.subHostAccept(ServerMachine.subHostAcceptListener,int,java.util.List<java.lang.Integer>)"], "Fixed commit": "148bb27b4191cf0498ab9dd40de4c60fa5f223b1", "Url": "https://api.github.com/repos/kidsdynamic/AndroidSwingApp", "Date": "2017-02-28T17:37:05Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((selectedZone) != null) && (!(zones.containsKey(selectedZone)))) { selectedZone = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/2347/buggy-version/common.bigearth.CityZonesView.java", "BodyUseAPI": [], "Fixed commit": "224110fb3a75e8467aef5661182065cc978c37e7", "Url": "https://api.github.com/repos/jason17055/bigearth", "Date": "2013-01-12T00:11:21Z"},
{"Line": "=>390", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (net.pms.configuration.RendererConfiguration.pmsConfiguration.isRendererForceDefault()) { net.pms.configuration.RendererConfiguration.LOGGER.trace(((\"Forcing renderer match to \\\"\" + (net.pms.configuration.RendererConfiguration.defaultConf.getRendererName())) + \"\\\"\")); return net.pms.configuration.RendererConfiguration.defaultConf; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/3168/buggy-version/src.main.java.net.pms.configuration.RendererConfiguration.java", "BodyUseAPI": [], "Fixed commit": "fbdf032e961e51c55346a0627ae331c423752be0", "Url": "https://api.github.com/repos/UniversalMediaServer/UniversalMediaServer", "Date": "2014-08-21T23:13:14Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((iMAGE.length()) == 0) { IMAGE = \"none\"; }else { IMAGE = iMAGE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/1766/buggy-version/src.com.sciquizapp.sciquizserver.questions.QuestionMultipleChoice.java", "BodyUseAPI": [], "Fixed commit": "7f246036bbe13d0bccd3608d9c61cbdada3867df", "Url": "https://api.github.com/repos/maximerchrd/sciquiz_server", "Date": "2017-12-03T22:24:38Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((iMAGE.length()) == 0) { IMAGE = \"none\"; }else { IMAGE = iMAGE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/1766/buggy-version/src.com.sciquizapp.sciquizserver.questions.QuestionMultipleChoice.java", "BodyUseAPI": [], "Fixed commit": "7f246036bbe13d0bccd3608d9c61cbdada3867df", "Url": "https://api.github.com/repos/maximerchrd/sciquiz_server", "Date": "2017-12-03T22:24:38Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasNoConsumers()) { return Ack.HALT; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/3126/buggy-version/src.main.java.com.orctom.rmq.Queue.java", "BodyUseAPI": [], "Fixed commit": "b3d38f8a363a5bd4af90c5f257506243ccea7649", "Url": "https://api.github.com/repos/orctom/rmq", "Date": "2017-01-05T11:58:22Z"},
{"Line": "=>2082", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (m.isBridge()) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/6680/buggy-version/zkbind.src.org.zkoss.bind.impl.BinderImpl.java", "BodyUseAPI": [], "Fixed commit": "15048c46102d5b6d18d6480844bbcf4eaafab856", "Url": "https://api.github.com/repos/shenliow/zk", "Date": "2016-09-08T08:58:01Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<jkanvas.groups.RenderGroup.RenderpassPosition>.hashCode()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((members.hashCode()) != oldHash) { redoLayout = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/5213/buggy-version/src.main.java.jkanvas.groups.RenderGroup.java", "BodyUseAPI": [], "Fixed commit": "8b7a3dc9249bb02dd51c0d347ebb6f1c95f80b26", "Url": "https://api.github.com/repos/JosuaKrause/Kanvas", "Date": "2013-02-21T01:21:47Z"},
{"Line": "=>411", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(p.pass.isVisible())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/5213/buggy-version/src.main.java.jkanvas.groups.RenderGroup.java", "BodyUseAPI": [], "Fixed commit": "8b7a3dc9249bb02dd51c0d347ebb6f1c95f80b26", "Url": "https://api.github.com/repos/JosuaKrause/Kanvas", "Date": "2013-02-21T01:21:47Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(p.pass.isVisible())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/5213/buggy-version/src.main.java.jkanvas.groups.LinearGroup.java", "BodyUseAPI": [], "Fixed commit": "8b7a3dc9249bb02dd51c0d347ebb6f1c95f80b26", "Url": "https://api.github.com/repos/JosuaKrause/Kanvas", "Date": "2013-02-21T01:21:47Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (records.isEmpty()) { return new java.util.ArrayList<>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/2523/buggy-version/components.analytics-core.org.wso2.carbon.analytics.dataservice.core.src.main.java.org.wso2.carbon.analytics.dataservice.core.indexing.sort.RecordSortUtils.java", "BodyUseAPI": [], "Fixed commit": "7419ada47e29885d464c286a9fd847b44947398c", "Url": "https://api.github.com/repos/sajithshn/carbon-analytics-common", "Date": "2016-06-21T06:34:08Z"},
{"Line": "=>452", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, com.norconex.collector.http.processor.impl.ImageCache>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (imgCache == null) { imgCache = new com.norconex.collector.http.processor.impl.ImageCache(imageCacheSize, new java.io.File(imageCacheDir)); com.norconex.collector.http.processor.impl.FeaturedImageProcessor.IMG_CACHES.put(imageCacheDir, imgCache); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/4544/buggy-version/norconex-collector-http.src.main.java.com.norconex.collector.http.processor.impl.FeaturedImageProcessor.java", "BodyUseAPI": [], "Fixed commit": "e6899d416ae88c108078a834900e7eb60dec560a", "Url": "https://api.github.com/repos/Norconex/collector-http", "Date": "2017-10-01T20:14:38Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["passwordValue.getText().toString()", "emailValue.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((email.length()) > 0) && ((password.length()) > 0)) { signIn(email, password); }else { android.widget.Toast.makeText(this, \"Sign in failed.\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/4536/buggy-version/app.src.main.java.mobileappdev.assassingame.LogInActivity.java", "BodyUseAPI": ["mobileappdev.assassingame.LogInActivity.3.signIn(java.lang.String,java.lang.String)"], "Fixed commit": "ed6fae40f50c90ee4979025b9b9e8507e47b8ba2", "Url": "https://api.github.com/repos/kschmitt1994/AssassinGame", "Date": "2017-03-18T17:54:50Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((blocks.get((((blocks.size()) - 1) - i))) != null) { int j = 0; while (j < (missiles.size())) { if ((blocks.get((((blocks.size()) - 1) - i)).checkCollisions(missiles.get(j).getBulletLocation())) == true) { missiles.remove(j); }else { j++; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/3894/buggy-version/src.Blockades.java", "BodyUseAPI": ["java.util.List<Block>.get((((blocks.size()) - 1) - i))", "java.util.List<Block>.size()", "blocks.get((((blocks.size()) - 1) - i)).checkCollisions(missiles.get(j).getBulletLocation())"], "Fixed commit": "adad270e08770c1bb3fbf48f9dfbf34cff468350", "Url": "https://api.github.com/repos/tpollard/Space-Invaders", "Date": "2011-11-30T15:39:20Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (trimmed.isEmpty()) { ts = new edu.jhu.hlt.concrete.TextSpan(charOff, endTextOffset); }else { java.util.AbstractMap.SimpleImmutableEntry<java.lang.Integer, java.lang.Integer> pads = edu.jhu.hlt.concrete.ingesters.webposts.Util.trimSpacing(hlText); ts = new edu.jhu.hlt.concrete.TextSpan((charOff + (pads.getKey())), (endTextOffset - (pads.getValue()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/8331/buggy-version/ingesters.webposts.src.main.java.edu.jhu.hlt.concrete.ingesters.webposts.Util.java", "BodyUseAPI": [], "Fixed commit": "b8cc2b0bd5f9f5a3d1d0efc66368d305ed0e21ef", "Url": "https://api.github.com/repos/hltcoe/concrete-java", "Date": "2017-09-10T14:35:14Z"},
{"Line": "=>366", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gov.gtas.parsers.pnrgov.segment.SSR.getFreeText()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (chkString.startsWith(\"//P\")) { chkString = chkString.substring(0, chkString.length()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/3116/buggy-version/gtas-parent.gtas-parsers.src.main.java.gov.gtas.parsers.pnrgov.PnrUtils.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "ba0d8a46da62988da168bb4395c36c0fae641b54", "Url": "https://api.github.com/repos/US-CBP/GTAS", "Date": "2017-04-13T16:03:15Z"},
{"Line": "=>521", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.movielabs.mddflib.util.xml.RatingSystem.factory(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (rSystem == null) { java.lang.String msg = (\"Unrecognized Rating System '\" + system) + \"'\"; java.lang.String explanation = null; logIssue(LogMgmt.TAG_CR, LogMgmt.LEV_ERR, rSysEl, msg, explanation, null, logMsgSrcId); curFileIsValid = false; continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/2311/buggy-version/mddf-lib.src.com.movielabs.mddflib.util.AbstractValidator.java", "BodyUseAPI": [], "Fixed commit": "10f245e239a9311e6af545cb6b0c428975396138", "Url": "https://api.github.com/repos/MovieLabs/mddf", "Date": "2017-02-10T21:39:21Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pi.interpreter.CommandProcessor.getCmd(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (cmd == null) { displayer.out.println(((args[0]) + \" : command not found\")); return pi.interpreter.CommandProcessor.EXIT_FAILURE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/3334/buggy-version/src.pi.interpreter.CommandProcessor.java", "BodyUseAPI": [], "Fixed commit": "58b9290ffe3b601f9cd07106eab083e17b9b1478", "Url": "https://api.github.com/repos/sipi/Interpreter", "Date": "2012-06-14T13:46:37Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((e.getEntityItem()) == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/6073/buggy-version/betterchests_common.aroma1997.betterchests.UpgradeHelper.java", "BodyUseAPI": [], "Fixed commit": "406c18ad1d35657140ff7c95e4c5173c910810a1", "Url": "https://api.github.com/repos/Aroma1997/BetterChests", "Date": "2013-11-08T19:08:08Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (world.isRemote) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/6073/buggy-version/betterchests_common.aroma1997.betterchests.UpgradeHelper.java", "BodyUseAPI": [], "Fixed commit": "406c18ad1d35657140ff7c95e4c5173c910810a1", "Url": "https://api.github.com/repos/Aroma1997/BetterChests", "Date": "2013-11-08T19:08:08Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gson.Gson.fromJson(java.lang.String,java.lang.reflect.Type)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (temp != null) { tasks = temp; }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/6473/buggy-version/app.src.main.java.com.iesebre.dam2.amayor.todos.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "6050e29585554085878e43d9729ac38b8c54e36a", "Url": "https://api.github.com/repos/albertmayor/todos", "Date": "2015-11-20T15:52:59Z"},
{"Line": "=>502", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (wkb == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/386/buggy-version/core.src.main.java.geodb.GeoDB.java", "BodyUseAPI": [], "Fixed commit": "f8e6f75b7de5b488878550482691cd76d9048401", "Url": "https://api.github.com/repos/lonnyj/geodb", "Date": "2014-03-06T16:04:19Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCurrentLocation) != null) addresses = geocoder.getFromLocation(mCurrentLocation.getLatitude(), mCurrentLocation.getLongitude(), 1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/6766/buggy-version/app.src.main.java.com.geeky7.rohit.flash_a.services.LocationService.java", "BodyUseAPI": [], "Fixed commit": "8062135ba0c97e59b1d51b06255b74d2eb32014d", "Url": "https://api.github.com/repos/kumar7rk/FLASH-A", "Date": "2017-12-09T10:43:40Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((splitted.length) == 2) { java.lang.String key = splitted[0].trim(); java.lang.String value = splitted[1].trim(); property = new org.editorconfig.netbeans.model.EditorConfigProperty(key, value); }else { throw new org.editorconfig.netbeans.parser.InvalidPropertyException((\"Invalid property: \" + line)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/8953/buggy-version/src.main.java.org.editorconfig.netbeans.parser.EditorConfigParser.java", "BodyUseAPI": ["java.lang.String.trim()", "java.lang.String.trim()"], "Fixed commit": "e1843b999b190b4b8e1a309a6476d0094481be26", "Url": "https://api.github.com/repos/we-love-coding/editorconfig-netbeans", "Date": "2014-10-06T14:15:32Z"},
{"Line": "=>627", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (fileOutput.exists()) { org.apache.commons.io.FileUtils.forceDelete(fileOutput); fileOutput = new java.io.File(org.silverpeas.util.FileRepositoryManager.getTemporaryPath(), ((getComponentId()) + (com.stratelia.silverpeas.infoLetter.control.InfoLetterSessionController.EXPORT_CSV_NAME))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/1848/buggy-version/infoletter.infoletter-war.src.main.java.com.stratelia.silverpeas.infoLetter.control.InfoLetterSessionController.java", "BodyUseAPI": ["org.apache.commons.io.FileUtils.forceDelete(java.io.File)"], "Fixed commit": "4d59c82507db888dad8117b7b8e26a8906f8b9f9", "Url": "https://api.github.com/repos/SilverTeamWork/Silverpeas-Components", "Date": "2015-01-13T15:24:41Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(MainActivity.userName.isEmpty())) { mainMenu(com.comsci.michelaustin.comscisummative.menuopening.class); finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/3393/buggy-version/app.src.main.java.com.comsci.michelaustin.comscisummative.firstopening.java", "BodyUseAPI": [], "Fixed commit": "57acb3b6a540d652e97c60891beebcbb71bf4a0d", "Url": "https://api.github.com/repos/Mivezo/ComsciSummativeMVAW", "Date": "2017-11-29T15:51:27Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (temp == 0) { target = getWeeklyAverage(week); }else { java.lang.Long configAverage = preferences.getLong(AppConstants.PREF_AVG_SWIPE_MILLIS, 0L); target = ((configAverage * (c.getCount())) - totalDiffTime) / temp; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/2928/buggy-version/app.src.main.java.com.overclocked.timeit.common.DatabaseHandler.java", "BodyUseAPI": [], "Fixed commit": "2008275864443835cff5199b07e12628dd13b950", "Url": "https://api.github.com/repos/mthahaseen/TimeIT", "Date": "2016-04-29T10:09:15Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.worlds.prudnikoff.worlds.CategoryWordsActivity.adapter) != null) com.worlds.prudnikoff.worlds.CategoryWordsActivity.adapter.notifyDataSetChanged();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/7794/buggy-version/Worlds.app.src.main.java.com.worlds.prudnikoff.worlds.CategoryWordsActivity.java", "BodyUseAPI": [], "Fixed commit": "24746c98d9ea7ac31d30755c8d8bdcdedda1d7d0", "Url": "https://api.github.com/repos/prudnikoff/Android", "Date": "2017-08-31T19:41:51Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jenkinsci.plugins.ewm.steps.ExwsAllocateExecution.findAction(lastStablePipeline.getExecution().getCurrentHeads())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (exwsAllocateAction == null) { java.lang.String message = java.lang.String.format(\"The Jenkins job '%s' does not have registered any 'External Workspace Allocate' action\", upstreamName); throw new hudson.AbortException(message); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/8658/buggy-version/src.main.java.org.jenkinsci.plugins.ewm.steps.ExwsAllocateExecution.java", "BodyUseAPI": [], "Fixed commit": "3a34b38f10181c0292fbe9393f625cec947dfbac", "Url": "https://api.github.com/repos/alexsomai/external-workspace-manager-plugin", "Date": "2016-06-06T15:45:01Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (root == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/975/buggy-version/src.randd.c4.BTreeCommonAncestor.java", "BodyUseAPI": [], "Fixed commit": "46f8c77e139f69fcefef51bdc8c9806853f483e9", "Url": "https://api.github.com/repos/rgehring/problems", "Date": "2014-03-04T00:38:41Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(current_token.isNull())) { current_token = incrementToken(current_token); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/7022/buggy-version/Lexer.java", "BodyUseAPI": ["Lexer.incrementToken(Token)"], "Fixed commit": "b0f3a96609ce6c3c6019397d4dfabf1c7c8ccdcb", "Url": "https://api.github.com/repos/antonyliang/bestCompiler", "Date": "2015-02-23T22:21:11Z"},
{"Line": "=>275", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(headerText.contains(\".\"))) { threadOffset = java.lang.Integer.valueOf(headerText); thisElementIsStaticCounter = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/5453/buggy-version/Flocal.src.main.java.ru.ith.lib.flocal.FLDataLoader.java", "BodyUseAPI": ["java.lang.Integer.valueOf(java.lang.String)"], "Fixed commit": "5b367a557bebd8a7aa25f0971d75aa2ce8e6aa5a", "Url": "https://api.github.com/repos/infthi/flocalapp", "Date": "2013-07-01T10:02:35Z"},
{"Line": "=>396", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((el.getPosition().getZ()) == 0) { el.setDepthTest(false); }else { this.setDepthTest(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/3079/buggy-version/src.main.java.casmi.graphics.object.GraphicsObject.java", "BodyUseAPI": ["casmi.graphics.element.Element.setDepthTest(boolean)"], "Fixed commit": "17e22470bc2f32963831d8d1e23574f57ca8dedd", "Url": "https://api.github.com/repos/casmi/casmi", "Date": "2012-09-08T07:41:26Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isZoom()) { container = com.stratelia.webactiv.util.viewGenerator.html.JavascriptPluginInclusion.includeUserZoom(new org.apache.ecs.ElementContainer()); }else { container = new org.apache.ecs.ElementContainer(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/6397/buggy-version/web-core.src.main.java.com.stratelia.webactiv.util.viewGenerator.html.UserNameTag.java", "BodyUseAPI": [], "Fixed commit": "04de67be55ae190c7b995fc68cb07283a876fa8d", "Url": "https://api.github.com/repos/mmoqui/Silverpeas-Core", "Date": "2012-09-13T15:25:27Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getJspContext().getAttribute(com.stratelia.webactiv.util.viewGenerator.html.MAIN_SESSION_CONTROLLER_ATT,PageContext.SESSION_SCOPE)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (session != null) { return session.getUserId(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/6397/buggy-version/web-core.src.main.java.com.stratelia.webactiv.util.viewGenerator.html.UserNameTag.java", "BodyUseAPI": ["com.stratelia.silverpeas.peasCore.MainSessionController.getUserId()"], "Fixed commit": "04de67be55ae190c7b995fc68cb07283a876fa8d", "Url": "https://api.github.com/repos/mmoqui/Silverpeas-Core", "Date": "2012-09-13T15:25:27Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.silverpeas.util.StringUtil.isDefined(currentUserId)) { if ((!(user.getId().equals(currentUserId))) && (!(com.stratelia.webactiv.beans.admin.UserDetail.isAnonymousUser(currentUserId)))) { userName.setClass(\"userToZoom\"); userName.addAttribute(\"rel\", user.getId()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/6397/buggy-version/web-core.src.main.java.com.stratelia.webactiv.util.viewGenerator.html.UserNameGenerator.java", "BodyUseAPI": ["com.stratelia.webactiv.beans.admin.UserDetail.isAnonymousUser(java.lang.String)", "user.getId().equals(java.lang.String)"], "Fixed commit": "04de67be55ae190c7b995fc68cb07283a876fa8d", "Url": "https://api.github.com/repos/mmoqui/Silverpeas-Core", "Date": "2012-09-13T15:25:27Z"},
{"Line": "=>311", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value instanceof com.thinkaurelius.titan.graphdb.database.serialize.attribute.AbstractDecimal) return ((com.thinkaurelius.titan.graphdb.database.serialize.attribute.AbstractDecimal) (value)).doubleValue();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/1349/buggy-version/titan-solr.src.main.java.com.thinkaurelius.titan.diskstorage.solr.SolrIndex.java", "BodyUseAPI": [], "Fixed commit": "0283730685b23957d8fff8fa06ab1f9fb96646d8", "Url": "https://api.github.com/repos/sumashivaprasad/titan", "Date": "2015-08-01T04:10:58Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (amount < (-100)) amount = -100; else if (amount > 100) amount = 100;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V89/1193/buggy-version/src.cs355.model.drawing.Image.java", "BodyUseAPI": [], "Fixed commit": "04343fe4422153799ee01d97b6a21b2a430f268f", "Url": "https://api.github.com/repos/MarshallGarey/cs355_paint", "Date": "2017-04-17T19:04:10Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result == null) { result = new io.trestle.response.ErrorResponse(404, \"Not found\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/1580/buggy-version/src.main.java.io.trestle.TrestleServlet.java", "BodyUseAPI": [], "Fixed commit": "8f05d127f8fa15f9bc80cd862f074d643ddfa9c6", "Url": "https://api.github.com/repos/dansimpson/trestle", "Date": "2012-04-20T17:46:04Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["conf.get(\"dfs.datanode.data.dir\", \"file:///tmp/\").split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((dataDirs.length) == 1) { idx = 0; }else { while (true) { int i = (java.lang.Math.abs(new java.util.Random(java.lang.System.currentTimeMillis()).nextInt())) % (dataDirs.length); if (i != n) { idx = i; break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/5259/buggy-version/hadoop-tools.hadoop-aliyun.src.main.java.com.aliyun.fs.oss.utils.Utils.java", "BodyUseAPI": [], "Fixed commit": "09990d446f114f1986d28a280440a8d184a0d7a2", "Url": "https://api.github.com/repos/uncleGen/hadoop", "Date": "2016-04-05T07:03:49Z"},
{"Line": "=>758", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (suppressed == null) { suppressed = new org.deidentifier.arx.framework.check.groupify.HashGroupifyEntry(null, 0); suppressed.nextOrdered = null; suppressed.representative = -1; previous.nextOrdered = suppressed; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/355/buggy-version/src.main.org.deidentifier.arx.framework.check.groupify.HashGroupify.java", "BodyUseAPI": [], "Fixed commit": "76265f32d81550b15164cedee76e6102563877e8", "Url": "https://api.github.com/repos/RaffaelBild/arx", "Date": "2016-11-09T11:06:04Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (level == 0) this.blackNextMove = moves[i];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/8432/buggy-version/src.Player.java", "BodyUseAPI": [], "Fixed commit": "54386db2dac8d5b3766ebf6c2e18302107a71aa3", "Url": "https://api.github.com/repos/panpan2/Pawn-race", "Date": "2016-01-10T10:59:57Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (level == 0) this.whiteNextMove = moves[i];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/8432/buggy-version/src.Player.java", "BodyUseAPI": [], "Fixed commit": "54386db2dac8d5b3766ebf6c2e18302107a71aa3", "Url": "https://api.github.com/repos/panpan2/Pawn-race", "Date": "2016-01-10T10:59:57Z"},
{"Line": "=>270", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, java.lang.Object>.get(java.lang.String)", "iinteractive.bullfinch.Phrasebook.getParams(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((rparams.size()) != (reqParams.size())) { throw new java.lang.Exception((((\"Statement expects \" + (reqParams.size())) + \" params but was given \") + (rparams.size()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/1597/buggy-version/src.main.java.iinteractive.bullfinch.minion.JDBCQueryRunner.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.Object>.size()", "java.util.List<iinteractive.bullfinch.Phrasebook.ParamType>.size()"], "Fixed commit": "374193ed1f9d50ae37e4ca8870272079c3d8aeb5", "Url": "https://api.github.com/repos/gphat/bullfinch", "Date": "2012-06-26T19:28:03Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!toBeContinued) { listener.onTransactionEnd(transId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/3105/buggy-version/src.main.java.com.fourcasters.forec.reconciler.server.persist.TradeTaskFactory.java", "BodyUseAPI": [], "Fixed commit": "f9fed92360e3b2c8107d767ce2e5809dd5c8dd1d", "Url": "https://api.github.com/repos/ettoremaiorana/ReconcilerServer", "Date": "2016-12-05T23:01:44Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.userService.findByUsername(username)) != null) { return \"redirect:/registration/step1\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/6737/buggy-version/IvanTerekh.Portfl.src.main.java.com.terekh.portfl.controller.RegestrationController.java", "BodyUseAPI": [], "Fixed commit": "b6f3dbdb3d881bd58d06a2051c775c9026ea06ea", "Url": "https://api.github.com/repos/IvanTerekh/Portfl", "Date": "2017-05-02T15:41:33Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jsoup.nodes.Document.select(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((titles.size()) == 0) { throw new java.io.IOException(\"No title found\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/4142/buggy-version/src.main.java.com.rarchives.ripme.ripper.rippers.FuraffinityRipper.java", "BodyUseAPI": [], "Fixed commit": "5af0f95a3a290c743cb3170ff5c5dd4f2f3e1dc3", "Url": "https://api.github.com/repos/4pr0n/ripme", "Date": "2015-12-19T14:46:43Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (oldVersion == 10) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/2630/buggy-version/OpenKeychain.src.main.java.org.sufficientlysecure.keychain.provider.KeychainDatabase.java", "BodyUseAPI": [], "Fixed commit": "af546ae10190ac076cd7b091cd064fb8a5c03519", "Url": "https://api.github.com/repos/Hiperzone/open-keychain", "Date": "2015-07-08T00:55:35Z"},
{"Line": "=>1540", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((((((level) == 1) || ((level) == 6)) || ((level) == 11)) || ((level) == 16)) || ((level) == 21)) && ((curClick) >= 1)) lose(); else if (((curClick) >= (maxClick[maxClickIndex])) && ((maxClickIndex) < ((maxClick.length) - 1))) (maxClickIndex)++; else if ((curClick) >= (maxClick[3])) lose();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/7436/buggy-version/PrizmPath.PrizmPath-core.src.com.heidenreich.prizmpath.screens.GameScreen.java", "BodyUseAPI": [], "Fixed commit": "b55904f0c5adc9eb9b55c336985956bddbf78c9c", "Url": "https://api.github.com/repos/guitargodd97/PrizmPath", "Date": "2014-05-30T21:19:11Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getContext().getPropertiesAssistant().getProperty(java.lang.String)", "getContext().getPropertiesAssistant().getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((username == null) || (password == null)) { player.close(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/7113/buggy-version/src.main.java.leanderk.izou.spotifyconnect.SAddon.java", "BodyUseAPI": [], "Fixed commit": "99e485f7d7e2413f3abd9f779fdf3fafbe0fb0af", "Url": "https://api.github.com/repos/LeanderK/IzouSpotifyConnect", "Date": "2015-11-08T17:51:12Z"},
{"Line": "=>354", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fr.paris.lutece.plugins.workflow.modules.notifygru.service.TaskNotifyGru.replaceMarkers(config.getEmailBroadcast(),java.util.Map<java.lang.String, java.lang.Object>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (org.apache.commons.lang.StringUtils.isNotEmpty(strRecipientBroadcast)) { listRecipientBroadcast.addAll(java.util.Arrays.asList(strRecipientBroadcast.split(Constants.SEMICOLON))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/419/buggy-version/src.java.fr.paris.lutece.plugins.workflow.modules.notifygru.service.TaskNotifyGru.java", "BodyUseAPI": ["java.util.Arrays.asList(java.lang.String[])", "java.lang.String.split(Constants.SEMICOLON)", "java.util.List<java.lang.String>.addAll(java.util.List)"], "Fixed commit": "bb1464a35fcd3e5020e3af81ba60b6104bb3c0a2", "Url": "https://api.github.com/repos/lutece-secteur-public/gru-module-workflow-notifygru", "Date": "2017-05-19T09:47:15Z"},
{"Line": "=>375", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fr.paris.lutece.plugins.workflow.modules.notifygru.service.TaskNotifyGru.replaceMarkers(config.getRecipientsCcBroadcast(),java.util.Map<java.lang.String, java.lang.Object>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (org.apache.commons.lang.StringUtils.isNotEmpty(strRecipientCcBroadcast)) { listRecipientCcBroadcast.addAll(java.util.Arrays.asList(strRecipientCcBroadcast.split(Constants.SEMICOLON))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/419/buggy-version/src.java.fr.paris.lutece.plugins.workflow.modules.notifygru.service.TaskNotifyGru.java", "BodyUseAPI": ["java.util.Arrays.asList(java.lang.String[])", "java.util.List<java.lang.String>.addAll(java.util.List)", "java.lang.String.split(Constants.SEMICOLON)"], "Fixed commit": "bb1464a35fcd3e5020e3af81ba60b6104bb3c0a2", "Url": "https://api.github.com/repos/lutece-secteur-public/gru-module-workflow-notifygru", "Date": "2017-05-19T09:47:15Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(broadcastNotification.getRecipient().isEmpty())) { notificationObject.addBroadcastEmail(broadcastNotification); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/419/buggy-version/src.java.fr.paris.lutece.plugins.workflow.modules.notifygru.service.TaskNotifyGru.java", "BodyUseAPI": ["fr.paris.lutece.plugins.grubusiness.business.notification.Notification.addBroadcastEmail(fr.paris.lutece.plugins.grubusiness.business.notification.BroadcastNotification)"], "Fixed commit": "bb1464a35fcd3e5020e3af81ba60b6104bb3c0a2", "Url": "https://api.github.com/repos/lutece-secteur-public/gru-module-workflow-notifygru", "Date": "2017-05-19T09:47:15Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (errorResponse != null) { android.util.Log.e(\"REST_API\", errorResponse.toString()); }else { android.util.Log.e(\"REST_API\", (\"failed to connect \" + statusCode)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/329/buggy-version/taxitracker_library.src.main.java.br.ufscar.dc.mds.taxitracker_library.TaxiTrackerRestClientUsage.java", "BodyUseAPI": ["android.util.Log.e(java.lang.String,errorResponse.toString())", "org.json.JSONObject.toString()"], "Fixed commit": "38ce2b7cb78921da56e48ef5093c1e5b715b9ec6", "Url": "https://api.github.com/repos/falcaopetri/taxitracker_library", "Date": "2017-01-14T17:02:13Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<com.samsung.object.QuestionObject>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (serveyOject.getQuestionAnswer().equals(\"0\")) { java.lang.String[] su = questionoption[0].split(\";\"); serveyOject.setQuestionAnswer(su[1]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/645/buggy-version/app.src.main.java.com.samsung.adapter.QuestionAdapter.java", "BodyUseAPI": ["com.samsung.object.QuestionObject.setQuestionAnswer(java.lang.String)"], "Fixed commit": "ac4e10ae9e016e6d81262982ec632262d7a42295", "Url": "https://api.github.com/repos/tuyendt6/NewServeyVersion", "Date": "2016-05-31T06:56:42Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (controller.getLocalUser().getIdUser().equals(controller.getLocalGame().getPlayer1().getProfile().getIdUser())) interfaceCom.notifyReady(controller.getLocalUser(), controller.getLocalGame().getPlayer2()); else interfaceCom.notifyReady(controller.getLocalUser(), controller.getLocalGame().getPlayer1());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/7004/buggy-version/src.main.java.data.CDataTable.java", "BodyUseAPI": ["data.DataController.getLocalUser()", "controller.getLocalGame().getPlayer1()", "lo23.battleship.online.network.COMInterface.notifyReady(controller.getLocalUser(),controller.getLocalGame().getPlayer1())", "lo23.battleship.online.network.COMInterface.notifyReady(controller.getLocalUser(),controller.getLocalGame().getPlayer2())", "data.DataController.getLocalUser()", "data.DataController.getLocalGame()", "controller.getLocalGame().getPlayer2()", "data.DataController.getLocalGame()"], "Fixed commit": "0e0f30808c03da6fff36464ac0b434a439b35fe3", "Url": "https://api.github.com/repos/alexballet/LO23-Battleship-Online", "Date": "2017-12-06T15:28:38Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mStopList.size()) == 0) { android.widget.Toast.makeText(this, \"nothing to clear!\", Toast.LENGTH_SHORT).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/614/buggy-version/app.src.main.java.com.just.stone.activity.ForceStopActivity.java", "BodyUseAPI": [], "Fixed commit": "e0f75b3d6f2b3431f00459413c2d9da012db145b", "Url": "https://api.github.com/repos/justbitguy/stone", "Date": "2016-08-15T11:05:47Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.iis.mto.blog.domain.BlogManager.findOne(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((user.getAccountStatus()) != (edu.iis.mto.blog.domain.model.AccountStatus.CONFIRMED)) { throw new edu.iis.mto.blog.domain.errors.DomainError(\"Only CONFIRMED user can add like to post.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/690/buggy-version/blogapi.src.main.java.edu.iis.mto.blog.domain.BlogManager.java", "BodyUseAPI": [], "Fixed commit": "3108736231ef6a6c6690bd178a2b6ab93ee66d58", "Url": "https://api.github.com/repos/wojteksz128/integration_tests", "Date": "2017-06-16T17:22:45Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (moduleName == null) { return java.util.Collections.emptyList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/933/buggy-version/src.main.java.uk.co.unitycoders.pircbotx.commandprocessor.CommandProcessor.java", "BodyUseAPI": [], "Fixed commit": "7ae85023fd9d1de2fcfbaab271667884a5c42f8c", "Url": "https://api.github.com/repos/unitycoders/uc_pircbotx", "Date": "2014-08-24T14:38:25Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((board.getField(x, y)) instanceof javalab.pk.saper.Model.Bomb) board.bombSetOpened();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/3082/buggy-version/app.src.main.java.javalab.pk.saper.Controller.GameActivity.java", "BodyUseAPI": ["javalab.pk.saper.Model.Board.bombSetOpened()"], "Fixed commit": "656aa7f2f7a9a0b2f2cdfb50ed6061e5f4aea733", "Url": "https://api.github.com/repos/demba003/SaperJava", "Date": "2017-05-30T21:56:13Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["res.getURI().toString()", "org.hawk.workspace.Workspace.getLocation()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (resourceURI.startsWith(prefix)) { resourceURI = resourceURI.substring(prefix.length()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/4611/buggy-version/uk.ac.york.mondo.integration.hawk.emf.emfsplitter.src.uk.ac.york.mondo.integration.hawk.emf.emfsplitter.HawkCrossReferences.java", "BodyUseAPI": ["java.lang.String.substring(int)", "java.lang.String.length()"], "Fixed commit": "5458c798bcd0dc8c497d4ae336ba6561c9288637", "Url": "https://api.github.com/repos/mondo-project/mondo-integration", "Date": "2016-03-17T17:02:34Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((sobremesaRefresco.length) > 1) refresco = sobremesaRefresco[1]; else refresco = \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/6116/buggy-version/src.model.Meal.java", "BodyUseAPI": [], "Fixed commit": "7a5a1e0880659a856de7aa32e8e033a1a21a8bce", "Url": "https://api.github.com/repos/erickpires/Bandeco", "Date": "2014-03-03T00:55:42Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((feijao.length()) > 0) acompanhamento += \" e \" + (feijao);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/6116/buggy-version/src.model.Meal.java", "BodyUseAPI": [], "Fixed commit": "7a5a1e0880659a856de7aa32e8e033a1a21a8bce", "Url": "https://api.github.com/repos/erickpires/Bandeco", "Date": "2014-03-03T00:55:42Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (invokeDirect()) { disposeContainer(); }else { java.lang.System.exit(exitCode); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/5146/buggy-version/src.main.java.com.threerings.getdown.launcher.GetdownApp.java", "BodyUseAPI": [], "Fixed commit": "df5e2e72d2c555278e13bd41065b3487a1f8fbbb", "Url": "https://api.github.com/repos/threerings/getdown", "Date": "2016-01-10T15:54:49Z"},
{"Line": "=>388", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (calendar.getTimeZone().inDaylightTime(calendar.getTime())) offset += calendar.get(java.util.Calendar.DST_OFFSET);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/4357/buggy-version/src.main.java.net.pwall.json.auto.JSONSerializer.java", "BodyUseAPI": ["java.util.Calendar.get(int)"], "Fixed commit": "c7d1fa2e84ca02add4e5166966f07ee220706c50", "Url": "https://api.github.com/repos/pwall567/jsonauto", "Date": "2016-11-17T10:32:51Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (child instanceof org.codeqinvest.web.project.InvestmentOpportunitiesJsonGenerator.PackageNode) { double packageProfit = ((org.codeqinvest.web.project.InvestmentOpportunitiesJsonGenerator.PackageNode) (child)).aggregateProfit(); if (packageProfit > 0.0) { profit += packageProfit; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/1038/buggy-version/web-ui.src.main.java.org.codeqinvest.web.project.InvestmentOpportunitiesJsonGenerator.java", "BodyUseAPI": [], "Fixed commit": "cb78d1ec5ec02fb8e2d9c93df6c653c5ae2aa120", "Url": "https://api.github.com/repos/CodeQInvest/codeq-invest", "Date": "2013-06-21T08:13:29Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.codeqinvest.web.project.InvestmentOpportunitiesJsonGenerator.Node.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (artefactProfit > 0.0) { profit += artefactProfit; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/1038/buggy-version/web-ui.src.main.java.org.codeqinvest.web.project.InvestmentOpportunitiesJsonGenerator.java", "BodyUseAPI": [], "Fixed commit": "cb78d1ec5ec02fb8e2d9c93df6c653c5ae2aa120", "Url": "https://api.github.com/repos/CodeQInvest/codeq-invest", "Date": "2013-06-21T08:13:29Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lastReceivedPose) == null) { lastReceivedPose = droneStateStamped; }else { if ((droneStateStamped.getTimeStampInSeconds()) != (lastReceivedPose.getTimeStampInSeconds())) { break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/5750/buggy-version/src.main.java.commands.WaitForLocalizationDecorator.java", "BodyUseAPI": [], "Fixed commit": "6361b7906f282633ed2e37046666f4d1386c03d5", "Url": "https://api.github.com/repos/KrisC369/BeSwarm", "Date": "2016-07-07T07:47:43Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (patterns.isEmpty()) { return java.util.Collections.<com.jetbrains.jetpad.vclang.term.pattern.CoverageCheker.CoverageCheckingBranch>singletonList(new com.jetbrains.jetpad.vclang.term.pattern.CoverageCheker.CoverageCheckingIncompleteBranch(match(isExplicit, null), java.util.Collections.singletonList(new com.jetbrains.jetpad.vclang.term.pattern.CoverageCheker.CoverageCheckingOKBranch(Index(0), java.util.Collections.<com.jetbrains.jetpad.vclang.term.pattern.Binding>singletonList(new com.jetbrains.jetpad.vclang.term.pattern.TypedBinding(((java.lang.String) (null)), type)), null, match(isExplicit, null))))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/7171/buggy-version/src.main.java.com.jetbrains.jetpad.vclang.term.pattern.CoverageCheker.java", "BodyUseAPI": [], "Fixed commit": "d19fb6587512554e8187e7ce0df80e172b299e8f", "Url": "https://api.github.com/repos/valis/vclang", "Date": "2015-09-25T14:00:03Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) < (Build.VERSION_CODES.HONEYCOMB)) { onSearchRequested(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/4521/buggy-version/src.com.cruzroja.creuroja.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "9cd908eb0376b56c38d328212cca262aaac9f1bb", "Url": "https://api.github.com/repos/darthsuicune/CreuRoja", "Date": "2013-05-07T10:58:54Z"},
{"Line": "=>1501", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (null != roomSummary) { java.lang.String roomSummaryId = roomSummary.getRoomId(); org.matrix.androidsdk.data.Room room = mSession.getDataHandler().getStore().getRoom(roomSummaryId); if (((room != null) && (!(room.isConferenceUserRoom()))) && (room.isInvited())) { if (room.isDirectChatInvitation()) { mDirectChatInvitations.add(room); }else { mRoomInvitations.add(room); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/7440/buggy-version/vector.src.main.java.im.vector.activity.VectorHomeActivity.java", "BodyUseAPI": ["org.matrix.androidsdk.data.RoomSummary.getRoomId()"], "Fixed commit": "5bdfafa20ebd3d8dae6b1731b6e46833abbd5ccf", "Url": "https://api.github.com/repos/vector-im/riot-android", "Date": "2017-09-11T06:39:00Z"},
{"Line": "=>371", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gal.getNetworkcache().get(short)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (_existingnode.isSleepy()) { org.energy_home.jemma.zgd.jaxb.Status _s = new org.energy_home.jemma.zgd.jaxb.Status(); _s.setCode(((short) (0))); _s.setMessage(((\"Successful - \" + funcionName) + \" Algorithm\")); java.lang.System.out.println(((((\"\\n\\rNodeDiscovered Sleepy From LQI__manageChildNode:\" + (java.lang.String.format(\"%04X\", _existingnode.get_node().getAddress().getNetworkAddress()))) + \" from NeighborTableListCount of:\") + (java.lang.String.format(\"%04X\", node.getNetworkAddress()))) + \"\\n\\r\")); getGal().get_gatewayEventManager().nodeDiscovered(_s, _existingnode.get_node()); if (getGal().getPropertiesManager().getDebugEnabled()) { org.energy_home.jemma.javagal.layers.business.implementations.Discovery_Freshness_ForcePing.LOG.info(((((funcionName + \": Found Existing Sleepy Node:\") + (java.lang.String.format(\"%04X\", _existingnode.get_node().getAddress().getNetworkAddress()))) + \" from NeighborTableListCount of:\") + (java.lang.String.format(\"%04X\", node.getNetworkAddress())))); } }else { if (getGal().getPropertiesManager().getDebugEnabled()) { org.energy_home.jemma.javagal.layers.business.implementations.Discovery_Freshness_ForcePing.LOG.info((((\"Found an existing Node:\" + (java.lang.String.format(\"%04X\", newNodeWrapperChild.get_node().getAddress().getNetworkAddress()))) + \" into NeighborTableListCount of:\") + (java.lang.String.format(\"%04X\", node.getNetworkAddress())))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/3616/buggy-version/jemma.osgi.javagal.src.main.java.org.energy_home.jemma.javagal.layers.business.implementations.Discovery_Freshness_ForcePing.java", "BodyUseAPI": ["getGal().get_gatewayEventManager().nodeDiscovered(org.energy_home.jemma.zgd.jaxb.Status,_existingnode.get_node())", "_existingnode.get_node().getAddress()", "org.slf4j.Logger.info(((((funcionName + \": Found Existing Sleepy Node:\") + (java.lang.String.format(\"%04X\", _existingnode.get_node().getAddress().getNetworkAddress()))) + \" from NeighborTableListCount of:\") + (java.lang.String.format(\"%04X\", node.getNetworkAddress()))))", "org.energy_home.jemma.javagal.layers.object.WrapperWSNNode.get_node()", "java.lang.String.format(java.lang.String,_existingnode.get_node().getAddress().getNetworkAddress())", "_existingnode.get_node().getAddress()", "java.lang.String.format(java.lang.String,_existingnode.get_node().getAddress().getNetworkAddress())", "_existingnode.get_node().getAddress().getNetworkAddress()", "org.energy_home.jemma.javagal.layers.object.WrapperWSNNode.get_node()", "_existingnode.get_node().getAddress().getNetworkAddress()", "java.io.PrintStream.println(((((\"\\n\\rNodeDiscovered Sleepy From LQI__manageChildNode:\" + (java.lang.String.format(\"%04X\", _existingnode.get_node().getAddress().getNetworkAddress()))) + \" from NeighborTableListCount of:\") + (java.lang.String.format(\"%04X\", node.getNetworkAddress()))) + \"\\n\\r\"))", "org.energy_home.jemma.javagal.layers.object.WrapperWSNNode.get_node()"], "Fixed commit": "e72e69c2ffa48c1ca9ab20e2d4f294d1a64c3685", "Url": "https://api.github.com/repos/marcoNieddu/jemma", "Date": "2014-10-08T09:59:22Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((productionFrontier == null) || ((productionFrontier.getRules()) == null)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/5696/buggy-version/src.games.strategy.triplea.ai.proAI.data.ProPurchaseOptionMap.java", "BodyUseAPI": [], "Fixed commit": "f5089a0daa929541e13818374bbdc2bdb8c1dde1", "Url": "https://api.github.com/repos/triplea-game/triplea", "Date": "2016-01-04T04:26:44Z"},
{"Line": "=>336", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((uploadStatusGuiListener) != null) { uploadStatusGuiListener.onUploadStatusDateUpdate(date); }else { MyApplication.madcapLogger.d(org.fraunhofer.cese.madcap.services.DataCollectionService.TAG, \"No UploadStatusGuiListener registered\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/574/buggy-version/app.src.main.java.org.fraunhofer.cese.madcap.services.DataCollectionService.java", "BodyUseAPI": [], "Fixed commit": "5af5681701bd56192329e5c18e4fd350ad0bfa52", "Url": "https://api.github.com/repos/FraunhoferCESE/madcap", "Date": "2016-12-21T17:15:58Z"},
{"Line": "=>346", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((uploadStatusGuiListener) != null) { uploadStatusGuiListener.onUploadStatusResultUpdate(text); uploadStatusGuiListener.onUploadStatusProgressUpdate(0); uploadStatusGuiListener.onUploadStatusCompletenessUpdate(org.fraunhofer.cese.madcap.services.INCOMPLETE); }else { MyApplication.madcapLogger.d(org.fraunhofer.cese.madcap.services.DataCollectionService.TAG, \"No UploadStatusGuiListener registered\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/574/buggy-version/app.src.main.java.org.fraunhofer.cese.madcap.services.DataCollectionService.java", "BodyUseAPI": [], "Fixed commit": "5af5681701bd56192329e5c18e4fd350ad0bfa52", "Url": "https://api.github.com/repos/FraunhoferCESE/madcap", "Date": "2016-12-21T17:15:58Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((image) != null) { return image.getUrl(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/5675/buggy-version/app.src.main.java.com.example.nasko.whisper.models.Contact.java", "BodyUseAPI": [], "Fixed commit": "415c187f46b3c1df57f28b17ed0f4bb96bd39913", "Url": "https://api.github.com/repos/aRusenov/Whisper", "Date": "2016-08-01T13:43:12Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ptr.getPrev()) == null) return ptr.getEdge();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/3061/buggy-version/simulator.src.HeatMapRouting.java", "BodyUseAPI": ["PathEdge.getEdge()"], "Fixed commit": "af39f8b68b409c34af74f6904a4e49109974b5f2", "Url": "https://api.github.com/repos/johlits/ds-proj-12", "Date": "2012-12-15T12:59:34Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((actualFinish != null) && (actualFinish.before(getActualStart()))) { actualFinish = getScheduledFinish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/678/buggy-version/src.com.ppm.integration.agilesdk.connector.octane.model.workplan.OctaneWorkItemExternalTask.java", "BodyUseAPI": [], "Fixed commit": "274764559523dfacd0ea8f66ce4308ac2ac02182", "Url": "https://api.github.com/repos/MicroFocus/ppm-octane-connector", "Date": "2017-10-30T08:37:00Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["roguette.Grid.getCell(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((cell.getType()) == (roguette.mouse.Const.WALL)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/4319/buggy-version/src.main.java.roguette.mouse.CatGraph.java", "BodyUseAPI": [], "Fixed commit": "89ffe83353fa80823fbe96e920b37300a38ef3e6", "Url": "https://api.github.com/repos/pjhering/roguette", "Date": "2015-11-23T23:40:04Z"},
{"Line": "=>322", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["3.doneClick()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (close) { onBackPressed(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/105/buggy-version/app.src.main.java.com.klinker.android.twitter.activities.compose.Compose.java", "BodyUseAPI": [], "Fixed commit": "b6aa142a4a4a650a8e52a34960be6e0871289434", "Url": "https://api.github.com/repos/espiguilla/Talon-for-Twitter-mio", "Date": "2017-04-20T19:54:47Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["bg.unisofia.fmi.JavaEE.Cinema.Beans.PricesBean.getAllPrices()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (resultList.isEmpty()) { response.getWriter().print(\"\u0412\u0441\u0435 \u043e\u0449\u0435 \u043d\u044f\u043c\u0430 \u0446\u0435\u043d\u0438.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/7846/buggy-version/src.java.bg.unisofia.fmi.JavaEE.Cinema.Servlets.ChangePrices.java", "BodyUseAPI": [], "Fixed commit": "37157227592cbb2d87312d7acf227d4e2bbc585e", "Url": "https://api.github.com/repos/georgifarashev/Cinema", "Date": "2013-06-04T11:38:04Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(pricesBean.getAllPrices().isEmpty())) p = pricesBean.getAllPrices().get(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/7846/buggy-version/src.java.bg.unisofia.fmi.JavaEE.Cinema.Servlets.ChangePrices.java", "BodyUseAPI": ["pricesBean.getAllPrices().get(int)", "bg.unisofia.fmi.JavaEE.Cinema.Beans.PricesBean.getAllPrices()"], "Fixed commit": "37157227592cbb2d87312d7acf227d4e2bbc585e", "Url": "https://api.github.com/repos/georgifarashev/Cinema", "Date": "2013-06-04T11:38:04Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((dataSourceClient.getDataSource().getDataDescriptors()) == null) || ((dataSourceClient.getDataSource().getDataDescriptors().size()) == 0)) || (!(dataSourceClient.getDataSource().getDataDescriptors().get(0).containsKey(METADATA.MIN_VALUE)))) android.widget.Toast.makeText(getActivity(), \"Error: MIN_VALUE & MAX_VALUE are not defined in DataDescriptor...Not possible to plot\", Toast.LENGTH_LONG).show(); else runPlot(dataSourceClient);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/8686/buggy-version/plotter.src.main.java.org.md2k.plotter.PrefsFragmentDataSources.java", "BodyUseAPI": ["org.md2k.plotter.PrefsFragmentDataSources.2.runPlot(org.md2k.datakitapi.source.datasource.DataSourceClient)"], "Fixed commit": "1b9da93355e70e7e9c5af548eaeab92bfa7a1099", "Url": "https://api.github.com/repos/MD2Korg/mCerebrum-Plotter", "Date": "2016-01-20T20:03:29Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (checkVaildity()) { response.setText(\"Please fill up all fields\"); }else { new com.example.course.easylease.PostHouse.publishHouseInfo().execute(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/4878/buggy-version/app.src.main.java.com.example.course.easylease.PostHouse.java", "BodyUseAPI": [], "Fixed commit": "73f283575c9db012eb396ddb8b23d7495177b82a", "Url": "https://api.github.com/repos/FrankHYB/Easylease", "Date": "2016-03-28T05:46:17Z"},
{"Line": "=>1352", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lookupRanges.size()) == 0) { return results; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/1188/buggy-version/amino-impl.database.accumulo.query-api.src.main.java.com._42six.amino.query.services.accumulo.AccumuloQueryService.java", "BodyUseAPI": [], "Fixed commit": "37a016213ebb93f10960136485ea5b4d5beae42d", "Url": "https://api.github.com/repos/amino-cloud/amino", "Date": "2013-10-01T11:39:47Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((listener) != null) { listener.triggered(this, trigger); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/2964/buggy-version/jdeeco-core.src.cz.cuni.mff.d3s.deeco.task.EnsembleTask.java", "BodyUseAPI": [], "Fixed commit": "b857c97b1b19b7692184a995ddad2dd5fa57a9c5", "Url": "https://api.github.com/repos/d3scomp/JDEECo", "Date": "2013-11-06T15:11:18Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((listener) != null) { listener.triggered(this, trigger); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/2964/buggy-version/jdeeco-core.src.cz.cuni.mff.d3s.deeco.task.EnsembleTask.java", "BodyUseAPI": [], "Fixed commit": "b857c97b1b19b7692184a995ddad2dd5fa57a9c5", "Url": "https://api.github.com/repos/d3scomp/JDEECo", "Date": "2013-11-06T15:11:18Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (row == null) { row = sheet.createRow((rowCount++)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/5279/buggy-version/src.output.FileWriter.java", "BodyUseAPI": [], "Fixed commit": "cecad659a37bde3325d33231eea50d9ba00766f5", "Url": "https://api.github.com/repos/jlucasfs/geraponto", "Date": "2017-02-20T17:43:50Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.player.worldObj.isRemote)) { this.currentData.queueUpdate(true, (-1), true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/5569/buggy-version/src.main.java.de.ellpeck.rarmor.mod.inventory.slot.SlotModule.java", "BodyUseAPI": [], "Fixed commit": "48d6823072f27db77d095b8cada6d9790f5bdc0e", "Url": "https://api.github.com/repos/Ellpeck/Rarmor", "Date": "2016-09-04T14:09:27Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.player.worldObj.isRemote)) { this.currentData.queueUpdate(true, (-1), true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/5569/buggy-version/src.main.java.de.ellpeck.rarmor.mod.inventory.slot.SlotModule.java", "BodyUseAPI": [], "Fixed commit": "48d6823072f27db77d095b8cada6d9790f5bdc0e", "Url": "https://api.github.com/repos/Ellpeck/Rarmor", "Date": "2016-09-04T14:09:27Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(doesDatabaseExist())) { com.example.ivo.vhodo.GlobalData.dbHelper.onCreate(openOrCreateDatabase(DBHelper.DB_NAME, com.example.ivo.vhodo.MODE_PRIVATE, null)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/1255/buggy-version/app.src.main.java.com.example.ivo.vhodo.GlobalData.java", "BodyUseAPI": [], "Fixed commit": "beead29f3060882bd408400763fe511bdc1c3058", "Url": "https://api.github.com/repos/eb0x94/VHODO", "Date": "2016-10-10T13:06:15Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((filename) == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/3930/buggy-version/v9t9.v9t9-java.v9t9-engine.src.v9t9.engine.memory.DiskMemoryEntry.java", "BodyUseAPI": [], "Fixed commit": "bf14d7815b5066b466adc0155d2d80750b176dbf", "Url": "https://api.github.com/repos/eswartz/emul", "Date": "2013-04-20T13:21:18Z"},
{"Line": "=>342", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!madecell) { out.print(\" <td width=50px height=30px></td>\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/7574/buggy-version/src.datareader.java", "BodyUseAPI": [], "Fixed commit": "a1038d3c4e4eb08072a654b306b5fd1d082918de", "Url": "https://api.github.com/repos/sevenstarosta/webPLServlet", "Date": "2017-03-25T19:08:43Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((((getDateTime != null) && (getName != null)) && (!(getName.trim().equals(\"\")))) && (!(getDateTime.trim().equals(\"\")))) { return new seedu.address.logic.parser.AddCommand(matcher.group(), \"\", seedu.address.logic.parser.Parser.getTagsFromArgs(matcher.group(\"tagArguments\"))); }else { return new seedu.address.logic.parser.IncorrectCommand(java.lang.String.format(seedu.address.logic.parser.MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/8776/buggy-version/src.main.java.seedu.address.logic.parser.Parser.java", "BodyUseAPI": [], "Fixed commit": "c9af72ec589a70fd60dad799fc8fd57857a4009e", "Url": "https://api.github.com/repos/CS2103AUG2016-T13-C4/main", "Date": "2016-11-02T17:30:33Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((((getDateTime != null) && (getName != null)) && (!(getName.trim().equals(\"\")))) && (!(getDateTime.trim().equals(\"\")))) { return new seedu.address.logic.parser.AddCommand(matcher.group(), \"\", seedu.address.logic.parser.Parser.getTagsFromArgs(matcher.group(\"tagArguments\"))); }else { return new seedu.address.logic.parser.IncorrectCommand(java.lang.String.format(seedu.address.logic.parser.MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/8776/buggy-version/src.main.java.seedu.address.logic.parser.Parser.java", "BodyUseAPI": [], "Fixed commit": "c9af72ec589a70fd60dad799fc8fd57857a4009e", "Url": "https://api.github.com/repos/CS2103AUG2016-T13-C4/main", "Date": "2016-11-02T17:30:33Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.isSuccess(status)) { android.content.SharedPreferences.Editor editor = sharedPref.edit(); editor.remove(chunkId).apply(); }else { android.content.SharedPreferences.Editor editor = sharedPref.edit(); editor.putStringSet(chunkId, successfulChunks).apply(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/4062/buggy-version/src.com.owncloud.android.lib.resources.files.ChunkedUploadRemoteFileOperation.java", "BodyUseAPI": [], "Fixed commit": "e92f4b349bae00cd922cc6ec23515f509eead3fe", "Url": "https://api.github.com/repos/nextcloud/android-library", "Date": "2017-01-30T21:20:32Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dk.brics.jwig.server.ThreadContext.getSynchronizer()) != null) { dk.brics.jwig.server.ThreadContext.getSynchronizer().update(url.getUrl()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/6707/buggy-version/src.dk.brics.jwig.server.cache.DependencyMap.java", "BodyUseAPI": [], "Fixed commit": "4088dfe2ba41ea1fef252d1649fb60e5ecae2b7f", "Url": "https://api.github.com/repos/cs-au-dk/JWIG", "Date": "2017-01-27T19:49:42Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((stock1.getTicker()) == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/4656/buggy-version/sportfolio-webapp.src.main.java.io.github.kri2.dataaccess.GoogleFinClient2.java", "BodyUseAPI": [], "Fixed commit": "4d22b1017d66bb433761e16e0cf86586f83f9bd8", "Url": "https://api.github.com/repos/Kri2/sportfolio", "Date": "2017-10-24T11:50:44Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (array[3].split(\"\\\\s+\")[0].contains(\"-\")) { java.util.Date date = zjy.money.com.parser.CSVParser.format2.parse(array[3].split(\"\\\\s+\")[0]); record.setDate(zjy.money.com.parser.CSVParser.format2.format(date)); }else { java.util.Date date = zjy.money.com.parser.CSVParser.format1.parse(array[3].split(\"\\\\s+\")[0]); record.setDate(zjy.money.com.parser.CSVParser.format2.format(date)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/672/buggy-version/MoneyManager.src.zjy.money.com.parser.CSVParser.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)", "java.text.SimpleDateFormat.parse(java.lang.String)", "java.text.SimpleDateFormat.parse(java.lang.String)", "java.lang.String.split(java.lang.String)"], "Fixed commit": "25096f3f20b15c134316fe949eab4192b08e99d2", "Url": "https://api.github.com/repos/VanceZou/zjy", "Date": "2017-08-05T17:27:06Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["zildo.fwk.file.EasyBuffering.readByte()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (pv < 0) pv = 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/2265/buggy-version/zildo.src.main.java.zildo.monde.Game.java", "BodyUseAPI": [], "Fixed commit": "3b7f095d1a5b62e60c9acdfbd788d6a31e509fa5", "Url": "https://api.github.com/repos/tchegito/zildo", "Date": "2017-07-20T21:21:46Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((contactNumber.getText().length()) < 10) { message.setText(CommonConstants.INCORRECT_PHONE_NO); message.getStyleClass().remove(\"success\"); message.getStyleClass().add(\"failure\"); message.setVisible(true); }else { com.kc.model.CustomersVO customersVO = new com.kc.model.CustomersVO(); customersVO.setCustomerName(customerName.getText()); customersVO.setCompanyName(companyName.getText()); customersVO.setAddress(address.getText()); customersVO.setCity(city.getText()); customersVO.setState(state.getText()); customersVO.setEmailId(emailId.getText()); customersVO.setContactNumber(contactNumber.getText()); customersVO.setTinNumber(tinNumber.getText()); if (dealer.isSelected()) { customersVO.setCustomerType(\"D\"); }else { customersVO.setCustomerType(\"E\"); } customersVO.setId(this.customersVO.getId()); customersDAO.updateCustomer(customersVO); message.setText(CommonConstants.CUSTOMER_MODIFY_SUCCESS); message.getStyleClass().remove(\"failure\"); message.getStyleClass().add(\"success\"); message.setVisible(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/8070/buggy-version/Quotations.src.com.kc.controller.CustomersModifyController.java", "BodyUseAPI": ["javafx.scene.control.TextField.getText()", "com.kc.model.CustomersVO.setContactNumber(contactNumber.getText())"], "Fixed commit": "ffe3ceecc70a35a98a1241dc54de466ff01b7e35", "Url": "https://api.github.com/repos/friends-repository/QuotationFX", "Date": "2013-11-16T10:31:04Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tempList.Listdata) == null) { i--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/8983/buggy-version/LinkedList.java", "BodyUseAPI": [], "Fixed commit": "9ccbdbfce8357279d84d0529fabb661d52bafc1b", "Url": "https://api.github.com/repos/BBK-PiJ-2014-04/cw3", "Date": "2015-01-12T20:05:12Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i < index) { tempList = pointer; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/8983/buggy-version/LinkedList.java", "BodyUseAPI": [], "Fixed commit": "9ccbdbfce8357279d84d0529fabb661d52bafc1b", "Url": "https://api.github.com/repos/BBK-PiJ-2014-04/cw3", "Date": "2015-01-12T20:05:12Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((angle) < (-90)) { magnitude *= -1; angle = (angle) + 180; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/3916/buggy-version/src.org.usfirst.frc.team5338.robot.subsystems.DriveTrain.java", "BodyUseAPI": [], "Fixed commit": "8c34b1d1b90601c18965b80d13caf2ea759d81be", "Url": "https://api.github.com/repos/RoboLoCo-5338/2017-IROC-1", "Date": "2017-10-01T18:16:58Z"},
{"Line": "=>350", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.System.currentTimeMillis()", "java.lang.System.currentTimeMillis()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (endTimeMillis != startTimeMillis) { speedKbSec = (sizeKb * 1000) / (endTimeMillis - startTimeMillis); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/2022/buggy-version/src.com.ichi2.anki.Utils.java", "BodyUseAPI": [], "Fixed commit": "4c016193c670584480885208abc19506dd508763", "Url": "https://api.github.com/repos/nobnago/Anki-Android", "Date": "2011-06-30T06:38:05Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.preference.PreferenceGroup.getPreference(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (preference != null) { org.catrobat.catroid.utils.TextSizeUtil.enlargePreference(preference, R.layout.preference_enlarged); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/3546/buggy-version/catroid.src.main.java.org.catrobat.catroid.utils.TextSizeUtil.java", "BodyUseAPI": ["org.catrobat.catroid.utils.TextSizeUtil.enlargePreference(android.preference.Preference,R.layout.preference_enlarged)"], "Fixed commit": "1d7a7652143ea3d42bb5faf8875be0839039fa6f", "Url": "https://api.github.com/repos/FlorianWeissensteiner/Catroid", "Date": "2017-11-08T16:55:55Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (newLearningObject == null) { newLearningObject = new edu.ithaca.dragonlab.ckc.learningobject.LearningObject(entry.getValue()); graphLearningObjectMap.put(entry.getKey(), newLearningObject); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/8950/buggy-version/src.edu.ithaca.dragonlab.ckc.conceptgraph.ConceptNode.java", "BodyUseAPI": [], "Fixed commit": "93d704647c7c80350a5ce4307484c26e6ba1224f", "Url": "https://api.github.com/repos/tobydragon/tecmap", "Date": "2017-06-15T20:36:23Z"},
{"Line": "=>300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fr.lirmm.graphik.graal.core.Unifier.instance().existPieceUnifier(r1, r2.getBody(), checker)) { return java.util.Collections.<fr.lirmm.graphik.graal.api.core.Substitution>singleton(fr.lirmm.graphik.graal.core.Substitutions.emptySubstitution()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/8738/buggy-version/graal-core.src.main.java.fr.lirmm.graphik.graal.core.grd.DefaultGraphOfRuleDependencies.java", "BodyUseAPI": [], "Fixed commit": "b7c312538742009bf485776e82fd1d72c30a2a46", "Url": "https://api.github.com/repos/graphik-team/graal", "Date": "2017-04-19T09:00:03Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Arrays.asList(java.lang.String[])"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(listImagenes.contains(\"perfil\"))) { imagenes[imagenes.length] = nFichero; modListImagenes.setFotos(imagenes); dao.updateUsuario(modListImagenes); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/1020/buggy-version/src.main.java.com.example.controllers.UsuarioController.java", "BodyUseAPI": [], "Fixed commit": "e10e3ee4041e4324997d262f9f2904409e3f04b1", "Url": "https://api.github.com/repos/monjimda/AD_redSocial_BackEnd", "Date": "2016-03-14T18:29:47Z"},
{"Line": "=>13", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Coin.getWeight()", "Coin.getSize()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((size == 3) && (weight == 3)) { return 0.05; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/5747/buggy-version/src.main.java.VendingMachine.java", "BodyUseAPI": [], "Fixed commit": "85577087d17e2b60f978aa30621b03f1ad995298", "Url": "https://api.github.com/repos/Brent-Milan/vending-machine-kata", "Date": "2017-08-30T19:55:16Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((redis.netty.client.RedisClient.defaultExecutor) == null) { redis.netty.client.RedisClient.defaultExecutor = java.util.concurrent.Executors.newCachedThreadPool(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/3960/buggy-version/netty-client.src.main.java.redis.netty.client.RedisClient.java", "BodyUseAPI": [], "Fixed commit": "c5b5263d186f4e6d41a2814b9bf362c7be87db96", "Url": "https://api.github.com/repos/spullara/redis-protocol", "Date": "2013-02-24T23:41:54Z"},
{"Line": "=>356", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (java.util.Arrays.asList(SearchOperator.EQUALS, SearchOperator.IS_NULL, SearchOperator.IS_NOT_NULL).contains(criterion.getSearchOperator())) { defaultValue = criterion.getSearchOperator(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/9198/buggy-version/app.src.com.constellio.app.ui.pages.search.AdvancedSearchCriteriaComponent.java", "BodyUseAPI": ["com.constellio.app.ui.pages.search.criteria.Criterion.getSearchOperator()"], "Fixed commit": "d29f19b3c79067a596bd98369cf242f5cb7c9acb", "Url": "https://api.github.com/repos/doculibre/constellio", "Date": "2017-05-24T04:41:37Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (mails != null) mails.clear();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/5781/buggy-version/src.com.mvpvaadin.mailexample.service.MailService.java", "BodyUseAPI": ["java.util.List<com.mvpvaadin.mailexample.data.Mail>.clear()"], "Fixed commit": "3fa29adb2220ba14f7b2018377741286b9d6e0eb", "Url": "https://api.github.com/repos/sockeqwe/Vaadin-MVP-Lite-MailExample", "Date": "2013-04-14T09:46:08Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.hotswap.agent.plugin.spring.scanner.ClassPathBeanDefinitionScannerAgent.maybeRegistryToBeanFactory()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (bf != null) { org.hotswap.agent.plugin.spring.ResetBeanPostProcessorCaches.reset(bf); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/986/buggy-version/plugin.hotswap-agent-spring-plugin.src.main.java.org.hotswap.agent.plugin.spring.scanner.ClassPathBeanDefinitionScannerAgent.java", "BodyUseAPI": ["org.hotswap.agent.plugin.spring.ResetBeanPostProcessorCaches.reset(org.hotswap.agent.plugin.spring.scanner.DefaultListableBeanFactory)"], "Fixed commit": "fa5f22721adf97be5199ddffa732bfc9dca928f6", "Url": "https://api.github.com/repos/Nick-The-Uncharted/HotswapAgent", "Date": "2017-12-02T16:06:59Z"},
{"Line": "=>553", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.stanford.nlp.semgraph.SemanticGraph.getEdge(edu.stanford.nlp.ling.IndexedWord,edu.stanford.nlp.ling.IndexedWord)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (edge != null) { sg.removeEdge(edge); sg.addEdge(conjGov, ccDep, edu.stanford.nlp.trees.COORDINATION, java.lang.Double.NEGATIVE_INFINITY, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V90/652/buggy-version/src.edu.stanford.nlp.trees.UniversalEnglishGrammaticalStructure.java", "BodyUseAPI": ["edu.stanford.nlp.semgraph.SemanticGraph.removeEdge(edu.stanford.nlp.semgraph.SemanticGraphEdge)"], "Fixed commit": "56d59f7251c3a4a5e8acfca11c572cb151610a19", "Url": "https://api.github.com/repos/stanfordnlp/CoreNLP", "Date": "2015-04-27T16:09:58Z"}]}
